-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-route53ZSamazonka-route53
@version 2.0


module Network.AWS.Route53.Internal

-- | The available AWS regions.
newtype Region
Region' :: Text -> Region
[$sel:fromRegion:Region'] :: Region -> Text
pattern Mumbai :: Region
pattern Sydney :: Region
pattern Singapore :: Region
pattern Osaka :: Region
pattern Seoul :: Region
pattern Tokyo :: Region
pattern HongKong :: Region
pattern Ningxia :: Region
pattern Beijing :: Region
pattern CapeTown :: Region
pattern Bahrain :: Region
pattern Stockholm :: Region
pattern Paris :: Region
pattern Milan :: Region
pattern London :: Region
pattern Ireland :: Region
pattern Frankfurt :: Region
pattern SaoPaulo :: Region
pattern Montreal :: Region
pattern GovCloudEast :: Region
pattern GovCloudWest :: Region
pattern Oregon :: Region
pattern NorthCalifornia :: Region
pattern Ohio :: Region
pattern NorthVirginia :: Region

-- | A Route53 identifier for resources such as hosted zones and delegation
--   sets.
--   
--   Since Route53 outputs prefixed resource identifiers such as
--   <tt><i>hostedzone</i>ABC123</tt>, but expects unprefixed identifiers
--   as inputs, such as <tt>ABC123</tt>, the <a>FromXML</a> instance will
--   strip this prefix take care to ensure the correct input format is
--   observed and <tt>decodeXML . encodeXML == id</tt> holds.
newtype ResourceId
ResourceId :: Text -> ResourceId
[fromResourceId] :: ResourceId -> Text

-- | Get the hosted zone identifier for an S3 website endpoint.
--   
--   When you configure your bucket as a website, the website is available
--   using a region-specific website endpoint. This hosted zone identifier
--   is used adding an alias record to the website to your hosted zone.
--   
--   <i>See:</i> <a>Amazon Simple Storage Service Website Endpoints</a>.
getHostedZoneId :: Region -> Maybe ResourceId
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Internal.ResourceId
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Internal.ResourceId
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Internal.ResourceId
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Internal.ResourceId
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Internal.ResourceId
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Internal.ResourceId
instance Data.String.IsString Network.AWS.Route53.Internal.ResourceId
instance GHC.Generics.Generic Network.AWS.Route53.Internal.ResourceId
instance GHC.Show.Show Network.AWS.Route53.Internal.ResourceId
instance GHC.Read.Read Network.AWS.Route53.Internal.ResourceId
instance GHC.Classes.Ord Network.AWS.Route53.Internal.ResourceId
instance GHC.Classes.Eq Network.AWS.Route53.Internal.ResourceId
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Internal.ResourceId
instance Control.DeepSeq.NFData Network.AWS.Route53.Internal.ResourceId
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Internal.ResourceId


module Network.AWS.Route53.Types.AccountLimitType
newtype AccountLimitType
AccountLimitType' :: Text -> AccountLimitType
[fromAccountLimitType] :: AccountLimitType -> Text
pattern AccountLimitType_MAX_HEALTH_CHECKS_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_HOSTED_ZONES_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_REUSABLE_DELEGATION_SETS_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_TRAFFIC_POLICIES_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER :: AccountLimitType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance GHC.Generics.Generic Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance GHC.Classes.Ord Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance GHC.Classes.Eq Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance GHC.Read.Read Network.AWS.Route53.Types.AccountLimitType.AccountLimitType
instance GHC.Show.Show Network.AWS.Route53.Types.AccountLimitType.AccountLimitType


module Network.AWS.Route53.Types.AccountLimit

-- | A complex type that contains the type of limit that you specified in
--   the request and the current value for that limit.
--   
--   <i>See:</i> <a>newAccountLimit</a> smart constructor.
data AccountLimit
AccountLimit' :: AccountLimitType -> Natural -> AccountLimit

-- | The limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
[$sel:type':AccountLimit'] :: AccountLimit -> AccountLimitType

-- | The current value for the limit that is specified by <a>Type</a>.
[$sel:value:AccountLimit'] :: AccountLimit -> Natural

-- | Create a value of <a>AccountLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':AccountLimit'</a>, <a>accountLimit_type</a> - The limit
--   that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
--   
--   <a>$sel:value:AccountLimit'</a>, <a>accountLimit_value</a> - The
--   current value for the limit that is specified by <a>Type</a>.
newAccountLimit :: AccountLimitType -> Natural -> AccountLimit

-- | The limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
accountLimit_type :: Lens' AccountLimit AccountLimitType

-- | The current value for the limit that is specified by <a>Type</a>.
accountLimit_value :: Lens' AccountLimit Natural
instance GHC.Generics.Generic Network.AWS.Route53.Types.AccountLimit.AccountLimit
instance GHC.Show.Show Network.AWS.Route53.Types.AccountLimit.AccountLimit
instance GHC.Read.Read Network.AWS.Route53.Types.AccountLimit.AccountLimit
instance GHC.Classes.Eq Network.AWS.Route53.Types.AccountLimit.AccountLimit
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.AccountLimit.AccountLimit
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.AccountLimit.AccountLimit
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.AccountLimit.AccountLimit


module Network.AWS.Route53.Types.AliasTarget

-- | <i>Alias resource record sets only:</i> Information about the Amazon
--   Web Services resource, such as a CloudFront distribution or an Amazon
--   S3 bucket, that you want to route traffic to.
--   
--   When creating resource record sets for a private hosted zone, note the
--   following:
--   
--   <ul>
--   <li>Creating geolocation alias resource record sets or latency alias
--   resource record sets in a private hosted zone is unsupported.</li>
--   <li>For information about creating failover resource record sets in a
--   private hosted zone, see <a>Configuring Failover in a Private Hosted
--   Zone</a>.</li>
--   </ul>
--   
--   <i>See:</i> <a>newAliasTarget</a> smart constructor.
data AliasTarget
AliasTarget' :: ResourceId -> Text -> Bool -> AliasTarget

-- | <i>Alias resource records sets only</i>: The value used depends on
--   where you want to route traffic:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the hosted zone ID for your API. You can get the
--   applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalHostedZoneId</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionHostedZoneId</tt>.</li></ul></li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Specify
--   the hosted zone ID for your interface endpoint. You can get the value
--   of <tt>HostedZoneId</tt> using the CLI command
--   <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify
--   <tt>Z2FDTNDATAQYW2</tt>.Alias resource record sets for CloudFront
--   can't be created in a private zone.</li>
--   <li><i>Elastic Beanstalk environment</i> Specify the hosted zone ID
--   for the region that you created the environment in. The environment
--   must have a regionalized subdomain. For a list of regions and the
--   corresponding hosted zone IDs, see <a>Elastic Beanstalk endpoints and
--   quotas</a> in the the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>ELB load balancer</i> Specify the value of the hosted zone ID
--   for the load balancer. Use the following methods to get the hosted
--   zone ID:<ul><li><a>Elastic Load Balancing endpoints and quotas</a>
--   topic in the <i>Amazon Web Services General Reference</i>: Use the
--   value that corresponds with the region that you created your load
--   balancer in. Note that there are separate columns for Application and
--   Classic Load Balancers and for Network Load
--   Balancers.</li><li><b>Amazon Web Services Management Console</b>: Go
--   to the Amazon EC2 page, choose <b>Load Balancers</b> in the navigation
--   pane, select the load balancer, and get the value of the <b>Hosted
--   zone</b> field on the <b>Description</b> tab.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the
--   applicable value. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers: Use <a>DescribeLoadBalancers</a>
--   to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>DescribeLoadBalancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li><li><b>CLI</b>: Use
--   <tt>describe-load-balancers</tt> to get the applicable value. For more
--   information, see the applicable guide:<ul><li>Classic Load Balancers:
--   Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify
--   <tt>Z2BJ6XQ5FK7U4H</tt>.</li>
--   <li><i>An Amazon S3 bucket configured as a static website</i> Specify
--   the hosted zone ID for the region that you created the bucket in. For
--   more information about valid values, see the table <a>Amazon S3
--   Website Endpoints</a> in the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>Another Route 53 resource record set in your hosted zone</i>
--   Specify the hosted zone ID of your hosted zone. (An alias resource
--   record set can't reference a resource record set in a different hosted
--   zone.)</li>
--   </ul>
[$sel:hostedZoneId:AliasTarget'] :: AliasTarget -> ResourceId

-- | <i>Alias resource record sets only:</i> The value that you specify
--   depends on where you want to route queries:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the applicable domain name for your API. You can get
--   the applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalDomainName</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionDomainName</tt>. This is the name
--   of the associated CloudFront distribution, such as
--   <tt>da1b2c3d4e5.cloudfront.net</tt>.</li></ul>The name of the record
--   that you're creating must match a custom domain name for your API,
--   such as <tt>api.example.com</tt>.</li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Enter
--   the API endpoint for the interface endpoint, such as
--   <tt>vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com</tt>.
--   For edge-optimized APIs, this is the domain name for the corresponding
--   CloudFront distribution. You can get the value of <tt>DnsName</tt>
--   using the CLI command <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify the domain name that
--   CloudFront assigned when you created your distribution.Your CloudFront
--   distribution must include an alternate domain name that matches the
--   name of the resource record set. For example, if the name of the
--   resource record set is <i>acme.example.com</i>, your CloudFront
--   distribution must include <i>acme.example.com</i> as one of the
--   alternate domain names. For more information, see <a>Using Alternate
--   Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront Developer
--   Guide</i>.You can't create a resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.For failover alias
--   records, you can't specify a CloudFront distribution for both the
--   primary and secondary records. A distribution must include an
--   alternate domain name that matches the name of the record. However,
--   the primary and secondary records have the same name, and you can't
--   include the same alternate domain name in more than one
--   distribution.</li>
--   <li><i>Elastic Beanstalk environment</i> If the domain name for your
--   Elastic Beanstalk environment includes the region that you deployed
--   the environment in, you can create an alias record that routes traffic
--   to the environment. For example, the domain name
--   <tt>my-environment.us-west-2.elasticbeanstalk.com</tt> is a
--   regionalized domain name.For environments that were created before
--   early 2016, the domain name doesn't include the region. To route
--   traffic to these environments, you must create a CNAME record instead
--   of an alias record. Note that you can't create a CNAME record for the
--   root domain name. For example, if your domain name is example.com, you
--   can create a record that routes traffic for acme.example.com to your
--   Elastic Beanstalk environment, but you can't create a record that
--   routes traffic for example.com to your Elastic Beanstalk
--   environment.For Elastic Beanstalk environments that have regionalized
--   subdomains, specify the <tt>CNAME</tt> attribute for the environment.
--   You can use the following methods to get the value of the CNAME
--   attribute:<ul><li><i>Amazon Web Services Management Console</i>: For
--   information about how to get the value by using the console, see
--   <a>Using Custom Domains with Elastic Beanstalk</a> in the <i>Elastic
--   Beanstalk Developer Guide</i>.</li><li><i>Elastic Beanstalk API</i>:
--   Use the <tt>DescribeEnvironments</tt> action to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>DescribeEnvironments</a> in the <i>Elastic Beanstalk API
--   Reference</i>.</li><li><i>CLI</i>: Use the
--   <tt>describe-environments</tt> command to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>describe-environments</a> in the <i>CLI Command
--   Reference</i>.</li></ul></li>
--   <li><i>ELB load balancer</i> Specify the DNS name that is associated
--   with the load balancer. Get the DNS name by using the Amazon Web
--   Services Management Console, the ELB API, or the CLI.<ul><li><b>Amazon
--   Web Services Management Console</b>: Go to the EC2 page, choose
--   <b>Load Balancers</b> in the navigation pane, choose the load
--   balancer, choose the <b>Description</b> tab, and get the value of the
--   <b>DNS name</b> field.If you're routing traffic to a Classic Load
--   Balancer, get the value that begins with <b>dualstack</b>. If you're
--   routing traffic to another type of load balancer, get the value that
--   applies to the record type, A or AAAA.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the value
--   of <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>DescribeLoadBalancers</a></li><li>Application and Network Load
--   Balancers: <a>DescribeLoadBalancers</a></li></ul></li><li><b>CLI</b>:
--   Use <tt>describe-load-balancers</tt> to get the value of
--   <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>describe-load-balancers</a></li><li>Application and Network Load
--   Balancers: <a>describe-load-balancers</a></li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify the DNS name for
--   your accelerator:<ul><li><b>Global Accelerator API:</b> To get the DNS
--   name, use <a>DescribeAccelerator</a>.</li><li><b>CLI:</b> To get the
--   DNS name, use <a>describe-accelerator</a>.</li></ul></li>
--   <li><i>Amazon S3 bucket that is configured as a static website</i>
--   Specify the domain name of the Amazon S3 website endpoint that you
--   created the bucket in, for example,
--   <tt>s3-website.us-east-2.amazonaws.com</tt>. For more information
--   about valid values, see the table <a>Amazon S3 Website Endpoints</a>
--   in the <i>Amazon Web Services General Reference</i>. For more
--   information about using S3 buckets for websites, see <a>Getting
--   Started with Amazon Route 53</a> in the <i>Amazon Route 53 Developer
--   Guide.</i></li>
--   <li><i>Another Route 53 resource record set</i> Specify the value of
--   the <tt>Name</tt> element for a resource record set in the current
--   hosted zone.If you're creating an alias record that has the same name
--   as the hosted zone (known as the zone apex), you can't specify the
--   domain name for a record for which the value of <tt>Type</tt> is
--   <tt>CNAME</tt>. This is because the alias record must have the same
--   type as the record that you're routing traffic to, and creating a
--   CNAME record for the zone apex isn't supported even for an alias
--   record.</li>
--   </ul>
[$sel:dNSName:AliasTarget'] :: AliasTarget -> Text

-- | /Applies only to alias, failover alias, geolocation alias, latency
--   alias, and weighted alias resource record sets:/ When
--   <tt>EvaluateTargetHealth</tt> is <tt>true</tt>, an alias resource
--   record set inherits the health of the referenced Amazon Web Services
--   resource, such as an ELB load balancer or another resource record set
--   in the hosted zone.
--   
--   Note the following:
--   
--   <ul>
--   <li><i>CloudFront distributions</i> You can't set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is a CloudFront distribution.</li>
--   <li><i>Elastic Beanstalk environments that have regionalized
--   subdomains</i> If you specify an Elastic Beanstalk environment in
--   <tt>DNSName</tt> and the environment contains an ELB load balancer,
--   Elastic Load Balancing routes queries only to the healthy Amazon EC2
--   instances that are registered with the load balancer. (An environment
--   automatically contains an ELB load balancer if it includes more than
--   one Amazon EC2 instance.) If you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt> and either no Amazon EC2 instances are healthy or the
--   load balancer itself is unhealthy, Route 53 routes queries to other
--   available resources that are healthy, if any.If the environment
--   contains a single Amazon EC2 instance, there are no special
--   requirements.</li>
--   <li><i>ELB load balancers</i> Health checking behavior depends on the
--   type of load balancer:<ul><li><b>Classic Load Balancers</b>: If you
--   specify an ELB Classic Load Balancer in <tt>DNSName</tt>, Elastic Load
--   Balancing routes queries only to the healthy Amazon EC2 instances that
--   are registered with the load balancer. If you set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> and either no EC2
--   instances are healthy or the load balancer itself is unhealthy, Route
--   53 routes queries to other resources.</li><li><b>Application and
--   Network Load Balancers</b>: If you specify an ELB Application or
--   Network Load Balancer and you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt>, Route 53 routes queries to the load balancer based on
--   the health of the target groups that are associated with the load
--   balancer:<ul><li>For an Application or Network Load Balancer to be
--   considered healthy, every target group that contains targets must
--   contain at least one healthy target. If any target group contains only
--   unhealthy targets, the load balancer is considered unhealthy, and
--   Route 53 routes queries to other resources.</li><li>A target group
--   that has no registered targets is considered
--   unhealthy.</li></ul></li></ul>When you create a load balancer, you
--   configure settings for Elastic Load Balancing health checks; they're
--   not Route 53 health checks, but they perform a similar function. Do
--   not create Route 53 health checks for the EC2 instances that you
--   register with an ELB load balancer.</li>
--   <li><i>S3 buckets</i> There are no special requirements for setting
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is an S3 bucket.</li>
--   <li><i>Other records in the same hosted zone</i> If the Amazon Web
--   Services resource that you specify in <tt>DNSName</tt> is a record or
--   a group of records (for example, a group of weighted records) but is
--   not another alias record, we recommend that you associate a health
--   check with all of the records in the alias target. For more
--   information, see <a>What Happens When You Omit Health Checks?</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   For more information and examples, see <a>Amazon Route 53 Health
--   Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.
[$sel:evaluateTargetHealth:AliasTarget'] :: AliasTarget -> Bool

-- | Create a value of <a>AliasTarget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:AliasTarget'</a>, <a>aliasTarget_hostedZoneId</a>
--   - <i>Alias resource records sets only</i>: The value used depends on
--   where you want to route traffic:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the hosted zone ID for your API. You can get the
--   applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalHostedZoneId</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionHostedZoneId</tt>.</li></ul></li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Specify
--   the hosted zone ID for your interface endpoint. You can get the value
--   of <tt>HostedZoneId</tt> using the CLI command
--   <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify
--   <tt>Z2FDTNDATAQYW2</tt>.Alias resource record sets for CloudFront
--   can't be created in a private zone.</li>
--   <li><i>Elastic Beanstalk environment</i> Specify the hosted zone ID
--   for the region that you created the environment in. The environment
--   must have a regionalized subdomain. For a list of regions and the
--   corresponding hosted zone IDs, see <a>Elastic Beanstalk endpoints and
--   quotas</a> in the the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>ELB load balancer</i> Specify the value of the hosted zone ID
--   for the load balancer. Use the following methods to get the hosted
--   zone ID:<ul><li><a>Elastic Load Balancing endpoints and quotas</a>
--   topic in the <i>Amazon Web Services General Reference</i>: Use the
--   value that corresponds with the region that you created your load
--   balancer in. Note that there are separate columns for Application and
--   Classic Load Balancers and for Network Load
--   Balancers.</li><li><b>Amazon Web Services Management Console</b>: Go
--   to the Amazon EC2 page, choose <b>Load Balancers</b> in the navigation
--   pane, select the load balancer, and get the value of the <b>Hosted
--   zone</b> field on the <b>Description</b> tab.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the
--   applicable value. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers: Use <a>DescribeLoadBalancers</a>
--   to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>DescribeLoadBalancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li><li><b>CLI</b>: Use
--   <tt>describe-load-balancers</tt> to get the applicable value. For more
--   information, see the applicable guide:<ul><li>Classic Load Balancers:
--   Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify
--   <tt>Z2BJ6XQ5FK7U4H</tt>.</li>
--   <li><i>An Amazon S3 bucket configured as a static website</i> Specify
--   the hosted zone ID for the region that you created the bucket in. For
--   more information about valid values, see the table <a>Amazon S3
--   Website Endpoints</a> in the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>Another Route 53 resource record set in your hosted zone</i>
--   Specify the hosted zone ID of your hosted zone. (An alias resource
--   record set can't reference a resource record set in a different hosted
--   zone.)</li>
--   </ul>
--   
--   <a>$sel:dNSName:AliasTarget'</a>, <a>aliasTarget_dNSName</a> -
--   <i>Alias resource record sets only:</i> The value that you specify
--   depends on where you want to route queries:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the applicable domain name for your API. You can get
--   the applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalDomainName</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionDomainName</tt>. This is the name
--   of the associated CloudFront distribution, such as
--   <tt>da1b2c3d4e5.cloudfront.net</tt>.</li></ul>The name of the record
--   that you're creating must match a custom domain name for your API,
--   such as <tt>api.example.com</tt>.</li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Enter
--   the API endpoint for the interface endpoint, such as
--   <tt>vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com</tt>.
--   For edge-optimized APIs, this is the domain name for the corresponding
--   CloudFront distribution. You can get the value of <tt>DnsName</tt>
--   using the CLI command <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify the domain name that
--   CloudFront assigned when you created your distribution.Your CloudFront
--   distribution must include an alternate domain name that matches the
--   name of the resource record set. For example, if the name of the
--   resource record set is <i>acme.example.com</i>, your CloudFront
--   distribution must include <i>acme.example.com</i> as one of the
--   alternate domain names. For more information, see <a>Using Alternate
--   Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront Developer
--   Guide</i>.You can't create a resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.For failover alias
--   records, you can't specify a CloudFront distribution for both the
--   primary and secondary records. A distribution must include an
--   alternate domain name that matches the name of the record. However,
--   the primary and secondary records have the same name, and you can't
--   include the same alternate domain name in more than one
--   distribution.</li>
--   <li><i>Elastic Beanstalk environment</i> If the domain name for your
--   Elastic Beanstalk environment includes the region that you deployed
--   the environment in, you can create an alias record that routes traffic
--   to the environment. For example, the domain name
--   <tt>my-environment.us-west-2.elasticbeanstalk.com</tt> is a
--   regionalized domain name.For environments that were created before
--   early 2016, the domain name doesn't include the region. To route
--   traffic to these environments, you must create a CNAME record instead
--   of an alias record. Note that you can't create a CNAME record for the
--   root domain name. For example, if your domain name is example.com, you
--   can create a record that routes traffic for acme.example.com to your
--   Elastic Beanstalk environment, but you can't create a record that
--   routes traffic for example.com to your Elastic Beanstalk
--   environment.For Elastic Beanstalk environments that have regionalized
--   subdomains, specify the <tt>CNAME</tt> attribute for the environment.
--   You can use the following methods to get the value of the CNAME
--   attribute:<ul><li><i>Amazon Web Services Management Console</i>: For
--   information about how to get the value by using the console, see
--   <a>Using Custom Domains with Elastic Beanstalk</a> in the <i>Elastic
--   Beanstalk Developer Guide</i>.</li><li><i>Elastic Beanstalk API</i>:
--   Use the <tt>DescribeEnvironments</tt> action to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>DescribeEnvironments</a> in the <i>Elastic Beanstalk API
--   Reference</i>.</li><li><i>CLI</i>: Use the
--   <tt>describe-environments</tt> command to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>describe-environments</a> in the <i>CLI Command
--   Reference</i>.</li></ul></li>
--   <li><i>ELB load balancer</i> Specify the DNS name that is associated
--   with the load balancer. Get the DNS name by using the Amazon Web
--   Services Management Console, the ELB API, or the CLI.<ul><li><b>Amazon
--   Web Services Management Console</b>: Go to the EC2 page, choose
--   <b>Load Balancers</b> in the navigation pane, choose the load
--   balancer, choose the <b>Description</b> tab, and get the value of the
--   <b>DNS name</b> field.If you're routing traffic to a Classic Load
--   Balancer, get the value that begins with <b>dualstack</b>. If you're
--   routing traffic to another type of load balancer, get the value that
--   applies to the record type, A or AAAA.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the value
--   of <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>DescribeLoadBalancers</a></li><li>Application and Network Load
--   Balancers: <a>DescribeLoadBalancers</a></li></ul></li><li><b>CLI</b>:
--   Use <tt>describe-load-balancers</tt> to get the value of
--   <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>describe-load-balancers</a></li><li>Application and Network Load
--   Balancers: <a>describe-load-balancers</a></li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify the DNS name for
--   your accelerator:<ul><li><b>Global Accelerator API:</b> To get the DNS
--   name, use <a>DescribeAccelerator</a>.</li><li><b>CLI:</b> To get the
--   DNS name, use <a>describe-accelerator</a>.</li></ul></li>
--   <li><i>Amazon S3 bucket that is configured as a static website</i>
--   Specify the domain name of the Amazon S3 website endpoint that you
--   created the bucket in, for example,
--   <tt>s3-website.us-east-2.amazonaws.com</tt>. For more information
--   about valid values, see the table <a>Amazon S3 Website Endpoints</a>
--   in the <i>Amazon Web Services General Reference</i>. For more
--   information about using S3 buckets for websites, see <a>Getting
--   Started with Amazon Route 53</a> in the <i>Amazon Route 53 Developer
--   Guide.</i></li>
--   <li><i>Another Route 53 resource record set</i> Specify the value of
--   the <tt>Name</tt> element for a resource record set in the current
--   hosted zone.If you're creating an alias record that has the same name
--   as the hosted zone (known as the zone apex), you can't specify the
--   domain name for a record for which the value of <tt>Type</tt> is
--   <tt>CNAME</tt>. This is because the alias record must have the same
--   type as the record that you're routing traffic to, and creating a
--   CNAME record for the zone apex isn't supported even for an alias
--   record.</li>
--   </ul>
--   
--   <a>$sel:evaluateTargetHealth:AliasTarget'</a>,
--   <a>aliasTarget_evaluateTargetHealth</a> - /Applies only to alias,
--   failover alias, geolocation alias, latency alias, and weighted alias
--   resource record sets:/ When <tt>EvaluateTargetHealth</tt> is
--   <tt>true</tt>, an alias resource record set inherits the health of the
--   referenced Amazon Web Services resource, such as an ELB load balancer
--   or another resource record set in the hosted zone.
--   
--   Note the following:
--   
--   <ul>
--   <li><i>CloudFront distributions</i> You can't set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is a CloudFront distribution.</li>
--   <li><i>Elastic Beanstalk environments that have regionalized
--   subdomains</i> If you specify an Elastic Beanstalk environment in
--   <tt>DNSName</tt> and the environment contains an ELB load balancer,
--   Elastic Load Balancing routes queries only to the healthy Amazon EC2
--   instances that are registered with the load balancer. (An environment
--   automatically contains an ELB load balancer if it includes more than
--   one Amazon EC2 instance.) If you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt> and either no Amazon EC2 instances are healthy or the
--   load balancer itself is unhealthy, Route 53 routes queries to other
--   available resources that are healthy, if any.If the environment
--   contains a single Amazon EC2 instance, there are no special
--   requirements.</li>
--   <li><i>ELB load balancers</i> Health checking behavior depends on the
--   type of load balancer:<ul><li><b>Classic Load Balancers</b>: If you
--   specify an ELB Classic Load Balancer in <tt>DNSName</tt>, Elastic Load
--   Balancing routes queries only to the healthy Amazon EC2 instances that
--   are registered with the load balancer. If you set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> and either no EC2
--   instances are healthy or the load balancer itself is unhealthy, Route
--   53 routes queries to other resources.</li><li><b>Application and
--   Network Load Balancers</b>: If you specify an ELB Application or
--   Network Load Balancer and you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt>, Route 53 routes queries to the load balancer based on
--   the health of the target groups that are associated with the load
--   balancer:<ul><li>For an Application or Network Load Balancer to be
--   considered healthy, every target group that contains targets must
--   contain at least one healthy target. If any target group contains only
--   unhealthy targets, the load balancer is considered unhealthy, and
--   Route 53 routes queries to other resources.</li><li>A target group
--   that has no registered targets is considered
--   unhealthy.</li></ul></li></ul>When you create a load balancer, you
--   configure settings for Elastic Load Balancing health checks; they're
--   not Route 53 health checks, but they perform a similar function. Do
--   not create Route 53 health checks for the EC2 instances that you
--   register with an ELB load balancer.</li>
--   <li><i>S3 buckets</i> There are no special requirements for setting
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is an S3 bucket.</li>
--   <li><i>Other records in the same hosted zone</i> If the Amazon Web
--   Services resource that you specify in <tt>DNSName</tt> is a record or
--   a group of records (for example, a group of weighted records) but is
--   not another alias record, we recommend that you associate a health
--   check with all of the records in the alias target. For more
--   information, see <a>What Happens When You Omit Health Checks?</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   For more information and examples, see <a>Amazon Route 53 Health
--   Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.
newAliasTarget :: ResourceId -> Text -> Bool -> AliasTarget

-- | <i>Alias resource records sets only</i>: The value used depends on
--   where you want to route traffic:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the hosted zone ID for your API. You can get the
--   applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalHostedZoneId</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionHostedZoneId</tt>.</li></ul></li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Specify
--   the hosted zone ID for your interface endpoint. You can get the value
--   of <tt>HostedZoneId</tt> using the CLI command
--   <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify
--   <tt>Z2FDTNDATAQYW2</tt>.Alias resource record sets for CloudFront
--   can't be created in a private zone.</li>
--   <li><i>Elastic Beanstalk environment</i> Specify the hosted zone ID
--   for the region that you created the environment in. The environment
--   must have a regionalized subdomain. For a list of regions and the
--   corresponding hosted zone IDs, see <a>Elastic Beanstalk endpoints and
--   quotas</a> in the the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>ELB load balancer</i> Specify the value of the hosted zone ID
--   for the load balancer. Use the following methods to get the hosted
--   zone ID:<ul><li><a>Elastic Load Balancing endpoints and quotas</a>
--   topic in the <i>Amazon Web Services General Reference</i>: Use the
--   value that corresponds with the region that you created your load
--   balancer in. Note that there are separate columns for Application and
--   Classic Load Balancers and for Network Load
--   Balancers.</li><li><b>Amazon Web Services Management Console</b>: Go
--   to the Amazon EC2 page, choose <b>Load Balancers</b> in the navigation
--   pane, select the load balancer, and get the value of the <b>Hosted
--   zone</b> field on the <b>Description</b> tab.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the
--   applicable value. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers: Use <a>DescribeLoadBalancers</a>
--   to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>DescribeLoadBalancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li><li><b>CLI</b>: Use
--   <tt>describe-load-balancers</tt> to get the applicable value. For more
--   information, see the applicable guide:<ul><li>Classic Load Balancers:
--   Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify
--   <tt>Z2BJ6XQ5FK7U4H</tt>.</li>
--   <li><i>An Amazon S3 bucket configured as a static website</i> Specify
--   the hosted zone ID for the region that you created the bucket in. For
--   more information about valid values, see the table <a>Amazon S3
--   Website Endpoints</a> in the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>Another Route 53 resource record set in your hosted zone</i>
--   Specify the hosted zone ID of your hosted zone. (An alias resource
--   record set can't reference a resource record set in a different hosted
--   zone.)</li>
--   </ul>
aliasTarget_hostedZoneId :: Lens' AliasTarget ResourceId

-- | <i>Alias resource record sets only:</i> The value that you specify
--   depends on where you want to route queries:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the applicable domain name for your API. You can get
--   the applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalDomainName</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionDomainName</tt>. This is the name
--   of the associated CloudFront distribution, such as
--   <tt>da1b2c3d4e5.cloudfront.net</tt>.</li></ul>The name of the record
--   that you're creating must match a custom domain name for your API,
--   such as <tt>api.example.com</tt>.</li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Enter
--   the API endpoint for the interface endpoint, such as
--   <tt>vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com</tt>.
--   For edge-optimized APIs, this is the domain name for the corresponding
--   CloudFront distribution. You can get the value of <tt>DnsName</tt>
--   using the CLI command <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify the domain name that
--   CloudFront assigned when you created your distribution.Your CloudFront
--   distribution must include an alternate domain name that matches the
--   name of the resource record set. For example, if the name of the
--   resource record set is <i>acme.example.com</i>, your CloudFront
--   distribution must include <i>acme.example.com</i> as one of the
--   alternate domain names. For more information, see <a>Using Alternate
--   Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront Developer
--   Guide</i>.You can't create a resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.For failover alias
--   records, you can't specify a CloudFront distribution for both the
--   primary and secondary records. A distribution must include an
--   alternate domain name that matches the name of the record. However,
--   the primary and secondary records have the same name, and you can't
--   include the same alternate domain name in more than one
--   distribution.</li>
--   <li><i>Elastic Beanstalk environment</i> If the domain name for your
--   Elastic Beanstalk environment includes the region that you deployed
--   the environment in, you can create an alias record that routes traffic
--   to the environment. For example, the domain name
--   <tt>my-environment.us-west-2.elasticbeanstalk.com</tt> is a
--   regionalized domain name.For environments that were created before
--   early 2016, the domain name doesn't include the region. To route
--   traffic to these environments, you must create a CNAME record instead
--   of an alias record. Note that you can't create a CNAME record for the
--   root domain name. For example, if your domain name is example.com, you
--   can create a record that routes traffic for acme.example.com to your
--   Elastic Beanstalk environment, but you can't create a record that
--   routes traffic for example.com to your Elastic Beanstalk
--   environment.For Elastic Beanstalk environments that have regionalized
--   subdomains, specify the <tt>CNAME</tt> attribute for the environment.
--   You can use the following methods to get the value of the CNAME
--   attribute:<ul><li><i>Amazon Web Services Management Console</i>: For
--   information about how to get the value by using the console, see
--   <a>Using Custom Domains with Elastic Beanstalk</a> in the <i>Elastic
--   Beanstalk Developer Guide</i>.</li><li><i>Elastic Beanstalk API</i>:
--   Use the <tt>DescribeEnvironments</tt> action to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>DescribeEnvironments</a> in the <i>Elastic Beanstalk API
--   Reference</i>.</li><li><i>CLI</i>: Use the
--   <tt>describe-environments</tt> command to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>describe-environments</a> in the <i>CLI Command
--   Reference</i>.</li></ul></li>
--   <li><i>ELB load balancer</i> Specify the DNS name that is associated
--   with the load balancer. Get the DNS name by using the Amazon Web
--   Services Management Console, the ELB API, or the CLI.<ul><li><b>Amazon
--   Web Services Management Console</b>: Go to the EC2 page, choose
--   <b>Load Balancers</b> in the navigation pane, choose the load
--   balancer, choose the <b>Description</b> tab, and get the value of the
--   <b>DNS name</b> field.If you're routing traffic to a Classic Load
--   Balancer, get the value that begins with <b>dualstack</b>. If you're
--   routing traffic to another type of load balancer, get the value that
--   applies to the record type, A or AAAA.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the value
--   of <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>DescribeLoadBalancers</a></li><li>Application and Network Load
--   Balancers: <a>DescribeLoadBalancers</a></li></ul></li><li><b>CLI</b>:
--   Use <tt>describe-load-balancers</tt> to get the value of
--   <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>describe-load-balancers</a></li><li>Application and Network Load
--   Balancers: <a>describe-load-balancers</a></li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify the DNS name for
--   your accelerator:<ul><li><b>Global Accelerator API:</b> To get the DNS
--   name, use <a>DescribeAccelerator</a>.</li><li><b>CLI:</b> To get the
--   DNS name, use <a>describe-accelerator</a>.</li></ul></li>
--   <li><i>Amazon S3 bucket that is configured as a static website</i>
--   Specify the domain name of the Amazon S3 website endpoint that you
--   created the bucket in, for example,
--   <tt>s3-website.us-east-2.amazonaws.com</tt>. For more information
--   about valid values, see the table <a>Amazon S3 Website Endpoints</a>
--   in the <i>Amazon Web Services General Reference</i>. For more
--   information about using S3 buckets for websites, see <a>Getting
--   Started with Amazon Route 53</a> in the <i>Amazon Route 53 Developer
--   Guide.</i></li>
--   <li><i>Another Route 53 resource record set</i> Specify the value of
--   the <tt>Name</tt> element for a resource record set in the current
--   hosted zone.If you're creating an alias record that has the same name
--   as the hosted zone (known as the zone apex), you can't specify the
--   domain name for a record for which the value of <tt>Type</tt> is
--   <tt>CNAME</tt>. This is because the alias record must have the same
--   type as the record that you're routing traffic to, and creating a
--   CNAME record for the zone apex isn't supported even for an alias
--   record.</li>
--   </ul>
aliasTarget_dNSName :: Lens' AliasTarget Text

-- | /Applies only to alias, failover alias, geolocation alias, latency
--   alias, and weighted alias resource record sets:/ When
--   <tt>EvaluateTargetHealth</tt> is <tt>true</tt>, an alias resource
--   record set inherits the health of the referenced Amazon Web Services
--   resource, such as an ELB load balancer or another resource record set
--   in the hosted zone.
--   
--   Note the following:
--   
--   <ul>
--   <li><i>CloudFront distributions</i> You can't set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is a CloudFront distribution.</li>
--   <li><i>Elastic Beanstalk environments that have regionalized
--   subdomains</i> If you specify an Elastic Beanstalk environment in
--   <tt>DNSName</tt> and the environment contains an ELB load balancer,
--   Elastic Load Balancing routes queries only to the healthy Amazon EC2
--   instances that are registered with the load balancer. (An environment
--   automatically contains an ELB load balancer if it includes more than
--   one Amazon EC2 instance.) If you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt> and either no Amazon EC2 instances are healthy or the
--   load balancer itself is unhealthy, Route 53 routes queries to other
--   available resources that are healthy, if any.If the environment
--   contains a single Amazon EC2 instance, there are no special
--   requirements.</li>
--   <li><i>ELB load balancers</i> Health checking behavior depends on the
--   type of load balancer:<ul><li><b>Classic Load Balancers</b>: If you
--   specify an ELB Classic Load Balancer in <tt>DNSName</tt>, Elastic Load
--   Balancing routes queries only to the healthy Amazon EC2 instances that
--   are registered with the load balancer. If you set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> and either no EC2
--   instances are healthy or the load balancer itself is unhealthy, Route
--   53 routes queries to other resources.</li><li><b>Application and
--   Network Load Balancers</b>: If you specify an ELB Application or
--   Network Load Balancer and you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt>, Route 53 routes queries to the load balancer based on
--   the health of the target groups that are associated with the load
--   balancer:<ul><li>For an Application or Network Load Balancer to be
--   considered healthy, every target group that contains targets must
--   contain at least one healthy target. If any target group contains only
--   unhealthy targets, the load balancer is considered unhealthy, and
--   Route 53 routes queries to other resources.</li><li>A target group
--   that has no registered targets is considered
--   unhealthy.</li></ul></li></ul>When you create a load balancer, you
--   configure settings for Elastic Load Balancing health checks; they're
--   not Route 53 health checks, but they perform a similar function. Do
--   not create Route 53 health checks for the EC2 instances that you
--   register with an ELB load balancer.</li>
--   <li><i>S3 buckets</i> There are no special requirements for setting
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is an S3 bucket.</li>
--   <li><i>Other records in the same hosted zone</i> If the Amazon Web
--   Services resource that you specify in <tt>DNSName</tt> is a record or
--   a group of records (for example, a group of weighted records) but is
--   not another alias record, we recommend that you associate a health
--   check with all of the records in the alias target. For more
--   information, see <a>What Happens When You Omit Health Checks?</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   For more information and examples, see <a>Amazon Route 53 Health
--   Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.
aliasTarget_evaluateTargetHealth :: Lens' AliasTarget Bool
instance GHC.Generics.Generic Network.AWS.Route53.Types.AliasTarget.AliasTarget
instance GHC.Show.Show Network.AWS.Route53.Types.AliasTarget.AliasTarget
instance GHC.Read.Read Network.AWS.Route53.Types.AliasTarget.AliasTarget
instance GHC.Classes.Eq Network.AWS.Route53.Types.AliasTarget.AliasTarget
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.AliasTarget.AliasTarget
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.AliasTarget.AliasTarget
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.AliasTarget.AliasTarget
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.AliasTarget.AliasTarget


module Network.AWS.Route53.Types.ChangeAction
newtype ChangeAction
ChangeAction' :: Text -> ChangeAction
[fromChangeAction] :: ChangeAction -> Text
pattern ChangeAction_CREATE :: ChangeAction
pattern ChangeAction_DELETE :: ChangeAction
pattern ChangeAction_UPSERT :: ChangeAction
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance GHC.Generics.Generic Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance GHC.Classes.Ord Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance GHC.Classes.Eq Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance GHC.Read.Read Network.AWS.Route53.Types.ChangeAction.ChangeAction
instance GHC.Show.Show Network.AWS.Route53.Types.ChangeAction.ChangeAction


module Network.AWS.Route53.Types.ChangeStatus
newtype ChangeStatus
ChangeStatus' :: Text -> ChangeStatus
[fromChangeStatus] :: ChangeStatus -> Text
pattern ChangeStatus_INSYNC :: ChangeStatus
pattern ChangeStatus_PENDING :: ChangeStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance GHC.Generics.Generic Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance GHC.Classes.Ord Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance GHC.Classes.Eq Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance GHC.Read.Read Network.AWS.Route53.Types.ChangeStatus.ChangeStatus
instance GHC.Show.Show Network.AWS.Route53.Types.ChangeStatus.ChangeStatus


module Network.AWS.Route53.Types.ChangeInfo

-- | A complex type that describes change information about changes made to
--   your hosted zone.
--   
--   <i>See:</i> <a>newChangeInfo</a> smart constructor.
data ChangeInfo
ChangeInfo' :: Maybe Text -> ResourceId -> ChangeStatus -> ISO8601 -> ChangeInfo

-- | A comment you can provide.
[$sel:comment:ChangeInfo'] :: ChangeInfo -> Maybe Text

-- | This element contains an ID that you use when performing a
--   <a>GetChange</a> action to get detailed information about the change.
[$sel:id:ChangeInfo'] :: ChangeInfo -> ResourceId

-- | The current state of the request. <tt>PENDING</tt> indicates that this
--   request has not yet been applied to all Amazon Route 53 DNS servers.
[$sel:status:ChangeInfo'] :: ChangeInfo -> ChangeStatus

-- | The date and time that the change request was submitted in <a>ISO 8601
--   format</a> and Coordinated Universal Time (UTC). For example, the
--   value <tt>2017-03-27T17:48:16.751Z</tt> represents March 27, 2017 at
--   17:48:16.751 UTC.
[$sel:submittedAt:ChangeInfo'] :: ChangeInfo -> ISO8601

-- | Create a value of <a>ChangeInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:ChangeInfo'</a>, <a>changeInfo_comment</a> - A comment
--   you can provide.
--   
--   <a>$sel:id:ChangeInfo'</a>, <a>changeInfo_id</a> - This element
--   contains an ID that you use when performing a <a>GetChange</a> action
--   to get detailed information about the change.
--   
--   <a>$sel:status:ChangeInfo'</a>, <a>changeInfo_status</a> - The current
--   state of the request. <tt>PENDING</tt> indicates that this request has
--   not yet been applied to all Amazon Route 53 DNS servers.
--   
--   <a>$sel:submittedAt:ChangeInfo'</a>, <a>changeInfo_submittedAt</a> -
--   The date and time that the change request was submitted in <a>ISO 8601
--   format</a> and Coordinated Universal Time (UTC). For example, the
--   value <tt>2017-03-27T17:48:16.751Z</tt> represents March 27, 2017 at
--   17:48:16.751 UTC.
newChangeInfo :: ResourceId -> ChangeStatus -> UTCTime -> ChangeInfo

-- | A comment you can provide.
changeInfo_comment :: Lens' ChangeInfo (Maybe Text)

-- | This element contains an ID that you use when performing a
--   <a>GetChange</a> action to get detailed information about the change.
changeInfo_id :: Lens' ChangeInfo ResourceId

-- | The current state of the request. <tt>PENDING</tt> indicates that this
--   request has not yet been applied to all Amazon Route 53 DNS servers.
changeInfo_status :: Lens' ChangeInfo ChangeStatus

-- | The date and time that the change request was submitted in <a>ISO 8601
--   format</a> and Coordinated Universal Time (UTC). For example, the
--   value <tt>2017-03-27T17:48:16.751Z</tt> represents March 27, 2017 at
--   17:48:16.751 UTC.
changeInfo_submittedAt :: Lens' ChangeInfo UTCTime
instance GHC.Generics.Generic Network.AWS.Route53.Types.ChangeInfo.ChangeInfo
instance GHC.Show.Show Network.AWS.Route53.Types.ChangeInfo.ChangeInfo
instance GHC.Read.Read Network.AWS.Route53.Types.ChangeInfo.ChangeInfo
instance GHC.Classes.Eq Network.AWS.Route53.Types.ChangeInfo.ChangeInfo
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.ChangeInfo.ChangeInfo
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ChangeInfo.ChangeInfo
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ChangeInfo.ChangeInfo


module Network.AWS.Route53.Types.CloudWatchRegion
newtype CloudWatchRegion
CloudWatchRegion' :: Text -> CloudWatchRegion
[fromCloudWatchRegion] :: CloudWatchRegion -> Text
pattern CloudWatchRegion_Af_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_northeast_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_northeast_2 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_northeast_3 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_southeast_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_southeast_2 :: CloudWatchRegion
pattern CloudWatchRegion_Ca_central_1 :: CloudWatchRegion
pattern CloudWatchRegion_Cn_north_1 :: CloudWatchRegion
pattern CloudWatchRegion_Cn_northwest_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_central_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_north_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_west_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_west_2 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_west_3 :: CloudWatchRegion
pattern CloudWatchRegion_Me_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Sa_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_east_2 :: CloudWatchRegion
pattern CloudWatchRegion_Us_gov_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_gov_west_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_iso_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_isob_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_west_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_west_2 :: CloudWatchRegion
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance GHC.Generics.Generic Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance GHC.Classes.Ord Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance GHC.Classes.Eq Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance GHC.Read.Read Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion
instance GHC.Show.Show Network.AWS.Route53.Types.CloudWatchRegion.CloudWatchRegion


module Network.AWS.Route53.Types.AlarmIdentifier

-- | A complex type that identifies the CloudWatch alarm that you want
--   Amazon Route 53 health checkers to use to determine whether the
--   specified health check is healthy.
--   
--   <i>See:</i> <a>newAlarmIdentifier</a> smart constructor.
data AlarmIdentifier
AlarmIdentifier' :: CloudWatchRegion -> Text -> AlarmIdentifier

-- | For the CloudWatch alarm that you want Route 53 health checkers to use
--   to determine whether this health check is healthy, the region that the
--   alarm was created in.
--   
--   For the current list of CloudWatch regions, see <a>Amazon CloudWatch
--   endpoints and quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
[$sel:region:AlarmIdentifier'] :: AlarmIdentifier -> CloudWatchRegion

-- | The name of the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether this health check is healthy.
--   
--   Route 53 supports CloudWatch alarms with the following features:
--   
--   <ul>
--   <li>Standard-resolution metrics. High-resolution metrics aren't
--   supported. For more information, see <a>High-Resolution Metrics</a> in
--   the <i>Amazon CloudWatch User Guide</i>.</li>
--   <li>Statistics: Average, Minimum, Maximum, Sum, and SampleCount.
--   Extended statistics aren't supported.</li>
--   </ul>
[$sel:name:AlarmIdentifier'] :: AlarmIdentifier -> Text

-- | Create a value of <a>AlarmIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:region:AlarmIdentifier'</a>, <a>alarmIdentifier_region</a> -
--   For the CloudWatch alarm that you want Route 53 health checkers to use
--   to determine whether this health check is healthy, the region that the
--   alarm was created in.
--   
--   For the current list of CloudWatch regions, see <a>Amazon CloudWatch
--   endpoints and quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:name:AlarmIdentifier'</a>, <a>alarmIdentifier_name</a> - The
--   name of the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether this health check is healthy.
--   
--   Route 53 supports CloudWatch alarms with the following features:
--   
--   <ul>
--   <li>Standard-resolution metrics. High-resolution metrics aren't
--   supported. For more information, see <a>High-Resolution Metrics</a> in
--   the <i>Amazon CloudWatch User Guide</i>.</li>
--   <li>Statistics: Average, Minimum, Maximum, Sum, and SampleCount.
--   Extended statistics aren't supported.</li>
--   </ul>
newAlarmIdentifier :: CloudWatchRegion -> Text -> AlarmIdentifier

-- | For the CloudWatch alarm that you want Route 53 health checkers to use
--   to determine whether this health check is healthy, the region that the
--   alarm was created in.
--   
--   For the current list of CloudWatch regions, see <a>Amazon CloudWatch
--   endpoints and quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
alarmIdentifier_region :: Lens' AlarmIdentifier CloudWatchRegion

-- | The name of the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether this health check is healthy.
--   
--   Route 53 supports CloudWatch alarms with the following features:
--   
--   <ul>
--   <li>Standard-resolution metrics. High-resolution metrics aren't
--   supported. For more information, see <a>High-Resolution Metrics</a> in
--   the <i>Amazon CloudWatch User Guide</i>.</li>
--   <li>Statistics: Average, Minimum, Maximum, Sum, and SampleCount.
--   Extended statistics aren't supported.</li>
--   </ul>
alarmIdentifier_name :: Lens' AlarmIdentifier Text
instance GHC.Generics.Generic Network.AWS.Route53.Types.AlarmIdentifier.AlarmIdentifier
instance GHC.Show.Show Network.AWS.Route53.Types.AlarmIdentifier.AlarmIdentifier
instance GHC.Read.Read Network.AWS.Route53.Types.AlarmIdentifier.AlarmIdentifier
instance GHC.Classes.Eq Network.AWS.Route53.Types.AlarmIdentifier.AlarmIdentifier
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.AlarmIdentifier.AlarmIdentifier
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.AlarmIdentifier.AlarmIdentifier
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.AlarmIdentifier.AlarmIdentifier
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.AlarmIdentifier.AlarmIdentifier


module Network.AWS.Route53.Types.ComparisonOperator
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_GreaterThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_GreaterThanThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanThreshold :: ComparisonOperator
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance GHC.Generics.Generic Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Ord Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance GHC.Classes.Eq Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance GHC.Read.Read Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator
instance GHC.Show.Show Network.AWS.Route53.Types.ComparisonOperator.ComparisonOperator


module Network.AWS.Route53.Types.DNSSECStatus

-- | A string repesenting the status of DNSSEC signing.
--   
--   <i>See:</i> <a>newDNSSECStatus</a> smart constructor.
data DNSSECStatus
DNSSECStatus' :: Maybe Text -> Maybe Text -> DNSSECStatus

-- | A string that represents the current hosted zone signing status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>SIGNING</i> DNSSEC signing is enabled for the hosted zone.</li>
--   <li><i>NOT_SIGNING</i> DNSSEC signing is not enabled for the hosted
--   zone.</li>
--   <li><i>DELETING</i> DNSSEC signing is in the process of being removed
--   for the hosted zone.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with signing in the hosted
--   zone that requires you to take action to resolve. For example, the
--   customer managed customer master key (CMK) might have been deleted, or
--   the permissions for the customer managed CMK might have been
--   changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including with
--   key-signing keys (KSKs), you must correct the problem by enabling or
--   disabling DNSSEC signing for the hosted zone.</li>
--   </ul>
[$sel:serveSignature:DNSSECStatus'] :: DNSSECStatus -> Maybe Text

-- | The status message provided for the following DNSSEC signing status:
--   <tt>INTERNAL_FAILURE</tt>. The status message includes information
--   about what the problem might be and steps that you can take to correct
--   the issue.
[$sel:statusMessage:DNSSECStatus'] :: DNSSECStatus -> Maybe Text

-- | Create a value of <a>DNSSECStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serveSignature:DNSSECStatus'</a>,
--   <a>dNSSECStatus_serveSignature</a> - A string that represents the
--   current hosted zone signing status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>SIGNING</i> DNSSEC signing is enabled for the hosted zone.</li>
--   <li><i>NOT_SIGNING</i> DNSSEC signing is not enabled for the hosted
--   zone.</li>
--   <li><i>DELETING</i> DNSSEC signing is in the process of being removed
--   for the hosted zone.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with signing in the hosted
--   zone that requires you to take action to resolve. For example, the
--   customer managed customer master key (CMK) might have been deleted, or
--   the permissions for the customer managed CMK might have been
--   changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including with
--   key-signing keys (KSKs), you must correct the problem by enabling or
--   disabling DNSSEC signing for the hosted zone.</li>
--   </ul>
--   
--   <a>$sel:statusMessage:DNSSECStatus'</a>,
--   <a>dNSSECStatus_statusMessage</a> - The status message provided for
--   the following DNSSEC signing status: <tt>INTERNAL_FAILURE</tt>. The
--   status message includes information about what the problem might be
--   and steps that you can take to correct the issue.
newDNSSECStatus :: DNSSECStatus

-- | A string that represents the current hosted zone signing status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>SIGNING</i> DNSSEC signing is enabled for the hosted zone.</li>
--   <li><i>NOT_SIGNING</i> DNSSEC signing is not enabled for the hosted
--   zone.</li>
--   <li><i>DELETING</i> DNSSEC signing is in the process of being removed
--   for the hosted zone.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with signing in the hosted
--   zone that requires you to take action to resolve. For example, the
--   customer managed customer master key (CMK) might have been deleted, or
--   the permissions for the customer managed CMK might have been
--   changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including with
--   key-signing keys (KSKs), you must correct the problem by enabling or
--   disabling DNSSEC signing for the hosted zone.</li>
--   </ul>
dNSSECStatus_serveSignature :: Lens' DNSSECStatus (Maybe Text)

-- | The status message provided for the following DNSSEC signing status:
--   <tt>INTERNAL_FAILURE</tt>. The status message includes information
--   about what the problem might be and steps that you can take to correct
--   the issue.
dNSSECStatus_statusMessage :: Lens' DNSSECStatus (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53.Types.DNSSECStatus.DNSSECStatus
instance GHC.Show.Show Network.AWS.Route53.Types.DNSSECStatus.DNSSECStatus
instance GHC.Read.Read Network.AWS.Route53.Types.DNSSECStatus.DNSSECStatus
instance GHC.Classes.Eq Network.AWS.Route53.Types.DNSSECStatus.DNSSECStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.DNSSECStatus.DNSSECStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.DNSSECStatus.DNSSECStatus
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.DNSSECStatus.DNSSECStatus


module Network.AWS.Route53.Types.DelegationSet

-- | A complex type that lists the name servers in a delegation set, as
--   well as the <tt>CallerReference</tt> and the <tt>ID</tt> for the
--   delegation set.
--   
--   <i>See:</i> <a>newDelegationSet</a> smart constructor.
data DelegationSet
DelegationSet' :: Maybe ResourceId -> Maybe Text -> NonEmpty Text -> DelegationSet

-- | The ID that Amazon Route 53 assigns to a reusable delegation set.
[$sel:id:DelegationSet'] :: DelegationSet -> Maybe ResourceId

-- | The value that you specified for <tt>CallerReference</tt> when you
--   created the reusable delegation set.
[$sel:callerReference:DelegationSet'] :: DelegationSet -> Maybe Text

-- | A complex type that contains a list of the authoritative name servers
--   for a hosted zone or for a reusable delegation set.
[$sel:nameServers:DelegationSet'] :: DelegationSet -> NonEmpty Text

-- | Create a value of <a>DelegationSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DelegationSet'</a>, <a>delegationSet_id</a> - The ID that
--   Amazon Route 53 assigns to a reusable delegation set.
--   
--   <a>$sel:callerReference:DelegationSet'</a>,
--   <a>delegationSet_callerReference</a> - The value that you specified
--   for <tt>CallerReference</tt> when you created the reusable delegation
--   set.
--   
--   <a>$sel:nameServers:DelegationSet'</a>,
--   <a>delegationSet_nameServers</a> - A complex type that contains a list
--   of the authoritative name servers for a hosted zone or for a reusable
--   delegation set.
newDelegationSet :: NonEmpty Text -> DelegationSet

-- | The ID that Amazon Route 53 assigns to a reusable delegation set.
delegationSet_id :: Lens' DelegationSet (Maybe ResourceId)

-- | The value that you specified for <tt>CallerReference</tt> when you
--   created the reusable delegation set.
delegationSet_callerReference :: Lens' DelegationSet (Maybe Text)

-- | A complex type that contains a list of the authoritative name servers
--   for a hosted zone or for a reusable delegation set.
delegationSet_nameServers :: Lens' DelegationSet (NonEmpty Text)
instance GHC.Generics.Generic Network.AWS.Route53.Types.DelegationSet.DelegationSet
instance GHC.Show.Show Network.AWS.Route53.Types.DelegationSet.DelegationSet
instance GHC.Read.Read Network.AWS.Route53.Types.DelegationSet.DelegationSet
instance GHC.Classes.Eq Network.AWS.Route53.Types.DelegationSet.DelegationSet
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.DelegationSet.DelegationSet
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.DelegationSet.DelegationSet
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.DelegationSet.DelegationSet


module Network.AWS.Route53.Types.Dimension

-- | For the metric that the CloudWatch alarm is associated with, a complex
--   type that contains information about one dimension.
--   
--   <i>See:</i> <a>newDimension</a> smart constructor.
data Dimension
Dimension' :: Text -> Text -> Dimension

-- | For the metric that the CloudWatch alarm is associated with, the name
--   of one dimension.
[$sel:name:Dimension'] :: Dimension -> Text

-- | For the metric that the CloudWatch alarm is associated with, the value
--   of one dimension.
[$sel:value:Dimension'] :: Dimension -> Text

-- | Create a value of <a>Dimension</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Dimension'</a>, <a>dimension_name</a> - For the metric
--   that the CloudWatch alarm is associated with, the name of one
--   dimension.
--   
--   <a>$sel:value:Dimension'</a>, <a>dimension_value</a> - For the metric
--   that the CloudWatch alarm is associated with, the value of one
--   dimension.
newDimension :: Text -> Text -> Dimension

-- | For the metric that the CloudWatch alarm is associated with, the name
--   of one dimension.
dimension_name :: Lens' Dimension Text

-- | For the metric that the CloudWatch alarm is associated with, the value
--   of one dimension.
dimension_value :: Lens' Dimension Text
instance GHC.Generics.Generic Network.AWS.Route53.Types.Dimension.Dimension
instance GHC.Show.Show Network.AWS.Route53.Types.Dimension.Dimension
instance GHC.Read.Read Network.AWS.Route53.Types.Dimension.Dimension
instance GHC.Classes.Eq Network.AWS.Route53.Types.Dimension.Dimension
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.Dimension.Dimension
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.Dimension.Dimension
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.Dimension.Dimension


module Network.AWS.Route53.Types.GeoLocation

-- | A complex type that contains information about a geographic location.
--   
--   <i>See:</i> <a>newGeoLocation</a> smart constructor.
data GeoLocation
GeoLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> GeoLocation

-- | For geolocation resource record sets, the two-letter code for a state
--   of the United States. Route 53 doesn't support any other values for
--   <tt>SubdivisionCode</tt>. For a list of state abbreviations, see
--   <a>Appendix B: Two–Letter State and Possession Abbreviations</a> on
--   the United States Postal Service website.
--   
--   If you specify <tt>subdivisioncode</tt>, you must also specify
--   <tt>US</tt> for <tt>CountryCode</tt>.
[$sel:subdivisionCode:GeoLocation'] :: GeoLocation -> Maybe Text

-- | For geolocation resource record sets, the two-letter code for a
--   country.
--   
--   Amazon Route 53 uses the two-letter country codes that are specified
--   in <a>ISO standard 3166-1 alpha-2</a>.
[$sel:countryCode:GeoLocation'] :: GeoLocation -> Maybe Text

-- | The two-letter code for the continent.
--   
--   Amazon Route 53 supports the following continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
--   
--   Constraint: Specifying <tt>ContinentCode</tt> with either
--   <tt>CountryCode</tt> or <tt>SubdivisionCode</tt> returns an
--   <tt>InvalidInput</tt> error.
[$sel:continentCode:GeoLocation'] :: GeoLocation -> Maybe Text

-- | Create a value of <a>GeoLocation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subdivisionCode:GeoLocation'</a>,
--   <a>geoLocation_subdivisionCode</a> - For geolocation resource record
--   sets, the two-letter code for a state of the United States. Route 53
--   doesn't support any other values for <tt>SubdivisionCode</tt>. For a
--   list of state abbreviations, see <a>Appendix B: Two–Letter State and
--   Possession Abbreviations</a> on the United States Postal Service
--   website.
--   
--   If you specify <tt>subdivisioncode</tt>, you must also specify
--   <tt>US</tt> for <tt>CountryCode</tt>.
--   
--   <a>$sel:countryCode:GeoLocation'</a>, <a>geoLocation_countryCode</a> -
--   For geolocation resource record sets, the two-letter code for a
--   country.
--   
--   Amazon Route 53 uses the two-letter country codes that are specified
--   in <a>ISO standard 3166-1 alpha-2</a>.
--   
--   <a>$sel:continentCode:GeoLocation'</a>,
--   <a>geoLocation_continentCode</a> - The two-letter code for the
--   continent.
--   
--   Amazon Route 53 supports the following continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
--   
--   Constraint: Specifying <tt>ContinentCode</tt> with either
--   <tt>CountryCode</tt> or <tt>SubdivisionCode</tt> returns an
--   <tt>InvalidInput</tt> error.
newGeoLocation :: GeoLocation

-- | For geolocation resource record sets, the two-letter code for a state
--   of the United States. Route 53 doesn't support any other values for
--   <tt>SubdivisionCode</tt>. For a list of state abbreviations, see
--   <a>Appendix B: Two–Letter State and Possession Abbreviations</a> on
--   the United States Postal Service website.
--   
--   If you specify <tt>subdivisioncode</tt>, you must also specify
--   <tt>US</tt> for <tt>CountryCode</tt>.
geoLocation_subdivisionCode :: Lens' GeoLocation (Maybe Text)

-- | For geolocation resource record sets, the two-letter code for a
--   country.
--   
--   Amazon Route 53 uses the two-letter country codes that are specified
--   in <a>ISO standard 3166-1 alpha-2</a>.
geoLocation_countryCode :: Lens' GeoLocation (Maybe Text)

-- | The two-letter code for the continent.
--   
--   Amazon Route 53 supports the following continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
--   
--   Constraint: Specifying <tt>ContinentCode</tt> with either
--   <tt>CountryCode</tt> or <tt>SubdivisionCode</tt> returns an
--   <tt>InvalidInput</tt> error.
geoLocation_continentCode :: Lens' GeoLocation (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53.Types.GeoLocation.GeoLocation
instance GHC.Show.Show Network.AWS.Route53.Types.GeoLocation.GeoLocation
instance GHC.Read.Read Network.AWS.Route53.Types.GeoLocation.GeoLocation
instance GHC.Classes.Eq Network.AWS.Route53.Types.GeoLocation.GeoLocation
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.GeoLocation.GeoLocation
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.GeoLocation.GeoLocation
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.GeoLocation.GeoLocation
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.GeoLocation.GeoLocation


module Network.AWS.Route53.Types.GeoLocationDetails

-- | A complex type that contains the codes and full continent, country,
--   and subdivision names for the specified <tt>geolocation</tt> code.
--   
--   <i>See:</i> <a>newGeoLocationDetails</a> smart constructor.
data GeoLocationDetails
GeoLocationDetails' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> GeoLocationDetails

-- | The full name of the subdivision. Route 53 currently supports only
--   states in the United States.
[$sel:subdivisionName:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | The code for the subdivision, such as a particular state within the
--   United States. For a list of US state abbreviations, see <a>Appendix
--   B: Two–Letter State and Possession Abbreviations</a> on the United
--   States Postal Service website. For a list of all supported subdivision
--   codes, use the <a>ListGeoLocations</a> API.
[$sel:subdivisionCode:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | The name of the country.
[$sel:countryName:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | The two-letter code for the country.
[$sel:countryCode:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | The two-letter code for the continent.
[$sel:continentCode:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | The full name of the continent.
[$sel:continentName:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | Create a value of <a>GeoLocationDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subdivisionName:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_subdivisionName</a> - The full name of the
--   subdivision. Route 53 currently supports only states in the United
--   States.
--   
--   <a>$sel:subdivisionCode:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_subdivisionCode</a> - The code for the
--   subdivision, such as a particular state within the United States. For
--   a list of US state abbreviations, see <a>Appendix B: Two–Letter State
--   and Possession Abbreviations</a> on the United States Postal Service
--   website. For a list of all supported subdivision codes, use the
--   <a>ListGeoLocations</a> API.
--   
--   <a>$sel:countryName:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_countryName</a> - The name of the country.
--   
--   <a>$sel:countryCode:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_countryCode</a> - The two-letter code for the
--   country.
--   
--   <a>$sel:continentCode:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_continentCode</a> - The two-letter code for the
--   continent.
--   
--   <a>$sel:continentName:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_continentName</a> - The full name of the
--   continent.
newGeoLocationDetails :: GeoLocationDetails

-- | The full name of the subdivision. Route 53 currently supports only
--   states in the United States.
geoLocationDetails_subdivisionName :: Lens' GeoLocationDetails (Maybe Text)

-- | The code for the subdivision, such as a particular state within the
--   United States. For a list of US state abbreviations, see <a>Appendix
--   B: Two–Letter State and Possession Abbreviations</a> on the United
--   States Postal Service website. For a list of all supported subdivision
--   codes, use the <a>ListGeoLocations</a> API.
geoLocationDetails_subdivisionCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The name of the country.
geoLocationDetails_countryName :: Lens' GeoLocationDetails (Maybe Text)

-- | The two-letter code for the country.
geoLocationDetails_countryCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The two-letter code for the continent.
geoLocationDetails_continentCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The full name of the continent.
geoLocationDetails_continentName :: Lens' GeoLocationDetails (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53.Types.GeoLocationDetails.GeoLocationDetails
instance GHC.Show.Show Network.AWS.Route53.Types.GeoLocationDetails.GeoLocationDetails
instance GHC.Read.Read Network.AWS.Route53.Types.GeoLocationDetails.GeoLocationDetails
instance GHC.Classes.Eq Network.AWS.Route53.Types.GeoLocationDetails.GeoLocationDetails
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.GeoLocationDetails.GeoLocationDetails
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.GeoLocationDetails.GeoLocationDetails
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.GeoLocationDetails.GeoLocationDetails


module Network.AWS.Route53.Types.HealthCheckRegion
newtype HealthCheckRegion
HealthCheckRegion' :: Text -> HealthCheckRegion
[fromHealthCheckRegion] :: HealthCheckRegion -> Text
pattern HealthCheckRegion_Ap_northeast_1 :: HealthCheckRegion
pattern HealthCheckRegion_Ap_southeast_1 :: HealthCheckRegion
pattern HealthCheckRegion_Ap_southeast_2 :: HealthCheckRegion
pattern HealthCheckRegion_Eu_west_1 :: HealthCheckRegion
pattern HealthCheckRegion_Sa_east_1 :: HealthCheckRegion
pattern HealthCheckRegion_Us_east_1 :: HealthCheckRegion
pattern HealthCheckRegion_Us_west_1 :: HealthCheckRegion
pattern HealthCheckRegion_Us_west_2 :: HealthCheckRegion
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance GHC.Generics.Generic Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance GHC.Classes.Ord Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance GHC.Classes.Eq Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance GHC.Read.Read Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion
instance GHC.Show.Show Network.AWS.Route53.Types.HealthCheckRegion.HealthCheckRegion


module Network.AWS.Route53.Types.HealthCheckType
newtype HealthCheckType
HealthCheckType' :: Text -> HealthCheckType
[fromHealthCheckType] :: HealthCheckType -> Text
pattern HealthCheckType_CALCULATED :: HealthCheckType
pattern HealthCheckType_CLOUDWATCH_METRIC :: HealthCheckType
pattern HealthCheckType_HTTP :: HealthCheckType
pattern HealthCheckType_HTTPS :: HealthCheckType
pattern HealthCheckType_HTTPS_STR_MATCH :: HealthCheckType
pattern HealthCheckType_HTTP_STR_MATCH :: HealthCheckType
pattern HealthCheckType_RECOVERY_CONTROL :: HealthCheckType
pattern HealthCheckType_TCP :: HealthCheckType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance GHC.Generics.Generic Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance GHC.Classes.Ord Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance GHC.Classes.Eq Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance GHC.Read.Read Network.AWS.Route53.Types.HealthCheckType.HealthCheckType
instance GHC.Show.Show Network.AWS.Route53.Types.HealthCheckType.HealthCheckType


module Network.AWS.Route53.Types.HostedZoneConfig

-- | A complex type that contains an optional comment about your hosted
--   zone. If you don't want to specify a comment, omit both the
--   <tt>HostedZoneConfig</tt> and <tt>Comment</tt> elements.
--   
--   <i>See:</i> <a>newHostedZoneConfig</a> smart constructor.
data HostedZoneConfig
HostedZoneConfig' :: Maybe Bool -> Maybe Text -> HostedZoneConfig

-- | A value that indicates whether this is a private hosted zone.
[$sel:privateZone:HostedZoneConfig'] :: HostedZoneConfig -> Maybe Bool

-- | Any comments that you want to include about the hosted zone.
[$sel:comment:HostedZoneConfig'] :: HostedZoneConfig -> Maybe Text

-- | Create a value of <a>HostedZoneConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:privateZone:HostedZoneConfig'</a>,
--   <a>hostedZoneConfig_privateZone</a> - A value that indicates whether
--   this is a private hosted zone.
--   
--   <a>$sel:comment:HostedZoneConfig'</a>, <a>hostedZoneConfig_comment</a>
--   - Any comments that you want to include about the hosted zone.
newHostedZoneConfig :: HostedZoneConfig

-- | A value that indicates whether this is a private hosted zone.
hostedZoneConfig_privateZone :: Lens' HostedZoneConfig (Maybe Bool)

-- | Any comments that you want to include about the hosted zone.
hostedZoneConfig_comment :: Lens' HostedZoneConfig (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53.Types.HostedZoneConfig.HostedZoneConfig
instance GHC.Show.Show Network.AWS.Route53.Types.HostedZoneConfig.HostedZoneConfig
instance GHC.Read.Read Network.AWS.Route53.Types.HostedZoneConfig.HostedZoneConfig
instance GHC.Classes.Eq Network.AWS.Route53.Types.HostedZoneConfig.HostedZoneConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.HostedZoneConfig.HostedZoneConfig
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.HostedZoneConfig.HostedZoneConfig
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.HostedZoneConfig.HostedZoneConfig
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.HostedZoneConfig.HostedZoneConfig


module Network.AWS.Route53.Types.HostedZoneLimitType
newtype HostedZoneLimitType
HostedZoneLimitType' :: Text -> HostedZoneLimitType
[fromHostedZoneLimitType] :: HostedZoneLimitType -> Text
pattern HostedZoneLimitType_MAX_RRSETS_BY_ZONE :: HostedZoneLimitType
pattern HostedZoneLimitType_MAX_VPCS_ASSOCIATED_BY_ZONE :: HostedZoneLimitType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance GHC.Generics.Generic Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance GHC.Classes.Ord Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance GHC.Classes.Eq Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance GHC.Read.Read Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType
instance GHC.Show.Show Network.AWS.Route53.Types.HostedZoneLimitType.HostedZoneLimitType


module Network.AWS.Route53.Types.HostedZoneLimit

-- | A complex type that contains the type of limit that you specified in
--   the request and the current value for that limit.
--   
--   <i>See:</i> <a>newHostedZoneLimit</a> smart constructor.
data HostedZoneLimit
HostedZoneLimit' :: HostedZoneLimitType -> Natural -> HostedZoneLimit

-- | The limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
[$sel:type':HostedZoneLimit'] :: HostedZoneLimit -> HostedZoneLimitType

-- | The current value for the limit that is specified by <tt>Type</tt>.
[$sel:value:HostedZoneLimit'] :: HostedZoneLimit -> Natural

-- | Create a value of <a>HostedZoneLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':HostedZoneLimit'</a>, <a>hostedZoneLimit_type</a> - The
--   limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
--   
--   <a>$sel:value:HostedZoneLimit'</a>, <a>hostedZoneLimit_value</a> - The
--   current value for the limit that is specified by <tt>Type</tt>.
newHostedZoneLimit :: HostedZoneLimitType -> Natural -> HostedZoneLimit

-- | The limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
hostedZoneLimit_type :: Lens' HostedZoneLimit HostedZoneLimitType

-- | The current value for the limit that is specified by <tt>Type</tt>.
hostedZoneLimit_value :: Lens' HostedZoneLimit Natural
instance GHC.Generics.Generic Network.AWS.Route53.Types.HostedZoneLimit.HostedZoneLimit
instance GHC.Show.Show Network.AWS.Route53.Types.HostedZoneLimit.HostedZoneLimit
instance GHC.Read.Read Network.AWS.Route53.Types.HostedZoneLimit.HostedZoneLimit
instance GHC.Classes.Eq Network.AWS.Route53.Types.HostedZoneLimit.HostedZoneLimit
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.HostedZoneLimit.HostedZoneLimit
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.HostedZoneLimit.HostedZoneLimit
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.HostedZoneLimit.HostedZoneLimit


module Network.AWS.Route53.Types.HostedZoneOwner

-- | A complex type that identifies a hosted zone that a specified Amazon
--   VPC is associated with and the owner of the hosted zone. If there is a
--   value for <tt>OwningAccount</tt>, there is no value for
--   <tt>OwningService</tt>, and vice versa.
--   
--   <i>See:</i> <a>newHostedZoneOwner</a> smart constructor.
data HostedZoneOwner
HostedZoneOwner' :: Maybe Text -> Maybe Text -> HostedZoneOwner

-- | If the hosted zone was created by an Amazon Web Services account, or
--   was created by an Amazon Web Services service that creates hosted
--   zones using the current account, <tt>OwningAccount</tt> contains the
--   account ID of that account. For example, when you use Cloud Map to
--   create a hosted zone, Cloud Map creates the hosted zone using the
--   current Amazon Web Services account.
[$sel:owningAccount:HostedZoneOwner'] :: HostedZoneOwner -> Maybe Text

-- | If an Amazon Web Services service uses its own account to create a
--   hosted zone and associate the specified VPC with that hosted zone,
--   <tt>OwningService</tt> contains an abbreviation that identifies the
--   service. For example, if Amazon Elastic File System (Amazon EFS)
--   created a hosted zone and associated a VPC with the hosted zone, the
--   value of <tt>OwningService</tt> is <tt>efs.amazonaws.com</tt>.
[$sel:owningService:HostedZoneOwner'] :: HostedZoneOwner -> Maybe Text

-- | Create a value of <a>HostedZoneOwner</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:owningAccount:HostedZoneOwner'</a>,
--   <a>hostedZoneOwner_owningAccount</a> - If the hosted zone was created
--   by an Amazon Web Services account, or was created by an Amazon Web
--   Services service that creates hosted zones using the current account,
--   <tt>OwningAccount</tt> contains the account ID of that account. For
--   example, when you use Cloud Map to create a hosted zone, Cloud Map
--   creates the hosted zone using the current Amazon Web Services account.
--   
--   <a>$sel:owningService:HostedZoneOwner'</a>,
--   <a>hostedZoneOwner_owningService</a> - If an Amazon Web Services
--   service uses its own account to create a hosted zone and associate the
--   specified VPC with that hosted zone, <tt>OwningService</tt> contains
--   an abbreviation that identifies the service. For example, if Amazon
--   Elastic File System (Amazon EFS) created a hosted zone and associated
--   a VPC with the hosted zone, the value of <tt>OwningService</tt> is
--   <tt>efs.amazonaws.com</tt>.
newHostedZoneOwner :: HostedZoneOwner

-- | If the hosted zone was created by an Amazon Web Services account, or
--   was created by an Amazon Web Services service that creates hosted
--   zones using the current account, <tt>OwningAccount</tt> contains the
--   account ID of that account. For example, when you use Cloud Map to
--   create a hosted zone, Cloud Map creates the hosted zone using the
--   current Amazon Web Services account.
hostedZoneOwner_owningAccount :: Lens' HostedZoneOwner (Maybe Text)

-- | If an Amazon Web Services service uses its own account to create a
--   hosted zone and associate the specified VPC with that hosted zone,
--   <tt>OwningService</tt> contains an abbreviation that identifies the
--   service. For example, if Amazon Elastic File System (Amazon EFS)
--   created a hosted zone and associated a VPC with the hosted zone, the
--   value of <tt>OwningService</tt> is <tt>efs.amazonaws.com</tt>.
hostedZoneOwner_owningService :: Lens' HostedZoneOwner (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53.Types.HostedZoneOwner.HostedZoneOwner
instance GHC.Show.Show Network.AWS.Route53.Types.HostedZoneOwner.HostedZoneOwner
instance GHC.Read.Read Network.AWS.Route53.Types.HostedZoneOwner.HostedZoneOwner
instance GHC.Classes.Eq Network.AWS.Route53.Types.HostedZoneOwner.HostedZoneOwner
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.HostedZoneOwner.HostedZoneOwner
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.HostedZoneOwner.HostedZoneOwner
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.HostedZoneOwner.HostedZoneOwner


module Network.AWS.Route53.Types.HostedZoneSummary

-- | In the response to a <tt>ListHostedZonesByVPC</tt> request, the
--   <tt>HostedZoneSummaries</tt> element contains one
--   <tt>HostedZoneSummary</tt> element for each hosted zone that the
--   specified Amazon VPC is associated with. Each
--   <tt>HostedZoneSummary</tt> element contains the hosted zone name and
--   ID, and information about who owns the hosted zone.
--   
--   <i>See:</i> <a>newHostedZoneSummary</a> smart constructor.
data HostedZoneSummary
HostedZoneSummary' :: ResourceId -> Text -> HostedZoneOwner -> HostedZoneSummary

-- | The Route 53 hosted zone ID of a private hosted zone that the
--   specified VPC is associated with.
[$sel:hostedZoneId:HostedZoneSummary'] :: HostedZoneSummary -> ResourceId

-- | The name of the private hosted zone, such as <tt>example.com</tt>.
[$sel:name:HostedZoneSummary'] :: HostedZoneSummary -> Text

-- | The owner of a private hosted zone that the specified VPC is
--   associated with. The owner can be either an Amazon Web Services
--   account or an Amazon Web Services service.
[$sel:owner:HostedZoneSummary'] :: HostedZoneSummary -> HostedZoneOwner

-- | Create a value of <a>HostedZoneSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:HostedZoneSummary'</a>,
--   <a>hostedZoneSummary_hostedZoneId</a> - The Route 53 hosted zone ID of
--   a private hosted zone that the specified VPC is associated with.
--   
--   <a>$sel:name:HostedZoneSummary'</a>, <a>hostedZoneSummary_name</a> -
--   The name of the private hosted zone, such as <tt>example.com</tt>.
--   
--   <a>$sel:owner:HostedZoneSummary'</a>, <a>hostedZoneSummary_owner</a> -
--   The owner of a private hosted zone that the specified VPC is
--   associated with. The owner can be either an Amazon Web Services
--   account or an Amazon Web Services service.
newHostedZoneSummary :: ResourceId -> Text -> HostedZoneOwner -> HostedZoneSummary

-- | The Route 53 hosted zone ID of a private hosted zone that the
--   specified VPC is associated with.
hostedZoneSummary_hostedZoneId :: Lens' HostedZoneSummary ResourceId

-- | The name of the private hosted zone, such as <tt>example.com</tt>.
hostedZoneSummary_name :: Lens' HostedZoneSummary Text

-- | The owner of a private hosted zone that the specified VPC is
--   associated with. The owner can be either an Amazon Web Services
--   account or an Amazon Web Services service.
hostedZoneSummary_owner :: Lens' HostedZoneSummary HostedZoneOwner
instance GHC.Generics.Generic Network.AWS.Route53.Types.HostedZoneSummary.HostedZoneSummary
instance GHC.Show.Show Network.AWS.Route53.Types.HostedZoneSummary.HostedZoneSummary
instance GHC.Read.Read Network.AWS.Route53.Types.HostedZoneSummary.HostedZoneSummary
instance GHC.Classes.Eq Network.AWS.Route53.Types.HostedZoneSummary.HostedZoneSummary
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.HostedZoneSummary.HostedZoneSummary
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.HostedZoneSummary.HostedZoneSummary
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.HostedZoneSummary.HostedZoneSummary


module Network.AWS.Route53.Types.InsufficientDataHealthStatus
newtype InsufficientDataHealthStatus
InsufficientDataHealthStatus' :: Text -> InsufficientDataHealthStatus
[fromInsufficientDataHealthStatus] :: InsufficientDataHealthStatus -> Text
pattern InsufficientDataHealthStatus_Healthy :: InsufficientDataHealthStatus
pattern InsufficientDataHealthStatus_LastKnownStatus :: InsufficientDataHealthStatus
pattern InsufficientDataHealthStatus_Unhealthy :: InsufficientDataHealthStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance GHC.Generics.Generic Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance GHC.Classes.Ord Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance GHC.Classes.Eq Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance GHC.Read.Read Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus
instance GHC.Show.Show Network.AWS.Route53.Types.InsufficientDataHealthStatus.InsufficientDataHealthStatus


module Network.AWS.Route53.Types.HealthCheckConfig

-- | A complex type that contains information about the health check.
--   
--   <i>See:</i> <a>newHealthCheckConfig</a> smart constructor.
data HealthCheckConfig
HealthCheckConfig' :: Maybe Natural -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe (NonEmpty HealthCheckRegion) -> Maybe Text -> Maybe InsufficientDataHealthStatus -> Maybe AlarmIdentifier -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Natural -> Maybe Natural -> HealthCheckType -> HealthCheckConfig

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Amazon Route 53 to change the current status of the endpoint
--   from unhealthy to healthy or vice versa. For more information, see
--   <a>How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a>
--   in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
[$sel:failureThreshold:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Natural

-- | The IPv4 or IPv6 IP address of the endpoint that you want Amazon Route
--   53 to perform health checks on. If you don't specify a value for
--   <tt>IPAddress</tt>, Route 53 sends a DNS request to resolve the domain
--   name that you specify in <tt>FullyQualifiedDomainName</tt> at the
--   interval that you specify in <tt>RequestInterval</tt>. Using an IP
--   address returned by DNS, Route 53 then checks the health of the
--   endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance will never change.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
--   
--   When the value of <tt>Type</tt> is <tt>CALCULATED</tt> or
--   <tt>CLOUDWATCH_METRIC</tt>, omit <tt>IPAddress</tt>.
[$sel:iPAddress:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | Specify whether you want Amazon Route 53 to send the value of
--   <tt>FullyQualifiedDomainName</tt> to the endpoint in the
--   <tt>client_hello</tt> message during TLS negotiation. This allows the
--   endpoint to respond to <tt>HTTPS</tt> health check requests with the
--   applicable SSL/TLS certificate.
--   
--   Some endpoints require that <tt>HTTPS</tt> requests include the host
--   name in the <tt>client_hello</tt> message. If you don't enable SNI,
--   the status of the health check will be <tt>SSL alert
--   handshake_failure</tt>. A health check can also have that status for
--   other reasons. If SNI is enabled and you're still getting the error,
--   check the SSL/TLS configuration on your endpoint and confirm that your
--   certificate is valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
[$sel:enableSNI:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Bool

-- | Stops Route 53 from performing health checks. When you disable a
--   health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
[$sel:disabled:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Bool

-- | If the value of Type is <tt>HTTP_STR_MATCH</tt> or
--   <tt>HTTPS_STR_MATCH</tt>, the string that you want Amazon Route 53 to
--   search for in the response body from the specified resource. If the
--   string appears in the response body, Route 53 considers the resource
--   healthy.
--   
--   Route 53 considers case when searching for <tt>SearchString</tt> in
--   the response body.
[$sel:searchString:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | The number of child health checks that are associated with a
--   <tt>CALCULATED</tt> health check that Amazon Route 53 must consider
--   healthy for the <tt>CALCULATED</tt> health check to be considered
--   healthy. To specify the child health checks that you want to associate
--   with a <tt>CALCULATED</tt> health check, use the
--   <a>ChildHealthChecks</a> element.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
[$sel:healthThreshold:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Natural

-- | A complex type that contains one <tt>Region</tt> element for each
--   region from which you want Amazon Route 53 health checkers to check
--   the specified endpoint.
--   
--   If you don't specify any regions, Route 53 health checkers
--   automatically performs checks from all of the regions that are listed
--   under <b>Valid Values</b>.
--   
--   If you update a health check to remove a region that has been
--   performing health checks, Route 53 will briefly continue to perform
--   checks from that region to ensure that some health checkers are always
--   checking the endpoint (for example, if you replace three regions with
--   four different regions).
[$sel:regions:HealthCheckConfig'] :: HealthCheckConfig -> Maybe (NonEmpty HealthCheckRegion)

-- | The path, if any, that you want Amazon Route 53 to request when
--   performing health checks. The path can be any value for which your
--   endpoint will return an HTTP status code of 2xx or 3xx when the
--   endpoint is healthy, for example, the file
--   /docs/route53-health-check.html. You can also include query string
--   parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
[$sel:resourcePath:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | When CloudWatch has insufficient data about the metric to determine
--   the alarm state, the status that you want Amazon Route 53 to assign to
--   the health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time that CloudWatch had sufficient data to
--   determine the alarm state. For new health checks that have no last
--   known status, the default status for the health check is healthy.</li>
--   </ul>
[$sel:insufficientDataHealthStatus:HealthCheckConfig'] :: HealthCheckConfig -> Maybe InsufficientDataHealthStatus

-- | A complex type that identifies the CloudWatch alarm that you want
--   Amazon Route 53 health checkers to use to determine whether the
--   specified health check is healthy.
[$sel:alarmIdentifier:HealthCheckConfig'] :: HealthCheckConfig -> Maybe AlarmIdentifier

-- | Specify whether you want Amazon Route 53 to measure the latency
--   between health checkers in multiple Amazon Web Services regions and
--   your endpoint, and to display CloudWatch latency graphs on the
--   __Health Checks__ page in the Route 53 console.
--   
--   You can't change the value of <tt>MeasureLatency</tt> after you create
--   a health check.
[$sel:measureLatency:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Bool

-- | Specify whether you want Amazon Route 53 to invert the status of a
--   health check, for example, to consider a health check unhealthy when
--   it otherwise would be considered healthy.
[$sel:inverted:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Bool

-- | Amazon Route 53 behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Amazon Route 53 sends health check requests to the specified IPv4 or
--   IPv6 address and passes the value of <tt>FullyQualifiedDomainName</tt>
--   in the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the Host header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <tt>FullyQualifiedDomainName:Port</tt> to the endpoint in the
--   <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the preceding cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends a DNS request to the domain that you specify for
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify for
--   <tt>RequestInterval</tt>. Using an IPv4 address that DNS returns,
--   Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   us-east-2-www.example.com), not the name of the resource record sets
--   (www.example.com).
--   
--   In this configuration, if you create a health check for which the
--   value of <tt>FullyQualifiedDomainName</tt> matches the name of the
--   resource record sets and you then associate the health check with
--   those resource record sets, health check results will be
--   unpredictable.
--   
--   In addition, if the value that you specify for <tt>Type</tt> is
--   <tt>HTTP</tt>, <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or
--   <tt>HTTPS_STR_MATCH</tt>, Route 53 passes the value of
--   <tt>FullyQualifiedDomainName</tt> in the <tt>Host</tt> header, as it
--   does when you specify a value for <tt>IPAddress</tt>. If the value of
--   <tt>Type</tt> is <tt>TCP</tt>, Route 53 doesn't pass a <tt>Host</tt>
--   header.
[$sel:fullyQualifiedDomainName:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | (CALCULATED Health Checks Only) A complex type that contains one
--   <tt>ChildHealthCheck</tt> element for each health check that you want
--   to associate with a <tt>CALCULATED</tt> health check.
[$sel:childHealthChecks:HealthCheckConfig'] :: HealthCheckConfig -> Maybe [Text]

-- | The Amazon Resource Name (ARN) for the Route 53 Application Recovery
--   Controller routing control.
--   
--   For more information about Route 53 Application Recovery Controller,
--   see <a>Route 53 Application Recovery Controller Developer Guide.</a>.
[$sel:routingControlArn:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | The number of seconds between the time that Amazon Route 53 gets a
--   response from your endpoint and the time that it sends the next health
--   check request. Each Route 53 health checker makes requests at this
--   interval.
--   
--   You can't change the value of <tt>RequestInterval</tt> after you
--   create a health check.
--   
--   If you don't specify a value for <tt>RequestInterval</tt>, the default
--   value is <tt>30</tt> seconds.
[$sel:requestInterval:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Natural

-- | The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
[$sel:port:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Natural

-- | The type of health check that you want to create, which indicates how
--   Amazon Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify
--   <tt>HTTPS</tt> for the value of <tt>Type</tt>, the endpoint must
--   support TLS v1.0 or later.</li>
--   <li><b>HTTP_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an HTTP request and
--   searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>HTTPS_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an <tt>HTTPS</tt> request
--   and searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.</li>
--   <li><b>CLOUDWATCH_METRIC</b>: The health check is associated with a
--   CloudWatch alarm. If the state of the alarm is <tt>OK</tt>, the health
--   check is considered healthy. If the state is <tt>ALARM</tt>, the
--   health check is considered unhealthy. If CloudWatch doesn't have
--   sufficient data to determine whether the state is <tt>OK</tt> or
--   <tt>ALARM</tt>, the health check status depends on the setting for
--   <tt>InsufficientDataHealthStatus</tt>: <tt>Healthy</tt>,
--   <tt>Unhealthy</tt>, or <tt>LastKnownStatus</tt>.</li>
--   <li><b>CALCULATED</b>: For health checks that monitor the status of
--   other health checks, Route 53 adds up the number of health checks that
--   Route 53 health checkers consider to be healthy and compares that
--   number with the value of <tt>HealthThreshold</tt>.</li>
--   <li><b>RECOVERY_CONTROL</b>: The health check is assocated with a
--   Route53 Application Recovery Controller routing control. If the
--   routing control state is <tt>ON</tt>, the health check is considered
--   healthy. If the state is <tt>OFF</tt>, the health check is considered
--   unhealthy.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.
[$sel:type':HealthCheckConfig'] :: HealthCheckConfig -> HealthCheckType

-- | Create a value of <a>HealthCheckConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureThreshold:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_failureThreshold</a> - The number of consecutive
--   health checks that an endpoint must pass or fail for Amazon Route 53
--   to change the current status of the endpoint from unhealthy to healthy
--   or vice versa. For more information, see <a>How Amazon Route 53
--   Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route
--   53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
--   
--   <a>$sel:iPAddress:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_iPAddress</a> - The IPv4 or IPv6 IP address of
--   the endpoint that you want Amazon Route 53 to perform health checks
--   on. If you don't specify a value for <tt>IPAddress</tt>, Route 53
--   sends a DNS request to resolve the domain name that you specify in
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify in
--   <tt>RequestInterval</tt>. Using an IP address returned by DNS, Route
--   53 then checks the health of the endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance will never change.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
--   
--   When the value of <tt>Type</tt> is <tt>CALCULATED</tt> or
--   <tt>CLOUDWATCH_METRIC</tt>, omit <tt>IPAddress</tt>.
--   
--   <a>$sel:enableSNI:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_enableSNI</a> - Specify whether you want Amazon
--   Route 53 to send the value of <tt>FullyQualifiedDomainName</tt> to the
--   endpoint in the <tt>client_hello</tt> message during TLS negotiation.
--   This allows the endpoint to respond to <tt>HTTPS</tt> health check
--   requests with the applicable SSL/TLS certificate.
--   
--   Some endpoints require that <tt>HTTPS</tt> requests include the host
--   name in the <tt>client_hello</tt> message. If you don't enable SNI,
--   the status of the health check will be <tt>SSL alert
--   handshake_failure</tt>. A health check can also have that status for
--   other reasons. If SNI is enabled and you're still getting the error,
--   check the SSL/TLS configuration on your endpoint and confirm that your
--   certificate is valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
--   
--   <a>$sel:disabled:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_disabled</a> - Stops Route 53 from performing
--   health checks. When you disable a health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
--   
--   <a>$sel:searchString:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_searchString</a> - If the value of Type is
--   <tt>HTTP_STR_MATCH</tt> or <tt>HTTPS_STR_MATCH</tt>, the string that
--   you want Amazon Route 53 to search for in the response body from the
--   specified resource. If the string appears in the response body, Route
--   53 considers the resource healthy.
--   
--   Route 53 considers case when searching for <tt>SearchString</tt> in
--   the response body.
--   
--   <a>$sel:healthThreshold:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_healthThreshold</a> - The number of child health
--   checks that are associated with a <tt>CALCULATED</tt> health check
--   that Amazon Route 53 must consider healthy for the <tt>CALCULATED</tt>
--   health check to be considered healthy. To specify the child health
--   checks that you want to associate with a <tt>CALCULATED</tt> health
--   check, use the <a>ChildHealthChecks</a> element.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
--   
--   <a>$sel:regions:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_regions</a> - A complex type that contains one
--   <tt>Region</tt> element for each region from which you want Amazon
--   Route 53 health checkers to check the specified endpoint.
--   
--   If you don't specify any regions, Route 53 health checkers
--   automatically performs checks from all of the regions that are listed
--   under <b>Valid Values</b>.
--   
--   If you update a health check to remove a region that has been
--   performing health checks, Route 53 will briefly continue to perform
--   checks from that region to ensure that some health checkers are always
--   checking the endpoint (for example, if you replace three regions with
--   four different regions).
--   
--   <a>$sel:resourcePath:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_resourcePath</a> - The path, if any, that you
--   want Amazon Route 53 to request when performing health checks. The
--   path can be any value for which your endpoint will return an HTTP
--   status code of 2xx or 3xx when the endpoint is healthy, for example,
--   the file /docs/route53-health-check.html. You can also include query
--   string parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
--   
--   <a>$sel:insufficientDataHealthStatus:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_insufficientDataHealthStatus</a> - When
--   CloudWatch has insufficient data about the metric to determine the
--   alarm state, the status that you want Amazon Route 53 to assign to the
--   health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time that CloudWatch had sufficient data to
--   determine the alarm state. For new health checks that have no last
--   known status, the default status for the health check is healthy.</li>
--   </ul>
--   
--   <a>$sel:alarmIdentifier:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_alarmIdentifier</a> - A complex type that
--   identifies the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether the specified health check is
--   healthy.
--   
--   <a>$sel:measureLatency:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_measureLatency</a> - Specify whether you want
--   Amazon Route 53 to measure the latency between health checkers in
--   multiple Amazon Web Services regions and your endpoint, and to display
--   CloudWatch latency graphs on the __Health Checks__ page in the Route
--   53 console.
--   
--   You can't change the value of <tt>MeasureLatency</tt> after you create
--   a health check.
--   
--   <a>$sel:inverted:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_inverted</a> - Specify whether you want Amazon
--   Route 53 to invert the status of a health check, for example, to
--   consider a health check unhealthy when it otherwise would be
--   considered healthy.
--   
--   <a>$sel:fullyQualifiedDomainName:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_fullyQualifiedDomainName</a> - Amazon Route 53
--   behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Amazon Route 53 sends health check requests to the specified IPv4 or
--   IPv6 address and passes the value of <tt>FullyQualifiedDomainName</tt>
--   in the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the Host header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <tt>FullyQualifiedDomainName:Port</tt> to the endpoint in the
--   <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the preceding cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends a DNS request to the domain that you specify for
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify for
--   <tt>RequestInterval</tt>. Using an IPv4 address that DNS returns,
--   Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   us-east-2-www.example.com), not the name of the resource record sets
--   (www.example.com).
--   
--   In this configuration, if you create a health check for which the
--   value of <tt>FullyQualifiedDomainName</tt> matches the name of the
--   resource record sets and you then associate the health check with
--   those resource record sets, health check results will be
--   unpredictable.
--   
--   In addition, if the value that you specify for <tt>Type</tt> is
--   <tt>HTTP</tt>, <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or
--   <tt>HTTPS_STR_MATCH</tt>, Route 53 passes the value of
--   <tt>FullyQualifiedDomainName</tt> in the <tt>Host</tt> header, as it
--   does when you specify a value for <tt>IPAddress</tt>. If the value of
--   <tt>Type</tt> is <tt>TCP</tt>, Route 53 doesn't pass a <tt>Host</tt>
--   header.
--   
--   <a>$sel:childHealthChecks:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_childHealthChecks</a> - (CALCULATED Health Checks
--   Only) A complex type that contains one <tt>ChildHealthCheck</tt>
--   element for each health check that you want to associate with a
--   <tt>CALCULATED</tt> health check.
--   
--   <a>$sel:routingControlArn:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_routingControlArn</a> - The Amazon Resource Name
--   (ARN) for the Route 53 Application Recovery Controller routing
--   control.
--   
--   For more information about Route 53 Application Recovery Controller,
--   see <a>Route 53 Application Recovery Controller Developer Guide.</a>.
--   
--   <a>$sel:requestInterval:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_requestInterval</a> - The number of seconds
--   between the time that Amazon Route 53 gets a response from your
--   endpoint and the time that it sends the next health check request.
--   Each Route 53 health checker makes requests at this interval.
--   
--   You can't change the value of <tt>RequestInterval</tt> after you
--   create a health check.
--   
--   If you don't specify a value for <tt>RequestInterval</tt>, the default
--   value is <tt>30</tt> seconds.
--   
--   <a>$sel:port:HealthCheckConfig'</a>, <a>healthCheckConfig_port</a> -
--   The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
--   
--   <a>$sel:type':HealthCheckConfig'</a>, <a>healthCheckConfig_type</a> -
--   The type of health check that you want to create, which indicates how
--   Amazon Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify
--   <tt>HTTPS</tt> for the value of <tt>Type</tt>, the endpoint must
--   support TLS v1.0 or later.</li>
--   <li><b>HTTP_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an HTTP request and
--   searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>HTTPS_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an <tt>HTTPS</tt> request
--   and searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.</li>
--   <li><b>CLOUDWATCH_METRIC</b>: The health check is associated with a
--   CloudWatch alarm. If the state of the alarm is <tt>OK</tt>, the health
--   check is considered healthy. If the state is <tt>ALARM</tt>, the
--   health check is considered unhealthy. If CloudWatch doesn't have
--   sufficient data to determine whether the state is <tt>OK</tt> or
--   <tt>ALARM</tt>, the health check status depends on the setting for
--   <tt>InsufficientDataHealthStatus</tt>: <tt>Healthy</tt>,
--   <tt>Unhealthy</tt>, or <tt>LastKnownStatus</tt>.</li>
--   <li><b>CALCULATED</b>: For health checks that monitor the status of
--   other health checks, Route 53 adds up the number of health checks that
--   Route 53 health checkers consider to be healthy and compares that
--   number with the value of <tt>HealthThreshold</tt>.</li>
--   <li><b>RECOVERY_CONTROL</b>: The health check is assocated with a
--   Route53 Application Recovery Controller routing control. If the
--   routing control state is <tt>ON</tt>, the health check is considered
--   healthy. If the state is <tt>OFF</tt>, the health check is considered
--   unhealthy.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.
newHealthCheckConfig :: HealthCheckType -> HealthCheckConfig

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Amazon Route 53 to change the current status of the endpoint
--   from unhealthy to healthy or vice versa. For more information, see
--   <a>How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a>
--   in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
healthCheckConfig_failureThreshold :: Lens' HealthCheckConfig (Maybe Natural)

-- | The IPv4 or IPv6 IP address of the endpoint that you want Amazon Route
--   53 to perform health checks on. If you don't specify a value for
--   <tt>IPAddress</tt>, Route 53 sends a DNS request to resolve the domain
--   name that you specify in <tt>FullyQualifiedDomainName</tt> at the
--   interval that you specify in <tt>RequestInterval</tt>. Using an IP
--   address returned by DNS, Route 53 then checks the health of the
--   endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance will never change.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
--   
--   When the value of <tt>Type</tt> is <tt>CALCULATED</tt> or
--   <tt>CLOUDWATCH_METRIC</tt>, omit <tt>IPAddress</tt>.
healthCheckConfig_iPAddress :: Lens' HealthCheckConfig (Maybe Text)

-- | Specify whether you want Amazon Route 53 to send the value of
--   <tt>FullyQualifiedDomainName</tt> to the endpoint in the
--   <tt>client_hello</tt> message during TLS negotiation. This allows the
--   endpoint to respond to <tt>HTTPS</tt> health check requests with the
--   applicable SSL/TLS certificate.
--   
--   Some endpoints require that <tt>HTTPS</tt> requests include the host
--   name in the <tt>client_hello</tt> message. If you don't enable SNI,
--   the status of the health check will be <tt>SSL alert
--   handshake_failure</tt>. A health check can also have that status for
--   other reasons. If SNI is enabled and you're still getting the error,
--   check the SSL/TLS configuration on your endpoint and confirm that your
--   certificate is valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
healthCheckConfig_enableSNI :: Lens' HealthCheckConfig (Maybe Bool)

-- | Stops Route 53 from performing health checks. When you disable a
--   health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
healthCheckConfig_disabled :: Lens' HealthCheckConfig (Maybe Bool)

-- | If the value of Type is <tt>HTTP_STR_MATCH</tt> or
--   <tt>HTTPS_STR_MATCH</tt>, the string that you want Amazon Route 53 to
--   search for in the response body from the specified resource. If the
--   string appears in the response body, Route 53 considers the resource
--   healthy.
--   
--   Route 53 considers case when searching for <tt>SearchString</tt> in
--   the response body.
healthCheckConfig_searchString :: Lens' HealthCheckConfig (Maybe Text)

-- | The number of child health checks that are associated with a
--   <tt>CALCULATED</tt> health check that Amazon Route 53 must consider
--   healthy for the <tt>CALCULATED</tt> health check to be considered
--   healthy. To specify the child health checks that you want to associate
--   with a <tt>CALCULATED</tt> health check, use the
--   <a>ChildHealthChecks</a> element.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
healthCheckConfig_healthThreshold :: Lens' HealthCheckConfig (Maybe Natural)

-- | A complex type that contains one <tt>Region</tt> element for each
--   region from which you want Amazon Route 53 health checkers to check
--   the specified endpoint.
--   
--   If you don't specify any regions, Route 53 health checkers
--   automatically performs checks from all of the regions that are listed
--   under <b>Valid Values</b>.
--   
--   If you update a health check to remove a region that has been
--   performing health checks, Route 53 will briefly continue to perform
--   checks from that region to ensure that some health checkers are always
--   checking the endpoint (for example, if you replace three regions with
--   four different regions).
healthCheckConfig_regions :: Lens' HealthCheckConfig (Maybe (NonEmpty HealthCheckRegion))

-- | The path, if any, that you want Amazon Route 53 to request when
--   performing health checks. The path can be any value for which your
--   endpoint will return an HTTP status code of 2xx or 3xx when the
--   endpoint is healthy, for example, the file
--   /docs/route53-health-check.html. You can also include query string
--   parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
healthCheckConfig_resourcePath :: Lens' HealthCheckConfig (Maybe Text)

-- | When CloudWatch has insufficient data about the metric to determine
--   the alarm state, the status that you want Amazon Route 53 to assign to
--   the health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time that CloudWatch had sufficient data to
--   determine the alarm state. For new health checks that have no last
--   known status, the default status for the health check is healthy.</li>
--   </ul>
healthCheckConfig_insufficientDataHealthStatus :: Lens' HealthCheckConfig (Maybe InsufficientDataHealthStatus)

-- | A complex type that identifies the CloudWatch alarm that you want
--   Amazon Route 53 health checkers to use to determine whether the
--   specified health check is healthy.
healthCheckConfig_alarmIdentifier :: Lens' HealthCheckConfig (Maybe AlarmIdentifier)

-- | Specify whether you want Amazon Route 53 to measure the latency
--   between health checkers in multiple Amazon Web Services regions and
--   your endpoint, and to display CloudWatch latency graphs on the
--   __Health Checks__ page in the Route 53 console.
--   
--   You can't change the value of <tt>MeasureLatency</tt> after you create
--   a health check.
healthCheckConfig_measureLatency :: Lens' HealthCheckConfig (Maybe Bool)

-- | Specify whether you want Amazon Route 53 to invert the status of a
--   health check, for example, to consider a health check unhealthy when
--   it otherwise would be considered healthy.
healthCheckConfig_inverted :: Lens' HealthCheckConfig (Maybe Bool)

-- | Amazon Route 53 behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Amazon Route 53 sends health check requests to the specified IPv4 or
--   IPv6 address and passes the value of <tt>FullyQualifiedDomainName</tt>
--   in the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the Host header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <tt>FullyQualifiedDomainName:Port</tt> to the endpoint in the
--   <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the preceding cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends a DNS request to the domain that you specify for
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify for
--   <tt>RequestInterval</tt>. Using an IPv4 address that DNS returns,
--   Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   us-east-2-www.example.com), not the name of the resource record sets
--   (www.example.com).
--   
--   In this configuration, if you create a health check for which the
--   value of <tt>FullyQualifiedDomainName</tt> matches the name of the
--   resource record sets and you then associate the health check with
--   those resource record sets, health check results will be
--   unpredictable.
--   
--   In addition, if the value that you specify for <tt>Type</tt> is
--   <tt>HTTP</tt>, <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or
--   <tt>HTTPS_STR_MATCH</tt>, Route 53 passes the value of
--   <tt>FullyQualifiedDomainName</tt> in the <tt>Host</tt> header, as it
--   does when you specify a value for <tt>IPAddress</tt>. If the value of
--   <tt>Type</tt> is <tt>TCP</tt>, Route 53 doesn't pass a <tt>Host</tt>
--   header.
healthCheckConfig_fullyQualifiedDomainName :: Lens' HealthCheckConfig (Maybe Text)

-- | (CALCULATED Health Checks Only) A complex type that contains one
--   <tt>ChildHealthCheck</tt> element for each health check that you want
--   to associate with a <tt>CALCULATED</tt> health check.
healthCheckConfig_childHealthChecks :: Lens' HealthCheckConfig (Maybe [Text])

-- | The Amazon Resource Name (ARN) for the Route 53 Application Recovery
--   Controller routing control.
--   
--   For more information about Route 53 Application Recovery Controller,
--   see <a>Route 53 Application Recovery Controller Developer Guide.</a>.
healthCheckConfig_routingControlArn :: Lens' HealthCheckConfig (Maybe Text)

-- | The number of seconds between the time that Amazon Route 53 gets a
--   response from your endpoint and the time that it sends the next health
--   check request. Each Route 53 health checker makes requests at this
--   interval.
--   
--   You can't change the value of <tt>RequestInterval</tt> after you
--   create a health check.
--   
--   If you don't specify a value for <tt>RequestInterval</tt>, the default
--   value is <tt>30</tt> seconds.
healthCheckConfig_requestInterval :: Lens' HealthCheckConfig (Maybe Natural)

-- | The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
healthCheckConfig_port :: Lens' HealthCheckConfig (Maybe Natural)

-- | The type of health check that you want to create, which indicates how
--   Amazon Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify
--   <tt>HTTPS</tt> for the value of <tt>Type</tt>, the endpoint must
--   support TLS v1.0 or later.</li>
--   <li><b>HTTP_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an HTTP request and
--   searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>HTTPS_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an <tt>HTTPS</tt> request
--   and searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.</li>
--   <li><b>CLOUDWATCH_METRIC</b>: The health check is associated with a
--   CloudWatch alarm. If the state of the alarm is <tt>OK</tt>, the health
--   check is considered healthy. If the state is <tt>ALARM</tt>, the
--   health check is considered unhealthy. If CloudWatch doesn't have
--   sufficient data to determine whether the state is <tt>OK</tt> or
--   <tt>ALARM</tt>, the health check status depends on the setting for
--   <tt>InsufficientDataHealthStatus</tt>: <tt>Healthy</tt>,
--   <tt>Unhealthy</tt>, or <tt>LastKnownStatus</tt>.</li>
--   <li><b>CALCULATED</b>: For health checks that monitor the status of
--   other health checks, Route 53 adds up the number of health checks that
--   Route 53 health checkers consider to be healthy and compares that
--   number with the value of <tt>HealthThreshold</tt>.</li>
--   <li><b>RECOVERY_CONTROL</b>: The health check is assocated with a
--   Route53 Application Recovery Controller routing control. If the
--   routing control state is <tt>ON</tt>, the health check is considered
--   healthy. If the state is <tt>OFF</tt>, the health check is considered
--   unhealthy.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.
healthCheckConfig_type :: Lens' HealthCheckConfig HealthCheckType
instance GHC.Generics.Generic Network.AWS.Route53.Types.HealthCheckConfig.HealthCheckConfig
instance GHC.Show.Show Network.AWS.Route53.Types.HealthCheckConfig.HealthCheckConfig
instance GHC.Read.Read Network.AWS.Route53.Types.HealthCheckConfig.HealthCheckConfig
instance GHC.Classes.Eq Network.AWS.Route53.Types.HealthCheckConfig.HealthCheckConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.HealthCheckConfig.HealthCheckConfig
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.HealthCheckConfig.HealthCheckConfig
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.HealthCheckConfig.HealthCheckConfig
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.HealthCheckConfig.HealthCheckConfig


module Network.AWS.Route53.Types.KeySigningKey

-- | A key-signing key (KSK) is a complex type that represents a
--   public/private key pair. The private key is used to generate a digital
--   signature for the zone signing key (ZSK). The public key is stored in
--   the DNS and is used to authenticate the ZSK. A KSK is always
--   associated with a hosted zone; it cannot exist by itself.
--   
--   <i>See:</i> <a>newKeySigningKey</a> smart constructor.
data KeySigningKey
KeySigningKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ISO8601 -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> KeySigningKey

-- | A string that represents the current key-signing key (KSK) status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The KSK is being used for signing.</li>
--   <li><i>INACTIVE</i> The KSK is not being used for signing.</li>
--   <li><i>DELETING</i> The KSK is in the process of being deleted.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with the KSK that requires
--   you to take action to resolve. For example, the customer managed
--   customer master key (CMK) might have been deleted, or the permissions
--   for the customer managed CMK might have been changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including actions
--   that involve this KSK, you must correct the problem. For example, you
--   may need to activate or deactivate the KSK.</li>
--   </ul>
[$sel:status:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | A string used to represent the signing algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.1</a>.
[$sel:signingAlgorithmMnemonic:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | A string used to represent the delegation signer digest algorithm.
--   This value must follow the guidelines provided by <a>RFC-8624 Section
--   3.3</a>.
[$sel:digestAlgorithmMnemonic:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | The last time that the key-signing key (KSK) was changed.
[$sel:lastModifiedDate:KeySigningKey'] :: KeySigningKey -> Maybe ISO8601

-- | An integer used to identify the DNSSEC record for the domain name. The
--   process used to calculate the value is described in <a>RFC-4034
--   Appendix B</a>.
[$sel:keyTag:KeySigningKey'] :: KeySigningKey -> Maybe Natural

-- | A string that represents a DNSKEY record.
[$sel:dNSKEYRecord:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | The public key, represented as a Base64 encoding, as required by
--   <a>RFC-4034 Page 5</a>.
[$sel:publicKey:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | An integer used to represent the signing algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.1</a>.
[$sel:signingAlgorithmType:KeySigningKey'] :: KeySigningKey -> Maybe Int

-- | The date when the key-signing key (KSK) was created.
[$sel:createdDate:KeySigningKey'] :: KeySigningKey -> Maybe ISO8601

-- | An integer that specifies how the key is used. For key-signing key
--   (KSK), this value is always 257.
[$sel:flag:KeySigningKey'] :: KeySigningKey -> Maybe Int

-- | An integer used to represent the delegation signer digest algorithm.
--   This value must follow the guidelines provided by <a>RFC-8624 Section
--   3.3</a>.
[$sel:digestAlgorithmType:KeySigningKey'] :: KeySigningKey -> Maybe Int

-- | The status message provided for the following key-signing key (KSK)
--   statuses: <tt>ACTION_NEEDED</tt> or <tt>INTERNAL_FAILURE</tt>. The
--   status message includes information about what the problem might be
--   and steps that you can take to correct the issue.
[$sel:statusMessage:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
[$sel:name:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | A string that represents a delegation signer (DS) record.
[$sel:dSRecord:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | The Amazon resource name (ARN) used to identify the customer managed
--   customer master key (CMK) in Key Management Service (KMS). The
--   <tt>KmsArn</tt> must be unique for each key-signing key (KSK) in a
--   single hosted zone.
--   
--   You must configure the CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with the customer managed CMK in
--   KMS, see <a>Key Management Service concepts</a>.
[$sel:kmsArn:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | A cryptographic digest of a DNSKEY resource record (RR). DNSKEY
--   records are used to publish the public key that resolvers can use to
--   verify DNSSEC signatures that are used to secure certain kinds of
--   information provided by the DNS system.
[$sel:digestValue:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | Create a value of <a>KeySigningKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:KeySigningKey'</a>, <a>keySigningKey_status</a> - A
--   string that represents the current key-signing key (KSK) status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The KSK is being used for signing.</li>
--   <li><i>INACTIVE</i> The KSK is not being used for signing.</li>
--   <li><i>DELETING</i> The KSK is in the process of being deleted.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with the KSK that requires
--   you to take action to resolve. For example, the customer managed
--   customer master key (CMK) might have been deleted, or the permissions
--   for the customer managed CMK might have been changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including actions
--   that involve this KSK, you must correct the problem. For example, you
--   may need to activate or deactivate the KSK.</li>
--   </ul>
--   
--   <a>$sel:signingAlgorithmMnemonic:KeySigningKey'</a>,
--   <a>keySigningKey_signingAlgorithmMnemonic</a> - A string used to
--   represent the signing algorithm. This value must follow the guidelines
--   provided by <a>RFC-8624 Section 3.1</a>.
--   
--   <a>$sel:digestAlgorithmMnemonic:KeySigningKey'</a>,
--   <a>keySigningKey_digestAlgorithmMnemonic</a> - A string used to
--   represent the delegation signer digest algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.3</a>.
--   
--   <a>$sel:lastModifiedDate:KeySigningKey'</a>,
--   <a>keySigningKey_lastModifiedDate</a> - The last time that the
--   key-signing key (KSK) was changed.
--   
--   <a>$sel:keyTag:KeySigningKey'</a>, <a>keySigningKey_keyTag</a> - An
--   integer used to identify the DNSSEC record for the domain name. The
--   process used to calculate the value is described in <a>RFC-4034
--   Appendix B</a>.
--   
--   <a>$sel:dNSKEYRecord:KeySigningKey'</a>,
--   <a>keySigningKey_dNSKEYRecord</a> - A string that represents a DNSKEY
--   record.
--   
--   <a>$sel:publicKey:KeySigningKey'</a>, <a>keySigningKey_publicKey</a> -
--   The public key, represented as a Base64 encoding, as required by
--   <a>RFC-4034 Page 5</a>.
--   
--   <a>$sel:signingAlgorithmType:KeySigningKey'</a>,
--   <a>keySigningKey_signingAlgorithmType</a> - An integer used to
--   represent the signing algorithm. This value must follow the guidelines
--   provided by <a>RFC-8624 Section 3.1</a>.
--   
--   <a>$sel:createdDate:KeySigningKey'</a>,
--   <a>keySigningKey_createdDate</a> - The date when the key-signing key
--   (KSK) was created.
--   
--   <a>$sel:flag:KeySigningKey'</a>, <a>keySigningKey_flag</a> - An
--   integer that specifies how the key is used. For key-signing key (KSK),
--   this value is always 257.
--   
--   <a>$sel:digestAlgorithmType:KeySigningKey'</a>,
--   <a>keySigningKey_digestAlgorithmType</a> - An integer used to
--   represent the delegation signer digest algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.3</a>.
--   
--   <a>$sel:statusMessage:KeySigningKey'</a>,
--   <a>keySigningKey_statusMessage</a> - The status message provided for
--   the following key-signing key (KSK) statuses: <tt>ACTION_NEEDED</tt>
--   or <tt>INTERNAL_FAILURE</tt>. The status message includes information
--   about what the problem might be and steps that you can take to correct
--   the issue.
--   
--   <a>$sel:name:KeySigningKey'</a>, <a>keySigningKey_name</a> - A string
--   used to identify a key-signing key (KSK). <tt>Name</tt> can include
--   numbers, letters, and underscores (_). <tt>Name</tt> must be unique
--   for each key-signing key in the same hosted zone.
--   
--   <a>$sel:dSRecord:KeySigningKey'</a>, <a>keySigningKey_dSRecord</a> - A
--   string that represents a delegation signer (DS) record.
--   
--   <a>$sel:kmsArn:KeySigningKey'</a>, <a>keySigningKey_kmsArn</a> - The
--   Amazon resource name (ARN) used to identify the customer managed
--   customer master key (CMK) in Key Management Service (KMS). The
--   <tt>KmsArn</tt> must be unique for each key-signing key (KSK) in a
--   single hosted zone.
--   
--   You must configure the CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with the customer managed CMK in
--   KMS, see <a>Key Management Service concepts</a>.
--   
--   <a>$sel:digestValue:KeySigningKey'</a>,
--   <a>keySigningKey_digestValue</a> - A cryptographic digest of a DNSKEY
--   resource record (RR). DNSKEY records are used to publish the public
--   key that resolvers can use to verify DNSSEC signatures that are used
--   to secure certain kinds of information provided by the DNS system.
newKeySigningKey :: KeySigningKey

-- | A string that represents the current key-signing key (KSK) status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The KSK is being used for signing.</li>
--   <li><i>INACTIVE</i> The KSK is not being used for signing.</li>
--   <li><i>DELETING</i> The KSK is in the process of being deleted.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with the KSK that requires
--   you to take action to resolve. For example, the customer managed
--   customer master key (CMK) might have been deleted, or the permissions
--   for the customer managed CMK might have been changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including actions
--   that involve this KSK, you must correct the problem. For example, you
--   may need to activate or deactivate the KSK.</li>
--   </ul>
keySigningKey_status :: Lens' KeySigningKey (Maybe Text)

-- | A string used to represent the signing algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.1</a>.
keySigningKey_signingAlgorithmMnemonic :: Lens' KeySigningKey (Maybe Text)

-- | A string used to represent the delegation signer digest algorithm.
--   This value must follow the guidelines provided by <a>RFC-8624 Section
--   3.3</a>.
keySigningKey_digestAlgorithmMnemonic :: Lens' KeySigningKey (Maybe Text)

-- | The last time that the key-signing key (KSK) was changed.
keySigningKey_lastModifiedDate :: Lens' KeySigningKey (Maybe UTCTime)

-- | An integer used to identify the DNSSEC record for the domain name. The
--   process used to calculate the value is described in <a>RFC-4034
--   Appendix B</a>.
keySigningKey_keyTag :: Lens' KeySigningKey (Maybe Natural)

-- | A string that represents a DNSKEY record.
keySigningKey_dNSKEYRecord :: Lens' KeySigningKey (Maybe Text)

-- | The public key, represented as a Base64 encoding, as required by
--   <a>RFC-4034 Page 5</a>.
keySigningKey_publicKey :: Lens' KeySigningKey (Maybe Text)

-- | An integer used to represent the signing algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.1</a>.
keySigningKey_signingAlgorithmType :: Lens' KeySigningKey (Maybe Int)

-- | The date when the key-signing key (KSK) was created.
keySigningKey_createdDate :: Lens' KeySigningKey (Maybe UTCTime)

-- | An integer that specifies how the key is used. For key-signing key
--   (KSK), this value is always 257.
keySigningKey_flag :: Lens' KeySigningKey (Maybe Int)

-- | An integer used to represent the delegation signer digest algorithm.
--   This value must follow the guidelines provided by <a>RFC-8624 Section
--   3.3</a>.
keySigningKey_digestAlgorithmType :: Lens' KeySigningKey (Maybe Int)

-- | The status message provided for the following key-signing key (KSK)
--   statuses: <tt>ACTION_NEEDED</tt> or <tt>INTERNAL_FAILURE</tt>. The
--   status message includes information about what the problem might be
--   and steps that you can take to correct the issue.
keySigningKey_statusMessage :: Lens' KeySigningKey (Maybe Text)

-- | A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
keySigningKey_name :: Lens' KeySigningKey (Maybe Text)

-- | A string that represents a delegation signer (DS) record.
keySigningKey_dSRecord :: Lens' KeySigningKey (Maybe Text)

-- | The Amazon resource name (ARN) used to identify the customer managed
--   customer master key (CMK) in Key Management Service (KMS). The
--   <tt>KmsArn</tt> must be unique for each key-signing key (KSK) in a
--   single hosted zone.
--   
--   You must configure the CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with the customer managed CMK in
--   KMS, see <a>Key Management Service concepts</a>.
keySigningKey_kmsArn :: Lens' KeySigningKey (Maybe Text)

-- | A cryptographic digest of a DNSKEY resource record (RR). DNSKEY
--   records are used to publish the public key that resolvers can use to
--   verify DNSSEC signatures that are used to secure certain kinds of
--   information provided by the DNS system.
keySigningKey_digestValue :: Lens' KeySigningKey (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53.Types.KeySigningKey.KeySigningKey
instance GHC.Show.Show Network.AWS.Route53.Types.KeySigningKey.KeySigningKey
instance GHC.Read.Read Network.AWS.Route53.Types.KeySigningKey.KeySigningKey
instance GHC.Classes.Eq Network.AWS.Route53.Types.KeySigningKey.KeySigningKey
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.KeySigningKey.KeySigningKey
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.KeySigningKey.KeySigningKey
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.KeySigningKey.KeySigningKey


module Network.AWS.Route53.Types.LinkedService

-- | If a health check or hosted zone was created by another service,
--   <tt>LinkedService</tt> is a complex type that describes the service
--   that created the resource. When a resource is created by another
--   service, you can't edit or delete it using Amazon Route 53.
--   
--   <i>See:</i> <a>newLinkedService</a> smart constructor.
data LinkedService
LinkedService' :: Maybe Text -> Maybe Text -> LinkedService

-- | If the health check or hosted zone was created by another service, the
--   service that created the resource. When a resource is created by
--   another service, you can't edit or delete it using Amazon Route 53.
[$sel:servicePrincipal:LinkedService'] :: LinkedService -> Maybe Text

-- | If the health check or hosted zone was created by another service, an
--   optional description that can be provided by the other service. When a
--   resource is created by another service, you can't edit or delete it
--   using Amazon Route 53.
[$sel:description:LinkedService'] :: LinkedService -> Maybe Text

-- | Create a value of <a>LinkedService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:servicePrincipal:LinkedService'</a>,
--   <a>linkedService_servicePrincipal</a> - If the health check or hosted
--   zone was created by another service, the service that created the
--   resource. When a resource is created by another service, you can't
--   edit or delete it using Amazon Route 53.
--   
--   <a>$sel:description:LinkedService'</a>,
--   <a>linkedService_description</a> - If the health check or hosted zone
--   was created by another service, an optional description that can be
--   provided by the other service. When a resource is created by another
--   service, you can't edit or delete it using Amazon Route 53.
newLinkedService :: LinkedService

-- | If the health check or hosted zone was created by another service, the
--   service that created the resource. When a resource is created by
--   another service, you can't edit or delete it using Amazon Route 53.
linkedService_servicePrincipal :: Lens' LinkedService (Maybe Text)

-- | If the health check or hosted zone was created by another service, an
--   optional description that can be provided by the other service. When a
--   resource is created by another service, you can't edit or delete it
--   using Amazon Route 53.
linkedService_description :: Lens' LinkedService (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53.Types.LinkedService.LinkedService
instance GHC.Show.Show Network.AWS.Route53.Types.LinkedService.LinkedService
instance GHC.Read.Read Network.AWS.Route53.Types.LinkedService.LinkedService
instance GHC.Classes.Eq Network.AWS.Route53.Types.LinkedService.LinkedService
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.LinkedService.LinkedService
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.LinkedService.LinkedService
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.LinkedService.LinkedService


module Network.AWS.Route53.Types.HostedZone

-- | A complex type that contains general information about the hosted
--   zone.
--   
--   <i>See:</i> <a>newHostedZone</a> smart constructor.
data HostedZone
HostedZone' :: Maybe LinkedService -> Maybe HostedZoneConfig -> Maybe Integer -> ResourceId -> Text -> Text -> HostedZone

-- | If the hosted zone was created by another service, the service that
--   created the hosted zone. When a hosted zone is created by another
--   service, you can't edit or delete it using Route 53.
[$sel:linkedService:HostedZone'] :: HostedZone -> Maybe LinkedService

-- | A complex type that includes the <tt>Comment</tt> and
--   <tt>PrivateZone</tt> elements. If you omitted the
--   <tt>HostedZoneConfig</tt> and <tt>Comment</tt> elements from the
--   request, the <tt>Config</tt> and <tt>Comment</tt> elements don't
--   appear in the response.
[$sel:config:HostedZone'] :: HostedZone -> Maybe HostedZoneConfig

-- | The number of resource record sets in the hosted zone.
[$sel:resourceRecordSetCount:HostedZone'] :: HostedZone -> Maybe Integer

-- | The ID that Amazon Route 53 assigned to the hosted zone when you
--   created it.
[$sel:id:HostedZone'] :: HostedZone -> ResourceId

-- | The name of the domain. For public hosted zones, this is the name that
--   you have registered with your DNS registrar.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>CreateHostedZone</a>.
[$sel:name:HostedZone'] :: HostedZone -> Text

-- | The value that you specified for <tt>CallerReference</tt> when you
--   created the hosted zone.
[$sel:callerReference:HostedZone'] :: HostedZone -> Text

-- | Create a value of <a>HostedZone</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkedService:HostedZone'</a>, <a>hostedZone_linkedService</a>
--   - If the hosted zone was created by another service, the service that
--   created the hosted zone. When a hosted zone is created by another
--   service, you can't edit or delete it using Route 53.
--   
--   <a>$sel:config:HostedZone'</a>, <a>hostedZone_config</a> - A complex
--   type that includes the <tt>Comment</tt> and <tt>PrivateZone</tt>
--   elements. If you omitted the <tt>HostedZoneConfig</tt> and
--   <tt>Comment</tt> elements from the request, the <tt>Config</tt> and
--   <tt>Comment</tt> elements don't appear in the response.
--   
--   <a>$sel:resourceRecordSetCount:HostedZone'</a>,
--   <a>hostedZone_resourceRecordSetCount</a> - The number of resource
--   record sets in the hosted zone.
--   
--   <a>$sel:id:HostedZone'</a>, <a>hostedZone_id</a> - The ID that Amazon
--   Route 53 assigned to the hosted zone when you created it.
--   
--   <a>$sel:name:HostedZone'</a>, <a>hostedZone_name</a> - The name of the
--   domain. For public hosted zones, this is the name that you have
--   registered with your DNS registrar.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>CreateHostedZone</a>.
--   
--   <a>$sel:callerReference:HostedZone'</a>,
--   <a>hostedZone_callerReference</a> - The value that you specified for
--   <tt>CallerReference</tt> when you created the hosted zone.
newHostedZone :: ResourceId -> Text -> Text -> HostedZone

-- | If the hosted zone was created by another service, the service that
--   created the hosted zone. When a hosted zone is created by another
--   service, you can't edit or delete it using Route 53.
hostedZone_linkedService :: Lens' HostedZone (Maybe LinkedService)

-- | A complex type that includes the <tt>Comment</tt> and
--   <tt>PrivateZone</tt> elements. If you omitted the
--   <tt>HostedZoneConfig</tt> and <tt>Comment</tt> elements from the
--   request, the <tt>Config</tt> and <tt>Comment</tt> elements don't
--   appear in the response.
hostedZone_config :: Lens' HostedZone (Maybe HostedZoneConfig)

-- | The number of resource record sets in the hosted zone.
hostedZone_resourceRecordSetCount :: Lens' HostedZone (Maybe Integer)

-- | The ID that Amazon Route 53 assigned to the hosted zone when you
--   created it.
hostedZone_id :: Lens' HostedZone ResourceId

-- | The name of the domain. For public hosted zones, this is the name that
--   you have registered with your DNS registrar.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>CreateHostedZone</a>.
hostedZone_name :: Lens' HostedZone Text

-- | The value that you specified for <tt>CallerReference</tt> when you
--   created the hosted zone.
hostedZone_callerReference :: Lens' HostedZone Text
instance GHC.Generics.Generic Network.AWS.Route53.Types.HostedZone.HostedZone
instance GHC.Show.Show Network.AWS.Route53.Types.HostedZone.HostedZone
instance GHC.Read.Read Network.AWS.Route53.Types.HostedZone.HostedZone
instance GHC.Classes.Eq Network.AWS.Route53.Types.HostedZone.HostedZone
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.HostedZone.HostedZone
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.HostedZone.HostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.HostedZone.HostedZone


module Network.AWS.Route53.Types.QueryLoggingConfig

-- | A complex type that contains information about a configuration for DNS
--   query logging.
--   
--   <i>See:</i> <a>newQueryLoggingConfig</a> smart constructor.
data QueryLoggingConfig
QueryLoggingConfig' :: Text -> ResourceId -> Text -> QueryLoggingConfig

-- | The ID for a configuration for DNS query logging.
[$sel:id:QueryLoggingConfig'] :: QueryLoggingConfig -> Text

-- | The ID of the hosted zone that CloudWatch Logs is logging queries for.
[$sel:hostedZoneId:QueryLoggingConfig'] :: QueryLoggingConfig -> ResourceId

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group that
--   Amazon Route 53 is publishing logs to.
[$sel:cloudWatchLogsLogGroupArn:QueryLoggingConfig'] :: QueryLoggingConfig -> Text

-- | Create a value of <a>QueryLoggingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:QueryLoggingConfig'</a>, <a>queryLoggingConfig_id</a> - The
--   ID for a configuration for DNS query logging.
--   
--   <a>$sel:hostedZoneId:QueryLoggingConfig'</a>,
--   <a>queryLoggingConfig_hostedZoneId</a> - The ID of the hosted zone
--   that CloudWatch Logs is logging queries for.
--   
--   <a>$sel:cloudWatchLogsLogGroupArn:QueryLoggingConfig'</a>,
--   <a>queryLoggingConfig_cloudWatchLogsLogGroupArn</a> - The Amazon
--   Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route
--   53 is publishing logs to.
newQueryLoggingConfig :: Text -> ResourceId -> Text -> QueryLoggingConfig

-- | The ID for a configuration for DNS query logging.
queryLoggingConfig_id :: Lens' QueryLoggingConfig Text

-- | The ID of the hosted zone that CloudWatch Logs is logging queries for.
queryLoggingConfig_hostedZoneId :: Lens' QueryLoggingConfig ResourceId

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group that
--   Amazon Route 53 is publishing logs to.
queryLoggingConfig_cloudWatchLogsLogGroupArn :: Lens' QueryLoggingConfig Text
instance GHC.Generics.Generic Network.AWS.Route53.Types.QueryLoggingConfig.QueryLoggingConfig
instance GHC.Show.Show Network.AWS.Route53.Types.QueryLoggingConfig.QueryLoggingConfig
instance GHC.Read.Read Network.AWS.Route53.Types.QueryLoggingConfig.QueryLoggingConfig
instance GHC.Classes.Eq Network.AWS.Route53.Types.QueryLoggingConfig.QueryLoggingConfig
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.QueryLoggingConfig.QueryLoggingConfig
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.QueryLoggingConfig.QueryLoggingConfig
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.QueryLoggingConfig.QueryLoggingConfig


module Network.AWS.Route53.Types.RRType
newtype RRType
RRType' :: Text -> RRType
[fromRRType] :: RRType -> Text
pattern RRType_A :: RRType
pattern RRType_AAAA :: RRType
pattern RRType_CAA :: RRType
pattern RRType_CNAME :: RRType
pattern RRType_DS :: RRType
pattern RRType_MX :: RRType
pattern RRType_NAPTR :: RRType
pattern RRType_NS :: RRType
pattern RRType_PTR :: RRType
pattern RRType_SOA :: RRType
pattern RRType_SPF :: RRType
pattern RRType_SRV :: RRType
pattern RRType_TXT :: RRType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.RRType.RRType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.RRType.RRType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.RRType.RRType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.RRType.RRType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.RRType.RRType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.RRType.RRType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.RRType.RRType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.RRType.RRType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.RRType.RRType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.RRType.RRType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.RRType.RRType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.RRType.RRType
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.RRType.RRType
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.RRType.RRType
instance GHC.Generics.Generic Network.AWS.Route53.Types.RRType.RRType
instance GHC.Classes.Ord Network.AWS.Route53.Types.RRType.RRType
instance GHC.Classes.Eq Network.AWS.Route53.Types.RRType.RRType
instance GHC.Read.Read Network.AWS.Route53.Types.RRType.RRType
instance GHC.Show.Show Network.AWS.Route53.Types.RRType.RRType


module Network.AWS.Route53.Types.ResettableElementName
newtype ResettableElementName
ResettableElementName' :: Text -> ResettableElementName
[fromResettableElementName] :: ResettableElementName -> Text
pattern ResettableElementName_ChildHealthChecks :: ResettableElementName
pattern ResettableElementName_FullyQualifiedDomainName :: ResettableElementName
pattern ResettableElementName_Regions :: ResettableElementName
pattern ResettableElementName_ResourcePath :: ResettableElementName
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance GHC.Generics.Generic Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance GHC.Classes.Ord Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance GHC.Classes.Eq Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance GHC.Read.Read Network.AWS.Route53.Types.ResettableElementName.ResettableElementName
instance GHC.Show.Show Network.AWS.Route53.Types.ResettableElementName.ResettableElementName


module Network.AWS.Route53.Types.ResourceRecord

-- | Information specific to the resource record.
--   
--   If you're creating an alias resource record set, omit
--   <tt>ResourceRecord</tt>.
--   
--   <i>See:</i> <a>newResourceRecord</a> smart constructor.
data ResourceRecord
ResourceRecord' :: Text -> ResourceRecord

-- | The current or new DNS record value, not to exceed 4,000 characters.
--   In the case of a <tt>DELETE</tt> action, if the current value does not
--   match the actual value, an error is returned. For descriptions about
--   how to format <tt>Value</tt> for different record types, see
--   <a>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
--   
--   You can specify more than one value for all record types except
--   <tt>CNAME</tt> and <tt>SOA</tt>.
--   
--   If you're creating an alias resource record set, omit <tt>Value</tt>.
[$sel:value:ResourceRecord'] :: ResourceRecord -> Text

-- | Create a value of <a>ResourceRecord</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ResourceRecord'</a>, <a>resourceRecord_value</a> - The
--   current or new DNS record value, not to exceed 4,000 characters. In
--   the case of a <tt>DELETE</tt> action, if the current value does not
--   match the actual value, an error is returned. For descriptions about
--   how to format <tt>Value</tt> for different record types, see
--   <a>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
--   
--   You can specify more than one value for all record types except
--   <tt>CNAME</tt> and <tt>SOA</tt>.
--   
--   If you're creating an alias resource record set, omit <tt>Value</tt>.
newResourceRecord :: Text -> ResourceRecord

-- | The current or new DNS record value, not to exceed 4,000 characters.
--   In the case of a <tt>DELETE</tt> action, if the current value does not
--   match the actual value, an error is returned. For descriptions about
--   how to format <tt>Value</tt> for different record types, see
--   <a>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
--   
--   You can specify more than one value for all record types except
--   <tt>CNAME</tt> and <tt>SOA</tt>.
--   
--   If you're creating an alias resource record set, omit <tt>Value</tt>.
resourceRecord_value :: Lens' ResourceRecord Text
instance GHC.Generics.Generic Network.AWS.Route53.Types.ResourceRecord.ResourceRecord
instance GHC.Show.Show Network.AWS.Route53.Types.ResourceRecord.ResourceRecord
instance GHC.Read.Read Network.AWS.Route53.Types.ResourceRecord.ResourceRecord
instance GHC.Classes.Eq Network.AWS.Route53.Types.ResourceRecord.ResourceRecord
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.ResourceRecord.ResourceRecord
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ResourceRecord.ResourceRecord
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ResourceRecord.ResourceRecord
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.ResourceRecord.ResourceRecord


module Network.AWS.Route53.Types.ResourceRecordSetFailover
newtype ResourceRecordSetFailover
ResourceRecordSetFailover' :: Text -> ResourceRecordSetFailover
[fromResourceRecordSetFailover] :: ResourceRecordSetFailover -> Text
pattern ResourceRecordSetFailover_PRIMARY :: ResourceRecordSetFailover
pattern ResourceRecordSetFailover_SECONDARY :: ResourceRecordSetFailover
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance GHC.Generics.Generic Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance GHC.Classes.Ord Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance GHC.Classes.Eq Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance GHC.Read.Read Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover
instance GHC.Show.Show Network.AWS.Route53.Types.ResourceRecordSetFailover.ResourceRecordSetFailover


module Network.AWS.Route53.Types.ResourceRecordSet

-- | Information about the resource record set to create or delete.
--   
--   <i>See:</i> <a>newResourceRecordSet</a> smart constructor.
data ResourceRecordSet
ResourceRecordSet' :: Maybe Natural -> Maybe (NonEmpty ResourceRecord) -> Maybe AliasTarget -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe ResourceRecordSetFailover -> Maybe Text -> Maybe Region -> Maybe GeoLocation -> Maybe Bool -> Text -> RRType -> ResourceRecordSet

-- | The resource record cache time to live (TTL), in seconds. Note the
--   following:
--   
--   <ul>
--   <li>If you're creating or updating an alias resource record set, omit
--   <tt>TTL</tt>. Amazon Route 53 uses the value of <tt>TTL</tt> for the
--   alias target.</li>
--   <li>If you're associating this resource record set with a health check
--   (if you're adding a <tt>HealthCheckId</tt> element), we recommend that
--   you specify a <tt>TTL</tt> of 60 seconds or less so clients respond
--   quickly to changes in health status.</li>
--   <li>All of the resource record sets in a group of weighted resource
--   record sets must have the same value for <tt>TTL</tt>.</li>
--   <li>If a group of weighted resource record sets includes one or more
--   weighted alias resource record sets for which the alias target is an
--   ELB load balancer, we recommend that you specify a <tt>TTL</tt> of 60
--   seconds for all of the non-alias weighted resource record sets that
--   have the same name and type. Values other than 60 seconds (the TTL for
--   load balancers) will change the effect of the values that you specify
--   for <tt>Weight</tt>.</li>
--   </ul>
[$sel:ttl:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Natural

-- | Information about the resource records to act upon.
--   
--   If you're creating an alias resource record set, omit
--   <tt>ResourceRecords</tt>.
[$sel:resourceRecords:ResourceRecordSet'] :: ResourceRecordSet -> Maybe (NonEmpty ResourceRecord)

-- | <i>Alias resource record sets only:</i> Information about the Amazon
--   Web Services resource, such as a CloudFront distribution or an Amazon
--   S3 bucket, that you want to route traffic to.
--   
--   If you're creating resource records sets for a private hosted zone,
--   note the following:
--   
--   <ul>
--   <li>You can't create an alias resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.</li>
--   <li>Creating geolocation alias resource record sets or latency alias
--   resource record sets in a private hosted zone is unsupported.</li>
--   <li>For information about creating failover resource record sets in a
--   private hosted zone, see <a>Configuring Failover in a Private Hosted
--   Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
[$sel:aliasTarget:ResourceRecordSet'] :: ResourceRecordSet -> Maybe AliasTarget

-- | <i>Weighted resource record sets only:</i> Among resource record sets
--   that have the same combination of DNS name and type, a value that
--   determines the proportion of DNS queries that Amazon Route 53 responds
--   to using the current resource record set. Route 53 calculates the sum
--   of the weights for the resource record sets that have the same
--   combination of DNS name and type. Route 53 then responds to queries
--   based on the ratio of a resource's weight to the total. Note the
--   following:
--   
--   <ul>
--   <li>You must specify a value for the <tt>Weight</tt> element for every
--   weighted resource record set.</li>
--   <li>You can only specify one <tt>ResourceRecord</tt> per weighted
--   resource record set.</li>
--   <li>You can't create latency, failover, or geolocation resource record
--   sets that have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements as weighted resource record sets.</li>
--   <li>You can create a maximum of 100 weighted resource record sets that
--   have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements.</li>
--   <li>For weighted (but not weighted alias) resource record sets, if you
--   set <tt>Weight</tt> to <tt>0</tt> for a resource record set, Route 53
--   never responds to queries with the applicable value for that resource
--   record set. However, if you set <tt>Weight</tt> to <tt>0</tt> for all
--   resource record sets that have the same combination of DNS name and
--   type, traffic is routed to all resources with equal probability.The
--   effect of setting <tt>Weight</tt> to <tt>0</tt> is different when you
--   associate health checks with weighted resource record sets. For more
--   information, see <a>Options for Configuring Route 53 Active-Active and
--   Active-Passive Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.</li>
--   </ul>
[$sel:weight:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Natural

-- | When you create a traffic policy instance, Amazon Route 53
--   automatically creates a resource record set.
--   <tt>TrafficPolicyInstanceId</tt> is the ID of the traffic policy
--   instance that Route 53 created this resource record set for.
--   
--   To delete the resource record set that is associated with a traffic
--   policy instance, use <tt>DeleteTrafficPolicyInstance</tt>. Route 53
--   will delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.
[$sel:trafficPolicyInstanceId:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Text

-- | <i>Resource record sets that have a routing policy other than
--   simple:</i> An identifier that differentiates among multiple resource
--   record sets that have the same combination of name and type, such as
--   multiple weighted resource record sets named acme.example.com that
--   have a type of A. In a group of resource record sets that have the
--   same name and type, the value of <tt>SetIdentifier</tt> must be unique
--   for each resource record set.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
[$sel:setIdentifier:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Text

-- | <i>Failover resource record sets only:</i> To configure failover, you
--   add the <tt>Failover</tt> element to two resource record sets. For one
--   resource record set, you specify <tt>PRIMARY</tt> as the value for
--   <tt>Failover</tt>; for the other resource record set, you specify
--   <tt>SECONDARY</tt>. In addition, you include the
--   <tt>HealthCheckId</tt> element and specify the health check that you
--   want Amazon Route 53 to perform for each resource record set.
--   
--   Except where noted, the following failover behaviors assume that you
--   have included the <tt>HealthCheckId</tt> element in both resource
--   record sets:
--   
--   <ul>
--   <li>When the primary resource record set is healthy, Route 53 responds
--   to DNS queries with the applicable value from the primary resource
--   record set regardless of the health of the secondary resource record
--   set.</li>
--   <li>When the primary resource record set is unhealthy and the
--   secondary resource record set is healthy, Route 53 responds to DNS
--   queries with the applicable value from the secondary resource record
--   set.</li>
--   <li>When the secondary resource record set is unhealthy, Route 53
--   responds to DNS queries with the applicable value from the primary
--   resource record set regardless of the health of the primary resource
--   record set.</li>
--   <li>If you omit the <tt>HealthCheckId</tt> element for the secondary
--   resource record set, and if the primary resource record set is
--   unhealthy, Route 53 always responds to DNS queries with the applicable
--   value from the secondary resource record set. This is true regardless
--   of the health of the associated endpoint.</li>
--   </ul>
--   
--   You can't create non-failover resource record sets that have the same
--   values for the <tt>Name</tt> and <tt>Type</tt> elements as failover
--   resource record sets.
--   
--   For failover alias resource record sets, you must also include the
--   <tt>EvaluateTargetHealth</tt> element and set the value to true.
--   
--   For more information about configuring failover for Route 53, see the
--   following topics in the <i>Amazon Route 53 Developer Guide</i>:
--   
--   <ul>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
[$sel:failover:ResourceRecordSet'] :: ResourceRecordSet -> Maybe ResourceRecordSetFailover

-- | If you want Amazon Route 53 to return this resource record set in
--   response to a DNS query only when the status of a health check is
--   healthy, include the <tt>HealthCheckId</tt> element and specify the ID
--   of the applicable health check.
--   
--   Route 53 determines whether a resource record set is healthy based on
--   one of the following:
--   
--   <ul>
--   <li>By periodically sending a request to the endpoint that is
--   specified in the health check</li>
--   <li>By aggregating the status of a specified group of health checks
--   (calculated health checks)</li>
--   <li>By determining the current state of a CloudWatch alarm (CloudWatch
--   metric health checks)</li>
--   </ul>
--   
--   Route 53 doesn't check the health of the endpoint that is specified in
--   the resource record set, for example, the endpoint specified by the IP
--   address in the <tt>Value</tt> element. When you add a
--   <tt>HealthCheckId</tt> element to a resource record set, Route 53
--   checks the health of the endpoint that you specified in the health
--   check.
--   
--   For more information, see the following topics in the /Amazon Route 53
--   Developer Guide/:
--   
--   <ul>
--   <li><a>How Amazon Route 53 Determines Whether an Endpoint Is
--   Healthy</a></li>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
--   
--   <b>When to Specify HealthCheckId</b>
--   
--   Specifying a value for <tt>HealthCheckId</tt> is useful only when
--   Route 53 is choosing between two or more resource record sets to
--   respond to a DNS query, and you want Route 53 to base the choice in
--   part on the status of a health check. Configuring health checks makes
--   sense only in the following configurations:
--   
--   <ul>
--   <li><b>Non-alias resource record sets</b>: You're checking the health
--   of a group of non-alias resource record sets that have the same
--   routing policy, name, and type (such as multiple weighted records
--   named www.example.com with a type of A) and you specify health check
--   IDs for all the resource record sets.If the health check status for a
--   resource record set is healthy, Route 53 includes the record among the
--   records that it responds to DNS queries with.If the health check
--   status for a resource record set is unhealthy, Route 53 stops
--   responding to DNS queries using the value for that resource record
--   set.If the health check status for all resource record sets in the
--   group is unhealthy, Route 53 considers all resource record sets in the
--   group healthy and responds to DNS queries accordingly.</li>
--   <li><b>Alias resource record sets</b>: You specify the following
--   settings:<ul><li>You set <tt>EvaluateTargetHealth</tt> to true for an
--   alias resource record set in a group of resource record sets that have
--   the same routing policy, name, and type (such as multiple weighted
--   records named www.example.com with a type of A).</li><li>You configure
--   the alias resource record set to route traffic to a non-alias resource
--   record set in the same hosted zone.</li><li>You specify a health check
--   ID for the non-alias resource record set.</li></ul>If the health check
--   status is healthy, Route 53 considers the alias resource record set to
--   be healthy and includes the alias record among the records that it
--   responds to DNS queries with.If the health check status is unhealthy,
--   Route 53 stops responding to DNS queries using the alias resource
--   record set.The alias resource record set can also route traffic to a
--   <i>group</i> of non-alias resource record sets that have the same
--   routing policy, name, and type. In that configuration, associate
--   health checks with all of the resource record sets in the group of
--   non-alias resource record sets.</li>
--   </ul>
--   
--   <b>Geolocation Routing</b>
--   
--   For geolocation resource record sets, if an endpoint is unhealthy,
--   Route 53 looks for a resource record set for the larger, associated
--   geographic region. For example, suppose you have resource record sets
--   for a state in the United States, for the entire United States, for
--   North America, and a resource record set that has <tt>*</tt> for
--   <tt>CountryCode</tt> is <tt>*</tt>, which applies to all locations. If
--   the endpoint for the state resource record set is unhealthy, Route 53
--   checks for healthy resource record sets in the following order until
--   it finds a resource record set for which the endpoint is healthy:
--   
--   <ul>
--   <li>The United States</li>
--   <li>North America</li>
--   <li>The default resource record set</li>
--   </ul>
--   
--   <b>Specifying the Health Check Endpoint by Domain Name</b>
--   
--   If your health checks specify the endpoint only by domain name, we
--   recommend that you create a separate health check for each endpoint.
--   For example, create a health check for each <tt>HTTP</tt> server that
--   is serving content for <tt>www.example.com</tt>. For the value of
--   <tt>FullyQualifiedDomainName</tt>, specify the domain name of the
--   server (such as <tt>us-east-2-www.example.com</tt>), not the name of
--   the resource record sets (<tt>www.example.com</tt>).
--   
--   Health check results will be unpredictable if you do the following:
--   
--   <ul>
--   <li>Create a health check that has the same value for
--   <tt>FullyQualifiedDomainName</tt> as the name of a resource record
--   set.</li>
--   <li>Associate that health check with the resource record set.</li>
--   </ul>
[$sel:healthCheckId:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Text

-- | <i>Latency-based resource record sets only:</i> The Amazon EC2 Region
--   where you created the resource that this resource record set refers
--   to. The resource typically is an Amazon Web Services resource, such as
--   an EC2 instance or an ELB load balancer, and is referred to by an IP
--   address or a DNS domain name, depending on the record type.
--   
--   Although creating latency and latency alias resource record sets in a
--   private hosted zone is allowed, it's not supported.
--   
--   When Amazon Route 53 receives a DNS query for a domain name and type
--   for which you have created latency resource record sets, Route 53
--   selects the latency resource record set that has the lowest latency
--   between the end user and the associated Amazon EC2 Region. Route 53
--   then returns the value that is associated with the selected resource
--   record set.
--   
--   Note the following:
--   
--   <ul>
--   <li>You can only specify one <tt>ResourceRecord</tt> per latency
--   resource record set.</li>
--   <li>You can only create one latency resource record set for each
--   Amazon EC2 Region.</li>
--   <li>You aren't required to create latency resource record sets for all
--   Amazon EC2 Regions. Route 53 will choose the region with the best
--   latency from among the regions that you create latency resource record
--   sets for.</li>
--   <li>You can't create non-latency resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   latency resource record sets.</li>
--   </ul>
[$sel:region:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Region

-- | <i>Geolocation resource record sets only:</i> A complex type that lets
--   you control how Amazon Route 53 responds to DNS queries based on the
--   geographic origin of the query. For example, if you want all queries
--   from Africa to be routed to a web server with an IP address of
--   <tt>192.0.2.111</tt>, create a resource record set with a
--   <tt>Type</tt> of <tt>A</tt> and a <tt>ContinentCode</tt> of
--   <tt>AF</tt>.
--   
--   Although creating geolocation and geolocation alias resource record
--   sets in a private hosted zone is allowed, it's not supported.
--   
--   If you create separate resource record sets for overlapping geographic
--   regions (for example, one resource record set for a continent and one
--   for a country on the same continent), priority goes to the smallest
--   geographic region. This allows you to route most queries for a
--   continent to one resource and to route queries for a country on that
--   continent to a different resource.
--   
--   You can't create two geolocation resource record sets that specify the
--   same geographic location.
--   
--   The value <tt>*</tt> in the <tt>CountryCode</tt> element matches all
--   geographic locations that aren't specified in other geolocation
--   resource record sets that have the same values for the <tt>Name</tt>
--   and <tt>Type</tt> elements.
--   
--   Geolocation works by mapping IP addresses to locations. However, some
--   IP addresses aren't mapped to geographic locations, so even if you
--   create geolocation resource record sets that cover all seven
--   continents, Route 53 will receive some DNS queries from locations that
--   it can't identify. We recommend that you create a resource record set
--   for which the value of <tt>CountryCode</tt> is <tt>*</tt>. Two groups
--   of queries are routed to the resource that you specify in this record:
--   queries that come from locations for which you haven't created
--   geolocation resource record sets and queries from IP addresses that
--   aren't mapped to a location. If you don't create a <tt>*</tt> resource
--   record set, Route 53 returns a "no answer" response for queries from
--   those locations.
--   
--   You can't create non-geolocation resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   geolocation resource record sets.
[$sel:geoLocation:ResourceRecordSet'] :: ResourceRecordSet -> Maybe GeoLocation

-- | <i>Multivalue answer resource record sets only</i>: To route traffic
--   approximately randomly to multiple resources, such as web servers,
--   create one multivalue answer record for each resource and specify
--   <tt>true</tt> for <tt>MultiValueAnswer</tt>. Note the following:
--   
--   <ul>
--   <li>If you associate a health check with a multivalue answer resource
--   record set, Amazon Route 53 responds to DNS queries with the
--   corresponding IP address only when the health check is healthy.</li>
--   <li>If you don't associate a health check with a multivalue answer
--   record, Route 53 always considers the record to be healthy.</li>
--   <li>Route 53 responds to DNS queries with up to eight healthy records;
--   if you have eight or fewer healthy records, Route 53 responds to all
--   DNS queries with all the healthy records.</li>
--   <li>If you have more than eight healthy records, Route 53 responds to
--   different DNS resolvers with different combinations of healthy
--   records.</li>
--   <li>When all records are unhealthy, Route 53 responds to DNS queries
--   with up to eight unhealthy records.</li>
--   <li>If a resource becomes unavailable after a resolver caches a
--   response, client software typically tries another of the IP addresses
--   in the response.</li>
--   </ul>
--   
--   You can't create multivalue answer alias records.
[$sel:multiValueAnswer:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Bool

-- | For <tt>ChangeResourceRecordSets</tt> requests, the name of the record
--   that you want to create, update, or delete. For
--   <tt>ListResourceRecordSets</tt> responses, the name of a record in the
--   specified hosted zone.
--   
--   <b>ChangeResourceRecordSets Only</b>
--   
--   Enter a fully qualified domain name, for example,
--   <tt>www.example.com</tt>. You can optionally include a trailing dot.
--   If you omit the trailing dot, Amazon Route 53 assumes that the domain
--   name that you specify is fully qualified. This means that Route 53
--   treats <tt>www.example.com</tt> (without a trailing dot) and
--   <tt>www.example.com.</tt> (with a trailing dot) as identical.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>DNS Domain Name Format</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.
--   
--   You can use the asterisk (*) wildcard to replace the leftmost label in
--   a domain name, for example, <tt>*.example.com</tt>. Note the
--   following:
--   
--   <ul>
--   <li>The * must replace the entire label. For example, you can't
--   specify <tt>*prod.example.com</tt> or <tt>prod*.example.com</tt>.</li>
--   <li>The * can't replace any of the middle labels, for example,
--   marketing.*.example.com.</li>
--   <li>If you include * in any position other than the leftmost label in
--   a domain name, DNS treats it as an * character (ASCII 42), not as a
--   wildcard.You can't use the * wildcard for resource records sets that
--   have a type of NS.</li>
--   </ul>
--   
--   You can use the * wildcard as the leftmost label in a domain name, for
--   example, <tt>*.example.com</tt>. You can't use an * for one of the
--   middle labels, for example, <tt>marketing.*.example.com</tt>. In
--   addition, the * must replace the entire label; for example, you can't
--   specify <tt>prod*.example.com</tt>.
[$sel:name:ResourceRecordSet'] :: ResourceRecordSet -> Text

-- | The DNS record type. For information about different record types and
--   how data is encoded for them, see <a>Supported DNS Resource Record
--   Types</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>DS</tt>
--   |<tt>MX</tt> | <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> |
--   <tt>SOA</tt> | <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>. When creating a group of
--   weighted, latency, geolocation, or failover resource record sets,
--   specify the same value for all of the resource record sets in the
--   group.
--   
--   Valid values for multivalue answer resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   SPF records were formerly used to verify the identity of the sender of
--   email messages. However, we no longer recommend that you create
--   resource record sets for which the value of <tt>Type</tt> is
--   <tt>SPF</tt>. RFC 7208, /Sender Policy Framework (SPF) for Authorizing
--   Use of Domains in Email, Version 1/, has been updated to say,
--   "...[I]ts existence and mechanism defined in [RFC4408] have led to
--   some interoperability issues. Accordingly, its use is no longer
--   appropriate for SPF version 1; implementations are not to use it." In
--   RFC 7208, see section 14.1, <a>The SPF DNS Record Type</a>.
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs:</b> <tt>A</tt></li>
--   <li><b>CloudFront distributions:</b> <tt>A</tt>If IPv6 is enabled for
--   the distribution, create two resource record sets to route traffic to
--   your distribution, one with a value of <tt>A</tt> and one with a value
--   of <tt>AAAA</tt>.</li>
--   <li>__Amazon API Gateway environment that has a regionalized
--   subdomain__: <tt>A</tt></li>
--   <li><b>ELB load balancers:</b> <tt>A</tt> | <tt>AAAA</tt></li>
--   <li><b>Amazon S3 buckets:</b> <tt>A</tt></li>
--   <li><b>Amazon Virtual Private Cloud interface VPC endpoints</b>
--   <tt>A</tt></li>
--   <li><b>Another resource record set in this hosted zone:</b> Specify
--   the type of the resource record set that you're creating the alias
--   for. All values are supported except <tt>NS</tt> and <tt>SOA</tt>.If
--   you're creating an alias record that has the same name as the hosted
--   zone (known as the zone apex), you can't route traffic to a record for
--   which the value of <tt>Type</tt> is <tt>CNAME</tt>. This is because
--   the alias record must have the same type as the record you're routing
--   traffic to, and creating a CNAME record for the zone apex isn't
--   supported even for an alias record.</li>
--   </ul>
[$sel:type':ResourceRecordSet'] :: ResourceRecordSet -> RRType

-- | Create a value of <a>ResourceRecordSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ttl:ResourceRecordSet'</a>, <a>resourceRecordSet_ttl</a> - The
--   resource record cache time to live (TTL), in seconds. Note the
--   following:
--   
--   <ul>
--   <li>If you're creating or updating an alias resource record set, omit
--   <tt>TTL</tt>. Amazon Route 53 uses the value of <tt>TTL</tt> for the
--   alias target.</li>
--   <li>If you're associating this resource record set with a health check
--   (if you're adding a <tt>HealthCheckId</tt> element), we recommend that
--   you specify a <tt>TTL</tt> of 60 seconds or less so clients respond
--   quickly to changes in health status.</li>
--   <li>All of the resource record sets in a group of weighted resource
--   record sets must have the same value for <tt>TTL</tt>.</li>
--   <li>If a group of weighted resource record sets includes one or more
--   weighted alias resource record sets for which the alias target is an
--   ELB load balancer, we recommend that you specify a <tt>TTL</tt> of 60
--   seconds for all of the non-alias weighted resource record sets that
--   have the same name and type. Values other than 60 seconds (the TTL for
--   load balancers) will change the effect of the values that you specify
--   for <tt>Weight</tt>.</li>
--   </ul>
--   
--   <a>$sel:resourceRecords:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_resourceRecords</a> - Information about the
--   resource records to act upon.
--   
--   If you're creating an alias resource record set, omit
--   <tt>ResourceRecords</tt>.
--   
--   <a>$sel:aliasTarget:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_aliasTarget</a> - <i>Alias resource record sets
--   only:</i> Information about the Amazon Web Services resource, such as
--   a CloudFront distribution or an Amazon S3 bucket, that you want to
--   route traffic to.
--   
--   If you're creating resource records sets for a private hosted zone,
--   note the following:
--   
--   <ul>
--   <li>You can't create an alias resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.</li>
--   <li>Creating geolocation alias resource record sets or latency alias
--   resource record sets in a private hosted zone is unsupported.</li>
--   <li>For information about creating failover resource record sets in a
--   private hosted zone, see <a>Configuring Failover in a Private Hosted
--   Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:weight:ResourceRecordSet'</a>, <a>resourceRecordSet_weight</a>
--   - <i>Weighted resource record sets only:</i> Among resource record
--   sets that have the same combination of DNS name and type, a value that
--   determines the proportion of DNS queries that Amazon Route 53 responds
--   to using the current resource record set. Route 53 calculates the sum
--   of the weights for the resource record sets that have the same
--   combination of DNS name and type. Route 53 then responds to queries
--   based on the ratio of a resource's weight to the total. Note the
--   following:
--   
--   <ul>
--   <li>You must specify a value for the <tt>Weight</tt> element for every
--   weighted resource record set.</li>
--   <li>You can only specify one <tt>ResourceRecord</tt> per weighted
--   resource record set.</li>
--   <li>You can't create latency, failover, or geolocation resource record
--   sets that have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements as weighted resource record sets.</li>
--   <li>You can create a maximum of 100 weighted resource record sets that
--   have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements.</li>
--   <li>For weighted (but not weighted alias) resource record sets, if you
--   set <tt>Weight</tt> to <tt>0</tt> for a resource record set, Route 53
--   never responds to queries with the applicable value for that resource
--   record set. However, if you set <tt>Weight</tt> to <tt>0</tt> for all
--   resource record sets that have the same combination of DNS name and
--   type, traffic is routed to all resources with equal probability.The
--   effect of setting <tt>Weight</tt> to <tt>0</tt> is different when you
--   associate health checks with weighted resource record sets. For more
--   information, see <a>Options for Configuring Route 53 Active-Active and
--   Active-Passive Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:trafficPolicyInstanceId:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_trafficPolicyInstanceId</a> - When you create a
--   traffic policy instance, Amazon Route 53 automatically creates a
--   resource record set. <tt>TrafficPolicyInstanceId</tt> is the ID of the
--   traffic policy instance that Route 53 created this resource record set
--   for.
--   
--   To delete the resource record set that is associated with a traffic
--   policy instance, use <tt>DeleteTrafficPolicyInstance</tt>. Route 53
--   will delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.
--   
--   <a>$sel:setIdentifier:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_setIdentifier</a> - <i>Resource record sets that
--   have a routing policy other than simple:</i> An identifier that
--   differentiates among multiple resource record sets that have the same
--   combination of name and type, such as multiple weighted resource
--   record sets named acme.example.com that have a type of A. In a group
--   of resource record sets that have the same name and type, the value of
--   <tt>SetIdentifier</tt> must be unique for each resource record set.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   <a>$sel:failover:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_failover</a> - <i>Failover resource record sets
--   only:</i> To configure failover, you add the <tt>Failover</tt> element
--   to two resource record sets. For one resource record set, you specify
--   <tt>PRIMARY</tt> as the value for <tt>Failover</tt>; for the other
--   resource record set, you specify <tt>SECONDARY</tt>. In addition, you
--   include the <tt>HealthCheckId</tt> element and specify the health
--   check that you want Amazon Route 53 to perform for each resource
--   record set.
--   
--   Except where noted, the following failover behaviors assume that you
--   have included the <tt>HealthCheckId</tt> element in both resource
--   record sets:
--   
--   <ul>
--   <li>When the primary resource record set is healthy, Route 53 responds
--   to DNS queries with the applicable value from the primary resource
--   record set regardless of the health of the secondary resource record
--   set.</li>
--   <li>When the primary resource record set is unhealthy and the
--   secondary resource record set is healthy, Route 53 responds to DNS
--   queries with the applicable value from the secondary resource record
--   set.</li>
--   <li>When the secondary resource record set is unhealthy, Route 53
--   responds to DNS queries with the applicable value from the primary
--   resource record set regardless of the health of the primary resource
--   record set.</li>
--   <li>If you omit the <tt>HealthCheckId</tt> element for the secondary
--   resource record set, and if the primary resource record set is
--   unhealthy, Route 53 always responds to DNS queries with the applicable
--   value from the secondary resource record set. This is true regardless
--   of the health of the associated endpoint.</li>
--   </ul>
--   
--   You can't create non-failover resource record sets that have the same
--   values for the <tt>Name</tt> and <tt>Type</tt> elements as failover
--   resource record sets.
--   
--   For failover alias resource record sets, you must also include the
--   <tt>EvaluateTargetHealth</tt> element and set the value to true.
--   
--   For more information about configuring failover for Route 53, see the
--   following topics in the <i>Amazon Route 53 Developer Guide</i>:
--   
--   <ul>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
--   
--   <a>$sel:healthCheckId:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_healthCheckId</a> - If you want Amazon Route 53
--   to return this resource record set in response to a DNS query only
--   when the status of a health check is healthy, include the
--   <tt>HealthCheckId</tt> element and specify the ID of the applicable
--   health check.
--   
--   Route 53 determines whether a resource record set is healthy based on
--   one of the following:
--   
--   <ul>
--   <li>By periodically sending a request to the endpoint that is
--   specified in the health check</li>
--   <li>By aggregating the status of a specified group of health checks
--   (calculated health checks)</li>
--   <li>By determining the current state of a CloudWatch alarm (CloudWatch
--   metric health checks)</li>
--   </ul>
--   
--   Route 53 doesn't check the health of the endpoint that is specified in
--   the resource record set, for example, the endpoint specified by the IP
--   address in the <tt>Value</tt> element. When you add a
--   <tt>HealthCheckId</tt> element to a resource record set, Route 53
--   checks the health of the endpoint that you specified in the health
--   check.
--   
--   For more information, see the following topics in the /Amazon Route 53
--   Developer Guide/:
--   
--   <ul>
--   <li><a>How Amazon Route 53 Determines Whether an Endpoint Is
--   Healthy</a></li>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
--   
--   <b>When to Specify HealthCheckId</b>
--   
--   Specifying a value for <tt>HealthCheckId</tt> is useful only when
--   Route 53 is choosing between two or more resource record sets to
--   respond to a DNS query, and you want Route 53 to base the choice in
--   part on the status of a health check. Configuring health checks makes
--   sense only in the following configurations:
--   
--   <ul>
--   <li><b>Non-alias resource record sets</b>: You're checking the health
--   of a group of non-alias resource record sets that have the same
--   routing policy, name, and type (such as multiple weighted records
--   named www.example.com with a type of A) and you specify health check
--   IDs for all the resource record sets.If the health check status for a
--   resource record set is healthy, Route 53 includes the record among the
--   records that it responds to DNS queries with.If the health check
--   status for a resource record set is unhealthy, Route 53 stops
--   responding to DNS queries using the value for that resource record
--   set.If the health check status for all resource record sets in the
--   group is unhealthy, Route 53 considers all resource record sets in the
--   group healthy and responds to DNS queries accordingly.</li>
--   <li><b>Alias resource record sets</b>: You specify the following
--   settings:<ul><li>You set <tt>EvaluateTargetHealth</tt> to true for an
--   alias resource record set in a group of resource record sets that have
--   the same routing policy, name, and type (such as multiple weighted
--   records named www.example.com with a type of A).</li><li>You configure
--   the alias resource record set to route traffic to a non-alias resource
--   record set in the same hosted zone.</li><li>You specify a health check
--   ID for the non-alias resource record set.</li></ul>If the health check
--   status is healthy, Route 53 considers the alias resource record set to
--   be healthy and includes the alias record among the records that it
--   responds to DNS queries with.If the health check status is unhealthy,
--   Route 53 stops responding to DNS queries using the alias resource
--   record set.The alias resource record set can also route traffic to a
--   <i>group</i> of non-alias resource record sets that have the same
--   routing policy, name, and type. In that configuration, associate
--   health checks with all of the resource record sets in the group of
--   non-alias resource record sets.</li>
--   </ul>
--   
--   <b>Geolocation Routing</b>
--   
--   For geolocation resource record sets, if an endpoint is unhealthy,
--   Route 53 looks for a resource record set for the larger, associated
--   geographic region. For example, suppose you have resource record sets
--   for a state in the United States, for the entire United States, for
--   North America, and a resource record set that has <tt>*</tt> for
--   <tt>CountryCode</tt> is <tt>*</tt>, which applies to all locations. If
--   the endpoint for the state resource record set is unhealthy, Route 53
--   checks for healthy resource record sets in the following order until
--   it finds a resource record set for which the endpoint is healthy:
--   
--   <ul>
--   <li>The United States</li>
--   <li>North America</li>
--   <li>The default resource record set</li>
--   </ul>
--   
--   <b>Specifying the Health Check Endpoint by Domain Name</b>
--   
--   If your health checks specify the endpoint only by domain name, we
--   recommend that you create a separate health check for each endpoint.
--   For example, create a health check for each <tt>HTTP</tt> server that
--   is serving content for <tt>www.example.com</tt>. For the value of
--   <tt>FullyQualifiedDomainName</tt>, specify the domain name of the
--   server (such as <tt>us-east-2-www.example.com</tt>), not the name of
--   the resource record sets (<tt>www.example.com</tt>).
--   
--   Health check results will be unpredictable if you do the following:
--   
--   <ul>
--   <li>Create a health check that has the same value for
--   <tt>FullyQualifiedDomainName</tt> as the name of a resource record
--   set.</li>
--   <li>Associate that health check with the resource record set.</li>
--   </ul>
--   
--   <a>$sel:region:ResourceRecordSet'</a>, <a>resourceRecordSet_region</a>
--   - <i>Latency-based resource record sets only:</i> The Amazon EC2
--   Region where you created the resource that this resource record set
--   refers to. The resource typically is an Amazon Web Services resource,
--   such as an EC2 instance or an ELB load balancer, and is referred to by
--   an IP address or a DNS domain name, depending on the record type.
--   
--   Although creating latency and latency alias resource record sets in a
--   private hosted zone is allowed, it's not supported.
--   
--   When Amazon Route 53 receives a DNS query for a domain name and type
--   for which you have created latency resource record sets, Route 53
--   selects the latency resource record set that has the lowest latency
--   between the end user and the associated Amazon EC2 Region. Route 53
--   then returns the value that is associated with the selected resource
--   record set.
--   
--   Note the following:
--   
--   <ul>
--   <li>You can only specify one <tt>ResourceRecord</tt> per latency
--   resource record set.</li>
--   <li>You can only create one latency resource record set for each
--   Amazon EC2 Region.</li>
--   <li>You aren't required to create latency resource record sets for all
--   Amazon EC2 Regions. Route 53 will choose the region with the best
--   latency from among the regions that you create latency resource record
--   sets for.</li>
--   <li>You can't create non-latency resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   latency resource record sets.</li>
--   </ul>
--   
--   <a>$sel:geoLocation:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_geoLocation</a> - <i>Geolocation resource record
--   sets only:</i> A complex type that lets you control how Amazon Route
--   53 responds to DNS queries based on the geographic origin of the
--   query. For example, if you want all queries from Africa to be routed
--   to a web server with an IP address of <tt>192.0.2.111</tt>, create a
--   resource record set with a <tt>Type</tt> of <tt>A</tt> and a
--   <tt>ContinentCode</tt> of <tt>AF</tt>.
--   
--   Although creating geolocation and geolocation alias resource record
--   sets in a private hosted zone is allowed, it's not supported.
--   
--   If you create separate resource record sets for overlapping geographic
--   regions (for example, one resource record set for a continent and one
--   for a country on the same continent), priority goes to the smallest
--   geographic region. This allows you to route most queries for a
--   continent to one resource and to route queries for a country on that
--   continent to a different resource.
--   
--   You can't create two geolocation resource record sets that specify the
--   same geographic location.
--   
--   The value <tt>*</tt> in the <tt>CountryCode</tt> element matches all
--   geographic locations that aren't specified in other geolocation
--   resource record sets that have the same values for the <tt>Name</tt>
--   and <tt>Type</tt> elements.
--   
--   Geolocation works by mapping IP addresses to locations. However, some
--   IP addresses aren't mapped to geographic locations, so even if you
--   create geolocation resource record sets that cover all seven
--   continents, Route 53 will receive some DNS queries from locations that
--   it can't identify. We recommend that you create a resource record set
--   for which the value of <tt>CountryCode</tt> is <tt>*</tt>. Two groups
--   of queries are routed to the resource that you specify in this record:
--   queries that come from locations for which you haven't created
--   geolocation resource record sets and queries from IP addresses that
--   aren't mapped to a location. If you don't create a <tt>*</tt> resource
--   record set, Route 53 returns a "no answer" response for queries from
--   those locations.
--   
--   You can't create non-geolocation resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   geolocation resource record sets.
--   
--   <a>$sel:multiValueAnswer:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_multiValueAnswer</a> - <i>Multivalue answer
--   resource record sets only</i>: To route traffic approximately randomly
--   to multiple resources, such as web servers, create one multivalue
--   answer record for each resource and specify <tt>true</tt> for
--   <tt>MultiValueAnswer</tt>. Note the following:
--   
--   <ul>
--   <li>If you associate a health check with a multivalue answer resource
--   record set, Amazon Route 53 responds to DNS queries with the
--   corresponding IP address only when the health check is healthy.</li>
--   <li>If you don't associate a health check with a multivalue answer
--   record, Route 53 always considers the record to be healthy.</li>
--   <li>Route 53 responds to DNS queries with up to eight healthy records;
--   if you have eight or fewer healthy records, Route 53 responds to all
--   DNS queries with all the healthy records.</li>
--   <li>If you have more than eight healthy records, Route 53 responds to
--   different DNS resolvers with different combinations of healthy
--   records.</li>
--   <li>When all records are unhealthy, Route 53 responds to DNS queries
--   with up to eight unhealthy records.</li>
--   <li>If a resource becomes unavailable after a resolver caches a
--   response, client software typically tries another of the IP addresses
--   in the response.</li>
--   </ul>
--   
--   You can't create multivalue answer alias records.
--   
--   <a>$sel:name:ResourceRecordSet'</a>, <a>resourceRecordSet_name</a> -
--   For <tt>ChangeResourceRecordSets</tt> requests, the name of the record
--   that you want to create, update, or delete. For
--   <tt>ListResourceRecordSets</tt> responses, the name of a record in the
--   specified hosted zone.
--   
--   <b>ChangeResourceRecordSets Only</b>
--   
--   Enter a fully qualified domain name, for example,
--   <tt>www.example.com</tt>. You can optionally include a trailing dot.
--   If you omit the trailing dot, Amazon Route 53 assumes that the domain
--   name that you specify is fully qualified. This means that Route 53
--   treats <tt>www.example.com</tt> (without a trailing dot) and
--   <tt>www.example.com.</tt> (with a trailing dot) as identical.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>DNS Domain Name Format</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.
--   
--   You can use the asterisk (*) wildcard to replace the leftmost label in
--   a domain name, for example, <tt>*.example.com</tt>. Note the
--   following:
--   
--   <ul>
--   <li>The * must replace the entire label. For example, you can't
--   specify <tt>*prod.example.com</tt> or <tt>prod*.example.com</tt>.</li>
--   <li>The * can't replace any of the middle labels, for example,
--   marketing.*.example.com.</li>
--   <li>If you include * in any position other than the leftmost label in
--   a domain name, DNS treats it as an * character (ASCII 42), not as a
--   wildcard.You can't use the * wildcard for resource records sets that
--   have a type of NS.</li>
--   </ul>
--   
--   You can use the * wildcard as the leftmost label in a domain name, for
--   example, <tt>*.example.com</tt>. You can't use an * for one of the
--   middle labels, for example, <tt>marketing.*.example.com</tt>. In
--   addition, the * must replace the entire label; for example, you can't
--   specify <tt>prod*.example.com</tt>.
--   
--   <a>$sel:type':ResourceRecordSet'</a>, <a>resourceRecordSet_type</a> -
--   The DNS record type. For information about different record types and
--   how data is encoded for them, see <a>Supported DNS Resource Record
--   Types</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>DS</tt>
--   |<tt>MX</tt> | <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> |
--   <tt>SOA</tt> | <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>. When creating a group of
--   weighted, latency, geolocation, or failover resource record sets,
--   specify the same value for all of the resource record sets in the
--   group.
--   
--   Valid values for multivalue answer resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   SPF records were formerly used to verify the identity of the sender of
--   email messages. However, we no longer recommend that you create
--   resource record sets for which the value of <tt>Type</tt> is
--   <tt>SPF</tt>. RFC 7208, /Sender Policy Framework (SPF) for Authorizing
--   Use of Domains in Email, Version 1/, has been updated to say,
--   "...[I]ts existence and mechanism defined in [RFC4408] have led to
--   some interoperability issues. Accordingly, its use is no longer
--   appropriate for SPF version 1; implementations are not to use it." In
--   RFC 7208, see section 14.1, <a>The SPF DNS Record Type</a>.
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs:</b> <tt>A</tt></li>
--   <li><b>CloudFront distributions:</b> <tt>A</tt>If IPv6 is enabled for
--   the distribution, create two resource record sets to route traffic to
--   your distribution, one with a value of <tt>A</tt> and one with a value
--   of <tt>AAAA</tt>.</li>
--   <li>__Amazon API Gateway environment that has a regionalized
--   subdomain__: <tt>A</tt></li>
--   <li><b>ELB load balancers:</b> <tt>A</tt> | <tt>AAAA</tt></li>
--   <li><b>Amazon S3 buckets:</b> <tt>A</tt></li>
--   <li><b>Amazon Virtual Private Cloud interface VPC endpoints</b>
--   <tt>A</tt></li>
--   <li><b>Another resource record set in this hosted zone:</b> Specify
--   the type of the resource record set that you're creating the alias
--   for. All values are supported except <tt>NS</tt> and <tt>SOA</tt>.If
--   you're creating an alias record that has the same name as the hosted
--   zone (known as the zone apex), you can't route traffic to a record for
--   which the value of <tt>Type</tt> is <tt>CNAME</tt>. This is because
--   the alias record must have the same type as the record you're routing
--   traffic to, and creating a CNAME record for the zone apex isn't
--   supported even for an alias record.</li>
--   </ul>
newResourceRecordSet :: Text -> RRType -> ResourceRecordSet

-- | The resource record cache time to live (TTL), in seconds. Note the
--   following:
--   
--   <ul>
--   <li>If you're creating or updating an alias resource record set, omit
--   <tt>TTL</tt>. Amazon Route 53 uses the value of <tt>TTL</tt> for the
--   alias target.</li>
--   <li>If you're associating this resource record set with a health check
--   (if you're adding a <tt>HealthCheckId</tt> element), we recommend that
--   you specify a <tt>TTL</tt> of 60 seconds or less so clients respond
--   quickly to changes in health status.</li>
--   <li>All of the resource record sets in a group of weighted resource
--   record sets must have the same value for <tt>TTL</tt>.</li>
--   <li>If a group of weighted resource record sets includes one or more
--   weighted alias resource record sets for which the alias target is an
--   ELB load balancer, we recommend that you specify a <tt>TTL</tt> of 60
--   seconds for all of the non-alias weighted resource record sets that
--   have the same name and type. Values other than 60 seconds (the TTL for
--   load balancers) will change the effect of the values that you specify
--   for <tt>Weight</tt>.</li>
--   </ul>
resourceRecordSet_ttl :: Lens' ResourceRecordSet (Maybe Natural)

-- | Information about the resource records to act upon.
--   
--   If you're creating an alias resource record set, omit
--   <tt>ResourceRecords</tt>.
resourceRecordSet_resourceRecords :: Lens' ResourceRecordSet (Maybe (NonEmpty ResourceRecord))

-- | <i>Alias resource record sets only:</i> Information about the Amazon
--   Web Services resource, such as a CloudFront distribution or an Amazon
--   S3 bucket, that you want to route traffic to.
--   
--   If you're creating resource records sets for a private hosted zone,
--   note the following:
--   
--   <ul>
--   <li>You can't create an alias resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.</li>
--   <li>Creating geolocation alias resource record sets or latency alias
--   resource record sets in a private hosted zone is unsupported.</li>
--   <li>For information about creating failover resource record sets in a
--   private hosted zone, see <a>Configuring Failover in a Private Hosted
--   Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
resourceRecordSet_aliasTarget :: Lens' ResourceRecordSet (Maybe AliasTarget)

-- | <i>Weighted resource record sets only:</i> Among resource record sets
--   that have the same combination of DNS name and type, a value that
--   determines the proportion of DNS queries that Amazon Route 53 responds
--   to using the current resource record set. Route 53 calculates the sum
--   of the weights for the resource record sets that have the same
--   combination of DNS name and type. Route 53 then responds to queries
--   based on the ratio of a resource's weight to the total. Note the
--   following:
--   
--   <ul>
--   <li>You must specify a value for the <tt>Weight</tt> element for every
--   weighted resource record set.</li>
--   <li>You can only specify one <tt>ResourceRecord</tt> per weighted
--   resource record set.</li>
--   <li>You can't create latency, failover, or geolocation resource record
--   sets that have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements as weighted resource record sets.</li>
--   <li>You can create a maximum of 100 weighted resource record sets that
--   have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements.</li>
--   <li>For weighted (but not weighted alias) resource record sets, if you
--   set <tt>Weight</tt> to <tt>0</tt> for a resource record set, Route 53
--   never responds to queries with the applicable value for that resource
--   record set. However, if you set <tt>Weight</tt> to <tt>0</tt> for all
--   resource record sets that have the same combination of DNS name and
--   type, traffic is routed to all resources with equal probability.The
--   effect of setting <tt>Weight</tt> to <tt>0</tt> is different when you
--   associate health checks with weighted resource record sets. For more
--   information, see <a>Options for Configuring Route 53 Active-Active and
--   Active-Passive Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.</li>
--   </ul>
resourceRecordSet_weight :: Lens' ResourceRecordSet (Maybe Natural)

-- | When you create a traffic policy instance, Amazon Route 53
--   automatically creates a resource record set.
--   <tt>TrafficPolicyInstanceId</tt> is the ID of the traffic policy
--   instance that Route 53 created this resource record set for.
--   
--   To delete the resource record set that is associated with a traffic
--   policy instance, use <tt>DeleteTrafficPolicyInstance</tt>. Route 53
--   will delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.
resourceRecordSet_trafficPolicyInstanceId :: Lens' ResourceRecordSet (Maybe Text)

-- | <i>Resource record sets that have a routing policy other than
--   simple:</i> An identifier that differentiates among multiple resource
--   record sets that have the same combination of name and type, such as
--   multiple weighted resource record sets named acme.example.com that
--   have a type of A. In a group of resource record sets that have the
--   same name and type, the value of <tt>SetIdentifier</tt> must be unique
--   for each resource record set.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
resourceRecordSet_setIdentifier :: Lens' ResourceRecordSet (Maybe Text)

-- | <i>Failover resource record sets only:</i> To configure failover, you
--   add the <tt>Failover</tt> element to two resource record sets. For one
--   resource record set, you specify <tt>PRIMARY</tt> as the value for
--   <tt>Failover</tt>; for the other resource record set, you specify
--   <tt>SECONDARY</tt>. In addition, you include the
--   <tt>HealthCheckId</tt> element and specify the health check that you
--   want Amazon Route 53 to perform for each resource record set.
--   
--   Except where noted, the following failover behaviors assume that you
--   have included the <tt>HealthCheckId</tt> element in both resource
--   record sets:
--   
--   <ul>
--   <li>When the primary resource record set is healthy, Route 53 responds
--   to DNS queries with the applicable value from the primary resource
--   record set regardless of the health of the secondary resource record
--   set.</li>
--   <li>When the primary resource record set is unhealthy and the
--   secondary resource record set is healthy, Route 53 responds to DNS
--   queries with the applicable value from the secondary resource record
--   set.</li>
--   <li>When the secondary resource record set is unhealthy, Route 53
--   responds to DNS queries with the applicable value from the primary
--   resource record set regardless of the health of the primary resource
--   record set.</li>
--   <li>If you omit the <tt>HealthCheckId</tt> element for the secondary
--   resource record set, and if the primary resource record set is
--   unhealthy, Route 53 always responds to DNS queries with the applicable
--   value from the secondary resource record set. This is true regardless
--   of the health of the associated endpoint.</li>
--   </ul>
--   
--   You can't create non-failover resource record sets that have the same
--   values for the <tt>Name</tt> and <tt>Type</tt> elements as failover
--   resource record sets.
--   
--   For failover alias resource record sets, you must also include the
--   <tt>EvaluateTargetHealth</tt> element and set the value to true.
--   
--   For more information about configuring failover for Route 53, see the
--   following topics in the <i>Amazon Route 53 Developer Guide</i>:
--   
--   <ul>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
resourceRecordSet_failover :: Lens' ResourceRecordSet (Maybe ResourceRecordSetFailover)

-- | If you want Amazon Route 53 to return this resource record set in
--   response to a DNS query only when the status of a health check is
--   healthy, include the <tt>HealthCheckId</tt> element and specify the ID
--   of the applicable health check.
--   
--   Route 53 determines whether a resource record set is healthy based on
--   one of the following:
--   
--   <ul>
--   <li>By periodically sending a request to the endpoint that is
--   specified in the health check</li>
--   <li>By aggregating the status of a specified group of health checks
--   (calculated health checks)</li>
--   <li>By determining the current state of a CloudWatch alarm (CloudWatch
--   metric health checks)</li>
--   </ul>
--   
--   Route 53 doesn't check the health of the endpoint that is specified in
--   the resource record set, for example, the endpoint specified by the IP
--   address in the <tt>Value</tt> element. When you add a
--   <tt>HealthCheckId</tt> element to a resource record set, Route 53
--   checks the health of the endpoint that you specified in the health
--   check.
--   
--   For more information, see the following topics in the /Amazon Route 53
--   Developer Guide/:
--   
--   <ul>
--   <li><a>How Amazon Route 53 Determines Whether an Endpoint Is
--   Healthy</a></li>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
--   
--   <b>When to Specify HealthCheckId</b>
--   
--   Specifying a value for <tt>HealthCheckId</tt> is useful only when
--   Route 53 is choosing between two or more resource record sets to
--   respond to a DNS query, and you want Route 53 to base the choice in
--   part on the status of a health check. Configuring health checks makes
--   sense only in the following configurations:
--   
--   <ul>
--   <li><b>Non-alias resource record sets</b>: You're checking the health
--   of a group of non-alias resource record sets that have the same
--   routing policy, name, and type (such as multiple weighted records
--   named www.example.com with a type of A) and you specify health check
--   IDs for all the resource record sets.If the health check status for a
--   resource record set is healthy, Route 53 includes the record among the
--   records that it responds to DNS queries with.If the health check
--   status for a resource record set is unhealthy, Route 53 stops
--   responding to DNS queries using the value for that resource record
--   set.If the health check status for all resource record sets in the
--   group is unhealthy, Route 53 considers all resource record sets in the
--   group healthy and responds to DNS queries accordingly.</li>
--   <li><b>Alias resource record sets</b>: You specify the following
--   settings:<ul><li>You set <tt>EvaluateTargetHealth</tt> to true for an
--   alias resource record set in a group of resource record sets that have
--   the same routing policy, name, and type (such as multiple weighted
--   records named www.example.com with a type of A).</li><li>You configure
--   the alias resource record set to route traffic to a non-alias resource
--   record set in the same hosted zone.</li><li>You specify a health check
--   ID for the non-alias resource record set.</li></ul>If the health check
--   status is healthy, Route 53 considers the alias resource record set to
--   be healthy and includes the alias record among the records that it
--   responds to DNS queries with.If the health check status is unhealthy,
--   Route 53 stops responding to DNS queries using the alias resource
--   record set.The alias resource record set can also route traffic to a
--   <i>group</i> of non-alias resource record sets that have the same
--   routing policy, name, and type. In that configuration, associate
--   health checks with all of the resource record sets in the group of
--   non-alias resource record sets.</li>
--   </ul>
--   
--   <b>Geolocation Routing</b>
--   
--   For geolocation resource record sets, if an endpoint is unhealthy,
--   Route 53 looks for a resource record set for the larger, associated
--   geographic region. For example, suppose you have resource record sets
--   for a state in the United States, for the entire United States, for
--   North America, and a resource record set that has <tt>*</tt> for
--   <tt>CountryCode</tt> is <tt>*</tt>, which applies to all locations. If
--   the endpoint for the state resource record set is unhealthy, Route 53
--   checks for healthy resource record sets in the following order until
--   it finds a resource record set for which the endpoint is healthy:
--   
--   <ul>
--   <li>The United States</li>
--   <li>North America</li>
--   <li>The default resource record set</li>
--   </ul>
--   
--   <b>Specifying the Health Check Endpoint by Domain Name</b>
--   
--   If your health checks specify the endpoint only by domain name, we
--   recommend that you create a separate health check for each endpoint.
--   For example, create a health check for each <tt>HTTP</tt> server that
--   is serving content for <tt>www.example.com</tt>. For the value of
--   <tt>FullyQualifiedDomainName</tt>, specify the domain name of the
--   server (such as <tt>us-east-2-www.example.com</tt>), not the name of
--   the resource record sets (<tt>www.example.com</tt>).
--   
--   Health check results will be unpredictable if you do the following:
--   
--   <ul>
--   <li>Create a health check that has the same value for
--   <tt>FullyQualifiedDomainName</tt> as the name of a resource record
--   set.</li>
--   <li>Associate that health check with the resource record set.</li>
--   </ul>
resourceRecordSet_healthCheckId :: Lens' ResourceRecordSet (Maybe Text)

-- | <i>Latency-based resource record sets only:</i> The Amazon EC2 Region
--   where you created the resource that this resource record set refers
--   to. The resource typically is an Amazon Web Services resource, such as
--   an EC2 instance or an ELB load balancer, and is referred to by an IP
--   address or a DNS domain name, depending on the record type.
--   
--   Although creating latency and latency alias resource record sets in a
--   private hosted zone is allowed, it's not supported.
--   
--   When Amazon Route 53 receives a DNS query for a domain name and type
--   for which you have created latency resource record sets, Route 53
--   selects the latency resource record set that has the lowest latency
--   between the end user and the associated Amazon EC2 Region. Route 53
--   then returns the value that is associated with the selected resource
--   record set.
--   
--   Note the following:
--   
--   <ul>
--   <li>You can only specify one <tt>ResourceRecord</tt> per latency
--   resource record set.</li>
--   <li>You can only create one latency resource record set for each
--   Amazon EC2 Region.</li>
--   <li>You aren't required to create latency resource record sets for all
--   Amazon EC2 Regions. Route 53 will choose the region with the best
--   latency from among the regions that you create latency resource record
--   sets for.</li>
--   <li>You can't create non-latency resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   latency resource record sets.</li>
--   </ul>
resourceRecordSet_region :: Lens' ResourceRecordSet (Maybe Region)

-- | <i>Geolocation resource record sets only:</i> A complex type that lets
--   you control how Amazon Route 53 responds to DNS queries based on the
--   geographic origin of the query. For example, if you want all queries
--   from Africa to be routed to a web server with an IP address of
--   <tt>192.0.2.111</tt>, create a resource record set with a
--   <tt>Type</tt> of <tt>A</tt> and a <tt>ContinentCode</tt> of
--   <tt>AF</tt>.
--   
--   Although creating geolocation and geolocation alias resource record
--   sets in a private hosted zone is allowed, it's not supported.
--   
--   If you create separate resource record sets for overlapping geographic
--   regions (for example, one resource record set for a continent and one
--   for a country on the same continent), priority goes to the smallest
--   geographic region. This allows you to route most queries for a
--   continent to one resource and to route queries for a country on that
--   continent to a different resource.
--   
--   You can't create two geolocation resource record sets that specify the
--   same geographic location.
--   
--   The value <tt>*</tt> in the <tt>CountryCode</tt> element matches all
--   geographic locations that aren't specified in other geolocation
--   resource record sets that have the same values for the <tt>Name</tt>
--   and <tt>Type</tt> elements.
--   
--   Geolocation works by mapping IP addresses to locations. However, some
--   IP addresses aren't mapped to geographic locations, so even if you
--   create geolocation resource record sets that cover all seven
--   continents, Route 53 will receive some DNS queries from locations that
--   it can't identify. We recommend that you create a resource record set
--   for which the value of <tt>CountryCode</tt> is <tt>*</tt>. Two groups
--   of queries are routed to the resource that you specify in this record:
--   queries that come from locations for which you haven't created
--   geolocation resource record sets and queries from IP addresses that
--   aren't mapped to a location. If you don't create a <tt>*</tt> resource
--   record set, Route 53 returns a "no answer" response for queries from
--   those locations.
--   
--   You can't create non-geolocation resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   geolocation resource record sets.
resourceRecordSet_geoLocation :: Lens' ResourceRecordSet (Maybe GeoLocation)

-- | <i>Multivalue answer resource record sets only</i>: To route traffic
--   approximately randomly to multiple resources, such as web servers,
--   create one multivalue answer record for each resource and specify
--   <tt>true</tt> for <tt>MultiValueAnswer</tt>. Note the following:
--   
--   <ul>
--   <li>If you associate a health check with a multivalue answer resource
--   record set, Amazon Route 53 responds to DNS queries with the
--   corresponding IP address only when the health check is healthy.</li>
--   <li>If you don't associate a health check with a multivalue answer
--   record, Route 53 always considers the record to be healthy.</li>
--   <li>Route 53 responds to DNS queries with up to eight healthy records;
--   if you have eight or fewer healthy records, Route 53 responds to all
--   DNS queries with all the healthy records.</li>
--   <li>If you have more than eight healthy records, Route 53 responds to
--   different DNS resolvers with different combinations of healthy
--   records.</li>
--   <li>When all records are unhealthy, Route 53 responds to DNS queries
--   with up to eight unhealthy records.</li>
--   <li>If a resource becomes unavailable after a resolver caches a
--   response, client software typically tries another of the IP addresses
--   in the response.</li>
--   </ul>
--   
--   You can't create multivalue answer alias records.
resourceRecordSet_multiValueAnswer :: Lens' ResourceRecordSet (Maybe Bool)

-- | For <tt>ChangeResourceRecordSets</tt> requests, the name of the record
--   that you want to create, update, or delete. For
--   <tt>ListResourceRecordSets</tt> responses, the name of a record in the
--   specified hosted zone.
--   
--   <b>ChangeResourceRecordSets Only</b>
--   
--   Enter a fully qualified domain name, for example,
--   <tt>www.example.com</tt>. You can optionally include a trailing dot.
--   If you omit the trailing dot, Amazon Route 53 assumes that the domain
--   name that you specify is fully qualified. This means that Route 53
--   treats <tt>www.example.com</tt> (without a trailing dot) and
--   <tt>www.example.com.</tt> (with a trailing dot) as identical.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>DNS Domain Name Format</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.
--   
--   You can use the asterisk (*) wildcard to replace the leftmost label in
--   a domain name, for example, <tt>*.example.com</tt>. Note the
--   following:
--   
--   <ul>
--   <li>The * must replace the entire label. For example, you can't
--   specify <tt>*prod.example.com</tt> or <tt>prod*.example.com</tt>.</li>
--   <li>The * can't replace any of the middle labels, for example,
--   marketing.*.example.com.</li>
--   <li>If you include * in any position other than the leftmost label in
--   a domain name, DNS treats it as an * character (ASCII 42), not as a
--   wildcard.You can't use the * wildcard for resource records sets that
--   have a type of NS.</li>
--   </ul>
--   
--   You can use the * wildcard as the leftmost label in a domain name, for
--   example, <tt>*.example.com</tt>. You can't use an * for one of the
--   middle labels, for example, <tt>marketing.*.example.com</tt>. In
--   addition, the * must replace the entire label; for example, you can't
--   specify <tt>prod*.example.com</tt>.
resourceRecordSet_name :: Lens' ResourceRecordSet Text

-- | The DNS record type. For information about different record types and
--   how data is encoded for them, see <a>Supported DNS Resource Record
--   Types</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>DS</tt>
--   |<tt>MX</tt> | <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> |
--   <tt>SOA</tt> | <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>. When creating a group of
--   weighted, latency, geolocation, or failover resource record sets,
--   specify the same value for all of the resource record sets in the
--   group.
--   
--   Valid values for multivalue answer resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   SPF records were formerly used to verify the identity of the sender of
--   email messages. However, we no longer recommend that you create
--   resource record sets for which the value of <tt>Type</tt> is
--   <tt>SPF</tt>. RFC 7208, /Sender Policy Framework (SPF) for Authorizing
--   Use of Domains in Email, Version 1/, has been updated to say,
--   "...[I]ts existence and mechanism defined in [RFC4408] have led to
--   some interoperability issues. Accordingly, its use is no longer
--   appropriate for SPF version 1; implementations are not to use it." In
--   RFC 7208, see section 14.1, <a>The SPF DNS Record Type</a>.
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs:</b> <tt>A</tt></li>
--   <li><b>CloudFront distributions:</b> <tt>A</tt>If IPv6 is enabled for
--   the distribution, create two resource record sets to route traffic to
--   your distribution, one with a value of <tt>A</tt> and one with a value
--   of <tt>AAAA</tt>.</li>
--   <li>__Amazon API Gateway environment that has a regionalized
--   subdomain__: <tt>A</tt></li>
--   <li><b>ELB load balancers:</b> <tt>A</tt> | <tt>AAAA</tt></li>
--   <li><b>Amazon S3 buckets:</b> <tt>A</tt></li>
--   <li><b>Amazon Virtual Private Cloud interface VPC endpoints</b>
--   <tt>A</tt></li>
--   <li><b>Another resource record set in this hosted zone:</b> Specify
--   the type of the resource record set that you're creating the alias
--   for. All values are supported except <tt>NS</tt> and <tt>SOA</tt>.If
--   you're creating an alias record that has the same name as the hosted
--   zone (known as the zone apex), you can't route traffic to a record for
--   which the value of <tt>Type</tt> is <tt>CNAME</tt>. This is because
--   the alias record must have the same type as the record you're routing
--   traffic to, and creating a CNAME record for the zone apex isn't
--   supported even for an alias record.</li>
--   </ul>
resourceRecordSet_type :: Lens' ResourceRecordSet RRType
instance GHC.Generics.Generic Network.AWS.Route53.Types.ResourceRecordSet.ResourceRecordSet
instance GHC.Show.Show Network.AWS.Route53.Types.ResourceRecordSet.ResourceRecordSet
instance GHC.Read.Read Network.AWS.Route53.Types.ResourceRecordSet.ResourceRecordSet
instance GHC.Classes.Eq Network.AWS.Route53.Types.ResourceRecordSet.ResourceRecordSet
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.ResourceRecordSet.ResourceRecordSet
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ResourceRecordSet.ResourceRecordSet
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ResourceRecordSet.ResourceRecordSet
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.ResourceRecordSet.ResourceRecordSet


module Network.AWS.Route53.Types.Change

-- | The information for each resource record set that you want to change.
--   
--   <i>See:</i> <a>newChange</a> smart constructor.
data Change
Change' :: ChangeAction -> ResourceRecordSet -> Change

-- | The action to perform:
--   
--   <ul>
--   <li><tt>CREATE</tt>: Creates a resource record set that has the
--   specified values.</li>
--   <li><tt>DELETE</tt>: Deletes a existing resource record set.To delete
--   the resource record set that is associated with a traffic policy
--   instance, use <a>DeleteTrafficPolicyInstance</a>. Amazon Route 53 will
--   delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.</li>
--   <li><tt>UPSERT</tt>: If a resource record set doesn't already exist,
--   Route 53 creates it. If a resource record set does exist, Route 53
--   updates it with the values in the request.</li>
--   </ul>
[$sel:action:Change'] :: Change -> ChangeAction

-- | Information about the resource record set to create, delete, or
--   update.
[$sel:resourceRecordSet:Change'] :: Change -> ResourceRecordSet

-- | Create a value of <a>Change</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:Change'</a>, <a>change_action</a> - The action to
--   perform:
--   
--   <ul>
--   <li><tt>CREATE</tt>: Creates a resource record set that has the
--   specified values.</li>
--   <li><tt>DELETE</tt>: Deletes a existing resource record set.To delete
--   the resource record set that is associated with a traffic policy
--   instance, use <a>DeleteTrafficPolicyInstance</a>. Amazon Route 53 will
--   delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.</li>
--   <li><tt>UPSERT</tt>: If a resource record set doesn't already exist,
--   Route 53 creates it. If a resource record set does exist, Route 53
--   updates it with the values in the request.</li>
--   </ul>
--   
--   <a>$sel:resourceRecordSet:Change'</a>, <a>change_resourceRecordSet</a>
--   - Information about the resource record set to create, delete, or
--   update.
newChange :: ChangeAction -> ResourceRecordSet -> Change

-- | The action to perform:
--   
--   <ul>
--   <li><tt>CREATE</tt>: Creates a resource record set that has the
--   specified values.</li>
--   <li><tt>DELETE</tt>: Deletes a existing resource record set.To delete
--   the resource record set that is associated with a traffic policy
--   instance, use <a>DeleteTrafficPolicyInstance</a>. Amazon Route 53 will
--   delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.</li>
--   <li><tt>UPSERT</tt>: If a resource record set doesn't already exist,
--   Route 53 creates it. If a resource record set does exist, Route 53
--   updates it with the values in the request.</li>
--   </ul>
change_action :: Lens' Change ChangeAction

-- | Information about the resource record set to create, delete, or
--   update.
change_resourceRecordSet :: Lens' Change ResourceRecordSet
instance GHC.Generics.Generic Network.AWS.Route53.Types.Change.Change
instance GHC.Show.Show Network.AWS.Route53.Types.Change.Change
instance GHC.Read.Read Network.AWS.Route53.Types.Change.Change
instance GHC.Classes.Eq Network.AWS.Route53.Types.Change.Change
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.Change.Change
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.Change.Change
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.Change.Change


module Network.AWS.Route53.Types.ChangeBatch

-- | The information for a change request.
--   
--   <i>See:</i> <a>newChangeBatch</a> smart constructor.
data ChangeBatch
ChangeBatch' :: Maybe Text -> NonEmpty Change -> ChangeBatch

-- | <i>Optional:</i> Any comments you want to include about a change batch
--   request.
[$sel:comment:ChangeBatch'] :: ChangeBatch -> Maybe Text

-- | Information about the changes to make to the record sets.
[$sel:changes:ChangeBatch'] :: ChangeBatch -> NonEmpty Change

-- | Create a value of <a>ChangeBatch</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:ChangeBatch'</a>, <a>changeBatch_comment</a> -
--   <i>Optional:</i> Any comments you want to include about a change batch
--   request.
--   
--   <a>$sel:changes:ChangeBatch'</a>, <a>changeBatch_changes</a> -
--   Information about the changes to make to the record sets.
newChangeBatch :: NonEmpty Change -> ChangeBatch

-- | <i>Optional:</i> Any comments you want to include about a change batch
--   request.
changeBatch_comment :: Lens' ChangeBatch (Maybe Text)

-- | Information about the changes to make to the record sets.
changeBatch_changes :: Lens' ChangeBatch (NonEmpty Change)
instance GHC.Generics.Generic Network.AWS.Route53.Types.ChangeBatch.ChangeBatch
instance GHC.Show.Show Network.AWS.Route53.Types.ChangeBatch.ChangeBatch
instance GHC.Read.Read Network.AWS.Route53.Types.ChangeBatch.ChangeBatch
instance GHC.Classes.Eq Network.AWS.Route53.Types.ChangeBatch.ChangeBatch
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ChangeBatch.ChangeBatch
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ChangeBatch.ChangeBatch
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.ChangeBatch.ChangeBatch


module Network.AWS.Route53.Types.ReusableDelegationSetLimitType
newtype ReusableDelegationSetLimitType
ReusableDelegationSetLimitType' :: Text -> ReusableDelegationSetLimitType
[fromReusableDelegationSetLimitType] :: ReusableDelegationSetLimitType -> Text
pattern ReusableDelegationSetLimitType_MAX_ZONES_BY_REUSABLE_DELEGATION_SET :: ReusableDelegationSetLimitType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance GHC.Generics.Generic Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance GHC.Classes.Ord Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance GHC.Classes.Eq Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance GHC.Read.Read Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType
instance GHC.Show.Show Network.AWS.Route53.Types.ReusableDelegationSetLimitType.ReusableDelegationSetLimitType


module Network.AWS.Route53.Types.ReusableDelegationSetLimit

-- | A complex type that contains the type of limit that you specified in
--   the request and the current value for that limit.
--   
--   <i>See:</i> <a>newReusableDelegationSetLimit</a> smart constructor.
data ReusableDelegationSetLimit
ReusableDelegationSetLimit' :: ReusableDelegationSetLimitType -> Natural -> ReusableDelegationSetLimit

-- | The limit that you requested:
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt>, the maximum number of
--   hosted zones that you can associate with the specified reusable
--   delegation set.
[$sel:type':ReusableDelegationSetLimit'] :: ReusableDelegationSetLimit -> ReusableDelegationSetLimitType

-- | The current value for the
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> limit.
[$sel:value:ReusableDelegationSetLimit'] :: ReusableDelegationSetLimit -> Natural

-- | Create a value of <a>ReusableDelegationSetLimit</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':ReusableDelegationSetLimit'</a>,
--   <a>reusableDelegationSetLimit_type</a> - The limit that you requested:
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt>, the maximum number of
--   hosted zones that you can associate with the specified reusable
--   delegation set.
--   
--   <a>$sel:value:ReusableDelegationSetLimit'</a>,
--   <a>reusableDelegationSetLimit_value</a> - The current value for the
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> limit.
newReusableDelegationSetLimit :: ReusableDelegationSetLimitType -> Natural -> ReusableDelegationSetLimit

-- | The limit that you requested:
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt>, the maximum number of
--   hosted zones that you can associate with the specified reusable
--   delegation set.
reusableDelegationSetLimit_type :: Lens' ReusableDelegationSetLimit ReusableDelegationSetLimitType

-- | The current value for the
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> limit.
reusableDelegationSetLimit_value :: Lens' ReusableDelegationSetLimit Natural
instance GHC.Generics.Generic Network.AWS.Route53.Types.ReusableDelegationSetLimit.ReusableDelegationSetLimit
instance GHC.Show.Show Network.AWS.Route53.Types.ReusableDelegationSetLimit.ReusableDelegationSetLimit
instance GHC.Read.Read Network.AWS.Route53.Types.ReusableDelegationSetLimit.ReusableDelegationSetLimit
instance GHC.Classes.Eq Network.AWS.Route53.Types.ReusableDelegationSetLimit.ReusableDelegationSetLimit
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.ReusableDelegationSetLimit.ReusableDelegationSetLimit
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ReusableDelegationSetLimit.ReusableDelegationSetLimit
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ReusableDelegationSetLimit.ReusableDelegationSetLimit


module Network.AWS.Route53.Types.Statistic
newtype Statistic
Statistic' :: Text -> Statistic
[fromStatistic] :: Statistic -> Text
pattern Statistic_Average :: Statistic
pattern Statistic_Maximum :: Statistic
pattern Statistic_Minimum :: Statistic
pattern Statistic_SampleCount :: Statistic
pattern Statistic_Sum :: Statistic
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.Statistic.Statistic
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.Statistic.Statistic
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.Statistic.Statistic
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.Statistic.Statistic
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.Statistic.Statistic
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.Statistic.Statistic
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.Statistic.Statistic
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.Statistic.Statistic
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.Statistic.Statistic
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.Statistic.Statistic
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.Statistic.Statistic
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.Statistic.Statistic
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.Statistic.Statistic
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.Statistic.Statistic
instance GHC.Generics.Generic Network.AWS.Route53.Types.Statistic.Statistic
instance GHC.Classes.Ord Network.AWS.Route53.Types.Statistic.Statistic
instance GHC.Classes.Eq Network.AWS.Route53.Types.Statistic.Statistic
instance GHC.Read.Read Network.AWS.Route53.Types.Statistic.Statistic
instance GHC.Show.Show Network.AWS.Route53.Types.Statistic.Statistic


module Network.AWS.Route53.Types.CloudWatchAlarmConfiguration

-- | A complex type that contains information about the CloudWatch alarm
--   that Amazon Route 53 is monitoring for this health check.
--   
--   <i>See:</i> <a>newCloudWatchAlarmConfiguration</a> smart constructor.
data CloudWatchAlarmConfiguration
CloudWatchAlarmConfiguration' :: Maybe [Dimension] -> Natural -> Double -> ComparisonOperator -> Natural -> Text -> Text -> Statistic -> CloudWatchAlarmConfiguration

-- | For the metric that the CloudWatch alarm is associated with, a complex
--   type that contains information about the dimensions for the metric.
--   For information, see <a>Amazon CloudWatch Namespaces, Dimensions, and
--   Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
[$sel:dimensions:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Maybe [Dimension]

-- | For the metric that the CloudWatch alarm is associated with, the
--   number of periods that the metric is compared to the threshold.
[$sel:evaluationPeriods:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Natural

-- | For the metric that the CloudWatch alarm is associated with, the value
--   the metric is compared with.
[$sel:threshold:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Double

-- | For the metric that the CloudWatch alarm is associated with, the
--   arithmetic operation that is used for the comparison.
[$sel:comparisonOperator:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> ComparisonOperator

-- | For the metric that the CloudWatch alarm is associated with, the
--   duration of one evaluation period in seconds.
[$sel:period:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Natural

-- | The name of the CloudWatch metric that the alarm is associated with.
[$sel:metricName:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Text

-- | The namespace of the metric that the alarm is associated with. For
--   more information, see <a>Amazon CloudWatch Namespaces, Dimensions, and
--   Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
[$sel:namespace:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Text

-- | For the metric that the CloudWatch alarm is associated with, the
--   statistic that is applied to the metric.
[$sel:statistic:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Statistic

-- | Create a value of <a>CloudWatchAlarmConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dimensions:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_dimensions</a> - For the metric that
--   the CloudWatch alarm is associated with, a complex type that contains
--   information about the dimensions for the metric. For information, see
--   <a>Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a>
--   in the <i>Amazon CloudWatch User Guide</i>.
--   
--   <a>$sel:evaluationPeriods:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_evaluationPeriods</a> - For the metric
--   that the CloudWatch alarm is associated with, the number of periods
--   that the metric is compared to the threshold.
--   
--   <a>$sel:threshold:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_threshold</a> - For the metric that
--   the CloudWatch alarm is associated with, the value the metric is
--   compared with.
--   
--   <a>$sel:comparisonOperator:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_comparisonOperator</a> - For the
--   metric that the CloudWatch alarm is associated with, the arithmetic
--   operation that is used for the comparison.
--   
--   <a>$sel:period:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_period</a> - For the metric that the
--   CloudWatch alarm is associated with, the duration of one evaluation
--   period in seconds.
--   
--   <a>$sel:metricName:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_metricName</a> - The name of the
--   CloudWatch metric that the alarm is associated with.
--   
--   <a>$sel:namespace:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_namespace</a> - The namespace of the
--   metric that the alarm is associated with. For more information, see
--   <a>Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a>
--   in the <i>Amazon CloudWatch User Guide</i>.
--   
--   <a>$sel:statistic:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_statistic</a> - For the metric that
--   the CloudWatch alarm is associated with, the statistic that is applied
--   to the metric.
newCloudWatchAlarmConfiguration :: Natural -> Double -> ComparisonOperator -> Natural -> Text -> Text -> Statistic -> CloudWatchAlarmConfiguration

-- | For the metric that the CloudWatch alarm is associated with, a complex
--   type that contains information about the dimensions for the metric.
--   For information, see <a>Amazon CloudWatch Namespaces, Dimensions, and
--   Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
cloudWatchAlarmConfiguration_dimensions :: Lens' CloudWatchAlarmConfiguration (Maybe [Dimension])

-- | For the metric that the CloudWatch alarm is associated with, the
--   number of periods that the metric is compared to the threshold.
cloudWatchAlarmConfiguration_evaluationPeriods :: Lens' CloudWatchAlarmConfiguration Natural

-- | For the metric that the CloudWatch alarm is associated with, the value
--   the metric is compared with.
cloudWatchAlarmConfiguration_threshold :: Lens' CloudWatchAlarmConfiguration Double

-- | For the metric that the CloudWatch alarm is associated with, the
--   arithmetic operation that is used for the comparison.
cloudWatchAlarmConfiguration_comparisonOperator :: Lens' CloudWatchAlarmConfiguration ComparisonOperator

-- | For the metric that the CloudWatch alarm is associated with, the
--   duration of one evaluation period in seconds.
cloudWatchAlarmConfiguration_period :: Lens' CloudWatchAlarmConfiguration Natural

-- | The name of the CloudWatch metric that the alarm is associated with.
cloudWatchAlarmConfiguration_metricName :: Lens' CloudWatchAlarmConfiguration Text

-- | The namespace of the metric that the alarm is associated with. For
--   more information, see <a>Amazon CloudWatch Namespaces, Dimensions, and
--   Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
cloudWatchAlarmConfiguration_namespace :: Lens' CloudWatchAlarmConfiguration Text

-- | For the metric that the CloudWatch alarm is associated with, the
--   statistic that is applied to the metric.
cloudWatchAlarmConfiguration_statistic :: Lens' CloudWatchAlarmConfiguration Statistic
instance GHC.Generics.Generic Network.AWS.Route53.Types.CloudWatchAlarmConfiguration.CloudWatchAlarmConfiguration
instance GHC.Show.Show Network.AWS.Route53.Types.CloudWatchAlarmConfiguration.CloudWatchAlarmConfiguration
instance GHC.Read.Read Network.AWS.Route53.Types.CloudWatchAlarmConfiguration.CloudWatchAlarmConfiguration
instance GHC.Classes.Eq Network.AWS.Route53.Types.CloudWatchAlarmConfiguration.CloudWatchAlarmConfiguration
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.CloudWatchAlarmConfiguration.CloudWatchAlarmConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.CloudWatchAlarmConfiguration.CloudWatchAlarmConfiguration
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.CloudWatchAlarmConfiguration.CloudWatchAlarmConfiguration


module Network.AWS.Route53.Types.HealthCheck

-- | A complex type that contains information about one health check that
--   is associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newHealthCheck</a> smart constructor.
data HealthCheck
HealthCheck' :: Maybe LinkedService -> Maybe CloudWatchAlarmConfiguration -> Text -> Text -> HealthCheckConfig -> Natural -> HealthCheck

-- | If the health check was created by another service, the service that
--   created the health check. When a health check is created by another
--   service, you can't edit or delete it using Amazon Route 53.
[$sel:linkedService:HealthCheck'] :: HealthCheck -> Maybe LinkedService

-- | A complex type that contains information about the CloudWatch alarm
--   that Amazon Route 53 is monitoring for this health check.
[$sel:cloudWatchAlarmConfiguration:HealthCheck'] :: HealthCheck -> Maybe CloudWatchAlarmConfiguration

-- | The identifier that Amazon Route 53 assigned to the health check when
--   you created it. When you add or update a resource record set, you use
--   this value to specify which health check to use. The value can be up
--   to 64 characters long.
[$sel:id:HealthCheck'] :: HealthCheck -> Text

-- | A unique string that you specified when you created the health check.
[$sel:callerReference:HealthCheck'] :: HealthCheck -> Text

-- | A complex type that contains detailed information about one health
--   check.
[$sel:healthCheckConfig:HealthCheck'] :: HealthCheck -> HealthCheckConfig

-- | The version of the health check. You can optionally pass this value in
--   a call to <tt>UpdateHealthCheck</tt> to prevent overwriting another
--   change to the health check.
[$sel:healthCheckVersion:HealthCheck'] :: HealthCheck -> Natural

-- | Create a value of <a>HealthCheck</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkedService:HealthCheck'</a>,
--   <a>healthCheck_linkedService</a> - If the health check was created by
--   another service, the service that created the health check. When a
--   health check is created by another service, you can't edit or delete
--   it using Amazon Route 53.
--   
--   <a>$sel:cloudWatchAlarmConfiguration:HealthCheck'</a>,
--   <a>healthCheck_cloudWatchAlarmConfiguration</a> - A complex type that
--   contains information about the CloudWatch alarm that Amazon Route 53
--   is monitoring for this health check.
--   
--   <a>$sel:id:HealthCheck'</a>, <a>healthCheck_id</a> - The identifier
--   that Amazon Route 53 assigned to the health check when you created it.
--   When you add or update a resource record set, you use this value to
--   specify which health check to use. The value can be up to 64
--   characters long.
--   
--   <a>$sel:callerReference:HealthCheck'</a>,
--   <a>healthCheck_callerReference</a> - A unique string that you
--   specified when you created the health check.
--   
--   <a>$sel:healthCheckConfig:HealthCheck'</a>,
--   <a>healthCheck_healthCheckConfig</a> - A complex type that contains
--   detailed information about one health check.
--   
--   <a>$sel:healthCheckVersion:HealthCheck'</a>,
--   <a>healthCheck_healthCheckVersion</a> - The version of the health
--   check. You can optionally pass this value in a call to
--   <tt>UpdateHealthCheck</tt> to prevent overwriting another change to
--   the health check.
newHealthCheck :: Text -> Text -> HealthCheckConfig -> Natural -> HealthCheck

-- | If the health check was created by another service, the service that
--   created the health check. When a health check is created by another
--   service, you can't edit or delete it using Amazon Route 53.
healthCheck_linkedService :: Lens' HealthCheck (Maybe LinkedService)

-- | A complex type that contains information about the CloudWatch alarm
--   that Amazon Route 53 is monitoring for this health check.
healthCheck_cloudWatchAlarmConfiguration :: Lens' HealthCheck (Maybe CloudWatchAlarmConfiguration)

-- | The identifier that Amazon Route 53 assigned to the health check when
--   you created it. When you add or update a resource record set, you use
--   this value to specify which health check to use. The value can be up
--   to 64 characters long.
healthCheck_id :: Lens' HealthCheck Text

-- | A unique string that you specified when you created the health check.
healthCheck_callerReference :: Lens' HealthCheck Text

-- | A complex type that contains detailed information about one health
--   check.
healthCheck_healthCheckConfig :: Lens' HealthCheck HealthCheckConfig

-- | The version of the health check. You can optionally pass this value in
--   a call to <tt>UpdateHealthCheck</tt> to prevent overwriting another
--   change to the health check.
healthCheck_healthCheckVersion :: Lens' HealthCheck Natural
instance GHC.Generics.Generic Network.AWS.Route53.Types.HealthCheck.HealthCheck
instance GHC.Show.Show Network.AWS.Route53.Types.HealthCheck.HealthCheck
instance GHC.Read.Read Network.AWS.Route53.Types.HealthCheck.HealthCheck
instance GHC.Classes.Eq Network.AWS.Route53.Types.HealthCheck.HealthCheck
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.HealthCheck.HealthCheck
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.HealthCheck.HealthCheck
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.HealthCheck.HealthCheck


module Network.AWS.Route53.Types.StatusReport

-- | A complex type that contains the status that one Amazon Route 53
--   health checker reports and the time of the health check.
--   
--   <i>See:</i> <a>newStatusReport</a> smart constructor.
data StatusReport
StatusReport' :: Maybe Text -> Maybe ISO8601 -> StatusReport

-- | A description of the status of the health check endpoint as reported
--   by one of the Amazon Route 53 health checkers.
[$sel:status:StatusReport'] :: StatusReport -> Maybe Text

-- | The date and time that the health checker performed the health check
--   in <a>ISO 8601 format</a> and Coordinated Universal Time (UTC). For
--   example, the value <tt>2017-03-27T17:48:16.751Z</tt> represents March
--   27, 2017 at 17:48:16.751 UTC.
[$sel:checkedTime:StatusReport'] :: StatusReport -> Maybe ISO8601

-- | Create a value of <a>StatusReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StatusReport'</a>, <a>statusReport_status</a> - A
--   description of the status of the health check endpoint as reported by
--   one of the Amazon Route 53 health checkers.
--   
--   <a>$sel:checkedTime:StatusReport'</a>, <a>statusReport_checkedTime</a>
--   - The date and time that the health checker performed the health check
--   in <a>ISO 8601 format</a> and Coordinated Universal Time (UTC). For
--   example, the value <tt>2017-03-27T17:48:16.751Z</tt> represents March
--   27, 2017 at 17:48:16.751 UTC.
newStatusReport :: StatusReport

-- | A description of the status of the health check endpoint as reported
--   by one of the Amazon Route 53 health checkers.
statusReport_status :: Lens' StatusReport (Maybe Text)

-- | The date and time that the health checker performed the health check
--   in <a>ISO 8601 format</a> and Coordinated Universal Time (UTC). For
--   example, the value <tt>2017-03-27T17:48:16.751Z</tt> represents March
--   27, 2017 at 17:48:16.751 UTC.
statusReport_checkedTime :: Lens' StatusReport (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.Route53.Types.StatusReport.StatusReport
instance GHC.Show.Show Network.AWS.Route53.Types.StatusReport.StatusReport
instance GHC.Read.Read Network.AWS.Route53.Types.StatusReport.StatusReport
instance GHC.Classes.Eq Network.AWS.Route53.Types.StatusReport.StatusReport
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.StatusReport.StatusReport
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.StatusReport.StatusReport
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.StatusReport.StatusReport


module Network.AWS.Route53.Types.HealthCheckObservation

-- | A complex type that contains the last failure reason as reported by
--   one Amazon Route 53 health checker.
--   
--   <i>See:</i> <a>newHealthCheckObservation</a> smart constructor.
data HealthCheckObservation
HealthCheckObservation' :: Maybe Text -> Maybe StatusReport -> Maybe HealthCheckRegion -> HealthCheckObservation

-- | The IP address of the Amazon Route 53 health checker that provided the
--   failure reason in <tt>StatusReport</tt>.
[$sel:iPAddress:HealthCheckObservation'] :: HealthCheckObservation -> Maybe Text

-- | A complex type that contains the last failure reason as reported by
--   one Amazon Route 53 health checker and the time of the failed health
--   check.
[$sel:statusReport:HealthCheckObservation'] :: HealthCheckObservation -> Maybe StatusReport

-- | The region of the Amazon Route 53 health checker that provided the
--   status in <tt>StatusReport</tt>.
[$sel:region:HealthCheckObservation'] :: HealthCheckObservation -> Maybe HealthCheckRegion

-- | Create a value of <a>HealthCheckObservation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iPAddress:HealthCheckObservation'</a>,
--   <a>healthCheckObservation_iPAddress</a> - The IP address of the Amazon
--   Route 53 health checker that provided the failure reason in
--   <tt>StatusReport</tt>.
--   
--   <a>$sel:statusReport:HealthCheckObservation'</a>,
--   <a>healthCheckObservation_statusReport</a> - A complex type that
--   contains the last failure reason as reported by one Amazon Route 53
--   health checker and the time of the failed health check.
--   
--   <a>$sel:region:HealthCheckObservation'</a>,
--   <a>healthCheckObservation_region</a> - The region of the Amazon Route
--   53 health checker that provided the status in <tt>StatusReport</tt>.
newHealthCheckObservation :: HealthCheckObservation

-- | The IP address of the Amazon Route 53 health checker that provided the
--   failure reason in <tt>StatusReport</tt>.
healthCheckObservation_iPAddress :: Lens' HealthCheckObservation (Maybe Text)

-- | A complex type that contains the last failure reason as reported by
--   one Amazon Route 53 health checker and the time of the failed health
--   check.
healthCheckObservation_statusReport :: Lens' HealthCheckObservation (Maybe StatusReport)

-- | The region of the Amazon Route 53 health checker that provided the
--   status in <tt>StatusReport</tt>.
healthCheckObservation_region :: Lens' HealthCheckObservation (Maybe HealthCheckRegion)
instance GHC.Generics.Generic Network.AWS.Route53.Types.HealthCheckObservation.HealthCheckObservation
instance GHC.Show.Show Network.AWS.Route53.Types.HealthCheckObservation.HealthCheckObservation
instance GHC.Read.Read Network.AWS.Route53.Types.HealthCheckObservation.HealthCheckObservation
instance GHC.Classes.Eq Network.AWS.Route53.Types.HealthCheckObservation.HealthCheckObservation
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.HealthCheckObservation.HealthCheckObservation
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.HealthCheckObservation.HealthCheckObservation
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.HealthCheckObservation.HealthCheckObservation


module Network.AWS.Route53.Types.Tag

-- | A complex type that contains information about a tag that you want to
--   add or edit for the specified health check or hosted zone.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The value of <tt>Value</tt> depends on the operation that you want to
--   perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Value</tt>
--   is the value that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Value</tt> is the new value that you want
--   to assign the tag.</li>
--   </ul>
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The value of <tt>Key</tt> depends on the operation that you want to
--   perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Key</tt> is
--   the name that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Key</tt> is the name of the tag that you
--   want to change the <tt>Value</tt> for.</li>
--   <li><b>Delete a key</b>: <tt>Key</tt> is the name of the tag you want
--   to remove.</li>
--   <li><b>Give a name to a health check</b>: Edit the default
--   <tt>Name</tt> tag. In the Amazon Route 53 console, the list of your
--   health checks includes a <b>Name</b> column that lets you see the name
--   that you've given to each health check.</li>
--   </ul>
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of <tt>Value</tt>
--   depends on the operation that you want to perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Value</tt>
--   is the value that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Value</tt> is the new value that you want
--   to assign the tag.</li>
--   </ul>
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The value of <tt>Key</tt>
--   depends on the operation that you want to perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Key</tt> is
--   the name that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Key</tt> is the name of the tag that you
--   want to change the <tt>Value</tt> for.</li>
--   <li><b>Delete a key</b>: <tt>Key</tt> is the name of the tag you want
--   to remove.</li>
--   <li><b>Give a name to a health check</b>: Edit the default
--   <tt>Name</tt> tag. In the Amazon Route 53 console, the list of your
--   health checks includes a <b>Name</b> column that lets you see the name
--   that you've given to each health check.</li>
--   </ul>
newTag :: Tag

-- | The value of <tt>Value</tt> depends on the operation that you want to
--   perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Value</tt>
--   is the value that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Value</tt> is the new value that you want
--   to assign the tag.</li>
--   </ul>
tag_value :: Lens' Tag (Maybe Text)

-- | The value of <tt>Key</tt> depends on the operation that you want to
--   perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Key</tt> is
--   the name that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Key</tt> is the name of the tag that you
--   want to change the <tt>Value</tt> for.</li>
--   <li><b>Delete a key</b>: <tt>Key</tt> is the name of the tag you want
--   to remove.</li>
--   <li><b>Give a name to a health check</b>: Edit the default
--   <tt>Name</tt> tag. In the Amazon Route 53 console, the list of your
--   health checks includes a <b>Name</b> column that lets you see the name
--   that you've given to each health check.</li>
--   </ul>
tag_key :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.Route53.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.Route53.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.Route53.Types.Tag.Tag
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.Tag.Tag
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.Tag.Tag


module Network.AWS.Route53.Types.TagResourceType
newtype TagResourceType
TagResourceType' :: Text -> TagResourceType
[fromTagResourceType] :: TagResourceType -> Text
pattern TagResourceType_Healthcheck :: TagResourceType
pattern TagResourceType_Hostedzone :: TagResourceType
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance GHC.Generics.Generic Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance GHC.Classes.Ord Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance GHC.Classes.Eq Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance GHC.Read.Read Network.AWS.Route53.Types.TagResourceType.TagResourceType
instance GHC.Show.Show Network.AWS.Route53.Types.TagResourceType.TagResourceType


module Network.AWS.Route53.Types.ResourceTagSet

-- | A complex type containing a resource and its associated tags.
--   
--   <i>See:</i> <a>newResourceTagSet</a> smart constructor.
data ResourceTagSet
ResourceTagSet' :: Maybe Text -> Maybe TagResourceType -> Maybe (NonEmpty Tag) -> ResourceTagSet

-- | The ID for the specified resource.
[$sel:resourceId:ResourceTagSet'] :: ResourceTagSet -> Maybe Text

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
[$sel:resourceType:ResourceTagSet'] :: ResourceTagSet -> Maybe TagResourceType

-- | The tags associated with the specified resource.
[$sel:tags:ResourceTagSet'] :: ResourceTagSet -> Maybe (NonEmpty Tag)

-- | Create a value of <a>ResourceTagSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResourceTagSet'</a>,
--   <a>resourceTagSet_resourceId</a> - The ID for the specified resource.
--   
--   <a>$sel:resourceType:ResourceTagSet'</a>,
--   <a>resourceTagSet_resourceType</a> - The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
--   
--   <a>$sel:tags:ResourceTagSet'</a>, <a>resourceTagSet_tags</a> - The
--   tags associated with the specified resource.
newResourceTagSet :: ResourceTagSet

-- | The ID for the specified resource.
resourceTagSet_resourceId :: Lens' ResourceTagSet (Maybe Text)

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
resourceTagSet_resourceType :: Lens' ResourceTagSet (Maybe TagResourceType)

-- | The tags associated with the specified resource.
resourceTagSet_tags :: Lens' ResourceTagSet (Maybe (NonEmpty Tag))
instance GHC.Generics.Generic Network.AWS.Route53.Types.ResourceTagSet.ResourceTagSet
instance GHC.Show.Show Network.AWS.Route53.Types.ResourceTagSet.ResourceTagSet
instance GHC.Read.Read Network.AWS.Route53.Types.ResourceTagSet.ResourceTagSet
instance GHC.Classes.Eq Network.AWS.Route53.Types.ResourceTagSet.ResourceTagSet
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.ResourceTagSet.ResourceTagSet
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.ResourceTagSet.ResourceTagSet
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.ResourceTagSet.ResourceTagSet


module Network.AWS.Route53.Types.TrafficPolicy

-- | A complex type that contains settings for a traffic policy.
--   
--   <i>See:</i> <a>newTrafficPolicy</a> smart constructor.
data TrafficPolicy
TrafficPolicy' :: Maybe Text -> Text -> Natural -> Text -> RRType -> Text -> TrafficPolicy

-- | The comment that you specify in the <tt>CreateTrafficPolicy</tt>
--   request, if any.
[$sel:comment:TrafficPolicy'] :: TrafficPolicy -> Maybe Text

-- | The ID that Amazon Route 53 assigned to a traffic policy when you
--   created it.
[$sel:id:TrafficPolicy'] :: TrafficPolicy -> Text

-- | The version number that Amazon Route 53 assigns to a traffic policy.
--   For a new traffic policy, the value of <tt>Version</tt> is always 1.
[$sel:version:TrafficPolicy'] :: TrafficPolicy -> Natural

-- | The name that you specified when you created the traffic policy.
[$sel:name:TrafficPolicy'] :: TrafficPolicy -> Text

-- | The DNS type of the resource record sets that Amazon Route 53 creates
--   when you use a traffic policy to create a traffic policy instance.
[$sel:type':TrafficPolicy'] :: TrafficPolicy -> RRType

-- | The definition of a traffic policy in JSON format. You specify the
--   JSON document to use for a new traffic policy in the
--   <tt>CreateTrafficPolicy</tt> request. For more information about the
--   JSON format, see <a>Traffic Policy Document Format</a>.
[$sel:document:TrafficPolicy'] :: TrafficPolicy -> Text

-- | Create a value of <a>TrafficPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:TrafficPolicy'</a>, <a>trafficPolicy_comment</a> - The
--   comment that you specify in the <tt>CreateTrafficPolicy</tt> request,
--   if any.
--   
--   <a>$sel:id:TrafficPolicy'</a>, <a>trafficPolicy_id</a> - The ID that
--   Amazon Route 53 assigned to a traffic policy when you created it.
--   
--   <a>$sel:version:TrafficPolicy'</a>, <a>trafficPolicy_version</a> - The
--   version number that Amazon Route 53 assigns to a traffic policy. For a
--   new traffic policy, the value of <tt>Version</tt> is always 1.
--   
--   <a>$sel:name:TrafficPolicy'</a>, <a>trafficPolicy_name</a> - The name
--   that you specified when you created the traffic policy.
--   
--   <a>$sel:type':TrafficPolicy'</a>, <a>trafficPolicy_type</a> - The DNS
--   type of the resource record sets that Amazon Route 53 creates when you
--   use a traffic policy to create a traffic policy instance.
--   
--   <a>$sel:document:TrafficPolicy'</a>, <a>trafficPolicy_document</a> -
--   The definition of a traffic policy in JSON format. You specify the
--   JSON document to use for a new traffic policy in the
--   <tt>CreateTrafficPolicy</tt> request. For more information about the
--   JSON format, see <a>Traffic Policy Document Format</a>.
newTrafficPolicy :: Text -> Natural -> Text -> RRType -> Text -> TrafficPolicy

-- | The comment that you specify in the <tt>CreateTrafficPolicy</tt>
--   request, if any.
trafficPolicy_comment :: Lens' TrafficPolicy (Maybe Text)

-- | The ID that Amazon Route 53 assigned to a traffic policy when you
--   created it.
trafficPolicy_id :: Lens' TrafficPolicy Text

-- | The version number that Amazon Route 53 assigns to a traffic policy.
--   For a new traffic policy, the value of <tt>Version</tt> is always 1.
trafficPolicy_version :: Lens' TrafficPolicy Natural

-- | The name that you specified when you created the traffic policy.
trafficPolicy_name :: Lens' TrafficPolicy Text

-- | The DNS type of the resource record sets that Amazon Route 53 creates
--   when you use a traffic policy to create a traffic policy instance.
trafficPolicy_type :: Lens' TrafficPolicy RRType

-- | The definition of a traffic policy in JSON format. You specify the
--   JSON document to use for a new traffic policy in the
--   <tt>CreateTrafficPolicy</tt> request. For more information about the
--   JSON format, see <a>Traffic Policy Document Format</a>.
trafficPolicy_document :: Lens' TrafficPolicy Text
instance GHC.Generics.Generic Network.AWS.Route53.Types.TrafficPolicy.TrafficPolicy
instance GHC.Show.Show Network.AWS.Route53.Types.TrafficPolicy.TrafficPolicy
instance GHC.Read.Read Network.AWS.Route53.Types.TrafficPolicy.TrafficPolicy
instance GHC.Classes.Eq Network.AWS.Route53.Types.TrafficPolicy.TrafficPolicy
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.TrafficPolicy.TrafficPolicy
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.TrafficPolicy.TrafficPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.TrafficPolicy.TrafficPolicy


module Network.AWS.Route53.Types.TrafficPolicyInstance

-- | A complex type that contains settings for the new traffic policy
--   instance.
--   
--   <i>See:</i> <a>newTrafficPolicyInstance</a> smart constructor.
data TrafficPolicyInstance
TrafficPolicyInstance' :: Text -> ResourceId -> Text -> Natural -> Text -> Text -> Text -> Natural -> RRType -> TrafficPolicyInstance

-- | The ID that Amazon Route 53 assigned to the new traffic policy
--   instance.
[$sel:id:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Text

-- | The ID of the hosted zone that Amazon Route 53 created resource record
--   sets in.
[$sel:hostedZoneId:TrafficPolicyInstance'] :: TrafficPolicyInstance -> ResourceId

-- | The DNS name, such as www.example.com, for which Amazon Route 53
--   responds to queries by using the resource record sets that are
--   associated with this traffic policy instance.
[$sel:name:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Text

-- | The TTL that Amazon Route 53 assigned to all of the resource record
--   sets that it created in the specified hosted zone.
[$sel:ttl:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Natural

-- | The value of <tt>State</tt> is one of the following values:
--   
--   <ul>
--   <li><i>Applied</i> Amazon Route 53 has finished creating resource
--   record sets, and changes have propagated to all Route 53 edge
--   locations.</li>
--   <li><i>Creating</i> Route 53 is creating the resource record sets. Use
--   <tt>GetTrafficPolicyInstance</tt> to confirm that the
--   <tt>CreateTrafficPolicyInstance</tt> request completed
--   successfully.</li>
--   <li><i>Failed</i> Route 53 wasn't able to create or update the
--   resource record sets. When the value of <tt>State</tt> is
--   <tt>Failed</tt>, see <tt>Message</tt> for an explanation of what
--   caused the request to fail.</li>
--   </ul>
[$sel:state:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Text

-- | If <tt>State</tt> is <tt>Failed</tt>, an explanation of the reason for
--   the failure. If <tt>State</tt> is another value, <tt>Message</tt> is
--   empty.
[$sel:message:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Text

-- | The ID of the traffic policy that Amazon Route 53 used to create
--   resource record sets in the specified hosted zone.
[$sel:trafficPolicyId:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Text

-- | The version of the traffic policy that Amazon Route 53 used to create
--   resource record sets in the specified hosted zone.
[$sel:trafficPolicyVersion:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Natural

-- | The DNS type that Amazon Route 53 assigned to all of the resource
--   record sets that it created for this traffic policy instance.
[$sel:trafficPolicyType:TrafficPolicyInstance'] :: TrafficPolicyInstance -> RRType

-- | Create a value of <a>TrafficPolicyInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:TrafficPolicyInstance'</a>, <a>trafficPolicyInstance_id</a>
--   - The ID that Amazon Route 53 assigned to the new traffic policy
--   instance.
--   
--   <a>$sel:hostedZoneId:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_hostedZoneId</a> - The ID of the hosted zone
--   that Amazon Route 53 created resource record sets in.
--   
--   <a>$sel:name:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_name</a> - The DNS name, such as
--   www.example.com, for which Amazon Route 53 responds to queries by
--   using the resource record sets that are associated with this traffic
--   policy instance.
--   
--   <a>$sel:ttl:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_ttl</a> - The TTL that Amazon Route 53
--   assigned to all of the resource record sets that it created in the
--   specified hosted zone.
--   
--   <a>$sel:state:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_state</a> - The value of <tt>State</tt> is
--   one of the following values:
--   
--   <ul>
--   <li><i>Applied</i> Amazon Route 53 has finished creating resource
--   record sets, and changes have propagated to all Route 53 edge
--   locations.</li>
--   <li><i>Creating</i> Route 53 is creating the resource record sets. Use
--   <tt>GetTrafficPolicyInstance</tt> to confirm that the
--   <tt>CreateTrafficPolicyInstance</tt> request completed
--   successfully.</li>
--   <li><i>Failed</i> Route 53 wasn't able to create or update the
--   resource record sets. When the value of <tt>State</tt> is
--   <tt>Failed</tt>, see <tt>Message</tt> for an explanation of what
--   caused the request to fail.</li>
--   </ul>
--   
--   <a>$sel:message:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_message</a> - If <tt>State</tt> is
--   <tt>Failed</tt>, an explanation of the reason for the failure. If
--   <tt>State</tt> is another value, <tt>Message</tt> is empty.
--   
--   <a>$sel:trafficPolicyId:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_trafficPolicyId</a> - The ID of the traffic
--   policy that Amazon Route 53 used to create resource record sets in the
--   specified hosted zone.
--   
--   <a>$sel:trafficPolicyVersion:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_trafficPolicyVersion</a> - The version of the
--   traffic policy that Amazon Route 53 used to create resource record
--   sets in the specified hosted zone.
--   
--   <a>$sel:trafficPolicyType:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_trafficPolicyType</a> - The DNS type that
--   Amazon Route 53 assigned to all of the resource record sets that it
--   created for this traffic policy instance.
newTrafficPolicyInstance :: Text -> ResourceId -> Text -> Natural -> Text -> Text -> Text -> Natural -> RRType -> TrafficPolicyInstance

-- | The ID that Amazon Route 53 assigned to the new traffic policy
--   instance.
trafficPolicyInstance_id :: Lens' TrafficPolicyInstance Text

-- | The ID of the hosted zone that Amazon Route 53 created resource record
--   sets in.
trafficPolicyInstance_hostedZoneId :: Lens' TrafficPolicyInstance ResourceId

-- | The DNS name, such as www.example.com, for which Amazon Route 53
--   responds to queries by using the resource record sets that are
--   associated with this traffic policy instance.
trafficPolicyInstance_name :: Lens' TrafficPolicyInstance Text

-- | The TTL that Amazon Route 53 assigned to all of the resource record
--   sets that it created in the specified hosted zone.
trafficPolicyInstance_ttl :: Lens' TrafficPolicyInstance Natural

-- | The value of <tt>State</tt> is one of the following values:
--   
--   <ul>
--   <li><i>Applied</i> Amazon Route 53 has finished creating resource
--   record sets, and changes have propagated to all Route 53 edge
--   locations.</li>
--   <li><i>Creating</i> Route 53 is creating the resource record sets. Use
--   <tt>GetTrafficPolicyInstance</tt> to confirm that the
--   <tt>CreateTrafficPolicyInstance</tt> request completed
--   successfully.</li>
--   <li><i>Failed</i> Route 53 wasn't able to create or update the
--   resource record sets. When the value of <tt>State</tt> is
--   <tt>Failed</tt>, see <tt>Message</tt> for an explanation of what
--   caused the request to fail.</li>
--   </ul>
trafficPolicyInstance_state :: Lens' TrafficPolicyInstance Text

-- | If <tt>State</tt> is <tt>Failed</tt>, an explanation of the reason for
--   the failure. If <tt>State</tt> is another value, <tt>Message</tt> is
--   empty.
trafficPolicyInstance_message :: Lens' TrafficPolicyInstance Text

-- | The ID of the traffic policy that Amazon Route 53 used to create
--   resource record sets in the specified hosted zone.
trafficPolicyInstance_trafficPolicyId :: Lens' TrafficPolicyInstance Text

-- | The version of the traffic policy that Amazon Route 53 used to create
--   resource record sets in the specified hosted zone.
trafficPolicyInstance_trafficPolicyVersion :: Lens' TrafficPolicyInstance Natural

-- | The DNS type that Amazon Route 53 assigned to all of the resource
--   record sets that it created for this traffic policy instance.
trafficPolicyInstance_trafficPolicyType :: Lens' TrafficPolicyInstance RRType
instance GHC.Generics.Generic Network.AWS.Route53.Types.TrafficPolicyInstance.TrafficPolicyInstance
instance GHC.Show.Show Network.AWS.Route53.Types.TrafficPolicyInstance.TrafficPolicyInstance
instance GHC.Read.Read Network.AWS.Route53.Types.TrafficPolicyInstance.TrafficPolicyInstance
instance GHC.Classes.Eq Network.AWS.Route53.Types.TrafficPolicyInstance.TrafficPolicyInstance
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.TrafficPolicyInstance.TrafficPolicyInstance
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.TrafficPolicyInstance.TrafficPolicyInstance
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.TrafficPolicyInstance.TrafficPolicyInstance


module Network.AWS.Route53.Types.TrafficPolicySummary

-- | A complex type that contains information about the latest version of
--   one traffic policy that is associated with the current Amazon Web
--   Services account.
--   
--   <i>See:</i> <a>newTrafficPolicySummary</a> smart constructor.
data TrafficPolicySummary
TrafficPolicySummary' :: Text -> Text -> RRType -> Natural -> Natural -> TrafficPolicySummary

-- | The ID that Amazon Route 53 assigned to the traffic policy when you
--   created it.
[$sel:id:TrafficPolicySummary'] :: TrafficPolicySummary -> Text

-- | The name that you specified for the traffic policy when you created
--   it.
[$sel:name:TrafficPolicySummary'] :: TrafficPolicySummary -> Text

-- | The DNS type of the resource record sets that Amazon Route 53 creates
--   when you use a traffic policy to create a traffic policy instance.
[$sel:type':TrafficPolicySummary'] :: TrafficPolicySummary -> RRType

-- | The version number of the latest version of the traffic policy.
[$sel:latestVersion:TrafficPolicySummary'] :: TrafficPolicySummary -> Natural

-- | The number of traffic policies that are associated with the current
--   Amazon Web Services account.
[$sel:trafficPolicyCount:TrafficPolicySummary'] :: TrafficPolicySummary -> Natural

-- | Create a value of <a>TrafficPolicySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:TrafficPolicySummary'</a>, <a>trafficPolicySummary_id</a> -
--   The ID that Amazon Route 53 assigned to the traffic policy when you
--   created it.
--   
--   <a>$sel:name:TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_name</a> - The name that you specified for the
--   traffic policy when you created it.
--   
--   <a>$sel:type':TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_type</a> - The DNS type of the resource record
--   sets that Amazon Route 53 creates when you use a traffic policy to
--   create a traffic policy instance.
--   
--   <a>$sel:latestVersion:TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_latestVersion</a> - The version number of the
--   latest version of the traffic policy.
--   
--   <a>$sel:trafficPolicyCount:TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_trafficPolicyCount</a> - The number of traffic
--   policies that are associated with the current Amazon Web Services
--   account.
newTrafficPolicySummary :: Text -> Text -> RRType -> Natural -> Natural -> TrafficPolicySummary

-- | The ID that Amazon Route 53 assigned to the traffic policy when you
--   created it.
trafficPolicySummary_id :: Lens' TrafficPolicySummary Text

-- | The name that you specified for the traffic policy when you created
--   it.
trafficPolicySummary_name :: Lens' TrafficPolicySummary Text

-- | The DNS type of the resource record sets that Amazon Route 53 creates
--   when you use a traffic policy to create a traffic policy instance.
trafficPolicySummary_type :: Lens' TrafficPolicySummary RRType

-- | The version number of the latest version of the traffic policy.
trafficPolicySummary_latestVersion :: Lens' TrafficPolicySummary Natural

-- | The number of traffic policies that are associated with the current
--   Amazon Web Services account.
trafficPolicySummary_trafficPolicyCount :: Lens' TrafficPolicySummary Natural
instance GHC.Generics.Generic Network.AWS.Route53.Types.TrafficPolicySummary.TrafficPolicySummary
instance GHC.Show.Show Network.AWS.Route53.Types.TrafficPolicySummary.TrafficPolicySummary
instance GHC.Read.Read Network.AWS.Route53.Types.TrafficPolicySummary.TrafficPolicySummary
instance GHC.Classes.Eq Network.AWS.Route53.Types.TrafficPolicySummary.TrafficPolicySummary
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.TrafficPolicySummary.TrafficPolicySummary
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.TrafficPolicySummary.TrafficPolicySummary
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.TrafficPolicySummary.TrafficPolicySummary


module Network.AWS.Route53.Types.VPCRegion
newtype VPCRegion
VPCRegion' :: Text -> VPCRegion
[fromVPCRegion] :: VPCRegion -> Text
pattern VPCRegion_Af_south_1 :: VPCRegion
pattern VPCRegion_Ap_east_1 :: VPCRegion
pattern VPCRegion_Ap_northeast_1 :: VPCRegion
pattern VPCRegion_Ap_northeast_2 :: VPCRegion
pattern VPCRegion_Ap_northeast_3 :: VPCRegion
pattern VPCRegion_Ap_south_1 :: VPCRegion
pattern VPCRegion_Ap_southeast_1 :: VPCRegion
pattern VPCRegion_Ap_southeast_2 :: VPCRegion
pattern VPCRegion_Ca_central_1 :: VPCRegion
pattern VPCRegion_Cn_north_1 :: VPCRegion
pattern VPCRegion_Eu_central_1 :: VPCRegion
pattern VPCRegion_Eu_north_1 :: VPCRegion
pattern VPCRegion_Eu_south_1 :: VPCRegion
pattern VPCRegion_Eu_west_1 :: VPCRegion
pattern VPCRegion_Eu_west_2 :: VPCRegion
pattern VPCRegion_Eu_west_3 :: VPCRegion
pattern VPCRegion_Me_south_1 :: VPCRegion
pattern VPCRegion_Sa_east_1 :: VPCRegion
pattern VPCRegion_Us_east_1 :: VPCRegion
pattern VPCRegion_Us_east_2 :: VPCRegion
pattern VPCRegion_Us_gov_east_1 :: VPCRegion
pattern VPCRegion_Us_gov_west_1 :: VPCRegion
pattern VPCRegion_Us_iso_east_1 :: VPCRegion
pattern VPCRegion_Us_isob_east_1 :: VPCRegion
pattern VPCRegion_Us_west_1 :: VPCRegion
pattern VPCRegion_Us_west_2 :: VPCRegion
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Network.AWS.Data.Log.ToLog Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Network.AWS.Data.Text.ToText Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Network.AWS.Data.Text.FromText Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance GHC.Generics.Generic Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance GHC.Classes.Ord Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance GHC.Classes.Eq Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance GHC.Read.Read Network.AWS.Route53.Types.VPCRegion.VPCRegion
instance GHC.Show.Show Network.AWS.Route53.Types.VPCRegion.VPCRegion


module Network.AWS.Route53.Types.VPC

-- | (Private hosted zones only) A complex type that contains information
--   about an Amazon VPC.
--   
--   <i>See:</i> <a>newVPC</a> smart constructor.
data VPC
VPC' :: Maybe VPCRegion -> Maybe Text -> VPC

-- | (Private hosted zones only) The region that an Amazon VPC was created
--   in.
[$sel:vPCRegion:VPC'] :: VPC -> Maybe VPCRegion
[$sel:vPCId:VPC'] :: VPC -> Maybe Text

-- | Create a value of <a>VPC</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vPCRegion:VPC'</a>, <a>vpc_vPCRegion</a> - (Private hosted
--   zones only) The region that an Amazon VPC was created in.
--   
--   <a>$sel:vPCId:VPC'</a>, <a>vpc_vPCId</a> - Undocumented member.
newVPC :: VPC

-- | (Private hosted zones only) The region that an Amazon VPC was created
--   in.
vpc_vPCRegion :: Lens' VPC (Maybe VPCRegion)

-- | Undocumented member.
vpc_vPCId :: Lens' VPC (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Route53.Types.VPC.VPC
instance GHC.Show.Show Network.AWS.Route53.Types.VPC.VPC
instance GHC.Read.Read Network.AWS.Route53.Types.VPC.VPC
instance GHC.Classes.Eq Network.AWS.Route53.Types.VPC.VPC
instance Network.AWS.Data.XML.FromXML Network.AWS.Route53.Types.VPC.VPC
instance Data.Hashable.Class.Hashable Network.AWS.Route53.Types.VPC.VPC
instance Control.DeepSeq.NFData Network.AWS.Route53.Types.VPC.VPC
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.Types.VPC.VPC


module Network.AWS.Route53.Types

-- | API version <tt>2013-04-01</tt> of the Amazon Route 53 SDK
--   configuration.
defaultService :: Service

-- | The value of <tt>HealthCheckVersion</tt> in the request doesn't match
--   the value of <tt>HealthCheckVersion</tt> in the health check.
_HealthCheckVersionMismatch :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is no DNS query logging configuration with the specified ID.
_NoSuchQueryLoggingConfig :: AsError a => Getting (First ServiceError) a ServiceError

-- | The hosted zone doesn't have any DNSSEC resources.
_DNSSECNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The key-signing key (KSK) that you specified can't be deactivated
--   because it's the only KSK for a currently-enabled DNSSEC. Disable
--   DNSSEC signing, or add or enable another KSK.
_KeySigningKeyInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit for the number of key-signing keys (KSKs).
--   Remove at least one KSK, and then try again.
_TooManyKeySigningKeys :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified hosted zone is a public hosted zone, not a private
--   hosted zone.
_HostedZoneNotPrivate :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input is not valid.
_InvalidInput :: AsError a => Getting (First ServiceError) a ServiceError

-- | The hosted zone contains resource records that are not SOA or NS
--   records.
_HostedZoneNotEmpty :: AsError a => Getting (First ServiceError) a ServiceError

-- | Parameter name is not valid.
_InvalidArgument :: AsError a => Getting (First ServiceError) a ServiceError

-- | A key-signing key (KSK) with <tt>ACTIVE</tt> status wasn't found.
_KeySigningKeyWithActiveStatusNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is already a traffic policy instance with the specified ID.
_TrafficPolicyInstanceAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | You tried to update a traffic policy instance by using a traffic
--   policy version that has a different DNS type than the current type for
--   the instance. You specified the type in the JSON document in the
--   <tt>CreateTrafficPolicy</tt> or
--   <tt>CreateTrafficPolicyVersion</tt>request.
_ConflictingTypes :: AsError a => Getting (First ServiceError) a ServiceError

-- | You can create only one query logging configuration for a hosted zone,
--   and a query logging configuration already exists for this hosted zone.
_QueryLoggingConfigAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | Another user submitted a request to create, update, or delete the
--   object at the same time that you did. Retry the request.
_ConcurrentModification :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified delegation set has already been marked as reusable.
_DelegationSetAlreadyReusable :: AsError a => Getting (First ServiceError) a ServiceError

-- | Associating the specified VPC with the specified hosted zone has not
--   been authorized.
_NotAuthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Route 53 doesn't have the permissions required to create log
--   streams and send query logs to log streams. Possible causes include
--   the following:
--   
--   <ul>
--   <li>There is no resource policy that specifies the log group ARN in
--   the value for <tt>Resource</tt>.</li>
--   <li>The resource policy that includes the log group ARN in the value
--   for <tt>Resource</tt> doesn't have the necessary permissions.</li>
--   <li>The resource policy hasn't finished propagating yet.</li>
--   <li>The Key management service (KMS) key you specified doesn’t exist
--   or it can’t be used with the log group associated with query log.
--   Update or provide a resource policy to grant permissions for the KMS
--   key.</li>
--   </ul>
_InsufficientCloudWatchLogsResourcePolicy :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is no CloudWatch Logs log group with the specified ARN.
_NoSuchCloudWatchLogsLogGroup :: AsError a => Getting (First ServiceError) a ServiceError

-- | If Amazon Route 53 can't process a request before the next request
--   arrives, it will reject subsequent requests for the same hosted zone
--   and return an <tt>HTTP 400 error</tt> (<tt>Bad request</tt>). If Route
--   53 returns this error repeatedly for the same request, we recommend
--   that you wait, in intervals of increasing duration, before you try the
--   request again.
_PriorRequestNotComplete :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception contains a list of messages that might contain one or
--   more error messages. Each error message indicates one error in the
--   change batch.
_InvalidChangeBatch :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've created the maximum number of authorizations that can be
--   created for the specified hosted zone. To authorize another VPC to be
--   associated with the hosted zone, submit a
--   <tt>DeleteVPCAssociationAuthorization</tt> request to remove an
--   existing authorization. To get a list of existing authorizations,
--   submit a <tt>ListVPCAssociationAuthorizations</tt> request.
_TooManyVPCAssociationAuthorizations :: AsError a => Getting (First ServiceError) a ServiceError

-- | A traffic policy that has the same value for <tt>Name</tt> already
--   exists.
_TrafficPolicyAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | The format of the traffic policy document that you specified in the
--   <tt>Document</tt> element is not valid.
_InvalidTrafficPolicyDocument :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your hosted zone status isn't valid for this operation. In the hosted
--   zone, change the status to enable <tt>DNSSEC</tt> or disable
--   <tt>DNSSEC</tt>.
_InvalidSigningStatus :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value that you specified to get the second or subsequent page of
--   results is invalid.
_InvalidPaginationToken :: AsError a => Getting (First ServiceError) a ServiceError

-- | A reusable delegation set with the specified ID does not exist.
_DelegationSetNotReusable :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified domain name is not valid.
_InvalidDomainName :: AsError a => Getting (First ServiceError) a ServiceError

-- | No traffic policy exists with the specified ID.
_NoSuchTrafficPolicy :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified HostedZone can't be found.
_HostedZoneNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified delegation contains associated hosted zones which must
--   be deleted before the reusable delegation set can be deleted.
_DelegationSetInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | A reusable delegation set with the specified ID does not exist.
_NoSuchDelegationSet :: AsError a => Getting (First ServiceError) a ServiceError

-- | The health check you're attempting to create already exists. Amazon
--   Route 53 returns this error when you submit a request that has the
--   following values:
--   
--   <ul>
--   <li>The same value for <tt>CallerReference</tt> as an existing health
--   check, and one or more values that differ from the existing health
--   check that has the same caller reference.</li>
--   <li>The same value for <tt>CallerReference</tt> as a health check that
--   you created and later deleted, regardless of the other settings in the
--   request.</li>
--   </ul>
_HealthCheckAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | This traffic policy can't be created because the current account has
--   reached the limit on the number of traffic policies.
--   
--   For information about default limits, see <a>Limits</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.
--   
--   To get the current limit for an account, see <a>GetAccountLimit</a>.
--   
--   To request a higher limit, <a>create a case</a> with the Amazon Web
--   Services Support Center.
_TooManyTrafficPolicies :: AsError a => Getting (First ServiceError) a ServiceError

-- | The VPC that you specified is not authorized to be associated with the
--   hosted zone.
_VPCAssociationAuthorizationNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Route 53 doesn't support the specified geographic location. For
--   a list of supported geolocation codes, see the <a>GeoLocation</a> data
--   type.
_NoSuchGeoLocation :: AsError a => Getting (First ServiceError) a ServiceError

-- | You can create a hosted zone that has the same name as an existing
--   hosted zone (example.com is common), but there is a limit to the
--   number of hosted zones that have the same name. If you get this error,
--   Amazon Route 53 has reached that limit. If you own the domain name and
--   Route 53 generates this error, contact Customer Support.
_DelegationSetNotAvailable :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified key-signing key (KSK) doesn't exist.
_NoSuchKeySigningKey :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified VPC and hosted zone are not currently associated.
_VPCAssociationNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit on the number of requests per second was exceeded.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The hosted zone nameservers don't match the parent nameservers. The
--   hosted zone and parent must have the same nameservers.
_HostedZonePartiallyDelegated :: AsError a => Getting (First ServiceError) a ServiceError

-- | The key-signing key (KSK) is specified in a parent DS record.
_KeySigningKeyInParentDSRecord :: AsError a => Getting (First ServiceError) a ServiceError

-- | A change with the specified change ID does not exist.
_NoSuchChange :: AsError a => Getting (First ServiceError) a ServiceError

-- | The key-signing key (KSK) name that you specified isn't a valid name.
_InvalidKeySigningKeyName :: AsError a => Getting (First ServiceError) a ServiceError

-- | This operation can't be completed either because the current account
--   has reached the limit on reusable delegation sets that it can create
--   or because you've reached the limit on the number of Amazon VPCs that
--   you can associate with a private hosted zone. To get the current limit
--   on the number of reusable delegation sets, see <a>GetAccountLimit</a>.
--   To get the current limit on the number of Amazon VPCs that you can
--   associate with a private hosted zone, see <a>GetHostedZoneLimit</a>.
--   To request a higher limit, <a>create a case</a> with the Amazon Web
--   Services Support Center.
_LimitsExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've already created a key-signing key (KSK) with this name or with
--   the same customer managed customer master key (CMK) ARN.
_KeySigningKeyAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | This traffic policy instance can't be created because the current
--   account has reached the limit on the number of traffic policy
--   instances.
--   
--   For information about default limits, see <a>Limits</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.
--   
--   For information about how to get the current limit for an account, see
--   <a>GetAccountLimit</a>.
--   
--   To request a higher limit, <a>create a case</a> with the Amazon Web
--   Services Support Center.
_TooManyTrafficPolicyInstances :: AsError a => Getting (First ServiceError) a ServiceError

-- | No traffic policy instance exists with the specified ID.
_NoSuchTrafficPolicyInstance :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource you're trying to access is unsupported on this Amazon
--   Route 53 endpoint.
_IncompatibleVersion :: AsError a => Getting (First ServiceError) a ServiceError

-- | You're trying to associate a VPC with a public hosted zone. Amazon
--   Route 53 doesn't support associating a VPC with a public hosted zone.
_PublicZoneVPCAssociation :: AsError a => Getting (First ServiceError) a ServiceError

-- | No hosted zone exists with the ID that you specified.
_NoSuchHostedZone :: AsError a => Getting (First ServiceError) a ServiceError

-- | This operation can't be completed either because the current account
--   has reached the limit on the number of hosted zones or because you've
--   reached the limit on the number of hosted zones that can be associated
--   with a reusable delegation set.
--   
--   For information about default limits, see <a>Limits</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.
--   
--   To get the current limit on hosted zones that can be created by an
--   account, see <a>GetAccountLimit</a>.
--   
--   To get the current limit on hosted zones that can be associated with a
--   reusable delegation set, see <a>GetReusableDelegationSetLimit</a>.
--   
--   To request a higher limit, <a>create a case</a> with the Amazon Web
--   Services Support Center.
_TooManyHostedZones :: AsError a => Getting (First ServiceError) a ServiceError

-- | This error code is not in use.
_HealthCheckInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | The key-signing key (KSK) status isn't valid or another KSK has the
--   status <tt>INTERNAL_FAILURE</tt>.
_InvalidKeySigningKeyStatus :: AsError a => Getting (First ServiceError) a ServiceError

-- | A delegation set with the same owner and caller reference combination
--   has already been created.
_DelegationSetAlreadyCreated :: AsError a => Getting (First ServiceError) a ServiceError

-- | The cause of this error depends on the operation that you're
--   performing:
--   
--   <ul>
--   <li><b>Create a public hosted zone:</b> Two hosted zones that have the
--   same name or that have a parent/child relationship (example.com and
--   test.example.com) can't have any common name servers. You tried to
--   create a hosted zone that has the same name as an existing hosted zone
--   or that's the parent or child of an existing hosted zone, and you
--   specified a delegation set that shares one or more name servers with
--   the existing hosted zone. For more information, see
--   <a>CreateReusableDelegationSet</a>.</li>
--   <li><b>Create a private hosted zone:</b> A hosted zone with the
--   specified name already exists and is already associated with the
--   Amazon VPC that you specified.</li>
--   <li><b>Associate VPCs with a private hosted zone:</b> The VPC that you
--   specified is already associated with another hosted zone that has the
--   same name.</li>
--   </ul>
_ConflictingDomainExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | The VPC that you're trying to disassociate from the private hosted
--   zone is the last VPC that is associated with the hosted zone. Amazon
--   Route 53 doesn't support disassociating the last VPC from a hosted
--   zone.
_LastVPCAssociation :: AsError a => Getting (First ServiceError) a ServiceError

-- | This health check can't be created because the current account has
--   reached the limit on the number of active health checks.
--   
--   For information about default limits, see <a>Limits</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.
--   
--   For information about how to get the current limit for an account, see
--   <a>GetAccountLimit</a>. To request a higher limit, <a>create a
--   case</a> with the Amazon Web Services Support Center.
--   
--   You have reached the maximum number of active health checks for an
--   Amazon Web Services account. To request a higher limit, <a>create a
--   case</a> with the Amazon Web Services Support Center.
_TooManyHealthChecks :: AsError a => Getting (First ServiceError) a ServiceError

-- | No health check exists with the specified ID.
_NoSuchHealthCheck :: AsError a => Getting (First ServiceError) a ServiceError

-- | The KeyManagementServiceArn that you specified isn't valid to use with
--   DNSSEC signing.
_InvalidKMSArn :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more traffic policy instances were created by using the
--   specified traffic policy.
_TrafficPolicyInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | The VPC ID that you specified either isn't a valid ID or the current
--   account is not authorized to access this VPC.
_InvalidVPCId :: AsError a => Getting (First ServiceError) a ServiceError

-- | The hosted zone you're trying to create already exists. Amazon Route
--   53 returns this error when a hosted zone has already been created with
--   the specified <tt>CallerReference</tt>.
_HostedZoneAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | This traffic policy version can't be created because you've reached
--   the limit of 1000 on the number of versions that you can create for
--   the current traffic policy.
--   
--   To create more traffic policy versions, you can use
--   <a>GetTrafficPolicy</a> to get the traffic policy document for a
--   specified traffic policy version, and then use
--   <a>CreateTrafficPolicy</a> to create a new traffic policy using the
--   traffic policy document.
_TooManyTrafficPolicyVersionsForCurrentPolicy :: AsError a => Getting (First ServiceError) a ServiceError
newtype AccountLimitType
AccountLimitType' :: Text -> AccountLimitType
[fromAccountLimitType] :: AccountLimitType -> Text
pattern AccountLimitType_MAX_HEALTH_CHECKS_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_HOSTED_ZONES_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_REUSABLE_DELEGATION_SETS_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_TRAFFIC_POLICIES_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER :: AccountLimitType
newtype ChangeAction
ChangeAction' :: Text -> ChangeAction
[fromChangeAction] :: ChangeAction -> Text
pattern ChangeAction_CREATE :: ChangeAction
pattern ChangeAction_DELETE :: ChangeAction
pattern ChangeAction_UPSERT :: ChangeAction
newtype ChangeStatus
ChangeStatus' :: Text -> ChangeStatus
[fromChangeStatus] :: ChangeStatus -> Text
pattern ChangeStatus_INSYNC :: ChangeStatus
pattern ChangeStatus_PENDING :: ChangeStatus
newtype CloudWatchRegion
CloudWatchRegion' :: Text -> CloudWatchRegion
[fromCloudWatchRegion] :: CloudWatchRegion -> Text
pattern CloudWatchRegion_Af_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_northeast_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_northeast_2 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_northeast_3 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_southeast_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_southeast_2 :: CloudWatchRegion
pattern CloudWatchRegion_Ca_central_1 :: CloudWatchRegion
pattern CloudWatchRegion_Cn_north_1 :: CloudWatchRegion
pattern CloudWatchRegion_Cn_northwest_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_central_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_north_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_west_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_west_2 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_west_3 :: CloudWatchRegion
pattern CloudWatchRegion_Me_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Sa_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_east_2 :: CloudWatchRegion
pattern CloudWatchRegion_Us_gov_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_gov_west_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_iso_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_isob_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_west_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_west_2 :: CloudWatchRegion
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_GreaterThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_GreaterThanThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanThreshold :: ComparisonOperator
newtype HealthCheckRegion
HealthCheckRegion' :: Text -> HealthCheckRegion
[fromHealthCheckRegion] :: HealthCheckRegion -> Text
pattern HealthCheckRegion_Ap_northeast_1 :: HealthCheckRegion
pattern HealthCheckRegion_Ap_southeast_1 :: HealthCheckRegion
pattern HealthCheckRegion_Ap_southeast_2 :: HealthCheckRegion
pattern HealthCheckRegion_Eu_west_1 :: HealthCheckRegion
pattern HealthCheckRegion_Sa_east_1 :: HealthCheckRegion
pattern HealthCheckRegion_Us_east_1 :: HealthCheckRegion
pattern HealthCheckRegion_Us_west_1 :: HealthCheckRegion
pattern HealthCheckRegion_Us_west_2 :: HealthCheckRegion
newtype HealthCheckType
HealthCheckType' :: Text -> HealthCheckType
[fromHealthCheckType] :: HealthCheckType -> Text
pattern HealthCheckType_CALCULATED :: HealthCheckType
pattern HealthCheckType_CLOUDWATCH_METRIC :: HealthCheckType
pattern HealthCheckType_HTTP :: HealthCheckType
pattern HealthCheckType_HTTPS :: HealthCheckType
pattern HealthCheckType_HTTPS_STR_MATCH :: HealthCheckType
pattern HealthCheckType_HTTP_STR_MATCH :: HealthCheckType
pattern HealthCheckType_RECOVERY_CONTROL :: HealthCheckType
pattern HealthCheckType_TCP :: HealthCheckType
newtype HostedZoneLimitType
HostedZoneLimitType' :: Text -> HostedZoneLimitType
[fromHostedZoneLimitType] :: HostedZoneLimitType -> Text
pattern HostedZoneLimitType_MAX_RRSETS_BY_ZONE :: HostedZoneLimitType
pattern HostedZoneLimitType_MAX_VPCS_ASSOCIATED_BY_ZONE :: HostedZoneLimitType
newtype InsufficientDataHealthStatus
InsufficientDataHealthStatus' :: Text -> InsufficientDataHealthStatus
[fromInsufficientDataHealthStatus] :: InsufficientDataHealthStatus -> Text
pattern InsufficientDataHealthStatus_Healthy :: InsufficientDataHealthStatus
pattern InsufficientDataHealthStatus_LastKnownStatus :: InsufficientDataHealthStatus
pattern InsufficientDataHealthStatus_Unhealthy :: InsufficientDataHealthStatus
newtype RRType
RRType' :: Text -> RRType
[fromRRType] :: RRType -> Text
pattern RRType_A :: RRType
pattern RRType_AAAA :: RRType
pattern RRType_CAA :: RRType
pattern RRType_CNAME :: RRType
pattern RRType_DS :: RRType
pattern RRType_MX :: RRType
pattern RRType_NAPTR :: RRType
pattern RRType_NS :: RRType
pattern RRType_PTR :: RRType
pattern RRType_SOA :: RRType
pattern RRType_SPF :: RRType
pattern RRType_SRV :: RRType
pattern RRType_TXT :: RRType
newtype ResettableElementName
ResettableElementName' :: Text -> ResettableElementName
[fromResettableElementName] :: ResettableElementName -> Text
pattern ResettableElementName_ChildHealthChecks :: ResettableElementName
pattern ResettableElementName_FullyQualifiedDomainName :: ResettableElementName
pattern ResettableElementName_Regions :: ResettableElementName
pattern ResettableElementName_ResourcePath :: ResettableElementName
newtype ResourceRecordSetFailover
ResourceRecordSetFailover' :: Text -> ResourceRecordSetFailover
[fromResourceRecordSetFailover] :: ResourceRecordSetFailover -> Text
pattern ResourceRecordSetFailover_PRIMARY :: ResourceRecordSetFailover
pattern ResourceRecordSetFailover_SECONDARY :: ResourceRecordSetFailover
newtype ReusableDelegationSetLimitType
ReusableDelegationSetLimitType' :: Text -> ReusableDelegationSetLimitType
[fromReusableDelegationSetLimitType] :: ReusableDelegationSetLimitType -> Text
pattern ReusableDelegationSetLimitType_MAX_ZONES_BY_REUSABLE_DELEGATION_SET :: ReusableDelegationSetLimitType
newtype Statistic
Statistic' :: Text -> Statistic
[fromStatistic] :: Statistic -> Text
pattern Statistic_Average :: Statistic
pattern Statistic_Maximum :: Statistic
pattern Statistic_Minimum :: Statistic
pattern Statistic_SampleCount :: Statistic
pattern Statistic_Sum :: Statistic
newtype TagResourceType
TagResourceType' :: Text -> TagResourceType
[fromTagResourceType] :: TagResourceType -> Text
pattern TagResourceType_Healthcheck :: TagResourceType
pattern TagResourceType_Hostedzone :: TagResourceType
newtype VPCRegion
VPCRegion' :: Text -> VPCRegion
[fromVPCRegion] :: VPCRegion -> Text
pattern VPCRegion_Af_south_1 :: VPCRegion
pattern VPCRegion_Ap_east_1 :: VPCRegion
pattern VPCRegion_Ap_northeast_1 :: VPCRegion
pattern VPCRegion_Ap_northeast_2 :: VPCRegion
pattern VPCRegion_Ap_northeast_3 :: VPCRegion
pattern VPCRegion_Ap_south_1 :: VPCRegion
pattern VPCRegion_Ap_southeast_1 :: VPCRegion
pattern VPCRegion_Ap_southeast_2 :: VPCRegion
pattern VPCRegion_Ca_central_1 :: VPCRegion
pattern VPCRegion_Cn_north_1 :: VPCRegion
pattern VPCRegion_Eu_central_1 :: VPCRegion
pattern VPCRegion_Eu_north_1 :: VPCRegion
pattern VPCRegion_Eu_south_1 :: VPCRegion
pattern VPCRegion_Eu_west_1 :: VPCRegion
pattern VPCRegion_Eu_west_2 :: VPCRegion
pattern VPCRegion_Eu_west_3 :: VPCRegion
pattern VPCRegion_Me_south_1 :: VPCRegion
pattern VPCRegion_Sa_east_1 :: VPCRegion
pattern VPCRegion_Us_east_1 :: VPCRegion
pattern VPCRegion_Us_east_2 :: VPCRegion
pattern VPCRegion_Us_gov_east_1 :: VPCRegion
pattern VPCRegion_Us_gov_west_1 :: VPCRegion
pattern VPCRegion_Us_iso_east_1 :: VPCRegion
pattern VPCRegion_Us_isob_east_1 :: VPCRegion
pattern VPCRegion_Us_west_1 :: VPCRegion
pattern VPCRegion_Us_west_2 :: VPCRegion

-- | A complex type that contains the type of limit that you specified in
--   the request and the current value for that limit.
--   
--   <i>See:</i> <a>newAccountLimit</a> smart constructor.
data AccountLimit
AccountLimit' :: AccountLimitType -> Natural -> AccountLimit

-- | The limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
[$sel:type':AccountLimit'] :: AccountLimit -> AccountLimitType

-- | The current value for the limit that is specified by <a>Type</a>.
[$sel:value:AccountLimit'] :: AccountLimit -> Natural

-- | Create a value of <a>AccountLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':AccountLimit'</a>, <a>accountLimit_type</a> - The limit
--   that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
--   
--   <a>$sel:value:AccountLimit'</a>, <a>accountLimit_value</a> - The
--   current value for the limit that is specified by <a>Type</a>.
newAccountLimit :: AccountLimitType -> Natural -> AccountLimit

-- | The limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
accountLimit_type :: Lens' AccountLimit AccountLimitType

-- | The current value for the limit that is specified by <a>Type</a>.
accountLimit_value :: Lens' AccountLimit Natural

-- | A complex type that identifies the CloudWatch alarm that you want
--   Amazon Route 53 health checkers to use to determine whether the
--   specified health check is healthy.
--   
--   <i>See:</i> <a>newAlarmIdentifier</a> smart constructor.
data AlarmIdentifier
AlarmIdentifier' :: CloudWatchRegion -> Text -> AlarmIdentifier

-- | For the CloudWatch alarm that you want Route 53 health checkers to use
--   to determine whether this health check is healthy, the region that the
--   alarm was created in.
--   
--   For the current list of CloudWatch regions, see <a>Amazon CloudWatch
--   endpoints and quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
[$sel:region:AlarmIdentifier'] :: AlarmIdentifier -> CloudWatchRegion

-- | The name of the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether this health check is healthy.
--   
--   Route 53 supports CloudWatch alarms with the following features:
--   
--   <ul>
--   <li>Standard-resolution metrics. High-resolution metrics aren't
--   supported. For more information, see <a>High-Resolution Metrics</a> in
--   the <i>Amazon CloudWatch User Guide</i>.</li>
--   <li>Statistics: Average, Minimum, Maximum, Sum, and SampleCount.
--   Extended statistics aren't supported.</li>
--   </ul>
[$sel:name:AlarmIdentifier'] :: AlarmIdentifier -> Text

-- | Create a value of <a>AlarmIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:region:AlarmIdentifier'</a>, <a>alarmIdentifier_region</a> -
--   For the CloudWatch alarm that you want Route 53 health checkers to use
--   to determine whether this health check is healthy, the region that the
--   alarm was created in.
--   
--   For the current list of CloudWatch regions, see <a>Amazon CloudWatch
--   endpoints and quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:name:AlarmIdentifier'</a>, <a>alarmIdentifier_name</a> - The
--   name of the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether this health check is healthy.
--   
--   Route 53 supports CloudWatch alarms with the following features:
--   
--   <ul>
--   <li>Standard-resolution metrics. High-resolution metrics aren't
--   supported. For more information, see <a>High-Resolution Metrics</a> in
--   the <i>Amazon CloudWatch User Guide</i>.</li>
--   <li>Statistics: Average, Minimum, Maximum, Sum, and SampleCount.
--   Extended statistics aren't supported.</li>
--   </ul>
newAlarmIdentifier :: CloudWatchRegion -> Text -> AlarmIdentifier

-- | For the CloudWatch alarm that you want Route 53 health checkers to use
--   to determine whether this health check is healthy, the region that the
--   alarm was created in.
--   
--   For the current list of CloudWatch regions, see <a>Amazon CloudWatch
--   endpoints and quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
alarmIdentifier_region :: Lens' AlarmIdentifier CloudWatchRegion

-- | The name of the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether this health check is healthy.
--   
--   Route 53 supports CloudWatch alarms with the following features:
--   
--   <ul>
--   <li>Standard-resolution metrics. High-resolution metrics aren't
--   supported. For more information, see <a>High-Resolution Metrics</a> in
--   the <i>Amazon CloudWatch User Guide</i>.</li>
--   <li>Statistics: Average, Minimum, Maximum, Sum, and SampleCount.
--   Extended statistics aren't supported.</li>
--   </ul>
alarmIdentifier_name :: Lens' AlarmIdentifier Text

-- | <i>Alias resource record sets only:</i> Information about the Amazon
--   Web Services resource, such as a CloudFront distribution or an Amazon
--   S3 bucket, that you want to route traffic to.
--   
--   When creating resource record sets for a private hosted zone, note the
--   following:
--   
--   <ul>
--   <li>Creating geolocation alias resource record sets or latency alias
--   resource record sets in a private hosted zone is unsupported.</li>
--   <li>For information about creating failover resource record sets in a
--   private hosted zone, see <a>Configuring Failover in a Private Hosted
--   Zone</a>.</li>
--   </ul>
--   
--   <i>See:</i> <a>newAliasTarget</a> smart constructor.
data AliasTarget
AliasTarget' :: ResourceId -> Text -> Bool -> AliasTarget

-- | <i>Alias resource records sets only</i>: The value used depends on
--   where you want to route traffic:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the hosted zone ID for your API. You can get the
--   applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalHostedZoneId</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionHostedZoneId</tt>.</li></ul></li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Specify
--   the hosted zone ID for your interface endpoint. You can get the value
--   of <tt>HostedZoneId</tt> using the CLI command
--   <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify
--   <tt>Z2FDTNDATAQYW2</tt>.Alias resource record sets for CloudFront
--   can't be created in a private zone.</li>
--   <li><i>Elastic Beanstalk environment</i> Specify the hosted zone ID
--   for the region that you created the environment in. The environment
--   must have a regionalized subdomain. For a list of regions and the
--   corresponding hosted zone IDs, see <a>Elastic Beanstalk endpoints and
--   quotas</a> in the the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>ELB load balancer</i> Specify the value of the hosted zone ID
--   for the load balancer. Use the following methods to get the hosted
--   zone ID:<ul><li><a>Elastic Load Balancing endpoints and quotas</a>
--   topic in the <i>Amazon Web Services General Reference</i>: Use the
--   value that corresponds with the region that you created your load
--   balancer in. Note that there are separate columns for Application and
--   Classic Load Balancers and for Network Load
--   Balancers.</li><li><b>Amazon Web Services Management Console</b>: Go
--   to the Amazon EC2 page, choose <b>Load Balancers</b> in the navigation
--   pane, select the load balancer, and get the value of the <b>Hosted
--   zone</b> field on the <b>Description</b> tab.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the
--   applicable value. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers: Use <a>DescribeLoadBalancers</a>
--   to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>DescribeLoadBalancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li><li><b>CLI</b>: Use
--   <tt>describe-load-balancers</tt> to get the applicable value. For more
--   information, see the applicable guide:<ul><li>Classic Load Balancers:
--   Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify
--   <tt>Z2BJ6XQ5FK7U4H</tt>.</li>
--   <li><i>An Amazon S3 bucket configured as a static website</i> Specify
--   the hosted zone ID for the region that you created the bucket in. For
--   more information about valid values, see the table <a>Amazon S3
--   Website Endpoints</a> in the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>Another Route 53 resource record set in your hosted zone</i>
--   Specify the hosted zone ID of your hosted zone. (An alias resource
--   record set can't reference a resource record set in a different hosted
--   zone.)</li>
--   </ul>
[$sel:hostedZoneId:AliasTarget'] :: AliasTarget -> ResourceId

-- | <i>Alias resource record sets only:</i> The value that you specify
--   depends on where you want to route queries:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the applicable domain name for your API. You can get
--   the applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalDomainName</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionDomainName</tt>. This is the name
--   of the associated CloudFront distribution, such as
--   <tt>da1b2c3d4e5.cloudfront.net</tt>.</li></ul>The name of the record
--   that you're creating must match a custom domain name for your API,
--   such as <tt>api.example.com</tt>.</li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Enter
--   the API endpoint for the interface endpoint, such as
--   <tt>vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com</tt>.
--   For edge-optimized APIs, this is the domain name for the corresponding
--   CloudFront distribution. You can get the value of <tt>DnsName</tt>
--   using the CLI command <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify the domain name that
--   CloudFront assigned when you created your distribution.Your CloudFront
--   distribution must include an alternate domain name that matches the
--   name of the resource record set. For example, if the name of the
--   resource record set is <i>acme.example.com</i>, your CloudFront
--   distribution must include <i>acme.example.com</i> as one of the
--   alternate domain names. For more information, see <a>Using Alternate
--   Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront Developer
--   Guide</i>.You can't create a resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.For failover alias
--   records, you can't specify a CloudFront distribution for both the
--   primary and secondary records. A distribution must include an
--   alternate domain name that matches the name of the record. However,
--   the primary and secondary records have the same name, and you can't
--   include the same alternate domain name in more than one
--   distribution.</li>
--   <li><i>Elastic Beanstalk environment</i> If the domain name for your
--   Elastic Beanstalk environment includes the region that you deployed
--   the environment in, you can create an alias record that routes traffic
--   to the environment. For example, the domain name
--   <tt>my-environment.us-west-2.elasticbeanstalk.com</tt> is a
--   regionalized domain name.For environments that were created before
--   early 2016, the domain name doesn't include the region. To route
--   traffic to these environments, you must create a CNAME record instead
--   of an alias record. Note that you can't create a CNAME record for the
--   root domain name. For example, if your domain name is example.com, you
--   can create a record that routes traffic for acme.example.com to your
--   Elastic Beanstalk environment, but you can't create a record that
--   routes traffic for example.com to your Elastic Beanstalk
--   environment.For Elastic Beanstalk environments that have regionalized
--   subdomains, specify the <tt>CNAME</tt> attribute for the environment.
--   You can use the following methods to get the value of the CNAME
--   attribute:<ul><li><i>Amazon Web Services Management Console</i>: For
--   information about how to get the value by using the console, see
--   <a>Using Custom Domains with Elastic Beanstalk</a> in the <i>Elastic
--   Beanstalk Developer Guide</i>.</li><li><i>Elastic Beanstalk API</i>:
--   Use the <tt>DescribeEnvironments</tt> action to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>DescribeEnvironments</a> in the <i>Elastic Beanstalk API
--   Reference</i>.</li><li><i>CLI</i>: Use the
--   <tt>describe-environments</tt> command to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>describe-environments</a> in the <i>CLI Command
--   Reference</i>.</li></ul></li>
--   <li><i>ELB load balancer</i> Specify the DNS name that is associated
--   with the load balancer. Get the DNS name by using the Amazon Web
--   Services Management Console, the ELB API, or the CLI.<ul><li><b>Amazon
--   Web Services Management Console</b>: Go to the EC2 page, choose
--   <b>Load Balancers</b> in the navigation pane, choose the load
--   balancer, choose the <b>Description</b> tab, and get the value of the
--   <b>DNS name</b> field.If you're routing traffic to a Classic Load
--   Balancer, get the value that begins with <b>dualstack</b>. If you're
--   routing traffic to another type of load balancer, get the value that
--   applies to the record type, A or AAAA.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the value
--   of <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>DescribeLoadBalancers</a></li><li>Application and Network Load
--   Balancers: <a>DescribeLoadBalancers</a></li></ul></li><li><b>CLI</b>:
--   Use <tt>describe-load-balancers</tt> to get the value of
--   <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>describe-load-balancers</a></li><li>Application and Network Load
--   Balancers: <a>describe-load-balancers</a></li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify the DNS name for
--   your accelerator:<ul><li><b>Global Accelerator API:</b> To get the DNS
--   name, use <a>DescribeAccelerator</a>.</li><li><b>CLI:</b> To get the
--   DNS name, use <a>describe-accelerator</a>.</li></ul></li>
--   <li><i>Amazon S3 bucket that is configured as a static website</i>
--   Specify the domain name of the Amazon S3 website endpoint that you
--   created the bucket in, for example,
--   <tt>s3-website.us-east-2.amazonaws.com</tt>. For more information
--   about valid values, see the table <a>Amazon S3 Website Endpoints</a>
--   in the <i>Amazon Web Services General Reference</i>. For more
--   information about using S3 buckets for websites, see <a>Getting
--   Started with Amazon Route 53</a> in the <i>Amazon Route 53 Developer
--   Guide.</i></li>
--   <li><i>Another Route 53 resource record set</i> Specify the value of
--   the <tt>Name</tt> element for a resource record set in the current
--   hosted zone.If you're creating an alias record that has the same name
--   as the hosted zone (known as the zone apex), you can't specify the
--   domain name for a record for which the value of <tt>Type</tt> is
--   <tt>CNAME</tt>. This is because the alias record must have the same
--   type as the record that you're routing traffic to, and creating a
--   CNAME record for the zone apex isn't supported even for an alias
--   record.</li>
--   </ul>
[$sel:dNSName:AliasTarget'] :: AliasTarget -> Text

-- | /Applies only to alias, failover alias, geolocation alias, latency
--   alias, and weighted alias resource record sets:/ When
--   <tt>EvaluateTargetHealth</tt> is <tt>true</tt>, an alias resource
--   record set inherits the health of the referenced Amazon Web Services
--   resource, such as an ELB load balancer or another resource record set
--   in the hosted zone.
--   
--   Note the following:
--   
--   <ul>
--   <li><i>CloudFront distributions</i> You can't set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is a CloudFront distribution.</li>
--   <li><i>Elastic Beanstalk environments that have regionalized
--   subdomains</i> If you specify an Elastic Beanstalk environment in
--   <tt>DNSName</tt> and the environment contains an ELB load balancer,
--   Elastic Load Balancing routes queries only to the healthy Amazon EC2
--   instances that are registered with the load balancer. (An environment
--   automatically contains an ELB load balancer if it includes more than
--   one Amazon EC2 instance.) If you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt> and either no Amazon EC2 instances are healthy or the
--   load balancer itself is unhealthy, Route 53 routes queries to other
--   available resources that are healthy, if any.If the environment
--   contains a single Amazon EC2 instance, there are no special
--   requirements.</li>
--   <li><i>ELB load balancers</i> Health checking behavior depends on the
--   type of load balancer:<ul><li><b>Classic Load Balancers</b>: If you
--   specify an ELB Classic Load Balancer in <tt>DNSName</tt>, Elastic Load
--   Balancing routes queries only to the healthy Amazon EC2 instances that
--   are registered with the load balancer. If you set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> and either no EC2
--   instances are healthy or the load balancer itself is unhealthy, Route
--   53 routes queries to other resources.</li><li><b>Application and
--   Network Load Balancers</b>: If you specify an ELB Application or
--   Network Load Balancer and you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt>, Route 53 routes queries to the load balancer based on
--   the health of the target groups that are associated with the load
--   balancer:<ul><li>For an Application or Network Load Balancer to be
--   considered healthy, every target group that contains targets must
--   contain at least one healthy target. If any target group contains only
--   unhealthy targets, the load balancer is considered unhealthy, and
--   Route 53 routes queries to other resources.</li><li>A target group
--   that has no registered targets is considered
--   unhealthy.</li></ul></li></ul>When you create a load balancer, you
--   configure settings for Elastic Load Balancing health checks; they're
--   not Route 53 health checks, but they perform a similar function. Do
--   not create Route 53 health checks for the EC2 instances that you
--   register with an ELB load balancer.</li>
--   <li><i>S3 buckets</i> There are no special requirements for setting
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is an S3 bucket.</li>
--   <li><i>Other records in the same hosted zone</i> If the Amazon Web
--   Services resource that you specify in <tt>DNSName</tt> is a record or
--   a group of records (for example, a group of weighted records) but is
--   not another alias record, we recommend that you associate a health
--   check with all of the records in the alias target. For more
--   information, see <a>What Happens When You Omit Health Checks?</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   For more information and examples, see <a>Amazon Route 53 Health
--   Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.
[$sel:evaluateTargetHealth:AliasTarget'] :: AliasTarget -> Bool

-- | Create a value of <a>AliasTarget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:AliasTarget'</a>, <a>aliasTarget_hostedZoneId</a>
--   - <i>Alias resource records sets only</i>: The value used depends on
--   where you want to route traffic:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the hosted zone ID for your API. You can get the
--   applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalHostedZoneId</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionHostedZoneId</tt>.</li></ul></li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Specify
--   the hosted zone ID for your interface endpoint. You can get the value
--   of <tt>HostedZoneId</tt> using the CLI command
--   <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify
--   <tt>Z2FDTNDATAQYW2</tt>.Alias resource record sets for CloudFront
--   can't be created in a private zone.</li>
--   <li><i>Elastic Beanstalk environment</i> Specify the hosted zone ID
--   for the region that you created the environment in. The environment
--   must have a regionalized subdomain. For a list of regions and the
--   corresponding hosted zone IDs, see <a>Elastic Beanstalk endpoints and
--   quotas</a> in the the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>ELB load balancer</i> Specify the value of the hosted zone ID
--   for the load balancer. Use the following methods to get the hosted
--   zone ID:<ul><li><a>Elastic Load Balancing endpoints and quotas</a>
--   topic in the <i>Amazon Web Services General Reference</i>: Use the
--   value that corresponds with the region that you created your load
--   balancer in. Note that there are separate columns for Application and
--   Classic Load Balancers and for Network Load
--   Balancers.</li><li><b>Amazon Web Services Management Console</b>: Go
--   to the Amazon EC2 page, choose <b>Load Balancers</b> in the navigation
--   pane, select the load balancer, and get the value of the <b>Hosted
--   zone</b> field on the <b>Description</b> tab.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the
--   applicable value. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers: Use <a>DescribeLoadBalancers</a>
--   to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>DescribeLoadBalancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li><li><b>CLI</b>: Use
--   <tt>describe-load-balancers</tt> to get the applicable value. For more
--   information, see the applicable guide:<ul><li>Classic Load Balancers:
--   Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify
--   <tt>Z2BJ6XQ5FK7U4H</tt>.</li>
--   <li><i>An Amazon S3 bucket configured as a static website</i> Specify
--   the hosted zone ID for the region that you created the bucket in. For
--   more information about valid values, see the table <a>Amazon S3
--   Website Endpoints</a> in the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>Another Route 53 resource record set in your hosted zone</i>
--   Specify the hosted zone ID of your hosted zone. (An alias resource
--   record set can't reference a resource record set in a different hosted
--   zone.)</li>
--   </ul>
--   
--   <a>$sel:dNSName:AliasTarget'</a>, <a>aliasTarget_dNSName</a> -
--   <i>Alias resource record sets only:</i> The value that you specify
--   depends on where you want to route queries:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the applicable domain name for your API. You can get
--   the applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalDomainName</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionDomainName</tt>. This is the name
--   of the associated CloudFront distribution, such as
--   <tt>da1b2c3d4e5.cloudfront.net</tt>.</li></ul>The name of the record
--   that you're creating must match a custom domain name for your API,
--   such as <tt>api.example.com</tt>.</li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Enter
--   the API endpoint for the interface endpoint, such as
--   <tt>vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com</tt>.
--   For edge-optimized APIs, this is the domain name for the corresponding
--   CloudFront distribution. You can get the value of <tt>DnsName</tt>
--   using the CLI command <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify the domain name that
--   CloudFront assigned when you created your distribution.Your CloudFront
--   distribution must include an alternate domain name that matches the
--   name of the resource record set. For example, if the name of the
--   resource record set is <i>acme.example.com</i>, your CloudFront
--   distribution must include <i>acme.example.com</i> as one of the
--   alternate domain names. For more information, see <a>Using Alternate
--   Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront Developer
--   Guide</i>.You can't create a resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.For failover alias
--   records, you can't specify a CloudFront distribution for both the
--   primary and secondary records. A distribution must include an
--   alternate domain name that matches the name of the record. However,
--   the primary and secondary records have the same name, and you can't
--   include the same alternate domain name in more than one
--   distribution.</li>
--   <li><i>Elastic Beanstalk environment</i> If the domain name for your
--   Elastic Beanstalk environment includes the region that you deployed
--   the environment in, you can create an alias record that routes traffic
--   to the environment. For example, the domain name
--   <tt>my-environment.us-west-2.elasticbeanstalk.com</tt> is a
--   regionalized domain name.For environments that were created before
--   early 2016, the domain name doesn't include the region. To route
--   traffic to these environments, you must create a CNAME record instead
--   of an alias record. Note that you can't create a CNAME record for the
--   root domain name. For example, if your domain name is example.com, you
--   can create a record that routes traffic for acme.example.com to your
--   Elastic Beanstalk environment, but you can't create a record that
--   routes traffic for example.com to your Elastic Beanstalk
--   environment.For Elastic Beanstalk environments that have regionalized
--   subdomains, specify the <tt>CNAME</tt> attribute for the environment.
--   You can use the following methods to get the value of the CNAME
--   attribute:<ul><li><i>Amazon Web Services Management Console</i>: For
--   information about how to get the value by using the console, see
--   <a>Using Custom Domains with Elastic Beanstalk</a> in the <i>Elastic
--   Beanstalk Developer Guide</i>.</li><li><i>Elastic Beanstalk API</i>:
--   Use the <tt>DescribeEnvironments</tt> action to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>DescribeEnvironments</a> in the <i>Elastic Beanstalk API
--   Reference</i>.</li><li><i>CLI</i>: Use the
--   <tt>describe-environments</tt> command to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>describe-environments</a> in the <i>CLI Command
--   Reference</i>.</li></ul></li>
--   <li><i>ELB load balancer</i> Specify the DNS name that is associated
--   with the load balancer. Get the DNS name by using the Amazon Web
--   Services Management Console, the ELB API, or the CLI.<ul><li><b>Amazon
--   Web Services Management Console</b>: Go to the EC2 page, choose
--   <b>Load Balancers</b> in the navigation pane, choose the load
--   balancer, choose the <b>Description</b> tab, and get the value of the
--   <b>DNS name</b> field.If you're routing traffic to a Classic Load
--   Balancer, get the value that begins with <b>dualstack</b>. If you're
--   routing traffic to another type of load balancer, get the value that
--   applies to the record type, A or AAAA.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the value
--   of <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>DescribeLoadBalancers</a></li><li>Application and Network Load
--   Balancers: <a>DescribeLoadBalancers</a></li></ul></li><li><b>CLI</b>:
--   Use <tt>describe-load-balancers</tt> to get the value of
--   <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>describe-load-balancers</a></li><li>Application and Network Load
--   Balancers: <a>describe-load-balancers</a></li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify the DNS name for
--   your accelerator:<ul><li><b>Global Accelerator API:</b> To get the DNS
--   name, use <a>DescribeAccelerator</a>.</li><li><b>CLI:</b> To get the
--   DNS name, use <a>describe-accelerator</a>.</li></ul></li>
--   <li><i>Amazon S3 bucket that is configured as a static website</i>
--   Specify the domain name of the Amazon S3 website endpoint that you
--   created the bucket in, for example,
--   <tt>s3-website.us-east-2.amazonaws.com</tt>. For more information
--   about valid values, see the table <a>Amazon S3 Website Endpoints</a>
--   in the <i>Amazon Web Services General Reference</i>. For more
--   information about using S3 buckets for websites, see <a>Getting
--   Started with Amazon Route 53</a> in the <i>Amazon Route 53 Developer
--   Guide.</i></li>
--   <li><i>Another Route 53 resource record set</i> Specify the value of
--   the <tt>Name</tt> element for a resource record set in the current
--   hosted zone.If you're creating an alias record that has the same name
--   as the hosted zone (known as the zone apex), you can't specify the
--   domain name for a record for which the value of <tt>Type</tt> is
--   <tt>CNAME</tt>. This is because the alias record must have the same
--   type as the record that you're routing traffic to, and creating a
--   CNAME record for the zone apex isn't supported even for an alias
--   record.</li>
--   </ul>
--   
--   <a>$sel:evaluateTargetHealth:AliasTarget'</a>,
--   <a>aliasTarget_evaluateTargetHealth</a> - /Applies only to alias,
--   failover alias, geolocation alias, latency alias, and weighted alias
--   resource record sets:/ When <tt>EvaluateTargetHealth</tt> is
--   <tt>true</tt>, an alias resource record set inherits the health of the
--   referenced Amazon Web Services resource, such as an ELB load balancer
--   or another resource record set in the hosted zone.
--   
--   Note the following:
--   
--   <ul>
--   <li><i>CloudFront distributions</i> You can't set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is a CloudFront distribution.</li>
--   <li><i>Elastic Beanstalk environments that have regionalized
--   subdomains</i> If you specify an Elastic Beanstalk environment in
--   <tt>DNSName</tt> and the environment contains an ELB load balancer,
--   Elastic Load Balancing routes queries only to the healthy Amazon EC2
--   instances that are registered with the load balancer. (An environment
--   automatically contains an ELB load balancer if it includes more than
--   one Amazon EC2 instance.) If you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt> and either no Amazon EC2 instances are healthy or the
--   load balancer itself is unhealthy, Route 53 routes queries to other
--   available resources that are healthy, if any.If the environment
--   contains a single Amazon EC2 instance, there are no special
--   requirements.</li>
--   <li><i>ELB load balancers</i> Health checking behavior depends on the
--   type of load balancer:<ul><li><b>Classic Load Balancers</b>: If you
--   specify an ELB Classic Load Balancer in <tt>DNSName</tt>, Elastic Load
--   Balancing routes queries only to the healthy Amazon EC2 instances that
--   are registered with the load balancer. If you set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> and either no EC2
--   instances are healthy or the load balancer itself is unhealthy, Route
--   53 routes queries to other resources.</li><li><b>Application and
--   Network Load Balancers</b>: If you specify an ELB Application or
--   Network Load Balancer and you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt>, Route 53 routes queries to the load balancer based on
--   the health of the target groups that are associated with the load
--   balancer:<ul><li>For an Application or Network Load Balancer to be
--   considered healthy, every target group that contains targets must
--   contain at least one healthy target. If any target group contains only
--   unhealthy targets, the load balancer is considered unhealthy, and
--   Route 53 routes queries to other resources.</li><li>A target group
--   that has no registered targets is considered
--   unhealthy.</li></ul></li></ul>When you create a load balancer, you
--   configure settings for Elastic Load Balancing health checks; they're
--   not Route 53 health checks, but they perform a similar function. Do
--   not create Route 53 health checks for the EC2 instances that you
--   register with an ELB load balancer.</li>
--   <li><i>S3 buckets</i> There are no special requirements for setting
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is an S3 bucket.</li>
--   <li><i>Other records in the same hosted zone</i> If the Amazon Web
--   Services resource that you specify in <tt>DNSName</tt> is a record or
--   a group of records (for example, a group of weighted records) but is
--   not another alias record, we recommend that you associate a health
--   check with all of the records in the alias target. For more
--   information, see <a>What Happens When You Omit Health Checks?</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   For more information and examples, see <a>Amazon Route 53 Health
--   Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.
newAliasTarget :: ResourceId -> Text -> Bool -> AliasTarget

-- | <i>Alias resource records sets only</i>: The value used depends on
--   where you want to route traffic:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the hosted zone ID for your API. You can get the
--   applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalHostedZoneId</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionHostedZoneId</tt>.</li></ul></li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Specify
--   the hosted zone ID for your interface endpoint. You can get the value
--   of <tt>HostedZoneId</tt> using the CLI command
--   <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify
--   <tt>Z2FDTNDATAQYW2</tt>.Alias resource record sets for CloudFront
--   can't be created in a private zone.</li>
--   <li><i>Elastic Beanstalk environment</i> Specify the hosted zone ID
--   for the region that you created the environment in. The environment
--   must have a regionalized subdomain. For a list of regions and the
--   corresponding hosted zone IDs, see <a>Elastic Beanstalk endpoints and
--   quotas</a> in the the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>ELB load balancer</i> Specify the value of the hosted zone ID
--   for the load balancer. Use the following methods to get the hosted
--   zone ID:<ul><li><a>Elastic Load Balancing endpoints and quotas</a>
--   topic in the <i>Amazon Web Services General Reference</i>: Use the
--   value that corresponds with the region that you created your load
--   balancer in. Note that there are separate columns for Application and
--   Classic Load Balancers and for Network Load
--   Balancers.</li><li><b>Amazon Web Services Management Console</b>: Go
--   to the Amazon EC2 page, choose <b>Load Balancers</b> in the navigation
--   pane, select the load balancer, and get the value of the <b>Hosted
--   zone</b> field on the <b>Description</b> tab.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the
--   applicable value. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers: Use <a>DescribeLoadBalancers</a>
--   to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>DescribeLoadBalancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li><li><b>CLI</b>: Use
--   <tt>describe-load-balancers</tt> to get the applicable value. For more
--   information, see the applicable guide:<ul><li>Classic Load Balancers:
--   Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify
--   <tt>Z2BJ6XQ5FK7U4H</tt>.</li>
--   <li><i>An Amazon S3 bucket configured as a static website</i> Specify
--   the hosted zone ID for the region that you created the bucket in. For
--   more information about valid values, see the table <a>Amazon S3
--   Website Endpoints</a> in the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>Another Route 53 resource record set in your hosted zone</i>
--   Specify the hosted zone ID of your hosted zone. (An alias resource
--   record set can't reference a resource record set in a different hosted
--   zone.)</li>
--   </ul>
aliasTarget_hostedZoneId :: Lens' AliasTarget ResourceId

-- | <i>Alias resource record sets only:</i> The value that you specify
--   depends on where you want to route queries:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the applicable domain name for your API. You can get
--   the applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalDomainName</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionDomainName</tt>. This is the name
--   of the associated CloudFront distribution, such as
--   <tt>da1b2c3d4e5.cloudfront.net</tt>.</li></ul>The name of the record
--   that you're creating must match a custom domain name for your API,
--   such as <tt>api.example.com</tt>.</li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Enter
--   the API endpoint for the interface endpoint, such as
--   <tt>vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com</tt>.
--   For edge-optimized APIs, this is the domain name for the corresponding
--   CloudFront distribution. You can get the value of <tt>DnsName</tt>
--   using the CLI command <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify the domain name that
--   CloudFront assigned when you created your distribution.Your CloudFront
--   distribution must include an alternate domain name that matches the
--   name of the resource record set. For example, if the name of the
--   resource record set is <i>acme.example.com</i>, your CloudFront
--   distribution must include <i>acme.example.com</i> as one of the
--   alternate domain names. For more information, see <a>Using Alternate
--   Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront Developer
--   Guide</i>.You can't create a resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.For failover alias
--   records, you can't specify a CloudFront distribution for both the
--   primary and secondary records. A distribution must include an
--   alternate domain name that matches the name of the record. However,
--   the primary and secondary records have the same name, and you can't
--   include the same alternate domain name in more than one
--   distribution.</li>
--   <li><i>Elastic Beanstalk environment</i> If the domain name for your
--   Elastic Beanstalk environment includes the region that you deployed
--   the environment in, you can create an alias record that routes traffic
--   to the environment. For example, the domain name
--   <tt>my-environment.us-west-2.elasticbeanstalk.com</tt> is a
--   regionalized domain name.For environments that were created before
--   early 2016, the domain name doesn't include the region. To route
--   traffic to these environments, you must create a CNAME record instead
--   of an alias record. Note that you can't create a CNAME record for the
--   root domain name. For example, if your domain name is example.com, you
--   can create a record that routes traffic for acme.example.com to your
--   Elastic Beanstalk environment, but you can't create a record that
--   routes traffic for example.com to your Elastic Beanstalk
--   environment.For Elastic Beanstalk environments that have regionalized
--   subdomains, specify the <tt>CNAME</tt> attribute for the environment.
--   You can use the following methods to get the value of the CNAME
--   attribute:<ul><li><i>Amazon Web Services Management Console</i>: For
--   information about how to get the value by using the console, see
--   <a>Using Custom Domains with Elastic Beanstalk</a> in the <i>Elastic
--   Beanstalk Developer Guide</i>.</li><li><i>Elastic Beanstalk API</i>:
--   Use the <tt>DescribeEnvironments</tt> action to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>DescribeEnvironments</a> in the <i>Elastic Beanstalk API
--   Reference</i>.</li><li><i>CLI</i>: Use the
--   <tt>describe-environments</tt> command to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>describe-environments</a> in the <i>CLI Command
--   Reference</i>.</li></ul></li>
--   <li><i>ELB load balancer</i> Specify the DNS name that is associated
--   with the load balancer. Get the DNS name by using the Amazon Web
--   Services Management Console, the ELB API, or the CLI.<ul><li><b>Amazon
--   Web Services Management Console</b>: Go to the EC2 page, choose
--   <b>Load Balancers</b> in the navigation pane, choose the load
--   balancer, choose the <b>Description</b> tab, and get the value of the
--   <b>DNS name</b> field.If you're routing traffic to a Classic Load
--   Balancer, get the value that begins with <b>dualstack</b>. If you're
--   routing traffic to another type of load balancer, get the value that
--   applies to the record type, A or AAAA.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the value
--   of <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>DescribeLoadBalancers</a></li><li>Application and Network Load
--   Balancers: <a>DescribeLoadBalancers</a></li></ul></li><li><b>CLI</b>:
--   Use <tt>describe-load-balancers</tt> to get the value of
--   <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>describe-load-balancers</a></li><li>Application and Network Load
--   Balancers: <a>describe-load-balancers</a></li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify the DNS name for
--   your accelerator:<ul><li><b>Global Accelerator API:</b> To get the DNS
--   name, use <a>DescribeAccelerator</a>.</li><li><b>CLI:</b> To get the
--   DNS name, use <a>describe-accelerator</a>.</li></ul></li>
--   <li><i>Amazon S3 bucket that is configured as a static website</i>
--   Specify the domain name of the Amazon S3 website endpoint that you
--   created the bucket in, for example,
--   <tt>s3-website.us-east-2.amazonaws.com</tt>. For more information
--   about valid values, see the table <a>Amazon S3 Website Endpoints</a>
--   in the <i>Amazon Web Services General Reference</i>. For more
--   information about using S3 buckets for websites, see <a>Getting
--   Started with Amazon Route 53</a> in the <i>Amazon Route 53 Developer
--   Guide.</i></li>
--   <li><i>Another Route 53 resource record set</i> Specify the value of
--   the <tt>Name</tt> element for a resource record set in the current
--   hosted zone.If you're creating an alias record that has the same name
--   as the hosted zone (known as the zone apex), you can't specify the
--   domain name for a record for which the value of <tt>Type</tt> is
--   <tt>CNAME</tt>. This is because the alias record must have the same
--   type as the record that you're routing traffic to, and creating a
--   CNAME record for the zone apex isn't supported even for an alias
--   record.</li>
--   </ul>
aliasTarget_dNSName :: Lens' AliasTarget Text

-- | /Applies only to alias, failover alias, geolocation alias, latency
--   alias, and weighted alias resource record sets:/ When
--   <tt>EvaluateTargetHealth</tt> is <tt>true</tt>, an alias resource
--   record set inherits the health of the referenced Amazon Web Services
--   resource, such as an ELB load balancer or another resource record set
--   in the hosted zone.
--   
--   Note the following:
--   
--   <ul>
--   <li><i>CloudFront distributions</i> You can't set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is a CloudFront distribution.</li>
--   <li><i>Elastic Beanstalk environments that have regionalized
--   subdomains</i> If you specify an Elastic Beanstalk environment in
--   <tt>DNSName</tt> and the environment contains an ELB load balancer,
--   Elastic Load Balancing routes queries only to the healthy Amazon EC2
--   instances that are registered with the load balancer. (An environment
--   automatically contains an ELB load balancer if it includes more than
--   one Amazon EC2 instance.) If you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt> and either no Amazon EC2 instances are healthy or the
--   load balancer itself is unhealthy, Route 53 routes queries to other
--   available resources that are healthy, if any.If the environment
--   contains a single Amazon EC2 instance, there are no special
--   requirements.</li>
--   <li><i>ELB load balancers</i> Health checking behavior depends on the
--   type of load balancer:<ul><li><b>Classic Load Balancers</b>: If you
--   specify an ELB Classic Load Balancer in <tt>DNSName</tt>, Elastic Load
--   Balancing routes queries only to the healthy Amazon EC2 instances that
--   are registered with the load balancer. If you set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> and either no EC2
--   instances are healthy or the load balancer itself is unhealthy, Route
--   53 routes queries to other resources.</li><li><b>Application and
--   Network Load Balancers</b>: If you specify an ELB Application or
--   Network Load Balancer and you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt>, Route 53 routes queries to the load balancer based on
--   the health of the target groups that are associated with the load
--   balancer:<ul><li>For an Application or Network Load Balancer to be
--   considered healthy, every target group that contains targets must
--   contain at least one healthy target. If any target group contains only
--   unhealthy targets, the load balancer is considered unhealthy, and
--   Route 53 routes queries to other resources.</li><li>A target group
--   that has no registered targets is considered
--   unhealthy.</li></ul></li></ul>When you create a load balancer, you
--   configure settings for Elastic Load Balancing health checks; they're
--   not Route 53 health checks, but they perform a similar function. Do
--   not create Route 53 health checks for the EC2 instances that you
--   register with an ELB load balancer.</li>
--   <li><i>S3 buckets</i> There are no special requirements for setting
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is an S3 bucket.</li>
--   <li><i>Other records in the same hosted zone</i> If the Amazon Web
--   Services resource that you specify in <tt>DNSName</tt> is a record or
--   a group of records (for example, a group of weighted records) but is
--   not another alias record, we recommend that you associate a health
--   check with all of the records in the alias target. For more
--   information, see <a>What Happens When You Omit Health Checks?</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   For more information and examples, see <a>Amazon Route 53 Health
--   Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.
aliasTarget_evaluateTargetHealth :: Lens' AliasTarget Bool

-- | The information for each resource record set that you want to change.
--   
--   <i>See:</i> <a>newChange</a> smart constructor.
data Change
Change' :: ChangeAction -> ResourceRecordSet -> Change

-- | The action to perform:
--   
--   <ul>
--   <li><tt>CREATE</tt>: Creates a resource record set that has the
--   specified values.</li>
--   <li><tt>DELETE</tt>: Deletes a existing resource record set.To delete
--   the resource record set that is associated with a traffic policy
--   instance, use <a>DeleteTrafficPolicyInstance</a>. Amazon Route 53 will
--   delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.</li>
--   <li><tt>UPSERT</tt>: If a resource record set doesn't already exist,
--   Route 53 creates it. If a resource record set does exist, Route 53
--   updates it with the values in the request.</li>
--   </ul>
[$sel:action:Change'] :: Change -> ChangeAction

-- | Information about the resource record set to create, delete, or
--   update.
[$sel:resourceRecordSet:Change'] :: Change -> ResourceRecordSet

-- | Create a value of <a>Change</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:Change'</a>, <a>change_action</a> - The action to
--   perform:
--   
--   <ul>
--   <li><tt>CREATE</tt>: Creates a resource record set that has the
--   specified values.</li>
--   <li><tt>DELETE</tt>: Deletes a existing resource record set.To delete
--   the resource record set that is associated with a traffic policy
--   instance, use <a>DeleteTrafficPolicyInstance</a>. Amazon Route 53 will
--   delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.</li>
--   <li><tt>UPSERT</tt>: If a resource record set doesn't already exist,
--   Route 53 creates it. If a resource record set does exist, Route 53
--   updates it with the values in the request.</li>
--   </ul>
--   
--   <a>$sel:resourceRecordSet:Change'</a>, <a>change_resourceRecordSet</a>
--   - Information about the resource record set to create, delete, or
--   update.
newChange :: ChangeAction -> ResourceRecordSet -> Change

-- | The action to perform:
--   
--   <ul>
--   <li><tt>CREATE</tt>: Creates a resource record set that has the
--   specified values.</li>
--   <li><tt>DELETE</tt>: Deletes a existing resource record set.To delete
--   the resource record set that is associated with a traffic policy
--   instance, use <a>DeleteTrafficPolicyInstance</a>. Amazon Route 53 will
--   delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.</li>
--   <li><tt>UPSERT</tt>: If a resource record set doesn't already exist,
--   Route 53 creates it. If a resource record set does exist, Route 53
--   updates it with the values in the request.</li>
--   </ul>
change_action :: Lens' Change ChangeAction

-- | Information about the resource record set to create, delete, or
--   update.
change_resourceRecordSet :: Lens' Change ResourceRecordSet

-- | The information for a change request.
--   
--   <i>See:</i> <a>newChangeBatch</a> smart constructor.
data ChangeBatch
ChangeBatch' :: Maybe Text -> NonEmpty Change -> ChangeBatch

-- | <i>Optional:</i> Any comments you want to include about a change batch
--   request.
[$sel:comment:ChangeBatch'] :: ChangeBatch -> Maybe Text

-- | Information about the changes to make to the record sets.
[$sel:changes:ChangeBatch'] :: ChangeBatch -> NonEmpty Change

-- | Create a value of <a>ChangeBatch</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:ChangeBatch'</a>, <a>changeBatch_comment</a> -
--   <i>Optional:</i> Any comments you want to include about a change batch
--   request.
--   
--   <a>$sel:changes:ChangeBatch'</a>, <a>changeBatch_changes</a> -
--   Information about the changes to make to the record sets.
newChangeBatch :: NonEmpty Change -> ChangeBatch

-- | <i>Optional:</i> Any comments you want to include about a change batch
--   request.
changeBatch_comment :: Lens' ChangeBatch (Maybe Text)

-- | Information about the changes to make to the record sets.
changeBatch_changes :: Lens' ChangeBatch (NonEmpty Change)

-- | A complex type that describes change information about changes made to
--   your hosted zone.
--   
--   <i>See:</i> <a>newChangeInfo</a> smart constructor.
data ChangeInfo
ChangeInfo' :: Maybe Text -> ResourceId -> ChangeStatus -> ISO8601 -> ChangeInfo

-- | A comment you can provide.
[$sel:comment:ChangeInfo'] :: ChangeInfo -> Maybe Text

-- | This element contains an ID that you use when performing a
--   <a>GetChange</a> action to get detailed information about the change.
[$sel:id:ChangeInfo'] :: ChangeInfo -> ResourceId

-- | The current state of the request. <tt>PENDING</tt> indicates that this
--   request has not yet been applied to all Amazon Route 53 DNS servers.
[$sel:status:ChangeInfo'] :: ChangeInfo -> ChangeStatus

-- | The date and time that the change request was submitted in <a>ISO 8601
--   format</a> and Coordinated Universal Time (UTC). For example, the
--   value <tt>2017-03-27T17:48:16.751Z</tt> represents March 27, 2017 at
--   17:48:16.751 UTC.
[$sel:submittedAt:ChangeInfo'] :: ChangeInfo -> ISO8601

-- | Create a value of <a>ChangeInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:ChangeInfo'</a>, <a>changeInfo_comment</a> - A comment
--   you can provide.
--   
--   <a>$sel:id:ChangeInfo'</a>, <a>changeInfo_id</a> - This element
--   contains an ID that you use when performing a <a>GetChange</a> action
--   to get detailed information about the change.
--   
--   <a>$sel:status:ChangeInfo'</a>, <a>changeInfo_status</a> - The current
--   state of the request. <tt>PENDING</tt> indicates that this request has
--   not yet been applied to all Amazon Route 53 DNS servers.
--   
--   <a>$sel:submittedAt:ChangeInfo'</a>, <a>changeInfo_submittedAt</a> -
--   The date and time that the change request was submitted in <a>ISO 8601
--   format</a> and Coordinated Universal Time (UTC). For example, the
--   value <tt>2017-03-27T17:48:16.751Z</tt> represents March 27, 2017 at
--   17:48:16.751 UTC.
newChangeInfo :: ResourceId -> ChangeStatus -> UTCTime -> ChangeInfo

-- | A comment you can provide.
changeInfo_comment :: Lens' ChangeInfo (Maybe Text)

-- | This element contains an ID that you use when performing a
--   <a>GetChange</a> action to get detailed information about the change.
changeInfo_id :: Lens' ChangeInfo ResourceId

-- | The current state of the request. <tt>PENDING</tt> indicates that this
--   request has not yet been applied to all Amazon Route 53 DNS servers.
changeInfo_status :: Lens' ChangeInfo ChangeStatus

-- | The date and time that the change request was submitted in <a>ISO 8601
--   format</a> and Coordinated Universal Time (UTC). For example, the
--   value <tt>2017-03-27T17:48:16.751Z</tt> represents March 27, 2017 at
--   17:48:16.751 UTC.
changeInfo_submittedAt :: Lens' ChangeInfo UTCTime

-- | A complex type that contains information about the CloudWatch alarm
--   that Amazon Route 53 is monitoring for this health check.
--   
--   <i>See:</i> <a>newCloudWatchAlarmConfiguration</a> smart constructor.
data CloudWatchAlarmConfiguration
CloudWatchAlarmConfiguration' :: Maybe [Dimension] -> Natural -> Double -> ComparisonOperator -> Natural -> Text -> Text -> Statistic -> CloudWatchAlarmConfiguration

-- | For the metric that the CloudWatch alarm is associated with, a complex
--   type that contains information about the dimensions for the metric.
--   For information, see <a>Amazon CloudWatch Namespaces, Dimensions, and
--   Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
[$sel:dimensions:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Maybe [Dimension]

-- | For the metric that the CloudWatch alarm is associated with, the
--   number of periods that the metric is compared to the threshold.
[$sel:evaluationPeriods:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Natural

-- | For the metric that the CloudWatch alarm is associated with, the value
--   the metric is compared with.
[$sel:threshold:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Double

-- | For the metric that the CloudWatch alarm is associated with, the
--   arithmetic operation that is used for the comparison.
[$sel:comparisonOperator:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> ComparisonOperator

-- | For the metric that the CloudWatch alarm is associated with, the
--   duration of one evaluation period in seconds.
[$sel:period:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Natural

-- | The name of the CloudWatch metric that the alarm is associated with.
[$sel:metricName:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Text

-- | The namespace of the metric that the alarm is associated with. For
--   more information, see <a>Amazon CloudWatch Namespaces, Dimensions, and
--   Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
[$sel:namespace:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Text

-- | For the metric that the CloudWatch alarm is associated with, the
--   statistic that is applied to the metric.
[$sel:statistic:CloudWatchAlarmConfiguration'] :: CloudWatchAlarmConfiguration -> Statistic

-- | Create a value of <a>CloudWatchAlarmConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dimensions:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_dimensions</a> - For the metric that
--   the CloudWatch alarm is associated with, a complex type that contains
--   information about the dimensions for the metric. For information, see
--   <a>Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a>
--   in the <i>Amazon CloudWatch User Guide</i>.
--   
--   <a>$sel:evaluationPeriods:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_evaluationPeriods</a> - For the metric
--   that the CloudWatch alarm is associated with, the number of periods
--   that the metric is compared to the threshold.
--   
--   <a>$sel:threshold:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_threshold</a> - For the metric that
--   the CloudWatch alarm is associated with, the value the metric is
--   compared with.
--   
--   <a>$sel:comparisonOperator:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_comparisonOperator</a> - For the
--   metric that the CloudWatch alarm is associated with, the arithmetic
--   operation that is used for the comparison.
--   
--   <a>$sel:period:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_period</a> - For the metric that the
--   CloudWatch alarm is associated with, the duration of one evaluation
--   period in seconds.
--   
--   <a>$sel:metricName:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_metricName</a> - The name of the
--   CloudWatch metric that the alarm is associated with.
--   
--   <a>$sel:namespace:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_namespace</a> - The namespace of the
--   metric that the alarm is associated with. For more information, see
--   <a>Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a>
--   in the <i>Amazon CloudWatch User Guide</i>.
--   
--   <a>$sel:statistic:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_statistic</a> - For the metric that
--   the CloudWatch alarm is associated with, the statistic that is applied
--   to the metric.
newCloudWatchAlarmConfiguration :: Natural -> Double -> ComparisonOperator -> Natural -> Text -> Text -> Statistic -> CloudWatchAlarmConfiguration

-- | For the metric that the CloudWatch alarm is associated with, a complex
--   type that contains information about the dimensions for the metric.
--   For information, see <a>Amazon CloudWatch Namespaces, Dimensions, and
--   Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
cloudWatchAlarmConfiguration_dimensions :: Lens' CloudWatchAlarmConfiguration (Maybe [Dimension])

-- | For the metric that the CloudWatch alarm is associated with, the
--   number of periods that the metric is compared to the threshold.
cloudWatchAlarmConfiguration_evaluationPeriods :: Lens' CloudWatchAlarmConfiguration Natural

-- | For the metric that the CloudWatch alarm is associated with, the value
--   the metric is compared with.
cloudWatchAlarmConfiguration_threshold :: Lens' CloudWatchAlarmConfiguration Double

-- | For the metric that the CloudWatch alarm is associated with, the
--   arithmetic operation that is used for the comparison.
cloudWatchAlarmConfiguration_comparisonOperator :: Lens' CloudWatchAlarmConfiguration ComparisonOperator

-- | For the metric that the CloudWatch alarm is associated with, the
--   duration of one evaluation period in seconds.
cloudWatchAlarmConfiguration_period :: Lens' CloudWatchAlarmConfiguration Natural

-- | The name of the CloudWatch metric that the alarm is associated with.
cloudWatchAlarmConfiguration_metricName :: Lens' CloudWatchAlarmConfiguration Text

-- | The namespace of the metric that the alarm is associated with. For
--   more information, see <a>Amazon CloudWatch Namespaces, Dimensions, and
--   Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
cloudWatchAlarmConfiguration_namespace :: Lens' CloudWatchAlarmConfiguration Text

-- | For the metric that the CloudWatch alarm is associated with, the
--   statistic that is applied to the metric.
cloudWatchAlarmConfiguration_statistic :: Lens' CloudWatchAlarmConfiguration Statistic

-- | A string repesenting the status of DNSSEC signing.
--   
--   <i>See:</i> <a>newDNSSECStatus</a> smart constructor.
data DNSSECStatus
DNSSECStatus' :: Maybe Text -> Maybe Text -> DNSSECStatus

-- | A string that represents the current hosted zone signing status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>SIGNING</i> DNSSEC signing is enabled for the hosted zone.</li>
--   <li><i>NOT_SIGNING</i> DNSSEC signing is not enabled for the hosted
--   zone.</li>
--   <li><i>DELETING</i> DNSSEC signing is in the process of being removed
--   for the hosted zone.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with signing in the hosted
--   zone that requires you to take action to resolve. For example, the
--   customer managed customer master key (CMK) might have been deleted, or
--   the permissions for the customer managed CMK might have been
--   changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including with
--   key-signing keys (KSKs), you must correct the problem by enabling or
--   disabling DNSSEC signing for the hosted zone.</li>
--   </ul>
[$sel:serveSignature:DNSSECStatus'] :: DNSSECStatus -> Maybe Text

-- | The status message provided for the following DNSSEC signing status:
--   <tt>INTERNAL_FAILURE</tt>. The status message includes information
--   about what the problem might be and steps that you can take to correct
--   the issue.
[$sel:statusMessage:DNSSECStatus'] :: DNSSECStatus -> Maybe Text

-- | Create a value of <a>DNSSECStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serveSignature:DNSSECStatus'</a>,
--   <a>dNSSECStatus_serveSignature</a> - A string that represents the
--   current hosted zone signing status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>SIGNING</i> DNSSEC signing is enabled for the hosted zone.</li>
--   <li><i>NOT_SIGNING</i> DNSSEC signing is not enabled for the hosted
--   zone.</li>
--   <li><i>DELETING</i> DNSSEC signing is in the process of being removed
--   for the hosted zone.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with signing in the hosted
--   zone that requires you to take action to resolve. For example, the
--   customer managed customer master key (CMK) might have been deleted, or
--   the permissions for the customer managed CMK might have been
--   changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including with
--   key-signing keys (KSKs), you must correct the problem by enabling or
--   disabling DNSSEC signing for the hosted zone.</li>
--   </ul>
--   
--   <a>$sel:statusMessage:DNSSECStatus'</a>,
--   <a>dNSSECStatus_statusMessage</a> - The status message provided for
--   the following DNSSEC signing status: <tt>INTERNAL_FAILURE</tt>. The
--   status message includes information about what the problem might be
--   and steps that you can take to correct the issue.
newDNSSECStatus :: DNSSECStatus

-- | A string that represents the current hosted zone signing status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>SIGNING</i> DNSSEC signing is enabled for the hosted zone.</li>
--   <li><i>NOT_SIGNING</i> DNSSEC signing is not enabled for the hosted
--   zone.</li>
--   <li><i>DELETING</i> DNSSEC signing is in the process of being removed
--   for the hosted zone.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with signing in the hosted
--   zone that requires you to take action to resolve. For example, the
--   customer managed customer master key (CMK) might have been deleted, or
--   the permissions for the customer managed CMK might have been
--   changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including with
--   key-signing keys (KSKs), you must correct the problem by enabling or
--   disabling DNSSEC signing for the hosted zone.</li>
--   </ul>
dNSSECStatus_serveSignature :: Lens' DNSSECStatus (Maybe Text)

-- | The status message provided for the following DNSSEC signing status:
--   <tt>INTERNAL_FAILURE</tt>. The status message includes information
--   about what the problem might be and steps that you can take to correct
--   the issue.
dNSSECStatus_statusMessage :: Lens' DNSSECStatus (Maybe Text)

-- | A complex type that lists the name servers in a delegation set, as
--   well as the <tt>CallerReference</tt> and the <tt>ID</tt> for the
--   delegation set.
--   
--   <i>See:</i> <a>newDelegationSet</a> smart constructor.
data DelegationSet
DelegationSet' :: Maybe ResourceId -> Maybe Text -> NonEmpty Text -> DelegationSet

-- | The ID that Amazon Route 53 assigns to a reusable delegation set.
[$sel:id:DelegationSet'] :: DelegationSet -> Maybe ResourceId

-- | The value that you specified for <tt>CallerReference</tt> when you
--   created the reusable delegation set.
[$sel:callerReference:DelegationSet'] :: DelegationSet -> Maybe Text

-- | A complex type that contains a list of the authoritative name servers
--   for a hosted zone or for a reusable delegation set.
[$sel:nameServers:DelegationSet'] :: DelegationSet -> NonEmpty Text

-- | Create a value of <a>DelegationSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DelegationSet'</a>, <a>delegationSet_id</a> - The ID that
--   Amazon Route 53 assigns to a reusable delegation set.
--   
--   <a>$sel:callerReference:DelegationSet'</a>,
--   <a>delegationSet_callerReference</a> - The value that you specified
--   for <tt>CallerReference</tt> when you created the reusable delegation
--   set.
--   
--   <a>$sel:nameServers:DelegationSet'</a>,
--   <a>delegationSet_nameServers</a> - A complex type that contains a list
--   of the authoritative name servers for a hosted zone or for a reusable
--   delegation set.
newDelegationSet :: NonEmpty Text -> DelegationSet

-- | The ID that Amazon Route 53 assigns to a reusable delegation set.
delegationSet_id :: Lens' DelegationSet (Maybe ResourceId)

-- | The value that you specified for <tt>CallerReference</tt> when you
--   created the reusable delegation set.
delegationSet_callerReference :: Lens' DelegationSet (Maybe Text)

-- | A complex type that contains a list of the authoritative name servers
--   for a hosted zone or for a reusable delegation set.
delegationSet_nameServers :: Lens' DelegationSet (NonEmpty Text)

-- | For the metric that the CloudWatch alarm is associated with, a complex
--   type that contains information about one dimension.
--   
--   <i>See:</i> <a>newDimension</a> smart constructor.
data Dimension
Dimension' :: Text -> Text -> Dimension

-- | For the metric that the CloudWatch alarm is associated with, the name
--   of one dimension.
[$sel:name:Dimension'] :: Dimension -> Text

-- | For the metric that the CloudWatch alarm is associated with, the value
--   of one dimension.
[$sel:value:Dimension'] :: Dimension -> Text

-- | Create a value of <a>Dimension</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Dimension'</a>, <a>dimension_name</a> - For the metric
--   that the CloudWatch alarm is associated with, the name of one
--   dimension.
--   
--   <a>$sel:value:Dimension'</a>, <a>dimension_value</a> - For the metric
--   that the CloudWatch alarm is associated with, the value of one
--   dimension.
newDimension :: Text -> Text -> Dimension

-- | For the metric that the CloudWatch alarm is associated with, the name
--   of one dimension.
dimension_name :: Lens' Dimension Text

-- | For the metric that the CloudWatch alarm is associated with, the value
--   of one dimension.
dimension_value :: Lens' Dimension Text

-- | A complex type that contains information about a geographic location.
--   
--   <i>See:</i> <a>newGeoLocation</a> smart constructor.
data GeoLocation
GeoLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> GeoLocation

-- | For geolocation resource record sets, the two-letter code for a state
--   of the United States. Route 53 doesn't support any other values for
--   <tt>SubdivisionCode</tt>. For a list of state abbreviations, see
--   <a>Appendix B: Two–Letter State and Possession Abbreviations</a> on
--   the United States Postal Service website.
--   
--   If you specify <tt>subdivisioncode</tt>, you must also specify
--   <tt>US</tt> for <tt>CountryCode</tt>.
[$sel:subdivisionCode:GeoLocation'] :: GeoLocation -> Maybe Text

-- | For geolocation resource record sets, the two-letter code for a
--   country.
--   
--   Amazon Route 53 uses the two-letter country codes that are specified
--   in <a>ISO standard 3166-1 alpha-2</a>.
[$sel:countryCode:GeoLocation'] :: GeoLocation -> Maybe Text

-- | The two-letter code for the continent.
--   
--   Amazon Route 53 supports the following continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
--   
--   Constraint: Specifying <tt>ContinentCode</tt> with either
--   <tt>CountryCode</tt> or <tt>SubdivisionCode</tt> returns an
--   <tt>InvalidInput</tt> error.
[$sel:continentCode:GeoLocation'] :: GeoLocation -> Maybe Text

-- | Create a value of <a>GeoLocation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subdivisionCode:GeoLocation'</a>,
--   <a>geoLocation_subdivisionCode</a> - For geolocation resource record
--   sets, the two-letter code for a state of the United States. Route 53
--   doesn't support any other values for <tt>SubdivisionCode</tt>. For a
--   list of state abbreviations, see <a>Appendix B: Two–Letter State and
--   Possession Abbreviations</a> on the United States Postal Service
--   website.
--   
--   If you specify <tt>subdivisioncode</tt>, you must also specify
--   <tt>US</tt> for <tt>CountryCode</tt>.
--   
--   <a>$sel:countryCode:GeoLocation'</a>, <a>geoLocation_countryCode</a> -
--   For geolocation resource record sets, the two-letter code for a
--   country.
--   
--   Amazon Route 53 uses the two-letter country codes that are specified
--   in <a>ISO standard 3166-1 alpha-2</a>.
--   
--   <a>$sel:continentCode:GeoLocation'</a>,
--   <a>geoLocation_continentCode</a> - The two-letter code for the
--   continent.
--   
--   Amazon Route 53 supports the following continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
--   
--   Constraint: Specifying <tt>ContinentCode</tt> with either
--   <tt>CountryCode</tt> or <tt>SubdivisionCode</tt> returns an
--   <tt>InvalidInput</tt> error.
newGeoLocation :: GeoLocation

-- | For geolocation resource record sets, the two-letter code for a state
--   of the United States. Route 53 doesn't support any other values for
--   <tt>SubdivisionCode</tt>. For a list of state abbreviations, see
--   <a>Appendix B: Two–Letter State and Possession Abbreviations</a> on
--   the United States Postal Service website.
--   
--   If you specify <tt>subdivisioncode</tt>, you must also specify
--   <tt>US</tt> for <tt>CountryCode</tt>.
geoLocation_subdivisionCode :: Lens' GeoLocation (Maybe Text)

-- | For geolocation resource record sets, the two-letter code for a
--   country.
--   
--   Amazon Route 53 uses the two-letter country codes that are specified
--   in <a>ISO standard 3166-1 alpha-2</a>.
geoLocation_countryCode :: Lens' GeoLocation (Maybe Text)

-- | The two-letter code for the continent.
--   
--   Amazon Route 53 supports the following continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
--   
--   Constraint: Specifying <tt>ContinentCode</tt> with either
--   <tt>CountryCode</tt> or <tt>SubdivisionCode</tt> returns an
--   <tt>InvalidInput</tt> error.
geoLocation_continentCode :: Lens' GeoLocation (Maybe Text)

-- | A complex type that contains the codes and full continent, country,
--   and subdivision names for the specified <tt>geolocation</tt> code.
--   
--   <i>See:</i> <a>newGeoLocationDetails</a> smart constructor.
data GeoLocationDetails
GeoLocationDetails' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> GeoLocationDetails

-- | The full name of the subdivision. Route 53 currently supports only
--   states in the United States.
[$sel:subdivisionName:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | The code for the subdivision, such as a particular state within the
--   United States. For a list of US state abbreviations, see <a>Appendix
--   B: Two–Letter State and Possession Abbreviations</a> on the United
--   States Postal Service website. For a list of all supported subdivision
--   codes, use the <a>ListGeoLocations</a> API.
[$sel:subdivisionCode:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | The name of the country.
[$sel:countryName:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | The two-letter code for the country.
[$sel:countryCode:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | The two-letter code for the continent.
[$sel:continentCode:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | The full name of the continent.
[$sel:continentName:GeoLocationDetails'] :: GeoLocationDetails -> Maybe Text

-- | Create a value of <a>GeoLocationDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subdivisionName:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_subdivisionName</a> - The full name of the
--   subdivision. Route 53 currently supports only states in the United
--   States.
--   
--   <a>$sel:subdivisionCode:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_subdivisionCode</a> - The code for the
--   subdivision, such as a particular state within the United States. For
--   a list of US state abbreviations, see <a>Appendix B: Two–Letter State
--   and Possession Abbreviations</a> on the United States Postal Service
--   website. For a list of all supported subdivision codes, use the
--   <a>ListGeoLocations</a> API.
--   
--   <a>$sel:countryName:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_countryName</a> - The name of the country.
--   
--   <a>$sel:countryCode:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_countryCode</a> - The two-letter code for the
--   country.
--   
--   <a>$sel:continentCode:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_continentCode</a> - The two-letter code for the
--   continent.
--   
--   <a>$sel:continentName:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_continentName</a> - The full name of the
--   continent.
newGeoLocationDetails :: GeoLocationDetails

-- | The full name of the subdivision. Route 53 currently supports only
--   states in the United States.
geoLocationDetails_subdivisionName :: Lens' GeoLocationDetails (Maybe Text)

-- | The code for the subdivision, such as a particular state within the
--   United States. For a list of US state abbreviations, see <a>Appendix
--   B: Two–Letter State and Possession Abbreviations</a> on the United
--   States Postal Service website. For a list of all supported subdivision
--   codes, use the <a>ListGeoLocations</a> API.
geoLocationDetails_subdivisionCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The name of the country.
geoLocationDetails_countryName :: Lens' GeoLocationDetails (Maybe Text)

-- | The two-letter code for the country.
geoLocationDetails_countryCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The two-letter code for the continent.
geoLocationDetails_continentCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The full name of the continent.
geoLocationDetails_continentName :: Lens' GeoLocationDetails (Maybe Text)

-- | A complex type that contains information about one health check that
--   is associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newHealthCheck</a> smart constructor.
data HealthCheck
HealthCheck' :: Maybe LinkedService -> Maybe CloudWatchAlarmConfiguration -> Text -> Text -> HealthCheckConfig -> Natural -> HealthCheck

-- | If the health check was created by another service, the service that
--   created the health check. When a health check is created by another
--   service, you can't edit or delete it using Amazon Route 53.
[$sel:linkedService:HealthCheck'] :: HealthCheck -> Maybe LinkedService

-- | A complex type that contains information about the CloudWatch alarm
--   that Amazon Route 53 is monitoring for this health check.
[$sel:cloudWatchAlarmConfiguration:HealthCheck'] :: HealthCheck -> Maybe CloudWatchAlarmConfiguration

-- | The identifier that Amazon Route 53 assigned to the health check when
--   you created it. When you add or update a resource record set, you use
--   this value to specify which health check to use. The value can be up
--   to 64 characters long.
[$sel:id:HealthCheck'] :: HealthCheck -> Text

-- | A unique string that you specified when you created the health check.
[$sel:callerReference:HealthCheck'] :: HealthCheck -> Text

-- | A complex type that contains detailed information about one health
--   check.
[$sel:healthCheckConfig:HealthCheck'] :: HealthCheck -> HealthCheckConfig

-- | The version of the health check. You can optionally pass this value in
--   a call to <tt>UpdateHealthCheck</tt> to prevent overwriting another
--   change to the health check.
[$sel:healthCheckVersion:HealthCheck'] :: HealthCheck -> Natural

-- | Create a value of <a>HealthCheck</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkedService:HealthCheck'</a>,
--   <a>healthCheck_linkedService</a> - If the health check was created by
--   another service, the service that created the health check. When a
--   health check is created by another service, you can't edit or delete
--   it using Amazon Route 53.
--   
--   <a>$sel:cloudWatchAlarmConfiguration:HealthCheck'</a>,
--   <a>healthCheck_cloudWatchAlarmConfiguration</a> - A complex type that
--   contains information about the CloudWatch alarm that Amazon Route 53
--   is monitoring for this health check.
--   
--   <a>$sel:id:HealthCheck'</a>, <a>healthCheck_id</a> - The identifier
--   that Amazon Route 53 assigned to the health check when you created it.
--   When you add or update a resource record set, you use this value to
--   specify which health check to use. The value can be up to 64
--   characters long.
--   
--   <a>$sel:callerReference:HealthCheck'</a>,
--   <a>healthCheck_callerReference</a> - A unique string that you
--   specified when you created the health check.
--   
--   <a>$sel:healthCheckConfig:HealthCheck'</a>,
--   <a>healthCheck_healthCheckConfig</a> - A complex type that contains
--   detailed information about one health check.
--   
--   <a>$sel:healthCheckVersion:HealthCheck'</a>,
--   <a>healthCheck_healthCheckVersion</a> - The version of the health
--   check. You can optionally pass this value in a call to
--   <tt>UpdateHealthCheck</tt> to prevent overwriting another change to
--   the health check.
newHealthCheck :: Text -> Text -> HealthCheckConfig -> Natural -> HealthCheck

-- | If the health check was created by another service, the service that
--   created the health check. When a health check is created by another
--   service, you can't edit or delete it using Amazon Route 53.
healthCheck_linkedService :: Lens' HealthCheck (Maybe LinkedService)

-- | A complex type that contains information about the CloudWatch alarm
--   that Amazon Route 53 is monitoring for this health check.
healthCheck_cloudWatchAlarmConfiguration :: Lens' HealthCheck (Maybe CloudWatchAlarmConfiguration)

-- | The identifier that Amazon Route 53 assigned to the health check when
--   you created it. When you add or update a resource record set, you use
--   this value to specify which health check to use. The value can be up
--   to 64 characters long.
healthCheck_id :: Lens' HealthCheck Text

-- | A unique string that you specified when you created the health check.
healthCheck_callerReference :: Lens' HealthCheck Text

-- | A complex type that contains detailed information about one health
--   check.
healthCheck_healthCheckConfig :: Lens' HealthCheck HealthCheckConfig

-- | The version of the health check. You can optionally pass this value in
--   a call to <tt>UpdateHealthCheck</tt> to prevent overwriting another
--   change to the health check.
healthCheck_healthCheckVersion :: Lens' HealthCheck Natural

-- | A complex type that contains information about the health check.
--   
--   <i>See:</i> <a>newHealthCheckConfig</a> smart constructor.
data HealthCheckConfig
HealthCheckConfig' :: Maybe Natural -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe (NonEmpty HealthCheckRegion) -> Maybe Text -> Maybe InsufficientDataHealthStatus -> Maybe AlarmIdentifier -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Natural -> Maybe Natural -> HealthCheckType -> HealthCheckConfig

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Amazon Route 53 to change the current status of the endpoint
--   from unhealthy to healthy or vice versa. For more information, see
--   <a>How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a>
--   in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
[$sel:failureThreshold:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Natural

-- | The IPv4 or IPv6 IP address of the endpoint that you want Amazon Route
--   53 to perform health checks on. If you don't specify a value for
--   <tt>IPAddress</tt>, Route 53 sends a DNS request to resolve the domain
--   name that you specify in <tt>FullyQualifiedDomainName</tt> at the
--   interval that you specify in <tt>RequestInterval</tt>. Using an IP
--   address returned by DNS, Route 53 then checks the health of the
--   endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance will never change.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
--   
--   When the value of <tt>Type</tt> is <tt>CALCULATED</tt> or
--   <tt>CLOUDWATCH_METRIC</tt>, omit <tt>IPAddress</tt>.
[$sel:iPAddress:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | Specify whether you want Amazon Route 53 to send the value of
--   <tt>FullyQualifiedDomainName</tt> to the endpoint in the
--   <tt>client_hello</tt> message during TLS negotiation. This allows the
--   endpoint to respond to <tt>HTTPS</tt> health check requests with the
--   applicable SSL/TLS certificate.
--   
--   Some endpoints require that <tt>HTTPS</tt> requests include the host
--   name in the <tt>client_hello</tt> message. If you don't enable SNI,
--   the status of the health check will be <tt>SSL alert
--   handshake_failure</tt>. A health check can also have that status for
--   other reasons. If SNI is enabled and you're still getting the error,
--   check the SSL/TLS configuration on your endpoint and confirm that your
--   certificate is valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
[$sel:enableSNI:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Bool

-- | Stops Route 53 from performing health checks. When you disable a
--   health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
[$sel:disabled:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Bool

-- | If the value of Type is <tt>HTTP_STR_MATCH</tt> or
--   <tt>HTTPS_STR_MATCH</tt>, the string that you want Amazon Route 53 to
--   search for in the response body from the specified resource. If the
--   string appears in the response body, Route 53 considers the resource
--   healthy.
--   
--   Route 53 considers case when searching for <tt>SearchString</tt> in
--   the response body.
[$sel:searchString:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | The number of child health checks that are associated with a
--   <tt>CALCULATED</tt> health check that Amazon Route 53 must consider
--   healthy for the <tt>CALCULATED</tt> health check to be considered
--   healthy. To specify the child health checks that you want to associate
--   with a <tt>CALCULATED</tt> health check, use the
--   <a>ChildHealthChecks</a> element.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
[$sel:healthThreshold:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Natural

-- | A complex type that contains one <tt>Region</tt> element for each
--   region from which you want Amazon Route 53 health checkers to check
--   the specified endpoint.
--   
--   If you don't specify any regions, Route 53 health checkers
--   automatically performs checks from all of the regions that are listed
--   under <b>Valid Values</b>.
--   
--   If you update a health check to remove a region that has been
--   performing health checks, Route 53 will briefly continue to perform
--   checks from that region to ensure that some health checkers are always
--   checking the endpoint (for example, if you replace three regions with
--   four different regions).
[$sel:regions:HealthCheckConfig'] :: HealthCheckConfig -> Maybe (NonEmpty HealthCheckRegion)

-- | The path, if any, that you want Amazon Route 53 to request when
--   performing health checks. The path can be any value for which your
--   endpoint will return an HTTP status code of 2xx or 3xx when the
--   endpoint is healthy, for example, the file
--   /docs/route53-health-check.html. You can also include query string
--   parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
[$sel:resourcePath:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | When CloudWatch has insufficient data about the metric to determine
--   the alarm state, the status that you want Amazon Route 53 to assign to
--   the health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time that CloudWatch had sufficient data to
--   determine the alarm state. For new health checks that have no last
--   known status, the default status for the health check is healthy.</li>
--   </ul>
[$sel:insufficientDataHealthStatus:HealthCheckConfig'] :: HealthCheckConfig -> Maybe InsufficientDataHealthStatus

-- | A complex type that identifies the CloudWatch alarm that you want
--   Amazon Route 53 health checkers to use to determine whether the
--   specified health check is healthy.
[$sel:alarmIdentifier:HealthCheckConfig'] :: HealthCheckConfig -> Maybe AlarmIdentifier

-- | Specify whether you want Amazon Route 53 to measure the latency
--   between health checkers in multiple Amazon Web Services regions and
--   your endpoint, and to display CloudWatch latency graphs on the
--   __Health Checks__ page in the Route 53 console.
--   
--   You can't change the value of <tt>MeasureLatency</tt> after you create
--   a health check.
[$sel:measureLatency:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Bool

-- | Specify whether you want Amazon Route 53 to invert the status of a
--   health check, for example, to consider a health check unhealthy when
--   it otherwise would be considered healthy.
[$sel:inverted:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Bool

-- | Amazon Route 53 behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Amazon Route 53 sends health check requests to the specified IPv4 or
--   IPv6 address and passes the value of <tt>FullyQualifiedDomainName</tt>
--   in the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the Host header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <tt>FullyQualifiedDomainName:Port</tt> to the endpoint in the
--   <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the preceding cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends a DNS request to the domain that you specify for
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify for
--   <tt>RequestInterval</tt>. Using an IPv4 address that DNS returns,
--   Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   us-east-2-www.example.com), not the name of the resource record sets
--   (www.example.com).
--   
--   In this configuration, if you create a health check for which the
--   value of <tt>FullyQualifiedDomainName</tt> matches the name of the
--   resource record sets and you then associate the health check with
--   those resource record sets, health check results will be
--   unpredictable.
--   
--   In addition, if the value that you specify for <tt>Type</tt> is
--   <tt>HTTP</tt>, <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or
--   <tt>HTTPS_STR_MATCH</tt>, Route 53 passes the value of
--   <tt>FullyQualifiedDomainName</tt> in the <tt>Host</tt> header, as it
--   does when you specify a value for <tt>IPAddress</tt>. If the value of
--   <tt>Type</tt> is <tt>TCP</tt>, Route 53 doesn't pass a <tt>Host</tt>
--   header.
[$sel:fullyQualifiedDomainName:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | (CALCULATED Health Checks Only) A complex type that contains one
--   <tt>ChildHealthCheck</tt> element for each health check that you want
--   to associate with a <tt>CALCULATED</tt> health check.
[$sel:childHealthChecks:HealthCheckConfig'] :: HealthCheckConfig -> Maybe [Text]

-- | The Amazon Resource Name (ARN) for the Route 53 Application Recovery
--   Controller routing control.
--   
--   For more information about Route 53 Application Recovery Controller,
--   see <a>Route 53 Application Recovery Controller Developer Guide.</a>.
[$sel:routingControlArn:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Text

-- | The number of seconds between the time that Amazon Route 53 gets a
--   response from your endpoint and the time that it sends the next health
--   check request. Each Route 53 health checker makes requests at this
--   interval.
--   
--   You can't change the value of <tt>RequestInterval</tt> after you
--   create a health check.
--   
--   If you don't specify a value for <tt>RequestInterval</tt>, the default
--   value is <tt>30</tt> seconds.
[$sel:requestInterval:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Natural

-- | The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
[$sel:port:HealthCheckConfig'] :: HealthCheckConfig -> Maybe Natural

-- | The type of health check that you want to create, which indicates how
--   Amazon Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify
--   <tt>HTTPS</tt> for the value of <tt>Type</tt>, the endpoint must
--   support TLS v1.0 or later.</li>
--   <li><b>HTTP_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an HTTP request and
--   searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>HTTPS_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an <tt>HTTPS</tt> request
--   and searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.</li>
--   <li><b>CLOUDWATCH_METRIC</b>: The health check is associated with a
--   CloudWatch alarm. If the state of the alarm is <tt>OK</tt>, the health
--   check is considered healthy. If the state is <tt>ALARM</tt>, the
--   health check is considered unhealthy. If CloudWatch doesn't have
--   sufficient data to determine whether the state is <tt>OK</tt> or
--   <tt>ALARM</tt>, the health check status depends on the setting for
--   <tt>InsufficientDataHealthStatus</tt>: <tt>Healthy</tt>,
--   <tt>Unhealthy</tt>, or <tt>LastKnownStatus</tt>.</li>
--   <li><b>CALCULATED</b>: For health checks that monitor the status of
--   other health checks, Route 53 adds up the number of health checks that
--   Route 53 health checkers consider to be healthy and compares that
--   number with the value of <tt>HealthThreshold</tt>.</li>
--   <li><b>RECOVERY_CONTROL</b>: The health check is assocated with a
--   Route53 Application Recovery Controller routing control. If the
--   routing control state is <tt>ON</tt>, the health check is considered
--   healthy. If the state is <tt>OFF</tt>, the health check is considered
--   unhealthy.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.
[$sel:type':HealthCheckConfig'] :: HealthCheckConfig -> HealthCheckType

-- | Create a value of <a>HealthCheckConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureThreshold:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_failureThreshold</a> - The number of consecutive
--   health checks that an endpoint must pass or fail for Amazon Route 53
--   to change the current status of the endpoint from unhealthy to healthy
--   or vice versa. For more information, see <a>How Amazon Route 53
--   Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route
--   53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
--   
--   <a>$sel:iPAddress:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_iPAddress</a> - The IPv4 or IPv6 IP address of
--   the endpoint that you want Amazon Route 53 to perform health checks
--   on. If you don't specify a value for <tt>IPAddress</tt>, Route 53
--   sends a DNS request to resolve the domain name that you specify in
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify in
--   <tt>RequestInterval</tt>. Using an IP address returned by DNS, Route
--   53 then checks the health of the endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance will never change.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
--   
--   When the value of <tt>Type</tt> is <tt>CALCULATED</tt> or
--   <tt>CLOUDWATCH_METRIC</tt>, omit <tt>IPAddress</tt>.
--   
--   <a>$sel:enableSNI:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_enableSNI</a> - Specify whether you want Amazon
--   Route 53 to send the value of <tt>FullyQualifiedDomainName</tt> to the
--   endpoint in the <tt>client_hello</tt> message during TLS negotiation.
--   This allows the endpoint to respond to <tt>HTTPS</tt> health check
--   requests with the applicable SSL/TLS certificate.
--   
--   Some endpoints require that <tt>HTTPS</tt> requests include the host
--   name in the <tt>client_hello</tt> message. If you don't enable SNI,
--   the status of the health check will be <tt>SSL alert
--   handshake_failure</tt>. A health check can also have that status for
--   other reasons. If SNI is enabled and you're still getting the error,
--   check the SSL/TLS configuration on your endpoint and confirm that your
--   certificate is valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
--   
--   <a>$sel:disabled:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_disabled</a> - Stops Route 53 from performing
--   health checks. When you disable a health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
--   
--   <a>$sel:searchString:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_searchString</a> - If the value of Type is
--   <tt>HTTP_STR_MATCH</tt> or <tt>HTTPS_STR_MATCH</tt>, the string that
--   you want Amazon Route 53 to search for in the response body from the
--   specified resource. If the string appears in the response body, Route
--   53 considers the resource healthy.
--   
--   Route 53 considers case when searching for <tt>SearchString</tt> in
--   the response body.
--   
--   <a>$sel:healthThreshold:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_healthThreshold</a> - The number of child health
--   checks that are associated with a <tt>CALCULATED</tt> health check
--   that Amazon Route 53 must consider healthy for the <tt>CALCULATED</tt>
--   health check to be considered healthy. To specify the child health
--   checks that you want to associate with a <tt>CALCULATED</tt> health
--   check, use the <a>ChildHealthChecks</a> element.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
--   
--   <a>$sel:regions:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_regions</a> - A complex type that contains one
--   <tt>Region</tt> element for each region from which you want Amazon
--   Route 53 health checkers to check the specified endpoint.
--   
--   If you don't specify any regions, Route 53 health checkers
--   automatically performs checks from all of the regions that are listed
--   under <b>Valid Values</b>.
--   
--   If you update a health check to remove a region that has been
--   performing health checks, Route 53 will briefly continue to perform
--   checks from that region to ensure that some health checkers are always
--   checking the endpoint (for example, if you replace three regions with
--   four different regions).
--   
--   <a>$sel:resourcePath:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_resourcePath</a> - The path, if any, that you
--   want Amazon Route 53 to request when performing health checks. The
--   path can be any value for which your endpoint will return an HTTP
--   status code of 2xx or 3xx when the endpoint is healthy, for example,
--   the file /docs/route53-health-check.html. You can also include query
--   string parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
--   
--   <a>$sel:insufficientDataHealthStatus:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_insufficientDataHealthStatus</a> - When
--   CloudWatch has insufficient data about the metric to determine the
--   alarm state, the status that you want Amazon Route 53 to assign to the
--   health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time that CloudWatch had sufficient data to
--   determine the alarm state. For new health checks that have no last
--   known status, the default status for the health check is healthy.</li>
--   </ul>
--   
--   <a>$sel:alarmIdentifier:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_alarmIdentifier</a> - A complex type that
--   identifies the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether the specified health check is
--   healthy.
--   
--   <a>$sel:measureLatency:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_measureLatency</a> - Specify whether you want
--   Amazon Route 53 to measure the latency between health checkers in
--   multiple Amazon Web Services regions and your endpoint, and to display
--   CloudWatch latency graphs on the __Health Checks__ page in the Route
--   53 console.
--   
--   You can't change the value of <tt>MeasureLatency</tt> after you create
--   a health check.
--   
--   <a>$sel:inverted:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_inverted</a> - Specify whether you want Amazon
--   Route 53 to invert the status of a health check, for example, to
--   consider a health check unhealthy when it otherwise would be
--   considered healthy.
--   
--   <a>$sel:fullyQualifiedDomainName:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_fullyQualifiedDomainName</a> - Amazon Route 53
--   behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Amazon Route 53 sends health check requests to the specified IPv4 or
--   IPv6 address and passes the value of <tt>FullyQualifiedDomainName</tt>
--   in the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the Host header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <tt>FullyQualifiedDomainName:Port</tt> to the endpoint in the
--   <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the preceding cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends a DNS request to the domain that you specify for
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify for
--   <tt>RequestInterval</tt>. Using an IPv4 address that DNS returns,
--   Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   us-east-2-www.example.com), not the name of the resource record sets
--   (www.example.com).
--   
--   In this configuration, if you create a health check for which the
--   value of <tt>FullyQualifiedDomainName</tt> matches the name of the
--   resource record sets and you then associate the health check with
--   those resource record sets, health check results will be
--   unpredictable.
--   
--   In addition, if the value that you specify for <tt>Type</tt> is
--   <tt>HTTP</tt>, <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or
--   <tt>HTTPS_STR_MATCH</tt>, Route 53 passes the value of
--   <tt>FullyQualifiedDomainName</tt> in the <tt>Host</tt> header, as it
--   does when you specify a value for <tt>IPAddress</tt>. If the value of
--   <tt>Type</tt> is <tt>TCP</tt>, Route 53 doesn't pass a <tt>Host</tt>
--   header.
--   
--   <a>$sel:childHealthChecks:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_childHealthChecks</a> - (CALCULATED Health Checks
--   Only) A complex type that contains one <tt>ChildHealthCheck</tt>
--   element for each health check that you want to associate with a
--   <tt>CALCULATED</tt> health check.
--   
--   <a>$sel:routingControlArn:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_routingControlArn</a> - The Amazon Resource Name
--   (ARN) for the Route 53 Application Recovery Controller routing
--   control.
--   
--   For more information about Route 53 Application Recovery Controller,
--   see <a>Route 53 Application Recovery Controller Developer Guide.</a>.
--   
--   <a>$sel:requestInterval:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_requestInterval</a> - The number of seconds
--   between the time that Amazon Route 53 gets a response from your
--   endpoint and the time that it sends the next health check request.
--   Each Route 53 health checker makes requests at this interval.
--   
--   You can't change the value of <tt>RequestInterval</tt> after you
--   create a health check.
--   
--   If you don't specify a value for <tt>RequestInterval</tt>, the default
--   value is <tt>30</tt> seconds.
--   
--   <a>$sel:port:HealthCheckConfig'</a>, <a>healthCheckConfig_port</a> -
--   The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
--   
--   <a>$sel:type':HealthCheckConfig'</a>, <a>healthCheckConfig_type</a> -
--   The type of health check that you want to create, which indicates how
--   Amazon Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify
--   <tt>HTTPS</tt> for the value of <tt>Type</tt>, the endpoint must
--   support TLS v1.0 or later.</li>
--   <li><b>HTTP_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an HTTP request and
--   searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>HTTPS_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an <tt>HTTPS</tt> request
--   and searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.</li>
--   <li><b>CLOUDWATCH_METRIC</b>: The health check is associated with a
--   CloudWatch alarm. If the state of the alarm is <tt>OK</tt>, the health
--   check is considered healthy. If the state is <tt>ALARM</tt>, the
--   health check is considered unhealthy. If CloudWatch doesn't have
--   sufficient data to determine whether the state is <tt>OK</tt> or
--   <tt>ALARM</tt>, the health check status depends on the setting for
--   <tt>InsufficientDataHealthStatus</tt>: <tt>Healthy</tt>,
--   <tt>Unhealthy</tt>, or <tt>LastKnownStatus</tt>.</li>
--   <li><b>CALCULATED</b>: For health checks that monitor the status of
--   other health checks, Route 53 adds up the number of health checks that
--   Route 53 health checkers consider to be healthy and compares that
--   number with the value of <tt>HealthThreshold</tt>.</li>
--   <li><b>RECOVERY_CONTROL</b>: The health check is assocated with a
--   Route53 Application Recovery Controller routing control. If the
--   routing control state is <tt>ON</tt>, the health check is considered
--   healthy. If the state is <tt>OFF</tt>, the health check is considered
--   unhealthy.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.
newHealthCheckConfig :: HealthCheckType -> HealthCheckConfig

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Amazon Route 53 to change the current status of the endpoint
--   from unhealthy to healthy or vice versa. For more information, see
--   <a>How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a>
--   in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
healthCheckConfig_failureThreshold :: Lens' HealthCheckConfig (Maybe Natural)

-- | The IPv4 or IPv6 IP address of the endpoint that you want Amazon Route
--   53 to perform health checks on. If you don't specify a value for
--   <tt>IPAddress</tt>, Route 53 sends a DNS request to resolve the domain
--   name that you specify in <tt>FullyQualifiedDomainName</tt> at the
--   interval that you specify in <tt>RequestInterval</tt>. Using an IP
--   address returned by DNS, Route 53 then checks the health of the
--   endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance will never change.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
--   
--   When the value of <tt>Type</tt> is <tt>CALCULATED</tt> or
--   <tt>CLOUDWATCH_METRIC</tt>, omit <tt>IPAddress</tt>.
healthCheckConfig_iPAddress :: Lens' HealthCheckConfig (Maybe Text)

-- | Specify whether you want Amazon Route 53 to send the value of
--   <tt>FullyQualifiedDomainName</tt> to the endpoint in the
--   <tt>client_hello</tt> message during TLS negotiation. This allows the
--   endpoint to respond to <tt>HTTPS</tt> health check requests with the
--   applicable SSL/TLS certificate.
--   
--   Some endpoints require that <tt>HTTPS</tt> requests include the host
--   name in the <tt>client_hello</tt> message. If you don't enable SNI,
--   the status of the health check will be <tt>SSL alert
--   handshake_failure</tt>. A health check can also have that status for
--   other reasons. If SNI is enabled and you're still getting the error,
--   check the SSL/TLS configuration on your endpoint and confirm that your
--   certificate is valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
healthCheckConfig_enableSNI :: Lens' HealthCheckConfig (Maybe Bool)

-- | Stops Route 53 from performing health checks. When you disable a
--   health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
healthCheckConfig_disabled :: Lens' HealthCheckConfig (Maybe Bool)

-- | If the value of Type is <tt>HTTP_STR_MATCH</tt> or
--   <tt>HTTPS_STR_MATCH</tt>, the string that you want Amazon Route 53 to
--   search for in the response body from the specified resource. If the
--   string appears in the response body, Route 53 considers the resource
--   healthy.
--   
--   Route 53 considers case when searching for <tt>SearchString</tt> in
--   the response body.
healthCheckConfig_searchString :: Lens' HealthCheckConfig (Maybe Text)

-- | The number of child health checks that are associated with a
--   <tt>CALCULATED</tt> health check that Amazon Route 53 must consider
--   healthy for the <tt>CALCULATED</tt> health check to be considered
--   healthy. To specify the child health checks that you want to associate
--   with a <tt>CALCULATED</tt> health check, use the
--   <a>ChildHealthChecks</a> element.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
healthCheckConfig_healthThreshold :: Lens' HealthCheckConfig (Maybe Natural)

-- | A complex type that contains one <tt>Region</tt> element for each
--   region from which you want Amazon Route 53 health checkers to check
--   the specified endpoint.
--   
--   If you don't specify any regions, Route 53 health checkers
--   automatically performs checks from all of the regions that are listed
--   under <b>Valid Values</b>.
--   
--   If you update a health check to remove a region that has been
--   performing health checks, Route 53 will briefly continue to perform
--   checks from that region to ensure that some health checkers are always
--   checking the endpoint (for example, if you replace three regions with
--   four different regions).
healthCheckConfig_regions :: Lens' HealthCheckConfig (Maybe (NonEmpty HealthCheckRegion))

-- | The path, if any, that you want Amazon Route 53 to request when
--   performing health checks. The path can be any value for which your
--   endpoint will return an HTTP status code of 2xx or 3xx when the
--   endpoint is healthy, for example, the file
--   /docs/route53-health-check.html. You can also include query string
--   parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
healthCheckConfig_resourcePath :: Lens' HealthCheckConfig (Maybe Text)

-- | When CloudWatch has insufficient data about the metric to determine
--   the alarm state, the status that you want Amazon Route 53 to assign to
--   the health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time that CloudWatch had sufficient data to
--   determine the alarm state. For new health checks that have no last
--   known status, the default status for the health check is healthy.</li>
--   </ul>
healthCheckConfig_insufficientDataHealthStatus :: Lens' HealthCheckConfig (Maybe InsufficientDataHealthStatus)

-- | A complex type that identifies the CloudWatch alarm that you want
--   Amazon Route 53 health checkers to use to determine whether the
--   specified health check is healthy.
healthCheckConfig_alarmIdentifier :: Lens' HealthCheckConfig (Maybe AlarmIdentifier)

-- | Specify whether you want Amazon Route 53 to measure the latency
--   between health checkers in multiple Amazon Web Services regions and
--   your endpoint, and to display CloudWatch latency graphs on the
--   __Health Checks__ page in the Route 53 console.
--   
--   You can't change the value of <tt>MeasureLatency</tt> after you create
--   a health check.
healthCheckConfig_measureLatency :: Lens' HealthCheckConfig (Maybe Bool)

-- | Specify whether you want Amazon Route 53 to invert the status of a
--   health check, for example, to consider a health check unhealthy when
--   it otherwise would be considered healthy.
healthCheckConfig_inverted :: Lens' HealthCheckConfig (Maybe Bool)

-- | Amazon Route 53 behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Amazon Route 53 sends health check requests to the specified IPv4 or
--   IPv6 address and passes the value of <tt>FullyQualifiedDomainName</tt>
--   in the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the Host header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <tt>FullyQualifiedDomainName:Port</tt> to the endpoint in the
--   <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the preceding cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends a DNS request to the domain that you specify for
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify for
--   <tt>RequestInterval</tt>. Using an IPv4 address that DNS returns,
--   Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   us-east-2-www.example.com), not the name of the resource record sets
--   (www.example.com).
--   
--   In this configuration, if you create a health check for which the
--   value of <tt>FullyQualifiedDomainName</tt> matches the name of the
--   resource record sets and you then associate the health check with
--   those resource record sets, health check results will be
--   unpredictable.
--   
--   In addition, if the value that you specify for <tt>Type</tt> is
--   <tt>HTTP</tt>, <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or
--   <tt>HTTPS_STR_MATCH</tt>, Route 53 passes the value of
--   <tt>FullyQualifiedDomainName</tt> in the <tt>Host</tt> header, as it
--   does when you specify a value for <tt>IPAddress</tt>. If the value of
--   <tt>Type</tt> is <tt>TCP</tt>, Route 53 doesn't pass a <tt>Host</tt>
--   header.
healthCheckConfig_fullyQualifiedDomainName :: Lens' HealthCheckConfig (Maybe Text)

-- | (CALCULATED Health Checks Only) A complex type that contains one
--   <tt>ChildHealthCheck</tt> element for each health check that you want
--   to associate with a <tt>CALCULATED</tt> health check.
healthCheckConfig_childHealthChecks :: Lens' HealthCheckConfig (Maybe [Text])

-- | The Amazon Resource Name (ARN) for the Route 53 Application Recovery
--   Controller routing control.
--   
--   For more information about Route 53 Application Recovery Controller,
--   see <a>Route 53 Application Recovery Controller Developer Guide.</a>.
healthCheckConfig_routingControlArn :: Lens' HealthCheckConfig (Maybe Text)

-- | The number of seconds between the time that Amazon Route 53 gets a
--   response from your endpoint and the time that it sends the next health
--   check request. Each Route 53 health checker makes requests at this
--   interval.
--   
--   You can't change the value of <tt>RequestInterval</tt> after you
--   create a health check.
--   
--   If you don't specify a value for <tt>RequestInterval</tt>, the default
--   value is <tt>30</tt> seconds.
healthCheckConfig_requestInterval :: Lens' HealthCheckConfig (Maybe Natural)

-- | The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
healthCheckConfig_port :: Lens' HealthCheckConfig (Maybe Natural)

-- | The type of health check that you want to create, which indicates how
--   Amazon Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify
--   <tt>HTTPS</tt> for the value of <tt>Type</tt>, the endpoint must
--   support TLS v1.0 or later.</li>
--   <li><b>HTTP_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an HTTP request and
--   searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>HTTPS_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an <tt>HTTPS</tt> request
--   and searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.</li>
--   <li><b>CLOUDWATCH_METRIC</b>: The health check is associated with a
--   CloudWatch alarm. If the state of the alarm is <tt>OK</tt>, the health
--   check is considered healthy. If the state is <tt>ALARM</tt>, the
--   health check is considered unhealthy. If CloudWatch doesn't have
--   sufficient data to determine whether the state is <tt>OK</tt> or
--   <tt>ALARM</tt>, the health check status depends on the setting for
--   <tt>InsufficientDataHealthStatus</tt>: <tt>Healthy</tt>,
--   <tt>Unhealthy</tt>, or <tt>LastKnownStatus</tt>.</li>
--   <li><b>CALCULATED</b>: For health checks that monitor the status of
--   other health checks, Route 53 adds up the number of health checks that
--   Route 53 health checkers consider to be healthy and compares that
--   number with the value of <tt>HealthThreshold</tt>.</li>
--   <li><b>RECOVERY_CONTROL</b>: The health check is assocated with a
--   Route53 Application Recovery Controller routing control. If the
--   routing control state is <tt>ON</tt>, the health check is considered
--   healthy. If the state is <tt>OFF</tt>, the health check is considered
--   unhealthy.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.
healthCheckConfig_type :: Lens' HealthCheckConfig HealthCheckType

-- | A complex type that contains the last failure reason as reported by
--   one Amazon Route 53 health checker.
--   
--   <i>See:</i> <a>newHealthCheckObservation</a> smart constructor.
data HealthCheckObservation
HealthCheckObservation' :: Maybe Text -> Maybe StatusReport -> Maybe HealthCheckRegion -> HealthCheckObservation

-- | The IP address of the Amazon Route 53 health checker that provided the
--   failure reason in <tt>StatusReport</tt>.
[$sel:iPAddress:HealthCheckObservation'] :: HealthCheckObservation -> Maybe Text

-- | A complex type that contains the last failure reason as reported by
--   one Amazon Route 53 health checker and the time of the failed health
--   check.
[$sel:statusReport:HealthCheckObservation'] :: HealthCheckObservation -> Maybe StatusReport

-- | The region of the Amazon Route 53 health checker that provided the
--   status in <tt>StatusReport</tt>.
[$sel:region:HealthCheckObservation'] :: HealthCheckObservation -> Maybe HealthCheckRegion

-- | Create a value of <a>HealthCheckObservation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iPAddress:HealthCheckObservation'</a>,
--   <a>healthCheckObservation_iPAddress</a> - The IP address of the Amazon
--   Route 53 health checker that provided the failure reason in
--   <tt>StatusReport</tt>.
--   
--   <a>$sel:statusReport:HealthCheckObservation'</a>,
--   <a>healthCheckObservation_statusReport</a> - A complex type that
--   contains the last failure reason as reported by one Amazon Route 53
--   health checker and the time of the failed health check.
--   
--   <a>$sel:region:HealthCheckObservation'</a>,
--   <a>healthCheckObservation_region</a> - The region of the Amazon Route
--   53 health checker that provided the status in <tt>StatusReport</tt>.
newHealthCheckObservation :: HealthCheckObservation

-- | The IP address of the Amazon Route 53 health checker that provided the
--   failure reason in <tt>StatusReport</tt>.
healthCheckObservation_iPAddress :: Lens' HealthCheckObservation (Maybe Text)

-- | A complex type that contains the last failure reason as reported by
--   one Amazon Route 53 health checker and the time of the failed health
--   check.
healthCheckObservation_statusReport :: Lens' HealthCheckObservation (Maybe StatusReport)

-- | The region of the Amazon Route 53 health checker that provided the
--   status in <tt>StatusReport</tt>.
healthCheckObservation_region :: Lens' HealthCheckObservation (Maybe HealthCheckRegion)

-- | A complex type that contains general information about the hosted
--   zone.
--   
--   <i>See:</i> <a>newHostedZone</a> smart constructor.
data HostedZone
HostedZone' :: Maybe LinkedService -> Maybe HostedZoneConfig -> Maybe Integer -> ResourceId -> Text -> Text -> HostedZone

-- | If the hosted zone was created by another service, the service that
--   created the hosted zone. When a hosted zone is created by another
--   service, you can't edit or delete it using Route 53.
[$sel:linkedService:HostedZone'] :: HostedZone -> Maybe LinkedService

-- | A complex type that includes the <tt>Comment</tt> and
--   <tt>PrivateZone</tt> elements. If you omitted the
--   <tt>HostedZoneConfig</tt> and <tt>Comment</tt> elements from the
--   request, the <tt>Config</tt> and <tt>Comment</tt> elements don't
--   appear in the response.
[$sel:config:HostedZone'] :: HostedZone -> Maybe HostedZoneConfig

-- | The number of resource record sets in the hosted zone.
[$sel:resourceRecordSetCount:HostedZone'] :: HostedZone -> Maybe Integer

-- | The ID that Amazon Route 53 assigned to the hosted zone when you
--   created it.
[$sel:id:HostedZone'] :: HostedZone -> ResourceId

-- | The name of the domain. For public hosted zones, this is the name that
--   you have registered with your DNS registrar.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>CreateHostedZone</a>.
[$sel:name:HostedZone'] :: HostedZone -> Text

-- | The value that you specified for <tt>CallerReference</tt> when you
--   created the hosted zone.
[$sel:callerReference:HostedZone'] :: HostedZone -> Text

-- | Create a value of <a>HostedZone</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkedService:HostedZone'</a>, <a>hostedZone_linkedService</a>
--   - If the hosted zone was created by another service, the service that
--   created the hosted zone. When a hosted zone is created by another
--   service, you can't edit or delete it using Route 53.
--   
--   <a>$sel:config:HostedZone'</a>, <a>hostedZone_config</a> - A complex
--   type that includes the <tt>Comment</tt> and <tt>PrivateZone</tt>
--   elements. If you omitted the <tt>HostedZoneConfig</tt> and
--   <tt>Comment</tt> elements from the request, the <tt>Config</tt> and
--   <tt>Comment</tt> elements don't appear in the response.
--   
--   <a>$sel:resourceRecordSetCount:HostedZone'</a>,
--   <a>hostedZone_resourceRecordSetCount</a> - The number of resource
--   record sets in the hosted zone.
--   
--   <a>$sel:id:HostedZone'</a>, <a>hostedZone_id</a> - The ID that Amazon
--   Route 53 assigned to the hosted zone when you created it.
--   
--   <a>$sel:name:HostedZone'</a>, <a>hostedZone_name</a> - The name of the
--   domain. For public hosted zones, this is the name that you have
--   registered with your DNS registrar.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>CreateHostedZone</a>.
--   
--   <a>$sel:callerReference:HostedZone'</a>,
--   <a>hostedZone_callerReference</a> - The value that you specified for
--   <tt>CallerReference</tt> when you created the hosted zone.
newHostedZone :: ResourceId -> Text -> Text -> HostedZone

-- | If the hosted zone was created by another service, the service that
--   created the hosted zone. When a hosted zone is created by another
--   service, you can't edit or delete it using Route 53.
hostedZone_linkedService :: Lens' HostedZone (Maybe LinkedService)

-- | A complex type that includes the <tt>Comment</tt> and
--   <tt>PrivateZone</tt> elements. If you omitted the
--   <tt>HostedZoneConfig</tt> and <tt>Comment</tt> elements from the
--   request, the <tt>Config</tt> and <tt>Comment</tt> elements don't
--   appear in the response.
hostedZone_config :: Lens' HostedZone (Maybe HostedZoneConfig)

-- | The number of resource record sets in the hosted zone.
hostedZone_resourceRecordSetCount :: Lens' HostedZone (Maybe Integer)

-- | The ID that Amazon Route 53 assigned to the hosted zone when you
--   created it.
hostedZone_id :: Lens' HostedZone ResourceId

-- | The name of the domain. For public hosted zones, this is the name that
--   you have registered with your DNS registrar.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>CreateHostedZone</a>.
hostedZone_name :: Lens' HostedZone Text

-- | The value that you specified for <tt>CallerReference</tt> when you
--   created the hosted zone.
hostedZone_callerReference :: Lens' HostedZone Text

-- | A complex type that contains an optional comment about your hosted
--   zone. If you don't want to specify a comment, omit both the
--   <tt>HostedZoneConfig</tt> and <tt>Comment</tt> elements.
--   
--   <i>See:</i> <a>newHostedZoneConfig</a> smart constructor.
data HostedZoneConfig
HostedZoneConfig' :: Maybe Bool -> Maybe Text -> HostedZoneConfig

-- | A value that indicates whether this is a private hosted zone.
[$sel:privateZone:HostedZoneConfig'] :: HostedZoneConfig -> Maybe Bool

-- | Any comments that you want to include about the hosted zone.
[$sel:comment:HostedZoneConfig'] :: HostedZoneConfig -> Maybe Text

-- | Create a value of <a>HostedZoneConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:privateZone:HostedZoneConfig'</a>,
--   <a>hostedZoneConfig_privateZone</a> - A value that indicates whether
--   this is a private hosted zone.
--   
--   <a>$sel:comment:HostedZoneConfig'</a>, <a>hostedZoneConfig_comment</a>
--   - Any comments that you want to include about the hosted zone.
newHostedZoneConfig :: HostedZoneConfig

-- | A value that indicates whether this is a private hosted zone.
hostedZoneConfig_privateZone :: Lens' HostedZoneConfig (Maybe Bool)

-- | Any comments that you want to include about the hosted zone.
hostedZoneConfig_comment :: Lens' HostedZoneConfig (Maybe Text)

-- | A complex type that contains the type of limit that you specified in
--   the request and the current value for that limit.
--   
--   <i>See:</i> <a>newHostedZoneLimit</a> smart constructor.
data HostedZoneLimit
HostedZoneLimit' :: HostedZoneLimitType -> Natural -> HostedZoneLimit

-- | The limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
[$sel:type':HostedZoneLimit'] :: HostedZoneLimit -> HostedZoneLimitType

-- | The current value for the limit that is specified by <tt>Type</tt>.
[$sel:value:HostedZoneLimit'] :: HostedZoneLimit -> Natural

-- | Create a value of <a>HostedZoneLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':HostedZoneLimit'</a>, <a>hostedZoneLimit_type</a> - The
--   limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
--   
--   <a>$sel:value:HostedZoneLimit'</a>, <a>hostedZoneLimit_value</a> - The
--   current value for the limit that is specified by <tt>Type</tt>.
newHostedZoneLimit :: HostedZoneLimitType -> Natural -> HostedZoneLimit

-- | The limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
hostedZoneLimit_type :: Lens' HostedZoneLimit HostedZoneLimitType

-- | The current value for the limit that is specified by <tt>Type</tt>.
hostedZoneLimit_value :: Lens' HostedZoneLimit Natural

-- | A complex type that identifies a hosted zone that a specified Amazon
--   VPC is associated with and the owner of the hosted zone. If there is a
--   value for <tt>OwningAccount</tt>, there is no value for
--   <tt>OwningService</tt>, and vice versa.
--   
--   <i>See:</i> <a>newHostedZoneOwner</a> smart constructor.
data HostedZoneOwner
HostedZoneOwner' :: Maybe Text -> Maybe Text -> HostedZoneOwner

-- | If the hosted zone was created by an Amazon Web Services account, or
--   was created by an Amazon Web Services service that creates hosted
--   zones using the current account, <tt>OwningAccount</tt> contains the
--   account ID of that account. For example, when you use Cloud Map to
--   create a hosted zone, Cloud Map creates the hosted zone using the
--   current Amazon Web Services account.
[$sel:owningAccount:HostedZoneOwner'] :: HostedZoneOwner -> Maybe Text

-- | If an Amazon Web Services service uses its own account to create a
--   hosted zone and associate the specified VPC with that hosted zone,
--   <tt>OwningService</tt> contains an abbreviation that identifies the
--   service. For example, if Amazon Elastic File System (Amazon EFS)
--   created a hosted zone and associated a VPC with the hosted zone, the
--   value of <tt>OwningService</tt> is <tt>efs.amazonaws.com</tt>.
[$sel:owningService:HostedZoneOwner'] :: HostedZoneOwner -> Maybe Text

-- | Create a value of <a>HostedZoneOwner</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:owningAccount:HostedZoneOwner'</a>,
--   <a>hostedZoneOwner_owningAccount</a> - If the hosted zone was created
--   by an Amazon Web Services account, or was created by an Amazon Web
--   Services service that creates hosted zones using the current account,
--   <tt>OwningAccount</tt> contains the account ID of that account. For
--   example, when you use Cloud Map to create a hosted zone, Cloud Map
--   creates the hosted zone using the current Amazon Web Services account.
--   
--   <a>$sel:owningService:HostedZoneOwner'</a>,
--   <a>hostedZoneOwner_owningService</a> - If an Amazon Web Services
--   service uses its own account to create a hosted zone and associate the
--   specified VPC with that hosted zone, <tt>OwningService</tt> contains
--   an abbreviation that identifies the service. For example, if Amazon
--   Elastic File System (Amazon EFS) created a hosted zone and associated
--   a VPC with the hosted zone, the value of <tt>OwningService</tt> is
--   <tt>efs.amazonaws.com</tt>.
newHostedZoneOwner :: HostedZoneOwner

-- | If the hosted zone was created by an Amazon Web Services account, or
--   was created by an Amazon Web Services service that creates hosted
--   zones using the current account, <tt>OwningAccount</tt> contains the
--   account ID of that account. For example, when you use Cloud Map to
--   create a hosted zone, Cloud Map creates the hosted zone using the
--   current Amazon Web Services account.
hostedZoneOwner_owningAccount :: Lens' HostedZoneOwner (Maybe Text)

-- | If an Amazon Web Services service uses its own account to create a
--   hosted zone and associate the specified VPC with that hosted zone,
--   <tt>OwningService</tt> contains an abbreviation that identifies the
--   service. For example, if Amazon Elastic File System (Amazon EFS)
--   created a hosted zone and associated a VPC with the hosted zone, the
--   value of <tt>OwningService</tt> is <tt>efs.amazonaws.com</tt>.
hostedZoneOwner_owningService :: Lens' HostedZoneOwner (Maybe Text)

-- | In the response to a <tt>ListHostedZonesByVPC</tt> request, the
--   <tt>HostedZoneSummaries</tt> element contains one
--   <tt>HostedZoneSummary</tt> element for each hosted zone that the
--   specified Amazon VPC is associated with. Each
--   <tt>HostedZoneSummary</tt> element contains the hosted zone name and
--   ID, and information about who owns the hosted zone.
--   
--   <i>See:</i> <a>newHostedZoneSummary</a> smart constructor.
data HostedZoneSummary
HostedZoneSummary' :: ResourceId -> Text -> HostedZoneOwner -> HostedZoneSummary

-- | The Route 53 hosted zone ID of a private hosted zone that the
--   specified VPC is associated with.
[$sel:hostedZoneId:HostedZoneSummary'] :: HostedZoneSummary -> ResourceId

-- | The name of the private hosted zone, such as <tt>example.com</tt>.
[$sel:name:HostedZoneSummary'] :: HostedZoneSummary -> Text

-- | The owner of a private hosted zone that the specified VPC is
--   associated with. The owner can be either an Amazon Web Services
--   account or an Amazon Web Services service.
[$sel:owner:HostedZoneSummary'] :: HostedZoneSummary -> HostedZoneOwner

-- | Create a value of <a>HostedZoneSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:HostedZoneSummary'</a>,
--   <a>hostedZoneSummary_hostedZoneId</a> - The Route 53 hosted zone ID of
--   a private hosted zone that the specified VPC is associated with.
--   
--   <a>$sel:name:HostedZoneSummary'</a>, <a>hostedZoneSummary_name</a> -
--   The name of the private hosted zone, such as <tt>example.com</tt>.
--   
--   <a>$sel:owner:HostedZoneSummary'</a>, <a>hostedZoneSummary_owner</a> -
--   The owner of a private hosted zone that the specified VPC is
--   associated with. The owner can be either an Amazon Web Services
--   account or an Amazon Web Services service.
newHostedZoneSummary :: ResourceId -> Text -> HostedZoneOwner -> HostedZoneSummary

-- | The Route 53 hosted zone ID of a private hosted zone that the
--   specified VPC is associated with.
hostedZoneSummary_hostedZoneId :: Lens' HostedZoneSummary ResourceId

-- | The name of the private hosted zone, such as <tt>example.com</tt>.
hostedZoneSummary_name :: Lens' HostedZoneSummary Text

-- | The owner of a private hosted zone that the specified VPC is
--   associated with. The owner can be either an Amazon Web Services
--   account or an Amazon Web Services service.
hostedZoneSummary_owner :: Lens' HostedZoneSummary HostedZoneOwner

-- | A key-signing key (KSK) is a complex type that represents a
--   public/private key pair. The private key is used to generate a digital
--   signature for the zone signing key (ZSK). The public key is stored in
--   the DNS and is used to authenticate the ZSK. A KSK is always
--   associated with a hosted zone; it cannot exist by itself.
--   
--   <i>See:</i> <a>newKeySigningKey</a> smart constructor.
data KeySigningKey
KeySigningKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ISO8601 -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> KeySigningKey

-- | A string that represents the current key-signing key (KSK) status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The KSK is being used for signing.</li>
--   <li><i>INACTIVE</i> The KSK is not being used for signing.</li>
--   <li><i>DELETING</i> The KSK is in the process of being deleted.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with the KSK that requires
--   you to take action to resolve. For example, the customer managed
--   customer master key (CMK) might have been deleted, or the permissions
--   for the customer managed CMK might have been changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including actions
--   that involve this KSK, you must correct the problem. For example, you
--   may need to activate or deactivate the KSK.</li>
--   </ul>
[$sel:status:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | A string used to represent the signing algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.1</a>.
[$sel:signingAlgorithmMnemonic:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | A string used to represent the delegation signer digest algorithm.
--   This value must follow the guidelines provided by <a>RFC-8624 Section
--   3.3</a>.
[$sel:digestAlgorithmMnemonic:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | The last time that the key-signing key (KSK) was changed.
[$sel:lastModifiedDate:KeySigningKey'] :: KeySigningKey -> Maybe ISO8601

-- | An integer used to identify the DNSSEC record for the domain name. The
--   process used to calculate the value is described in <a>RFC-4034
--   Appendix B</a>.
[$sel:keyTag:KeySigningKey'] :: KeySigningKey -> Maybe Natural

-- | A string that represents a DNSKEY record.
[$sel:dNSKEYRecord:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | The public key, represented as a Base64 encoding, as required by
--   <a>RFC-4034 Page 5</a>.
[$sel:publicKey:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | An integer used to represent the signing algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.1</a>.
[$sel:signingAlgorithmType:KeySigningKey'] :: KeySigningKey -> Maybe Int

-- | The date when the key-signing key (KSK) was created.
[$sel:createdDate:KeySigningKey'] :: KeySigningKey -> Maybe ISO8601

-- | An integer that specifies how the key is used. For key-signing key
--   (KSK), this value is always 257.
[$sel:flag:KeySigningKey'] :: KeySigningKey -> Maybe Int

-- | An integer used to represent the delegation signer digest algorithm.
--   This value must follow the guidelines provided by <a>RFC-8624 Section
--   3.3</a>.
[$sel:digestAlgorithmType:KeySigningKey'] :: KeySigningKey -> Maybe Int

-- | The status message provided for the following key-signing key (KSK)
--   statuses: <tt>ACTION_NEEDED</tt> or <tt>INTERNAL_FAILURE</tt>. The
--   status message includes information about what the problem might be
--   and steps that you can take to correct the issue.
[$sel:statusMessage:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
[$sel:name:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | A string that represents a delegation signer (DS) record.
[$sel:dSRecord:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | The Amazon resource name (ARN) used to identify the customer managed
--   customer master key (CMK) in Key Management Service (KMS). The
--   <tt>KmsArn</tt> must be unique for each key-signing key (KSK) in a
--   single hosted zone.
--   
--   You must configure the CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with the customer managed CMK in
--   KMS, see <a>Key Management Service concepts</a>.
[$sel:kmsArn:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | A cryptographic digest of a DNSKEY resource record (RR). DNSKEY
--   records are used to publish the public key that resolvers can use to
--   verify DNSSEC signatures that are used to secure certain kinds of
--   information provided by the DNS system.
[$sel:digestValue:KeySigningKey'] :: KeySigningKey -> Maybe Text

-- | Create a value of <a>KeySigningKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:KeySigningKey'</a>, <a>keySigningKey_status</a> - A
--   string that represents the current key-signing key (KSK) status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The KSK is being used for signing.</li>
--   <li><i>INACTIVE</i> The KSK is not being used for signing.</li>
--   <li><i>DELETING</i> The KSK is in the process of being deleted.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with the KSK that requires
--   you to take action to resolve. For example, the customer managed
--   customer master key (CMK) might have been deleted, or the permissions
--   for the customer managed CMK might have been changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including actions
--   that involve this KSK, you must correct the problem. For example, you
--   may need to activate or deactivate the KSK.</li>
--   </ul>
--   
--   <a>$sel:signingAlgorithmMnemonic:KeySigningKey'</a>,
--   <a>keySigningKey_signingAlgorithmMnemonic</a> - A string used to
--   represent the signing algorithm. This value must follow the guidelines
--   provided by <a>RFC-8624 Section 3.1</a>.
--   
--   <a>$sel:digestAlgorithmMnemonic:KeySigningKey'</a>,
--   <a>keySigningKey_digestAlgorithmMnemonic</a> - A string used to
--   represent the delegation signer digest algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.3</a>.
--   
--   <a>$sel:lastModifiedDate:KeySigningKey'</a>,
--   <a>keySigningKey_lastModifiedDate</a> - The last time that the
--   key-signing key (KSK) was changed.
--   
--   <a>$sel:keyTag:KeySigningKey'</a>, <a>keySigningKey_keyTag</a> - An
--   integer used to identify the DNSSEC record for the domain name. The
--   process used to calculate the value is described in <a>RFC-4034
--   Appendix B</a>.
--   
--   <a>$sel:dNSKEYRecord:KeySigningKey'</a>,
--   <a>keySigningKey_dNSKEYRecord</a> - A string that represents a DNSKEY
--   record.
--   
--   <a>$sel:publicKey:KeySigningKey'</a>, <a>keySigningKey_publicKey</a> -
--   The public key, represented as a Base64 encoding, as required by
--   <a>RFC-4034 Page 5</a>.
--   
--   <a>$sel:signingAlgorithmType:KeySigningKey'</a>,
--   <a>keySigningKey_signingAlgorithmType</a> - An integer used to
--   represent the signing algorithm. This value must follow the guidelines
--   provided by <a>RFC-8624 Section 3.1</a>.
--   
--   <a>$sel:createdDate:KeySigningKey'</a>,
--   <a>keySigningKey_createdDate</a> - The date when the key-signing key
--   (KSK) was created.
--   
--   <a>$sel:flag:KeySigningKey'</a>, <a>keySigningKey_flag</a> - An
--   integer that specifies how the key is used. For key-signing key (KSK),
--   this value is always 257.
--   
--   <a>$sel:digestAlgorithmType:KeySigningKey'</a>,
--   <a>keySigningKey_digestAlgorithmType</a> - An integer used to
--   represent the delegation signer digest algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.3</a>.
--   
--   <a>$sel:statusMessage:KeySigningKey'</a>,
--   <a>keySigningKey_statusMessage</a> - The status message provided for
--   the following key-signing key (KSK) statuses: <tt>ACTION_NEEDED</tt>
--   or <tt>INTERNAL_FAILURE</tt>. The status message includes information
--   about what the problem might be and steps that you can take to correct
--   the issue.
--   
--   <a>$sel:name:KeySigningKey'</a>, <a>keySigningKey_name</a> - A string
--   used to identify a key-signing key (KSK). <tt>Name</tt> can include
--   numbers, letters, and underscores (_). <tt>Name</tt> must be unique
--   for each key-signing key in the same hosted zone.
--   
--   <a>$sel:dSRecord:KeySigningKey'</a>, <a>keySigningKey_dSRecord</a> - A
--   string that represents a delegation signer (DS) record.
--   
--   <a>$sel:kmsArn:KeySigningKey'</a>, <a>keySigningKey_kmsArn</a> - The
--   Amazon resource name (ARN) used to identify the customer managed
--   customer master key (CMK) in Key Management Service (KMS). The
--   <tt>KmsArn</tt> must be unique for each key-signing key (KSK) in a
--   single hosted zone.
--   
--   You must configure the CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with the customer managed CMK in
--   KMS, see <a>Key Management Service concepts</a>.
--   
--   <a>$sel:digestValue:KeySigningKey'</a>,
--   <a>keySigningKey_digestValue</a> - A cryptographic digest of a DNSKEY
--   resource record (RR). DNSKEY records are used to publish the public
--   key that resolvers can use to verify DNSSEC signatures that are used
--   to secure certain kinds of information provided by the DNS system.
newKeySigningKey :: KeySigningKey

-- | A string that represents the current key-signing key (KSK) status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The KSK is being used for signing.</li>
--   <li><i>INACTIVE</i> The KSK is not being used for signing.</li>
--   <li><i>DELETING</i> The KSK is in the process of being deleted.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with the KSK that requires
--   you to take action to resolve. For example, the customer managed
--   customer master key (CMK) might have been deleted, or the permissions
--   for the customer managed CMK might have been changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including actions
--   that involve this KSK, you must correct the problem. For example, you
--   may need to activate or deactivate the KSK.</li>
--   </ul>
keySigningKey_status :: Lens' KeySigningKey (Maybe Text)

-- | A string used to represent the signing algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.1</a>.
keySigningKey_signingAlgorithmMnemonic :: Lens' KeySigningKey (Maybe Text)

-- | A string used to represent the delegation signer digest algorithm.
--   This value must follow the guidelines provided by <a>RFC-8624 Section
--   3.3</a>.
keySigningKey_digestAlgorithmMnemonic :: Lens' KeySigningKey (Maybe Text)

-- | The last time that the key-signing key (KSK) was changed.
keySigningKey_lastModifiedDate :: Lens' KeySigningKey (Maybe UTCTime)

-- | An integer used to identify the DNSSEC record for the domain name. The
--   process used to calculate the value is described in <a>RFC-4034
--   Appendix B</a>.
keySigningKey_keyTag :: Lens' KeySigningKey (Maybe Natural)

-- | A string that represents a DNSKEY record.
keySigningKey_dNSKEYRecord :: Lens' KeySigningKey (Maybe Text)

-- | The public key, represented as a Base64 encoding, as required by
--   <a>RFC-4034 Page 5</a>.
keySigningKey_publicKey :: Lens' KeySigningKey (Maybe Text)

-- | An integer used to represent the signing algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.1</a>.
keySigningKey_signingAlgorithmType :: Lens' KeySigningKey (Maybe Int)

-- | The date when the key-signing key (KSK) was created.
keySigningKey_createdDate :: Lens' KeySigningKey (Maybe UTCTime)

-- | An integer that specifies how the key is used. For key-signing key
--   (KSK), this value is always 257.
keySigningKey_flag :: Lens' KeySigningKey (Maybe Int)

-- | An integer used to represent the delegation signer digest algorithm.
--   This value must follow the guidelines provided by <a>RFC-8624 Section
--   3.3</a>.
keySigningKey_digestAlgorithmType :: Lens' KeySigningKey (Maybe Int)

-- | The status message provided for the following key-signing key (KSK)
--   statuses: <tt>ACTION_NEEDED</tt> or <tt>INTERNAL_FAILURE</tt>. The
--   status message includes information about what the problem might be
--   and steps that you can take to correct the issue.
keySigningKey_statusMessage :: Lens' KeySigningKey (Maybe Text)

-- | A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
keySigningKey_name :: Lens' KeySigningKey (Maybe Text)

-- | A string that represents a delegation signer (DS) record.
keySigningKey_dSRecord :: Lens' KeySigningKey (Maybe Text)

-- | The Amazon resource name (ARN) used to identify the customer managed
--   customer master key (CMK) in Key Management Service (KMS). The
--   <tt>KmsArn</tt> must be unique for each key-signing key (KSK) in a
--   single hosted zone.
--   
--   You must configure the CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with the customer managed CMK in
--   KMS, see <a>Key Management Service concepts</a>.
keySigningKey_kmsArn :: Lens' KeySigningKey (Maybe Text)

-- | A cryptographic digest of a DNSKEY resource record (RR). DNSKEY
--   records are used to publish the public key that resolvers can use to
--   verify DNSSEC signatures that are used to secure certain kinds of
--   information provided by the DNS system.
keySigningKey_digestValue :: Lens' KeySigningKey (Maybe Text)

-- | If a health check or hosted zone was created by another service,
--   <tt>LinkedService</tt> is a complex type that describes the service
--   that created the resource. When a resource is created by another
--   service, you can't edit or delete it using Amazon Route 53.
--   
--   <i>See:</i> <a>newLinkedService</a> smart constructor.
data LinkedService
LinkedService' :: Maybe Text -> Maybe Text -> LinkedService

-- | If the health check or hosted zone was created by another service, the
--   service that created the resource. When a resource is created by
--   another service, you can't edit or delete it using Amazon Route 53.
[$sel:servicePrincipal:LinkedService'] :: LinkedService -> Maybe Text

-- | If the health check or hosted zone was created by another service, an
--   optional description that can be provided by the other service. When a
--   resource is created by another service, you can't edit or delete it
--   using Amazon Route 53.
[$sel:description:LinkedService'] :: LinkedService -> Maybe Text

-- | Create a value of <a>LinkedService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:servicePrincipal:LinkedService'</a>,
--   <a>linkedService_servicePrincipal</a> - If the health check or hosted
--   zone was created by another service, the service that created the
--   resource. When a resource is created by another service, you can't
--   edit or delete it using Amazon Route 53.
--   
--   <a>$sel:description:LinkedService'</a>,
--   <a>linkedService_description</a> - If the health check or hosted zone
--   was created by another service, an optional description that can be
--   provided by the other service. When a resource is created by another
--   service, you can't edit or delete it using Amazon Route 53.
newLinkedService :: LinkedService

-- | If the health check or hosted zone was created by another service, the
--   service that created the resource. When a resource is created by
--   another service, you can't edit or delete it using Amazon Route 53.
linkedService_servicePrincipal :: Lens' LinkedService (Maybe Text)

-- | If the health check or hosted zone was created by another service, an
--   optional description that can be provided by the other service. When a
--   resource is created by another service, you can't edit or delete it
--   using Amazon Route 53.
linkedService_description :: Lens' LinkedService (Maybe Text)

-- | A complex type that contains information about a configuration for DNS
--   query logging.
--   
--   <i>See:</i> <a>newQueryLoggingConfig</a> smart constructor.
data QueryLoggingConfig
QueryLoggingConfig' :: Text -> ResourceId -> Text -> QueryLoggingConfig

-- | The ID for a configuration for DNS query logging.
[$sel:id:QueryLoggingConfig'] :: QueryLoggingConfig -> Text

-- | The ID of the hosted zone that CloudWatch Logs is logging queries for.
[$sel:hostedZoneId:QueryLoggingConfig'] :: QueryLoggingConfig -> ResourceId

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group that
--   Amazon Route 53 is publishing logs to.
[$sel:cloudWatchLogsLogGroupArn:QueryLoggingConfig'] :: QueryLoggingConfig -> Text

-- | Create a value of <a>QueryLoggingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:QueryLoggingConfig'</a>, <a>queryLoggingConfig_id</a> - The
--   ID for a configuration for DNS query logging.
--   
--   <a>$sel:hostedZoneId:QueryLoggingConfig'</a>,
--   <a>queryLoggingConfig_hostedZoneId</a> - The ID of the hosted zone
--   that CloudWatch Logs is logging queries for.
--   
--   <a>$sel:cloudWatchLogsLogGroupArn:QueryLoggingConfig'</a>,
--   <a>queryLoggingConfig_cloudWatchLogsLogGroupArn</a> - The Amazon
--   Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route
--   53 is publishing logs to.
newQueryLoggingConfig :: Text -> ResourceId -> Text -> QueryLoggingConfig

-- | The ID for a configuration for DNS query logging.
queryLoggingConfig_id :: Lens' QueryLoggingConfig Text

-- | The ID of the hosted zone that CloudWatch Logs is logging queries for.
queryLoggingConfig_hostedZoneId :: Lens' QueryLoggingConfig ResourceId

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group that
--   Amazon Route 53 is publishing logs to.
queryLoggingConfig_cloudWatchLogsLogGroupArn :: Lens' QueryLoggingConfig Text

-- | Information specific to the resource record.
--   
--   If you're creating an alias resource record set, omit
--   <tt>ResourceRecord</tt>.
--   
--   <i>See:</i> <a>newResourceRecord</a> smart constructor.
data ResourceRecord
ResourceRecord' :: Text -> ResourceRecord

-- | The current or new DNS record value, not to exceed 4,000 characters.
--   In the case of a <tt>DELETE</tt> action, if the current value does not
--   match the actual value, an error is returned. For descriptions about
--   how to format <tt>Value</tt> for different record types, see
--   <a>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
--   
--   You can specify more than one value for all record types except
--   <tt>CNAME</tt> and <tt>SOA</tt>.
--   
--   If you're creating an alias resource record set, omit <tt>Value</tt>.
[$sel:value:ResourceRecord'] :: ResourceRecord -> Text

-- | Create a value of <a>ResourceRecord</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ResourceRecord'</a>, <a>resourceRecord_value</a> - The
--   current or new DNS record value, not to exceed 4,000 characters. In
--   the case of a <tt>DELETE</tt> action, if the current value does not
--   match the actual value, an error is returned. For descriptions about
--   how to format <tt>Value</tt> for different record types, see
--   <a>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
--   
--   You can specify more than one value for all record types except
--   <tt>CNAME</tt> and <tt>SOA</tt>.
--   
--   If you're creating an alias resource record set, omit <tt>Value</tt>.
newResourceRecord :: Text -> ResourceRecord

-- | The current or new DNS record value, not to exceed 4,000 characters.
--   In the case of a <tt>DELETE</tt> action, if the current value does not
--   match the actual value, an error is returned. For descriptions about
--   how to format <tt>Value</tt> for different record types, see
--   <a>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
--   
--   You can specify more than one value for all record types except
--   <tt>CNAME</tt> and <tt>SOA</tt>.
--   
--   If you're creating an alias resource record set, omit <tt>Value</tt>.
resourceRecord_value :: Lens' ResourceRecord Text

-- | Information about the resource record set to create or delete.
--   
--   <i>See:</i> <a>newResourceRecordSet</a> smart constructor.
data ResourceRecordSet
ResourceRecordSet' :: Maybe Natural -> Maybe (NonEmpty ResourceRecord) -> Maybe AliasTarget -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe ResourceRecordSetFailover -> Maybe Text -> Maybe Region -> Maybe GeoLocation -> Maybe Bool -> Text -> RRType -> ResourceRecordSet

-- | The resource record cache time to live (TTL), in seconds. Note the
--   following:
--   
--   <ul>
--   <li>If you're creating or updating an alias resource record set, omit
--   <tt>TTL</tt>. Amazon Route 53 uses the value of <tt>TTL</tt> for the
--   alias target.</li>
--   <li>If you're associating this resource record set with a health check
--   (if you're adding a <tt>HealthCheckId</tt> element), we recommend that
--   you specify a <tt>TTL</tt> of 60 seconds or less so clients respond
--   quickly to changes in health status.</li>
--   <li>All of the resource record sets in a group of weighted resource
--   record sets must have the same value for <tt>TTL</tt>.</li>
--   <li>If a group of weighted resource record sets includes one or more
--   weighted alias resource record sets for which the alias target is an
--   ELB load balancer, we recommend that you specify a <tt>TTL</tt> of 60
--   seconds for all of the non-alias weighted resource record sets that
--   have the same name and type. Values other than 60 seconds (the TTL for
--   load balancers) will change the effect of the values that you specify
--   for <tt>Weight</tt>.</li>
--   </ul>
[$sel:ttl:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Natural

-- | Information about the resource records to act upon.
--   
--   If you're creating an alias resource record set, omit
--   <tt>ResourceRecords</tt>.
[$sel:resourceRecords:ResourceRecordSet'] :: ResourceRecordSet -> Maybe (NonEmpty ResourceRecord)

-- | <i>Alias resource record sets only:</i> Information about the Amazon
--   Web Services resource, such as a CloudFront distribution or an Amazon
--   S3 bucket, that you want to route traffic to.
--   
--   If you're creating resource records sets for a private hosted zone,
--   note the following:
--   
--   <ul>
--   <li>You can't create an alias resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.</li>
--   <li>Creating geolocation alias resource record sets or latency alias
--   resource record sets in a private hosted zone is unsupported.</li>
--   <li>For information about creating failover resource record sets in a
--   private hosted zone, see <a>Configuring Failover in a Private Hosted
--   Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
[$sel:aliasTarget:ResourceRecordSet'] :: ResourceRecordSet -> Maybe AliasTarget

-- | <i>Weighted resource record sets only:</i> Among resource record sets
--   that have the same combination of DNS name and type, a value that
--   determines the proportion of DNS queries that Amazon Route 53 responds
--   to using the current resource record set. Route 53 calculates the sum
--   of the weights for the resource record sets that have the same
--   combination of DNS name and type. Route 53 then responds to queries
--   based on the ratio of a resource's weight to the total. Note the
--   following:
--   
--   <ul>
--   <li>You must specify a value for the <tt>Weight</tt> element for every
--   weighted resource record set.</li>
--   <li>You can only specify one <tt>ResourceRecord</tt> per weighted
--   resource record set.</li>
--   <li>You can't create latency, failover, or geolocation resource record
--   sets that have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements as weighted resource record sets.</li>
--   <li>You can create a maximum of 100 weighted resource record sets that
--   have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements.</li>
--   <li>For weighted (but not weighted alias) resource record sets, if you
--   set <tt>Weight</tt> to <tt>0</tt> for a resource record set, Route 53
--   never responds to queries with the applicable value for that resource
--   record set. However, if you set <tt>Weight</tt> to <tt>0</tt> for all
--   resource record sets that have the same combination of DNS name and
--   type, traffic is routed to all resources with equal probability.The
--   effect of setting <tt>Weight</tt> to <tt>0</tt> is different when you
--   associate health checks with weighted resource record sets. For more
--   information, see <a>Options for Configuring Route 53 Active-Active and
--   Active-Passive Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.</li>
--   </ul>
[$sel:weight:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Natural

-- | When you create a traffic policy instance, Amazon Route 53
--   automatically creates a resource record set.
--   <tt>TrafficPolicyInstanceId</tt> is the ID of the traffic policy
--   instance that Route 53 created this resource record set for.
--   
--   To delete the resource record set that is associated with a traffic
--   policy instance, use <tt>DeleteTrafficPolicyInstance</tt>. Route 53
--   will delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.
[$sel:trafficPolicyInstanceId:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Text

-- | <i>Resource record sets that have a routing policy other than
--   simple:</i> An identifier that differentiates among multiple resource
--   record sets that have the same combination of name and type, such as
--   multiple weighted resource record sets named acme.example.com that
--   have a type of A. In a group of resource record sets that have the
--   same name and type, the value of <tt>SetIdentifier</tt> must be unique
--   for each resource record set.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
[$sel:setIdentifier:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Text

-- | <i>Failover resource record sets only:</i> To configure failover, you
--   add the <tt>Failover</tt> element to two resource record sets. For one
--   resource record set, you specify <tt>PRIMARY</tt> as the value for
--   <tt>Failover</tt>; for the other resource record set, you specify
--   <tt>SECONDARY</tt>. In addition, you include the
--   <tt>HealthCheckId</tt> element and specify the health check that you
--   want Amazon Route 53 to perform for each resource record set.
--   
--   Except where noted, the following failover behaviors assume that you
--   have included the <tt>HealthCheckId</tt> element in both resource
--   record sets:
--   
--   <ul>
--   <li>When the primary resource record set is healthy, Route 53 responds
--   to DNS queries with the applicable value from the primary resource
--   record set regardless of the health of the secondary resource record
--   set.</li>
--   <li>When the primary resource record set is unhealthy and the
--   secondary resource record set is healthy, Route 53 responds to DNS
--   queries with the applicable value from the secondary resource record
--   set.</li>
--   <li>When the secondary resource record set is unhealthy, Route 53
--   responds to DNS queries with the applicable value from the primary
--   resource record set regardless of the health of the primary resource
--   record set.</li>
--   <li>If you omit the <tt>HealthCheckId</tt> element for the secondary
--   resource record set, and if the primary resource record set is
--   unhealthy, Route 53 always responds to DNS queries with the applicable
--   value from the secondary resource record set. This is true regardless
--   of the health of the associated endpoint.</li>
--   </ul>
--   
--   You can't create non-failover resource record sets that have the same
--   values for the <tt>Name</tt> and <tt>Type</tt> elements as failover
--   resource record sets.
--   
--   For failover alias resource record sets, you must also include the
--   <tt>EvaluateTargetHealth</tt> element and set the value to true.
--   
--   For more information about configuring failover for Route 53, see the
--   following topics in the <i>Amazon Route 53 Developer Guide</i>:
--   
--   <ul>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
[$sel:failover:ResourceRecordSet'] :: ResourceRecordSet -> Maybe ResourceRecordSetFailover

-- | If you want Amazon Route 53 to return this resource record set in
--   response to a DNS query only when the status of a health check is
--   healthy, include the <tt>HealthCheckId</tt> element and specify the ID
--   of the applicable health check.
--   
--   Route 53 determines whether a resource record set is healthy based on
--   one of the following:
--   
--   <ul>
--   <li>By periodically sending a request to the endpoint that is
--   specified in the health check</li>
--   <li>By aggregating the status of a specified group of health checks
--   (calculated health checks)</li>
--   <li>By determining the current state of a CloudWatch alarm (CloudWatch
--   metric health checks)</li>
--   </ul>
--   
--   Route 53 doesn't check the health of the endpoint that is specified in
--   the resource record set, for example, the endpoint specified by the IP
--   address in the <tt>Value</tt> element. When you add a
--   <tt>HealthCheckId</tt> element to a resource record set, Route 53
--   checks the health of the endpoint that you specified in the health
--   check.
--   
--   For more information, see the following topics in the /Amazon Route 53
--   Developer Guide/:
--   
--   <ul>
--   <li><a>How Amazon Route 53 Determines Whether an Endpoint Is
--   Healthy</a></li>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
--   
--   <b>When to Specify HealthCheckId</b>
--   
--   Specifying a value for <tt>HealthCheckId</tt> is useful only when
--   Route 53 is choosing between two or more resource record sets to
--   respond to a DNS query, and you want Route 53 to base the choice in
--   part on the status of a health check. Configuring health checks makes
--   sense only in the following configurations:
--   
--   <ul>
--   <li><b>Non-alias resource record sets</b>: You're checking the health
--   of a group of non-alias resource record sets that have the same
--   routing policy, name, and type (such as multiple weighted records
--   named www.example.com with a type of A) and you specify health check
--   IDs for all the resource record sets.If the health check status for a
--   resource record set is healthy, Route 53 includes the record among the
--   records that it responds to DNS queries with.If the health check
--   status for a resource record set is unhealthy, Route 53 stops
--   responding to DNS queries using the value for that resource record
--   set.If the health check status for all resource record sets in the
--   group is unhealthy, Route 53 considers all resource record sets in the
--   group healthy and responds to DNS queries accordingly.</li>
--   <li><b>Alias resource record sets</b>: You specify the following
--   settings:<ul><li>You set <tt>EvaluateTargetHealth</tt> to true for an
--   alias resource record set in a group of resource record sets that have
--   the same routing policy, name, and type (such as multiple weighted
--   records named www.example.com with a type of A).</li><li>You configure
--   the alias resource record set to route traffic to a non-alias resource
--   record set in the same hosted zone.</li><li>You specify a health check
--   ID for the non-alias resource record set.</li></ul>If the health check
--   status is healthy, Route 53 considers the alias resource record set to
--   be healthy and includes the alias record among the records that it
--   responds to DNS queries with.If the health check status is unhealthy,
--   Route 53 stops responding to DNS queries using the alias resource
--   record set.The alias resource record set can also route traffic to a
--   <i>group</i> of non-alias resource record sets that have the same
--   routing policy, name, and type. In that configuration, associate
--   health checks with all of the resource record sets in the group of
--   non-alias resource record sets.</li>
--   </ul>
--   
--   <b>Geolocation Routing</b>
--   
--   For geolocation resource record sets, if an endpoint is unhealthy,
--   Route 53 looks for a resource record set for the larger, associated
--   geographic region. For example, suppose you have resource record sets
--   for a state in the United States, for the entire United States, for
--   North America, and a resource record set that has <tt>*</tt> for
--   <tt>CountryCode</tt> is <tt>*</tt>, which applies to all locations. If
--   the endpoint for the state resource record set is unhealthy, Route 53
--   checks for healthy resource record sets in the following order until
--   it finds a resource record set for which the endpoint is healthy:
--   
--   <ul>
--   <li>The United States</li>
--   <li>North America</li>
--   <li>The default resource record set</li>
--   </ul>
--   
--   <b>Specifying the Health Check Endpoint by Domain Name</b>
--   
--   If your health checks specify the endpoint only by domain name, we
--   recommend that you create a separate health check for each endpoint.
--   For example, create a health check for each <tt>HTTP</tt> server that
--   is serving content for <tt>www.example.com</tt>. For the value of
--   <tt>FullyQualifiedDomainName</tt>, specify the domain name of the
--   server (such as <tt>us-east-2-www.example.com</tt>), not the name of
--   the resource record sets (<tt>www.example.com</tt>).
--   
--   Health check results will be unpredictable if you do the following:
--   
--   <ul>
--   <li>Create a health check that has the same value for
--   <tt>FullyQualifiedDomainName</tt> as the name of a resource record
--   set.</li>
--   <li>Associate that health check with the resource record set.</li>
--   </ul>
[$sel:healthCheckId:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Text

-- | <i>Latency-based resource record sets only:</i> The Amazon EC2 Region
--   where you created the resource that this resource record set refers
--   to. The resource typically is an Amazon Web Services resource, such as
--   an EC2 instance or an ELB load balancer, and is referred to by an IP
--   address or a DNS domain name, depending on the record type.
--   
--   Although creating latency and latency alias resource record sets in a
--   private hosted zone is allowed, it's not supported.
--   
--   When Amazon Route 53 receives a DNS query for a domain name and type
--   for which you have created latency resource record sets, Route 53
--   selects the latency resource record set that has the lowest latency
--   between the end user and the associated Amazon EC2 Region. Route 53
--   then returns the value that is associated with the selected resource
--   record set.
--   
--   Note the following:
--   
--   <ul>
--   <li>You can only specify one <tt>ResourceRecord</tt> per latency
--   resource record set.</li>
--   <li>You can only create one latency resource record set for each
--   Amazon EC2 Region.</li>
--   <li>You aren't required to create latency resource record sets for all
--   Amazon EC2 Regions. Route 53 will choose the region with the best
--   latency from among the regions that you create latency resource record
--   sets for.</li>
--   <li>You can't create non-latency resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   latency resource record sets.</li>
--   </ul>
[$sel:region:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Region

-- | <i>Geolocation resource record sets only:</i> A complex type that lets
--   you control how Amazon Route 53 responds to DNS queries based on the
--   geographic origin of the query. For example, if you want all queries
--   from Africa to be routed to a web server with an IP address of
--   <tt>192.0.2.111</tt>, create a resource record set with a
--   <tt>Type</tt> of <tt>A</tt> and a <tt>ContinentCode</tt> of
--   <tt>AF</tt>.
--   
--   Although creating geolocation and geolocation alias resource record
--   sets in a private hosted zone is allowed, it's not supported.
--   
--   If you create separate resource record sets for overlapping geographic
--   regions (for example, one resource record set for a continent and one
--   for a country on the same continent), priority goes to the smallest
--   geographic region. This allows you to route most queries for a
--   continent to one resource and to route queries for a country on that
--   continent to a different resource.
--   
--   You can't create two geolocation resource record sets that specify the
--   same geographic location.
--   
--   The value <tt>*</tt> in the <tt>CountryCode</tt> element matches all
--   geographic locations that aren't specified in other geolocation
--   resource record sets that have the same values for the <tt>Name</tt>
--   and <tt>Type</tt> elements.
--   
--   Geolocation works by mapping IP addresses to locations. However, some
--   IP addresses aren't mapped to geographic locations, so even if you
--   create geolocation resource record sets that cover all seven
--   continents, Route 53 will receive some DNS queries from locations that
--   it can't identify. We recommend that you create a resource record set
--   for which the value of <tt>CountryCode</tt> is <tt>*</tt>. Two groups
--   of queries are routed to the resource that you specify in this record:
--   queries that come from locations for which you haven't created
--   geolocation resource record sets and queries from IP addresses that
--   aren't mapped to a location. If you don't create a <tt>*</tt> resource
--   record set, Route 53 returns a "no answer" response for queries from
--   those locations.
--   
--   You can't create non-geolocation resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   geolocation resource record sets.
[$sel:geoLocation:ResourceRecordSet'] :: ResourceRecordSet -> Maybe GeoLocation

-- | <i>Multivalue answer resource record sets only</i>: To route traffic
--   approximately randomly to multiple resources, such as web servers,
--   create one multivalue answer record for each resource and specify
--   <tt>true</tt> for <tt>MultiValueAnswer</tt>. Note the following:
--   
--   <ul>
--   <li>If you associate a health check with a multivalue answer resource
--   record set, Amazon Route 53 responds to DNS queries with the
--   corresponding IP address only when the health check is healthy.</li>
--   <li>If you don't associate a health check with a multivalue answer
--   record, Route 53 always considers the record to be healthy.</li>
--   <li>Route 53 responds to DNS queries with up to eight healthy records;
--   if you have eight or fewer healthy records, Route 53 responds to all
--   DNS queries with all the healthy records.</li>
--   <li>If you have more than eight healthy records, Route 53 responds to
--   different DNS resolvers with different combinations of healthy
--   records.</li>
--   <li>When all records are unhealthy, Route 53 responds to DNS queries
--   with up to eight unhealthy records.</li>
--   <li>If a resource becomes unavailable after a resolver caches a
--   response, client software typically tries another of the IP addresses
--   in the response.</li>
--   </ul>
--   
--   You can't create multivalue answer alias records.
[$sel:multiValueAnswer:ResourceRecordSet'] :: ResourceRecordSet -> Maybe Bool

-- | For <tt>ChangeResourceRecordSets</tt> requests, the name of the record
--   that you want to create, update, or delete. For
--   <tt>ListResourceRecordSets</tt> responses, the name of a record in the
--   specified hosted zone.
--   
--   <b>ChangeResourceRecordSets Only</b>
--   
--   Enter a fully qualified domain name, for example,
--   <tt>www.example.com</tt>. You can optionally include a trailing dot.
--   If you omit the trailing dot, Amazon Route 53 assumes that the domain
--   name that you specify is fully qualified. This means that Route 53
--   treats <tt>www.example.com</tt> (without a trailing dot) and
--   <tt>www.example.com.</tt> (with a trailing dot) as identical.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>DNS Domain Name Format</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.
--   
--   You can use the asterisk (*) wildcard to replace the leftmost label in
--   a domain name, for example, <tt>*.example.com</tt>. Note the
--   following:
--   
--   <ul>
--   <li>The * must replace the entire label. For example, you can't
--   specify <tt>*prod.example.com</tt> or <tt>prod*.example.com</tt>.</li>
--   <li>The * can't replace any of the middle labels, for example,
--   marketing.*.example.com.</li>
--   <li>If you include * in any position other than the leftmost label in
--   a domain name, DNS treats it as an * character (ASCII 42), not as a
--   wildcard.You can't use the * wildcard for resource records sets that
--   have a type of NS.</li>
--   </ul>
--   
--   You can use the * wildcard as the leftmost label in a domain name, for
--   example, <tt>*.example.com</tt>. You can't use an * for one of the
--   middle labels, for example, <tt>marketing.*.example.com</tt>. In
--   addition, the * must replace the entire label; for example, you can't
--   specify <tt>prod*.example.com</tt>.
[$sel:name:ResourceRecordSet'] :: ResourceRecordSet -> Text

-- | The DNS record type. For information about different record types and
--   how data is encoded for them, see <a>Supported DNS Resource Record
--   Types</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>DS</tt>
--   |<tt>MX</tt> | <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> |
--   <tt>SOA</tt> | <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>. When creating a group of
--   weighted, latency, geolocation, or failover resource record sets,
--   specify the same value for all of the resource record sets in the
--   group.
--   
--   Valid values for multivalue answer resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   SPF records were formerly used to verify the identity of the sender of
--   email messages. However, we no longer recommend that you create
--   resource record sets for which the value of <tt>Type</tt> is
--   <tt>SPF</tt>. RFC 7208, /Sender Policy Framework (SPF) for Authorizing
--   Use of Domains in Email, Version 1/, has been updated to say,
--   "...[I]ts existence and mechanism defined in [RFC4408] have led to
--   some interoperability issues. Accordingly, its use is no longer
--   appropriate for SPF version 1; implementations are not to use it." In
--   RFC 7208, see section 14.1, <a>The SPF DNS Record Type</a>.
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs:</b> <tt>A</tt></li>
--   <li><b>CloudFront distributions:</b> <tt>A</tt>If IPv6 is enabled for
--   the distribution, create two resource record sets to route traffic to
--   your distribution, one with a value of <tt>A</tt> and one with a value
--   of <tt>AAAA</tt>.</li>
--   <li>__Amazon API Gateway environment that has a regionalized
--   subdomain__: <tt>A</tt></li>
--   <li><b>ELB load balancers:</b> <tt>A</tt> | <tt>AAAA</tt></li>
--   <li><b>Amazon S3 buckets:</b> <tt>A</tt></li>
--   <li><b>Amazon Virtual Private Cloud interface VPC endpoints</b>
--   <tt>A</tt></li>
--   <li><b>Another resource record set in this hosted zone:</b> Specify
--   the type of the resource record set that you're creating the alias
--   for. All values are supported except <tt>NS</tt> and <tt>SOA</tt>.If
--   you're creating an alias record that has the same name as the hosted
--   zone (known as the zone apex), you can't route traffic to a record for
--   which the value of <tt>Type</tt> is <tt>CNAME</tt>. This is because
--   the alias record must have the same type as the record you're routing
--   traffic to, and creating a CNAME record for the zone apex isn't
--   supported even for an alias record.</li>
--   </ul>
[$sel:type':ResourceRecordSet'] :: ResourceRecordSet -> RRType

-- | Create a value of <a>ResourceRecordSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ttl:ResourceRecordSet'</a>, <a>resourceRecordSet_ttl</a> - The
--   resource record cache time to live (TTL), in seconds. Note the
--   following:
--   
--   <ul>
--   <li>If you're creating or updating an alias resource record set, omit
--   <tt>TTL</tt>. Amazon Route 53 uses the value of <tt>TTL</tt> for the
--   alias target.</li>
--   <li>If you're associating this resource record set with a health check
--   (if you're adding a <tt>HealthCheckId</tt> element), we recommend that
--   you specify a <tt>TTL</tt> of 60 seconds or less so clients respond
--   quickly to changes in health status.</li>
--   <li>All of the resource record sets in a group of weighted resource
--   record sets must have the same value for <tt>TTL</tt>.</li>
--   <li>If a group of weighted resource record sets includes one or more
--   weighted alias resource record sets for which the alias target is an
--   ELB load balancer, we recommend that you specify a <tt>TTL</tt> of 60
--   seconds for all of the non-alias weighted resource record sets that
--   have the same name and type. Values other than 60 seconds (the TTL for
--   load balancers) will change the effect of the values that you specify
--   for <tt>Weight</tt>.</li>
--   </ul>
--   
--   <a>$sel:resourceRecords:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_resourceRecords</a> - Information about the
--   resource records to act upon.
--   
--   If you're creating an alias resource record set, omit
--   <tt>ResourceRecords</tt>.
--   
--   <a>$sel:aliasTarget:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_aliasTarget</a> - <i>Alias resource record sets
--   only:</i> Information about the Amazon Web Services resource, such as
--   a CloudFront distribution or an Amazon S3 bucket, that you want to
--   route traffic to.
--   
--   If you're creating resource records sets for a private hosted zone,
--   note the following:
--   
--   <ul>
--   <li>You can't create an alias resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.</li>
--   <li>Creating geolocation alias resource record sets or latency alias
--   resource record sets in a private hosted zone is unsupported.</li>
--   <li>For information about creating failover resource record sets in a
--   private hosted zone, see <a>Configuring Failover in a Private Hosted
--   Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:weight:ResourceRecordSet'</a>, <a>resourceRecordSet_weight</a>
--   - <i>Weighted resource record sets only:</i> Among resource record
--   sets that have the same combination of DNS name and type, a value that
--   determines the proportion of DNS queries that Amazon Route 53 responds
--   to using the current resource record set. Route 53 calculates the sum
--   of the weights for the resource record sets that have the same
--   combination of DNS name and type. Route 53 then responds to queries
--   based on the ratio of a resource's weight to the total. Note the
--   following:
--   
--   <ul>
--   <li>You must specify a value for the <tt>Weight</tt> element for every
--   weighted resource record set.</li>
--   <li>You can only specify one <tt>ResourceRecord</tt> per weighted
--   resource record set.</li>
--   <li>You can't create latency, failover, or geolocation resource record
--   sets that have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements as weighted resource record sets.</li>
--   <li>You can create a maximum of 100 weighted resource record sets that
--   have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements.</li>
--   <li>For weighted (but not weighted alias) resource record sets, if you
--   set <tt>Weight</tt> to <tt>0</tt> for a resource record set, Route 53
--   never responds to queries with the applicable value for that resource
--   record set. However, if you set <tt>Weight</tt> to <tt>0</tt> for all
--   resource record sets that have the same combination of DNS name and
--   type, traffic is routed to all resources with equal probability.The
--   effect of setting <tt>Weight</tt> to <tt>0</tt> is different when you
--   associate health checks with weighted resource record sets. For more
--   information, see <a>Options for Configuring Route 53 Active-Active and
--   Active-Passive Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:trafficPolicyInstanceId:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_trafficPolicyInstanceId</a> - When you create a
--   traffic policy instance, Amazon Route 53 automatically creates a
--   resource record set. <tt>TrafficPolicyInstanceId</tt> is the ID of the
--   traffic policy instance that Route 53 created this resource record set
--   for.
--   
--   To delete the resource record set that is associated with a traffic
--   policy instance, use <tt>DeleteTrafficPolicyInstance</tt>. Route 53
--   will delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.
--   
--   <a>$sel:setIdentifier:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_setIdentifier</a> - <i>Resource record sets that
--   have a routing policy other than simple:</i> An identifier that
--   differentiates among multiple resource record sets that have the same
--   combination of name and type, such as multiple weighted resource
--   record sets named acme.example.com that have a type of A. In a group
--   of resource record sets that have the same name and type, the value of
--   <tt>SetIdentifier</tt> must be unique for each resource record set.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   <a>$sel:failover:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_failover</a> - <i>Failover resource record sets
--   only:</i> To configure failover, you add the <tt>Failover</tt> element
--   to two resource record sets. For one resource record set, you specify
--   <tt>PRIMARY</tt> as the value for <tt>Failover</tt>; for the other
--   resource record set, you specify <tt>SECONDARY</tt>. In addition, you
--   include the <tt>HealthCheckId</tt> element and specify the health
--   check that you want Amazon Route 53 to perform for each resource
--   record set.
--   
--   Except where noted, the following failover behaviors assume that you
--   have included the <tt>HealthCheckId</tt> element in both resource
--   record sets:
--   
--   <ul>
--   <li>When the primary resource record set is healthy, Route 53 responds
--   to DNS queries with the applicable value from the primary resource
--   record set regardless of the health of the secondary resource record
--   set.</li>
--   <li>When the primary resource record set is unhealthy and the
--   secondary resource record set is healthy, Route 53 responds to DNS
--   queries with the applicable value from the secondary resource record
--   set.</li>
--   <li>When the secondary resource record set is unhealthy, Route 53
--   responds to DNS queries with the applicable value from the primary
--   resource record set regardless of the health of the primary resource
--   record set.</li>
--   <li>If you omit the <tt>HealthCheckId</tt> element for the secondary
--   resource record set, and if the primary resource record set is
--   unhealthy, Route 53 always responds to DNS queries with the applicable
--   value from the secondary resource record set. This is true regardless
--   of the health of the associated endpoint.</li>
--   </ul>
--   
--   You can't create non-failover resource record sets that have the same
--   values for the <tt>Name</tt> and <tt>Type</tt> elements as failover
--   resource record sets.
--   
--   For failover alias resource record sets, you must also include the
--   <tt>EvaluateTargetHealth</tt> element and set the value to true.
--   
--   For more information about configuring failover for Route 53, see the
--   following topics in the <i>Amazon Route 53 Developer Guide</i>:
--   
--   <ul>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
--   
--   <a>$sel:healthCheckId:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_healthCheckId</a> - If you want Amazon Route 53
--   to return this resource record set in response to a DNS query only
--   when the status of a health check is healthy, include the
--   <tt>HealthCheckId</tt> element and specify the ID of the applicable
--   health check.
--   
--   Route 53 determines whether a resource record set is healthy based on
--   one of the following:
--   
--   <ul>
--   <li>By periodically sending a request to the endpoint that is
--   specified in the health check</li>
--   <li>By aggregating the status of a specified group of health checks
--   (calculated health checks)</li>
--   <li>By determining the current state of a CloudWatch alarm (CloudWatch
--   metric health checks)</li>
--   </ul>
--   
--   Route 53 doesn't check the health of the endpoint that is specified in
--   the resource record set, for example, the endpoint specified by the IP
--   address in the <tt>Value</tt> element. When you add a
--   <tt>HealthCheckId</tt> element to a resource record set, Route 53
--   checks the health of the endpoint that you specified in the health
--   check.
--   
--   For more information, see the following topics in the /Amazon Route 53
--   Developer Guide/:
--   
--   <ul>
--   <li><a>How Amazon Route 53 Determines Whether an Endpoint Is
--   Healthy</a></li>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
--   
--   <b>When to Specify HealthCheckId</b>
--   
--   Specifying a value for <tt>HealthCheckId</tt> is useful only when
--   Route 53 is choosing between two or more resource record sets to
--   respond to a DNS query, and you want Route 53 to base the choice in
--   part on the status of a health check. Configuring health checks makes
--   sense only in the following configurations:
--   
--   <ul>
--   <li><b>Non-alias resource record sets</b>: You're checking the health
--   of a group of non-alias resource record sets that have the same
--   routing policy, name, and type (such as multiple weighted records
--   named www.example.com with a type of A) and you specify health check
--   IDs for all the resource record sets.If the health check status for a
--   resource record set is healthy, Route 53 includes the record among the
--   records that it responds to DNS queries with.If the health check
--   status for a resource record set is unhealthy, Route 53 stops
--   responding to DNS queries using the value for that resource record
--   set.If the health check status for all resource record sets in the
--   group is unhealthy, Route 53 considers all resource record sets in the
--   group healthy and responds to DNS queries accordingly.</li>
--   <li><b>Alias resource record sets</b>: You specify the following
--   settings:<ul><li>You set <tt>EvaluateTargetHealth</tt> to true for an
--   alias resource record set in a group of resource record sets that have
--   the same routing policy, name, and type (such as multiple weighted
--   records named www.example.com with a type of A).</li><li>You configure
--   the alias resource record set to route traffic to a non-alias resource
--   record set in the same hosted zone.</li><li>You specify a health check
--   ID for the non-alias resource record set.</li></ul>If the health check
--   status is healthy, Route 53 considers the alias resource record set to
--   be healthy and includes the alias record among the records that it
--   responds to DNS queries with.If the health check status is unhealthy,
--   Route 53 stops responding to DNS queries using the alias resource
--   record set.The alias resource record set can also route traffic to a
--   <i>group</i> of non-alias resource record sets that have the same
--   routing policy, name, and type. In that configuration, associate
--   health checks with all of the resource record sets in the group of
--   non-alias resource record sets.</li>
--   </ul>
--   
--   <b>Geolocation Routing</b>
--   
--   For geolocation resource record sets, if an endpoint is unhealthy,
--   Route 53 looks for a resource record set for the larger, associated
--   geographic region. For example, suppose you have resource record sets
--   for a state in the United States, for the entire United States, for
--   North America, and a resource record set that has <tt>*</tt> for
--   <tt>CountryCode</tt> is <tt>*</tt>, which applies to all locations. If
--   the endpoint for the state resource record set is unhealthy, Route 53
--   checks for healthy resource record sets in the following order until
--   it finds a resource record set for which the endpoint is healthy:
--   
--   <ul>
--   <li>The United States</li>
--   <li>North America</li>
--   <li>The default resource record set</li>
--   </ul>
--   
--   <b>Specifying the Health Check Endpoint by Domain Name</b>
--   
--   If your health checks specify the endpoint only by domain name, we
--   recommend that you create a separate health check for each endpoint.
--   For example, create a health check for each <tt>HTTP</tt> server that
--   is serving content for <tt>www.example.com</tt>. For the value of
--   <tt>FullyQualifiedDomainName</tt>, specify the domain name of the
--   server (such as <tt>us-east-2-www.example.com</tt>), not the name of
--   the resource record sets (<tt>www.example.com</tt>).
--   
--   Health check results will be unpredictable if you do the following:
--   
--   <ul>
--   <li>Create a health check that has the same value for
--   <tt>FullyQualifiedDomainName</tt> as the name of a resource record
--   set.</li>
--   <li>Associate that health check with the resource record set.</li>
--   </ul>
--   
--   <a>$sel:region:ResourceRecordSet'</a>, <a>resourceRecordSet_region</a>
--   - <i>Latency-based resource record sets only:</i> The Amazon EC2
--   Region where you created the resource that this resource record set
--   refers to. The resource typically is an Amazon Web Services resource,
--   such as an EC2 instance or an ELB load balancer, and is referred to by
--   an IP address or a DNS domain name, depending on the record type.
--   
--   Although creating latency and latency alias resource record sets in a
--   private hosted zone is allowed, it's not supported.
--   
--   When Amazon Route 53 receives a DNS query for a domain name and type
--   for which you have created latency resource record sets, Route 53
--   selects the latency resource record set that has the lowest latency
--   between the end user and the associated Amazon EC2 Region. Route 53
--   then returns the value that is associated with the selected resource
--   record set.
--   
--   Note the following:
--   
--   <ul>
--   <li>You can only specify one <tt>ResourceRecord</tt> per latency
--   resource record set.</li>
--   <li>You can only create one latency resource record set for each
--   Amazon EC2 Region.</li>
--   <li>You aren't required to create latency resource record sets for all
--   Amazon EC2 Regions. Route 53 will choose the region with the best
--   latency from among the regions that you create latency resource record
--   sets for.</li>
--   <li>You can't create non-latency resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   latency resource record sets.</li>
--   </ul>
--   
--   <a>$sel:geoLocation:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_geoLocation</a> - <i>Geolocation resource record
--   sets only:</i> A complex type that lets you control how Amazon Route
--   53 responds to DNS queries based on the geographic origin of the
--   query. For example, if you want all queries from Africa to be routed
--   to a web server with an IP address of <tt>192.0.2.111</tt>, create a
--   resource record set with a <tt>Type</tt> of <tt>A</tt> and a
--   <tt>ContinentCode</tt> of <tt>AF</tt>.
--   
--   Although creating geolocation and geolocation alias resource record
--   sets in a private hosted zone is allowed, it's not supported.
--   
--   If you create separate resource record sets for overlapping geographic
--   regions (for example, one resource record set for a continent and one
--   for a country on the same continent), priority goes to the smallest
--   geographic region. This allows you to route most queries for a
--   continent to one resource and to route queries for a country on that
--   continent to a different resource.
--   
--   You can't create two geolocation resource record sets that specify the
--   same geographic location.
--   
--   The value <tt>*</tt> in the <tt>CountryCode</tt> element matches all
--   geographic locations that aren't specified in other geolocation
--   resource record sets that have the same values for the <tt>Name</tt>
--   and <tt>Type</tt> elements.
--   
--   Geolocation works by mapping IP addresses to locations. However, some
--   IP addresses aren't mapped to geographic locations, so even if you
--   create geolocation resource record sets that cover all seven
--   continents, Route 53 will receive some DNS queries from locations that
--   it can't identify. We recommend that you create a resource record set
--   for which the value of <tt>CountryCode</tt> is <tt>*</tt>. Two groups
--   of queries are routed to the resource that you specify in this record:
--   queries that come from locations for which you haven't created
--   geolocation resource record sets and queries from IP addresses that
--   aren't mapped to a location. If you don't create a <tt>*</tt> resource
--   record set, Route 53 returns a "no answer" response for queries from
--   those locations.
--   
--   You can't create non-geolocation resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   geolocation resource record sets.
--   
--   <a>$sel:multiValueAnswer:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_multiValueAnswer</a> - <i>Multivalue answer
--   resource record sets only</i>: To route traffic approximately randomly
--   to multiple resources, such as web servers, create one multivalue
--   answer record for each resource and specify <tt>true</tt> for
--   <tt>MultiValueAnswer</tt>. Note the following:
--   
--   <ul>
--   <li>If you associate a health check with a multivalue answer resource
--   record set, Amazon Route 53 responds to DNS queries with the
--   corresponding IP address only when the health check is healthy.</li>
--   <li>If you don't associate a health check with a multivalue answer
--   record, Route 53 always considers the record to be healthy.</li>
--   <li>Route 53 responds to DNS queries with up to eight healthy records;
--   if you have eight or fewer healthy records, Route 53 responds to all
--   DNS queries with all the healthy records.</li>
--   <li>If you have more than eight healthy records, Route 53 responds to
--   different DNS resolvers with different combinations of healthy
--   records.</li>
--   <li>When all records are unhealthy, Route 53 responds to DNS queries
--   with up to eight unhealthy records.</li>
--   <li>If a resource becomes unavailable after a resolver caches a
--   response, client software typically tries another of the IP addresses
--   in the response.</li>
--   </ul>
--   
--   You can't create multivalue answer alias records.
--   
--   <a>$sel:name:ResourceRecordSet'</a>, <a>resourceRecordSet_name</a> -
--   For <tt>ChangeResourceRecordSets</tt> requests, the name of the record
--   that you want to create, update, or delete. For
--   <tt>ListResourceRecordSets</tt> responses, the name of a record in the
--   specified hosted zone.
--   
--   <b>ChangeResourceRecordSets Only</b>
--   
--   Enter a fully qualified domain name, for example,
--   <tt>www.example.com</tt>. You can optionally include a trailing dot.
--   If you omit the trailing dot, Amazon Route 53 assumes that the domain
--   name that you specify is fully qualified. This means that Route 53
--   treats <tt>www.example.com</tt> (without a trailing dot) and
--   <tt>www.example.com.</tt> (with a trailing dot) as identical.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>DNS Domain Name Format</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.
--   
--   You can use the asterisk (*) wildcard to replace the leftmost label in
--   a domain name, for example, <tt>*.example.com</tt>. Note the
--   following:
--   
--   <ul>
--   <li>The * must replace the entire label. For example, you can't
--   specify <tt>*prod.example.com</tt> or <tt>prod*.example.com</tt>.</li>
--   <li>The * can't replace any of the middle labels, for example,
--   marketing.*.example.com.</li>
--   <li>If you include * in any position other than the leftmost label in
--   a domain name, DNS treats it as an * character (ASCII 42), not as a
--   wildcard.You can't use the * wildcard for resource records sets that
--   have a type of NS.</li>
--   </ul>
--   
--   You can use the * wildcard as the leftmost label in a domain name, for
--   example, <tt>*.example.com</tt>. You can't use an * for one of the
--   middle labels, for example, <tt>marketing.*.example.com</tt>. In
--   addition, the * must replace the entire label; for example, you can't
--   specify <tt>prod*.example.com</tt>.
--   
--   <a>$sel:type':ResourceRecordSet'</a>, <a>resourceRecordSet_type</a> -
--   The DNS record type. For information about different record types and
--   how data is encoded for them, see <a>Supported DNS Resource Record
--   Types</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>DS</tt>
--   |<tt>MX</tt> | <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> |
--   <tt>SOA</tt> | <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>. When creating a group of
--   weighted, latency, geolocation, or failover resource record sets,
--   specify the same value for all of the resource record sets in the
--   group.
--   
--   Valid values for multivalue answer resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   SPF records were formerly used to verify the identity of the sender of
--   email messages. However, we no longer recommend that you create
--   resource record sets for which the value of <tt>Type</tt> is
--   <tt>SPF</tt>. RFC 7208, /Sender Policy Framework (SPF) for Authorizing
--   Use of Domains in Email, Version 1/, has been updated to say,
--   "...[I]ts existence and mechanism defined in [RFC4408] have led to
--   some interoperability issues. Accordingly, its use is no longer
--   appropriate for SPF version 1; implementations are not to use it." In
--   RFC 7208, see section 14.1, <a>The SPF DNS Record Type</a>.
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs:</b> <tt>A</tt></li>
--   <li><b>CloudFront distributions:</b> <tt>A</tt>If IPv6 is enabled for
--   the distribution, create two resource record sets to route traffic to
--   your distribution, one with a value of <tt>A</tt> and one with a value
--   of <tt>AAAA</tt>.</li>
--   <li>__Amazon API Gateway environment that has a regionalized
--   subdomain__: <tt>A</tt></li>
--   <li><b>ELB load balancers:</b> <tt>A</tt> | <tt>AAAA</tt></li>
--   <li><b>Amazon S3 buckets:</b> <tt>A</tt></li>
--   <li><b>Amazon Virtual Private Cloud interface VPC endpoints</b>
--   <tt>A</tt></li>
--   <li><b>Another resource record set in this hosted zone:</b> Specify
--   the type of the resource record set that you're creating the alias
--   for. All values are supported except <tt>NS</tt> and <tt>SOA</tt>.If
--   you're creating an alias record that has the same name as the hosted
--   zone (known as the zone apex), you can't route traffic to a record for
--   which the value of <tt>Type</tt> is <tt>CNAME</tt>. This is because
--   the alias record must have the same type as the record you're routing
--   traffic to, and creating a CNAME record for the zone apex isn't
--   supported even for an alias record.</li>
--   </ul>
newResourceRecordSet :: Text -> RRType -> ResourceRecordSet

-- | The resource record cache time to live (TTL), in seconds. Note the
--   following:
--   
--   <ul>
--   <li>If you're creating or updating an alias resource record set, omit
--   <tt>TTL</tt>. Amazon Route 53 uses the value of <tt>TTL</tt> for the
--   alias target.</li>
--   <li>If you're associating this resource record set with a health check
--   (if you're adding a <tt>HealthCheckId</tt> element), we recommend that
--   you specify a <tt>TTL</tt> of 60 seconds or less so clients respond
--   quickly to changes in health status.</li>
--   <li>All of the resource record sets in a group of weighted resource
--   record sets must have the same value for <tt>TTL</tt>.</li>
--   <li>If a group of weighted resource record sets includes one or more
--   weighted alias resource record sets for which the alias target is an
--   ELB load balancer, we recommend that you specify a <tt>TTL</tt> of 60
--   seconds for all of the non-alias weighted resource record sets that
--   have the same name and type. Values other than 60 seconds (the TTL for
--   load balancers) will change the effect of the values that you specify
--   for <tt>Weight</tt>.</li>
--   </ul>
resourceRecordSet_ttl :: Lens' ResourceRecordSet (Maybe Natural)

-- | Information about the resource records to act upon.
--   
--   If you're creating an alias resource record set, omit
--   <tt>ResourceRecords</tt>.
resourceRecordSet_resourceRecords :: Lens' ResourceRecordSet (Maybe (NonEmpty ResourceRecord))

-- | <i>Alias resource record sets only:</i> Information about the Amazon
--   Web Services resource, such as a CloudFront distribution or an Amazon
--   S3 bucket, that you want to route traffic to.
--   
--   If you're creating resource records sets for a private hosted zone,
--   note the following:
--   
--   <ul>
--   <li>You can't create an alias resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.</li>
--   <li>Creating geolocation alias resource record sets or latency alias
--   resource record sets in a private hosted zone is unsupported.</li>
--   <li>For information about creating failover resource record sets in a
--   private hosted zone, see <a>Configuring Failover in a Private Hosted
--   Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
resourceRecordSet_aliasTarget :: Lens' ResourceRecordSet (Maybe AliasTarget)

-- | <i>Weighted resource record sets only:</i> Among resource record sets
--   that have the same combination of DNS name and type, a value that
--   determines the proportion of DNS queries that Amazon Route 53 responds
--   to using the current resource record set. Route 53 calculates the sum
--   of the weights for the resource record sets that have the same
--   combination of DNS name and type. Route 53 then responds to queries
--   based on the ratio of a resource's weight to the total. Note the
--   following:
--   
--   <ul>
--   <li>You must specify a value for the <tt>Weight</tt> element for every
--   weighted resource record set.</li>
--   <li>You can only specify one <tt>ResourceRecord</tt> per weighted
--   resource record set.</li>
--   <li>You can't create latency, failover, or geolocation resource record
--   sets that have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements as weighted resource record sets.</li>
--   <li>You can create a maximum of 100 weighted resource record sets that
--   have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements.</li>
--   <li>For weighted (but not weighted alias) resource record sets, if you
--   set <tt>Weight</tt> to <tt>0</tt> for a resource record set, Route 53
--   never responds to queries with the applicable value for that resource
--   record set. However, if you set <tt>Weight</tt> to <tt>0</tt> for all
--   resource record sets that have the same combination of DNS name and
--   type, traffic is routed to all resources with equal probability.The
--   effect of setting <tt>Weight</tt> to <tt>0</tt> is different when you
--   associate health checks with weighted resource record sets. For more
--   information, see <a>Options for Configuring Route 53 Active-Active and
--   Active-Passive Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.</li>
--   </ul>
resourceRecordSet_weight :: Lens' ResourceRecordSet (Maybe Natural)

-- | When you create a traffic policy instance, Amazon Route 53
--   automatically creates a resource record set.
--   <tt>TrafficPolicyInstanceId</tt> is the ID of the traffic policy
--   instance that Route 53 created this resource record set for.
--   
--   To delete the resource record set that is associated with a traffic
--   policy instance, use <tt>DeleteTrafficPolicyInstance</tt>. Route 53
--   will delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.
resourceRecordSet_trafficPolicyInstanceId :: Lens' ResourceRecordSet (Maybe Text)

-- | <i>Resource record sets that have a routing policy other than
--   simple:</i> An identifier that differentiates among multiple resource
--   record sets that have the same combination of name and type, such as
--   multiple weighted resource record sets named acme.example.com that
--   have a type of A. In a group of resource record sets that have the
--   same name and type, the value of <tt>SetIdentifier</tt> must be unique
--   for each resource record set.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
resourceRecordSet_setIdentifier :: Lens' ResourceRecordSet (Maybe Text)

-- | <i>Failover resource record sets only:</i> To configure failover, you
--   add the <tt>Failover</tt> element to two resource record sets. For one
--   resource record set, you specify <tt>PRIMARY</tt> as the value for
--   <tt>Failover</tt>; for the other resource record set, you specify
--   <tt>SECONDARY</tt>. In addition, you include the
--   <tt>HealthCheckId</tt> element and specify the health check that you
--   want Amazon Route 53 to perform for each resource record set.
--   
--   Except where noted, the following failover behaviors assume that you
--   have included the <tt>HealthCheckId</tt> element in both resource
--   record sets:
--   
--   <ul>
--   <li>When the primary resource record set is healthy, Route 53 responds
--   to DNS queries with the applicable value from the primary resource
--   record set regardless of the health of the secondary resource record
--   set.</li>
--   <li>When the primary resource record set is unhealthy and the
--   secondary resource record set is healthy, Route 53 responds to DNS
--   queries with the applicable value from the secondary resource record
--   set.</li>
--   <li>When the secondary resource record set is unhealthy, Route 53
--   responds to DNS queries with the applicable value from the primary
--   resource record set regardless of the health of the primary resource
--   record set.</li>
--   <li>If you omit the <tt>HealthCheckId</tt> element for the secondary
--   resource record set, and if the primary resource record set is
--   unhealthy, Route 53 always responds to DNS queries with the applicable
--   value from the secondary resource record set. This is true regardless
--   of the health of the associated endpoint.</li>
--   </ul>
--   
--   You can't create non-failover resource record sets that have the same
--   values for the <tt>Name</tt> and <tt>Type</tt> elements as failover
--   resource record sets.
--   
--   For failover alias resource record sets, you must also include the
--   <tt>EvaluateTargetHealth</tt> element and set the value to true.
--   
--   For more information about configuring failover for Route 53, see the
--   following topics in the <i>Amazon Route 53 Developer Guide</i>:
--   
--   <ul>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
resourceRecordSet_failover :: Lens' ResourceRecordSet (Maybe ResourceRecordSetFailover)

-- | If you want Amazon Route 53 to return this resource record set in
--   response to a DNS query only when the status of a health check is
--   healthy, include the <tt>HealthCheckId</tt> element and specify the ID
--   of the applicable health check.
--   
--   Route 53 determines whether a resource record set is healthy based on
--   one of the following:
--   
--   <ul>
--   <li>By periodically sending a request to the endpoint that is
--   specified in the health check</li>
--   <li>By aggregating the status of a specified group of health checks
--   (calculated health checks)</li>
--   <li>By determining the current state of a CloudWatch alarm (CloudWatch
--   metric health checks)</li>
--   </ul>
--   
--   Route 53 doesn't check the health of the endpoint that is specified in
--   the resource record set, for example, the endpoint specified by the IP
--   address in the <tt>Value</tt> element. When you add a
--   <tt>HealthCheckId</tt> element to a resource record set, Route 53
--   checks the health of the endpoint that you specified in the health
--   check.
--   
--   For more information, see the following topics in the /Amazon Route 53
--   Developer Guide/:
--   
--   <ul>
--   <li><a>How Amazon Route 53 Determines Whether an Endpoint Is
--   Healthy</a></li>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
--   
--   <b>When to Specify HealthCheckId</b>
--   
--   Specifying a value for <tt>HealthCheckId</tt> is useful only when
--   Route 53 is choosing between two or more resource record sets to
--   respond to a DNS query, and you want Route 53 to base the choice in
--   part on the status of a health check. Configuring health checks makes
--   sense only in the following configurations:
--   
--   <ul>
--   <li><b>Non-alias resource record sets</b>: You're checking the health
--   of a group of non-alias resource record sets that have the same
--   routing policy, name, and type (such as multiple weighted records
--   named www.example.com with a type of A) and you specify health check
--   IDs for all the resource record sets.If the health check status for a
--   resource record set is healthy, Route 53 includes the record among the
--   records that it responds to DNS queries with.If the health check
--   status for a resource record set is unhealthy, Route 53 stops
--   responding to DNS queries using the value for that resource record
--   set.If the health check status for all resource record sets in the
--   group is unhealthy, Route 53 considers all resource record sets in the
--   group healthy and responds to DNS queries accordingly.</li>
--   <li><b>Alias resource record sets</b>: You specify the following
--   settings:<ul><li>You set <tt>EvaluateTargetHealth</tt> to true for an
--   alias resource record set in a group of resource record sets that have
--   the same routing policy, name, and type (such as multiple weighted
--   records named www.example.com with a type of A).</li><li>You configure
--   the alias resource record set to route traffic to a non-alias resource
--   record set in the same hosted zone.</li><li>You specify a health check
--   ID for the non-alias resource record set.</li></ul>If the health check
--   status is healthy, Route 53 considers the alias resource record set to
--   be healthy and includes the alias record among the records that it
--   responds to DNS queries with.If the health check status is unhealthy,
--   Route 53 stops responding to DNS queries using the alias resource
--   record set.The alias resource record set can also route traffic to a
--   <i>group</i> of non-alias resource record sets that have the same
--   routing policy, name, and type. In that configuration, associate
--   health checks with all of the resource record sets in the group of
--   non-alias resource record sets.</li>
--   </ul>
--   
--   <b>Geolocation Routing</b>
--   
--   For geolocation resource record sets, if an endpoint is unhealthy,
--   Route 53 looks for a resource record set for the larger, associated
--   geographic region. For example, suppose you have resource record sets
--   for a state in the United States, for the entire United States, for
--   North America, and a resource record set that has <tt>*</tt> for
--   <tt>CountryCode</tt> is <tt>*</tt>, which applies to all locations. If
--   the endpoint for the state resource record set is unhealthy, Route 53
--   checks for healthy resource record sets in the following order until
--   it finds a resource record set for which the endpoint is healthy:
--   
--   <ul>
--   <li>The United States</li>
--   <li>North America</li>
--   <li>The default resource record set</li>
--   </ul>
--   
--   <b>Specifying the Health Check Endpoint by Domain Name</b>
--   
--   If your health checks specify the endpoint only by domain name, we
--   recommend that you create a separate health check for each endpoint.
--   For example, create a health check for each <tt>HTTP</tt> server that
--   is serving content for <tt>www.example.com</tt>. For the value of
--   <tt>FullyQualifiedDomainName</tt>, specify the domain name of the
--   server (such as <tt>us-east-2-www.example.com</tt>), not the name of
--   the resource record sets (<tt>www.example.com</tt>).
--   
--   Health check results will be unpredictable if you do the following:
--   
--   <ul>
--   <li>Create a health check that has the same value for
--   <tt>FullyQualifiedDomainName</tt> as the name of a resource record
--   set.</li>
--   <li>Associate that health check with the resource record set.</li>
--   </ul>
resourceRecordSet_healthCheckId :: Lens' ResourceRecordSet (Maybe Text)

-- | <i>Latency-based resource record sets only:</i> The Amazon EC2 Region
--   where you created the resource that this resource record set refers
--   to. The resource typically is an Amazon Web Services resource, such as
--   an EC2 instance or an ELB load balancer, and is referred to by an IP
--   address or a DNS domain name, depending on the record type.
--   
--   Although creating latency and latency alias resource record sets in a
--   private hosted zone is allowed, it's not supported.
--   
--   When Amazon Route 53 receives a DNS query for a domain name and type
--   for which you have created latency resource record sets, Route 53
--   selects the latency resource record set that has the lowest latency
--   between the end user and the associated Amazon EC2 Region. Route 53
--   then returns the value that is associated with the selected resource
--   record set.
--   
--   Note the following:
--   
--   <ul>
--   <li>You can only specify one <tt>ResourceRecord</tt> per latency
--   resource record set.</li>
--   <li>You can only create one latency resource record set for each
--   Amazon EC2 Region.</li>
--   <li>You aren't required to create latency resource record sets for all
--   Amazon EC2 Regions. Route 53 will choose the region with the best
--   latency from among the regions that you create latency resource record
--   sets for.</li>
--   <li>You can't create non-latency resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   latency resource record sets.</li>
--   </ul>
resourceRecordSet_region :: Lens' ResourceRecordSet (Maybe Region)

-- | <i>Geolocation resource record sets only:</i> A complex type that lets
--   you control how Amazon Route 53 responds to DNS queries based on the
--   geographic origin of the query. For example, if you want all queries
--   from Africa to be routed to a web server with an IP address of
--   <tt>192.0.2.111</tt>, create a resource record set with a
--   <tt>Type</tt> of <tt>A</tt> and a <tt>ContinentCode</tt> of
--   <tt>AF</tt>.
--   
--   Although creating geolocation and geolocation alias resource record
--   sets in a private hosted zone is allowed, it's not supported.
--   
--   If you create separate resource record sets for overlapping geographic
--   regions (for example, one resource record set for a continent and one
--   for a country on the same continent), priority goes to the smallest
--   geographic region. This allows you to route most queries for a
--   continent to one resource and to route queries for a country on that
--   continent to a different resource.
--   
--   You can't create two geolocation resource record sets that specify the
--   same geographic location.
--   
--   The value <tt>*</tt> in the <tt>CountryCode</tt> element matches all
--   geographic locations that aren't specified in other geolocation
--   resource record sets that have the same values for the <tt>Name</tt>
--   and <tt>Type</tt> elements.
--   
--   Geolocation works by mapping IP addresses to locations. However, some
--   IP addresses aren't mapped to geographic locations, so even if you
--   create geolocation resource record sets that cover all seven
--   continents, Route 53 will receive some DNS queries from locations that
--   it can't identify. We recommend that you create a resource record set
--   for which the value of <tt>CountryCode</tt> is <tt>*</tt>. Two groups
--   of queries are routed to the resource that you specify in this record:
--   queries that come from locations for which you haven't created
--   geolocation resource record sets and queries from IP addresses that
--   aren't mapped to a location. If you don't create a <tt>*</tt> resource
--   record set, Route 53 returns a "no answer" response for queries from
--   those locations.
--   
--   You can't create non-geolocation resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   geolocation resource record sets.
resourceRecordSet_geoLocation :: Lens' ResourceRecordSet (Maybe GeoLocation)

-- | <i>Multivalue answer resource record sets only</i>: To route traffic
--   approximately randomly to multiple resources, such as web servers,
--   create one multivalue answer record for each resource and specify
--   <tt>true</tt> for <tt>MultiValueAnswer</tt>. Note the following:
--   
--   <ul>
--   <li>If you associate a health check with a multivalue answer resource
--   record set, Amazon Route 53 responds to DNS queries with the
--   corresponding IP address only when the health check is healthy.</li>
--   <li>If you don't associate a health check with a multivalue answer
--   record, Route 53 always considers the record to be healthy.</li>
--   <li>Route 53 responds to DNS queries with up to eight healthy records;
--   if you have eight or fewer healthy records, Route 53 responds to all
--   DNS queries with all the healthy records.</li>
--   <li>If you have more than eight healthy records, Route 53 responds to
--   different DNS resolvers with different combinations of healthy
--   records.</li>
--   <li>When all records are unhealthy, Route 53 responds to DNS queries
--   with up to eight unhealthy records.</li>
--   <li>If a resource becomes unavailable after a resolver caches a
--   response, client software typically tries another of the IP addresses
--   in the response.</li>
--   </ul>
--   
--   You can't create multivalue answer alias records.
resourceRecordSet_multiValueAnswer :: Lens' ResourceRecordSet (Maybe Bool)

-- | For <tt>ChangeResourceRecordSets</tt> requests, the name of the record
--   that you want to create, update, or delete. For
--   <tt>ListResourceRecordSets</tt> responses, the name of a record in the
--   specified hosted zone.
--   
--   <b>ChangeResourceRecordSets Only</b>
--   
--   Enter a fully qualified domain name, for example,
--   <tt>www.example.com</tt>. You can optionally include a trailing dot.
--   If you omit the trailing dot, Amazon Route 53 assumes that the domain
--   name that you specify is fully qualified. This means that Route 53
--   treats <tt>www.example.com</tt> (without a trailing dot) and
--   <tt>www.example.com.</tt> (with a trailing dot) as identical.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>DNS Domain Name Format</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.
--   
--   You can use the asterisk (*) wildcard to replace the leftmost label in
--   a domain name, for example, <tt>*.example.com</tt>. Note the
--   following:
--   
--   <ul>
--   <li>The * must replace the entire label. For example, you can't
--   specify <tt>*prod.example.com</tt> or <tt>prod*.example.com</tt>.</li>
--   <li>The * can't replace any of the middle labels, for example,
--   marketing.*.example.com.</li>
--   <li>If you include * in any position other than the leftmost label in
--   a domain name, DNS treats it as an * character (ASCII 42), not as a
--   wildcard.You can't use the * wildcard for resource records sets that
--   have a type of NS.</li>
--   </ul>
--   
--   You can use the * wildcard as the leftmost label in a domain name, for
--   example, <tt>*.example.com</tt>. You can't use an * for one of the
--   middle labels, for example, <tt>marketing.*.example.com</tt>. In
--   addition, the * must replace the entire label; for example, you can't
--   specify <tt>prod*.example.com</tt>.
resourceRecordSet_name :: Lens' ResourceRecordSet Text

-- | The DNS record type. For information about different record types and
--   how data is encoded for them, see <a>Supported DNS Resource Record
--   Types</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>DS</tt>
--   |<tt>MX</tt> | <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> |
--   <tt>SOA</tt> | <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>. When creating a group of
--   weighted, latency, geolocation, or failover resource record sets,
--   specify the same value for all of the resource record sets in the
--   group.
--   
--   Valid values for multivalue answer resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   SPF records were formerly used to verify the identity of the sender of
--   email messages. However, we no longer recommend that you create
--   resource record sets for which the value of <tt>Type</tt> is
--   <tt>SPF</tt>. RFC 7208, /Sender Policy Framework (SPF) for Authorizing
--   Use of Domains in Email, Version 1/, has been updated to say,
--   "...[I]ts existence and mechanism defined in [RFC4408] have led to
--   some interoperability issues. Accordingly, its use is no longer
--   appropriate for SPF version 1; implementations are not to use it." In
--   RFC 7208, see section 14.1, <a>The SPF DNS Record Type</a>.
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs:</b> <tt>A</tt></li>
--   <li><b>CloudFront distributions:</b> <tt>A</tt>If IPv6 is enabled for
--   the distribution, create two resource record sets to route traffic to
--   your distribution, one with a value of <tt>A</tt> and one with a value
--   of <tt>AAAA</tt>.</li>
--   <li>__Amazon API Gateway environment that has a regionalized
--   subdomain__: <tt>A</tt></li>
--   <li><b>ELB load balancers:</b> <tt>A</tt> | <tt>AAAA</tt></li>
--   <li><b>Amazon S3 buckets:</b> <tt>A</tt></li>
--   <li><b>Amazon Virtual Private Cloud interface VPC endpoints</b>
--   <tt>A</tt></li>
--   <li><b>Another resource record set in this hosted zone:</b> Specify
--   the type of the resource record set that you're creating the alias
--   for. All values are supported except <tt>NS</tt> and <tt>SOA</tt>.If
--   you're creating an alias record that has the same name as the hosted
--   zone (known as the zone apex), you can't route traffic to a record for
--   which the value of <tt>Type</tt> is <tt>CNAME</tt>. This is because
--   the alias record must have the same type as the record you're routing
--   traffic to, and creating a CNAME record for the zone apex isn't
--   supported even for an alias record.</li>
--   </ul>
resourceRecordSet_type :: Lens' ResourceRecordSet RRType

-- | A complex type containing a resource and its associated tags.
--   
--   <i>See:</i> <a>newResourceTagSet</a> smart constructor.
data ResourceTagSet
ResourceTagSet' :: Maybe Text -> Maybe TagResourceType -> Maybe (NonEmpty Tag) -> ResourceTagSet

-- | The ID for the specified resource.
[$sel:resourceId:ResourceTagSet'] :: ResourceTagSet -> Maybe Text

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
[$sel:resourceType:ResourceTagSet'] :: ResourceTagSet -> Maybe TagResourceType

-- | The tags associated with the specified resource.
[$sel:tags:ResourceTagSet'] :: ResourceTagSet -> Maybe (NonEmpty Tag)

-- | Create a value of <a>ResourceTagSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResourceTagSet'</a>,
--   <a>resourceTagSet_resourceId</a> - The ID for the specified resource.
--   
--   <a>$sel:resourceType:ResourceTagSet'</a>,
--   <a>resourceTagSet_resourceType</a> - The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
--   
--   <a>$sel:tags:ResourceTagSet'</a>, <a>resourceTagSet_tags</a> - The
--   tags associated with the specified resource.
newResourceTagSet :: ResourceTagSet

-- | The ID for the specified resource.
resourceTagSet_resourceId :: Lens' ResourceTagSet (Maybe Text)

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
resourceTagSet_resourceType :: Lens' ResourceTagSet (Maybe TagResourceType)

-- | The tags associated with the specified resource.
resourceTagSet_tags :: Lens' ResourceTagSet (Maybe (NonEmpty Tag))

-- | A complex type that contains the type of limit that you specified in
--   the request and the current value for that limit.
--   
--   <i>See:</i> <a>newReusableDelegationSetLimit</a> smart constructor.
data ReusableDelegationSetLimit
ReusableDelegationSetLimit' :: ReusableDelegationSetLimitType -> Natural -> ReusableDelegationSetLimit

-- | The limit that you requested:
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt>, the maximum number of
--   hosted zones that you can associate with the specified reusable
--   delegation set.
[$sel:type':ReusableDelegationSetLimit'] :: ReusableDelegationSetLimit -> ReusableDelegationSetLimitType

-- | The current value for the
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> limit.
[$sel:value:ReusableDelegationSetLimit'] :: ReusableDelegationSetLimit -> Natural

-- | Create a value of <a>ReusableDelegationSetLimit</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':ReusableDelegationSetLimit'</a>,
--   <a>reusableDelegationSetLimit_type</a> - The limit that you requested:
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt>, the maximum number of
--   hosted zones that you can associate with the specified reusable
--   delegation set.
--   
--   <a>$sel:value:ReusableDelegationSetLimit'</a>,
--   <a>reusableDelegationSetLimit_value</a> - The current value for the
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> limit.
newReusableDelegationSetLimit :: ReusableDelegationSetLimitType -> Natural -> ReusableDelegationSetLimit

-- | The limit that you requested:
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt>, the maximum number of
--   hosted zones that you can associate with the specified reusable
--   delegation set.
reusableDelegationSetLimit_type :: Lens' ReusableDelegationSetLimit ReusableDelegationSetLimitType

-- | The current value for the
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> limit.
reusableDelegationSetLimit_value :: Lens' ReusableDelegationSetLimit Natural

-- | A complex type that contains the status that one Amazon Route 53
--   health checker reports and the time of the health check.
--   
--   <i>See:</i> <a>newStatusReport</a> smart constructor.
data StatusReport
StatusReport' :: Maybe Text -> Maybe ISO8601 -> StatusReport

-- | A description of the status of the health check endpoint as reported
--   by one of the Amazon Route 53 health checkers.
[$sel:status:StatusReport'] :: StatusReport -> Maybe Text

-- | The date and time that the health checker performed the health check
--   in <a>ISO 8601 format</a> and Coordinated Universal Time (UTC). For
--   example, the value <tt>2017-03-27T17:48:16.751Z</tt> represents March
--   27, 2017 at 17:48:16.751 UTC.
[$sel:checkedTime:StatusReport'] :: StatusReport -> Maybe ISO8601

-- | Create a value of <a>StatusReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StatusReport'</a>, <a>statusReport_status</a> - A
--   description of the status of the health check endpoint as reported by
--   one of the Amazon Route 53 health checkers.
--   
--   <a>$sel:checkedTime:StatusReport'</a>, <a>statusReport_checkedTime</a>
--   - The date and time that the health checker performed the health check
--   in <a>ISO 8601 format</a> and Coordinated Universal Time (UTC). For
--   example, the value <tt>2017-03-27T17:48:16.751Z</tt> represents March
--   27, 2017 at 17:48:16.751 UTC.
newStatusReport :: StatusReport

-- | A description of the status of the health check endpoint as reported
--   by one of the Amazon Route 53 health checkers.
statusReport_status :: Lens' StatusReport (Maybe Text)

-- | The date and time that the health checker performed the health check
--   in <a>ISO 8601 format</a> and Coordinated Universal Time (UTC). For
--   example, the value <tt>2017-03-27T17:48:16.751Z</tt> represents March
--   27, 2017 at 17:48:16.751 UTC.
statusReport_checkedTime :: Lens' StatusReport (Maybe UTCTime)

-- | A complex type that contains information about a tag that you want to
--   add or edit for the specified health check or hosted zone.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The value of <tt>Value</tt> depends on the operation that you want to
--   perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Value</tt>
--   is the value that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Value</tt> is the new value that you want
--   to assign the tag.</li>
--   </ul>
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The value of <tt>Key</tt> depends on the operation that you want to
--   perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Key</tt> is
--   the name that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Key</tt> is the name of the tag that you
--   want to change the <tt>Value</tt> for.</li>
--   <li><b>Delete a key</b>: <tt>Key</tt> is the name of the tag you want
--   to remove.</li>
--   <li><b>Give a name to a health check</b>: Edit the default
--   <tt>Name</tt> tag. In the Amazon Route 53 console, the list of your
--   health checks includes a <b>Name</b> column that lets you see the name
--   that you've given to each health check.</li>
--   </ul>
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of <tt>Value</tt>
--   depends on the operation that you want to perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Value</tt>
--   is the value that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Value</tt> is the new value that you want
--   to assign the tag.</li>
--   </ul>
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The value of <tt>Key</tt>
--   depends on the operation that you want to perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Key</tt> is
--   the name that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Key</tt> is the name of the tag that you
--   want to change the <tt>Value</tt> for.</li>
--   <li><b>Delete a key</b>: <tt>Key</tt> is the name of the tag you want
--   to remove.</li>
--   <li><b>Give a name to a health check</b>: Edit the default
--   <tt>Name</tt> tag. In the Amazon Route 53 console, the list of your
--   health checks includes a <b>Name</b> column that lets you see the name
--   that you've given to each health check.</li>
--   </ul>
newTag :: Tag

-- | The value of <tt>Value</tt> depends on the operation that you want to
--   perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Value</tt>
--   is the value that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Value</tt> is the new value that you want
--   to assign the tag.</li>
--   </ul>
tag_value :: Lens' Tag (Maybe Text)

-- | The value of <tt>Key</tt> depends on the operation that you want to
--   perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Key</tt> is
--   the name that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Key</tt> is the name of the tag that you
--   want to change the <tt>Value</tt> for.</li>
--   <li><b>Delete a key</b>: <tt>Key</tt> is the name of the tag you want
--   to remove.</li>
--   <li><b>Give a name to a health check</b>: Edit the default
--   <tt>Name</tt> tag. In the Amazon Route 53 console, the list of your
--   health checks includes a <b>Name</b> column that lets you see the name
--   that you've given to each health check.</li>
--   </ul>
tag_key :: Lens' Tag (Maybe Text)

-- | A complex type that contains settings for a traffic policy.
--   
--   <i>See:</i> <a>newTrafficPolicy</a> smart constructor.
data TrafficPolicy
TrafficPolicy' :: Maybe Text -> Text -> Natural -> Text -> RRType -> Text -> TrafficPolicy

-- | The comment that you specify in the <tt>CreateTrafficPolicy</tt>
--   request, if any.
[$sel:comment:TrafficPolicy'] :: TrafficPolicy -> Maybe Text

-- | The ID that Amazon Route 53 assigned to a traffic policy when you
--   created it.
[$sel:id:TrafficPolicy'] :: TrafficPolicy -> Text

-- | The version number that Amazon Route 53 assigns to a traffic policy.
--   For a new traffic policy, the value of <tt>Version</tt> is always 1.
[$sel:version:TrafficPolicy'] :: TrafficPolicy -> Natural

-- | The name that you specified when you created the traffic policy.
[$sel:name:TrafficPolicy'] :: TrafficPolicy -> Text

-- | The DNS type of the resource record sets that Amazon Route 53 creates
--   when you use a traffic policy to create a traffic policy instance.
[$sel:type':TrafficPolicy'] :: TrafficPolicy -> RRType

-- | The definition of a traffic policy in JSON format. You specify the
--   JSON document to use for a new traffic policy in the
--   <tt>CreateTrafficPolicy</tt> request. For more information about the
--   JSON format, see <a>Traffic Policy Document Format</a>.
[$sel:document:TrafficPolicy'] :: TrafficPolicy -> Text

-- | Create a value of <a>TrafficPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:TrafficPolicy'</a>, <a>trafficPolicy_comment</a> - The
--   comment that you specify in the <tt>CreateTrafficPolicy</tt> request,
--   if any.
--   
--   <a>$sel:id:TrafficPolicy'</a>, <a>trafficPolicy_id</a> - The ID that
--   Amazon Route 53 assigned to a traffic policy when you created it.
--   
--   <a>$sel:version:TrafficPolicy'</a>, <a>trafficPolicy_version</a> - The
--   version number that Amazon Route 53 assigns to a traffic policy. For a
--   new traffic policy, the value of <tt>Version</tt> is always 1.
--   
--   <a>$sel:name:TrafficPolicy'</a>, <a>trafficPolicy_name</a> - The name
--   that you specified when you created the traffic policy.
--   
--   <a>$sel:type':TrafficPolicy'</a>, <a>trafficPolicy_type</a> - The DNS
--   type of the resource record sets that Amazon Route 53 creates when you
--   use a traffic policy to create a traffic policy instance.
--   
--   <a>$sel:document:TrafficPolicy'</a>, <a>trafficPolicy_document</a> -
--   The definition of a traffic policy in JSON format. You specify the
--   JSON document to use for a new traffic policy in the
--   <tt>CreateTrafficPolicy</tt> request. For more information about the
--   JSON format, see <a>Traffic Policy Document Format</a>.
newTrafficPolicy :: Text -> Natural -> Text -> RRType -> Text -> TrafficPolicy

-- | The comment that you specify in the <tt>CreateTrafficPolicy</tt>
--   request, if any.
trafficPolicy_comment :: Lens' TrafficPolicy (Maybe Text)

-- | The ID that Amazon Route 53 assigned to a traffic policy when you
--   created it.
trafficPolicy_id :: Lens' TrafficPolicy Text

-- | The version number that Amazon Route 53 assigns to a traffic policy.
--   For a new traffic policy, the value of <tt>Version</tt> is always 1.
trafficPolicy_version :: Lens' TrafficPolicy Natural

-- | The name that you specified when you created the traffic policy.
trafficPolicy_name :: Lens' TrafficPolicy Text

-- | The DNS type of the resource record sets that Amazon Route 53 creates
--   when you use a traffic policy to create a traffic policy instance.
trafficPolicy_type :: Lens' TrafficPolicy RRType

-- | The definition of a traffic policy in JSON format. You specify the
--   JSON document to use for a new traffic policy in the
--   <tt>CreateTrafficPolicy</tt> request. For more information about the
--   JSON format, see <a>Traffic Policy Document Format</a>.
trafficPolicy_document :: Lens' TrafficPolicy Text

-- | A complex type that contains settings for the new traffic policy
--   instance.
--   
--   <i>See:</i> <a>newTrafficPolicyInstance</a> smart constructor.
data TrafficPolicyInstance
TrafficPolicyInstance' :: Text -> ResourceId -> Text -> Natural -> Text -> Text -> Text -> Natural -> RRType -> TrafficPolicyInstance

-- | The ID that Amazon Route 53 assigned to the new traffic policy
--   instance.
[$sel:id:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Text

-- | The ID of the hosted zone that Amazon Route 53 created resource record
--   sets in.
[$sel:hostedZoneId:TrafficPolicyInstance'] :: TrafficPolicyInstance -> ResourceId

-- | The DNS name, such as www.example.com, for which Amazon Route 53
--   responds to queries by using the resource record sets that are
--   associated with this traffic policy instance.
[$sel:name:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Text

-- | The TTL that Amazon Route 53 assigned to all of the resource record
--   sets that it created in the specified hosted zone.
[$sel:ttl:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Natural

-- | The value of <tt>State</tt> is one of the following values:
--   
--   <ul>
--   <li><i>Applied</i> Amazon Route 53 has finished creating resource
--   record sets, and changes have propagated to all Route 53 edge
--   locations.</li>
--   <li><i>Creating</i> Route 53 is creating the resource record sets. Use
--   <tt>GetTrafficPolicyInstance</tt> to confirm that the
--   <tt>CreateTrafficPolicyInstance</tt> request completed
--   successfully.</li>
--   <li><i>Failed</i> Route 53 wasn't able to create or update the
--   resource record sets. When the value of <tt>State</tt> is
--   <tt>Failed</tt>, see <tt>Message</tt> for an explanation of what
--   caused the request to fail.</li>
--   </ul>
[$sel:state:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Text

-- | If <tt>State</tt> is <tt>Failed</tt>, an explanation of the reason for
--   the failure. If <tt>State</tt> is another value, <tt>Message</tt> is
--   empty.
[$sel:message:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Text

-- | The ID of the traffic policy that Amazon Route 53 used to create
--   resource record sets in the specified hosted zone.
[$sel:trafficPolicyId:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Text

-- | The version of the traffic policy that Amazon Route 53 used to create
--   resource record sets in the specified hosted zone.
[$sel:trafficPolicyVersion:TrafficPolicyInstance'] :: TrafficPolicyInstance -> Natural

-- | The DNS type that Amazon Route 53 assigned to all of the resource
--   record sets that it created for this traffic policy instance.
[$sel:trafficPolicyType:TrafficPolicyInstance'] :: TrafficPolicyInstance -> RRType

-- | Create a value of <a>TrafficPolicyInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:TrafficPolicyInstance'</a>, <a>trafficPolicyInstance_id</a>
--   - The ID that Amazon Route 53 assigned to the new traffic policy
--   instance.
--   
--   <a>$sel:hostedZoneId:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_hostedZoneId</a> - The ID of the hosted zone
--   that Amazon Route 53 created resource record sets in.
--   
--   <a>$sel:name:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_name</a> - The DNS name, such as
--   www.example.com, for which Amazon Route 53 responds to queries by
--   using the resource record sets that are associated with this traffic
--   policy instance.
--   
--   <a>$sel:ttl:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_ttl</a> - The TTL that Amazon Route 53
--   assigned to all of the resource record sets that it created in the
--   specified hosted zone.
--   
--   <a>$sel:state:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_state</a> - The value of <tt>State</tt> is
--   one of the following values:
--   
--   <ul>
--   <li><i>Applied</i> Amazon Route 53 has finished creating resource
--   record sets, and changes have propagated to all Route 53 edge
--   locations.</li>
--   <li><i>Creating</i> Route 53 is creating the resource record sets. Use
--   <tt>GetTrafficPolicyInstance</tt> to confirm that the
--   <tt>CreateTrafficPolicyInstance</tt> request completed
--   successfully.</li>
--   <li><i>Failed</i> Route 53 wasn't able to create or update the
--   resource record sets. When the value of <tt>State</tt> is
--   <tt>Failed</tt>, see <tt>Message</tt> for an explanation of what
--   caused the request to fail.</li>
--   </ul>
--   
--   <a>$sel:message:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_message</a> - If <tt>State</tt> is
--   <tt>Failed</tt>, an explanation of the reason for the failure. If
--   <tt>State</tt> is another value, <tt>Message</tt> is empty.
--   
--   <a>$sel:trafficPolicyId:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_trafficPolicyId</a> - The ID of the traffic
--   policy that Amazon Route 53 used to create resource record sets in the
--   specified hosted zone.
--   
--   <a>$sel:trafficPolicyVersion:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_trafficPolicyVersion</a> - The version of the
--   traffic policy that Amazon Route 53 used to create resource record
--   sets in the specified hosted zone.
--   
--   <a>$sel:trafficPolicyType:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_trafficPolicyType</a> - The DNS type that
--   Amazon Route 53 assigned to all of the resource record sets that it
--   created for this traffic policy instance.
newTrafficPolicyInstance :: Text -> ResourceId -> Text -> Natural -> Text -> Text -> Text -> Natural -> RRType -> TrafficPolicyInstance

-- | The ID that Amazon Route 53 assigned to the new traffic policy
--   instance.
trafficPolicyInstance_id :: Lens' TrafficPolicyInstance Text

-- | The ID of the hosted zone that Amazon Route 53 created resource record
--   sets in.
trafficPolicyInstance_hostedZoneId :: Lens' TrafficPolicyInstance ResourceId

-- | The DNS name, such as www.example.com, for which Amazon Route 53
--   responds to queries by using the resource record sets that are
--   associated with this traffic policy instance.
trafficPolicyInstance_name :: Lens' TrafficPolicyInstance Text

-- | The TTL that Amazon Route 53 assigned to all of the resource record
--   sets that it created in the specified hosted zone.
trafficPolicyInstance_ttl :: Lens' TrafficPolicyInstance Natural

-- | The value of <tt>State</tt> is one of the following values:
--   
--   <ul>
--   <li><i>Applied</i> Amazon Route 53 has finished creating resource
--   record sets, and changes have propagated to all Route 53 edge
--   locations.</li>
--   <li><i>Creating</i> Route 53 is creating the resource record sets. Use
--   <tt>GetTrafficPolicyInstance</tt> to confirm that the
--   <tt>CreateTrafficPolicyInstance</tt> request completed
--   successfully.</li>
--   <li><i>Failed</i> Route 53 wasn't able to create or update the
--   resource record sets. When the value of <tt>State</tt> is
--   <tt>Failed</tt>, see <tt>Message</tt> for an explanation of what
--   caused the request to fail.</li>
--   </ul>
trafficPolicyInstance_state :: Lens' TrafficPolicyInstance Text

-- | If <tt>State</tt> is <tt>Failed</tt>, an explanation of the reason for
--   the failure. If <tt>State</tt> is another value, <tt>Message</tt> is
--   empty.
trafficPolicyInstance_message :: Lens' TrafficPolicyInstance Text

-- | The ID of the traffic policy that Amazon Route 53 used to create
--   resource record sets in the specified hosted zone.
trafficPolicyInstance_trafficPolicyId :: Lens' TrafficPolicyInstance Text

-- | The version of the traffic policy that Amazon Route 53 used to create
--   resource record sets in the specified hosted zone.
trafficPolicyInstance_trafficPolicyVersion :: Lens' TrafficPolicyInstance Natural

-- | The DNS type that Amazon Route 53 assigned to all of the resource
--   record sets that it created for this traffic policy instance.
trafficPolicyInstance_trafficPolicyType :: Lens' TrafficPolicyInstance RRType

-- | A complex type that contains information about the latest version of
--   one traffic policy that is associated with the current Amazon Web
--   Services account.
--   
--   <i>See:</i> <a>newTrafficPolicySummary</a> smart constructor.
data TrafficPolicySummary
TrafficPolicySummary' :: Text -> Text -> RRType -> Natural -> Natural -> TrafficPolicySummary

-- | The ID that Amazon Route 53 assigned to the traffic policy when you
--   created it.
[$sel:id:TrafficPolicySummary'] :: TrafficPolicySummary -> Text

-- | The name that you specified for the traffic policy when you created
--   it.
[$sel:name:TrafficPolicySummary'] :: TrafficPolicySummary -> Text

-- | The DNS type of the resource record sets that Amazon Route 53 creates
--   when you use a traffic policy to create a traffic policy instance.
[$sel:type':TrafficPolicySummary'] :: TrafficPolicySummary -> RRType

-- | The version number of the latest version of the traffic policy.
[$sel:latestVersion:TrafficPolicySummary'] :: TrafficPolicySummary -> Natural

-- | The number of traffic policies that are associated with the current
--   Amazon Web Services account.
[$sel:trafficPolicyCount:TrafficPolicySummary'] :: TrafficPolicySummary -> Natural

-- | Create a value of <a>TrafficPolicySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:TrafficPolicySummary'</a>, <a>trafficPolicySummary_id</a> -
--   The ID that Amazon Route 53 assigned to the traffic policy when you
--   created it.
--   
--   <a>$sel:name:TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_name</a> - The name that you specified for the
--   traffic policy when you created it.
--   
--   <a>$sel:type':TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_type</a> - The DNS type of the resource record
--   sets that Amazon Route 53 creates when you use a traffic policy to
--   create a traffic policy instance.
--   
--   <a>$sel:latestVersion:TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_latestVersion</a> - The version number of the
--   latest version of the traffic policy.
--   
--   <a>$sel:trafficPolicyCount:TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_trafficPolicyCount</a> - The number of traffic
--   policies that are associated with the current Amazon Web Services
--   account.
newTrafficPolicySummary :: Text -> Text -> RRType -> Natural -> Natural -> TrafficPolicySummary

-- | The ID that Amazon Route 53 assigned to the traffic policy when you
--   created it.
trafficPolicySummary_id :: Lens' TrafficPolicySummary Text

-- | The name that you specified for the traffic policy when you created
--   it.
trafficPolicySummary_name :: Lens' TrafficPolicySummary Text

-- | The DNS type of the resource record sets that Amazon Route 53 creates
--   when you use a traffic policy to create a traffic policy instance.
trafficPolicySummary_type :: Lens' TrafficPolicySummary RRType

-- | The version number of the latest version of the traffic policy.
trafficPolicySummary_latestVersion :: Lens' TrafficPolicySummary Natural

-- | The number of traffic policies that are associated with the current
--   Amazon Web Services account.
trafficPolicySummary_trafficPolicyCount :: Lens' TrafficPolicySummary Natural

-- | (Private hosted zones only) A complex type that contains information
--   about an Amazon VPC.
--   
--   <i>See:</i> <a>newVPC</a> smart constructor.
data VPC
VPC' :: Maybe VPCRegion -> Maybe Text -> VPC

-- | (Private hosted zones only) The region that an Amazon VPC was created
--   in.
[$sel:vPCRegion:VPC'] :: VPC -> Maybe VPCRegion
[$sel:vPCId:VPC'] :: VPC -> Maybe Text

-- | Create a value of <a>VPC</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vPCRegion:VPC'</a>, <a>vpc_vPCRegion</a> - (Private hosted
--   zones only) The region that an Amazon VPC was created in.
--   
--   <a>$sel:vPCId:VPC'</a>, <a>vpc_vPCId</a> - Undocumented member.
newVPC :: VPC

-- | (Private hosted zones only) The region that an Amazon VPC was created
--   in.
vpc_vPCRegion :: Lens' VPC (Maybe VPCRegion)

-- | Undocumented member.
vpc_vPCId :: Lens' VPC (Maybe Text)


-- | Gets the value that Amazon Route 53 returns in response to a DNS
--   request for a specified record name and type. You can optionally
--   specify the IP address of a DNS resolver, an EDNS0 client subnet IP
--   address, and a subnet mask.
--   
--   This call only supports querying public hosted zones.
module Network.AWS.Route53.TestDNSAnswer

-- | Gets the value that Amazon Route 53 returns in response to a DNS
--   request for a specified record name and type. You can optionally
--   specify the IP address of a DNS resolver, an EDNS0 client subnet IP
--   address, and a subnet mask.
--   
--   <i>See:</i> <a>newTestDNSAnswer</a> smart constructor.
data TestDNSAnswer
TestDNSAnswer' :: Maybe Text -> Maybe Text -> Maybe Text -> ResourceId -> Text -> RRType -> TestDNSAnswer

-- | If you want to simulate a request from a specific DNS resolver,
--   specify the IP address for that resolver. If you omit this value,
--   <tt>TestDnsAnswer</tt> uses the IP address of a DNS resolver in the
--   Amazon Web Services US East (N. Virginia) Region (<tt>us-east-1</tt>).
[$sel:resolverIP:TestDNSAnswer'] :: TestDNSAnswer -> Maybe Text

-- | If the resolver that you specified for resolverip supports EDNS0,
--   specify the IPv4 or IPv6 address of a client in the applicable
--   location, for example, <tt>192.0.2.44</tt> or
--   <tt>2001:db8:85a3::8a2e:370:7334</tt>.
[$sel:eDNS0ClientSubnetIP:TestDNSAnswer'] :: TestDNSAnswer -> Maybe Text

-- | If you specify an IP address for <tt>edns0clientsubnetip</tt>, you can
--   optionally specify the number of bits of the IP address that you want
--   the checking tool to include in the DNS query. For example, if you
--   specify <tt>192.0.2.44</tt> for <tt>edns0clientsubnetip</tt> and
--   <tt>24</tt> for <tt>edns0clientsubnetmask</tt>, the checking tool will
--   simulate a request from 192.0.2.0/24. The default value is 24 bits for
--   IPv4 addresses and 64 bits for IPv6 addresses.
--   
--   The range of valid values depends on whether
--   <tt>edns0clientsubnetip</tt> is an IPv4 or an IPv6 address:
--   
--   <ul>
--   <li><b>IPv4</b>: Specify a value between 0 and 32</li>
--   <li><b>IPv6</b>: Specify a value between 0 and 128</li>
--   </ul>
[$sel:eDNS0ClientSubnetMask:TestDNSAnswer'] :: TestDNSAnswer -> Maybe Text

-- | The ID of the hosted zone that you want Amazon Route 53 to simulate a
--   query for.
[$sel:hostedZoneId:TestDNSAnswer'] :: TestDNSAnswer -> ResourceId

-- | The name of the resource record set that you want Amazon Route 53 to
--   simulate a query for.
[$sel:recordName:TestDNSAnswer'] :: TestDNSAnswer -> Text

-- | The type of the resource record set.
[$sel:recordType:TestDNSAnswer'] :: TestDNSAnswer -> RRType

-- | Create a value of <a>TestDNSAnswer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverIP:TestDNSAnswer'</a>, <a>testDNSAnswer_resolverIP</a>
--   - If you want to simulate a request from a specific DNS resolver,
--   specify the IP address for that resolver. If you omit this value,
--   <tt>TestDnsAnswer</tt> uses the IP address of a DNS resolver in the
--   Amazon Web Services US East (N. Virginia) Region (<tt>us-east-1</tt>).
--   
--   <a>$sel:eDNS0ClientSubnetIP:TestDNSAnswer'</a>,
--   <a>testDNSAnswer_eDNS0ClientSubnetIP</a> - If the resolver that you
--   specified for resolverip supports EDNS0, specify the IPv4 or IPv6
--   address of a client in the applicable location, for example,
--   <tt>192.0.2.44</tt> or <tt>2001:db8:85a3::8a2e:370:7334</tt>.
--   
--   <a>$sel:eDNS0ClientSubnetMask:TestDNSAnswer'</a>,
--   <a>testDNSAnswer_eDNS0ClientSubnetMask</a> - If you specify an IP
--   address for <tt>edns0clientsubnetip</tt>, you can optionally specify
--   the number of bits of the IP address that you want the checking tool
--   to include in the DNS query. For example, if you specify
--   <tt>192.0.2.44</tt> for <tt>edns0clientsubnetip</tt> and <tt>24</tt>
--   for <tt>edns0clientsubnetmask</tt>, the checking tool will simulate a
--   request from 192.0.2.0/24. The default value is 24 bits for IPv4
--   addresses and 64 bits for IPv6 addresses.
--   
--   The range of valid values depends on whether
--   <tt>edns0clientsubnetip</tt> is an IPv4 or an IPv6 address:
--   
--   <ul>
--   <li><b>IPv4</b>: Specify a value between 0 and 32</li>
--   <li><b>IPv6</b>: Specify a value between 0 and 128</li>
--   </ul>
--   
--   <a>$sel:hostedZoneId:TestDNSAnswer'</a>,
--   <a>testDNSAnswer_hostedZoneId</a> - The ID of the hosted zone that you
--   want Amazon Route 53 to simulate a query for.
--   
--   <a>$sel:recordName:TestDNSAnswer'</a>, <a>testDNSAnswer_recordName</a>
--   - The name of the resource record set that you want Amazon Route 53 to
--   simulate a query for.
--   
--   <a>$sel:recordType:TestDNSAnswer'</a>, <a>testDNSAnswer_recordType</a>
--   - The type of the resource record set.
newTestDNSAnswer :: ResourceId -> Text -> RRType -> TestDNSAnswer

-- | If you want to simulate a request from a specific DNS resolver,
--   specify the IP address for that resolver. If you omit this value,
--   <tt>TestDnsAnswer</tt> uses the IP address of a DNS resolver in the
--   Amazon Web Services US East (N. Virginia) Region (<tt>us-east-1</tt>).
testDNSAnswer_resolverIP :: Lens' TestDNSAnswer (Maybe Text)

-- | If the resolver that you specified for resolverip supports EDNS0,
--   specify the IPv4 or IPv6 address of a client in the applicable
--   location, for example, <tt>192.0.2.44</tt> or
--   <tt>2001:db8:85a3::8a2e:370:7334</tt>.
testDNSAnswer_eDNS0ClientSubnetIP :: Lens' TestDNSAnswer (Maybe Text)

-- | If you specify an IP address for <tt>edns0clientsubnetip</tt>, you can
--   optionally specify the number of bits of the IP address that you want
--   the checking tool to include in the DNS query. For example, if you
--   specify <tt>192.0.2.44</tt> for <tt>edns0clientsubnetip</tt> and
--   <tt>24</tt> for <tt>edns0clientsubnetmask</tt>, the checking tool will
--   simulate a request from 192.0.2.0/24. The default value is 24 bits for
--   IPv4 addresses and 64 bits for IPv6 addresses.
--   
--   The range of valid values depends on whether
--   <tt>edns0clientsubnetip</tt> is an IPv4 or an IPv6 address:
--   
--   <ul>
--   <li><b>IPv4</b>: Specify a value between 0 and 32</li>
--   <li><b>IPv6</b>: Specify a value between 0 and 128</li>
--   </ul>
testDNSAnswer_eDNS0ClientSubnetMask :: Lens' TestDNSAnswer (Maybe Text)

-- | The ID of the hosted zone that you want Amazon Route 53 to simulate a
--   query for.
testDNSAnswer_hostedZoneId :: Lens' TestDNSAnswer ResourceId

-- | The name of the resource record set that you want Amazon Route 53 to
--   simulate a query for.
testDNSAnswer_recordName :: Lens' TestDNSAnswer Text

-- | The type of the resource record set.
testDNSAnswer_recordType :: Lens' TestDNSAnswer RRType

-- | A complex type that contains the response to a <tt>TestDNSAnswer</tt>
--   request.
--   
--   <i>See:</i> <a>newTestDNSAnswerResponse</a> smart constructor.
data TestDNSAnswerResponse
TestDNSAnswerResponse' :: Int -> Text -> Text -> RRType -> [Text] -> Text -> Text -> TestDNSAnswerResponse

-- | The response's http status code.
[$sel:httpStatus:TestDNSAnswerResponse'] :: TestDNSAnswerResponse -> Int

-- | The Amazon Route 53 name server used to respond to the request.
[$sel:nameserver:TestDNSAnswerResponse'] :: TestDNSAnswerResponse -> Text

-- | The name of the resource record set that you submitted a request for.
[$sel:recordName:TestDNSAnswerResponse'] :: TestDNSAnswerResponse -> Text

-- | The type of the resource record set that you submitted a request for.
[$sel:recordType:TestDNSAnswerResponse'] :: TestDNSAnswerResponse -> RRType

-- | A list that contains values that Amazon Route 53 returned for this
--   resource record set.
[$sel:recordData:TestDNSAnswerResponse'] :: TestDNSAnswerResponse -> [Text]

-- | A code that indicates whether the request is valid or not. The most
--   common response code is <tt>NOERROR</tt>, meaning that the request is
--   valid. If the response is not valid, Amazon Route 53 returns a
--   response code that describes the error. For a list of possible
--   response codes, see <a>DNS RCODES</a> on the IANA website.
[$sel:responseCode:TestDNSAnswerResponse'] :: TestDNSAnswerResponse -> Text

-- | The protocol that Amazon Route 53 used to respond to the request,
--   either <tt>UDP</tt> or <tt>TCP</tt>.
[$sel:protocol:TestDNSAnswerResponse'] :: TestDNSAnswerResponse -> Text

-- | Create a value of <a>TestDNSAnswerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TestDNSAnswerResponse'</a>,
--   <a>testDNSAnswerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:nameserver:TestDNSAnswerResponse'</a>,
--   <a>testDNSAnswerResponse_nameserver</a> - The Amazon Route 53 name
--   server used to respond to the request.
--   
--   <a>$sel:recordName:TestDNSAnswer'</a>,
--   <a>testDNSAnswerResponse_recordName</a> - The name of the resource
--   record set that you submitted a request for.
--   
--   <a>$sel:recordType:TestDNSAnswer'</a>,
--   <a>testDNSAnswerResponse_recordType</a> - The type of the resource
--   record set that you submitted a request for.
--   
--   <a>$sel:recordData:TestDNSAnswerResponse'</a>,
--   <a>testDNSAnswerResponse_recordData</a> - A list that contains values
--   that Amazon Route 53 returned for this resource record set.
--   
--   <a>$sel:responseCode:TestDNSAnswerResponse'</a>,
--   <a>testDNSAnswerResponse_responseCode</a> - A code that indicates
--   whether the request is valid or not. The most common response code is
--   <tt>NOERROR</tt>, meaning that the request is valid. If the response
--   is not valid, Amazon Route 53 returns a response code that describes
--   the error. For a list of possible response codes, see <a>DNS
--   RCODES</a> on the IANA website.
--   
--   <a>$sel:protocol:TestDNSAnswerResponse'</a>,
--   <a>testDNSAnswerResponse_protocol</a> - The protocol that Amazon Route
--   53 used to respond to the request, either <tt>UDP</tt> or
--   <tt>TCP</tt>.
newTestDNSAnswerResponse :: Int -> Text -> Text -> RRType -> Text -> Text -> TestDNSAnswerResponse

-- | The response's http status code.
testDNSAnswerResponse_httpStatus :: Lens' TestDNSAnswerResponse Int

-- | The Amazon Route 53 name server used to respond to the request.
testDNSAnswerResponse_nameserver :: Lens' TestDNSAnswerResponse Text

-- | The name of the resource record set that you submitted a request for.
testDNSAnswerResponse_recordName :: Lens' TestDNSAnswerResponse Text

-- | The type of the resource record set that you submitted a request for.
testDNSAnswerResponse_recordType :: Lens' TestDNSAnswerResponse RRType

-- | A list that contains values that Amazon Route 53 returned for this
--   resource record set.
testDNSAnswerResponse_recordData :: Lens' TestDNSAnswerResponse [Text]

-- | A code that indicates whether the request is valid or not. The most
--   common response code is <tt>NOERROR</tt>, meaning that the request is
--   valid. If the response is not valid, Amazon Route 53 returns a
--   response code that describes the error. For a list of possible
--   response codes, see <a>DNS RCODES</a> on the IANA website.
testDNSAnswerResponse_responseCode :: Lens' TestDNSAnswerResponse Text

-- | The protocol that Amazon Route 53 used to respond to the request,
--   either <tt>UDP</tt> or <tt>TCP</tt>.
testDNSAnswerResponse_protocol :: Lens' TestDNSAnswerResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.TestDNSAnswer.TestDNSAnswer
instance GHC.Show.Show Network.AWS.Route53.TestDNSAnswer.TestDNSAnswer
instance GHC.Read.Read Network.AWS.Route53.TestDNSAnswer.TestDNSAnswer
instance GHC.Classes.Eq Network.AWS.Route53.TestDNSAnswer.TestDNSAnswer
instance GHC.Generics.Generic Network.AWS.Route53.TestDNSAnswer.TestDNSAnswerResponse
instance GHC.Show.Show Network.AWS.Route53.TestDNSAnswer.TestDNSAnswerResponse
instance GHC.Read.Read Network.AWS.Route53.TestDNSAnswer.TestDNSAnswerResponse
instance GHC.Classes.Eq Network.AWS.Route53.TestDNSAnswer.TestDNSAnswerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.TestDNSAnswer.TestDNSAnswer
instance Control.DeepSeq.NFData Network.AWS.Route53.TestDNSAnswer.TestDNSAnswerResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.TestDNSAnswer.TestDNSAnswer
instance Control.DeepSeq.NFData Network.AWS.Route53.TestDNSAnswer.TestDNSAnswer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.TestDNSAnswer.TestDNSAnswer
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.TestDNSAnswer.TestDNSAnswer
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.TestDNSAnswer.TestDNSAnswer


-- | Gets a list of the VPCs that were created by other accounts and that
--   can be associated with a specified hosted zone because you've
--   submitted one or more <tt>CreateVPCAssociationAuthorization</tt>
--   requests.
--   
--   The response includes a <tt>VPCs</tt> element with a <tt>VPC</tt>
--   child element for each VPC that can be associated with the hosted
--   zone.
--   
--   This operation returns paginated results.
module Network.AWS.Route53.ListVPCAssociationAuthorizations

-- | A complex type that contains information about that can be associated
--   with your hosted zone.
--   
--   <i>See:</i> <a>newListVPCAssociationAuthorizations</a> smart
--   constructor.
data ListVPCAssociationAuthorizations
ListVPCAssociationAuthorizations' :: Maybe Text -> Maybe Text -> ResourceId -> ListVPCAssociationAuthorizations

-- | <i>Optional</i>: If a response includes a <tt>NextToken</tt> element,
--   there are more VPCs that can be associated with the specified hosted
--   zone. To get the next page of results, submit another request, and
--   include the value of <tt>NextToken</tt> from the response in the
--   <tt>nexttoken</tt> parameter in another
--   <tt>ListVPCAssociationAuthorizations</tt> request.
[$sel:nextToken:ListVPCAssociationAuthorizations'] :: ListVPCAssociationAuthorizations -> Maybe Text

-- | <i>Optional</i>: An integer that specifies the maximum number of VPCs
--   that you want Amazon Route 53 to return. If you don't specify a value
--   for <tt>MaxResults</tt>, Route 53 returns up to 50 VPCs per page.
[$sel:maxResults:ListVPCAssociationAuthorizations'] :: ListVPCAssociationAuthorizations -> Maybe Text

-- | The ID of the hosted zone for which you want a list of VPCs that can
--   be associated with the hosted zone.
[$sel:hostedZoneId:ListVPCAssociationAuthorizations'] :: ListVPCAssociationAuthorizations -> ResourceId

-- | Create a value of <a>ListVPCAssociationAuthorizations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVPCAssociationAuthorizations'</a>,
--   <a>listVPCAssociationAuthorizations_nextToken</a> - <i>Optional</i>:
--   If a response includes a <tt>NextToken</tt> element, there are more
--   VPCs that can be associated with the specified hosted zone. To get the
--   next page of results, submit another request, and include the value of
--   <tt>NextToken</tt> from the response in the <tt>nexttoken</tt>
--   parameter in another <tt>ListVPCAssociationAuthorizations</tt>
--   request.
--   
--   <a>$sel:maxResults:ListVPCAssociationAuthorizations'</a>,
--   <a>listVPCAssociationAuthorizations_maxResults</a> - <i>Optional</i>:
--   An integer that specifies the maximum number of VPCs that you want
--   Amazon Route 53 to return. If you don't specify a value for
--   <tt>MaxResults</tt>, Route 53 returns up to 50 VPCs per page.
--   
--   <a>$sel:hostedZoneId:ListVPCAssociationAuthorizations'</a>,
--   <a>listVPCAssociationAuthorizations_hostedZoneId</a> - The ID of the
--   hosted zone for which you want a list of VPCs that can be associated
--   with the hosted zone.
newListVPCAssociationAuthorizations :: ResourceId -> ListVPCAssociationAuthorizations

-- | <i>Optional</i>: If a response includes a <tt>NextToken</tt> element,
--   there are more VPCs that can be associated with the specified hosted
--   zone. To get the next page of results, submit another request, and
--   include the value of <tt>NextToken</tt> from the response in the
--   <tt>nexttoken</tt> parameter in another
--   <tt>ListVPCAssociationAuthorizations</tt> request.
listVPCAssociationAuthorizations_nextToken :: Lens' ListVPCAssociationAuthorizations (Maybe Text)

-- | <i>Optional</i>: An integer that specifies the maximum number of VPCs
--   that you want Amazon Route 53 to return. If you don't specify a value
--   for <tt>MaxResults</tt>, Route 53 returns up to 50 VPCs per page.
listVPCAssociationAuthorizations_maxResults :: Lens' ListVPCAssociationAuthorizations (Maybe Text)

-- | The ID of the hosted zone for which you want a list of VPCs that can
--   be associated with the hosted zone.
listVPCAssociationAuthorizations_hostedZoneId :: Lens' ListVPCAssociationAuthorizations ResourceId

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListVPCAssociationAuthorizationsResponse</a> smart
--   constructor.
data ListVPCAssociationAuthorizationsResponse
ListVPCAssociationAuthorizationsResponse' :: Maybe Text -> Int -> ResourceId -> NonEmpty VPC -> ListVPCAssociationAuthorizationsResponse

-- | When the response includes a <tt>NextToken</tt> element, there are
--   more VPCs that can be associated with the specified hosted zone. To
--   get the next page of VPCs, submit another
--   <tt>ListVPCAssociationAuthorizations</tt> request, and include the
--   value of the <tt>NextToken</tt> element from the response in the
--   <tt>nexttoken</tt> request parameter.
[$sel:nextToken:ListVPCAssociationAuthorizationsResponse'] :: ListVPCAssociationAuthorizationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListVPCAssociationAuthorizationsResponse'] :: ListVPCAssociationAuthorizationsResponse -> Int

-- | The ID of the hosted zone that you can associate the listed VPCs with.
[$sel:hostedZoneId:ListVPCAssociationAuthorizationsResponse'] :: ListVPCAssociationAuthorizationsResponse -> ResourceId

-- | The list of VPCs that are authorized to be associated with the
--   specified hosted zone.
[$sel:vPCs:ListVPCAssociationAuthorizationsResponse'] :: ListVPCAssociationAuthorizationsResponse -> NonEmpty VPC

-- | Create a value of <a>ListVPCAssociationAuthorizationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVPCAssociationAuthorizations'</a>,
--   <a>listVPCAssociationAuthorizationsResponse_nextToken</a> - When the
--   response includes a <tt>NextToken</tt> element, there are more VPCs
--   that can be associated with the specified hosted zone. To get the next
--   page of VPCs, submit another <tt>ListVPCAssociationAuthorizations</tt>
--   request, and include the value of the <tt>NextToken</tt> element from
--   the response in the <tt>nexttoken</tt> request parameter.
--   
--   <a>$sel:httpStatus:ListVPCAssociationAuthorizationsResponse'</a>,
--   <a>listVPCAssociationAuthorizationsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:hostedZoneId:ListVPCAssociationAuthorizations'</a>,
--   <a>listVPCAssociationAuthorizationsResponse_hostedZoneId</a> - The ID
--   of the hosted zone that you can associate the listed VPCs with.
--   
--   <a>$sel:vPCs:ListVPCAssociationAuthorizationsResponse'</a>,
--   <a>listVPCAssociationAuthorizationsResponse_vPCs</a> - The list of
--   VPCs that are authorized to be associated with the specified hosted
--   zone.
newListVPCAssociationAuthorizationsResponse :: Int -> ResourceId -> NonEmpty VPC -> ListVPCAssociationAuthorizationsResponse

-- | When the response includes a <tt>NextToken</tt> element, there are
--   more VPCs that can be associated with the specified hosted zone. To
--   get the next page of VPCs, submit another
--   <tt>ListVPCAssociationAuthorizations</tt> request, and include the
--   value of the <tt>NextToken</tt> element from the response in the
--   <tt>nexttoken</tt> request parameter.
listVPCAssociationAuthorizationsResponse_nextToken :: Lens' ListVPCAssociationAuthorizationsResponse (Maybe Text)

-- | The response's http status code.
listVPCAssociationAuthorizationsResponse_httpStatus :: Lens' ListVPCAssociationAuthorizationsResponse Int

-- | The ID of the hosted zone that you can associate the listed VPCs with.
listVPCAssociationAuthorizationsResponse_hostedZoneId :: Lens' ListVPCAssociationAuthorizationsResponse ResourceId

-- | The list of VPCs that are authorized to be associated with the
--   specified hosted zone.
listVPCAssociationAuthorizationsResponse_vPCs :: Lens' ListVPCAssociationAuthorizationsResponse (NonEmpty VPC)
instance GHC.Generics.Generic Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizations
instance GHC.Show.Show Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizations
instance GHC.Read.Read Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizations
instance GHC.Classes.Eq Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizations
instance GHC.Generics.Generic Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizationsResponse
instance GHC.Show.Show Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizationsResponse
instance GHC.Read.Read Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizationsResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizations
instance Control.DeepSeq.NFData Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizations
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizations
instance Control.DeepSeq.NFData Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizations
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListVPCAssociationAuthorizations.ListVPCAssociationAuthorizations


-- | Gets information about all of the versions for a specified traffic
--   policy.
--   
--   Traffic policy versions are listed in numerical order by
--   <tt>VersionNumber</tt>.
module Network.AWS.Route53.ListTrafficPolicyVersions

-- | A complex type that contains the information about the request to list
--   your traffic policies.
--   
--   <i>See:</i> <a>newListTrafficPolicyVersions</a> smart constructor.
data ListTrafficPolicyVersions
ListTrafficPolicyVersions' :: Maybe Text -> Maybe Text -> Text -> ListTrafficPolicyVersions

-- | The maximum number of traffic policy versions that you want Amazon
--   Route 53 to include in the response body for this request. If the
--   specified traffic policy has more than <tt>MaxItems</tt> versions, the
--   value of <tt>IsTruncated</tt> in the response is <tt>true</tt>, and
--   the value of the <tt>TrafficPolicyVersionMarker</tt> element is the ID
--   of the first version that Route 53 will return if you submit another
--   request.
[$sel:maxItems:ListTrafficPolicyVersions'] :: ListTrafficPolicyVersions -> Maybe Text

-- | For your first request to <tt>ListTrafficPolicyVersions</tt>, don't
--   include the <tt>TrafficPolicyVersionMarker</tt> parameter.
--   
--   If you have more traffic policy versions than the value of
--   <tt>MaxItems</tt>, <tt>ListTrafficPolicyVersions</tt> returns only the
--   first group of <tt>MaxItems</tt> versions. To get more traffic policy
--   versions, submit another <tt>ListTrafficPolicyVersions</tt> request.
--   For the value of <tt>TrafficPolicyVersionMarker</tt>, specify the
--   value of <tt>TrafficPolicyVersionMarker</tt> in the previous response.
[$sel:trafficPolicyVersionMarker:ListTrafficPolicyVersions'] :: ListTrafficPolicyVersions -> Maybe Text

-- | Specify the value of <tt>Id</tt> of the traffic policy for which you
--   want to list all versions.
[$sel:id:ListTrafficPolicyVersions'] :: ListTrafficPolicyVersions -> Text

-- | Create a value of <a>ListTrafficPolicyVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxItems:ListTrafficPolicyVersions'</a>,
--   <a>listTrafficPolicyVersions_maxItems</a> - The maximum number of
--   traffic policy versions that you want Amazon Route 53 to include in
--   the response body for this request. If the specified traffic policy
--   has more than <tt>MaxItems</tt> versions, the value of
--   <tt>IsTruncated</tt> in the response is <tt>true</tt>, and the value
--   of the <tt>TrafficPolicyVersionMarker</tt> element is the ID of the
--   first version that Route 53 will return if you submit another request.
--   
--   <a>$sel:trafficPolicyVersionMarker:ListTrafficPolicyVersions'</a>,
--   <a>listTrafficPolicyVersions_trafficPolicyVersionMarker</a> - For your
--   first request to <tt>ListTrafficPolicyVersions</tt>, don't include the
--   <tt>TrafficPolicyVersionMarker</tt> parameter.
--   
--   If you have more traffic policy versions than the value of
--   <tt>MaxItems</tt>, <tt>ListTrafficPolicyVersions</tt> returns only the
--   first group of <tt>MaxItems</tt> versions. To get more traffic policy
--   versions, submit another <tt>ListTrafficPolicyVersions</tt> request.
--   For the value of <tt>TrafficPolicyVersionMarker</tt>, specify the
--   value of <tt>TrafficPolicyVersionMarker</tt> in the previous response.
--   
--   <a>$sel:id:ListTrafficPolicyVersions'</a>,
--   <a>listTrafficPolicyVersions_id</a> - Specify the value of <tt>Id</tt>
--   of the traffic policy for which you want to list all versions.
newListTrafficPolicyVersions :: Text -> ListTrafficPolicyVersions

-- | The maximum number of traffic policy versions that you want Amazon
--   Route 53 to include in the response body for this request. If the
--   specified traffic policy has more than <tt>MaxItems</tt> versions, the
--   value of <tt>IsTruncated</tt> in the response is <tt>true</tt>, and
--   the value of the <tt>TrafficPolicyVersionMarker</tt> element is the ID
--   of the first version that Route 53 will return if you submit another
--   request.
listTrafficPolicyVersions_maxItems :: Lens' ListTrafficPolicyVersions (Maybe Text)

-- | For your first request to <tt>ListTrafficPolicyVersions</tt>, don't
--   include the <tt>TrafficPolicyVersionMarker</tt> parameter.
--   
--   If you have more traffic policy versions than the value of
--   <tt>MaxItems</tt>, <tt>ListTrafficPolicyVersions</tt> returns only the
--   first group of <tt>MaxItems</tt> versions. To get more traffic policy
--   versions, submit another <tt>ListTrafficPolicyVersions</tt> request.
--   For the value of <tt>TrafficPolicyVersionMarker</tt>, specify the
--   value of <tt>TrafficPolicyVersionMarker</tt> in the previous response.
listTrafficPolicyVersions_trafficPolicyVersionMarker :: Lens' ListTrafficPolicyVersions (Maybe Text)

-- | Specify the value of <tt>Id</tt> of the traffic policy for which you
--   want to list all versions.
listTrafficPolicyVersions_id :: Lens' ListTrafficPolicyVersions Text

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListTrafficPolicyVersionsResponse</a> smart
--   constructor.
data ListTrafficPolicyVersionsResponse
ListTrafficPolicyVersionsResponse' :: Int -> [TrafficPolicy] -> Bool -> Text -> Text -> ListTrafficPolicyVersionsResponse

-- | The response's http status code.
[$sel:httpStatus:ListTrafficPolicyVersionsResponse'] :: ListTrafficPolicyVersionsResponse -> Int

-- | A list that contains one <tt>TrafficPolicy</tt> element for each
--   traffic policy version that is associated with the specified traffic
--   policy.
[$sel:trafficPolicies:ListTrafficPolicyVersionsResponse'] :: ListTrafficPolicyVersionsResponse -> [TrafficPolicy]

-- | A flag that indicates whether there are more traffic policies to be
--   listed. If the response was truncated, you can get the next group of
--   traffic policies by submitting another
--   <tt>ListTrafficPolicyVersions</tt> request and specifying the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
[$sel:isTruncated:ListTrafficPolicyVersionsResponse'] :: ListTrafficPolicyVersionsResponse -> Bool

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>TrafficPolicyVersionMarker</tt> identifies the first traffic
--   policy that Amazon Route 53 will return if you submit another request.
--   Call <tt>ListTrafficPolicyVersions</tt> again and specify the value of
--   <tt>TrafficPolicyVersionMarker</tt> in the
--   <tt>TrafficPolicyVersionMarker</tt> request parameter.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
[$sel:trafficPolicyVersionMarker:ListTrafficPolicyVersionsResponse'] :: ListTrafficPolicyVersionsResponse -> Text

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the <tt>ListTrafficPolicyVersions</tt> request that produced the
--   current response.
[$sel:maxItems:ListTrafficPolicyVersionsResponse'] :: ListTrafficPolicyVersionsResponse -> Text

-- | Create a value of <a>ListTrafficPolicyVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListTrafficPolicyVersionsResponse'</a>,
--   <a>listTrafficPolicyVersionsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:trafficPolicies:ListTrafficPolicyVersionsResponse'</a>,
--   <a>listTrafficPolicyVersionsResponse_trafficPolicies</a> - A list that
--   contains one <tt>TrafficPolicy</tt> element for each traffic policy
--   version that is associated with the specified traffic policy.
--   
--   <a>$sel:isTruncated:ListTrafficPolicyVersionsResponse'</a>,
--   <a>listTrafficPolicyVersionsResponse_isTruncated</a> - A flag that
--   indicates whether there are more traffic policies to be listed. If the
--   response was truncated, you can get the next group of traffic policies
--   by submitting another <tt>ListTrafficPolicyVersions</tt> request and
--   specifying the value of <tt>NextMarker</tt> in the <tt>marker</tt>
--   parameter.
--   
--   <a>$sel:trafficPolicyVersionMarker:ListTrafficPolicyVersions'</a>,
--   <a>listTrafficPolicyVersionsResponse_trafficPolicyVersionMarker</a> -
--   If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>TrafficPolicyVersionMarker</tt> identifies the first traffic
--   policy that Amazon Route 53 will return if you submit another request.
--   Call <tt>ListTrafficPolicyVersions</tt> again and specify the value of
--   <tt>TrafficPolicyVersionMarker</tt> in the
--   <tt>TrafficPolicyVersionMarker</tt> request parameter.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
--   
--   <a>$sel:maxItems:ListTrafficPolicyVersions'</a>,
--   <a>listTrafficPolicyVersionsResponse_maxItems</a> - The value that you
--   specified for the <tt>maxitems</tt> parameter in the
--   <tt>ListTrafficPolicyVersions</tt> request that produced the current
--   response.
newListTrafficPolicyVersionsResponse :: Int -> Bool -> Text -> Text -> ListTrafficPolicyVersionsResponse

-- | The response's http status code.
listTrafficPolicyVersionsResponse_httpStatus :: Lens' ListTrafficPolicyVersionsResponse Int

-- | A list that contains one <tt>TrafficPolicy</tt> element for each
--   traffic policy version that is associated with the specified traffic
--   policy.
listTrafficPolicyVersionsResponse_trafficPolicies :: Lens' ListTrafficPolicyVersionsResponse [TrafficPolicy]

-- | A flag that indicates whether there are more traffic policies to be
--   listed. If the response was truncated, you can get the next group of
--   traffic policies by submitting another
--   <tt>ListTrafficPolicyVersions</tt> request and specifying the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
listTrafficPolicyVersionsResponse_isTruncated :: Lens' ListTrafficPolicyVersionsResponse Bool

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>TrafficPolicyVersionMarker</tt> identifies the first traffic
--   policy that Amazon Route 53 will return if you submit another request.
--   Call <tt>ListTrafficPolicyVersions</tt> again and specify the value of
--   <tt>TrafficPolicyVersionMarker</tt> in the
--   <tt>TrafficPolicyVersionMarker</tt> request parameter.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
listTrafficPolicyVersionsResponse_trafficPolicyVersionMarker :: Lens' ListTrafficPolicyVersionsResponse Text

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the <tt>ListTrafficPolicyVersions</tt> request that produced the
--   current response.
listTrafficPolicyVersionsResponse_maxItems :: Lens' ListTrafficPolicyVersionsResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersions
instance GHC.Show.Show Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersions
instance GHC.Read.Read Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersions
instance GHC.Classes.Eq Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersions
instance GHC.Generics.Generic Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersionsResponse
instance GHC.Show.Show Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersionsResponse
instance GHC.Read.Read Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersionsResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersions
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersions
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListTrafficPolicyVersions.ListTrafficPolicyVersions


-- | Gets information about the traffic policy instances that you created
--   by using a specify traffic policy version.
--   
--   After you submit a <tt>CreateTrafficPolicyInstance</tt> or an
--   <tt>UpdateTrafficPolicyInstance</tt> request, there's a brief delay
--   while Amazon Route 53 creates the resource record sets that are
--   specified in the traffic policy definition. For more information, see
--   the <tt>State</tt> response element.
--   
--   Route 53 returns a maximum of 100 items in each response. If you have
--   a lot of traffic policy instances, you can use the <tt>MaxItems</tt>
--   parameter to list them in groups of up to 100.
module Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy

-- | A complex type that contains the information about the request to list
--   your traffic policy instances.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstancesByPolicy</a> smart
--   constructor.
data ListTrafficPolicyInstancesByPolicy
ListTrafficPolicyInstancesByPolicy' :: Maybe RRType -> Maybe Text -> Maybe ResourceId -> Maybe Text -> Text -> Natural -> ListTrafficPolicyInstancesByPolicy

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>trafficpolicyinstancetype</tt>, specify the value
--   of <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance that
--   Amazon Route 53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
[$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByPolicy'] :: ListTrafficPolicyInstancesByPolicy -> Maybe RRType

-- | The maximum number of traffic policy instances to be included in the
--   response body for this request. If you have more than
--   <tt>MaxItems</tt> traffic policy instances, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first traffic
--   policy instance that Amazon Route 53 will return if you submit another
--   request.
[$sel:maxItems:ListTrafficPolicyInstancesByPolicy'] :: ListTrafficPolicyInstancesByPolicy -> Maybe Text

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>hostedzoneid</tt>, specify the value of
--   <tt>HostedZoneIdMarker</tt> from the previous response, which is the
--   hosted zone ID of the first traffic policy instance that Amazon Route
--   53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
[$sel:hostedZoneIdMarker:ListTrafficPolicyInstancesByPolicy'] :: ListTrafficPolicyInstancesByPolicy -> Maybe ResourceId

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>trafficpolicyinstancename</tt>, specify the value
--   of <tt>TrafficPolicyInstanceNameMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance that
--   Amazon Route 53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
[$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByPolicy'] :: ListTrafficPolicyInstancesByPolicy -> Maybe Text

-- | The ID of the traffic policy for which you want to list traffic policy
--   instances.
[$sel:trafficPolicyId:ListTrafficPolicyInstancesByPolicy'] :: ListTrafficPolicyInstancesByPolicy -> Text

-- | The version of the traffic policy for which you want to list traffic
--   policy instances. The version must be associated with the traffic
--   policy that is specified by <tt>TrafficPolicyId</tt>.
[$sel:trafficPolicyVersion:ListTrafficPolicyInstancesByPolicy'] :: ListTrafficPolicyInstancesByPolicy -> Natural

-- | Create a value of <a>ListTrafficPolicyInstancesByPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_trafficPolicyInstanceTypeMarker</a>
--   - If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>trafficpolicyinstancetype</tt>, specify the value
--   of <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance that
--   Amazon Route 53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_maxItems</a> - The maximum
--   number of traffic policy instances to be included in the response body
--   for this request. If you have more than <tt>MaxItems</tt> traffic
--   policy instances, the value of the <tt>IsTruncated</tt> element in the
--   response is <tt>true</tt>, and the values of
--   <tt>HostedZoneIdMarker</tt>, <tt>TrafficPolicyInstanceNameMarker</tt>,
--   and <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first
--   traffic policy instance that Amazon Route 53 will return if you submit
--   another request.
--   
--   <a>$sel:hostedZoneIdMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_hostedZoneIdMarker</a> - If the
--   value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>hostedzoneid</tt>, specify the value of
--   <tt>HostedZoneIdMarker</tt> from the previous response, which is the
--   hosted zone ID of the first traffic policy instance that Amazon Route
--   53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_trafficPolicyInstanceNameMarker</a>
--   - If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>trafficpolicyinstancename</tt>, specify the value
--   of <tt>TrafficPolicyInstanceNameMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance that
--   Amazon Route 53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   <a>$sel:trafficPolicyId:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_trafficPolicyId</a> - The ID of
--   the traffic policy for which you want to list traffic policy
--   instances.
--   
--   <a>$sel:trafficPolicyVersion:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_trafficPolicyVersion</a> - The
--   version of the traffic policy for which you want to list traffic
--   policy instances. The version must be associated with the traffic
--   policy that is specified by <tt>TrafficPolicyId</tt>.
newListTrafficPolicyInstancesByPolicy :: Text -> Natural -> ListTrafficPolicyInstancesByPolicy

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>trafficpolicyinstancetype</tt>, specify the value
--   of <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance that
--   Amazon Route 53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstancesByPolicy_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstancesByPolicy (Maybe RRType)

-- | The maximum number of traffic policy instances to be included in the
--   response body for this request. If you have more than
--   <tt>MaxItems</tt> traffic policy instances, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first traffic
--   policy instance that Amazon Route 53 will return if you submit another
--   request.
listTrafficPolicyInstancesByPolicy_maxItems :: Lens' ListTrafficPolicyInstancesByPolicy (Maybe Text)

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>hostedzoneid</tt>, specify the value of
--   <tt>HostedZoneIdMarker</tt> from the previous response, which is the
--   hosted zone ID of the first traffic policy instance that Amazon Route
--   53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstancesByPolicy_hostedZoneIdMarker :: Lens' ListTrafficPolicyInstancesByPolicy (Maybe ResourceId)

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>trafficpolicyinstancename</tt>, specify the value
--   of <tt>TrafficPolicyInstanceNameMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance that
--   Amazon Route 53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstancesByPolicy_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstancesByPolicy (Maybe Text)

-- | The ID of the traffic policy for which you want to list traffic policy
--   instances.
listTrafficPolicyInstancesByPolicy_trafficPolicyId :: Lens' ListTrafficPolicyInstancesByPolicy Text

-- | The version of the traffic policy for which you want to list traffic
--   policy instances. The version must be associated with the traffic
--   policy that is specified by <tt>TrafficPolicyId</tt>.
listTrafficPolicyInstancesByPolicy_trafficPolicyVersion :: Lens' ListTrafficPolicyInstancesByPolicy Natural

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstancesByPolicyResponse</a> smart
--   constructor.
data ListTrafficPolicyInstancesByPolicyResponse
ListTrafficPolicyInstancesByPolicyResponse' :: Maybe RRType -> Maybe ResourceId -> Maybe Text -> Int -> [TrafficPolicyInstance] -> Bool -> Text -> ListTrafficPolicyInstancesByPolicyResponse

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance in the next group of <tt>MaxItems</tt> traffic policy
--   instances.
[$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByPolicyResponse'] :: ListTrafficPolicyInstancesByPolicyResponse -> Maybe RRType

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, <tt>HostedZoneIdMarker</tt>
--   is the ID of the hosted zone of the first traffic policy instance in
--   the next group of traffic policy instances.
[$sel:hostedZoneIdMarker:ListTrafficPolicyInstancesByPolicyResponse'] :: ListTrafficPolicyInstancesByPolicyResponse -> Maybe ResourceId

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance in the next group of <tt>MaxItems</tt> traffic
--   policy instances.
[$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByPolicyResponse'] :: ListTrafficPolicyInstancesByPolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListTrafficPolicyInstancesByPolicyResponse'] :: ListTrafficPolicyInstancesByPolicyResponse -> Int

-- | A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
[$sel:trafficPolicyInstances:ListTrafficPolicyInstancesByPolicyResponse'] :: ListTrafficPolicyInstancesByPolicyResponse -> [TrafficPolicyInstance]

-- | A flag that indicates whether there are more traffic policy instances
--   to be listed. If the response was truncated, you can get the next
--   group of traffic policy instances by calling
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> again and specifying the
--   values of the <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> elements in the corresponding
--   request parameters.
[$sel:isTruncated:ListTrafficPolicyInstancesByPolicyResponse'] :: ListTrafficPolicyInstancesByPolicyResponse -> Bool

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the call to <tt>ListTrafficPolicyInstancesByPolicy</tt> that produced
--   the current response.
[$sel:maxItems:ListTrafficPolicyInstancesByPolicyResponse'] :: ListTrafficPolicyInstancesByPolicyResponse -> Text

-- | Create a value of <a>ListTrafficPolicyInstancesByPolicyResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstanceTypeMarker</a>
--   - If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance in the next group of <tt>MaxItems</tt> traffic policy
--   instances.
--   
--   <a>$sel:hostedZoneIdMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_hostedZoneIdMarker</a> -
--   If <tt>IsTruncated</tt> is <tt>true</tt>, <tt>HostedZoneIdMarker</tt>
--   is the ID of the hosted zone of the first traffic policy instance in
--   the next group of traffic policy instances.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstanceNameMarker</a>
--   - If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance in the next group of <tt>MaxItems</tt> traffic
--   policy instances.
--   
--   <a>$sel:httpStatus:ListTrafficPolicyInstancesByPolicyResponse'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:trafficPolicyInstances:ListTrafficPolicyInstancesByPolicyResponse'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstances</a>
--   - A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
--   
--   <a>$sel:isTruncated:ListTrafficPolicyInstancesByPolicyResponse'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_isTruncated</a> - A flag
--   that indicates whether there are more traffic policy instances to be
--   listed. If the response was truncated, you can get the next group of
--   traffic policy instances by calling
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> again and specifying the
--   values of the <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> elements in the corresponding
--   request parameters.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_maxItems</a> - The value
--   that you specified for the <tt>MaxItems</tt> parameter in the call to
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> that produced the current
--   response.
newListTrafficPolicyInstancesByPolicyResponse :: Int -> Bool -> Text -> ListTrafficPolicyInstancesByPolicyResponse

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance in the next group of <tt>MaxItems</tt> traffic policy
--   instances.
listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstancesByPolicyResponse (Maybe RRType)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, <tt>HostedZoneIdMarker</tt>
--   is the ID of the hosted zone of the first traffic policy instance in
--   the next group of traffic policy instances.
listTrafficPolicyInstancesByPolicyResponse_hostedZoneIdMarker :: Lens' ListTrafficPolicyInstancesByPolicyResponse (Maybe ResourceId)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance in the next group of <tt>MaxItems</tt> traffic
--   policy instances.
listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstancesByPolicyResponse (Maybe Text)

-- | The response's http status code.
listTrafficPolicyInstancesByPolicyResponse_httpStatus :: Lens' ListTrafficPolicyInstancesByPolicyResponse Int

-- | A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstances :: Lens' ListTrafficPolicyInstancesByPolicyResponse [TrafficPolicyInstance]

-- | A flag that indicates whether there are more traffic policy instances
--   to be listed. If the response was truncated, you can get the next
--   group of traffic policy instances by calling
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> again and specifying the
--   values of the <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> elements in the corresponding
--   request parameters.
listTrafficPolicyInstancesByPolicyResponse_isTruncated :: Lens' ListTrafficPolicyInstancesByPolicyResponse Bool

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the call to <tt>ListTrafficPolicyInstancesByPolicy</tt> that produced
--   the current response.
listTrafficPolicyInstancesByPolicyResponse_maxItems :: Lens' ListTrafficPolicyInstancesByPolicyResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicy
instance GHC.Show.Show Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicy
instance GHC.Read.Read Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicy
instance GHC.Classes.Eq Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicy
instance GHC.Generics.Generic Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicyResponse
instance GHC.Show.Show Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicyResponse
instance GHC.Read.Read Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicyResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListTrafficPolicyInstancesByPolicy.ListTrafficPolicyInstancesByPolicy


-- | Gets information about the traffic policy instances that you created
--   in a specified hosted zone.
--   
--   After you submit a <tt>CreateTrafficPolicyInstance</tt> or an
--   <tt>UpdateTrafficPolicyInstance</tt> request, there's a brief delay
--   while Amazon Route 53 creates the resource record sets that are
--   specified in the traffic policy definition. For more information, see
--   the <tt>State</tt> response element.
--   
--   Route 53 returns a maximum of 100 items in each response. If you have
--   a lot of traffic policy instances, you can use the <tt>MaxItems</tt>
--   parameter to list them in groups of up to 100.
module Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone

-- | A request for the traffic policy instances that you created in a
--   specified hosted zone.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstancesByHostedZone</a> smart
--   constructor.
data ListTrafficPolicyInstancesByHostedZone
ListTrafficPolicyInstancesByHostedZone' :: Maybe RRType -> Maybe Text -> Maybe Text -> ResourceId -> ListTrafficPolicyInstancesByHostedZone

-- | If the value of <tt>IsTruncated</tt> in the previous response is true,
--   you have more traffic policy instances. To get more traffic policy
--   instances, submit another <tt>ListTrafficPolicyInstances</tt> request.
--   For the value of <tt>trafficpolicyinstancetype</tt>, specify the value
--   of <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous
--   response, which is the type of the first traffic policy instance in
--   the next group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
[$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByHostedZone'] :: ListTrafficPolicyInstancesByHostedZone -> Maybe RRType

-- | The maximum number of traffic policy instances to be included in the
--   response body for this request. If you have more than
--   <tt>MaxItems</tt> traffic policy instances, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first traffic
--   policy instance that Amazon Route 53 will return if you submit another
--   request.
[$sel:maxItems:ListTrafficPolicyInstancesByHostedZone'] :: ListTrafficPolicyInstancesByHostedZone -> Maybe Text

-- | If the value of <tt>IsTruncated</tt> in the previous response is true,
--   you have more traffic policy instances. To get more traffic policy
--   instances, submit another <tt>ListTrafficPolicyInstances</tt> request.
--   For the value of <tt>trafficpolicyinstancename</tt>, specify the value
--   of <tt>TrafficPolicyInstanceNameMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance in
--   the next group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
[$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByHostedZone'] :: ListTrafficPolicyInstancesByHostedZone -> Maybe Text

-- | The ID of the hosted zone that you want to list traffic policy
--   instances for.
[$sel:hostedZoneId:ListTrafficPolicyInstancesByHostedZone'] :: ListTrafficPolicyInstancesByHostedZone -> ResourceId

-- | Create a value of <a>ListTrafficPolicyInstancesByHostedZone</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZone_trafficPolicyInstanceTypeMarker</a>
--   - If the value of <tt>IsTruncated</tt> in the previous response is
--   true, you have more traffic policy instances. To get more traffic
--   policy instances, submit another <tt>ListTrafficPolicyInstances</tt>
--   request. For the value of <tt>trafficpolicyinstancetype</tt>, specify
--   the value of <tt>TrafficPolicyInstanceTypeMarker</tt> from the
--   previous response, which is the type of the first traffic policy
--   instance in the next group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZone_maxItems</a> - The maximum
--   number of traffic policy instances to be included in the response body
--   for this request. If you have more than <tt>MaxItems</tt> traffic
--   policy instances, the value of the <tt>IsTruncated</tt> element in the
--   response is <tt>true</tt>, and the values of
--   <tt>HostedZoneIdMarker</tt>, <tt>TrafficPolicyInstanceNameMarker</tt>,
--   and <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first
--   traffic policy instance that Amazon Route 53 will return if you submit
--   another request.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZone_trafficPolicyInstanceNameMarker</a>
--   - If the value of <tt>IsTruncated</tt> in the previous response is
--   true, you have more traffic policy instances. To get more traffic
--   policy instances, submit another <tt>ListTrafficPolicyInstances</tt>
--   request. For the value of <tt>trafficpolicyinstancename</tt>, specify
--   the value of <tt>TrafficPolicyInstanceNameMarker</tt> from the
--   previous response, which is the name of the first traffic policy
--   instance in the next group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   <a>$sel:hostedZoneId:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZone_hostedZoneId</a> - The ID of
--   the hosted zone that you want to list traffic policy instances for.
newListTrafficPolicyInstancesByHostedZone :: ResourceId -> ListTrafficPolicyInstancesByHostedZone

-- | If the value of <tt>IsTruncated</tt> in the previous response is true,
--   you have more traffic policy instances. To get more traffic policy
--   instances, submit another <tt>ListTrafficPolicyInstances</tt> request.
--   For the value of <tt>trafficpolicyinstancetype</tt>, specify the value
--   of <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous
--   response, which is the type of the first traffic policy instance in
--   the next group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstancesByHostedZone_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstancesByHostedZone (Maybe RRType)

-- | The maximum number of traffic policy instances to be included in the
--   response body for this request. If you have more than
--   <tt>MaxItems</tt> traffic policy instances, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first traffic
--   policy instance that Amazon Route 53 will return if you submit another
--   request.
listTrafficPolicyInstancesByHostedZone_maxItems :: Lens' ListTrafficPolicyInstancesByHostedZone (Maybe Text)

-- | If the value of <tt>IsTruncated</tt> in the previous response is true,
--   you have more traffic policy instances. To get more traffic policy
--   instances, submit another <tt>ListTrafficPolicyInstances</tt> request.
--   For the value of <tt>trafficpolicyinstancename</tt>, specify the value
--   of <tt>TrafficPolicyInstanceNameMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance in
--   the next group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstancesByHostedZone_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstancesByHostedZone (Maybe Text)

-- | The ID of the hosted zone that you want to list traffic policy
--   instances for.
listTrafficPolicyInstancesByHostedZone_hostedZoneId :: Lens' ListTrafficPolicyInstancesByHostedZone ResourceId

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstancesByHostedZoneResponse</a>
--   smart constructor.
data ListTrafficPolicyInstancesByHostedZoneResponse
ListTrafficPolicyInstancesByHostedZoneResponse' :: Maybe RRType -> Maybe Text -> Int -> [TrafficPolicyInstance] -> Bool -> Text -> ListTrafficPolicyInstancesByHostedZoneResponse

-- | If <tt>IsTruncated</tt> is true,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance in the next group of traffic policy instances.
[$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByHostedZoneResponse'] :: ListTrafficPolicyInstancesByHostedZoneResponse -> Maybe RRType

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance in the next group of traffic policy instances.
[$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByHostedZoneResponse'] :: ListTrafficPolicyInstancesByHostedZoneResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListTrafficPolicyInstancesByHostedZoneResponse'] :: ListTrafficPolicyInstancesByHostedZoneResponse -> Int

-- | A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
[$sel:trafficPolicyInstances:ListTrafficPolicyInstancesByHostedZoneResponse'] :: ListTrafficPolicyInstancesByHostedZoneResponse -> [TrafficPolicyInstance]

-- | A flag that indicates whether there are more traffic policy instances
--   to be listed. If the response was truncated, you can get the next
--   group of traffic policy instances by submitting another
--   <tt>ListTrafficPolicyInstancesByHostedZone</tt> request and specifying
--   the values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> in the corresponding request
--   parameters.
[$sel:isTruncated:ListTrafficPolicyInstancesByHostedZoneResponse'] :: ListTrafficPolicyInstancesByHostedZoneResponse -> Bool

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the <tt>ListTrafficPolicyInstancesByHostedZone</tt> request that
--   produced the current response.
[$sel:maxItems:ListTrafficPolicyInstancesByHostedZoneResponse'] :: ListTrafficPolicyInstancesByHostedZoneResponse -> Text

-- | Create a value of
--   <a>ListTrafficPolicyInstancesByHostedZoneResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstanceTypeMarker</a>
--   - If <tt>IsTruncated</tt> is true,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance in the next group of traffic policy instances.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstanceNameMarker</a>
--   - If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance in the next group of traffic policy instances.
--   
--   
--   <a>$sel:httpStatus:ListTrafficPolicyInstancesByHostedZoneResponse'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:trafficPolicyInstances:ListTrafficPolicyInstancesByHostedZoneResponse'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstances</a>
--   - A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
--   
--   
--   <a>$sel:isTruncated:ListTrafficPolicyInstancesByHostedZoneResponse'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_isTruncated</a> - A
--   flag that indicates whether there are more traffic policy instances to
--   be listed. If the response was truncated, you can get the next group
--   of traffic policy instances by submitting another
--   <tt>ListTrafficPolicyInstancesByHostedZone</tt> request and specifying
--   the values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> in the corresponding request
--   parameters.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_maxItems</a> - The
--   value that you specified for the <tt>MaxItems</tt> parameter in the
--   <tt>ListTrafficPolicyInstancesByHostedZone</tt> request that produced
--   the current response.
newListTrafficPolicyInstancesByHostedZoneResponse :: Int -> Bool -> Text -> ListTrafficPolicyInstancesByHostedZoneResponse

-- | If <tt>IsTruncated</tt> is true,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance in the next group of traffic policy instances.
listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse (Maybe RRType)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance in the next group of traffic policy instances.
listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse (Maybe Text)

-- | The response's http status code.
listTrafficPolicyInstancesByHostedZoneResponse_httpStatus :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse Int

-- | A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstances :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse [TrafficPolicyInstance]

-- | A flag that indicates whether there are more traffic policy instances
--   to be listed. If the response was truncated, you can get the next
--   group of traffic policy instances by submitting another
--   <tt>ListTrafficPolicyInstancesByHostedZone</tt> request and specifying
--   the values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> in the corresponding request
--   parameters.
listTrafficPolicyInstancesByHostedZoneResponse_isTruncated :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse Bool

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the <tt>ListTrafficPolicyInstancesByHostedZone</tt> request that
--   produced the current response.
listTrafficPolicyInstancesByHostedZoneResponse_maxItems :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZone
instance GHC.Show.Show Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZone
instance GHC.Read.Read Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZone
instance GHC.Classes.Eq Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZone
instance GHC.Generics.Generic Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZoneResponse
instance GHC.Show.Show Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZoneResponse
instance GHC.Read.Read Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZoneResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZoneResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZoneResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZone
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZone
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZone
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListTrafficPolicyInstancesByHostedZone.ListTrafficPolicyInstancesByHostedZone


-- | Gets information about the traffic policy instances that you created
--   by using the current Amazon Web Services account.
--   
--   After you submit an <tt>UpdateTrafficPolicyInstance</tt> request,
--   there's a brief delay while Amazon Route 53 creates the resource
--   record sets that are specified in the traffic policy definition. For
--   more information, see the <tt>State</tt> response element.
--   
--   Route 53 returns a maximum of 100 items in each response. If you have
--   a lot of traffic policy instances, you can use the <tt>MaxItems</tt>
--   parameter to list them in groups of up to 100.
module Network.AWS.Route53.ListTrafficPolicyInstances

-- | A request to get information about the traffic policy instances that
--   you created by using the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstances</a> smart constructor.
data ListTrafficPolicyInstances
ListTrafficPolicyInstances' :: Maybe RRType -> Maybe Text -> Maybe ResourceId -> Maybe Text -> ListTrafficPolicyInstances

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>trafficpolicyinstancetype</tt>, specify the value of
--   <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous response,
--   which is the type of the first traffic policy instance in the next
--   group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
[$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstances'] :: ListTrafficPolicyInstances -> Maybe RRType

-- | The maximum number of traffic policy instances that you want Amazon
--   Route 53 to return in response to a
--   <tt>ListTrafficPolicyInstances</tt> request. If you have more than
--   <tt>MaxItems</tt> traffic policy instances, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first traffic
--   policy instance in the next group of <tt>MaxItems</tt> traffic policy
--   instances.
[$sel:maxItems:ListTrafficPolicyInstances'] :: ListTrafficPolicyInstances -> Maybe Text

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>HostedZoneId</tt>, specify the value of
--   <tt>HostedZoneIdMarker</tt> from the previous response, which is the
--   hosted zone ID of the first traffic policy instance in the next group
--   of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
[$sel:hostedZoneIdMarker:ListTrafficPolicyInstances'] :: ListTrafficPolicyInstances -> Maybe ResourceId

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>trafficpolicyinstancename</tt>, specify the value of
--   <tt>TrafficPolicyInstanceNameMarker</tt> from the previous response,
--   which is the name of the first traffic policy instance in the next
--   group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
[$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstances'] :: ListTrafficPolicyInstances -> Maybe Text

-- | Create a value of <a>ListTrafficPolicyInstances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstances_trafficPolicyInstanceTypeMarker</a> - If
--   the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>trafficpolicyinstancetype</tt>, specify the value of
--   <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous response,
--   which is the type of the first traffic policy instance in the next
--   group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstances_maxItems</a> - The maximum number of
--   traffic policy instances that you want Amazon Route 53 to return in
--   response to a <tt>ListTrafficPolicyInstances</tt> request. If you have
--   more than <tt>MaxItems</tt> traffic policy instances, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first traffic
--   policy instance in the next group of <tt>MaxItems</tt> traffic policy
--   instances.
--   
--   <a>$sel:hostedZoneIdMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstances_hostedZoneIdMarker</a> - If the value of
--   <tt>IsTruncated</tt> in the previous response was <tt>true</tt>, you
--   have more traffic policy instances. To get more traffic policy
--   instances, submit another <tt>ListTrafficPolicyInstances</tt> request.
--   For the value of <tt>HostedZoneId</tt>, specify the value of
--   <tt>HostedZoneIdMarker</tt> from the previous response, which is the
--   hosted zone ID of the first traffic policy instance in the next group
--   of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstances_trafficPolicyInstanceNameMarker</a> - If
--   the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>trafficpolicyinstancename</tt>, specify the value of
--   <tt>TrafficPolicyInstanceNameMarker</tt> from the previous response,
--   which is the name of the first traffic policy instance in the next
--   group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
newListTrafficPolicyInstances :: ListTrafficPolicyInstances

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>trafficpolicyinstancetype</tt>, specify the value of
--   <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous response,
--   which is the type of the first traffic policy instance in the next
--   group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstances_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstances (Maybe RRType)

-- | The maximum number of traffic policy instances that you want Amazon
--   Route 53 to return in response to a
--   <tt>ListTrafficPolicyInstances</tt> request. If you have more than
--   <tt>MaxItems</tt> traffic policy instances, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first traffic
--   policy instance in the next group of <tt>MaxItems</tt> traffic policy
--   instances.
listTrafficPolicyInstances_maxItems :: Lens' ListTrafficPolicyInstances (Maybe Text)

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>HostedZoneId</tt>, specify the value of
--   <tt>HostedZoneIdMarker</tt> from the previous response, which is the
--   hosted zone ID of the first traffic policy instance in the next group
--   of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstances_hostedZoneIdMarker :: Lens' ListTrafficPolicyInstances (Maybe ResourceId)

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>trafficpolicyinstancename</tt>, specify the value of
--   <tt>TrafficPolicyInstanceNameMarker</tt> from the previous response,
--   which is the name of the first traffic policy instance in the next
--   group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstances_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstances (Maybe Text)

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstancesResponse</a> smart
--   constructor.
data ListTrafficPolicyInstancesResponse
ListTrafficPolicyInstancesResponse' :: Maybe RRType -> Maybe ResourceId -> Maybe Text -> Int -> [TrafficPolicyInstance] -> Bool -> Text -> ListTrafficPolicyInstancesResponse

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance that Amazon Route 53 will return if you submit another
--   <tt>ListTrafficPolicyInstances</tt> request.
[$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesResponse'] :: ListTrafficPolicyInstancesResponse -> Maybe RRType

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, <tt>HostedZoneIdMarker</tt>
--   is the ID of the hosted zone of the first traffic policy instance that
--   Route 53 will return if you submit another
--   <tt>ListTrafficPolicyInstances</tt> request.
[$sel:hostedZoneIdMarker:ListTrafficPolicyInstancesResponse'] :: ListTrafficPolicyInstancesResponse -> Maybe ResourceId

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance that Route 53 will return if you submit
--   another <tt>ListTrafficPolicyInstances</tt> request.
[$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesResponse'] :: ListTrafficPolicyInstancesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListTrafficPolicyInstancesResponse'] :: ListTrafficPolicyInstancesResponse -> Int

-- | A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
[$sel:trafficPolicyInstances:ListTrafficPolicyInstancesResponse'] :: ListTrafficPolicyInstancesResponse -> [TrafficPolicyInstance]

-- | A flag that indicates whether there are more traffic policy instances
--   to be listed. If the response was truncated, you can get more traffic
--   policy instances by calling <tt>ListTrafficPolicyInstances</tt> again
--   and specifying the values of the <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> in the corresponding request
--   parameters.
[$sel:isTruncated:ListTrafficPolicyInstancesResponse'] :: ListTrafficPolicyInstancesResponse -> Bool

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the call to <tt>ListTrafficPolicyInstances</tt> that produced the
--   current response.
[$sel:maxItems:ListTrafficPolicyInstancesResponse'] :: ListTrafficPolicyInstancesResponse -> Text

-- | Create a value of <a>ListTrafficPolicyInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstancesResponse_trafficPolicyInstanceTypeMarker</a>
--   - If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance that Amazon Route 53 will return if you submit another
--   <tt>ListTrafficPolicyInstances</tt> request.
--   
--   <a>$sel:hostedZoneIdMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstancesResponse_hostedZoneIdMarker</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, <tt>HostedZoneIdMarker</tt> is
--   the ID of the hosted zone of the first traffic policy instance that
--   Route 53 will return if you submit another
--   <tt>ListTrafficPolicyInstances</tt> request.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstancesResponse_trafficPolicyInstanceNameMarker</a>
--   - If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance that Route 53 will return if you submit
--   another <tt>ListTrafficPolicyInstances</tt> request.
--   
--   <a>$sel:httpStatus:ListTrafficPolicyInstancesResponse'</a>,
--   <a>listTrafficPolicyInstancesResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:trafficPolicyInstances:ListTrafficPolicyInstancesResponse'</a>,
--   <a>listTrafficPolicyInstancesResponse_trafficPolicyInstances</a> - A
--   list that contains one <tt>TrafficPolicyInstance</tt> element for each
--   traffic policy instance that matches the elements in the request.
--   
--   <a>$sel:isTruncated:ListTrafficPolicyInstancesResponse'</a>,
--   <a>listTrafficPolicyInstancesResponse_isTruncated</a> - A flag that
--   indicates whether there are more traffic policy instances to be
--   listed. If the response was truncated, you can get more traffic policy
--   instances by calling <tt>ListTrafficPolicyInstances</tt> again and
--   specifying the values of the <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> in the corresponding request
--   parameters.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstancesResponse_maxItems</a> - The value that
--   you specified for the <tt>MaxItems</tt> parameter in the call to
--   <tt>ListTrafficPolicyInstances</tt> that produced the current
--   response.
newListTrafficPolicyInstancesResponse :: Int -> Bool -> Text -> ListTrafficPolicyInstancesResponse

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance that Amazon Route 53 will return if you submit another
--   <tt>ListTrafficPolicyInstances</tt> request.
listTrafficPolicyInstancesResponse_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstancesResponse (Maybe RRType)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, <tt>HostedZoneIdMarker</tt>
--   is the ID of the hosted zone of the first traffic policy instance that
--   Route 53 will return if you submit another
--   <tt>ListTrafficPolicyInstances</tt> request.
listTrafficPolicyInstancesResponse_hostedZoneIdMarker :: Lens' ListTrafficPolicyInstancesResponse (Maybe ResourceId)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance that Route 53 will return if you submit
--   another <tt>ListTrafficPolicyInstances</tt> request.
listTrafficPolicyInstancesResponse_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstancesResponse (Maybe Text)

-- | The response's http status code.
listTrafficPolicyInstancesResponse_httpStatus :: Lens' ListTrafficPolicyInstancesResponse Int

-- | A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
listTrafficPolicyInstancesResponse_trafficPolicyInstances :: Lens' ListTrafficPolicyInstancesResponse [TrafficPolicyInstance]

-- | A flag that indicates whether there are more traffic policy instances
--   to be listed. If the response was truncated, you can get more traffic
--   policy instances by calling <tt>ListTrafficPolicyInstances</tt> again
--   and specifying the values of the <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> in the corresponding request
--   parameters.
listTrafficPolicyInstancesResponse_isTruncated :: Lens' ListTrafficPolicyInstancesResponse Bool

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the call to <tt>ListTrafficPolicyInstances</tt> that produced the
--   current response.
listTrafficPolicyInstancesResponse_maxItems :: Lens' ListTrafficPolicyInstancesResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstances
instance GHC.Show.Show Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstances
instance GHC.Read.Read Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstances
instance GHC.Classes.Eq Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstances
instance GHC.Generics.Generic Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstancesResponse
instance GHC.Show.Show Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstancesResponse
instance GHC.Read.Read Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstancesResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstancesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstances
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstancesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstances
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstances
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstances
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstances
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListTrafficPolicyInstances.ListTrafficPolicyInstances


-- | Gets information about the latest version for every traffic policy
--   that is associated with the current Amazon Web Services account.
--   Policies are listed in the order that they were created in.
--   
--   For information about how of deleting a traffic policy affects the
--   response from <tt>ListTrafficPolicies</tt>, see
--   <a>DeleteTrafficPolicy</a>.
module Network.AWS.Route53.ListTrafficPolicies

-- | A complex type that contains the information about the request to list
--   the traffic policies that are associated with the current Amazon Web
--   Services account.
--   
--   <i>See:</i> <a>newListTrafficPolicies</a> smart constructor.
data ListTrafficPolicies
ListTrafficPolicies' :: Maybe Text -> Maybe Text -> ListTrafficPolicies

-- | (Conditional) For your first request to <tt>ListTrafficPolicies</tt>,
--   don't include the <tt>TrafficPolicyIdMarker</tt> parameter.
--   
--   If you have more traffic policies than the value of <tt>MaxItems</tt>,
--   <tt>ListTrafficPolicies</tt> returns only the first <tt>MaxItems</tt>
--   traffic policies. To get the next group of policies, submit another
--   request to <tt>ListTrafficPolicies</tt>. For the value of
--   <tt>TrafficPolicyIdMarker</tt>, specify the value of
--   <tt>TrafficPolicyIdMarker</tt> that was returned in the previous
--   response.
[$sel:trafficPolicyIdMarker:ListTrafficPolicies'] :: ListTrafficPolicies -> Maybe Text

-- | (Optional) The maximum number of traffic policies that you want Amazon
--   Route 53 to return in response to this request. If you have more than
--   <tt>MaxItems</tt> traffic policies, the value of <tt>IsTruncated</tt>
--   in the response is <tt>true</tt>, and the value of
--   <tt>TrafficPolicyIdMarker</tt> is the ID of the first traffic policy
--   that Route 53 will return if you submit another request.
[$sel:maxItems:ListTrafficPolicies'] :: ListTrafficPolicies -> Maybe Text

-- | Create a value of <a>ListTrafficPolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trafficPolicyIdMarker:ListTrafficPolicies'</a>,
--   <a>listTrafficPolicies_trafficPolicyIdMarker</a> - (Conditional) For
--   your first request to <tt>ListTrafficPolicies</tt>, don't include the
--   <tt>TrafficPolicyIdMarker</tt> parameter.
--   
--   If you have more traffic policies than the value of <tt>MaxItems</tt>,
--   <tt>ListTrafficPolicies</tt> returns only the first <tt>MaxItems</tt>
--   traffic policies. To get the next group of policies, submit another
--   request to <tt>ListTrafficPolicies</tt>. For the value of
--   <tt>TrafficPolicyIdMarker</tt>, specify the value of
--   <tt>TrafficPolicyIdMarker</tt> that was returned in the previous
--   response.
--   
--   <a>$sel:maxItems:ListTrafficPolicies'</a>,
--   <a>listTrafficPolicies_maxItems</a> - (Optional) The maximum number of
--   traffic policies that you want Amazon Route 53 to return in response
--   to this request. If you have more than <tt>MaxItems</tt> traffic
--   policies, the value of <tt>IsTruncated</tt> in the response is
--   <tt>true</tt>, and the value of <tt>TrafficPolicyIdMarker</tt> is the
--   ID of the first traffic policy that Route 53 will return if you submit
--   another request.
newListTrafficPolicies :: ListTrafficPolicies

-- | (Conditional) For your first request to <tt>ListTrafficPolicies</tt>,
--   don't include the <tt>TrafficPolicyIdMarker</tt> parameter.
--   
--   If you have more traffic policies than the value of <tt>MaxItems</tt>,
--   <tt>ListTrafficPolicies</tt> returns only the first <tt>MaxItems</tt>
--   traffic policies. To get the next group of policies, submit another
--   request to <tt>ListTrafficPolicies</tt>. For the value of
--   <tt>TrafficPolicyIdMarker</tt>, specify the value of
--   <tt>TrafficPolicyIdMarker</tt> that was returned in the previous
--   response.
listTrafficPolicies_trafficPolicyIdMarker :: Lens' ListTrafficPolicies (Maybe Text)

-- | (Optional) The maximum number of traffic policies that you want Amazon
--   Route 53 to return in response to this request. If you have more than
--   <tt>MaxItems</tt> traffic policies, the value of <tt>IsTruncated</tt>
--   in the response is <tt>true</tt>, and the value of
--   <tt>TrafficPolicyIdMarker</tt> is the ID of the first traffic policy
--   that Route 53 will return if you submit another request.
listTrafficPolicies_maxItems :: Lens' ListTrafficPolicies (Maybe Text)

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListTrafficPoliciesResponse</a> smart constructor.
data ListTrafficPoliciesResponse
ListTrafficPoliciesResponse' :: Int -> [TrafficPolicySummary] -> Bool -> Text -> Text -> ListTrafficPoliciesResponse

-- | The response's http status code.
[$sel:httpStatus:ListTrafficPoliciesResponse'] :: ListTrafficPoliciesResponse -> Int

-- | A list that contains one <tt>TrafficPolicySummary</tt> element for
--   each traffic policy that was created by the current Amazon Web
--   Services account.
[$sel:trafficPolicySummaries:ListTrafficPoliciesResponse'] :: ListTrafficPoliciesResponse -> [TrafficPolicySummary]

-- | A flag that indicates whether there are more traffic policies to be
--   listed. If the response was truncated, you can get the next group of
--   traffic policies by submitting another <tt>ListTrafficPolicies</tt>
--   request and specifying the value of <tt>TrafficPolicyIdMarker</tt> in
--   the <tt>TrafficPolicyIdMarker</tt> request parameter.
[$sel:isTruncated:ListTrafficPoliciesResponse'] :: ListTrafficPoliciesResponse -> Bool

-- | If the value of <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyIdMarker</tt> is the ID of the first traffic policy
--   in the next group of <tt>MaxItems</tt> traffic policies.
[$sel:trafficPolicyIdMarker:ListTrafficPoliciesResponse'] :: ListTrafficPoliciesResponse -> Text

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the <tt>ListTrafficPolicies</tt> request that produced the current
--   response.
[$sel:maxItems:ListTrafficPoliciesResponse'] :: ListTrafficPoliciesResponse -> Text

-- | Create a value of <a>ListTrafficPoliciesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListTrafficPoliciesResponse'</a>,
--   <a>listTrafficPoliciesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:trafficPolicySummaries:ListTrafficPoliciesResponse'</a>,
--   <a>listTrafficPoliciesResponse_trafficPolicySummaries</a> - A list
--   that contains one <tt>TrafficPolicySummary</tt> element for each
--   traffic policy that was created by the current Amazon Web Services
--   account.
--   
--   <a>$sel:isTruncated:ListTrafficPoliciesResponse'</a>,
--   <a>listTrafficPoliciesResponse_isTruncated</a> - A flag that indicates
--   whether there are more traffic policies to be listed. If the response
--   was truncated, you can get the next group of traffic policies by
--   submitting another <tt>ListTrafficPolicies</tt> request and specifying
--   the value of <tt>TrafficPolicyIdMarker</tt> in the
--   <tt>TrafficPolicyIdMarker</tt> request parameter.
--   
--   <a>$sel:trafficPolicyIdMarker:ListTrafficPolicies'</a>,
--   <a>listTrafficPoliciesResponse_trafficPolicyIdMarker</a> - If the
--   value of <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyIdMarker</tt> is the ID of the first traffic policy
--   in the next group of <tt>MaxItems</tt> traffic policies.
--   
--   <a>$sel:maxItems:ListTrafficPolicies'</a>,
--   <a>listTrafficPoliciesResponse_maxItems</a> - The value that you
--   specified for the <tt>MaxItems</tt> parameter in the
--   <tt>ListTrafficPolicies</tt> request that produced the current
--   response.
newListTrafficPoliciesResponse :: Int -> Bool -> Text -> Text -> ListTrafficPoliciesResponse

-- | The response's http status code.
listTrafficPoliciesResponse_httpStatus :: Lens' ListTrafficPoliciesResponse Int

-- | A list that contains one <tt>TrafficPolicySummary</tt> element for
--   each traffic policy that was created by the current Amazon Web
--   Services account.
listTrafficPoliciesResponse_trafficPolicySummaries :: Lens' ListTrafficPoliciesResponse [TrafficPolicySummary]

-- | A flag that indicates whether there are more traffic policies to be
--   listed. If the response was truncated, you can get the next group of
--   traffic policies by submitting another <tt>ListTrafficPolicies</tt>
--   request and specifying the value of <tt>TrafficPolicyIdMarker</tt> in
--   the <tt>TrafficPolicyIdMarker</tt> request parameter.
listTrafficPoliciesResponse_isTruncated :: Lens' ListTrafficPoliciesResponse Bool

-- | If the value of <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyIdMarker</tt> is the ID of the first traffic policy
--   in the next group of <tt>MaxItems</tt> traffic policies.
listTrafficPoliciesResponse_trafficPolicyIdMarker :: Lens' ListTrafficPoliciesResponse Text

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the <tt>ListTrafficPolicies</tt> request that produced the current
--   response.
listTrafficPoliciesResponse_maxItems :: Lens' ListTrafficPoliciesResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListTrafficPolicies.ListTrafficPolicies
instance GHC.Show.Show Network.AWS.Route53.ListTrafficPolicies.ListTrafficPolicies
instance GHC.Read.Read Network.AWS.Route53.ListTrafficPolicies.ListTrafficPolicies
instance GHC.Classes.Eq Network.AWS.Route53.ListTrafficPolicies.ListTrafficPolicies
instance GHC.Generics.Generic Network.AWS.Route53.ListTrafficPolicies.ListTrafficPoliciesResponse
instance GHC.Show.Show Network.AWS.Route53.ListTrafficPolicies.ListTrafficPoliciesResponse
instance GHC.Read.Read Network.AWS.Route53.ListTrafficPolicies.ListTrafficPoliciesResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListTrafficPolicies.ListTrafficPoliciesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListTrafficPolicies.ListTrafficPolicies
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTrafficPolicies.ListTrafficPoliciesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListTrafficPolicies.ListTrafficPolicies
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTrafficPolicies.ListTrafficPolicies
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListTrafficPolicies.ListTrafficPolicies
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListTrafficPolicies.ListTrafficPolicies
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListTrafficPolicies.ListTrafficPolicies


-- | Lists tags for up to 10 health checks or hosted zones.
--   
--   For information about using tags for cost allocation, see <a>Using
--   Cost Allocation Tags</a> in the <i>Billing and Cost Management User
--   Guide</i>.
module Network.AWS.Route53.ListTagsForResources

-- | A complex type that contains information about the health checks or
--   hosted zones for which you want to list tags.
--   
--   <i>See:</i> <a>newListTagsForResources</a> smart constructor.
data ListTagsForResources
ListTagsForResources' :: TagResourceType -> NonEmpty Text -> ListTagsForResources

-- | The type of the resources.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
[$sel:resourceType:ListTagsForResources'] :: ListTagsForResources -> TagResourceType

-- | A complex type that contains the ResourceId element for each resource
--   for which you want to get a list of tags.
[$sel:resourceIds:ListTagsForResources'] :: ListTagsForResources -> NonEmpty Text

-- | Create a value of <a>ListTagsForResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ListTagsForResources'</a>,
--   <a>listTagsForResources_resourceType</a> - The type of the resources.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
--   
--   <a>$sel:resourceIds:ListTagsForResources'</a>,
--   <a>listTagsForResources_resourceIds</a> - A complex type that contains
--   the ResourceId element for each resource for which you want to get a
--   list of tags.
newListTagsForResources :: TagResourceType -> NonEmpty Text -> ListTagsForResources

-- | The type of the resources.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
listTagsForResources_resourceType :: Lens' ListTagsForResources TagResourceType

-- | A complex type that contains the ResourceId element for each resource
--   for which you want to get a list of tags.
listTagsForResources_resourceIds :: Lens' ListTagsForResources (NonEmpty Text)

-- | A complex type containing tags for the specified resources.
--   
--   <i>See:</i> <a>newListTagsForResourcesResponse</a> smart constructor.
data ListTagsForResourcesResponse
ListTagsForResourcesResponse' :: Int -> [ResourceTagSet] -> ListTagsForResourcesResponse

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourcesResponse'] :: ListTagsForResourcesResponse -> Int

-- | A list of <tt>ResourceTagSet</tt>s containing tags associated with the
--   specified resources.
[$sel:resourceTagSets:ListTagsForResourcesResponse'] :: ListTagsForResourcesResponse -> [ResourceTagSet]

-- | Create a value of <a>ListTagsForResourcesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListTagsForResourcesResponse'</a>,
--   <a>listTagsForResourcesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceTagSets:ListTagsForResourcesResponse'</a>,
--   <a>listTagsForResourcesResponse_resourceTagSets</a> - A list of
--   <tt>ResourceTagSet</tt>s containing tags associated with the specified
--   resources.
newListTagsForResourcesResponse :: Int -> ListTagsForResourcesResponse

-- | The response's http status code.
listTagsForResourcesResponse_httpStatus :: Lens' ListTagsForResourcesResponse Int

-- | A list of <tt>ResourceTagSet</tt>s containing tags associated with the
--   specified resources.
listTagsForResourcesResponse_resourceTagSets :: Lens' ListTagsForResourcesResponse [ResourceTagSet]
instance GHC.Generics.Generic Network.AWS.Route53.ListTagsForResources.ListTagsForResources
instance GHC.Show.Show Network.AWS.Route53.ListTagsForResources.ListTagsForResources
instance GHC.Read.Read Network.AWS.Route53.ListTagsForResources.ListTagsForResources
instance GHC.Classes.Eq Network.AWS.Route53.ListTagsForResources.ListTagsForResources
instance GHC.Generics.Generic Network.AWS.Route53.ListTagsForResources.ListTagsForResourcesResponse
instance GHC.Show.Show Network.AWS.Route53.ListTagsForResources.ListTagsForResourcesResponse
instance GHC.Read.Read Network.AWS.Route53.ListTagsForResources.ListTagsForResourcesResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListTagsForResources.ListTagsForResourcesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListTagsForResources.ListTagsForResources
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTagsForResources.ListTagsForResourcesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListTagsForResources.ListTagsForResources
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTagsForResources.ListTagsForResources
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.ListTagsForResources.ListTagsForResources
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListTagsForResources.ListTagsForResources
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListTagsForResources.ListTagsForResources
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListTagsForResources.ListTagsForResources
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.ListTagsForResources.ListTagsForResources


-- | Lists tags for one health check or hosted zone.
--   
--   For information about using tags for cost allocation, see <a>Using
--   Cost Allocation Tags</a> in the <i>Billing and Cost Management User
--   Guide</i>.
module Network.AWS.Route53.ListTagsForResource

-- | A complex type containing information about a request for a list of
--   the tags that are associated with an individual resource.
--   
--   <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: TagResourceType -> Text -> ListTagsForResource

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
[$sel:resourceType:ListTagsForResource'] :: ListTagsForResource -> TagResourceType

-- | The ID of the resource for which you want to retrieve tags.
[$sel:resourceId:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceType</a> - The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
--   
--   <a>$sel:resourceId:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceId</a> - The ID of the resource for
--   which you want to retrieve tags.
newListTagsForResource :: TagResourceType -> Text -> ListTagsForResource

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
listTagsForResource_resourceType :: Lens' ListTagsForResource TagResourceType

-- | The ID of the resource for which you want to retrieve tags.
listTagsForResource_resourceId :: Lens' ListTagsForResource Text

-- | A complex type that contains information about the health checks or
--   hosted zones for which you want to list tags.
--   
--   <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Int -> ResourceTagSet -> ListTagsForResourceResponse

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | A <tt>ResourceTagSet</tt> containing tags associated with the
--   specified resource.
[$sel:resourceTagSet:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> ResourceTagSet

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceTagSet:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_resourceTagSet</a> - A
--   <tt>ResourceTagSet</tt> containing tags associated with the specified
--   resource.
newListTagsForResourceResponse :: Int -> ResourceTagSet -> ListTagsForResourceResponse

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | A <tt>ResourceTagSet</tt> containing tags associated with the
--   specified resource.
listTagsForResourceResponse_resourceTagSet :: Lens' ListTagsForResourceResponse ResourceTagSet
instance GHC.Generics.Generic Network.AWS.Route53.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.Route53.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.Route53.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.Route53.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.Route53.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.Route53.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.Route53.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Route53.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListTagsForResource.ListTagsForResource


-- | Retrieves a list of the reusable delegation sets that are associated
--   with the current Amazon Web Services account.
module Network.AWS.Route53.ListReusableDelegationSets

-- | A request to get a list of the reusable delegation sets that are
--   associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newListReusableDelegationSets</a> smart constructor.
data ListReusableDelegationSets
ListReusableDelegationSets' :: Maybe Text -> Maybe Text -> ListReusableDelegationSets

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more reusable delegation sets. To get another
--   group, submit another <tt>ListReusableDelegationSets</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first reusable delegation set that Amazon Route 53 will return if you
--   submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more reusable delegation sets to get.
[$sel:marker:ListReusableDelegationSets'] :: ListReusableDelegationSets -> Maybe Text

-- | The number of reusable delegation sets that you want Amazon Route 53
--   to return in the response to this request. If you specify a value
--   greater than 100, Route 53 returns only the first 100 reusable
--   delegation sets.
[$sel:maxItems:ListReusableDelegationSets'] :: ListReusableDelegationSets -> Maybe Text

-- | Create a value of <a>ListReusableDelegationSets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListReusableDelegationSets'</a>,
--   <a>listReusableDelegationSets_marker</a> - If the value of
--   <tt>IsTruncated</tt> in the previous response was <tt>true</tt>, you
--   have more reusable delegation sets. To get another group, submit
--   another <tt>ListReusableDelegationSets</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first reusable delegation set that Amazon Route 53 will return if you
--   submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more reusable delegation sets to get.
--   
--   <a>$sel:maxItems:ListReusableDelegationSets'</a>,
--   <a>listReusableDelegationSets_maxItems</a> - The number of reusable
--   delegation sets that you want Amazon Route 53 to return in the
--   response to this request. If you specify a value greater than 100,
--   Route 53 returns only the first 100 reusable delegation sets.
newListReusableDelegationSets :: ListReusableDelegationSets

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more reusable delegation sets. To get another
--   group, submit another <tt>ListReusableDelegationSets</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first reusable delegation set that Amazon Route 53 will return if you
--   submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more reusable delegation sets to get.
listReusableDelegationSets_marker :: Lens' ListReusableDelegationSets (Maybe Text)

-- | The number of reusable delegation sets that you want Amazon Route 53
--   to return in the response to this request. If you specify a value
--   greater than 100, Route 53 returns only the first 100 reusable
--   delegation sets.
listReusableDelegationSets_maxItems :: Lens' ListReusableDelegationSets (Maybe Text)

-- | A complex type that contains information about the reusable delegation
--   sets that are associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newListReusableDelegationSetsResponse</a> smart
--   constructor.
data ListReusableDelegationSetsResponse
ListReusableDelegationSetsResponse' :: Maybe Text -> Int -> [DelegationSet] -> Text -> Bool -> Text -> ListReusableDelegationSetsResponse

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextMarker</tt> identifies the next reusable delegation set that
--   Amazon Route 53 will return if you submit another
--   <tt>ListReusableDelegationSets</tt> request and specify the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
[$sel:nextMarker:ListReusableDelegationSetsResponse'] :: ListReusableDelegationSetsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListReusableDelegationSetsResponse'] :: ListReusableDelegationSetsResponse -> Int

-- | A complex type that contains one <tt>DelegationSet</tt> element for
--   each reusable delegation set that was created by the current Amazon
--   Web Services account.
[$sel:delegationSets:ListReusableDelegationSetsResponse'] :: ListReusableDelegationSetsResponse -> [DelegationSet]

-- | For the second and subsequent calls to
--   <tt>ListReusableDelegationSets</tt>, <tt>Marker</tt> is the value that
--   you specified for the <tt>marker</tt> parameter in the request that
--   produced the current response.
[$sel:marker:ListReusableDelegationSetsResponse'] :: ListReusableDelegationSetsResponse -> Text

-- | A flag that indicates whether there are more reusable delegation sets
--   to be listed.
[$sel:isTruncated:ListReusableDelegationSetsResponse'] :: ListReusableDelegationSetsResponse -> Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListReusableDelegationSets</tt> that produced the
--   current response.
[$sel:maxItems:ListReusableDelegationSetsResponse'] :: ListReusableDelegationSetsResponse -> Text

-- | Create a value of <a>ListReusableDelegationSetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:ListReusableDelegationSetsResponse'</a>,
--   <a>listReusableDelegationSetsResponse_nextMarker</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextMarker</tt> identifies the next reusable delegation set that
--   Amazon Route 53 will return if you submit another
--   <tt>ListReusableDelegationSets</tt> request and specify the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
--   
--   <a>$sel:httpStatus:ListReusableDelegationSetsResponse'</a>,
--   <a>listReusableDelegationSetsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:delegationSets:ListReusableDelegationSetsResponse'</a>,
--   <a>listReusableDelegationSetsResponse_delegationSets</a> - A complex
--   type that contains one <tt>DelegationSet</tt> element for each
--   reusable delegation set that was created by the current Amazon Web
--   Services account.
--   
--   <a>$sel:marker:ListReusableDelegationSets'</a>,
--   <a>listReusableDelegationSetsResponse_marker</a> - For the second and
--   subsequent calls to <tt>ListReusableDelegationSets</tt>,
--   <tt>Marker</tt> is the value that you specified for the
--   <tt>marker</tt> parameter in the request that produced the current
--   response.
--   
--   <a>$sel:isTruncated:ListReusableDelegationSetsResponse'</a>,
--   <a>listReusableDelegationSetsResponse_isTruncated</a> - A flag that
--   indicates whether there are more reusable delegation sets to be
--   listed.
--   
--   <a>$sel:maxItems:ListReusableDelegationSets'</a>,
--   <a>listReusableDelegationSetsResponse_maxItems</a> - The value that
--   you specified for the <tt>maxitems</tt> parameter in the call to
--   <tt>ListReusableDelegationSets</tt> that produced the current
--   response.
newListReusableDelegationSetsResponse :: Int -> Text -> Bool -> Text -> ListReusableDelegationSetsResponse

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextMarker</tt> identifies the next reusable delegation set that
--   Amazon Route 53 will return if you submit another
--   <tt>ListReusableDelegationSets</tt> request and specify the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
listReusableDelegationSetsResponse_nextMarker :: Lens' ListReusableDelegationSetsResponse (Maybe Text)

-- | The response's http status code.
listReusableDelegationSetsResponse_httpStatus :: Lens' ListReusableDelegationSetsResponse Int

-- | A complex type that contains one <tt>DelegationSet</tt> element for
--   each reusable delegation set that was created by the current Amazon
--   Web Services account.
listReusableDelegationSetsResponse_delegationSets :: Lens' ListReusableDelegationSetsResponse [DelegationSet]

-- | For the second and subsequent calls to
--   <tt>ListReusableDelegationSets</tt>, <tt>Marker</tt> is the value that
--   you specified for the <tt>marker</tt> parameter in the request that
--   produced the current response.
listReusableDelegationSetsResponse_marker :: Lens' ListReusableDelegationSetsResponse Text

-- | A flag that indicates whether there are more reusable delegation sets
--   to be listed.
listReusableDelegationSetsResponse_isTruncated :: Lens' ListReusableDelegationSetsResponse Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListReusableDelegationSets</tt> that produced the
--   current response.
listReusableDelegationSetsResponse_maxItems :: Lens' ListReusableDelegationSetsResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSets
instance GHC.Show.Show Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSets
instance GHC.Read.Read Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSets
instance GHC.Classes.Eq Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSets
instance GHC.Generics.Generic Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSetsResponse
instance GHC.Show.Show Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSetsResponse
instance GHC.Read.Read Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSetsResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSets
instance Control.DeepSeq.NFData Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSetsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSets
instance Control.DeepSeq.NFData Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSets
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSets
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListReusableDelegationSets.ListReusableDelegationSets


-- | Lists the resource record sets in a specified hosted zone.
--   
--   <tt>ListResourceRecordSets</tt> returns up to 300 resource record sets
--   at a time in ASCII order, beginning at a position specified by the
--   <tt>name</tt> and <tt>type</tt> elements.
--   
--   <b>Sort order</b>
--   
--   <tt>ListResourceRecordSets</tt> sorts results first by DNS name with
--   the labels reversed, for example:
--   
--   <pre>
--   com.example.www.
--   </pre>
--   
--   Note the trailing dot, which can change the sort order when the record
--   name contains characters that appear before <tt>.</tt> (decimal 46) in
--   the ASCII table. These characters include the following: <tt>! " # $ %
--   &amp; ' ( ) * + , -</tt>
--   
--   When multiple records have the same DNS name,
--   <tt>ListResourceRecordSets</tt> sorts results by the record type.
--   
--   <b>Specifying where to start listing records</b>
--   
--   You can use the name and type elements to specify the resource record
--   set that the list begins with:
--   
--   <ul>
--   <li><i>If you do not specify Name or Type</i> The results begin with
--   the first resource record set that the hosted zone contains.</li>
--   <li><i>If you specify Name but not Type</i> The results begin with the
--   first resource record set in the list whose name is greater than or
--   equal to <tt>Name</tt>.</li>
--   <li><i>If you specify Type but not Name</i> Amazon Route 53 returns
--   the <tt>InvalidInput</tt> error.</li>
--   <li><i>If you specify both Name and Type</i> The results begin with
--   the first resource record set in the list whose name is greater than
--   or equal to <tt>Name</tt>, and whose type is greater than or equal to
--   <tt>Type</tt>.</li>
--   </ul>
--   
--   <b>Resource record sets that are PENDING</b>
--   
--   This action returns the most current version of the records. This
--   includes records that are <tt>PENDING</tt>, and that are not yet
--   available on all Route 53 DNS servers.
--   
--   <b>Changing resource record sets</b>
--   
--   To ensure that you get an accurate listing of the resource record sets
--   for a hosted zone at a point in time, do not submit a
--   <tt>ChangeResourceRecordSets</tt> request while you're paging through
--   the results of a <tt>ListResourceRecordSets</tt> request. If you do,
--   some pages may display results without the latest changes while other
--   pages display results with the latest changes.
--   
--   <b>Displaying the next page of results</b>
--   
--   If a <tt>ListResourceRecordSets</tt> command returns more than one
--   page of results, the value of <tt>IsTruncated</tt> is <tt>true</tt>.
--   To display the next page of results, get the values of
--   <tt>NextRecordName</tt>, <tt>NextRecordType</tt>, and
--   <tt>NextRecordIdentifier</tt> (if any) from the response. Then submit
--   another <tt>ListResourceRecordSets</tt> request, and specify those
--   values for <tt>StartRecordName</tt>, <tt>StartRecordType</tt>, and
--   <tt>StartRecordIdentifier</tt>.
--   
--   This operation returns paginated results.
module Network.AWS.Route53.ListResourceRecordSets

-- | A request for the resource record sets that are associated with a
--   specified hosted zone.
--   
--   <i>See:</i> <a>newListResourceRecordSets</a> smart constructor.
data ListResourceRecordSets
ListResourceRecordSets' :: Maybe Text -> Maybe RRType -> Maybe Text -> Maybe Text -> ResourceId -> ListResourceRecordSets

-- | The first name in the lexicographic ordering of resource record sets
--   that you want to list. If the specified record name doesn't exist, the
--   results begin with the first resource record set that has a name
--   greater than the value of <tt>name</tt>.
[$sel:startRecordName:ListResourceRecordSets'] :: ListResourceRecordSets -> Maybe Text

-- | The type of resource record set to begin the record listing from.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>MX</tt> |
--   <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> | <tt>SOA</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>API Gateway custom regional API or edge-optimized API</b>:
--   A</li>
--   <li><b>CloudFront distribution</b>: A or AAAA</li>
--   <li><b>Elastic Beanstalk environment that has a regionalized
--   subdomain</b>: A</li>
--   <li><b>Elastic Load Balancing load balancer</b>: A | AAAA</li>
--   <li><b>S3 bucket</b>: A</li>
--   <li><b>VPC interface VPC endpoint</b>: A</li>
--   <li><b>Another resource record set in this hosted zone:</b> The type
--   of the resource record set that the alias references.</li>
--   </ul>
--   
--   Constraint: Specifying <tt>type</tt> without specifying <tt>name</tt>
--   returns an <tt>InvalidInput</tt> error.
[$sel:startRecordType:ListResourceRecordSets'] :: ListResourceRecordSets -> Maybe RRType

-- | <i>Resource record sets that have a routing policy other than
--   simple:</i> If results were truncated for a given DNS name and type,
--   specify the value of <tt>NextRecordIdentifier</tt> from the previous
--   response to get the next resource record set that has the current DNS
--   name and type.
[$sel:startRecordIdentifier:ListResourceRecordSets'] :: ListResourceRecordSets -> Maybe Text

-- | (Optional) The maximum number of resource records sets to include in
--   the response body for this request. If the response includes more than
--   <tt>maxitems</tt> resource record sets, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of the <tt>NextRecordName</tt> and <tt>NextRecordType</tt>
--   elements in the response identify the first resource record set in the
--   next group of <tt>maxitems</tt> resource record sets.
[$sel:maxItems:ListResourceRecordSets'] :: ListResourceRecordSets -> Maybe Text

-- | The ID of the hosted zone that contains the resource record sets that
--   you want to list.
[$sel:hostedZoneId:ListResourceRecordSets'] :: ListResourceRecordSets -> ResourceId

-- | Create a value of <a>ListResourceRecordSets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startRecordName:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSets_startRecordName</a> - The first name in the
--   lexicographic ordering of resource record sets that you want to list.
--   If the specified record name doesn't exist, the results begin with the
--   first resource record set that has a name greater than the value of
--   <tt>name</tt>.
--   
--   <a>$sel:startRecordType:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSets_startRecordType</a> - The type of resource
--   record set to begin the record listing from.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>MX</tt> |
--   <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> | <tt>SOA</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>API Gateway custom regional API or edge-optimized API</b>:
--   A</li>
--   <li><b>CloudFront distribution</b>: A or AAAA</li>
--   <li><b>Elastic Beanstalk environment that has a regionalized
--   subdomain</b>: A</li>
--   <li><b>Elastic Load Balancing load balancer</b>: A | AAAA</li>
--   <li><b>S3 bucket</b>: A</li>
--   <li><b>VPC interface VPC endpoint</b>: A</li>
--   <li><b>Another resource record set in this hosted zone:</b> The type
--   of the resource record set that the alias references.</li>
--   </ul>
--   
--   Constraint: Specifying <tt>type</tt> without specifying <tt>name</tt>
--   returns an <tt>InvalidInput</tt> error.
--   
--   <a>$sel:startRecordIdentifier:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSets_startRecordIdentifier</a> - <i>Resource
--   record sets that have a routing policy other than simple:</i> If
--   results were truncated for a given DNS name and type, specify the
--   value of <tt>NextRecordIdentifier</tt> from the previous response to
--   get the next resource record set that has the current DNS name and
--   type.
--   
--   <a>$sel:maxItems:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSets_maxItems</a> - (Optional) The maximum number
--   of resource records sets to include in the response body for this
--   request. If the response includes more than <tt>maxitems</tt> resource
--   record sets, the value of the <tt>IsTruncated</tt> element in the
--   response is <tt>true</tt>, and the values of the
--   <tt>NextRecordName</tt> and <tt>NextRecordType</tt> elements in the
--   response identify the first resource record set in the next group of
--   <tt>maxitems</tt> resource record sets.
--   
--   <a>$sel:hostedZoneId:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSets_hostedZoneId</a> - The ID of the hosted zone
--   that contains the resource record sets that you want to list.
newListResourceRecordSets :: ResourceId -> ListResourceRecordSets

-- | The first name in the lexicographic ordering of resource record sets
--   that you want to list. If the specified record name doesn't exist, the
--   results begin with the first resource record set that has a name
--   greater than the value of <tt>name</tt>.
listResourceRecordSets_startRecordName :: Lens' ListResourceRecordSets (Maybe Text)

-- | The type of resource record set to begin the record listing from.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>MX</tt> |
--   <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> | <tt>SOA</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>API Gateway custom regional API or edge-optimized API</b>:
--   A</li>
--   <li><b>CloudFront distribution</b>: A or AAAA</li>
--   <li><b>Elastic Beanstalk environment that has a regionalized
--   subdomain</b>: A</li>
--   <li><b>Elastic Load Balancing load balancer</b>: A | AAAA</li>
--   <li><b>S3 bucket</b>: A</li>
--   <li><b>VPC interface VPC endpoint</b>: A</li>
--   <li><b>Another resource record set in this hosted zone:</b> The type
--   of the resource record set that the alias references.</li>
--   </ul>
--   
--   Constraint: Specifying <tt>type</tt> without specifying <tt>name</tt>
--   returns an <tt>InvalidInput</tt> error.
listResourceRecordSets_startRecordType :: Lens' ListResourceRecordSets (Maybe RRType)

-- | <i>Resource record sets that have a routing policy other than
--   simple:</i> If results were truncated for a given DNS name and type,
--   specify the value of <tt>NextRecordIdentifier</tt> from the previous
--   response to get the next resource record set that has the current DNS
--   name and type.
listResourceRecordSets_startRecordIdentifier :: Lens' ListResourceRecordSets (Maybe Text)

-- | (Optional) The maximum number of resource records sets to include in
--   the response body for this request. If the response includes more than
--   <tt>maxitems</tt> resource record sets, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of the <tt>NextRecordName</tt> and <tt>NextRecordType</tt>
--   elements in the response identify the first resource record set in the
--   next group of <tt>maxitems</tt> resource record sets.
listResourceRecordSets_maxItems :: Lens' ListResourceRecordSets (Maybe Text)

-- | The ID of the hosted zone that contains the resource record sets that
--   you want to list.
listResourceRecordSets_hostedZoneId :: Lens' ListResourceRecordSets ResourceId

-- | A complex type that contains list information for the resource record
--   set.
--   
--   <i>See:</i> <a>newListResourceRecordSetsResponse</a> smart
--   constructor.
data ListResourceRecordSetsResponse
ListResourceRecordSetsResponse' :: Maybe RRType -> Maybe Text -> Maybe Text -> Int -> [ResourceRecordSet] -> Bool -> Text -> ListResourceRecordSetsResponse

-- | If the results were truncated, the type of the next record in the
--   list.
--   
--   This element is present only if <tt>IsTruncated</tt> is true.
[$sel:nextRecordType:ListResourceRecordSetsResponse'] :: ListResourceRecordSetsResponse -> Maybe RRType

-- | If the results were truncated, the name of the next record in the
--   list.
--   
--   This element is present only if <tt>IsTruncated</tt> is true.
[$sel:nextRecordName:ListResourceRecordSetsResponse'] :: ListResourceRecordSetsResponse -> Maybe Text

-- | <i>Resource record sets that have a routing policy other than
--   simple:</i> If results were truncated for a given DNS name and type,
--   the value of <tt>SetIdentifier</tt> for the next resource record set
--   that has the current DNS name and type.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
[$sel:nextRecordIdentifier:ListResourceRecordSetsResponse'] :: ListResourceRecordSetsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListResourceRecordSetsResponse'] :: ListResourceRecordSetsResponse -> Int

-- | Information about multiple resource record sets.
[$sel:resourceRecordSets:ListResourceRecordSetsResponse'] :: ListResourceRecordSetsResponse -> [ResourceRecordSet]

-- | A flag that indicates whether more resource record sets remain to be
--   listed. If your results were truncated, you can make a follow-up
--   pagination request by using the <tt>NextRecordName</tt> element.
[$sel:isTruncated:ListResourceRecordSetsResponse'] :: ListResourceRecordSetsResponse -> Bool

-- | The maximum number of records you requested.
[$sel:maxItems:ListResourceRecordSetsResponse'] :: ListResourceRecordSetsResponse -> Text

-- | Create a value of <a>ListResourceRecordSetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextRecordType:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_nextRecordType</a> - If the results
--   were truncated, the type of the next record in the list.
--   
--   This element is present only if <tt>IsTruncated</tt> is true.
--   
--   <a>$sel:nextRecordName:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_nextRecordName</a> - If the results
--   were truncated, the name of the next record in the list.
--   
--   This element is present only if <tt>IsTruncated</tt> is true.
--   
--   <a>$sel:nextRecordIdentifier:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_nextRecordIdentifier</a> -
--   <i>Resource record sets that have a routing policy other than
--   simple:</i> If results were truncated for a given DNS name and type,
--   the value of <tt>SetIdentifier</tt> for the next resource record set
--   that has the current DNS name and type.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   <a>$sel:httpStatus:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceRecordSets:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_resourceRecordSets</a> - Information
--   about multiple resource record sets.
--   
--   <a>$sel:isTruncated:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_isTruncated</a> - A flag that
--   indicates whether more resource record sets remain to be listed. If
--   your results were truncated, you can make a follow-up pagination
--   request by using the <tt>NextRecordName</tt> element.
--   
--   <a>$sel:maxItems:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSetsResponse_maxItems</a> - The maximum number of
--   records you requested.
newListResourceRecordSetsResponse :: Int -> Bool -> Text -> ListResourceRecordSetsResponse

-- | If the results were truncated, the type of the next record in the
--   list.
--   
--   This element is present only if <tt>IsTruncated</tt> is true.
listResourceRecordSetsResponse_nextRecordType :: Lens' ListResourceRecordSetsResponse (Maybe RRType)

-- | If the results were truncated, the name of the next record in the
--   list.
--   
--   This element is present only if <tt>IsTruncated</tt> is true.
listResourceRecordSetsResponse_nextRecordName :: Lens' ListResourceRecordSetsResponse (Maybe Text)

-- | <i>Resource record sets that have a routing policy other than
--   simple:</i> If results were truncated for a given DNS name and type,
--   the value of <tt>SetIdentifier</tt> for the next resource record set
--   that has the current DNS name and type.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
listResourceRecordSetsResponse_nextRecordIdentifier :: Lens' ListResourceRecordSetsResponse (Maybe Text)

-- | The response's http status code.
listResourceRecordSetsResponse_httpStatus :: Lens' ListResourceRecordSetsResponse Int

-- | Information about multiple resource record sets.
listResourceRecordSetsResponse_resourceRecordSets :: Lens' ListResourceRecordSetsResponse [ResourceRecordSet]

-- | A flag that indicates whether more resource record sets remain to be
--   listed. If your results were truncated, you can make a follow-up
--   pagination request by using the <tt>NextRecordName</tt> element.
listResourceRecordSetsResponse_isTruncated :: Lens' ListResourceRecordSetsResponse Bool

-- | The maximum number of records you requested.
listResourceRecordSetsResponse_maxItems :: Lens' ListResourceRecordSetsResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSets
instance GHC.Show.Show Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSets
instance GHC.Read.Read Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSets
instance GHC.Classes.Eq Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSets
instance GHC.Generics.Generic Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSetsResponse
instance GHC.Show.Show Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSetsResponse
instance GHC.Read.Read Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSetsResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSets
instance Control.DeepSeq.NFData Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSetsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSets
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSets
instance Control.DeepSeq.NFData Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSets
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSets
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListResourceRecordSets.ListResourceRecordSets


-- | Lists the configurations for DNS query logging that are associated
--   with the current Amazon Web Services account or the configuration that
--   is associated with a specified hosted zone.
--   
--   For more information about DNS query logs, see
--   <a>CreateQueryLoggingConfig</a>. Additional information, including the
--   format of DNS query logs, appears in <a>Logging DNS Queries</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.
--   
--   This operation returns paginated results.
module Network.AWS.Route53.ListQueryLoggingConfigs

-- | <i>See:</i> <a>newListQueryLoggingConfigs</a> smart constructor.
data ListQueryLoggingConfigs
ListQueryLoggingConfigs' :: Maybe ResourceId -> Maybe Text -> Maybe Text -> ListQueryLoggingConfigs

-- | (Optional) If you want to list the query logging configuration that is
--   associated with a hosted zone, specify the ID in
--   <tt>HostedZoneId</tt>.
--   
--   If you don't specify a hosted zone ID,
--   <tt>ListQueryLoggingConfigs</tt> returns all of the configurations
--   that are associated with the current Amazon Web Services account.
[$sel:hostedZoneId:ListQueryLoggingConfigs'] :: ListQueryLoggingConfigs -> Maybe ResourceId

-- | (Optional) If the current Amazon Web Services account has more than
--   <tt>MaxResults</tt> query logging configurations, use
--   <tt>NextToken</tt> to get the second and subsequent pages of results.
--   
--   For the first <tt>ListQueryLoggingConfigs</tt> request, omit this
--   value.
--   
--   For the second and subsequent requests, get the value of
--   <tt>NextToken</tt> from the previous response and specify that value
--   for <tt>NextToken</tt> in the request.
[$sel:nextToken:ListQueryLoggingConfigs'] :: ListQueryLoggingConfigs -> Maybe Text

-- | (Optional) The maximum number of query logging configurations that you
--   want Amazon Route 53 to return in response to the current request. If
--   the current Amazon Web Services account has more than
--   <tt>MaxResults</tt> configurations, use the value of <a>NextToken</a>
--   in the response to get the next page of results.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Route 53 returns
--   up to 100 configurations.
[$sel:maxResults:ListQueryLoggingConfigs'] :: ListQueryLoggingConfigs -> Maybe Text

-- | Create a value of <a>ListQueryLoggingConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:ListQueryLoggingConfigs'</a>,
--   <a>listQueryLoggingConfigs_hostedZoneId</a> - (Optional) If you want
--   to list the query logging configuration that is associated with a
--   hosted zone, specify the ID in <tt>HostedZoneId</tt>.
--   
--   If you don't specify a hosted zone ID,
--   <tt>ListQueryLoggingConfigs</tt> returns all of the configurations
--   that are associated with the current Amazon Web Services account.
--   
--   <a>$sel:nextToken:ListQueryLoggingConfigs'</a>,
--   <a>listQueryLoggingConfigs_nextToken</a> - (Optional) If the current
--   Amazon Web Services account has more than <tt>MaxResults</tt> query
--   logging configurations, use <tt>NextToken</tt> to get the second and
--   subsequent pages of results.
--   
--   For the first <tt>ListQueryLoggingConfigs</tt> request, omit this
--   value.
--   
--   For the second and subsequent requests, get the value of
--   <tt>NextToken</tt> from the previous response and specify that value
--   for <tt>NextToken</tt> in the request.
--   
--   <a>$sel:maxResults:ListQueryLoggingConfigs'</a>,
--   <a>listQueryLoggingConfigs_maxResults</a> - (Optional) The maximum
--   number of query logging configurations that you want Amazon Route 53
--   to return in response to the current request. If the current Amazon
--   Web Services account has more than <tt>MaxResults</tt> configurations,
--   use the value of <a>NextToken</a> in the response to get the next page
--   of results.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Route 53 returns
--   up to 100 configurations.
newListQueryLoggingConfigs :: ListQueryLoggingConfigs

-- | (Optional) If you want to list the query logging configuration that is
--   associated with a hosted zone, specify the ID in
--   <tt>HostedZoneId</tt>.
--   
--   If you don't specify a hosted zone ID,
--   <tt>ListQueryLoggingConfigs</tt> returns all of the configurations
--   that are associated with the current Amazon Web Services account.
listQueryLoggingConfigs_hostedZoneId :: Lens' ListQueryLoggingConfigs (Maybe ResourceId)

-- | (Optional) If the current Amazon Web Services account has more than
--   <tt>MaxResults</tt> query logging configurations, use
--   <tt>NextToken</tt> to get the second and subsequent pages of results.
--   
--   For the first <tt>ListQueryLoggingConfigs</tt> request, omit this
--   value.
--   
--   For the second and subsequent requests, get the value of
--   <tt>NextToken</tt> from the previous response and specify that value
--   for <tt>NextToken</tt> in the request.
listQueryLoggingConfigs_nextToken :: Lens' ListQueryLoggingConfigs (Maybe Text)

-- | (Optional) The maximum number of query logging configurations that you
--   want Amazon Route 53 to return in response to the current request. If
--   the current Amazon Web Services account has more than
--   <tt>MaxResults</tt> configurations, use the value of <a>NextToken</a>
--   in the response to get the next page of results.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Route 53 returns
--   up to 100 configurations.
listQueryLoggingConfigs_maxResults :: Lens' ListQueryLoggingConfigs (Maybe Text)

-- | <i>See:</i> <a>newListQueryLoggingConfigsResponse</a> smart
--   constructor.
data ListQueryLoggingConfigsResponse
ListQueryLoggingConfigsResponse' :: Maybe Text -> Int -> [QueryLoggingConfig] -> ListQueryLoggingConfigsResponse

-- | If a response includes the last of the query logging configurations
--   that are associated with the current Amazon Web Services account,
--   <tt>NextToken</tt> doesn't appear in the response.
--   
--   If a response doesn't include the last of the configurations, you can
--   get more configurations by submitting another
--   <a>ListQueryLoggingConfigs</a> request. Get the value of
--   <tt>NextToken</tt> that Amazon Route 53 returned in the previous
--   response and include it in <tt>NextToken</tt> in the next request.
[$sel:nextToken:ListQueryLoggingConfigsResponse'] :: ListQueryLoggingConfigsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListQueryLoggingConfigsResponse'] :: ListQueryLoggingConfigsResponse -> Int

-- | An array that contains one <a>QueryLoggingConfig</a> element for each
--   configuration for DNS query logging that is associated with the
--   current Amazon Web Services account.
[$sel:queryLoggingConfigs:ListQueryLoggingConfigsResponse'] :: ListQueryLoggingConfigsResponse -> [QueryLoggingConfig]

-- | Create a value of <a>ListQueryLoggingConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListQueryLoggingConfigs'</a>,
--   <a>listQueryLoggingConfigsResponse_nextToken</a> - If a response
--   includes the last of the query logging configurations that are
--   associated with the current Amazon Web Services account,
--   <tt>NextToken</tt> doesn't appear in the response.
--   
--   If a response doesn't include the last of the configurations, you can
--   get more configurations by submitting another
--   <a>ListQueryLoggingConfigs</a> request. Get the value of
--   <tt>NextToken</tt> that Amazon Route 53 returned in the previous
--   response and include it in <tt>NextToken</tt> in the next request.
--   
--   <a>$sel:httpStatus:ListQueryLoggingConfigsResponse'</a>,
--   <a>listQueryLoggingConfigsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:queryLoggingConfigs:ListQueryLoggingConfigsResponse'</a>,
--   <a>listQueryLoggingConfigsResponse_queryLoggingConfigs</a> - An array
--   that contains one <a>QueryLoggingConfig</a> element for each
--   configuration for DNS query logging that is associated with the
--   current Amazon Web Services account.
newListQueryLoggingConfigsResponse :: Int -> ListQueryLoggingConfigsResponse

-- | If a response includes the last of the query logging configurations
--   that are associated with the current Amazon Web Services account,
--   <tt>NextToken</tt> doesn't appear in the response.
--   
--   If a response doesn't include the last of the configurations, you can
--   get more configurations by submitting another
--   <a>ListQueryLoggingConfigs</a> request. Get the value of
--   <tt>NextToken</tt> that Amazon Route 53 returned in the previous
--   response and include it in <tt>NextToken</tt> in the next request.
listQueryLoggingConfigsResponse_nextToken :: Lens' ListQueryLoggingConfigsResponse (Maybe Text)

-- | The response's http status code.
listQueryLoggingConfigsResponse_httpStatus :: Lens' ListQueryLoggingConfigsResponse Int

-- | An array that contains one <a>QueryLoggingConfig</a> element for each
--   configuration for DNS query logging that is associated with the
--   current Amazon Web Services account.
listQueryLoggingConfigsResponse_queryLoggingConfigs :: Lens' ListQueryLoggingConfigsResponse [QueryLoggingConfig]
instance GHC.Generics.Generic Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigs
instance GHC.Show.Show Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigs
instance GHC.Read.Read Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigs
instance GHC.Classes.Eq Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigs
instance GHC.Generics.Generic Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigsResponse
instance GHC.Show.Show Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigsResponse
instance GHC.Read.Read Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigsResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigs
instance Control.DeepSeq.NFData Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigs
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigs
instance Control.DeepSeq.NFData Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigs
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigs
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListQueryLoggingConfigs.ListQueryLoggingConfigs


-- | Lists all the private hosted zones that a specified VPC is associated
--   with, regardless of which Amazon Web Services account or Amazon Web
--   Services service owns the hosted zones. The <tt>HostedZoneOwner</tt>
--   structure in the response contains one of the following values:
--   
--   <ul>
--   <li>An <tt>OwningAccount</tt> element, which contains the account
--   number of either the current Amazon Web Services account or another
--   Amazon Web Services account. Some services, such as Cloud Map, create
--   hosted zones using the current account.</li>
--   <li>An <tt>OwningService</tt> element, which identifies the Amazon Web
--   Services service that created and owns the hosted zone. For example,
--   if a hosted zone was created by Amazon Elastic File System (Amazon
--   EFS), the value of <tt>Owner</tt> is <tt>efs.amazonaws.com</tt>.</li>
--   </ul>
module Network.AWS.Route53.ListHostedZonesByVPC

-- | Lists all the private hosted zones that a specified VPC is associated
--   with, regardless of which Amazon Web Services account created the
--   hosted zones.
--   
--   <i>See:</i> <a>newListHostedZonesByVPC</a> smart constructor.
data ListHostedZonesByVPC
ListHostedZonesByVPC' :: Maybe Text -> Maybe Text -> Text -> VPCRegion -> ListHostedZonesByVPC

-- | If the previous response included a <tt>NextToken</tt> element, the
--   specified VPC is associated with more hosted zones. To get more hosted
--   zones, submit another <tt>ListHostedZonesByVPC</tt> request.
--   
--   For the value of <tt>NextToken</tt>, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   If the previous response didn't include a <tt>NextToken</tt> element,
--   there are no more hosted zones to get.
[$sel:nextToken:ListHostedZonesByVPC'] :: ListHostedZonesByVPC -> Maybe Text

-- | (Optional) The maximum number of hosted zones that you want Amazon
--   Route 53 to return. If the specified VPC is associated with more than
--   <tt>MaxItems</tt> hosted zones, the response includes a
--   <tt>NextToken</tt> element. <tt>NextToken</tt> contains an encrypted
--   token that identifies the first hosted zone that Route 53 will return
--   if you submit another request.
[$sel:maxItems:ListHostedZonesByVPC'] :: ListHostedZonesByVPC -> Maybe Text

-- | The ID of the Amazon VPC that you want to list hosted zones for.
[$sel:vPCId:ListHostedZonesByVPC'] :: ListHostedZonesByVPC -> Text

-- | For the Amazon VPC that you specified for <tt>VPCId</tt>, the Amazon
--   Web Services Region that you created the VPC in.
[$sel:vPCRegion:ListHostedZonesByVPC'] :: ListHostedZonesByVPC -> VPCRegion

-- | Create a value of <a>ListHostedZonesByVPC</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPC_nextToken</a> - If the previous response
--   included a <tt>NextToken</tt> element, the specified VPC is associated
--   with more hosted zones. To get more hosted zones, submit another
--   <tt>ListHostedZonesByVPC</tt> request.
--   
--   For the value of <tt>NextToken</tt>, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   If the previous response didn't include a <tt>NextToken</tt> element,
--   there are no more hosted zones to get.
--   
--   <a>$sel:maxItems:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPC_maxItems</a> - (Optional) The maximum number
--   of hosted zones that you want Amazon Route 53 to return. If the
--   specified VPC is associated with more than <tt>MaxItems</tt> hosted
--   zones, the response includes a <tt>NextToken</tt> element.
--   <tt>NextToken</tt> contains an encrypted token that identifies the
--   first hosted zone that Route 53 will return if you submit another
--   request.
--   
--   <a>$sel:vPCId:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPC_vPCId</a> - The ID of the Amazon VPC that you
--   want to list hosted zones for.
--   
--   <a>$sel:vPCRegion:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPC_vPCRegion</a> - For the Amazon VPC that you
--   specified for <tt>VPCId</tt>, the Amazon Web Services Region that you
--   created the VPC in.
newListHostedZonesByVPC :: Text -> VPCRegion -> ListHostedZonesByVPC

-- | If the previous response included a <tt>NextToken</tt> element, the
--   specified VPC is associated with more hosted zones. To get more hosted
--   zones, submit another <tt>ListHostedZonesByVPC</tt> request.
--   
--   For the value of <tt>NextToken</tt>, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   If the previous response didn't include a <tt>NextToken</tt> element,
--   there are no more hosted zones to get.
listHostedZonesByVPC_nextToken :: Lens' ListHostedZonesByVPC (Maybe Text)

-- | (Optional) The maximum number of hosted zones that you want Amazon
--   Route 53 to return. If the specified VPC is associated with more than
--   <tt>MaxItems</tt> hosted zones, the response includes a
--   <tt>NextToken</tt> element. <tt>NextToken</tt> contains an encrypted
--   token that identifies the first hosted zone that Route 53 will return
--   if you submit another request.
listHostedZonesByVPC_maxItems :: Lens' ListHostedZonesByVPC (Maybe Text)

-- | The ID of the Amazon VPC that you want to list hosted zones for.
listHostedZonesByVPC_vPCId :: Lens' ListHostedZonesByVPC Text

-- | For the Amazon VPC that you specified for <tt>VPCId</tt>, the Amazon
--   Web Services Region that you created the VPC in.
listHostedZonesByVPC_vPCRegion :: Lens' ListHostedZonesByVPC VPCRegion

-- | <i>See:</i> <a>newListHostedZonesByVPCResponse</a> smart constructor.
data ListHostedZonesByVPCResponse
ListHostedZonesByVPCResponse' :: Maybe Text -> Int -> [HostedZoneSummary] -> Text -> ListHostedZonesByVPCResponse

-- | The value that you will use for <tt>NextToken</tt> in the next
--   <tt>ListHostedZonesByVPC</tt> request.
[$sel:nextToken:ListHostedZonesByVPCResponse'] :: ListHostedZonesByVPCResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListHostedZonesByVPCResponse'] :: ListHostedZonesByVPCResponse -> Int

-- | A list that contains one <tt>HostedZoneSummary</tt> element for each
--   hosted zone that the specified Amazon VPC is associated with. Each
--   <tt>HostedZoneSummary</tt> element contains the hosted zone name and
--   ID, and information about who owns the hosted zone.
[$sel:hostedZoneSummaries:ListHostedZonesByVPCResponse'] :: ListHostedZonesByVPCResponse -> [HostedZoneSummary]

-- | The value that you specified for <tt>MaxItems</tt> in the most recent
--   <tt>ListHostedZonesByVPC</tt> request.
[$sel:maxItems:ListHostedZonesByVPCResponse'] :: ListHostedZonesByVPCResponse -> Text

-- | Create a value of <a>ListHostedZonesByVPCResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPCResponse_nextToken</a> - The value that you
--   will use for <tt>NextToken</tt> in the next
--   <tt>ListHostedZonesByVPC</tt> request.
--   
--   <a>$sel:httpStatus:ListHostedZonesByVPCResponse'</a>,
--   <a>listHostedZonesByVPCResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:hostedZoneSummaries:ListHostedZonesByVPCResponse'</a>,
--   <a>listHostedZonesByVPCResponse_hostedZoneSummaries</a> - A list that
--   contains one <tt>HostedZoneSummary</tt> element for each hosted zone
--   that the specified Amazon VPC is associated with. Each
--   <tt>HostedZoneSummary</tt> element contains the hosted zone name and
--   ID, and information about who owns the hosted zone.
--   
--   <a>$sel:maxItems:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPCResponse_maxItems</a> - The value that you
--   specified for <tt>MaxItems</tt> in the most recent
--   <tt>ListHostedZonesByVPC</tt> request.
newListHostedZonesByVPCResponse :: Int -> Text -> ListHostedZonesByVPCResponse

-- | The value that you will use for <tt>NextToken</tt> in the next
--   <tt>ListHostedZonesByVPC</tt> request.
listHostedZonesByVPCResponse_nextToken :: Lens' ListHostedZonesByVPCResponse (Maybe Text)

-- | The response's http status code.
listHostedZonesByVPCResponse_httpStatus :: Lens' ListHostedZonesByVPCResponse Int

-- | A list that contains one <tt>HostedZoneSummary</tt> element for each
--   hosted zone that the specified Amazon VPC is associated with. Each
--   <tt>HostedZoneSummary</tt> element contains the hosted zone name and
--   ID, and information about who owns the hosted zone.
listHostedZonesByVPCResponse_hostedZoneSummaries :: Lens' ListHostedZonesByVPCResponse [HostedZoneSummary]

-- | The value that you specified for <tt>MaxItems</tt> in the most recent
--   <tt>ListHostedZonesByVPC</tt> request.
listHostedZonesByVPCResponse_maxItems :: Lens' ListHostedZonesByVPCResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPC
instance GHC.Show.Show Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPC
instance GHC.Read.Read Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPC
instance GHC.Classes.Eq Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPC
instance GHC.Generics.Generic Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPCResponse
instance GHC.Show.Show Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPCResponse
instance GHC.Read.Read Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPCResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPCResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPC
instance Control.DeepSeq.NFData Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPCResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPC
instance Control.DeepSeq.NFData Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPC
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPC
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPC
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListHostedZonesByVPC.ListHostedZonesByVPC


-- | Retrieves a list of your hosted zones in lexicographic order. The
--   response includes a <tt>HostedZones</tt> child element for each hosted
--   zone created by the current Amazon Web Services account.
--   
--   <tt>ListHostedZonesByName</tt> sorts hosted zones by name with the
--   labels reversed. For example:
--   
--   <pre>
--   com.example.www.
--   </pre>
--   
--   Note the trailing dot, which can change the sort order in some
--   circumstances.
--   
--   If the domain name includes escape characters or Punycode,
--   <tt>ListHostedZonesByName</tt> alphabetizes the domain name using the
--   escaped or Punycoded value, which is the format that Amazon Route 53
--   saves in its database. For example, to create a hosted zone for
--   exämple.com, you specify ex\344mple.com for the domain name.
--   <tt>ListHostedZonesByName</tt> alphabetizes it as:
--   
--   <pre>
--   com.ex\344mple.
--   </pre>
--   
--   The labels are reversed and alphabetized using the escaped value. For
--   more information about valid domain name formats, including
--   internationalized domain names, see <a>DNS Domain Name Format</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.
--   
--   Route 53 returns up to 100 items in each response. If you have a lot
--   of hosted zones, use the <tt>MaxItems</tt> parameter to list them in
--   groups of up to 100. The response includes values that help navigate
--   from one group of <tt>MaxItems</tt> hosted zones to the next:
--   
--   <ul>
--   <li>The <tt>DNSName</tt> and <tt>HostedZoneId</tt> elements in the
--   response contain the values, if any, specified for the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters in the request
--   that produced the current response.</li>
--   <li>The <tt>MaxItems</tt> element in the response contains the value,
--   if any, that you specified for the <tt>maxitems</tt> parameter in the
--   request that produced the current response.</li>
--   <li>If the value of <tt>IsTruncated</tt> in the response is true,
--   there are more hosted zones associated with the current Amazon Web
--   Services account.If <tt>IsTruncated</tt> is false, this response
--   includes the last hosted zone that is associated with the current
--   account. The <tt>NextDNSName</tt> element and
--   <tt>NextHostedZoneId</tt> elements are omitted from the response.</li>
--   <li>The <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> elements in
--   the response contain the domain name and the hosted zone ID of the
--   next hosted zone that is associated with the current Amazon Web
--   Services account. If you want to list more hosted zones, make another
--   call to <tt>ListHostedZonesByName</tt>, and specify the value of
--   <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters,
--   respectively.</li>
--   </ul>
module Network.AWS.Route53.ListHostedZonesByName

-- | Retrieves a list of the public and private hosted zones that are
--   associated with the current Amazon Web Services account in ASCII order
--   by domain name.
--   
--   <i>See:</i> <a>newListHostedZonesByName</a> smart constructor.
data ListHostedZonesByName
ListHostedZonesByName' :: Maybe ResourceId -> Maybe Text -> Maybe Text -> ListHostedZonesByName

-- | (Optional) For your first request to <tt>ListHostedZonesByName</tt>,
--   do not include the <tt>hostedzoneid</tt> parameter.
--   
--   If you have more hosted zones than the value of <tt>maxitems</tt>,
--   <tt>ListHostedZonesByName</tt> returns only the first
--   <tt>maxitems</tt> hosted zones. To get the next group of
--   <tt>maxitems</tt> hosted zones, submit another request to
--   <tt>ListHostedZonesByName</tt> and include both <tt>dnsname</tt> and
--   <tt>hostedzoneid</tt> parameters. For the value of
--   <tt>hostedzoneid</tt>, specify the value of the
--   <tt>NextHostedZoneId</tt> element from the previous response.
[$sel:hostedZoneId:ListHostedZonesByName'] :: ListHostedZonesByName -> Maybe ResourceId

-- | The maximum number of hosted zones to be included in the response body
--   for this request. If you have more than <tt>maxitems</tt> hosted
--   zones, then the value of the <tt>IsTruncated</tt> element in the
--   response is true, and the values of <tt>NextDNSName</tt> and
--   <tt>NextHostedZoneId</tt> specify the first hosted zone in the next
--   group of <tt>maxitems</tt> hosted zones.
[$sel:maxItems:ListHostedZonesByName'] :: ListHostedZonesByName -> Maybe Text

-- | (Optional) For your first request to <tt>ListHostedZonesByName</tt>,
--   include the <tt>dnsname</tt> parameter only if you want to specify the
--   name of the first hosted zone in the response. If you don't include
--   the <tt>dnsname</tt> parameter, Amazon Route 53 returns all of the
--   hosted zones that were created by the current Amazon Web Services
--   account, in ASCII order. For subsequent requests, include both
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters. For
--   <tt>dnsname</tt>, specify the value of <tt>NextDNSName</tt> from the
--   previous response.
[$sel:dNSName:ListHostedZonesByName'] :: ListHostedZonesByName -> Maybe Text

-- | Create a value of <a>ListHostedZonesByName</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByName_hostedZoneId</a> - (Optional) For your first
--   request to <tt>ListHostedZonesByName</tt>, do not include the
--   <tt>hostedzoneid</tt> parameter.
--   
--   If you have more hosted zones than the value of <tt>maxitems</tt>,
--   <tt>ListHostedZonesByName</tt> returns only the first
--   <tt>maxitems</tt> hosted zones. To get the next group of
--   <tt>maxitems</tt> hosted zones, submit another request to
--   <tt>ListHostedZonesByName</tt> and include both <tt>dnsname</tt> and
--   <tt>hostedzoneid</tt> parameters. For the value of
--   <tt>hostedzoneid</tt>, specify the value of the
--   <tt>NextHostedZoneId</tt> element from the previous response.
--   
--   <a>$sel:maxItems:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByName_maxItems</a> - The maximum number of hosted
--   zones to be included in the response body for this request. If you
--   have more than <tt>maxitems</tt> hosted zones, then the value of the
--   <tt>IsTruncated</tt> element in the response is true, and the values
--   of <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> specify the
--   first hosted zone in the next group of <tt>maxitems</tt> hosted zones.
--   
--   <a>$sel:dNSName:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByName_dNSName</a> - (Optional) For your first
--   request to <tt>ListHostedZonesByName</tt>, include the
--   <tt>dnsname</tt> parameter only if you want to specify the name of the
--   first hosted zone in the response. If you don't include the
--   <tt>dnsname</tt> parameter, Amazon Route 53 returns all of the hosted
--   zones that were created by the current Amazon Web Services account, in
--   ASCII order. For subsequent requests, include both <tt>dnsname</tt>
--   and <tt>hostedzoneid</tt> parameters. For <tt>dnsname</tt>, specify
--   the value of <tt>NextDNSName</tt> from the previous response.
newListHostedZonesByName :: ListHostedZonesByName

-- | (Optional) For your first request to <tt>ListHostedZonesByName</tt>,
--   do not include the <tt>hostedzoneid</tt> parameter.
--   
--   If you have more hosted zones than the value of <tt>maxitems</tt>,
--   <tt>ListHostedZonesByName</tt> returns only the first
--   <tt>maxitems</tt> hosted zones. To get the next group of
--   <tt>maxitems</tt> hosted zones, submit another request to
--   <tt>ListHostedZonesByName</tt> and include both <tt>dnsname</tt> and
--   <tt>hostedzoneid</tt> parameters. For the value of
--   <tt>hostedzoneid</tt>, specify the value of the
--   <tt>NextHostedZoneId</tt> element from the previous response.
listHostedZonesByName_hostedZoneId :: Lens' ListHostedZonesByName (Maybe ResourceId)

-- | The maximum number of hosted zones to be included in the response body
--   for this request. If you have more than <tt>maxitems</tt> hosted
--   zones, then the value of the <tt>IsTruncated</tt> element in the
--   response is true, and the values of <tt>NextDNSName</tt> and
--   <tt>NextHostedZoneId</tt> specify the first hosted zone in the next
--   group of <tt>maxitems</tt> hosted zones.
listHostedZonesByName_maxItems :: Lens' ListHostedZonesByName (Maybe Text)

-- | (Optional) For your first request to <tt>ListHostedZonesByName</tt>,
--   include the <tt>dnsname</tt> parameter only if you want to specify the
--   name of the first hosted zone in the response. If you don't include
--   the <tt>dnsname</tt> parameter, Amazon Route 53 returns all of the
--   hosted zones that were created by the current Amazon Web Services
--   account, in ASCII order. For subsequent requests, include both
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters. For
--   <tt>dnsname</tt>, specify the value of <tt>NextDNSName</tt> from the
--   previous response.
listHostedZonesByName_dNSName :: Lens' ListHostedZonesByName (Maybe Text)

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListHostedZonesByNameResponse</a> smart constructor.
data ListHostedZonesByNameResponse
ListHostedZonesByNameResponse' :: Maybe ResourceId -> Maybe ResourceId -> Maybe Text -> Maybe Text -> Int -> [HostedZone] -> Bool -> Text -> ListHostedZonesByNameResponse

-- | The ID that Amazon Route 53 assigned to the hosted zone when you
--   created it.
[$sel:hostedZoneId:ListHostedZonesByNameResponse'] :: ListHostedZonesByNameResponse -> Maybe ResourceId

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextHostedZoneId</tt> identifies the first hosted zone in the next
--   group of <tt>maxitems</tt> hosted zones. Call
--   <tt>ListHostedZonesByName</tt> again and specify the value of
--   <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters, respectively.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
[$sel:nextHostedZoneId:ListHostedZonesByNameResponse'] :: ListHostedZonesByNameResponse -> Maybe ResourceId

-- | For the second and subsequent calls to <tt>ListHostedZonesByName</tt>,
--   <tt>DNSName</tt> is the value that you specified for the
--   <tt>dnsname</tt> parameter in the request that produced the current
--   response.
[$sel:dNSName:ListHostedZonesByNameResponse'] :: ListHostedZonesByNameResponse -> Maybe Text

-- | If <tt>IsTruncated</tt> is true, the value of <tt>NextDNSName</tt> is
--   the name of the first hosted zone in the next group of
--   <tt>maxitems</tt> hosted zones. Call <tt>ListHostedZonesByName</tt>
--   again and specify the value of <tt>NextDNSName</tt> and
--   <tt>NextHostedZoneId</tt> in the <tt>dnsname</tt> and
--   <tt>hostedzoneid</tt> parameters, respectively.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
[$sel:nextDNSName:ListHostedZonesByNameResponse'] :: ListHostedZonesByNameResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListHostedZonesByNameResponse'] :: ListHostedZonesByNameResponse -> Int

-- | A complex type that contains general information about the hosted
--   zone.
[$sel:hostedZones:ListHostedZonesByNameResponse'] :: ListHostedZonesByNameResponse -> [HostedZone]

-- | A flag that indicates whether there are more hosted zones to be
--   listed. If the response was truncated, you can get the next group of
--   <tt>maxitems</tt> hosted zones by calling
--   <tt>ListHostedZonesByName</tt> again and specifying the values of
--   <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> elements in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters.
[$sel:isTruncated:ListHostedZonesByNameResponse'] :: ListHostedZonesByNameResponse -> Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListHostedZonesByName</tt> that produced the current
--   response.
[$sel:maxItems:ListHostedZonesByNameResponse'] :: ListHostedZonesByNameResponse -> Text

-- | Create a value of <a>ListHostedZonesByNameResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByNameResponse_hostedZoneId</a> - The ID that Amazon
--   Route 53 assigned to the hosted zone when you created it.
--   
--   <a>$sel:nextHostedZoneId:ListHostedZonesByNameResponse'</a>,
--   <a>listHostedZonesByNameResponse_nextHostedZoneId</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextHostedZoneId</tt> identifies the first hosted zone in the next
--   group of <tt>maxitems</tt> hosted zones. Call
--   <tt>ListHostedZonesByName</tt> again and specify the value of
--   <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters, respectively.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
--   
--   <a>$sel:dNSName:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByNameResponse_dNSName</a> - For the second and
--   subsequent calls to <tt>ListHostedZonesByName</tt>, <tt>DNSName</tt>
--   is the value that you specified for the <tt>dnsname</tt> parameter in
--   the request that produced the current response.
--   
--   <a>$sel:nextDNSName:ListHostedZonesByNameResponse'</a>,
--   <a>listHostedZonesByNameResponse_nextDNSName</a> - If
--   <tt>IsTruncated</tt> is true, the value of <tt>NextDNSName</tt> is the
--   name of the first hosted zone in the next group of <tt>maxitems</tt>
--   hosted zones. Call <tt>ListHostedZonesByName</tt> again and specify
--   the value of <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters, respectively.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
--   
--   <a>$sel:httpStatus:ListHostedZonesByNameResponse'</a>,
--   <a>listHostedZonesByNameResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:hostedZones:ListHostedZonesByNameResponse'</a>,
--   <a>listHostedZonesByNameResponse_hostedZones</a> - A complex type that
--   contains general information about the hosted zone.
--   
--   <a>$sel:isTruncated:ListHostedZonesByNameResponse'</a>,
--   <a>listHostedZonesByNameResponse_isTruncated</a> - A flag that
--   indicates whether there are more hosted zones to be listed. If the
--   response was truncated, you can get the next group of
--   <tt>maxitems</tt> hosted zones by calling
--   <tt>ListHostedZonesByName</tt> again and specifying the values of
--   <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> elements in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters.
--   
--   <a>$sel:maxItems:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByNameResponse_maxItems</a> - The value that you
--   specified for the <tt>maxitems</tt> parameter in the call to
--   <tt>ListHostedZonesByName</tt> that produced the current response.
newListHostedZonesByNameResponse :: Int -> Bool -> Text -> ListHostedZonesByNameResponse

-- | The ID that Amazon Route 53 assigned to the hosted zone when you
--   created it.
listHostedZonesByNameResponse_hostedZoneId :: Lens' ListHostedZonesByNameResponse (Maybe ResourceId)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextHostedZoneId</tt> identifies the first hosted zone in the next
--   group of <tt>maxitems</tt> hosted zones. Call
--   <tt>ListHostedZonesByName</tt> again and specify the value of
--   <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters, respectively.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
listHostedZonesByNameResponse_nextHostedZoneId :: Lens' ListHostedZonesByNameResponse (Maybe ResourceId)

-- | For the second and subsequent calls to <tt>ListHostedZonesByName</tt>,
--   <tt>DNSName</tt> is the value that you specified for the
--   <tt>dnsname</tt> parameter in the request that produced the current
--   response.
listHostedZonesByNameResponse_dNSName :: Lens' ListHostedZonesByNameResponse (Maybe Text)

-- | If <tt>IsTruncated</tt> is true, the value of <tt>NextDNSName</tt> is
--   the name of the first hosted zone in the next group of
--   <tt>maxitems</tt> hosted zones. Call <tt>ListHostedZonesByName</tt>
--   again and specify the value of <tt>NextDNSName</tt> and
--   <tt>NextHostedZoneId</tt> in the <tt>dnsname</tt> and
--   <tt>hostedzoneid</tt> parameters, respectively.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
listHostedZonesByNameResponse_nextDNSName :: Lens' ListHostedZonesByNameResponse (Maybe Text)

-- | The response's http status code.
listHostedZonesByNameResponse_httpStatus :: Lens' ListHostedZonesByNameResponse Int

-- | A complex type that contains general information about the hosted
--   zone.
listHostedZonesByNameResponse_hostedZones :: Lens' ListHostedZonesByNameResponse [HostedZone]

-- | A flag that indicates whether there are more hosted zones to be
--   listed. If the response was truncated, you can get the next group of
--   <tt>maxitems</tt> hosted zones by calling
--   <tt>ListHostedZonesByName</tt> again and specifying the values of
--   <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> elements in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters.
listHostedZonesByNameResponse_isTruncated :: Lens' ListHostedZonesByNameResponse Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListHostedZonesByName</tt> that produced the current
--   response.
listHostedZonesByNameResponse_maxItems :: Lens' ListHostedZonesByNameResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByName
instance GHC.Show.Show Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByName
instance GHC.Read.Read Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByName
instance GHC.Classes.Eq Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByName
instance GHC.Generics.Generic Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByNameResponse
instance GHC.Show.Show Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByNameResponse
instance GHC.Read.Read Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByNameResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByNameResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByName
instance Control.DeepSeq.NFData Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByNameResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByName
instance Control.DeepSeq.NFData Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByName
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByName
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByName
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListHostedZonesByName.ListHostedZonesByName


-- | Retrieves a list of the public and private hosted zones that are
--   associated with the current Amazon Web Services account. The response
--   includes a <tt>HostedZones</tt> child element for each hosted zone.
--   
--   Amazon Route 53 returns a maximum of 100 items in each response. If
--   you have a lot of hosted zones, you can use the <tt>maxitems</tt>
--   parameter to list them in groups of up to 100.
--   
--   This operation returns paginated results.
module Network.AWS.Route53.ListHostedZones

-- | A request to retrieve a list of the public and private hosted zones
--   that are associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newListHostedZones</a> smart constructor.
data ListHostedZones
ListHostedZones' :: Maybe ResourceId -> Maybe Text -> Maybe Text -> ListHostedZones

-- | If you're using reusable delegation sets and you want to list all of
--   the hosted zones that are associated with a reusable delegation set,
--   specify the ID of that reusable delegation set.
[$sel:delegationSetId:ListHostedZones'] :: ListHostedZones -> Maybe ResourceId

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more hosted zones. To get more hosted zones,
--   submit another <tt>ListHostedZones</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first hosted zone that Amazon Route 53 will return if you submit
--   another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more hosted zones to get.
[$sel:marker:ListHostedZones'] :: ListHostedZones -> Maybe Text

-- | (Optional) The maximum number of hosted zones that you want Amazon
--   Route 53 to return. If you have more than <tt>maxitems</tt> hosted
--   zones, the value of <tt>IsTruncated</tt> in the response is
--   <tt>true</tt>, and the value of <tt>NextMarker</tt> is the hosted zone
--   ID of the first hosted zone that Route 53 will return if you submit
--   another request.
[$sel:maxItems:ListHostedZones'] :: ListHostedZones -> Maybe Text

-- | Create a value of <a>ListHostedZones</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:delegationSetId:ListHostedZones'</a>,
--   <a>listHostedZones_delegationSetId</a> - If you're using reusable
--   delegation sets and you want to list all of the hosted zones that are
--   associated with a reusable delegation set, specify the ID of that
--   reusable delegation set.
--   
--   <a>$sel:marker:ListHostedZones'</a>, <a>listHostedZones_marker</a> -
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more hosted zones. To get more hosted zones,
--   submit another <tt>ListHostedZones</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first hosted zone that Amazon Route 53 will return if you submit
--   another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more hosted zones to get.
--   
--   <a>$sel:maxItems:ListHostedZones'</a>, <a>listHostedZones_maxItems</a>
--   - (Optional) The maximum number of hosted zones that you want Amazon
--   Route 53 to return. If you have more than <tt>maxitems</tt> hosted
--   zones, the value of <tt>IsTruncated</tt> in the response is
--   <tt>true</tt>, and the value of <tt>NextMarker</tt> is the hosted zone
--   ID of the first hosted zone that Route 53 will return if you submit
--   another request.
newListHostedZones :: ListHostedZones

-- | If you're using reusable delegation sets and you want to list all of
--   the hosted zones that are associated with a reusable delegation set,
--   specify the ID of that reusable delegation set.
listHostedZones_delegationSetId :: Lens' ListHostedZones (Maybe ResourceId)

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more hosted zones. To get more hosted zones,
--   submit another <tt>ListHostedZones</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first hosted zone that Amazon Route 53 will return if you submit
--   another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more hosted zones to get.
listHostedZones_marker :: Lens' ListHostedZones (Maybe Text)

-- | (Optional) The maximum number of hosted zones that you want Amazon
--   Route 53 to return. If you have more than <tt>maxitems</tt> hosted
--   zones, the value of <tt>IsTruncated</tt> in the response is
--   <tt>true</tt>, and the value of <tt>NextMarker</tt> is the hosted zone
--   ID of the first hosted zone that Route 53 will return if you submit
--   another request.
listHostedZones_maxItems :: Lens' ListHostedZones (Maybe Text)

-- | <i>See:</i> <a>newListHostedZonesResponse</a> smart constructor.
data ListHostedZonesResponse
ListHostedZonesResponse' :: Maybe Text -> Maybe Text -> Int -> [HostedZone] -> Bool -> Text -> ListHostedZonesResponse

-- | For the second and subsequent calls to <tt>ListHostedZones</tt>,
--   <tt>Marker</tt> is the value that you specified for the
--   <tt>marker</tt> parameter in the request that produced the current
--   response.
[$sel:marker:ListHostedZonesResponse'] :: ListHostedZonesResponse -> Maybe Text

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextMarker</tt> identifies the first hosted zone in the next group
--   of hosted zones. Submit another <tt>ListHostedZones</tt> request, and
--   specify the value of <tt>NextMarker</tt> from the response in the
--   <tt>marker</tt> parameter.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
[$sel:nextMarker:ListHostedZonesResponse'] :: ListHostedZonesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListHostedZonesResponse'] :: ListHostedZonesResponse -> Int

-- | A complex type that contains general information about the hosted
--   zone.
[$sel:hostedZones:ListHostedZonesResponse'] :: ListHostedZonesResponse -> [HostedZone]

-- | A flag indicating whether there are more hosted zones to be listed. If
--   the response was truncated, you can get more hosted zones by
--   submitting another <tt>ListHostedZones</tt> request and specifying the
--   value of <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
[$sel:isTruncated:ListHostedZonesResponse'] :: ListHostedZonesResponse -> Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListHostedZones</tt> that produced the current
--   response.
[$sel:maxItems:ListHostedZonesResponse'] :: ListHostedZonesResponse -> Text

-- | Create a value of <a>ListHostedZonesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListHostedZones'</a>,
--   <a>listHostedZonesResponse_marker</a> - For the second and subsequent
--   calls to <tt>ListHostedZones</tt>, <tt>Marker</tt> is the value that
--   you specified for the <tt>marker</tt> parameter in the request that
--   produced the current response.
--   
--   <a>$sel:nextMarker:ListHostedZonesResponse'</a>,
--   <a>listHostedZonesResponse_nextMarker</a> - If <tt>IsTruncated</tt> is
--   <tt>true</tt>, the value of <tt>NextMarker</tt> identifies the first
--   hosted zone in the next group of hosted zones. Submit another
--   <tt>ListHostedZones</tt> request, and specify the value of
--   <tt>NextMarker</tt> from the response in the <tt>marker</tt>
--   parameter.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
--   
--   <a>$sel:httpStatus:ListHostedZonesResponse'</a>,
--   <a>listHostedZonesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:hostedZones:ListHostedZonesResponse'</a>,
--   <a>listHostedZonesResponse_hostedZones</a> - A complex type that
--   contains general information about the hosted zone.
--   
--   <a>$sel:isTruncated:ListHostedZonesResponse'</a>,
--   <a>listHostedZonesResponse_isTruncated</a> - A flag indicating whether
--   there are more hosted zones to be listed. If the response was
--   truncated, you can get more hosted zones by submitting another
--   <tt>ListHostedZones</tt> request and specifying the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
--   
--   <a>$sel:maxItems:ListHostedZones'</a>,
--   <a>listHostedZonesResponse_maxItems</a> - The value that you specified
--   for the <tt>maxitems</tt> parameter in the call to
--   <tt>ListHostedZones</tt> that produced the current response.
newListHostedZonesResponse :: Int -> Bool -> Text -> ListHostedZonesResponse

-- | For the second and subsequent calls to <tt>ListHostedZones</tt>,
--   <tt>Marker</tt> is the value that you specified for the
--   <tt>marker</tt> parameter in the request that produced the current
--   response.
listHostedZonesResponse_marker :: Lens' ListHostedZonesResponse (Maybe Text)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextMarker</tt> identifies the first hosted zone in the next group
--   of hosted zones. Submit another <tt>ListHostedZones</tt> request, and
--   specify the value of <tt>NextMarker</tt> from the response in the
--   <tt>marker</tt> parameter.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
listHostedZonesResponse_nextMarker :: Lens' ListHostedZonesResponse (Maybe Text)

-- | The response's http status code.
listHostedZonesResponse_httpStatus :: Lens' ListHostedZonesResponse Int

-- | A complex type that contains general information about the hosted
--   zone.
listHostedZonesResponse_hostedZones :: Lens' ListHostedZonesResponse [HostedZone]

-- | A flag indicating whether there are more hosted zones to be listed. If
--   the response was truncated, you can get more hosted zones by
--   submitting another <tt>ListHostedZones</tt> request and specifying the
--   value of <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
listHostedZonesResponse_isTruncated :: Lens' ListHostedZonesResponse Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListHostedZones</tt> that produced the current
--   response.
listHostedZonesResponse_maxItems :: Lens' ListHostedZonesResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListHostedZones.ListHostedZones
instance GHC.Show.Show Network.AWS.Route53.ListHostedZones.ListHostedZones
instance GHC.Read.Read Network.AWS.Route53.ListHostedZones.ListHostedZones
instance GHC.Classes.Eq Network.AWS.Route53.ListHostedZones.ListHostedZones
instance GHC.Generics.Generic Network.AWS.Route53.ListHostedZones.ListHostedZonesResponse
instance GHC.Show.Show Network.AWS.Route53.ListHostedZones.ListHostedZonesResponse
instance GHC.Read.Read Network.AWS.Route53.ListHostedZones.ListHostedZonesResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListHostedZones.ListHostedZonesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListHostedZones.ListHostedZones
instance Control.DeepSeq.NFData Network.AWS.Route53.ListHostedZones.ListHostedZonesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53.ListHostedZones.ListHostedZones
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListHostedZones.ListHostedZones
instance Control.DeepSeq.NFData Network.AWS.Route53.ListHostedZones.ListHostedZones
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListHostedZones.ListHostedZones
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListHostedZones.ListHostedZones
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListHostedZones.ListHostedZones


-- | Retrieve a list of the health checks that are associated with the
--   current Amazon Web Services account.
--   
--   This operation returns paginated results.
module Network.AWS.Route53.ListHealthChecks

-- | A request to retrieve a list of the health checks that are associated
--   with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newListHealthChecks</a> smart constructor.
data ListHealthChecks
ListHealthChecks' :: Maybe Text -> Maybe Text -> ListHealthChecks

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more health checks. To get another group,
--   submit another <tt>ListHealthChecks</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first health check that Amazon Route 53 will return if you submit
--   another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more health checks to get.
[$sel:marker:ListHealthChecks'] :: ListHealthChecks -> Maybe Text

-- | The maximum number of health checks that you want
--   <tt>ListHealthChecks</tt> to return in response to the current
--   request. Amazon Route 53 returns a maximum of 100 items. If you set
--   <tt>MaxItems</tt> to a value greater than 100, Route 53 returns only
--   the first 100 health checks.
[$sel:maxItems:ListHealthChecks'] :: ListHealthChecks -> Maybe Text

-- | Create a value of <a>ListHealthChecks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListHealthChecks'</a>, <a>listHealthChecks_marker</a> -
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more health checks. To get another group,
--   submit another <tt>ListHealthChecks</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first health check that Amazon Route 53 will return if you submit
--   another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more health checks to get.
--   
--   <a>$sel:maxItems:ListHealthChecks'</a>,
--   <a>listHealthChecks_maxItems</a> - The maximum number of health checks
--   that you want <tt>ListHealthChecks</tt> to return in response to the
--   current request. Amazon Route 53 returns a maximum of 100 items. If
--   you set <tt>MaxItems</tt> to a value greater than 100, Route 53
--   returns only the first 100 health checks.
newListHealthChecks :: ListHealthChecks

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more health checks. To get another group,
--   submit another <tt>ListHealthChecks</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first health check that Amazon Route 53 will return if you submit
--   another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more health checks to get.
listHealthChecks_marker :: Lens' ListHealthChecks (Maybe Text)

-- | The maximum number of health checks that you want
--   <tt>ListHealthChecks</tt> to return in response to the current
--   request. Amazon Route 53 returns a maximum of 100 items. If you set
--   <tt>MaxItems</tt> to a value greater than 100, Route 53 returns only
--   the first 100 health checks.
listHealthChecks_maxItems :: Lens' ListHealthChecks (Maybe Text)

-- | A complex type that contains the response to a
--   <tt>ListHealthChecks</tt> request.
--   
--   <i>See:</i> <a>newListHealthChecksResponse</a> smart constructor.
data ListHealthChecksResponse
ListHealthChecksResponse' :: Maybe Text -> Int -> [HealthCheck] -> Text -> Bool -> Text -> ListHealthChecksResponse

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextMarker</tt> identifies the first health check that Amazon
--   Route 53 returns if you submit another <tt>ListHealthChecks</tt>
--   request and specify the value of <tt>NextMarker</tt> in the
--   <tt>marker</tt> parameter.
[$sel:nextMarker:ListHealthChecksResponse'] :: ListHealthChecksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListHealthChecksResponse'] :: ListHealthChecksResponse -> Int

-- | A complex type that contains one <tt>HealthCheck</tt> element for each
--   health check that is associated with the current Amazon Web Services
--   account.
[$sel:healthChecks:ListHealthChecksResponse'] :: ListHealthChecksResponse -> [HealthCheck]

-- | For the second and subsequent calls to <tt>ListHealthChecks</tt>,
--   <tt>Marker</tt> is the value that you specified for the
--   <tt>marker</tt> parameter in the previous request.
[$sel:marker:ListHealthChecksResponse'] :: ListHealthChecksResponse -> Text

-- | A flag that indicates whether there are more health checks to be
--   listed. If the response was truncated, you can get the next group of
--   health checks by submitting another <tt>ListHealthChecks</tt> request
--   and specifying the value of <tt>NextMarker</tt> in the <tt>marker</tt>
--   parameter.
[$sel:isTruncated:ListHealthChecksResponse'] :: ListHealthChecksResponse -> Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListHealthChecks</tt> that produced the current
--   response.
[$sel:maxItems:ListHealthChecksResponse'] :: ListHealthChecksResponse -> Text

-- | Create a value of <a>ListHealthChecksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:ListHealthChecksResponse'</a>,
--   <a>listHealthChecksResponse_nextMarker</a> - If <tt>IsTruncated</tt>
--   is <tt>true</tt>, the value of <tt>NextMarker</tt> identifies the
--   first health check that Amazon Route 53 returns if you submit another
--   <tt>ListHealthChecks</tt> request and specify the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
--   
--   <a>$sel:httpStatus:ListHealthChecksResponse'</a>,
--   <a>listHealthChecksResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:healthChecks:ListHealthChecksResponse'</a>,
--   <a>listHealthChecksResponse_healthChecks</a> - A complex type that
--   contains one <tt>HealthCheck</tt> element for each health check that
--   is associated with the current Amazon Web Services account.
--   
--   <a>$sel:marker:ListHealthChecks'</a>,
--   <a>listHealthChecksResponse_marker</a> - For the second and subsequent
--   calls to <tt>ListHealthChecks</tt>, <tt>Marker</tt> is the value that
--   you specified for the <tt>marker</tt> parameter in the previous
--   request.
--   
--   <a>$sel:isTruncated:ListHealthChecksResponse'</a>,
--   <a>listHealthChecksResponse_isTruncated</a> - A flag that indicates
--   whether there are more health checks to be listed. If the response was
--   truncated, you can get the next group of health checks by submitting
--   another <tt>ListHealthChecks</tt> request and specifying the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
--   
--   <a>$sel:maxItems:ListHealthChecks'</a>,
--   <a>listHealthChecksResponse_maxItems</a> - The value that you
--   specified for the <tt>maxitems</tt> parameter in the call to
--   <tt>ListHealthChecks</tt> that produced the current response.
newListHealthChecksResponse :: Int -> Text -> Bool -> Text -> ListHealthChecksResponse

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextMarker</tt> identifies the first health check that Amazon
--   Route 53 returns if you submit another <tt>ListHealthChecks</tt>
--   request and specify the value of <tt>NextMarker</tt> in the
--   <tt>marker</tt> parameter.
listHealthChecksResponse_nextMarker :: Lens' ListHealthChecksResponse (Maybe Text)

-- | The response's http status code.
listHealthChecksResponse_httpStatus :: Lens' ListHealthChecksResponse Int

-- | A complex type that contains one <tt>HealthCheck</tt> element for each
--   health check that is associated with the current Amazon Web Services
--   account.
listHealthChecksResponse_healthChecks :: Lens' ListHealthChecksResponse [HealthCheck]

-- | For the second and subsequent calls to <tt>ListHealthChecks</tt>,
--   <tt>Marker</tt> is the value that you specified for the
--   <tt>marker</tt> parameter in the previous request.
listHealthChecksResponse_marker :: Lens' ListHealthChecksResponse Text

-- | A flag that indicates whether there are more health checks to be
--   listed. If the response was truncated, you can get the next group of
--   health checks by submitting another <tt>ListHealthChecks</tt> request
--   and specifying the value of <tt>NextMarker</tt> in the <tt>marker</tt>
--   parameter.
listHealthChecksResponse_isTruncated :: Lens' ListHealthChecksResponse Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListHealthChecks</tt> that produced the current
--   response.
listHealthChecksResponse_maxItems :: Lens' ListHealthChecksResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListHealthChecks.ListHealthChecks
instance GHC.Show.Show Network.AWS.Route53.ListHealthChecks.ListHealthChecks
instance GHC.Read.Read Network.AWS.Route53.ListHealthChecks.ListHealthChecks
instance GHC.Classes.Eq Network.AWS.Route53.ListHealthChecks.ListHealthChecks
instance GHC.Generics.Generic Network.AWS.Route53.ListHealthChecks.ListHealthChecksResponse
instance GHC.Show.Show Network.AWS.Route53.ListHealthChecks.ListHealthChecksResponse
instance GHC.Read.Read Network.AWS.Route53.ListHealthChecks.ListHealthChecksResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListHealthChecks.ListHealthChecksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListHealthChecks.ListHealthChecks
instance Control.DeepSeq.NFData Network.AWS.Route53.ListHealthChecks.ListHealthChecksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Route53.ListHealthChecks.ListHealthChecks
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListHealthChecks.ListHealthChecks
instance Control.DeepSeq.NFData Network.AWS.Route53.ListHealthChecks.ListHealthChecks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListHealthChecks.ListHealthChecks
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListHealthChecks.ListHealthChecks
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListHealthChecks.ListHealthChecks


-- | Retrieves a list of supported geographic locations.
--   
--   Countries are listed first, and continents are listed last. If Amazon
--   Route 53 supports subdivisions for a country (for example, states or
--   provinces), the subdivisions for that country are listed in
--   alphabetical order immediately after the corresponding country.
--   
--   Route 53 does not perform authorization for this API because it
--   retrieves information that is already available to the public.
--   
--   For a list of supported geolocation codes, see the <a>GeoLocation</a>
--   data type.
module Network.AWS.Route53.ListGeoLocations

-- | A request to get a list of geographic locations that Amazon Route 53
--   supports for geolocation resource record sets.
--   
--   <i>See:</i> <a>newListGeoLocations</a> smart constructor.
data ListGeoLocations
ListGeoLocations' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ListGeoLocations

-- | The code for the state of the United States with which you want to
--   start listing locations that Amazon Route 53 supports for geolocation.
--   If Route 53 has already returned a page or more of results, if
--   <tt>IsTruncated</tt> is <tt>true</tt>, and if
--   <tt>NextSubdivisionCode</tt> from the previous response has a value,
--   enter that value in <tt>startsubdivisioncode</tt> to return the next
--   page of results.
--   
--   To list subdivisions (U.S. states), you must include both
--   <tt>startcountrycode</tt> and <tt>startsubdivisioncode</tt>.
[$sel:startSubdivisionCode:ListGeoLocations'] :: ListGeoLocations -> Maybe Text

-- | (Optional) The maximum number of geolocations to be included in the
--   response body for this request. If more than <tt>maxitems</tt>
--   geolocations remain to be listed, then the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>.
[$sel:maxItems:ListGeoLocations'] :: ListGeoLocations -> Maybe Text

-- | The code for the country with which you want to start listing
--   locations that Amazon Route 53 supports for geolocation. If Route 53
--   has already returned a page or more of results, if
--   <tt>IsTruncated</tt> is <tt>true</tt>, and if <tt>NextCountryCode</tt>
--   from the previous response has a value, enter that value in
--   <tt>startcountrycode</tt> to return the next page of results.
[$sel:startCountryCode:ListGeoLocations'] :: ListGeoLocations -> Maybe Text

-- | The code for the continent with which you want to start listing
--   locations that Amazon Route 53 supports for geolocation. If Route 53
--   has already returned a page or more of results, if
--   <tt>IsTruncated</tt> is true, and if <tt>NextContinentCode</tt> from
--   the previous response has a value, enter that value in
--   <tt>startcontinentcode</tt> to return the next page of results.
--   
--   Include <tt>startcontinentcode</tt> only if you want to list
--   continents. Don't include <tt>startcontinentcode</tt> when you're
--   listing countries or countries with their subdivisions.
[$sel:startContinentCode:ListGeoLocations'] :: ListGeoLocations -> Maybe Text

-- | Create a value of <a>ListGeoLocations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startSubdivisionCode:ListGeoLocations'</a>,
--   <a>listGeoLocations_startSubdivisionCode</a> - The code for the state
--   of the United States with which you want to start listing locations
--   that Amazon Route 53 supports for geolocation. If Route 53 has already
--   returned a page or more of results, if <tt>IsTruncated</tt> is
--   <tt>true</tt>, and if <tt>NextSubdivisionCode</tt> from the previous
--   response has a value, enter that value in
--   <tt>startsubdivisioncode</tt> to return the next page of results.
--   
--   To list subdivisions (U.S. states), you must include both
--   <tt>startcountrycode</tt> and <tt>startsubdivisioncode</tt>.
--   
--   <a>$sel:maxItems:ListGeoLocations'</a>,
--   <a>listGeoLocations_maxItems</a> - (Optional) The maximum number of
--   geolocations to be included in the response body for this request. If
--   more than <tt>maxitems</tt> geolocations remain to be listed, then the
--   value of the <tt>IsTruncated</tt> element in the response is
--   <tt>true</tt>.
--   
--   <a>$sel:startCountryCode:ListGeoLocations'</a>,
--   <a>listGeoLocations_startCountryCode</a> - The code for the country
--   with which you want to start listing locations that Amazon Route 53
--   supports for geolocation. If Route 53 has already returned a page or
--   more of results, if <tt>IsTruncated</tt> is <tt>true</tt>, and if
--   <tt>NextCountryCode</tt> from the previous response has a value, enter
--   that value in <tt>startcountrycode</tt> to return the next page of
--   results.
--   
--   <a>$sel:startContinentCode:ListGeoLocations'</a>,
--   <a>listGeoLocations_startContinentCode</a> - The code for the
--   continent with which you want to start listing locations that Amazon
--   Route 53 supports for geolocation. If Route 53 has already returned a
--   page or more of results, if <tt>IsTruncated</tt> is true, and if
--   <tt>NextContinentCode</tt> from the previous response has a value,
--   enter that value in <tt>startcontinentcode</tt> to return the next
--   page of results.
--   
--   Include <tt>startcontinentcode</tt> only if you want to list
--   continents. Don't include <tt>startcontinentcode</tt> when you're
--   listing countries or countries with their subdivisions.
newListGeoLocations :: ListGeoLocations

-- | The code for the state of the United States with which you want to
--   start listing locations that Amazon Route 53 supports for geolocation.
--   If Route 53 has already returned a page or more of results, if
--   <tt>IsTruncated</tt> is <tt>true</tt>, and if
--   <tt>NextSubdivisionCode</tt> from the previous response has a value,
--   enter that value in <tt>startsubdivisioncode</tt> to return the next
--   page of results.
--   
--   To list subdivisions (U.S. states), you must include both
--   <tt>startcountrycode</tt> and <tt>startsubdivisioncode</tt>.
listGeoLocations_startSubdivisionCode :: Lens' ListGeoLocations (Maybe Text)

-- | (Optional) The maximum number of geolocations to be included in the
--   response body for this request. If more than <tt>maxitems</tt>
--   geolocations remain to be listed, then the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>.
listGeoLocations_maxItems :: Lens' ListGeoLocations (Maybe Text)

-- | The code for the country with which you want to start listing
--   locations that Amazon Route 53 supports for geolocation. If Route 53
--   has already returned a page or more of results, if
--   <tt>IsTruncated</tt> is <tt>true</tt>, and if <tt>NextCountryCode</tt>
--   from the previous response has a value, enter that value in
--   <tt>startcountrycode</tt> to return the next page of results.
listGeoLocations_startCountryCode :: Lens' ListGeoLocations (Maybe Text)

-- | The code for the continent with which you want to start listing
--   locations that Amazon Route 53 supports for geolocation. If Route 53
--   has already returned a page or more of results, if
--   <tt>IsTruncated</tt> is true, and if <tt>NextContinentCode</tt> from
--   the previous response has a value, enter that value in
--   <tt>startcontinentcode</tt> to return the next page of results.
--   
--   Include <tt>startcontinentcode</tt> only if you want to list
--   continents. Don't include <tt>startcontinentcode</tt> when you're
--   listing countries or countries with their subdivisions.
listGeoLocations_startContinentCode :: Lens' ListGeoLocations (Maybe Text)

-- | A complex type containing the response information for the request.
--   
--   <i>See:</i> <a>newListGeoLocationsResponse</a> smart constructor.
data ListGeoLocationsResponse
ListGeoLocationsResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> [GeoLocationDetails] -> Bool -> Text -> ListGeoLocationsResponse

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextContinentCode</tt> in the <tt>startcontinentcode</tt>
--   parameter in another <tt>ListGeoLocations</tt> request.
[$sel:nextContinentCode:ListGeoLocationsResponse'] :: ListGeoLocationsResponse -> Maybe Text

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextCountryCode</tt> in the <tt>startcountrycode</tt> parameter in
--   another <tt>ListGeoLocations</tt> request.
[$sel:nextCountryCode:ListGeoLocationsResponse'] :: ListGeoLocationsResponse -> Maybe Text

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextSubdivisionCode</tt> in the <tt>startsubdivisioncode</tt>
--   parameter in another <tt>ListGeoLocations</tt> request.
[$sel:nextSubdivisionCode:ListGeoLocationsResponse'] :: ListGeoLocationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListGeoLocationsResponse'] :: ListGeoLocationsResponse -> Int

-- | A complex type that contains one <tt>GeoLocationDetails</tt> element
--   for each location that Amazon Route 53 supports for geolocation.
[$sel:geoLocationDetailsList:ListGeoLocationsResponse'] :: ListGeoLocationsResponse -> [GeoLocationDetails]

-- | A value that indicates whether more locations remain to be listed
--   after the last location in this response. If so, the value of
--   <tt>IsTruncated</tt> is <tt>true</tt>. To get more values, submit
--   another request and include the values of <tt>NextContinentCode</tt>,
--   <tt>NextCountryCode</tt>, and <tt>NextSubdivisionCode</tt> in the
--   <tt>startcontinentcode</tt>, <tt>startcountrycode</tt>, and
--   <tt>startsubdivisioncode</tt>, as applicable.
[$sel:isTruncated:ListGeoLocationsResponse'] :: ListGeoLocationsResponse -> Bool

-- | The value that you specified for <tt>MaxItems</tt> in the request.
[$sel:maxItems:ListGeoLocationsResponse'] :: ListGeoLocationsResponse -> Text

-- | Create a value of <a>ListGeoLocationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextContinentCode:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_nextContinentCode</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextContinentCode</tt> in the <tt>startcontinentcode</tt>
--   parameter in another <tt>ListGeoLocations</tt> request.
--   
--   <a>$sel:nextCountryCode:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_nextCountryCode</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextCountryCode</tt> in the <tt>startcountrycode</tt> parameter in
--   another <tt>ListGeoLocations</tt> request.
--   
--   <a>$sel:nextSubdivisionCode:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_nextSubdivisionCode</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextSubdivisionCode</tt> in the <tt>startsubdivisioncode</tt>
--   parameter in another <tt>ListGeoLocations</tt> request.
--   
--   <a>$sel:httpStatus:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:geoLocationDetailsList:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_geoLocationDetailsList</a> - A complex
--   type that contains one <tt>GeoLocationDetails</tt> element for each
--   location that Amazon Route 53 supports for geolocation.
--   
--   <a>$sel:isTruncated:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_isTruncated</a> - A value that indicates
--   whether more locations remain to be listed after the last location in
--   this response. If so, the value of <tt>IsTruncated</tt> is
--   <tt>true</tt>. To get more values, submit another request and include
--   the values of <tt>NextContinentCode</tt>, <tt>NextCountryCode</tt>,
--   and <tt>NextSubdivisionCode</tt> in the <tt>startcontinentcode</tt>,
--   <tt>startcountrycode</tt>, and <tt>startsubdivisioncode</tt>, as
--   applicable.
--   
--   <a>$sel:maxItems:ListGeoLocations'</a>,
--   <a>listGeoLocationsResponse_maxItems</a> - The value that you
--   specified for <tt>MaxItems</tt> in the request.
newListGeoLocationsResponse :: Int -> Bool -> Text -> ListGeoLocationsResponse

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextContinentCode</tt> in the <tt>startcontinentcode</tt>
--   parameter in another <tt>ListGeoLocations</tt> request.
listGeoLocationsResponse_nextContinentCode :: Lens' ListGeoLocationsResponse (Maybe Text)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextCountryCode</tt> in the <tt>startcountrycode</tt> parameter in
--   another <tt>ListGeoLocations</tt> request.
listGeoLocationsResponse_nextCountryCode :: Lens' ListGeoLocationsResponse (Maybe Text)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextSubdivisionCode</tt> in the <tt>startsubdivisioncode</tt>
--   parameter in another <tt>ListGeoLocations</tt> request.
listGeoLocationsResponse_nextSubdivisionCode :: Lens' ListGeoLocationsResponse (Maybe Text)

-- | The response's http status code.
listGeoLocationsResponse_httpStatus :: Lens' ListGeoLocationsResponse Int

-- | A complex type that contains one <tt>GeoLocationDetails</tt> element
--   for each location that Amazon Route 53 supports for geolocation.
listGeoLocationsResponse_geoLocationDetailsList :: Lens' ListGeoLocationsResponse [GeoLocationDetails]

-- | A value that indicates whether more locations remain to be listed
--   after the last location in this response. If so, the value of
--   <tt>IsTruncated</tt> is <tt>true</tt>. To get more values, submit
--   another request and include the values of <tt>NextContinentCode</tt>,
--   <tt>NextCountryCode</tt>, and <tt>NextSubdivisionCode</tt> in the
--   <tt>startcontinentcode</tt>, <tt>startcountrycode</tt>, and
--   <tt>startsubdivisioncode</tt>, as applicable.
listGeoLocationsResponse_isTruncated :: Lens' ListGeoLocationsResponse Bool

-- | The value that you specified for <tt>MaxItems</tt> in the request.
listGeoLocationsResponse_maxItems :: Lens' ListGeoLocationsResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.ListGeoLocations.ListGeoLocations
instance GHC.Show.Show Network.AWS.Route53.ListGeoLocations.ListGeoLocations
instance GHC.Read.Read Network.AWS.Route53.ListGeoLocations.ListGeoLocations
instance GHC.Classes.Eq Network.AWS.Route53.ListGeoLocations.ListGeoLocations
instance GHC.Generics.Generic Network.AWS.Route53.ListGeoLocations.ListGeoLocationsResponse
instance GHC.Show.Show Network.AWS.Route53.ListGeoLocations.ListGeoLocationsResponse
instance GHC.Read.Read Network.AWS.Route53.ListGeoLocations.ListGeoLocationsResponse
instance GHC.Classes.Eq Network.AWS.Route53.ListGeoLocations.ListGeoLocationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ListGeoLocations.ListGeoLocations
instance Control.DeepSeq.NFData Network.AWS.Route53.ListGeoLocations.ListGeoLocationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ListGeoLocations.ListGeoLocations
instance Control.DeepSeq.NFData Network.AWS.Route53.ListGeoLocations.ListGeoLocations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ListGeoLocations.ListGeoLocations
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ListGeoLocations.ListGeoLocations
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ListGeoLocations.ListGeoLocations


-- | Gets the number of traffic policy instances that are associated with
--   the current Amazon Web Services account.
module Network.AWS.Route53.GetTrafficPolicyInstanceCount

-- | Request to get the number of traffic policy instances that are
--   associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newGetTrafficPolicyInstanceCount</a> smart constructor.
data GetTrafficPolicyInstanceCount
GetTrafficPolicyInstanceCount' :: GetTrafficPolicyInstanceCount

-- | Create a value of <a>GetTrafficPolicyInstanceCount</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetTrafficPolicyInstanceCount :: GetTrafficPolicyInstanceCount

-- | A complex type that contains information about the resource record
--   sets that Amazon Route 53 created based on a specified traffic policy.
--   
--   <i>See:</i> <a>newGetTrafficPolicyInstanceCountResponse</a> smart
--   constructor.
data GetTrafficPolicyInstanceCountResponse
GetTrafficPolicyInstanceCountResponse' :: Int -> Int -> GetTrafficPolicyInstanceCountResponse

-- | The response's http status code.
[$sel:httpStatus:GetTrafficPolicyInstanceCountResponse'] :: GetTrafficPolicyInstanceCountResponse -> Int

-- | The number of traffic policy instances that are associated with the
--   current Amazon Web Services account.
[$sel:trafficPolicyInstanceCount:GetTrafficPolicyInstanceCountResponse'] :: GetTrafficPolicyInstanceCountResponse -> Int

-- | Create a value of <a>GetTrafficPolicyInstanceCountResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetTrafficPolicyInstanceCountResponse'</a>,
--   <a>getTrafficPolicyInstanceCountResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:trafficPolicyInstanceCount:GetTrafficPolicyInstanceCountResponse'</a>,
--   <a>getTrafficPolicyInstanceCountResponse_trafficPolicyInstanceCount</a>
--   - The number of traffic policy instances that are associated with the
--   current Amazon Web Services account.
newGetTrafficPolicyInstanceCountResponse :: Int -> Int -> GetTrafficPolicyInstanceCountResponse

-- | The response's http status code.
getTrafficPolicyInstanceCountResponse_httpStatus :: Lens' GetTrafficPolicyInstanceCountResponse Int

-- | The number of traffic policy instances that are associated with the
--   current Amazon Web Services account.
getTrafficPolicyInstanceCountResponse_trafficPolicyInstanceCount :: Lens' GetTrafficPolicyInstanceCountResponse Int
instance GHC.Generics.Generic Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCount
instance GHC.Show.Show Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCount
instance GHC.Read.Read Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCount
instance GHC.Classes.Eq Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCount
instance GHC.Generics.Generic Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCountResponse
instance GHC.Show.Show Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCountResponse
instance GHC.Read.Read Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCountResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCountResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCount
instance Control.DeepSeq.NFData Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCountResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCount
instance Control.DeepSeq.NFData Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCount
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCount
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCount
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetTrafficPolicyInstanceCount.GetTrafficPolicyInstanceCount


-- | Gets information about a specified traffic policy instance.
--   
--   After you submit a <tt>CreateTrafficPolicyInstance</tt> or an
--   <tt>UpdateTrafficPolicyInstance</tt> request, there's a brief delay
--   while Amazon Route 53 creates the resource record sets that are
--   specified in the traffic policy definition. For more information, see
--   the <tt>State</tt> response element.
--   
--   In the Route 53 console, traffic policy instances are known as policy
--   records.
module Network.AWS.Route53.GetTrafficPolicyInstance

-- | Gets information about a specified traffic policy instance.
--   
--   <i>See:</i> <a>newGetTrafficPolicyInstance</a> smart constructor.
data GetTrafficPolicyInstance
GetTrafficPolicyInstance' :: Text -> GetTrafficPolicyInstance

-- | The ID of the traffic policy instance that you want to get information
--   about.
[$sel:id:GetTrafficPolicyInstance'] :: GetTrafficPolicyInstance -> Text

-- | Create a value of <a>GetTrafficPolicyInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetTrafficPolicyInstance'</a>,
--   <a>getTrafficPolicyInstance_id</a> - The ID of the traffic policy
--   instance that you want to get information about.
newGetTrafficPolicyInstance :: Text -> GetTrafficPolicyInstance

-- | The ID of the traffic policy instance that you want to get information
--   about.
getTrafficPolicyInstance_id :: Lens' GetTrafficPolicyInstance Text

-- | A complex type that contains information about the resource record
--   sets that Amazon Route 53 created based on a specified traffic policy.
--   
--   <i>See:</i> <a>newGetTrafficPolicyInstanceResponse</a> smart
--   constructor.
data GetTrafficPolicyInstanceResponse
GetTrafficPolicyInstanceResponse' :: Int -> TrafficPolicyInstance -> GetTrafficPolicyInstanceResponse

-- | The response's http status code.
[$sel:httpStatus:GetTrafficPolicyInstanceResponse'] :: GetTrafficPolicyInstanceResponse -> Int

-- | A complex type that contains settings for the traffic policy instance.
[$sel:trafficPolicyInstance:GetTrafficPolicyInstanceResponse'] :: GetTrafficPolicyInstanceResponse -> TrafficPolicyInstance

-- | Create a value of <a>GetTrafficPolicyInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetTrafficPolicyInstanceResponse'</a>,
--   <a>getTrafficPolicyInstanceResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:trafficPolicyInstance:GetTrafficPolicyInstanceResponse'</a>,
--   <a>getTrafficPolicyInstanceResponse_trafficPolicyInstance</a> - A
--   complex type that contains settings for the traffic policy instance.
newGetTrafficPolicyInstanceResponse :: Int -> TrafficPolicyInstance -> GetTrafficPolicyInstanceResponse

-- | The response's http status code.
getTrafficPolicyInstanceResponse_httpStatus :: Lens' GetTrafficPolicyInstanceResponse Int

-- | A complex type that contains settings for the traffic policy instance.
getTrafficPolicyInstanceResponse_trafficPolicyInstance :: Lens' GetTrafficPolicyInstanceResponse TrafficPolicyInstance
instance GHC.Generics.Generic Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstance
instance GHC.Show.Show Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstance
instance GHC.Read.Read Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstance
instance GHC.Classes.Eq Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstance
instance GHC.Generics.Generic Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstanceResponse
instance GHC.Show.Show Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstanceResponse
instance GHC.Read.Read Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstanceResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstance
instance Control.DeepSeq.NFData Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstance
instance Control.DeepSeq.NFData Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetTrafficPolicyInstance.GetTrafficPolicyInstance


-- | Gets information about a specific traffic policy version.
--   
--   For information about how of deleting a traffic policy affects the
--   response from <tt>GetTrafficPolicy</tt>, see
--   <a>DeleteTrafficPolicy</a>.
module Network.AWS.Route53.GetTrafficPolicy

-- | Gets information about a specific traffic policy version.
--   
--   <i>See:</i> <a>newGetTrafficPolicy</a> smart constructor.
data GetTrafficPolicy
GetTrafficPolicy' :: Text -> Natural -> GetTrafficPolicy

-- | The ID of the traffic policy that you want to get information about.
[$sel:id:GetTrafficPolicy'] :: GetTrafficPolicy -> Text

-- | The version number of the traffic policy that you want to get
--   information about.
[$sel:version:GetTrafficPolicy'] :: GetTrafficPolicy -> Natural

-- | Create a value of <a>GetTrafficPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetTrafficPolicy'</a>, <a>getTrafficPolicy_id</a> - The ID
--   of the traffic policy that you want to get information about.
--   
--   <a>$sel:version:GetTrafficPolicy'</a>, <a>getTrafficPolicy_version</a>
--   - The version number of the traffic policy that you want to get
--   information about.
newGetTrafficPolicy :: Text -> Natural -> GetTrafficPolicy

-- | The ID of the traffic policy that you want to get information about.
getTrafficPolicy_id :: Lens' GetTrafficPolicy Text

-- | The version number of the traffic policy that you want to get
--   information about.
getTrafficPolicy_version :: Lens' GetTrafficPolicy Natural

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newGetTrafficPolicyResponse</a> smart constructor.
data GetTrafficPolicyResponse
GetTrafficPolicyResponse' :: Int -> TrafficPolicy -> GetTrafficPolicyResponse

-- | The response's http status code.
[$sel:httpStatus:GetTrafficPolicyResponse'] :: GetTrafficPolicyResponse -> Int

-- | A complex type that contains settings for the specified traffic
--   policy.
[$sel:trafficPolicy:GetTrafficPolicyResponse'] :: GetTrafficPolicyResponse -> TrafficPolicy

-- | Create a value of <a>GetTrafficPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetTrafficPolicyResponse'</a>,
--   <a>getTrafficPolicyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:trafficPolicy:GetTrafficPolicyResponse'</a>,
--   <a>getTrafficPolicyResponse_trafficPolicy</a> - A complex type that
--   contains settings for the specified traffic policy.
newGetTrafficPolicyResponse :: Int -> TrafficPolicy -> GetTrafficPolicyResponse

-- | The response's http status code.
getTrafficPolicyResponse_httpStatus :: Lens' GetTrafficPolicyResponse Int

-- | A complex type that contains settings for the specified traffic
--   policy.
getTrafficPolicyResponse_trafficPolicy :: Lens' GetTrafficPolicyResponse TrafficPolicy
instance GHC.Generics.Generic Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicy
instance GHC.Show.Show Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicy
instance GHC.Read.Read Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicy
instance GHC.Classes.Eq Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicy
instance GHC.Generics.Generic Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicyResponse
instance GHC.Show.Show Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicyResponse
instance GHC.Read.Read Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicyResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetTrafficPolicy.GetTrafficPolicy


-- | Gets the maximum number of hosted zones that you can associate with
--   the specified reusable delegation set.
--   
--   For the default limit, see <a>Limits</a> in the <i>Amazon Route 53
--   Developer Guide</i>. To request a higher limit, <a>open a case</a>.
module Network.AWS.Route53.GetReusableDelegationSetLimit

-- | A complex type that contains information about the request to create a
--   hosted zone.
--   
--   <i>See:</i> <a>newGetReusableDelegationSetLimit</a> smart constructor.
data GetReusableDelegationSetLimit
GetReusableDelegationSetLimit' :: ReusableDelegationSetLimitType -> ResourceId -> GetReusableDelegationSetLimit

-- | Specify <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> to get the
--   maximum number of hosted zones that you can associate with the
--   specified reusable delegation set.
[$sel:type':GetReusableDelegationSetLimit'] :: GetReusableDelegationSetLimit -> ReusableDelegationSetLimitType

-- | The ID of the delegation set that you want to get the limit for.
[$sel:delegationSetId:GetReusableDelegationSetLimit'] :: GetReusableDelegationSetLimit -> ResourceId

-- | Create a value of <a>GetReusableDelegationSetLimit</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':GetReusableDelegationSetLimit'</a>,
--   <a>getReusableDelegationSetLimit_type</a> - Specify
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> to get the maximum
--   number of hosted zones that you can associate with the specified
--   reusable delegation set.
--   
--   <a>$sel:delegationSetId:GetReusableDelegationSetLimit'</a>,
--   <a>getReusableDelegationSetLimit_delegationSetId</a> - The ID of the
--   delegation set that you want to get the limit for.
newGetReusableDelegationSetLimit :: ReusableDelegationSetLimitType -> ResourceId -> GetReusableDelegationSetLimit

-- | Specify <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> to get the
--   maximum number of hosted zones that you can associate with the
--   specified reusable delegation set.
getReusableDelegationSetLimit_type :: Lens' GetReusableDelegationSetLimit ReusableDelegationSetLimitType

-- | The ID of the delegation set that you want to get the limit for.
getReusableDelegationSetLimit_delegationSetId :: Lens' GetReusableDelegationSetLimit ResourceId

-- | A complex type that contains the requested limit.
--   
--   <i>See:</i> <a>newGetReusableDelegationSetLimitResponse</a> smart
--   constructor.
data GetReusableDelegationSetLimitResponse
GetReusableDelegationSetLimitResponse' :: Int -> ReusableDelegationSetLimit -> Natural -> GetReusableDelegationSetLimitResponse

-- | The response's http status code.
[$sel:httpStatus:GetReusableDelegationSetLimitResponse'] :: GetReusableDelegationSetLimitResponse -> Int

-- | The current setting for the limit on hosted zones that you can
--   associate with the specified reusable delegation set.
[$sel:limit:GetReusableDelegationSetLimitResponse'] :: GetReusableDelegationSetLimitResponse -> ReusableDelegationSetLimit

-- | The current number of hosted zones that you can associate with the
--   specified reusable delegation set.
[$sel:count:GetReusableDelegationSetLimitResponse'] :: GetReusableDelegationSetLimitResponse -> Natural

-- | Create a value of <a>GetReusableDelegationSetLimitResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetReusableDelegationSetLimitResponse'</a>,
--   <a>getReusableDelegationSetLimitResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:limit:GetReusableDelegationSetLimitResponse'</a>,
--   <a>getReusableDelegationSetLimitResponse_limit</a> - The current
--   setting for the limit on hosted zones that you can associate with the
--   specified reusable delegation set.
--   
--   <a>$sel:count:GetReusableDelegationSetLimitResponse'</a>,
--   <a>getReusableDelegationSetLimitResponse_count</a> - The current
--   number of hosted zones that you can associate with the specified
--   reusable delegation set.
newGetReusableDelegationSetLimitResponse :: Int -> ReusableDelegationSetLimit -> Natural -> GetReusableDelegationSetLimitResponse

-- | The response's http status code.
getReusableDelegationSetLimitResponse_httpStatus :: Lens' GetReusableDelegationSetLimitResponse Int

-- | The current setting for the limit on hosted zones that you can
--   associate with the specified reusable delegation set.
getReusableDelegationSetLimitResponse_limit :: Lens' GetReusableDelegationSetLimitResponse ReusableDelegationSetLimit

-- | The current number of hosted zones that you can associate with the
--   specified reusable delegation set.
getReusableDelegationSetLimitResponse_count :: Lens' GetReusableDelegationSetLimitResponse Natural
instance GHC.Generics.Generic Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimit
instance GHC.Show.Show Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimit
instance GHC.Read.Read Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimit
instance GHC.Classes.Eq Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimit
instance GHC.Generics.Generic Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimitResponse
instance GHC.Show.Show Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimitResponse
instance GHC.Read.Read Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimitResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimitResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimit
instance Control.DeepSeq.NFData Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimitResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimit
instance Control.DeepSeq.NFData Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimit
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimit
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimit
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetReusableDelegationSetLimit.GetReusableDelegationSetLimit


-- | Retrieves information about a specified reusable delegation set,
--   including the four name servers that are assigned to the delegation
--   set.
module Network.AWS.Route53.GetReusableDelegationSet

-- | A request to get information about a specified reusable delegation
--   set.
--   
--   <i>See:</i> <a>newGetReusableDelegationSet</a> smart constructor.
data GetReusableDelegationSet
GetReusableDelegationSet' :: ResourceId -> GetReusableDelegationSet

-- | The ID of the reusable delegation set that you want to get a list of
--   name servers for.
[$sel:id:GetReusableDelegationSet'] :: GetReusableDelegationSet -> ResourceId

-- | Create a value of <a>GetReusableDelegationSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetReusableDelegationSet'</a>,
--   <a>getReusableDelegationSet_id</a> - The ID of the reusable delegation
--   set that you want to get a list of name servers for.
newGetReusableDelegationSet :: ResourceId -> GetReusableDelegationSet

-- | The ID of the reusable delegation set that you want to get a list of
--   name servers for.
getReusableDelegationSet_id :: Lens' GetReusableDelegationSet ResourceId

-- | A complex type that contains the response to the
--   <tt>GetReusableDelegationSet</tt> request.
--   
--   <i>See:</i> <a>newGetReusableDelegationSetResponse</a> smart
--   constructor.
data GetReusableDelegationSetResponse
GetReusableDelegationSetResponse' :: Int -> DelegationSet -> GetReusableDelegationSetResponse

-- | The response's http status code.
[$sel:httpStatus:GetReusableDelegationSetResponse'] :: GetReusableDelegationSetResponse -> Int

-- | A complex type that contains information about the reusable delegation
--   set.
[$sel:delegationSet:GetReusableDelegationSetResponse'] :: GetReusableDelegationSetResponse -> DelegationSet

-- | Create a value of <a>GetReusableDelegationSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetReusableDelegationSetResponse'</a>,
--   <a>getReusableDelegationSetResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:delegationSet:GetReusableDelegationSetResponse'</a>,
--   <a>getReusableDelegationSetResponse_delegationSet</a> - A complex type
--   that contains information about the reusable delegation set.
newGetReusableDelegationSetResponse :: Int -> DelegationSet -> GetReusableDelegationSetResponse

-- | The response's http status code.
getReusableDelegationSetResponse_httpStatus :: Lens' GetReusableDelegationSetResponse Int

-- | A complex type that contains information about the reusable delegation
--   set.
getReusableDelegationSetResponse_delegationSet :: Lens' GetReusableDelegationSetResponse DelegationSet
instance GHC.Generics.Generic Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSet
instance GHC.Show.Show Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSet
instance GHC.Read.Read Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSet
instance GHC.Classes.Eq Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSet
instance GHC.Generics.Generic Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSetResponse
instance GHC.Show.Show Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSetResponse
instance GHC.Read.Read Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSetResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSet
instance Control.DeepSeq.NFData Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSetResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSet
instance Control.DeepSeq.NFData Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSet
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSet
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetReusableDelegationSet.GetReusableDelegationSet


-- | Gets information about a specified configuration for DNS query
--   logging.
--   
--   For more information about DNS query logs, see
--   <a>CreateQueryLoggingConfig</a> and <a>Logging DNS Queries</a>.
module Network.AWS.Route53.GetQueryLoggingConfig

-- | <i>See:</i> <a>newGetQueryLoggingConfig</a> smart constructor.
data GetQueryLoggingConfig
GetQueryLoggingConfig' :: Text -> GetQueryLoggingConfig

-- | The ID of the configuration for DNS query logging that you want to get
--   information about.
[$sel:id:GetQueryLoggingConfig'] :: GetQueryLoggingConfig -> Text

-- | Create a value of <a>GetQueryLoggingConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetQueryLoggingConfig'</a>, <a>getQueryLoggingConfig_id</a>
--   - The ID of the configuration for DNS query logging that you want to
--   get information about.
newGetQueryLoggingConfig :: Text -> GetQueryLoggingConfig

-- | The ID of the configuration for DNS query logging that you want to get
--   information about.
getQueryLoggingConfig_id :: Lens' GetQueryLoggingConfig Text

-- | <i>See:</i> <a>newGetQueryLoggingConfigResponse</a> smart constructor.
data GetQueryLoggingConfigResponse
GetQueryLoggingConfigResponse' :: Int -> QueryLoggingConfig -> GetQueryLoggingConfigResponse

-- | The response's http status code.
[$sel:httpStatus:GetQueryLoggingConfigResponse'] :: GetQueryLoggingConfigResponse -> Int

-- | A complex type that contains information about the query logging
--   configuration that you specified in a <a>GetQueryLoggingConfig</a>
--   request.
[$sel:queryLoggingConfig:GetQueryLoggingConfigResponse'] :: GetQueryLoggingConfigResponse -> QueryLoggingConfig

-- | Create a value of <a>GetQueryLoggingConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetQueryLoggingConfigResponse'</a>,
--   <a>getQueryLoggingConfigResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:queryLoggingConfig:GetQueryLoggingConfigResponse'</a>,
--   <a>getQueryLoggingConfigResponse_queryLoggingConfig</a> - A complex
--   type that contains information about the query logging configuration
--   that you specified in a <a>GetQueryLoggingConfig</a> request.
newGetQueryLoggingConfigResponse :: Int -> QueryLoggingConfig -> GetQueryLoggingConfigResponse

-- | The response's http status code.
getQueryLoggingConfigResponse_httpStatus :: Lens' GetQueryLoggingConfigResponse Int

-- | A complex type that contains information about the query logging
--   configuration that you specified in a <a>GetQueryLoggingConfig</a>
--   request.
getQueryLoggingConfigResponse_queryLoggingConfig :: Lens' GetQueryLoggingConfigResponse QueryLoggingConfig
instance GHC.Generics.Generic Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfig
instance GHC.Show.Show Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfig
instance GHC.Read.Read Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfig
instance GHC.Classes.Eq Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfig
instance GHC.Generics.Generic Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfigResponse
instance GHC.Show.Show Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfigResponse
instance GHC.Read.Read Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfig
instance Control.DeepSeq.NFData Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfig
instance Control.DeepSeq.NFData Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetQueryLoggingConfig.GetQueryLoggingConfig


-- | Gets the specified limit for a specified hosted zone, for example, the
--   maximum number of records that you can create in the hosted zone.
--   
--   For the default limit, see <a>Limits</a> in the <i>Amazon Route 53
--   Developer Guide</i>. To request a higher limit, <a>open a case</a>.
module Network.AWS.Route53.GetHostedZoneLimit

-- | A complex type that contains information about the request to create a
--   hosted zone.
--   
--   <i>See:</i> <a>newGetHostedZoneLimit</a> smart constructor.
data GetHostedZoneLimit
GetHostedZoneLimit' :: HostedZoneLimitType -> ResourceId -> GetHostedZoneLimit

-- | The limit that you want to get. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
[$sel:type':GetHostedZoneLimit'] :: GetHostedZoneLimit -> HostedZoneLimitType

-- | The ID of the hosted zone that you want to get a limit for.
[$sel:hostedZoneId:GetHostedZoneLimit'] :: GetHostedZoneLimit -> ResourceId

-- | Create a value of <a>GetHostedZoneLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':GetHostedZoneLimit'</a>, <a>getHostedZoneLimit_type</a>
--   - The limit that you want to get. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
--   
--   <a>$sel:hostedZoneId:GetHostedZoneLimit'</a>,
--   <a>getHostedZoneLimit_hostedZoneId</a> - The ID of the hosted zone
--   that you want to get a limit for.
newGetHostedZoneLimit :: HostedZoneLimitType -> ResourceId -> GetHostedZoneLimit

-- | The limit that you want to get. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
getHostedZoneLimit_type :: Lens' GetHostedZoneLimit HostedZoneLimitType

-- | The ID of the hosted zone that you want to get a limit for.
getHostedZoneLimit_hostedZoneId :: Lens' GetHostedZoneLimit ResourceId

-- | A complex type that contains the requested limit.
--   
--   <i>See:</i> <a>newGetHostedZoneLimitResponse</a> smart constructor.
data GetHostedZoneLimitResponse
GetHostedZoneLimitResponse' :: Int -> HostedZoneLimit -> Natural -> GetHostedZoneLimitResponse

-- | The response's http status code.
[$sel:httpStatus:GetHostedZoneLimitResponse'] :: GetHostedZoneLimitResponse -> Int

-- | The current setting for the specified limit. For example, if you
--   specified <tt>MAX_RRSETS_BY_ZONE</tt> for the value of <tt>Type</tt>
--   in the request, the value of <tt>Limit</tt> is the maximum number of
--   records that you can create in the specified hosted zone.
[$sel:limit:GetHostedZoneLimitResponse'] :: GetHostedZoneLimitResponse -> HostedZoneLimit

-- | The current number of entities that you have created of the specified
--   type. For example, if you specified <tt>MAX_RRSETS_BY_ZONE</tt> for
--   the value of <tt>Type</tt> in the request, the value of <tt>Count</tt>
--   is the current number of records that you have created in the
--   specified hosted zone.
[$sel:count:GetHostedZoneLimitResponse'] :: GetHostedZoneLimitResponse -> Natural

-- | Create a value of <a>GetHostedZoneLimitResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHostedZoneLimitResponse'</a>,
--   <a>getHostedZoneLimitResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:limit:GetHostedZoneLimitResponse'</a>,
--   <a>getHostedZoneLimitResponse_limit</a> - The current setting for the
--   specified limit. For example, if you specified
--   <tt>MAX_RRSETS_BY_ZONE</tt> for the value of <tt>Type</tt> in the
--   request, the value of <tt>Limit</tt> is the maximum number of records
--   that you can create in the specified hosted zone.
--   
--   <a>$sel:count:GetHostedZoneLimitResponse'</a>,
--   <a>getHostedZoneLimitResponse_count</a> - The current number of
--   entities that you have created of the specified type. For example, if
--   you specified <tt>MAX_RRSETS_BY_ZONE</tt> for the value of
--   <tt>Type</tt> in the request, the value of <tt>Count</tt> is the
--   current number of records that you have created in the specified
--   hosted zone.
newGetHostedZoneLimitResponse :: Int -> HostedZoneLimit -> Natural -> GetHostedZoneLimitResponse

-- | The response's http status code.
getHostedZoneLimitResponse_httpStatus :: Lens' GetHostedZoneLimitResponse Int

-- | The current setting for the specified limit. For example, if you
--   specified <tt>MAX_RRSETS_BY_ZONE</tt> for the value of <tt>Type</tt>
--   in the request, the value of <tt>Limit</tt> is the maximum number of
--   records that you can create in the specified hosted zone.
getHostedZoneLimitResponse_limit :: Lens' GetHostedZoneLimitResponse HostedZoneLimit

-- | The current number of entities that you have created of the specified
--   type. For example, if you specified <tt>MAX_RRSETS_BY_ZONE</tt> for
--   the value of <tt>Type</tt> in the request, the value of <tt>Count</tt>
--   is the current number of records that you have created in the
--   specified hosted zone.
getHostedZoneLimitResponse_count :: Lens' GetHostedZoneLimitResponse Natural
instance GHC.Generics.Generic Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimit
instance GHC.Show.Show Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimit
instance GHC.Read.Read Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimit
instance GHC.Classes.Eq Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimit
instance GHC.Generics.Generic Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimitResponse
instance GHC.Show.Show Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimitResponse
instance GHC.Read.Read Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimitResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimitResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimit
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimitResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimit
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimit
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimit
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimit
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetHostedZoneLimit.GetHostedZoneLimit


-- | Retrieves the number of hosted zones that are associated with the
--   current Amazon Web Services account.
module Network.AWS.Route53.GetHostedZoneCount

-- | A request to retrieve a count of all the hosted zones that are
--   associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newGetHostedZoneCount</a> smart constructor.
data GetHostedZoneCount
GetHostedZoneCount' :: GetHostedZoneCount

-- | Create a value of <a>GetHostedZoneCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetHostedZoneCount :: GetHostedZoneCount

-- | A complex type that contains the response to a
--   <tt>GetHostedZoneCount</tt> request.
--   
--   <i>See:</i> <a>newGetHostedZoneCountResponse</a> smart constructor.
data GetHostedZoneCountResponse
GetHostedZoneCountResponse' :: Int -> Integer -> GetHostedZoneCountResponse

-- | The response's http status code.
[$sel:httpStatus:GetHostedZoneCountResponse'] :: GetHostedZoneCountResponse -> Int

-- | The total number of public and private hosted zones that are
--   associated with the current Amazon Web Services account.
[$sel:hostedZoneCount:GetHostedZoneCountResponse'] :: GetHostedZoneCountResponse -> Integer

-- | Create a value of <a>GetHostedZoneCountResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHostedZoneCountResponse'</a>,
--   <a>getHostedZoneCountResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:hostedZoneCount:GetHostedZoneCountResponse'</a>,
--   <a>getHostedZoneCountResponse_hostedZoneCount</a> - The total number
--   of public and private hosted zones that are associated with the
--   current Amazon Web Services account.
newGetHostedZoneCountResponse :: Int -> Integer -> GetHostedZoneCountResponse

-- | The response's http status code.
getHostedZoneCountResponse_httpStatus :: Lens' GetHostedZoneCountResponse Int

-- | The total number of public and private hosted zones that are
--   associated with the current Amazon Web Services account.
getHostedZoneCountResponse_hostedZoneCount :: Lens' GetHostedZoneCountResponse Integer
instance GHC.Generics.Generic Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCount
instance GHC.Show.Show Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCount
instance GHC.Read.Read Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCount
instance GHC.Classes.Eq Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCount
instance GHC.Generics.Generic Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCountResponse
instance GHC.Show.Show Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCountResponse
instance GHC.Read.Read Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCountResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCountResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCount
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCountResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCount
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCount
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCount
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCount
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetHostedZoneCount.GetHostedZoneCount


-- | Gets information about a specified hosted zone including the four name
--   servers assigned to the hosted zone.
module Network.AWS.Route53.GetHostedZone

-- | A request to get information about a specified hosted zone.
--   
--   <i>See:</i> <a>newGetHostedZone</a> smart constructor.
data GetHostedZone
GetHostedZone' :: ResourceId -> GetHostedZone

-- | The ID of the hosted zone that you want to get information about.
[$sel:id:GetHostedZone'] :: GetHostedZone -> ResourceId

-- | Create a value of <a>GetHostedZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetHostedZone'</a>, <a>getHostedZone_id</a> - The ID of the
--   hosted zone that you want to get information about.
newGetHostedZone :: ResourceId -> GetHostedZone

-- | The ID of the hosted zone that you want to get information about.
getHostedZone_id :: Lens' GetHostedZone ResourceId

-- | A complex type that contain the response to a <tt>GetHostedZone</tt>
--   request.
--   
--   <i>See:</i> <a>newGetHostedZoneResponse</a> smart constructor.
data GetHostedZoneResponse
GetHostedZoneResponse' :: Maybe (NonEmpty VPC) -> Maybe DelegationSet -> Int -> HostedZone -> GetHostedZoneResponse

-- | A complex type that contains information about the VPCs that are
--   associated with the specified hosted zone.
[$sel:vPCs:GetHostedZoneResponse'] :: GetHostedZoneResponse -> Maybe (NonEmpty VPC)

-- | A complex type that lists the Amazon Route 53 name servers for the
--   specified hosted zone.
[$sel:delegationSet:GetHostedZoneResponse'] :: GetHostedZoneResponse -> Maybe DelegationSet

-- | The response's http status code.
[$sel:httpStatus:GetHostedZoneResponse'] :: GetHostedZoneResponse -> Int

-- | A complex type that contains general information about the specified
--   hosted zone.
[$sel:hostedZone:GetHostedZoneResponse'] :: GetHostedZoneResponse -> HostedZone

-- | Create a value of <a>GetHostedZoneResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vPCs:GetHostedZoneResponse'</a>,
--   <a>getHostedZoneResponse_vPCs</a> - A complex type that contains
--   information about the VPCs that are associated with the specified
--   hosted zone.
--   
--   <a>$sel:delegationSet:GetHostedZoneResponse'</a>,
--   <a>getHostedZoneResponse_delegationSet</a> - A complex type that lists
--   the Amazon Route 53 name servers for the specified hosted zone.
--   
--   <a>$sel:httpStatus:GetHostedZoneResponse'</a>,
--   <a>getHostedZoneResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:hostedZone:GetHostedZoneResponse'</a>,
--   <a>getHostedZoneResponse_hostedZone</a> - A complex type that contains
--   general information about the specified hosted zone.
newGetHostedZoneResponse :: Int -> HostedZone -> GetHostedZoneResponse

-- | A complex type that contains information about the VPCs that are
--   associated with the specified hosted zone.
getHostedZoneResponse_vPCs :: Lens' GetHostedZoneResponse (Maybe (NonEmpty VPC))

-- | A complex type that lists the Amazon Route 53 name servers for the
--   specified hosted zone.
getHostedZoneResponse_delegationSet :: Lens' GetHostedZoneResponse (Maybe DelegationSet)

-- | The response's http status code.
getHostedZoneResponse_httpStatus :: Lens' GetHostedZoneResponse Int

-- | A complex type that contains general information about the specified
--   hosted zone.
getHostedZoneResponse_hostedZone :: Lens' GetHostedZoneResponse HostedZone
instance GHC.Generics.Generic Network.AWS.Route53.GetHostedZone.GetHostedZone
instance GHC.Show.Show Network.AWS.Route53.GetHostedZone.GetHostedZone
instance GHC.Read.Read Network.AWS.Route53.GetHostedZone.GetHostedZone
instance GHC.Classes.Eq Network.AWS.Route53.GetHostedZone.GetHostedZone
instance GHC.Generics.Generic Network.AWS.Route53.GetHostedZone.GetHostedZoneResponse
instance GHC.Show.Show Network.AWS.Route53.GetHostedZone.GetHostedZoneResponse
instance GHC.Read.Read Network.AWS.Route53.GetHostedZone.GetHostedZoneResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetHostedZone.GetHostedZoneResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetHostedZone.GetHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHostedZone.GetHostedZoneResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetHostedZone.GetHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHostedZone.GetHostedZone
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetHostedZone.GetHostedZone
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetHostedZone.GetHostedZone
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetHostedZone.GetHostedZone


-- | Gets status of a specified health check.
--   
--   This API is intended for use during development to diagnose behavior.
--   It doesn’t support production use-cases with high query rates that
--   require immediate and actionable responses.
module Network.AWS.Route53.GetHealthCheckStatus

-- | A request to get the status for a health check.
--   
--   <i>See:</i> <a>newGetHealthCheckStatus</a> smart constructor.
data GetHealthCheckStatus
GetHealthCheckStatus' :: Text -> GetHealthCheckStatus

-- | The ID for the health check that you want the current status for. When
--   you created the health check, <tt>CreateHealthCheck</tt> returned the
--   ID in the response, in the <tt>HealthCheckId</tt> element.
--   
--   If you want to check the status of a calculated health check, you must
--   use the Amazon Route 53 console or the CloudWatch console. You can't
--   use <tt>GetHealthCheckStatus</tt> to get the status of a calculated
--   health check.
[$sel:healthCheckId:GetHealthCheckStatus'] :: GetHealthCheckStatus -> Text

-- | Create a value of <a>GetHealthCheckStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckId:GetHealthCheckStatus'</a>,
--   <a>getHealthCheckStatus_healthCheckId</a> - The ID for the health
--   check that you want the current status for. When you created the
--   health check, <tt>CreateHealthCheck</tt> returned the ID in the
--   response, in the <tt>HealthCheckId</tt> element.
--   
--   If you want to check the status of a calculated health check, you must
--   use the Amazon Route 53 console or the CloudWatch console. You can't
--   use <tt>GetHealthCheckStatus</tt> to get the status of a calculated
--   health check.
newGetHealthCheckStatus :: Text -> GetHealthCheckStatus

-- | The ID for the health check that you want the current status for. When
--   you created the health check, <tt>CreateHealthCheck</tt> returned the
--   ID in the response, in the <tt>HealthCheckId</tt> element.
--   
--   If you want to check the status of a calculated health check, you must
--   use the Amazon Route 53 console or the CloudWatch console. You can't
--   use <tt>GetHealthCheckStatus</tt> to get the status of a calculated
--   health check.
getHealthCheckStatus_healthCheckId :: Lens' GetHealthCheckStatus Text

-- | A complex type that contains the response to a <tt>GetHealthCheck</tt>
--   request.
--   
--   <i>See:</i> <a>newGetHealthCheckStatusResponse</a> smart constructor.
data GetHealthCheckStatusResponse
GetHealthCheckStatusResponse' :: Int -> [HealthCheckObservation] -> GetHealthCheckStatusResponse

-- | The response's http status code.
[$sel:httpStatus:GetHealthCheckStatusResponse'] :: GetHealthCheckStatusResponse -> Int

-- | A list that contains one <tt>HealthCheckObservation</tt> element for
--   each Amazon Route 53 health checker that is reporting a status about
--   the health check endpoint.
[$sel:healthCheckObservations:GetHealthCheckStatusResponse'] :: GetHealthCheckStatusResponse -> [HealthCheckObservation]

-- | Create a value of <a>GetHealthCheckStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHealthCheckStatusResponse'</a>,
--   <a>getHealthCheckStatusResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:healthCheckObservations:GetHealthCheckStatusResponse'</a>,
--   <a>getHealthCheckStatusResponse_healthCheckObservations</a> - A list
--   that contains one <tt>HealthCheckObservation</tt> element for each
--   Amazon Route 53 health checker that is reporting a status about the
--   health check endpoint.
newGetHealthCheckStatusResponse :: Int -> GetHealthCheckStatusResponse

-- | The response's http status code.
getHealthCheckStatusResponse_httpStatus :: Lens' GetHealthCheckStatusResponse Int

-- | A list that contains one <tt>HealthCheckObservation</tt> element for
--   each Amazon Route 53 health checker that is reporting a status about
--   the health check endpoint.
getHealthCheckStatusResponse_healthCheckObservations :: Lens' GetHealthCheckStatusResponse [HealthCheckObservation]
instance GHC.Generics.Generic Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatus
instance GHC.Show.Show Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatus
instance GHC.Read.Read Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatus
instance GHC.Classes.Eq Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatus
instance GHC.Generics.Generic Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatusResponse
instance GHC.Show.Show Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatusResponse
instance GHC.Read.Read Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatusResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatusResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatus
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatusResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatus
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatus
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatus
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetHealthCheckStatus.GetHealthCheckStatus


-- | Gets the reason that a specified health check failed most recently.
module Network.AWS.Route53.GetHealthCheckLastFailureReason

-- | A request for the reason that a health check failed most recently.
--   
--   <i>See:</i> <a>newGetHealthCheckLastFailureReason</a> smart
--   constructor.
data GetHealthCheckLastFailureReason
GetHealthCheckLastFailureReason' :: Text -> GetHealthCheckLastFailureReason

-- | The ID for the health check for which you want the last failure
--   reason. When you created the health check, <tt>CreateHealthCheck</tt>
--   returned the ID in the response, in the <tt>HealthCheckId</tt>
--   element.
--   
--   If you want to get the last failure reason for a calculated health
--   check, you must use the Amazon Route 53 console or the CloudWatch
--   console. You can't use <tt>GetHealthCheckLastFailureReason</tt> for a
--   calculated health check.
[$sel:healthCheckId:GetHealthCheckLastFailureReason'] :: GetHealthCheckLastFailureReason -> Text

-- | Create a value of <a>GetHealthCheckLastFailureReason</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckId:GetHealthCheckLastFailureReason'</a>,
--   <a>getHealthCheckLastFailureReason_healthCheckId</a> - The ID for the
--   health check for which you want the last failure reason. When you
--   created the health check, <tt>CreateHealthCheck</tt> returned the ID
--   in the response, in the <tt>HealthCheckId</tt> element.
--   
--   If you want to get the last failure reason for a calculated health
--   check, you must use the Amazon Route 53 console or the CloudWatch
--   console. You can't use <tt>GetHealthCheckLastFailureReason</tt> for a
--   calculated health check.
newGetHealthCheckLastFailureReason :: Text -> GetHealthCheckLastFailureReason

-- | The ID for the health check for which you want the last failure
--   reason. When you created the health check, <tt>CreateHealthCheck</tt>
--   returned the ID in the response, in the <tt>HealthCheckId</tt>
--   element.
--   
--   If you want to get the last failure reason for a calculated health
--   check, you must use the Amazon Route 53 console or the CloudWatch
--   console. You can't use <tt>GetHealthCheckLastFailureReason</tt> for a
--   calculated health check.
getHealthCheckLastFailureReason_healthCheckId :: Lens' GetHealthCheckLastFailureReason Text

-- | A complex type that contains the response to a
--   <tt>GetHealthCheckLastFailureReason</tt> request.
--   
--   <i>See:</i> <a>newGetHealthCheckLastFailureReasonResponse</a> smart
--   constructor.
data GetHealthCheckLastFailureReasonResponse
GetHealthCheckLastFailureReasonResponse' :: Int -> [HealthCheckObservation] -> GetHealthCheckLastFailureReasonResponse

-- | The response's http status code.
[$sel:httpStatus:GetHealthCheckLastFailureReasonResponse'] :: GetHealthCheckLastFailureReasonResponse -> Int

-- | A list that contains one <tt>Observation</tt> element for each Amazon
--   Route 53 health checker that is reporting a last failure reason.
[$sel:healthCheckObservations:GetHealthCheckLastFailureReasonResponse'] :: GetHealthCheckLastFailureReasonResponse -> [HealthCheckObservation]

-- | Create a value of <a>GetHealthCheckLastFailureReasonResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHealthCheckLastFailureReasonResponse'</a>,
--   <a>getHealthCheckLastFailureReasonResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:healthCheckObservations:GetHealthCheckLastFailureReasonResponse'</a>,
--   <a>getHealthCheckLastFailureReasonResponse_healthCheckObservations</a>
--   - A list that contains one <tt>Observation</tt> element for each
--   Amazon Route 53 health checker that is reporting a last failure
--   reason.
newGetHealthCheckLastFailureReasonResponse :: Int -> GetHealthCheckLastFailureReasonResponse

-- | The response's http status code.
getHealthCheckLastFailureReasonResponse_httpStatus :: Lens' GetHealthCheckLastFailureReasonResponse Int

-- | A list that contains one <tt>Observation</tt> element for each Amazon
--   Route 53 health checker that is reporting a last failure reason.
getHealthCheckLastFailureReasonResponse_healthCheckObservations :: Lens' GetHealthCheckLastFailureReasonResponse [HealthCheckObservation]
instance GHC.Generics.Generic Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReason
instance GHC.Show.Show Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReason
instance GHC.Read.Read Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReason
instance GHC.Classes.Eq Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReason
instance GHC.Generics.Generic Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReasonResponse
instance GHC.Show.Show Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReasonResponse
instance GHC.Read.Read Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReasonResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReasonResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReason
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReasonResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReason
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReason
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReason
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReason
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetHealthCheckLastFailureReason.GetHealthCheckLastFailureReason


-- | Retrieves the number of health checks that are associated with the
--   current Amazon Web Services account.
module Network.AWS.Route53.GetHealthCheckCount

-- | A request for the number of health checks that are associated with the
--   current Amazon Web Services account.
--   
--   <i>See:</i> <a>newGetHealthCheckCount</a> smart constructor.
data GetHealthCheckCount
GetHealthCheckCount' :: GetHealthCheckCount

-- | Create a value of <a>GetHealthCheckCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetHealthCheckCount :: GetHealthCheckCount

-- | A complex type that contains the response to a
--   <tt>GetHealthCheckCount</tt> request.
--   
--   <i>See:</i> <a>newGetHealthCheckCountResponse</a> smart constructor.
data GetHealthCheckCountResponse
GetHealthCheckCountResponse' :: Int -> Integer -> GetHealthCheckCountResponse

-- | The response's http status code.
[$sel:httpStatus:GetHealthCheckCountResponse'] :: GetHealthCheckCountResponse -> Int

-- | The number of health checks associated with the current Amazon Web
--   Services account.
[$sel:healthCheckCount:GetHealthCheckCountResponse'] :: GetHealthCheckCountResponse -> Integer

-- | Create a value of <a>GetHealthCheckCountResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHealthCheckCountResponse'</a>,
--   <a>getHealthCheckCountResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:healthCheckCount:GetHealthCheckCountResponse'</a>,
--   <a>getHealthCheckCountResponse_healthCheckCount</a> - The number of
--   health checks associated with the current Amazon Web Services account.
newGetHealthCheckCountResponse :: Int -> Integer -> GetHealthCheckCountResponse

-- | The response's http status code.
getHealthCheckCountResponse_httpStatus :: Lens' GetHealthCheckCountResponse Int

-- | The number of health checks associated with the current Amazon Web
--   Services account.
getHealthCheckCountResponse_healthCheckCount :: Lens' GetHealthCheckCountResponse Integer
instance GHC.Generics.Generic Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCount
instance GHC.Show.Show Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCount
instance GHC.Read.Read Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCount
instance GHC.Classes.Eq Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCount
instance GHC.Generics.Generic Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCountResponse
instance GHC.Show.Show Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCountResponse
instance GHC.Read.Read Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCountResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCountResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCount
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCountResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCount
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCount
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCount
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCount
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetHealthCheckCount.GetHealthCheckCount


-- | Gets information about a specified health check.
module Network.AWS.Route53.GetHealthCheck

-- | A request to get information about a specified health check.
--   
--   <i>See:</i> <a>newGetHealthCheck</a> smart constructor.
data GetHealthCheck
GetHealthCheck' :: Text -> GetHealthCheck

-- | The identifier that Amazon Route 53 assigned to the health check when
--   you created it. When you add or update a resource record set, you use
--   this value to specify which health check to use. The value can be up
--   to 64 characters long.
[$sel:healthCheckId:GetHealthCheck'] :: GetHealthCheck -> Text

-- | Create a value of <a>GetHealthCheck</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckId:GetHealthCheck'</a>,
--   <a>getHealthCheck_healthCheckId</a> - The identifier that Amazon Route
--   53 assigned to the health check when you created it. When you add or
--   update a resource record set, you use this value to specify which
--   health check to use. The value can be up to 64 characters long.
newGetHealthCheck :: Text -> GetHealthCheck

-- | The identifier that Amazon Route 53 assigned to the health check when
--   you created it. When you add or update a resource record set, you use
--   this value to specify which health check to use. The value can be up
--   to 64 characters long.
getHealthCheck_healthCheckId :: Lens' GetHealthCheck Text

-- | A complex type that contains the response to a <tt>GetHealthCheck</tt>
--   request.
--   
--   <i>See:</i> <a>newGetHealthCheckResponse</a> smart constructor.
data GetHealthCheckResponse
GetHealthCheckResponse' :: Int -> HealthCheck -> GetHealthCheckResponse

-- | The response's http status code.
[$sel:httpStatus:GetHealthCheckResponse'] :: GetHealthCheckResponse -> Int

-- | A complex type that contains information about one health check that
--   is associated with the current Amazon Web Services account.
[$sel:healthCheck:GetHealthCheckResponse'] :: GetHealthCheckResponse -> HealthCheck

-- | Create a value of <a>GetHealthCheckResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHealthCheckResponse'</a>,
--   <a>getHealthCheckResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:healthCheck:GetHealthCheckResponse'</a>,
--   <a>getHealthCheckResponse_healthCheck</a> - A complex type that
--   contains information about one health check that is associated with
--   the current Amazon Web Services account.
newGetHealthCheckResponse :: Int -> HealthCheck -> GetHealthCheckResponse

-- | The response's http status code.
getHealthCheckResponse_httpStatus :: Lens' GetHealthCheckResponse Int

-- | A complex type that contains information about one health check that
--   is associated with the current Amazon Web Services account.
getHealthCheckResponse_healthCheck :: Lens' GetHealthCheckResponse HealthCheck
instance GHC.Generics.Generic Network.AWS.Route53.GetHealthCheck.GetHealthCheck
instance GHC.Show.Show Network.AWS.Route53.GetHealthCheck.GetHealthCheck
instance GHC.Read.Read Network.AWS.Route53.GetHealthCheck.GetHealthCheck
instance GHC.Classes.Eq Network.AWS.Route53.GetHealthCheck.GetHealthCheck
instance GHC.Generics.Generic Network.AWS.Route53.GetHealthCheck.GetHealthCheckResponse
instance GHC.Show.Show Network.AWS.Route53.GetHealthCheck.GetHealthCheckResponse
instance GHC.Read.Read Network.AWS.Route53.GetHealthCheck.GetHealthCheckResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetHealthCheck.GetHealthCheckResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetHealthCheck.GetHealthCheck
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHealthCheck.GetHealthCheckResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetHealthCheck.GetHealthCheck
instance Control.DeepSeq.NFData Network.AWS.Route53.GetHealthCheck.GetHealthCheck
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetHealthCheck.GetHealthCheck
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetHealthCheck.GetHealthCheck
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetHealthCheck.GetHealthCheck


-- | Gets information about whether a specified geographic location is
--   supported for Amazon Route 53 geolocation resource record sets.
--   
--   Route 53 does not perform authorization for this API because it
--   retrieves information that is already available to the public.
--   
--   Use the following syntax to determine whether a continent is supported
--   for geolocation:
--   
--   <pre>
--   GET /2013-04-01/geolocation?continentcode=two-letter abbreviation for a continent
--   </pre>
--   
--   Use the following syntax to determine whether a country is supported
--   for geolocation:
--   
--   <pre>
--   GET /2013-04-01/geolocation?countrycode=two-character country code
--   </pre>
--   
--   Use the following syntax to determine whether a subdivision of a
--   country is supported for geolocation:
--   
--   <pre>
--   GET /2013-04-01/geolocation?countrycode=two-character country code&amp;subdivisioncode=subdivision code
--   </pre>
module Network.AWS.Route53.GetGeoLocation

-- | A request for information about whether a specified geographic
--   location is supported for Amazon Route 53 geolocation resource record
--   sets.
--   
--   <i>See:</i> <a>newGetGeoLocation</a> smart constructor.
data GetGeoLocation
GetGeoLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> GetGeoLocation

-- | The code for the subdivision, such as a particular state within the
--   United States. For a list of US state abbreviations, see <a>Appendix
--   B: Two–Letter State and Possession Abbreviations</a> on the United
--   States Postal Service website. For a list of all supported subdivision
--   codes, use the <a>ListGeoLocations</a> API.
[$sel:subdivisionCode:GetGeoLocation'] :: GetGeoLocation -> Maybe Text

-- | Amazon Route 53 uses the two-letter country codes that are specified
--   in <a>ISO standard 3166-1 alpha-2</a>.
[$sel:countryCode:GetGeoLocation'] :: GetGeoLocation -> Maybe Text

-- | For geolocation resource record sets, a two-letter abbreviation that
--   identifies a continent. Amazon Route 53 supports the following
--   continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
[$sel:continentCode:GetGeoLocation'] :: GetGeoLocation -> Maybe Text

-- | Create a value of <a>GetGeoLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subdivisionCode:GetGeoLocation'</a>,
--   <a>getGeoLocation_subdivisionCode</a> - The code for the subdivision,
--   such as a particular state within the United States. For a list of US
--   state abbreviations, see <a>Appendix B: Two–Letter State and
--   Possession Abbreviations</a> on the United States Postal Service
--   website. For a list of all supported subdivision codes, use the
--   <a>ListGeoLocations</a> API.
--   
--   <a>$sel:countryCode:GetGeoLocation'</a>,
--   <a>getGeoLocation_countryCode</a> - Amazon Route 53 uses the
--   two-letter country codes that are specified in <a>ISO standard 3166-1
--   alpha-2</a>.
--   
--   <a>$sel:continentCode:GetGeoLocation'</a>,
--   <a>getGeoLocation_continentCode</a> - For geolocation resource record
--   sets, a two-letter abbreviation that identifies a continent. Amazon
--   Route 53 supports the following continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
newGetGeoLocation :: GetGeoLocation

-- | The code for the subdivision, such as a particular state within the
--   United States. For a list of US state abbreviations, see <a>Appendix
--   B: Two–Letter State and Possession Abbreviations</a> on the United
--   States Postal Service website. For a list of all supported subdivision
--   codes, use the <a>ListGeoLocations</a> API.
getGeoLocation_subdivisionCode :: Lens' GetGeoLocation (Maybe Text)

-- | Amazon Route 53 uses the two-letter country codes that are specified
--   in <a>ISO standard 3166-1 alpha-2</a>.
getGeoLocation_countryCode :: Lens' GetGeoLocation (Maybe Text)

-- | For geolocation resource record sets, a two-letter abbreviation that
--   identifies a continent. Amazon Route 53 supports the following
--   continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
getGeoLocation_continentCode :: Lens' GetGeoLocation (Maybe Text)

-- | A complex type that contains the response information for the
--   specified geolocation code.
--   
--   <i>See:</i> <a>newGetGeoLocationResponse</a> smart constructor.
data GetGeoLocationResponse
GetGeoLocationResponse' :: Int -> GeoLocationDetails -> GetGeoLocationResponse

-- | The response's http status code.
[$sel:httpStatus:GetGeoLocationResponse'] :: GetGeoLocationResponse -> Int

-- | A complex type that contains the codes and full continent, country,
--   and subdivision names for the specified geolocation code.
[$sel:geoLocationDetails:GetGeoLocationResponse'] :: GetGeoLocationResponse -> GeoLocationDetails

-- | Create a value of <a>GetGeoLocationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetGeoLocationResponse'</a>,
--   <a>getGeoLocationResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:geoLocationDetails:GetGeoLocationResponse'</a>,
--   <a>getGeoLocationResponse_geoLocationDetails</a> - A complex type that
--   contains the codes and full continent, country, and subdivision names
--   for the specified geolocation code.
newGetGeoLocationResponse :: Int -> GeoLocationDetails -> GetGeoLocationResponse

-- | The response's http status code.
getGeoLocationResponse_httpStatus :: Lens' GetGeoLocationResponse Int

-- | A complex type that contains the codes and full continent, country,
--   and subdivision names for the specified geolocation code.
getGeoLocationResponse_geoLocationDetails :: Lens' GetGeoLocationResponse GeoLocationDetails
instance GHC.Generics.Generic Network.AWS.Route53.GetGeoLocation.GetGeoLocation
instance GHC.Show.Show Network.AWS.Route53.GetGeoLocation.GetGeoLocation
instance GHC.Read.Read Network.AWS.Route53.GetGeoLocation.GetGeoLocation
instance GHC.Classes.Eq Network.AWS.Route53.GetGeoLocation.GetGeoLocation
instance GHC.Generics.Generic Network.AWS.Route53.GetGeoLocation.GetGeoLocationResponse
instance GHC.Show.Show Network.AWS.Route53.GetGeoLocation.GetGeoLocationResponse
instance GHC.Read.Read Network.AWS.Route53.GetGeoLocation.GetGeoLocationResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetGeoLocation.GetGeoLocationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetGeoLocation.GetGeoLocation
instance Control.DeepSeq.NFData Network.AWS.Route53.GetGeoLocation.GetGeoLocationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetGeoLocation.GetGeoLocation
instance Control.DeepSeq.NFData Network.AWS.Route53.GetGeoLocation.GetGeoLocation
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetGeoLocation.GetGeoLocation
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetGeoLocation.GetGeoLocation
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetGeoLocation.GetGeoLocation


-- | Returns information about DNSSEC for a specific hosted zone, including
--   the key-signing keys (KSKs) in the hosted zone.
module Network.AWS.Route53.GetDNSSEC

-- | <i>See:</i> <a>newGetDNSSEC</a> smart constructor.
data GetDNSSEC
GetDNSSEC' :: ResourceId -> GetDNSSEC

-- | A unique string used to identify a hosted zone.
[$sel:hostedZoneId:GetDNSSEC'] :: GetDNSSEC -> ResourceId

-- | Create a value of <a>GetDNSSEC</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:GetDNSSEC'</a>, <a>getDNSSEC_hostedZoneId</a> - A
--   unique string used to identify a hosted zone.
newGetDNSSEC :: ResourceId -> GetDNSSEC

-- | A unique string used to identify a hosted zone.
getDNSSEC_hostedZoneId :: Lens' GetDNSSEC ResourceId

-- | <i>See:</i> <a>newGetDNSSECResponse</a> smart constructor.
data GetDNSSECResponse
GetDNSSECResponse' :: Int -> DNSSECStatus -> [KeySigningKey] -> GetDNSSECResponse

-- | The response's http status code.
[$sel:httpStatus:GetDNSSECResponse'] :: GetDNSSECResponse -> Int

-- | A string repesenting the status of DNSSEC.
[$sel:status:GetDNSSECResponse'] :: GetDNSSECResponse -> DNSSECStatus

-- | The key-signing keys (KSKs) in your account.
[$sel:keySigningKeys:GetDNSSECResponse'] :: GetDNSSECResponse -> [KeySigningKey]

-- | Create a value of <a>GetDNSSECResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetDNSSECResponse'</a>,
--   <a>getDNSSECResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:status:GetDNSSECResponse'</a>, <a>getDNSSECResponse_status</a>
--   - A string repesenting the status of DNSSEC.
--   
--   <a>$sel:keySigningKeys:GetDNSSECResponse'</a>,
--   <a>getDNSSECResponse_keySigningKeys</a> - The key-signing keys (KSKs)
--   in your account.
newGetDNSSECResponse :: Int -> DNSSECStatus -> GetDNSSECResponse

-- | The response's http status code.
getDNSSECResponse_httpStatus :: Lens' GetDNSSECResponse Int

-- | A string repesenting the status of DNSSEC.
getDNSSECResponse_status :: Lens' GetDNSSECResponse DNSSECStatus

-- | The key-signing keys (KSKs) in your account.
getDNSSECResponse_keySigningKeys :: Lens' GetDNSSECResponse [KeySigningKey]
instance GHC.Generics.Generic Network.AWS.Route53.GetDNSSEC.GetDNSSEC
instance GHC.Show.Show Network.AWS.Route53.GetDNSSEC.GetDNSSEC
instance GHC.Read.Read Network.AWS.Route53.GetDNSSEC.GetDNSSEC
instance GHC.Classes.Eq Network.AWS.Route53.GetDNSSEC.GetDNSSEC
instance GHC.Generics.Generic Network.AWS.Route53.GetDNSSEC.GetDNSSECResponse
instance GHC.Show.Show Network.AWS.Route53.GetDNSSEC.GetDNSSECResponse
instance GHC.Read.Read Network.AWS.Route53.GetDNSSEC.GetDNSSECResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetDNSSEC.GetDNSSECResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetDNSSEC.GetDNSSEC
instance Control.DeepSeq.NFData Network.AWS.Route53.GetDNSSEC.GetDNSSECResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetDNSSEC.GetDNSSEC
instance Control.DeepSeq.NFData Network.AWS.Route53.GetDNSSEC.GetDNSSEC
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetDNSSEC.GetDNSSEC
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetDNSSEC.GetDNSSEC
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetDNSSEC.GetDNSSEC


-- | Route 53 does not perform authorization for this API because it
--   retrieves information that is already available to the public.
--   
--   <tt>GetCheckerIpRanges</tt> still works, but we recommend that you
--   download ip-ranges.json, which includes IP address ranges for all
--   Amazon Web Services services. For more information, see <a>IP Address
--   Ranges of Amazon Route 53 Servers</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
module Network.AWS.Route53.GetCheckerIpRanges

-- | Empty request.
--   
--   <i>See:</i> <a>newGetCheckerIpRanges</a> smart constructor.
data GetCheckerIpRanges
GetCheckerIpRanges' :: GetCheckerIpRanges

-- | Create a value of <a>GetCheckerIpRanges</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetCheckerIpRanges :: GetCheckerIpRanges

-- | A complex type that contains the <tt>CheckerIpRanges</tt> element.
--   
--   <i>See:</i> <a>newGetCheckerIpRangesResponse</a> smart constructor.
data GetCheckerIpRangesResponse
GetCheckerIpRangesResponse' :: Int -> [Text] -> GetCheckerIpRangesResponse

-- | The response's http status code.
[$sel:httpStatus:GetCheckerIpRangesResponse'] :: GetCheckerIpRangesResponse -> Int

-- | A complex type that contains sorted list of IP ranges in CIDR format
--   for Amazon Route 53 health checkers.
[$sel:checkerIpRanges:GetCheckerIpRangesResponse'] :: GetCheckerIpRangesResponse -> [Text]

-- | Create a value of <a>GetCheckerIpRangesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetCheckerIpRangesResponse'</a>,
--   <a>getCheckerIpRangesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:checkerIpRanges:GetCheckerIpRangesResponse'</a>,
--   <a>getCheckerIpRangesResponse_checkerIpRanges</a> - A complex type
--   that contains sorted list of IP ranges in CIDR format for Amazon Route
--   53 health checkers.
newGetCheckerIpRangesResponse :: Int -> GetCheckerIpRangesResponse

-- | The response's http status code.
getCheckerIpRangesResponse_httpStatus :: Lens' GetCheckerIpRangesResponse Int

-- | A complex type that contains sorted list of IP ranges in CIDR format
--   for Amazon Route 53 health checkers.
getCheckerIpRangesResponse_checkerIpRanges :: Lens' GetCheckerIpRangesResponse [Text]
instance GHC.Generics.Generic Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRanges
instance GHC.Show.Show Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRanges
instance GHC.Read.Read Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRanges
instance GHC.Classes.Eq Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRanges
instance GHC.Generics.Generic Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRangesResponse
instance GHC.Show.Show Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRangesResponse
instance GHC.Read.Read Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRangesResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRangesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRanges
instance Control.DeepSeq.NFData Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRangesResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRanges
instance Control.DeepSeq.NFData Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRanges
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRanges
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRanges
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetCheckerIpRanges.GetCheckerIpRanges


-- | Returns the current status of a change batch request. The status is
--   one of the following values:
--   
--   <ul>
--   <li><tt>PENDING</tt> indicates that the changes in this request have
--   not propagated to all Amazon Route 53 DNS servers. This is the initial
--   status of all change batch requests.</li>
--   <li><tt>INSYNC</tt> indicates that the changes have propagated to all
--   Route 53 DNS servers.</li>
--   </ul>
module Network.AWS.Route53.GetChange

-- | The input for a GetChange request.
--   
--   <i>See:</i> <a>newGetChange</a> smart constructor.
data GetChange
GetChange' :: ResourceId -> GetChange

-- | The ID of the change batch request. The value that you specify here is
--   the value that <tt>ChangeResourceRecordSets</tt> returned in the
--   <tt>Id</tt> element when you submitted the request.
[$sel:id:GetChange'] :: GetChange -> ResourceId

-- | Create a value of <a>GetChange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetChange'</a>, <a>getChange_id</a> - The ID of the change
--   batch request. The value that you specify here is the value that
--   <tt>ChangeResourceRecordSets</tt> returned in the <tt>Id</tt> element
--   when you submitted the request.
newGetChange :: ResourceId -> GetChange

-- | The ID of the change batch request. The value that you specify here is
--   the value that <tt>ChangeResourceRecordSets</tt> returned in the
--   <tt>Id</tt> element when you submitted the request.
getChange_id :: Lens' GetChange ResourceId

-- | A complex type that contains the <tt>ChangeInfo</tt> element.
--   
--   <i>See:</i> <a>newGetChangeResponse</a> smart constructor.
data GetChangeResponse
GetChangeResponse' :: Int -> ChangeInfo -> GetChangeResponse

-- | The response's http status code.
[$sel:httpStatus:GetChangeResponse'] :: GetChangeResponse -> Int

-- | A complex type that contains information about the specified change
--   batch.
[$sel:changeInfo:GetChangeResponse'] :: GetChangeResponse -> ChangeInfo

-- | Create a value of <a>GetChangeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetChangeResponse'</a>,
--   <a>getChangeResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:changeInfo:GetChangeResponse'</a>,
--   <a>getChangeResponse_changeInfo</a> - A complex type that contains
--   information about the specified change batch.
newGetChangeResponse :: Int -> ChangeInfo -> GetChangeResponse

-- | The response's http status code.
getChangeResponse_httpStatus :: Lens' GetChangeResponse Int

-- | A complex type that contains information about the specified change
--   batch.
getChangeResponse_changeInfo :: Lens' GetChangeResponse ChangeInfo
instance GHC.Generics.Generic Network.AWS.Route53.GetChange.GetChange
instance GHC.Show.Show Network.AWS.Route53.GetChange.GetChange
instance GHC.Read.Read Network.AWS.Route53.GetChange.GetChange
instance GHC.Classes.Eq Network.AWS.Route53.GetChange.GetChange
instance GHC.Generics.Generic Network.AWS.Route53.GetChange.GetChangeResponse
instance GHC.Show.Show Network.AWS.Route53.GetChange.GetChangeResponse
instance GHC.Read.Read Network.AWS.Route53.GetChange.GetChangeResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetChange.GetChangeResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetChange.GetChange
instance Control.DeepSeq.NFData Network.AWS.Route53.GetChange.GetChangeResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetChange.GetChange
instance Control.DeepSeq.NFData Network.AWS.Route53.GetChange.GetChange
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetChange.GetChange
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetChange.GetChange
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetChange.GetChange


-- | Gets the specified limit for the current account, for example, the
--   maximum number of health checks that you can create using the account.
--   
--   For the default limit, see <a>Limits</a> in the <i>Amazon Route 53
--   Developer Guide</i>. To request a higher limit, <a>open a case</a>.
--   
--   You can also view account limits in Amazon Web Services Trusted
--   Advisor. Sign in to the Amazon Web Services Management Console and
--   open the Trusted Advisor console at
--   <a>https://console.aws.amazon.com/trustedadvisor/</a>. Then choose
--   <b>Service limits</b> in the navigation pane.
module Network.AWS.Route53.GetAccountLimit

-- | A complex type that contains information about the request to create a
--   hosted zone.
--   
--   <i>See:</i> <a>newGetAccountLimit</a> smart constructor.
data GetAccountLimit
GetAccountLimit' :: AccountLimitType -> GetAccountLimit

-- | The limit that you want to get. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
[$sel:type':GetAccountLimit'] :: GetAccountLimit -> AccountLimitType

-- | Create a value of <a>GetAccountLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':GetAccountLimit'</a>, <a>getAccountLimit_type</a> - The
--   limit that you want to get. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
newGetAccountLimit :: AccountLimitType -> GetAccountLimit

-- | The limit that you want to get. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
getAccountLimit_type :: Lens' GetAccountLimit AccountLimitType

-- | A complex type that contains the requested limit.
--   
--   <i>See:</i> <a>newGetAccountLimitResponse</a> smart constructor.
data GetAccountLimitResponse
GetAccountLimitResponse' :: Int -> AccountLimit -> Natural -> GetAccountLimitResponse

-- | The response's http status code.
[$sel:httpStatus:GetAccountLimitResponse'] :: GetAccountLimitResponse -> Int

-- | The current setting for the specified limit. For example, if you
--   specified <tt>MAX_HEALTH_CHECKS_BY_OWNER</tt> for the value of
--   <tt>Type</tt> in the request, the value of <tt>Limit</tt> is the
--   maximum number of health checks that you can create using the current
--   account.
[$sel:limit:GetAccountLimitResponse'] :: GetAccountLimitResponse -> AccountLimit

-- | The current number of entities that you have created of the specified
--   type. For example, if you specified
--   <tt>MAX_HEALTH_CHECKS_BY_OWNER</tt> for the value of <tt>Type</tt> in
--   the request, the value of <tt>Count</tt> is the current number of
--   health checks that you have created using the current account.
[$sel:count:GetAccountLimitResponse'] :: GetAccountLimitResponse -> Natural

-- | Create a value of <a>GetAccountLimitResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetAccountLimitResponse'</a>,
--   <a>getAccountLimitResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:limit:GetAccountLimitResponse'</a>,
--   <a>getAccountLimitResponse_limit</a> - The current setting for the
--   specified limit. For example, if you specified
--   <tt>MAX_HEALTH_CHECKS_BY_OWNER</tt> for the value of <tt>Type</tt> in
--   the request, the value of <tt>Limit</tt> is the maximum number of
--   health checks that you can create using the current account.
--   
--   <a>$sel:count:GetAccountLimitResponse'</a>,
--   <a>getAccountLimitResponse_count</a> - The current number of entities
--   that you have created of the specified type. For example, if you
--   specified <tt>MAX_HEALTH_CHECKS_BY_OWNER</tt> for the value of
--   <tt>Type</tt> in the request, the value of <tt>Count</tt> is the
--   current number of health checks that you have created using the
--   current account.
newGetAccountLimitResponse :: Int -> AccountLimit -> Natural -> GetAccountLimitResponse

-- | The response's http status code.
getAccountLimitResponse_httpStatus :: Lens' GetAccountLimitResponse Int

-- | The current setting for the specified limit. For example, if you
--   specified <tt>MAX_HEALTH_CHECKS_BY_OWNER</tt> for the value of
--   <tt>Type</tt> in the request, the value of <tt>Limit</tt> is the
--   maximum number of health checks that you can create using the current
--   account.
getAccountLimitResponse_limit :: Lens' GetAccountLimitResponse AccountLimit

-- | The current number of entities that you have created of the specified
--   type. For example, if you specified
--   <tt>MAX_HEALTH_CHECKS_BY_OWNER</tt> for the value of <tt>Type</tt> in
--   the request, the value of <tt>Count</tt> is the current number of
--   health checks that you have created using the current account.
getAccountLimitResponse_count :: Lens' GetAccountLimitResponse Natural
instance GHC.Generics.Generic Network.AWS.Route53.GetAccountLimit.GetAccountLimit
instance GHC.Show.Show Network.AWS.Route53.GetAccountLimit.GetAccountLimit
instance GHC.Read.Read Network.AWS.Route53.GetAccountLimit.GetAccountLimit
instance GHC.Classes.Eq Network.AWS.Route53.GetAccountLimit.GetAccountLimit
instance GHC.Generics.Generic Network.AWS.Route53.GetAccountLimit.GetAccountLimitResponse
instance GHC.Show.Show Network.AWS.Route53.GetAccountLimit.GetAccountLimitResponse
instance GHC.Read.Read Network.AWS.Route53.GetAccountLimit.GetAccountLimitResponse
instance GHC.Classes.Eq Network.AWS.Route53.GetAccountLimit.GetAccountLimitResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.GetAccountLimit.GetAccountLimit
instance Control.DeepSeq.NFData Network.AWS.Route53.GetAccountLimit.GetAccountLimitResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.GetAccountLimit.GetAccountLimit
instance Control.DeepSeq.NFData Network.AWS.Route53.GetAccountLimit.GetAccountLimit
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.GetAccountLimit.GetAccountLimit
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.GetAccountLimit.GetAccountLimit
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.GetAccountLimit.GetAccountLimit


-- | Enables DNSSEC signing in a specific hosted zone.
module Network.AWS.Route53.EnableHostedZoneDNSSEC

-- | <i>See:</i> <a>newEnableHostedZoneDNSSEC</a> smart constructor.
data EnableHostedZoneDNSSEC
EnableHostedZoneDNSSEC' :: ResourceId -> EnableHostedZoneDNSSEC

-- | A unique string used to identify a hosted zone.
[$sel:hostedZoneId:EnableHostedZoneDNSSEC'] :: EnableHostedZoneDNSSEC -> ResourceId

-- | Create a value of <a>EnableHostedZoneDNSSEC</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:EnableHostedZoneDNSSEC'</a>,
--   <a>enableHostedZoneDNSSEC_hostedZoneId</a> - A unique string used to
--   identify a hosted zone.
newEnableHostedZoneDNSSEC :: ResourceId -> EnableHostedZoneDNSSEC

-- | A unique string used to identify a hosted zone.
enableHostedZoneDNSSEC_hostedZoneId :: Lens' EnableHostedZoneDNSSEC ResourceId

-- | <i>See:</i> <a>newEnableHostedZoneDNSSECResponse</a> smart
--   constructor.
data EnableHostedZoneDNSSECResponse
EnableHostedZoneDNSSECResponse' :: Int -> ChangeInfo -> EnableHostedZoneDNSSECResponse

-- | The response's http status code.
[$sel:httpStatus:EnableHostedZoneDNSSECResponse'] :: EnableHostedZoneDNSSECResponse -> Int
[$sel:changeInfo:EnableHostedZoneDNSSECResponse'] :: EnableHostedZoneDNSSECResponse -> ChangeInfo

-- | Create a value of <a>EnableHostedZoneDNSSECResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:EnableHostedZoneDNSSECResponse'</a>,
--   <a>enableHostedZoneDNSSECResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:changeInfo:EnableHostedZoneDNSSECResponse'</a>,
--   <a>enableHostedZoneDNSSECResponse_changeInfo</a> - Undocumented
--   member.
newEnableHostedZoneDNSSECResponse :: Int -> ChangeInfo -> EnableHostedZoneDNSSECResponse

-- | The response's http status code.
enableHostedZoneDNSSECResponse_httpStatus :: Lens' EnableHostedZoneDNSSECResponse Int

-- | Undocumented member.
enableHostedZoneDNSSECResponse_changeInfo :: Lens' EnableHostedZoneDNSSECResponse ChangeInfo
instance GHC.Generics.Generic Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSEC
instance GHC.Show.Show Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSEC
instance GHC.Read.Read Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSEC
instance GHC.Classes.Eq Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSEC
instance GHC.Generics.Generic Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSECResponse
instance GHC.Show.Show Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSECResponse
instance GHC.Read.Read Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSECResponse
instance GHC.Classes.Eq Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSECResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSEC
instance Control.DeepSeq.NFData Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSECResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSEC
instance Control.DeepSeq.NFData Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSEC
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSEC
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSEC
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.EnableHostedZoneDNSSEC.EnableHostedZoneDNSSEC


-- | Disassociates an Amazon Virtual Private Cloud (Amazon VPC) from an
--   Amazon Route 53 private hosted zone. Note the following:
--   
--   <ul>
--   <li>You can't disassociate the last Amazon VPC from a private hosted
--   zone.</li>
--   <li>You can't convert a private hosted zone into a public hosted
--   zone.</li>
--   <li>You can submit a <tt>DisassociateVPCFromHostedZone</tt> request
--   using either the account that created the hosted zone or the account
--   that created the Amazon VPC.</li>
--   <li>Some services, such as Cloud Map and Amazon Elastic File System
--   (Amazon EFS) automatically create hosted zones and associate VPCs with
--   the hosted zones. A service can create a hosted zone using your
--   account or using its own account. You can disassociate a VPC from a
--   hosted zone only if the service created the hosted zone using your
--   account.When you run <a>DisassociateVPCFromHostedZone</a>, if the
--   hosted zone has a value for <tt>OwningAccount</tt>, you can use
--   <tt>DisassociateVPCFromHostedZone</tt>. If the hosted zone has a value
--   for <tt>OwningService</tt>, you can't use
--   <tt>DisassociateVPCFromHostedZone</tt>.</li>
--   </ul>
module Network.AWS.Route53.DisassociateVPCFromHostedZone

-- | A complex type that contains information about the VPC that you want
--   to disassociate from a specified private hosted zone.
--   
--   <i>See:</i> <a>newDisassociateVPCFromHostedZone</a> smart constructor.
data DisassociateVPCFromHostedZone
DisassociateVPCFromHostedZone' :: Maybe Text -> ResourceId -> VPC -> DisassociateVPCFromHostedZone

-- | <i>Optional:</i> A comment about the disassociation request.
[$sel:comment:DisassociateVPCFromHostedZone'] :: DisassociateVPCFromHostedZone -> Maybe Text

-- | The ID of the private hosted zone that you want to disassociate a VPC
--   from.
[$sel:hostedZoneId:DisassociateVPCFromHostedZone'] :: DisassociateVPCFromHostedZone -> ResourceId

-- | A complex type that contains information about the VPC that you're
--   disassociating from the specified hosted zone.
[$sel:vpc:DisassociateVPCFromHostedZone'] :: DisassociateVPCFromHostedZone -> VPC

-- | Create a value of <a>DisassociateVPCFromHostedZone</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:DisassociateVPCFromHostedZone'</a>,
--   <a>disassociateVPCFromHostedZone_comment</a> - <i>Optional:</i> A
--   comment about the disassociation request.
--   
--   <a>$sel:hostedZoneId:DisassociateVPCFromHostedZone'</a>,
--   <a>disassociateVPCFromHostedZone_hostedZoneId</a> - The ID of the
--   private hosted zone that you want to disassociate a VPC from.
--   
--   <a>$sel:vpc:DisassociateVPCFromHostedZone'</a>,
--   <a>disassociateVPCFromHostedZone_vpc</a> - A complex type that
--   contains information about the VPC that you're disassociating from the
--   specified hosted zone.
newDisassociateVPCFromHostedZone :: ResourceId -> VPC -> DisassociateVPCFromHostedZone

-- | <i>Optional:</i> A comment about the disassociation request.
disassociateVPCFromHostedZone_comment :: Lens' DisassociateVPCFromHostedZone (Maybe Text)

-- | The ID of the private hosted zone that you want to disassociate a VPC
--   from.
disassociateVPCFromHostedZone_hostedZoneId :: Lens' DisassociateVPCFromHostedZone ResourceId

-- | A complex type that contains information about the VPC that you're
--   disassociating from the specified hosted zone.
disassociateVPCFromHostedZone_vpc :: Lens' DisassociateVPCFromHostedZone VPC

-- | A complex type that contains the response information for the
--   disassociate request.
--   
--   <i>See:</i> <a>newDisassociateVPCFromHostedZoneResponse</a> smart
--   constructor.
data DisassociateVPCFromHostedZoneResponse
DisassociateVPCFromHostedZoneResponse' :: Int -> ChangeInfo -> DisassociateVPCFromHostedZoneResponse

-- | The response's http status code.
[$sel:httpStatus:DisassociateVPCFromHostedZoneResponse'] :: DisassociateVPCFromHostedZoneResponse -> Int

-- | A complex type that describes the changes made to the specified
--   private hosted zone.
[$sel:changeInfo:DisassociateVPCFromHostedZoneResponse'] :: DisassociateVPCFromHostedZoneResponse -> ChangeInfo

-- | Create a value of <a>DisassociateVPCFromHostedZoneResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateVPCFromHostedZoneResponse'</a>,
--   <a>disassociateVPCFromHostedZoneResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:changeInfo:DisassociateVPCFromHostedZoneResponse'</a>,
--   <a>disassociateVPCFromHostedZoneResponse_changeInfo</a> - A complex
--   type that describes the changes made to the specified private hosted
--   zone.
newDisassociateVPCFromHostedZoneResponse :: Int -> ChangeInfo -> DisassociateVPCFromHostedZoneResponse

-- | The response's http status code.
disassociateVPCFromHostedZoneResponse_httpStatus :: Lens' DisassociateVPCFromHostedZoneResponse Int

-- | A complex type that describes the changes made to the specified
--   private hosted zone.
disassociateVPCFromHostedZoneResponse_changeInfo :: Lens' DisassociateVPCFromHostedZoneResponse ChangeInfo
instance GHC.Generics.Generic Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone
instance GHC.Show.Show Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone
instance GHC.Read.Read Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone
instance GHC.Classes.Eq Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone
instance GHC.Generics.Generic Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZoneResponse
instance GHC.Show.Show Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZoneResponse
instance GHC.Read.Read Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZoneResponse
instance GHC.Classes.Eq Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZoneResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZoneResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.DisassociateVPCFromHostedZone.DisassociateVPCFromHostedZone


-- | Disables DNSSEC signing in a specific hosted zone. This action does
--   not deactivate any key-signing keys (KSKs) that are active in the
--   hosted zone.
module Network.AWS.Route53.DisableHostedZoneDNSSEC

-- | <i>See:</i> <a>newDisableHostedZoneDNSSEC</a> smart constructor.
data DisableHostedZoneDNSSEC
DisableHostedZoneDNSSEC' :: ResourceId -> DisableHostedZoneDNSSEC

-- | A unique string used to identify a hosted zone.
[$sel:hostedZoneId:DisableHostedZoneDNSSEC'] :: DisableHostedZoneDNSSEC -> ResourceId

-- | Create a value of <a>DisableHostedZoneDNSSEC</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:DisableHostedZoneDNSSEC'</a>,
--   <a>disableHostedZoneDNSSEC_hostedZoneId</a> - A unique string used to
--   identify a hosted zone.
newDisableHostedZoneDNSSEC :: ResourceId -> DisableHostedZoneDNSSEC

-- | A unique string used to identify a hosted zone.
disableHostedZoneDNSSEC_hostedZoneId :: Lens' DisableHostedZoneDNSSEC ResourceId

-- | <i>See:</i> <a>newDisableHostedZoneDNSSECResponse</a> smart
--   constructor.
data DisableHostedZoneDNSSECResponse
DisableHostedZoneDNSSECResponse' :: Int -> ChangeInfo -> DisableHostedZoneDNSSECResponse

-- | The response's http status code.
[$sel:httpStatus:DisableHostedZoneDNSSECResponse'] :: DisableHostedZoneDNSSECResponse -> Int
[$sel:changeInfo:DisableHostedZoneDNSSECResponse'] :: DisableHostedZoneDNSSECResponse -> ChangeInfo

-- | Create a value of <a>DisableHostedZoneDNSSECResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisableHostedZoneDNSSECResponse'</a>,
--   <a>disableHostedZoneDNSSECResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:changeInfo:DisableHostedZoneDNSSECResponse'</a>,
--   <a>disableHostedZoneDNSSECResponse_changeInfo</a> - Undocumented
--   member.
newDisableHostedZoneDNSSECResponse :: Int -> ChangeInfo -> DisableHostedZoneDNSSECResponse

-- | The response's http status code.
disableHostedZoneDNSSECResponse_httpStatus :: Lens' DisableHostedZoneDNSSECResponse Int

-- | Undocumented member.
disableHostedZoneDNSSECResponse_changeInfo :: Lens' DisableHostedZoneDNSSECResponse ChangeInfo
instance GHC.Generics.Generic Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSEC
instance GHC.Show.Show Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSEC
instance GHC.Read.Read Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSEC
instance GHC.Classes.Eq Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSEC
instance GHC.Generics.Generic Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSECResponse
instance GHC.Show.Show Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSECResponse
instance GHC.Read.Read Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSECResponse
instance GHC.Classes.Eq Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSECResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSEC
instance Control.DeepSeq.NFData Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSECResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSEC
instance Control.DeepSeq.NFData Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSEC
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSEC
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSEC
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.DisableHostedZoneDNSSEC.DisableHostedZoneDNSSEC


-- | Removes authorization to submit an <tt>AssociateVPCWithHostedZone</tt>
--   request to associate a specified VPC with a hosted zone that was
--   created by a different account. You must use the account that created
--   the hosted zone to submit a <tt>DeleteVPCAssociationAuthorization</tt>
--   request.
--   
--   Sending this request only prevents the Amazon Web Services account
--   that created the VPC from associating the VPC with the Amazon Route 53
--   hosted zone in the future. If the VPC is already associated with the
--   hosted zone, <tt>DeleteVPCAssociationAuthorization</tt> won't
--   disassociate the VPC from the hosted zone. If you want to delete an
--   existing association, use <tt>DisassociateVPCFromHostedZone</tt>.
module Network.AWS.Route53.DeleteVPCAssociationAuthorization

-- | A complex type that contains information about the request to remove
--   authorization to associate a VPC that was created by one Amazon Web
--   Services account with a hosted zone that was created with a different
--   Amazon Web Services account.
--   
--   <i>See:</i> <a>newDeleteVPCAssociationAuthorization</a> smart
--   constructor.
data DeleteVPCAssociationAuthorization
DeleteVPCAssociationAuthorization' :: ResourceId -> VPC -> DeleteVPCAssociationAuthorization

-- | When removing authorization to associate a VPC that was created by one
--   Amazon Web Services account with a hosted zone that was created with a
--   different Amazon Web Services account, the ID of the hosted zone.
[$sel:hostedZoneId:DeleteVPCAssociationAuthorization'] :: DeleteVPCAssociationAuthorization -> ResourceId

-- | When removing authorization to associate a VPC that was created by one
--   Amazon Web Services account with a hosted zone that was created with a
--   different Amazon Web Services account, a complex type that includes
--   the ID and region of the VPC.
[$sel:vpc:DeleteVPCAssociationAuthorization'] :: DeleteVPCAssociationAuthorization -> VPC

-- | Create a value of <a>DeleteVPCAssociationAuthorization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:DeleteVPCAssociationAuthorization'</a>,
--   <a>deleteVPCAssociationAuthorization_hostedZoneId</a> - When removing
--   authorization to associate a VPC that was created by one Amazon Web
--   Services account with a hosted zone that was created with a different
--   Amazon Web Services account, the ID of the hosted zone.
--   
--   <a>$sel:vpc:DeleteVPCAssociationAuthorization'</a>,
--   <a>deleteVPCAssociationAuthorization_vpc</a> - When removing
--   authorization to associate a VPC that was created by one Amazon Web
--   Services account with a hosted zone that was created with a different
--   Amazon Web Services account, a complex type that includes the ID and
--   region of the VPC.
newDeleteVPCAssociationAuthorization :: ResourceId -> VPC -> DeleteVPCAssociationAuthorization

-- | When removing authorization to associate a VPC that was created by one
--   Amazon Web Services account with a hosted zone that was created with a
--   different Amazon Web Services account, the ID of the hosted zone.
deleteVPCAssociationAuthorization_hostedZoneId :: Lens' DeleteVPCAssociationAuthorization ResourceId

-- | When removing authorization to associate a VPC that was created by one
--   Amazon Web Services account with a hosted zone that was created with a
--   different Amazon Web Services account, a complex type that includes
--   the ID and region of the VPC.
deleteVPCAssociationAuthorization_vpc :: Lens' DeleteVPCAssociationAuthorization VPC

-- | Empty response for the request.
--   
--   <i>See:</i> <a>newDeleteVPCAssociationAuthorizationResponse</a> smart
--   constructor.
data DeleteVPCAssociationAuthorizationResponse
DeleteVPCAssociationAuthorizationResponse' :: Int -> DeleteVPCAssociationAuthorizationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteVPCAssociationAuthorizationResponse'] :: DeleteVPCAssociationAuthorizationResponse -> Int

-- | Create a value of <a>DeleteVPCAssociationAuthorizationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVPCAssociationAuthorizationResponse'</a>,
--   <a>deleteVPCAssociationAuthorizationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteVPCAssociationAuthorizationResponse :: Int -> DeleteVPCAssociationAuthorizationResponse

-- | The response's http status code.
deleteVPCAssociationAuthorizationResponse_httpStatus :: Lens' DeleteVPCAssociationAuthorizationResponse Int
instance GHC.Generics.Generic Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization
instance GHC.Show.Show Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization
instance GHC.Read.Read Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization
instance GHC.Classes.Eq Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization
instance GHC.Generics.Generic Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorizationResponse
instance GHC.Show.Show Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorizationResponse
instance GHC.Read.Read Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorizationResponse
instance GHC.Classes.Eq Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorizationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorizationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.DeleteVPCAssociationAuthorization.DeleteVPCAssociationAuthorization


-- | Deletes a traffic policy instance and all of the resource record sets
--   that Amazon Route 53 created when you created the instance.
--   
--   In the Route 53 console, traffic policy instances are known as policy
--   records.
module Network.AWS.Route53.DeleteTrafficPolicyInstance

-- | A request to delete a specified traffic policy instance.
--   
--   <i>See:</i> <a>newDeleteTrafficPolicyInstance</a> smart constructor.
data DeleteTrafficPolicyInstance
DeleteTrafficPolicyInstance' :: Text -> DeleteTrafficPolicyInstance

-- | The ID of the traffic policy instance that you want to delete.
--   
--   When you delete a traffic policy instance, Amazon Route 53 also
--   deletes all of the resource record sets that were created when you
--   created the traffic policy instance.
[$sel:id:DeleteTrafficPolicyInstance'] :: DeleteTrafficPolicyInstance -> Text

-- | Create a value of <a>DeleteTrafficPolicyInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteTrafficPolicyInstance'</a>,
--   <a>deleteTrafficPolicyInstance_id</a> - The ID of the traffic policy
--   instance that you want to delete.
--   
--   When you delete a traffic policy instance, Amazon Route 53 also
--   deletes all of the resource record sets that were created when you
--   created the traffic policy instance.
newDeleteTrafficPolicyInstance :: Text -> DeleteTrafficPolicyInstance

-- | The ID of the traffic policy instance that you want to delete.
--   
--   When you delete a traffic policy instance, Amazon Route 53 also
--   deletes all of the resource record sets that were created when you
--   created the traffic policy instance.
deleteTrafficPolicyInstance_id :: Lens' DeleteTrafficPolicyInstance Text

-- | An empty element.
--   
--   <i>See:</i> <a>newDeleteTrafficPolicyInstanceResponse</a> smart
--   constructor.
data DeleteTrafficPolicyInstanceResponse
DeleteTrafficPolicyInstanceResponse' :: Int -> DeleteTrafficPolicyInstanceResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteTrafficPolicyInstanceResponse'] :: DeleteTrafficPolicyInstanceResponse -> Int

-- | Create a value of <a>DeleteTrafficPolicyInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTrafficPolicyInstanceResponse'</a>,
--   <a>deleteTrafficPolicyInstanceResponse_httpStatus</a> - The response's
--   http status code.
newDeleteTrafficPolicyInstanceResponse :: Int -> DeleteTrafficPolicyInstanceResponse

-- | The response's http status code.
deleteTrafficPolicyInstanceResponse_httpStatus :: Lens' DeleteTrafficPolicyInstanceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstance
instance GHC.Show.Show Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstance
instance GHC.Read.Read Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstance
instance GHC.Classes.Eq Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstance
instance GHC.Generics.Generic Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstanceResponse
instance GHC.Show.Show Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstanceResponse
instance GHC.Read.Read Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstanceResponse
instance GHC.Classes.Eq Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstance
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstance
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.DeleteTrafficPolicyInstance.DeleteTrafficPolicyInstance


-- | Deletes a traffic policy.
--   
--   When you delete a traffic policy, Route 53 sets a flag on the policy
--   to indicate that it has been deleted. However, Route 53 never fully
--   deletes the traffic policy. Note the following:
--   
--   <ul>
--   <li>Deleted traffic policies aren't listed if you run
--   <a>ListTrafficPolicies</a>.</li>
--   <li>There's no way to get a list of deleted policies.</li>
--   <li>If you retain the ID of the policy, you can get information about
--   the policy, including the traffic policy document, by running
--   <a>GetTrafficPolicy</a>.</li>
--   </ul>
module Network.AWS.Route53.DeleteTrafficPolicy

-- | A request to delete a specified traffic policy version.
--   
--   <i>See:</i> <a>newDeleteTrafficPolicy</a> smart constructor.
data DeleteTrafficPolicy
DeleteTrafficPolicy' :: Text -> Natural -> DeleteTrafficPolicy

-- | The ID of the traffic policy that you want to delete.
[$sel:id:DeleteTrafficPolicy'] :: DeleteTrafficPolicy -> Text

-- | The version number of the traffic policy that you want to delete.
[$sel:version:DeleteTrafficPolicy'] :: DeleteTrafficPolicy -> Natural

-- | Create a value of <a>DeleteTrafficPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteTrafficPolicy'</a>, <a>deleteTrafficPolicy_id</a> -
--   The ID of the traffic policy that you want to delete.
--   
--   <a>$sel:version:DeleteTrafficPolicy'</a>,
--   <a>deleteTrafficPolicy_version</a> - The version number of the traffic
--   policy that you want to delete.
newDeleteTrafficPolicy :: Text -> Natural -> DeleteTrafficPolicy

-- | The ID of the traffic policy that you want to delete.
deleteTrafficPolicy_id :: Lens' DeleteTrafficPolicy Text

-- | The version number of the traffic policy that you want to delete.
deleteTrafficPolicy_version :: Lens' DeleteTrafficPolicy Natural

-- | An empty element.
--   
--   <i>See:</i> <a>newDeleteTrafficPolicyResponse</a> smart constructor.
data DeleteTrafficPolicyResponse
DeleteTrafficPolicyResponse' :: Int -> DeleteTrafficPolicyResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteTrafficPolicyResponse'] :: DeleteTrafficPolicyResponse -> Int

-- | Create a value of <a>DeleteTrafficPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTrafficPolicyResponse'</a>,
--   <a>deleteTrafficPolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteTrafficPolicyResponse :: Int -> DeleteTrafficPolicyResponse

-- | The response's http status code.
deleteTrafficPolicyResponse_httpStatus :: Lens' DeleteTrafficPolicyResponse Int
instance GHC.Generics.Generic Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicy
instance GHC.Show.Show Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicy
instance GHC.Read.Read Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicy
instance GHC.Classes.Eq Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicy
instance GHC.Generics.Generic Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicyResponse
instance GHC.Show.Show Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicyResponse
instance GHC.Read.Read Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicyResponse
instance GHC.Classes.Eq Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.DeleteTrafficPolicy.DeleteTrafficPolicy


-- | Deletes a reusable delegation set.
--   
--   You can delete a reusable delegation set only if it isn't associated
--   with any hosted zones.
--   
--   To verify that the reusable delegation set is not associated with any
--   hosted zones, submit a <a>GetReusableDelegationSet</a> request and
--   specify the ID of the reusable delegation set that you want to delete.
module Network.AWS.Route53.DeleteReusableDelegationSet

-- | A request to delete a reusable delegation set.
--   
--   <i>See:</i> <a>newDeleteReusableDelegationSet</a> smart constructor.
data DeleteReusableDelegationSet
DeleteReusableDelegationSet' :: ResourceId -> DeleteReusableDelegationSet

-- | The ID of the reusable delegation set that you want to delete.
[$sel:id:DeleteReusableDelegationSet'] :: DeleteReusableDelegationSet -> ResourceId

-- | Create a value of <a>DeleteReusableDelegationSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteReusableDelegationSet'</a>,
--   <a>deleteReusableDelegationSet_id</a> - The ID of the reusable
--   delegation set that you want to delete.
newDeleteReusableDelegationSet :: ResourceId -> DeleteReusableDelegationSet

-- | The ID of the reusable delegation set that you want to delete.
deleteReusableDelegationSet_id :: Lens' DeleteReusableDelegationSet ResourceId

-- | An empty element.
--   
--   <i>See:</i> <a>newDeleteReusableDelegationSetResponse</a> smart
--   constructor.
data DeleteReusableDelegationSetResponse
DeleteReusableDelegationSetResponse' :: Int -> DeleteReusableDelegationSetResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteReusableDelegationSetResponse'] :: DeleteReusableDelegationSetResponse -> Int

-- | Create a value of <a>DeleteReusableDelegationSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteReusableDelegationSetResponse'</a>,
--   <a>deleteReusableDelegationSetResponse_httpStatus</a> - The response's
--   http status code.
newDeleteReusableDelegationSetResponse :: Int -> DeleteReusableDelegationSetResponse

-- | The response's http status code.
deleteReusableDelegationSetResponse_httpStatus :: Lens' DeleteReusableDelegationSetResponse Int
instance GHC.Generics.Generic Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSet
instance GHC.Show.Show Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSet
instance GHC.Read.Read Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSet
instance GHC.Classes.Eq Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSet
instance GHC.Generics.Generic Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSetResponse
instance GHC.Show.Show Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSetResponse
instance GHC.Read.Read Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSetResponse
instance GHC.Classes.Eq Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSet
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSetResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSet
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSet
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSet
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.DeleteReusableDelegationSet.DeleteReusableDelegationSet


-- | Deletes a configuration for DNS query logging. If you delete a
--   configuration, Amazon Route 53 stops sending query logs to CloudWatch
--   Logs. Route 53 doesn't delete any logs that are already in CloudWatch
--   Logs.
--   
--   For more information about DNS query logs, see
--   <a>CreateQueryLoggingConfig</a>.
module Network.AWS.Route53.DeleteQueryLoggingConfig

-- | <i>See:</i> <a>newDeleteQueryLoggingConfig</a> smart constructor.
data DeleteQueryLoggingConfig
DeleteQueryLoggingConfig' :: Text -> DeleteQueryLoggingConfig

-- | The ID of the configuration that you want to delete.
[$sel:id:DeleteQueryLoggingConfig'] :: DeleteQueryLoggingConfig -> Text

-- | Create a value of <a>DeleteQueryLoggingConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteQueryLoggingConfig'</a>,
--   <a>deleteQueryLoggingConfig_id</a> - The ID of the configuration that
--   you want to delete.
newDeleteQueryLoggingConfig :: Text -> DeleteQueryLoggingConfig

-- | The ID of the configuration that you want to delete.
deleteQueryLoggingConfig_id :: Lens' DeleteQueryLoggingConfig Text

-- | <i>See:</i> <a>newDeleteQueryLoggingConfigResponse</a> smart
--   constructor.
data DeleteQueryLoggingConfigResponse
DeleteQueryLoggingConfigResponse' :: Int -> DeleteQueryLoggingConfigResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteQueryLoggingConfigResponse'] :: DeleteQueryLoggingConfigResponse -> Int

-- | Create a value of <a>DeleteQueryLoggingConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteQueryLoggingConfigResponse'</a>,
--   <a>deleteQueryLoggingConfigResponse_httpStatus</a> - The response's
--   http status code.
newDeleteQueryLoggingConfigResponse :: Int -> DeleteQueryLoggingConfigResponse

-- | The response's http status code.
deleteQueryLoggingConfigResponse_httpStatus :: Lens' DeleteQueryLoggingConfigResponse Int
instance GHC.Generics.Generic Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfig
instance GHC.Show.Show Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfig
instance GHC.Read.Read Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfig
instance GHC.Classes.Eq Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfig
instance GHC.Generics.Generic Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfigResponse
instance GHC.Show.Show Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfigResponse
instance GHC.Read.Read Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfig
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfig
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.DeleteQueryLoggingConfig.DeleteQueryLoggingConfig


-- | Deletes a key-signing key (KSK). Before you can delete a KSK, you must
--   deactivate it. The KSK must be deactivated before you can delete it
--   regardless of whether the hosted zone is enabled for DNSSEC signing.
module Network.AWS.Route53.DeleteKeySigningKey

-- | <i>See:</i> <a>newDeleteKeySigningKey</a> smart constructor.
data DeleteKeySigningKey
DeleteKeySigningKey' :: ResourceId -> Text -> DeleteKeySigningKey

-- | A unique string used to identify a hosted zone.
[$sel:hostedZoneId:DeleteKeySigningKey'] :: DeleteKeySigningKey -> ResourceId

-- | A string used to identify a key-signing key (KSK).
[$sel:name:DeleteKeySigningKey'] :: DeleteKeySigningKey -> Text

-- | Create a value of <a>DeleteKeySigningKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:DeleteKeySigningKey'</a>,
--   <a>deleteKeySigningKey_hostedZoneId</a> - A unique string used to
--   identify a hosted zone.
--   
--   <a>$sel:name:DeleteKeySigningKey'</a>, <a>deleteKeySigningKey_name</a>
--   - A string used to identify a key-signing key (KSK).
newDeleteKeySigningKey :: ResourceId -> Text -> DeleteKeySigningKey

-- | A unique string used to identify a hosted zone.
deleteKeySigningKey_hostedZoneId :: Lens' DeleteKeySigningKey ResourceId

-- | A string used to identify a key-signing key (KSK).
deleteKeySigningKey_name :: Lens' DeleteKeySigningKey Text

-- | <i>See:</i> <a>newDeleteKeySigningKeyResponse</a> smart constructor.
data DeleteKeySigningKeyResponse
DeleteKeySigningKeyResponse' :: Int -> ChangeInfo -> DeleteKeySigningKeyResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteKeySigningKeyResponse'] :: DeleteKeySigningKeyResponse -> Int
[$sel:changeInfo:DeleteKeySigningKeyResponse'] :: DeleteKeySigningKeyResponse -> ChangeInfo

-- | Create a value of <a>DeleteKeySigningKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteKeySigningKeyResponse'</a>,
--   <a>deleteKeySigningKeyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:changeInfo:DeleteKeySigningKeyResponse'</a>,
--   <a>deleteKeySigningKeyResponse_changeInfo</a> - Undocumented member.
newDeleteKeySigningKeyResponse :: Int -> ChangeInfo -> DeleteKeySigningKeyResponse

-- | The response's http status code.
deleteKeySigningKeyResponse_httpStatus :: Lens' DeleteKeySigningKeyResponse Int

-- | Undocumented member.
deleteKeySigningKeyResponse_changeInfo :: Lens' DeleteKeySigningKeyResponse ChangeInfo
instance GHC.Generics.Generic Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKey
instance GHC.Show.Show Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKey
instance GHC.Read.Read Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKey
instance GHC.Classes.Eq Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKey
instance GHC.Generics.Generic Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKeyResponse
instance GHC.Show.Show Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKeyResponse
instance GHC.Read.Read Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKeyResponse
instance GHC.Classes.Eq Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKey
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKey
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKey
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.DeleteKeySigningKey.DeleteKeySigningKey


-- | Deletes a hosted zone.
--   
--   If the hosted zone was created by another service, such as Cloud Map,
--   see <a>Deleting Public Hosted Zones That Were Created by Another
--   Service</a> in the <i>Amazon Route 53 Developer Guide</i> for
--   information about how to delete it. (The process is the same for
--   public and private hosted zones that were created by another service.)
--   
--   If you want to keep your domain registration but you want to stop
--   routing internet traffic to your website or web application, we
--   recommend that you delete resource record sets in the hosted zone
--   instead of deleting the hosted zone.
--   
--   If you delete a hosted zone, you can't undelete it. You must create a
--   new hosted zone and update the name servers for your domain
--   registration, which can require up to 48 hours to take effect. (If you
--   delegated responsibility for a subdomain to a hosted zone and you
--   delete the child hosted zone, you must update the name servers in the
--   parent hosted zone.) In addition, if you delete a hosted zone, someone
--   could hijack the domain and route traffic to their own resources using
--   your domain name.
--   
--   If you want to avoid the monthly charge for the hosted zone, you can
--   transfer DNS service for the domain to a free DNS service. When you
--   transfer DNS service, you have to update the name servers for the
--   domain registration. If the domain is registered with Route 53, see
--   <a>UpdateDomainNameservers</a> for information about how to replace
--   Route 53 name servers with name servers for the new DNS service. If
--   the domain is registered with another registrar, use the method
--   provided by the registrar to update name servers for the domain
--   registration. For more information, perform an internet search on
--   "free DNS service."
--   
--   You can delete a hosted zone only if it contains only the default SOA
--   record and NS resource record sets. If the hosted zone contains other
--   resource record sets, you must delete them before you can delete the
--   hosted zone. If you try to delete a hosted zone that contains other
--   resource record sets, the request fails, and Route 53 returns a
--   <tt>HostedZoneNotEmpty</tt> error. For information about deleting
--   records from your hosted zone, see <a>ChangeResourceRecordSets</a>.
--   
--   To verify that the hosted zone has been deleted, do one of the
--   following:
--   
--   <ul>
--   <li>Use the <tt>GetHostedZone</tt> action to request information about
--   the hosted zone.</li>
--   <li>Use the <tt>ListHostedZones</tt> action to get a list of the
--   hosted zones associated with the current Amazon Web Services
--   account.</li>
--   </ul>
module Network.AWS.Route53.DeleteHostedZone

-- | A request to delete a hosted zone.
--   
--   <i>See:</i> <a>newDeleteHostedZone</a> smart constructor.
data DeleteHostedZone
DeleteHostedZone' :: ResourceId -> DeleteHostedZone

-- | The ID of the hosted zone you want to delete.
[$sel:id:DeleteHostedZone'] :: DeleteHostedZone -> ResourceId

-- | Create a value of <a>DeleteHostedZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteHostedZone'</a>, <a>deleteHostedZone_id</a> - The ID
--   of the hosted zone you want to delete.
newDeleteHostedZone :: ResourceId -> DeleteHostedZone

-- | The ID of the hosted zone you want to delete.
deleteHostedZone_id :: Lens' DeleteHostedZone ResourceId

-- | A complex type that contains the response to a
--   <tt>DeleteHostedZone</tt> request.
--   
--   <i>See:</i> <a>newDeleteHostedZoneResponse</a> smart constructor.
data DeleteHostedZoneResponse
DeleteHostedZoneResponse' :: Int -> ChangeInfo -> DeleteHostedZoneResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteHostedZoneResponse'] :: DeleteHostedZoneResponse -> Int

-- | A complex type that contains the ID, the status, and the date and time
--   of a request to delete a hosted zone.
[$sel:changeInfo:DeleteHostedZoneResponse'] :: DeleteHostedZoneResponse -> ChangeInfo

-- | Create a value of <a>DeleteHostedZoneResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteHostedZoneResponse'</a>,
--   <a>deleteHostedZoneResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:changeInfo:DeleteHostedZoneResponse'</a>,
--   <a>deleteHostedZoneResponse_changeInfo</a> - A complex type that
--   contains the ID, the status, and the date and time of a request to
--   delete a hosted zone.
newDeleteHostedZoneResponse :: Int -> ChangeInfo -> DeleteHostedZoneResponse

-- | The response's http status code.
deleteHostedZoneResponse_httpStatus :: Lens' DeleteHostedZoneResponse Int

-- | A complex type that contains the ID, the status, and the date and time
--   of a request to delete a hosted zone.
deleteHostedZoneResponse_changeInfo :: Lens' DeleteHostedZoneResponse ChangeInfo
instance GHC.Generics.Generic Network.AWS.Route53.DeleteHostedZone.DeleteHostedZone
instance GHC.Show.Show Network.AWS.Route53.DeleteHostedZone.DeleteHostedZone
instance GHC.Read.Read Network.AWS.Route53.DeleteHostedZone.DeleteHostedZone
instance GHC.Classes.Eq Network.AWS.Route53.DeleteHostedZone.DeleteHostedZone
instance GHC.Generics.Generic Network.AWS.Route53.DeleteHostedZone.DeleteHostedZoneResponse
instance GHC.Show.Show Network.AWS.Route53.DeleteHostedZone.DeleteHostedZoneResponse
instance GHC.Read.Read Network.AWS.Route53.DeleteHostedZone.DeleteHostedZoneResponse
instance GHC.Classes.Eq Network.AWS.Route53.DeleteHostedZone.DeleteHostedZoneResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.DeleteHostedZone.DeleteHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteHostedZone.DeleteHostedZoneResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.DeleteHostedZone.DeleteHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteHostedZone.DeleteHostedZone
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.DeleteHostedZone.DeleteHostedZone
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.DeleteHostedZone.DeleteHostedZone
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.DeleteHostedZone.DeleteHostedZone


-- | Deletes a health check.
--   
--   Amazon Route 53 does not prevent you from deleting a health check even
--   if the health check is associated with one or more resource record
--   sets. If you delete a health check and you don't update the associated
--   resource record sets, the future status of the health check can't be
--   predicted and may change. This will affect the routing of DNS queries
--   for your DNS failover configuration. For more information, see
--   <a>Replacing and Deleting Health Checks</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
--   
--   If you're using Cloud Map and you configured Cloud Map to create a
--   Route 53 health check when you register an instance, you can't use the
--   Route 53 <tt>DeleteHealthCheck</tt> command to delete the health
--   check. The health check is deleted automatically when you deregister
--   the instance; there can be a delay of several hours before the health
--   check is deleted from Route 53.
module Network.AWS.Route53.DeleteHealthCheck

-- | This action deletes a health check.
--   
--   <i>See:</i> <a>newDeleteHealthCheck</a> smart constructor.
data DeleteHealthCheck
DeleteHealthCheck' :: Text -> DeleteHealthCheck

-- | The ID of the health check that you want to delete.
[$sel:healthCheckId:DeleteHealthCheck'] :: DeleteHealthCheck -> Text

-- | Create a value of <a>DeleteHealthCheck</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckId:DeleteHealthCheck'</a>,
--   <a>deleteHealthCheck_healthCheckId</a> - The ID of the health check
--   that you want to delete.
newDeleteHealthCheck :: Text -> DeleteHealthCheck

-- | The ID of the health check that you want to delete.
deleteHealthCheck_healthCheckId :: Lens' DeleteHealthCheck Text

-- | An empty element.
--   
--   <i>See:</i> <a>newDeleteHealthCheckResponse</a> smart constructor.
data DeleteHealthCheckResponse
DeleteHealthCheckResponse' :: Int -> DeleteHealthCheckResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteHealthCheckResponse'] :: DeleteHealthCheckResponse -> Int

-- | Create a value of <a>DeleteHealthCheckResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteHealthCheckResponse'</a>,
--   <a>deleteHealthCheckResponse_httpStatus</a> - The response's http
--   status code.
newDeleteHealthCheckResponse :: Int -> DeleteHealthCheckResponse

-- | The response's http status code.
deleteHealthCheckResponse_httpStatus :: Lens' DeleteHealthCheckResponse Int
instance GHC.Generics.Generic Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheck
instance GHC.Show.Show Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheck
instance GHC.Read.Read Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheck
instance GHC.Classes.Eq Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheck
instance GHC.Generics.Generic Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheckResponse
instance GHC.Show.Show Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheckResponse
instance GHC.Read.Read Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheckResponse
instance GHC.Classes.Eq Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheckResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheck
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheckResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheck
instance Control.DeepSeq.NFData Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheck
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheck
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheck
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.DeleteHealthCheck.DeleteHealthCheck


-- | Deactivates a key-signing key (KSK) so that it will not be used for
--   signing by DNSSEC. This operation changes the KSK status to
--   <tt>INACTIVE</tt>.
module Network.AWS.Route53.DeactivateKeySigningKey

-- | <i>See:</i> <a>newDeactivateKeySigningKey</a> smart constructor.
data DeactivateKeySigningKey
DeactivateKeySigningKey' :: ResourceId -> Text -> DeactivateKeySigningKey

-- | A unique string used to identify a hosted zone.
[$sel:hostedZoneId:DeactivateKeySigningKey'] :: DeactivateKeySigningKey -> ResourceId

-- | A string used to identify a key-signing key (KSK).
[$sel:name:DeactivateKeySigningKey'] :: DeactivateKeySigningKey -> Text

-- | Create a value of <a>DeactivateKeySigningKey</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:DeactivateKeySigningKey'</a>,
--   <a>deactivateKeySigningKey_hostedZoneId</a> - A unique string used to
--   identify a hosted zone.
--   
--   <a>$sel:name:DeactivateKeySigningKey'</a>,
--   <a>deactivateKeySigningKey_name</a> - A string used to identify a
--   key-signing key (KSK).
newDeactivateKeySigningKey :: ResourceId -> Text -> DeactivateKeySigningKey

-- | A unique string used to identify a hosted zone.
deactivateKeySigningKey_hostedZoneId :: Lens' DeactivateKeySigningKey ResourceId

-- | A string used to identify a key-signing key (KSK).
deactivateKeySigningKey_name :: Lens' DeactivateKeySigningKey Text

-- | <i>See:</i> <a>newDeactivateKeySigningKeyResponse</a> smart
--   constructor.
data DeactivateKeySigningKeyResponse
DeactivateKeySigningKeyResponse' :: Int -> ChangeInfo -> DeactivateKeySigningKeyResponse

-- | The response's http status code.
[$sel:httpStatus:DeactivateKeySigningKeyResponse'] :: DeactivateKeySigningKeyResponse -> Int
[$sel:changeInfo:DeactivateKeySigningKeyResponse'] :: DeactivateKeySigningKeyResponse -> ChangeInfo

-- | Create a value of <a>DeactivateKeySigningKeyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeactivateKeySigningKeyResponse'</a>,
--   <a>deactivateKeySigningKeyResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:changeInfo:DeactivateKeySigningKeyResponse'</a>,
--   <a>deactivateKeySigningKeyResponse_changeInfo</a> - Undocumented
--   member.
newDeactivateKeySigningKeyResponse :: Int -> ChangeInfo -> DeactivateKeySigningKeyResponse

-- | The response's http status code.
deactivateKeySigningKeyResponse_httpStatus :: Lens' DeactivateKeySigningKeyResponse Int

-- | Undocumented member.
deactivateKeySigningKeyResponse_changeInfo :: Lens' DeactivateKeySigningKeyResponse ChangeInfo
instance GHC.Generics.Generic Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKey
instance GHC.Show.Show Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKey
instance GHC.Read.Read Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKey
instance GHC.Classes.Eq Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKey
instance GHC.Generics.Generic Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKeyResponse
instance GHC.Show.Show Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKeyResponse
instance GHC.Read.Read Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKeyResponse
instance GHC.Classes.Eq Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKey
instance Control.DeepSeq.NFData Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKey
instance Control.DeepSeq.NFData Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKey
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.DeactivateKeySigningKey.DeactivateKeySigningKey


-- | Authorizes the Amazon Web Services account that created a specified
--   VPC to submit an <tt>AssociateVPCWithHostedZone</tt> request to
--   associate the VPC with a specified hosted zone that was created by a
--   different account. To submit a
--   <tt>CreateVPCAssociationAuthorization</tt> request, you must use the
--   account that created the hosted zone. After you authorize the
--   association, use the account that created the VPC to submit an
--   <tt>AssociateVPCWithHostedZone</tt> request.
--   
--   If you want to associate multiple VPCs that you created by using one
--   account with a hosted zone that you created by using a different
--   account, you must submit one authorization request for each VPC.
module Network.AWS.Route53.CreateVPCAssociationAuthorization

-- | A complex type that contains information about the request to
--   authorize associating a VPC with your private hosted zone.
--   Authorization is only required when a private hosted zone and a VPC
--   were created by using different accounts.
--   
--   <i>See:</i> <a>newCreateVPCAssociationAuthorization</a> smart
--   constructor.
data CreateVPCAssociationAuthorization
CreateVPCAssociationAuthorization' :: ResourceId -> VPC -> CreateVPCAssociationAuthorization

-- | The ID of the private hosted zone that you want to authorize
--   associating a VPC with.
[$sel:hostedZoneId:CreateVPCAssociationAuthorization'] :: CreateVPCAssociationAuthorization -> ResourceId

-- | A complex type that contains the VPC ID and region for the VPC that
--   you want to authorize associating with your hosted zone.
[$sel:vpc:CreateVPCAssociationAuthorization'] :: CreateVPCAssociationAuthorization -> VPC

-- | Create a value of <a>CreateVPCAssociationAuthorization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:CreateVPCAssociationAuthorization'</a>,
--   <a>createVPCAssociationAuthorization_hostedZoneId</a> - The ID of the
--   private hosted zone that you want to authorize associating a VPC with.
--   
--   <a>$sel:vpc:CreateVPCAssociationAuthorization'</a>,
--   <a>createVPCAssociationAuthorization_vpc</a> - A complex type that
--   contains the VPC ID and region for the VPC that you want to authorize
--   associating with your hosted zone.
newCreateVPCAssociationAuthorization :: ResourceId -> VPC -> CreateVPCAssociationAuthorization

-- | The ID of the private hosted zone that you want to authorize
--   associating a VPC with.
createVPCAssociationAuthorization_hostedZoneId :: Lens' CreateVPCAssociationAuthorization ResourceId

-- | A complex type that contains the VPC ID and region for the VPC that
--   you want to authorize associating with your hosted zone.
createVPCAssociationAuthorization_vpc :: Lens' CreateVPCAssociationAuthorization VPC

-- | A complex type that contains the response information from a
--   <tt>CreateVPCAssociationAuthorization</tt> request.
--   
--   <i>See:</i> <a>newCreateVPCAssociationAuthorizationResponse</a> smart
--   constructor.
data CreateVPCAssociationAuthorizationResponse
CreateVPCAssociationAuthorizationResponse' :: Int -> ResourceId -> VPC -> CreateVPCAssociationAuthorizationResponse

-- | The response's http status code.
[$sel:httpStatus:CreateVPCAssociationAuthorizationResponse'] :: CreateVPCAssociationAuthorizationResponse -> Int

-- | The ID of the hosted zone that you authorized associating a VPC with.
[$sel:hostedZoneId:CreateVPCAssociationAuthorizationResponse'] :: CreateVPCAssociationAuthorizationResponse -> ResourceId

-- | The VPC that you authorized associating with a hosted zone.
[$sel:vpc:CreateVPCAssociationAuthorizationResponse'] :: CreateVPCAssociationAuthorizationResponse -> VPC

-- | Create a value of <a>CreateVPCAssociationAuthorizationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVPCAssociationAuthorizationResponse'</a>,
--   <a>createVPCAssociationAuthorizationResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:hostedZoneId:CreateVPCAssociationAuthorization'</a>,
--   <a>createVPCAssociationAuthorizationResponse_hostedZoneId</a> - The ID
--   of the hosted zone that you authorized associating a VPC with.
--   
--   <a>$sel:vpc:CreateVPCAssociationAuthorization'</a>,
--   <a>createVPCAssociationAuthorizationResponse_vpc</a> - The VPC that
--   you authorized associating with a hosted zone.
newCreateVPCAssociationAuthorizationResponse :: Int -> ResourceId -> VPC -> CreateVPCAssociationAuthorizationResponse

-- | The response's http status code.
createVPCAssociationAuthorizationResponse_httpStatus :: Lens' CreateVPCAssociationAuthorizationResponse Int

-- | The ID of the hosted zone that you authorized associating a VPC with.
createVPCAssociationAuthorizationResponse_hostedZoneId :: Lens' CreateVPCAssociationAuthorizationResponse ResourceId

-- | The VPC that you authorized associating with a hosted zone.
createVPCAssociationAuthorizationResponse_vpc :: Lens' CreateVPCAssociationAuthorizationResponse VPC
instance GHC.Generics.Generic Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization
instance GHC.Show.Show Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization
instance GHC.Read.Read Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization
instance GHC.Classes.Eq Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization
instance GHC.Generics.Generic Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorizationResponse
instance GHC.Show.Show Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorizationResponse
instance GHC.Read.Read Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorizationResponse
instance GHC.Classes.Eq Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorizationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorizationResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.CreateVPCAssociationAuthorization.CreateVPCAssociationAuthorization


-- | Creates a new version of an existing traffic policy. When you create a
--   new version of a traffic policy, you specify the ID of the traffic
--   policy that you want to update and a JSON-formatted document that
--   describes the new version. You use traffic policies to create multiple
--   DNS resource record sets for one domain name (such as example.com) or
--   one subdomain name (such as www.example.com). You can create a maximum
--   of 1000 versions of a traffic policy. If you reach the limit and need
--   to create another version, you'll need to start a new traffic policy.
module Network.AWS.Route53.CreateTrafficPolicyVersion

-- | A complex type that contains information about the traffic policy that
--   you want to create a new version for.
--   
--   <i>See:</i> <a>newCreateTrafficPolicyVersion</a> smart constructor.
data CreateTrafficPolicyVersion
CreateTrafficPolicyVersion' :: Maybe Text -> Text -> Text -> CreateTrafficPolicyVersion

-- | The comment that you specified in the
--   <tt>CreateTrafficPolicyVersion</tt> request, if any.
[$sel:comment:CreateTrafficPolicyVersion'] :: CreateTrafficPolicyVersion -> Maybe Text

-- | The ID of the traffic policy for which you want to create a new
--   version.
[$sel:id:CreateTrafficPolicyVersion'] :: CreateTrafficPolicyVersion -> Text

-- | The definition of this version of the traffic policy, in JSON format.
--   You specified the JSON in the <tt>CreateTrafficPolicyVersion</tt>
--   request. For more information about the JSON format, see
--   <a>CreateTrafficPolicy</a>.
[$sel:document:CreateTrafficPolicyVersion'] :: CreateTrafficPolicyVersion -> Text

-- | Create a value of <a>CreateTrafficPolicyVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:CreateTrafficPolicyVersion'</a>,
--   <a>createTrafficPolicyVersion_comment</a> - The comment that you
--   specified in the <tt>CreateTrafficPolicyVersion</tt> request, if any.
--   
--   <a>$sel:id:CreateTrafficPolicyVersion'</a>,
--   <a>createTrafficPolicyVersion_id</a> - The ID of the traffic policy
--   for which you want to create a new version.
--   
--   <a>$sel:document:CreateTrafficPolicyVersion'</a>,
--   <a>createTrafficPolicyVersion_document</a> - The definition of this
--   version of the traffic policy, in JSON format. You specified the JSON
--   in the <tt>CreateTrafficPolicyVersion</tt> request. For more
--   information about the JSON format, see <a>CreateTrafficPolicy</a>.
newCreateTrafficPolicyVersion :: Text -> Text -> CreateTrafficPolicyVersion

-- | The comment that you specified in the
--   <tt>CreateTrafficPolicyVersion</tt> request, if any.
createTrafficPolicyVersion_comment :: Lens' CreateTrafficPolicyVersion (Maybe Text)

-- | The ID of the traffic policy for which you want to create a new
--   version.
createTrafficPolicyVersion_id :: Lens' CreateTrafficPolicyVersion Text

-- | The definition of this version of the traffic policy, in JSON format.
--   You specified the JSON in the <tt>CreateTrafficPolicyVersion</tt>
--   request. For more information about the JSON format, see
--   <a>CreateTrafficPolicy</a>.
createTrafficPolicyVersion_document :: Lens' CreateTrafficPolicyVersion Text

-- | A complex type that contains the response information for the
--   <tt>CreateTrafficPolicyVersion</tt> request.
--   
--   <i>See:</i> <a>newCreateTrafficPolicyVersionResponse</a> smart
--   constructor.
data CreateTrafficPolicyVersionResponse
CreateTrafficPolicyVersionResponse' :: Int -> TrafficPolicy -> Text -> CreateTrafficPolicyVersionResponse

-- | The response's http status code.
[$sel:httpStatus:CreateTrafficPolicyVersionResponse'] :: CreateTrafficPolicyVersionResponse -> Int

-- | A complex type that contains settings for the new version of the
--   traffic policy.
[$sel:trafficPolicy:CreateTrafficPolicyVersionResponse'] :: CreateTrafficPolicyVersionResponse -> TrafficPolicy

-- | A unique URL that represents a new traffic policy version.
[$sel:location:CreateTrafficPolicyVersionResponse'] :: CreateTrafficPolicyVersionResponse -> Text

-- | Create a value of <a>CreateTrafficPolicyVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTrafficPolicyVersionResponse'</a>,
--   <a>createTrafficPolicyVersionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:trafficPolicy:CreateTrafficPolicyVersionResponse'</a>,
--   <a>createTrafficPolicyVersionResponse_trafficPolicy</a> - A complex
--   type that contains settings for the new version of the traffic policy.
--   
--   <a>$sel:location:CreateTrafficPolicyVersionResponse'</a>,
--   <a>createTrafficPolicyVersionResponse_location</a> - A unique URL that
--   represents a new traffic policy version.
newCreateTrafficPolicyVersionResponse :: Int -> TrafficPolicy -> Text -> CreateTrafficPolicyVersionResponse

-- | The response's http status code.
createTrafficPolicyVersionResponse_httpStatus :: Lens' CreateTrafficPolicyVersionResponse Int

-- | A complex type that contains settings for the new version of the
--   traffic policy.
createTrafficPolicyVersionResponse_trafficPolicy :: Lens' CreateTrafficPolicyVersionResponse TrafficPolicy

-- | A unique URL that represents a new traffic policy version.
createTrafficPolicyVersionResponse_location :: Lens' CreateTrafficPolicyVersionResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion
instance GHC.Show.Show Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion
instance GHC.Read.Read Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion
instance GHC.Classes.Eq Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion
instance GHC.Generics.Generic Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersionResponse
instance GHC.Show.Show Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersionResponse
instance GHC.Read.Read Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersionResponse
instance GHC.Classes.Eq Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.CreateTrafficPolicyVersion.CreateTrafficPolicyVersion


-- | Creates resource record sets in a specified hosted zone based on the
--   settings in a specified traffic policy version. In addition,
--   <tt>CreateTrafficPolicyInstance</tt> associates the resource record
--   sets with a specified domain name (such as example.com) or subdomain
--   name (such as www.example.com). Amazon Route 53 responds to DNS
--   queries for the domain or subdomain name by using the resource record
--   sets that <tt>CreateTrafficPolicyInstance</tt> created.
module Network.AWS.Route53.CreateTrafficPolicyInstance

-- | A complex type that contains information about the resource record
--   sets that you want to create based on a specified traffic policy.
--   
--   <i>See:</i> <a>newCreateTrafficPolicyInstance</a> smart constructor.
data CreateTrafficPolicyInstance
CreateTrafficPolicyInstance' :: ResourceId -> Text -> Natural -> Text -> Natural -> CreateTrafficPolicyInstance

-- | The ID of the hosted zone that you want Amazon Route 53 to create
--   resource record sets in by using the configuration in a traffic
--   policy.
[$sel:hostedZoneId:CreateTrafficPolicyInstance'] :: CreateTrafficPolicyInstance -> ResourceId

-- | The domain name (such as example.com) or subdomain name (such as
--   www.example.com) for which Amazon Route 53 responds to DNS queries by
--   using the resource record sets that Route 53 creates for this traffic
--   policy instance.
[$sel:name:CreateTrafficPolicyInstance'] :: CreateTrafficPolicyInstance -> Text

-- | (Optional) The TTL that you want Amazon Route 53 to assign to all of
--   the resource record sets that it creates in the specified hosted zone.
[$sel:ttl:CreateTrafficPolicyInstance'] :: CreateTrafficPolicyInstance -> Natural

-- | The ID of the traffic policy that you want to use to create resource
--   record sets in the specified hosted zone.
[$sel:trafficPolicyId:CreateTrafficPolicyInstance'] :: CreateTrafficPolicyInstance -> Text

-- | The version of the traffic policy that you want to use to create
--   resource record sets in the specified hosted zone.
[$sel:trafficPolicyVersion:CreateTrafficPolicyInstance'] :: CreateTrafficPolicyInstance -> Natural

-- | Create a value of <a>CreateTrafficPolicyInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:CreateTrafficPolicyInstance'</a>,
--   <a>createTrafficPolicyInstance_hostedZoneId</a> - The ID of the hosted
--   zone that you want Amazon Route 53 to create resource record sets in
--   by using the configuration in a traffic policy.
--   
--   <a>$sel:name:CreateTrafficPolicyInstance'</a>,
--   <a>createTrafficPolicyInstance_name</a> - The domain name (such as
--   example.com) or subdomain name (such as www.example.com) for which
--   Amazon Route 53 responds to DNS queries by using the resource record
--   sets that Route 53 creates for this traffic policy instance.
--   
--   <a>$sel:ttl:CreateTrafficPolicyInstance'</a>,
--   <a>createTrafficPolicyInstance_ttl</a> - (Optional) The TTL that you
--   want Amazon Route 53 to assign to all of the resource record sets that
--   it creates in the specified hosted zone.
--   
--   <a>$sel:trafficPolicyId:CreateTrafficPolicyInstance'</a>,
--   <a>createTrafficPolicyInstance_trafficPolicyId</a> - The ID of the
--   traffic policy that you want to use to create resource record sets in
--   the specified hosted zone.
--   
--   <a>$sel:trafficPolicyVersion:CreateTrafficPolicyInstance'</a>,
--   <a>createTrafficPolicyInstance_trafficPolicyVersion</a> - The version
--   of the traffic policy that you want to use to create resource record
--   sets in the specified hosted zone.
newCreateTrafficPolicyInstance :: ResourceId -> Text -> Natural -> Text -> Natural -> CreateTrafficPolicyInstance

-- | The ID of the hosted zone that you want Amazon Route 53 to create
--   resource record sets in by using the configuration in a traffic
--   policy.
createTrafficPolicyInstance_hostedZoneId :: Lens' CreateTrafficPolicyInstance ResourceId

-- | The domain name (such as example.com) or subdomain name (such as
--   www.example.com) for which Amazon Route 53 responds to DNS queries by
--   using the resource record sets that Route 53 creates for this traffic
--   policy instance.
createTrafficPolicyInstance_name :: Lens' CreateTrafficPolicyInstance Text

-- | (Optional) The TTL that you want Amazon Route 53 to assign to all of
--   the resource record sets that it creates in the specified hosted zone.
createTrafficPolicyInstance_ttl :: Lens' CreateTrafficPolicyInstance Natural

-- | The ID of the traffic policy that you want to use to create resource
--   record sets in the specified hosted zone.
createTrafficPolicyInstance_trafficPolicyId :: Lens' CreateTrafficPolicyInstance Text

-- | The version of the traffic policy that you want to use to create
--   resource record sets in the specified hosted zone.
createTrafficPolicyInstance_trafficPolicyVersion :: Lens' CreateTrafficPolicyInstance Natural

-- | A complex type that contains the response information for the
--   <tt>CreateTrafficPolicyInstance</tt> request.
--   
--   <i>See:</i> <a>newCreateTrafficPolicyInstanceResponse</a> smart
--   constructor.
data CreateTrafficPolicyInstanceResponse
CreateTrafficPolicyInstanceResponse' :: Int -> TrafficPolicyInstance -> Text -> CreateTrafficPolicyInstanceResponse

-- | The response's http status code.
[$sel:httpStatus:CreateTrafficPolicyInstanceResponse'] :: CreateTrafficPolicyInstanceResponse -> Int

-- | A complex type that contains settings for the new traffic policy
--   instance.
[$sel:trafficPolicyInstance:CreateTrafficPolicyInstanceResponse'] :: CreateTrafficPolicyInstanceResponse -> TrafficPolicyInstance

-- | A unique URL that represents a new traffic policy instance.
[$sel:location:CreateTrafficPolicyInstanceResponse'] :: CreateTrafficPolicyInstanceResponse -> Text

-- | Create a value of <a>CreateTrafficPolicyInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTrafficPolicyInstanceResponse'</a>,
--   <a>createTrafficPolicyInstanceResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:trafficPolicyInstance:CreateTrafficPolicyInstanceResponse'</a>,
--   <a>createTrafficPolicyInstanceResponse_trafficPolicyInstance</a> - A
--   complex type that contains settings for the new traffic policy
--   instance.
--   
--   <a>$sel:location:CreateTrafficPolicyInstanceResponse'</a>,
--   <a>createTrafficPolicyInstanceResponse_location</a> - A unique URL
--   that represents a new traffic policy instance.
newCreateTrafficPolicyInstanceResponse :: Int -> TrafficPolicyInstance -> Text -> CreateTrafficPolicyInstanceResponse

-- | The response's http status code.
createTrafficPolicyInstanceResponse_httpStatus :: Lens' CreateTrafficPolicyInstanceResponse Int

-- | A complex type that contains settings for the new traffic policy
--   instance.
createTrafficPolicyInstanceResponse_trafficPolicyInstance :: Lens' CreateTrafficPolicyInstanceResponse TrafficPolicyInstance

-- | A unique URL that represents a new traffic policy instance.
createTrafficPolicyInstanceResponse_location :: Lens' CreateTrafficPolicyInstanceResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance
instance GHC.Show.Show Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance
instance GHC.Read.Read Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance
instance GHC.Classes.Eq Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance
instance GHC.Generics.Generic Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstanceResponse
instance GHC.Show.Show Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstanceResponse
instance GHC.Read.Read Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstanceResponse
instance GHC.Classes.Eq Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.CreateTrafficPolicyInstance.CreateTrafficPolicyInstance


-- | Creates a traffic policy, which you use to create multiple DNS
--   resource record sets for one domain name (such as example.com) or one
--   subdomain name (such as www.example.com).
module Network.AWS.Route53.CreateTrafficPolicy

-- | A complex type that contains information about the traffic policy that
--   you want to create.
--   
--   <i>See:</i> <a>newCreateTrafficPolicy</a> smart constructor.
data CreateTrafficPolicy
CreateTrafficPolicy' :: Maybe Text -> Text -> Text -> CreateTrafficPolicy

-- | (Optional) Any comments that you want to include about the traffic
--   policy.
[$sel:comment:CreateTrafficPolicy'] :: CreateTrafficPolicy -> Maybe Text

-- | The name of the traffic policy.
[$sel:name:CreateTrafficPolicy'] :: CreateTrafficPolicy -> Text

-- | The definition of this traffic policy in JSON format. For more
--   information, see <a>Traffic Policy Document Format</a>.
[$sel:document:CreateTrafficPolicy'] :: CreateTrafficPolicy -> Text

-- | Create a value of <a>CreateTrafficPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:CreateTrafficPolicy'</a>,
--   <a>createTrafficPolicy_comment</a> - (Optional) Any comments that you
--   want to include about the traffic policy.
--   
--   <a>$sel:name:CreateTrafficPolicy'</a>, <a>createTrafficPolicy_name</a>
--   - The name of the traffic policy.
--   
--   <a>$sel:document:CreateTrafficPolicy'</a>,
--   <a>createTrafficPolicy_document</a> - The definition of this traffic
--   policy in JSON format. For more information, see <a>Traffic Policy
--   Document Format</a>.
newCreateTrafficPolicy :: Text -> Text -> CreateTrafficPolicy

-- | (Optional) Any comments that you want to include about the traffic
--   policy.
createTrafficPolicy_comment :: Lens' CreateTrafficPolicy (Maybe Text)

-- | The name of the traffic policy.
createTrafficPolicy_name :: Lens' CreateTrafficPolicy Text

-- | The definition of this traffic policy in JSON format. For more
--   information, see <a>Traffic Policy Document Format</a>.
createTrafficPolicy_document :: Lens' CreateTrafficPolicy Text

-- | A complex type that contains the response information for the
--   <tt>CreateTrafficPolicy</tt> request.
--   
--   <i>See:</i> <a>newCreateTrafficPolicyResponse</a> smart constructor.
data CreateTrafficPolicyResponse
CreateTrafficPolicyResponse' :: Int -> TrafficPolicy -> Text -> CreateTrafficPolicyResponse

-- | The response's http status code.
[$sel:httpStatus:CreateTrafficPolicyResponse'] :: CreateTrafficPolicyResponse -> Int

-- | A complex type that contains settings for the new traffic policy.
[$sel:trafficPolicy:CreateTrafficPolicyResponse'] :: CreateTrafficPolicyResponse -> TrafficPolicy

-- | A unique URL that represents a new traffic policy.
[$sel:location:CreateTrafficPolicyResponse'] :: CreateTrafficPolicyResponse -> Text

-- | Create a value of <a>CreateTrafficPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTrafficPolicyResponse'</a>,
--   <a>createTrafficPolicyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:trafficPolicy:CreateTrafficPolicyResponse'</a>,
--   <a>createTrafficPolicyResponse_trafficPolicy</a> - A complex type that
--   contains settings for the new traffic policy.
--   
--   <a>$sel:location:CreateTrafficPolicyResponse'</a>,
--   <a>createTrafficPolicyResponse_location</a> - A unique URL that
--   represents a new traffic policy.
newCreateTrafficPolicyResponse :: Int -> TrafficPolicy -> Text -> CreateTrafficPolicyResponse

-- | The response's http status code.
createTrafficPolicyResponse_httpStatus :: Lens' CreateTrafficPolicyResponse Int

-- | A complex type that contains settings for the new traffic policy.
createTrafficPolicyResponse_trafficPolicy :: Lens' CreateTrafficPolicyResponse TrafficPolicy

-- | A unique URL that represents a new traffic policy.
createTrafficPolicyResponse_location :: Lens' CreateTrafficPolicyResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy
instance GHC.Show.Show Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy
instance GHC.Read.Read Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy
instance GHC.Classes.Eq Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy
instance GHC.Generics.Generic Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicyResponse
instance GHC.Show.Show Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicyResponse
instance GHC.Read.Read Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicyResponse
instance GHC.Classes.Eq Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.CreateTrafficPolicy.CreateTrafficPolicy


-- | Creates a delegation set (a group of four name servers) that can be
--   reused by multiple hosted zones that were created by the same Amazon
--   Web Services account.
--   
--   You can also create a reusable delegation set that uses the four name
--   servers that are associated with an existing hosted zone. Specify the
--   hosted zone ID in the <tt>CreateReusableDelegationSet</tt> request.
--   
--   You can't associate a reusable delegation set with a private hosted
--   zone.
--   
--   For information about using a reusable delegation set to configure
--   white label name servers, see <a>Configuring White Label Name
--   Servers</a>.
--   
--   The process for migrating existing hosted zones to use a reusable
--   delegation set is comparable to the process for configuring white
--   label name servers. You need to perform the following steps:
--   
--   <ol>
--   <li>Create a reusable delegation set.</li>
--   <li>Recreate hosted zones, and reduce the TTL to 60 seconds or
--   less.</li>
--   <li>Recreate resource record sets in the new hosted zones.</li>
--   <li>Change the registrar's name servers to use the name servers for
--   the new hosted zones.</li>
--   <li>Monitor traffic for the website or application.</li>
--   <li>Change TTLs back to their original values.</li>
--   </ol>
--   
--   If you want to migrate existing hosted zones to use a reusable
--   delegation set, the existing hosted zones can't use any of the name
--   servers that are assigned to the reusable delegation set. If one or
--   more hosted zones do use one or more name servers that are assigned to
--   the reusable delegation set, you can do one of the following:
--   
--   <ul>
--   <li>For small numbers of hosted zones—up to a few hundred—it's
--   relatively easy to create reusable delegation sets until you get one
--   that has four name servers that don't overlap with any of the name
--   servers in your hosted zones.</li>
--   <li>For larger numbers of hosted zones, the easiest solution is to use
--   more than one reusable delegation set.</li>
--   <li>For larger numbers of hosted zones, you can also migrate hosted
--   zones that have overlapping name servers to hosted zones that don't
--   have overlapping name servers, then migrate the hosted zones again to
--   use the reusable delegation set.</li>
--   </ul>
module Network.AWS.Route53.CreateReusableDelegationSet

-- | <i>See:</i> <a>newCreateReusableDelegationSet</a> smart constructor.
data CreateReusableDelegationSet
CreateReusableDelegationSet' :: Maybe ResourceId -> Text -> CreateReusableDelegationSet

-- | If you want to mark the delegation set for an existing hosted zone as
--   reusable, the ID for that hosted zone.
[$sel:hostedZoneId:CreateReusableDelegationSet'] :: CreateReusableDelegationSet -> Maybe ResourceId

-- | A unique string that identifies the request, and that allows you to
--   retry failed <tt>CreateReusableDelegationSet</tt> requests without the
--   risk of executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you submit a
--   <tt>CreateReusableDelegationSet</tt> request. <tt>CallerReference</tt>
--   can be any unique string, for example a date/time stamp.
[$sel:callerReference:CreateReusableDelegationSet'] :: CreateReusableDelegationSet -> Text

-- | Create a value of <a>CreateReusableDelegationSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:CreateReusableDelegationSet'</a>,
--   <a>createReusableDelegationSet_hostedZoneId</a> - If you want to mark
--   the delegation set for an existing hosted zone as reusable, the ID for
--   that hosted zone.
--   
--   <a>$sel:callerReference:CreateReusableDelegationSet'</a>,
--   <a>createReusableDelegationSet_callerReference</a> - A unique string
--   that identifies the request, and that allows you to retry failed
--   <tt>CreateReusableDelegationSet</tt> requests without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you submit a
--   <tt>CreateReusableDelegationSet</tt> request. <tt>CallerReference</tt>
--   can be any unique string, for example a date/time stamp.
newCreateReusableDelegationSet :: Text -> CreateReusableDelegationSet

-- | If you want to mark the delegation set for an existing hosted zone as
--   reusable, the ID for that hosted zone.
createReusableDelegationSet_hostedZoneId :: Lens' CreateReusableDelegationSet (Maybe ResourceId)

-- | A unique string that identifies the request, and that allows you to
--   retry failed <tt>CreateReusableDelegationSet</tt> requests without the
--   risk of executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you submit a
--   <tt>CreateReusableDelegationSet</tt> request. <tt>CallerReference</tt>
--   can be any unique string, for example a date/time stamp.
createReusableDelegationSet_callerReference :: Lens' CreateReusableDelegationSet Text

-- | <i>See:</i> <a>newCreateReusableDelegationSetResponse</a> smart
--   constructor.
data CreateReusableDelegationSetResponse
CreateReusableDelegationSetResponse' :: Int -> DelegationSet -> Text -> CreateReusableDelegationSetResponse

-- | The response's http status code.
[$sel:httpStatus:CreateReusableDelegationSetResponse'] :: CreateReusableDelegationSetResponse -> Int

-- | A complex type that contains name server information.
[$sel:delegationSet:CreateReusableDelegationSetResponse'] :: CreateReusableDelegationSetResponse -> DelegationSet

-- | The unique URL representing the new reusable delegation set.
[$sel:location:CreateReusableDelegationSetResponse'] :: CreateReusableDelegationSetResponse -> Text

-- | Create a value of <a>CreateReusableDelegationSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateReusableDelegationSetResponse'</a>,
--   <a>createReusableDelegationSetResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:delegationSet:CreateReusableDelegationSetResponse'</a>,
--   <a>createReusableDelegationSetResponse_delegationSet</a> - A complex
--   type that contains name server information.
--   
--   <a>$sel:location:CreateReusableDelegationSetResponse'</a>,
--   <a>createReusableDelegationSetResponse_location</a> - The unique URL
--   representing the new reusable delegation set.
newCreateReusableDelegationSetResponse :: Int -> DelegationSet -> Text -> CreateReusableDelegationSetResponse

-- | The response's http status code.
createReusableDelegationSetResponse_httpStatus :: Lens' CreateReusableDelegationSetResponse Int

-- | A complex type that contains name server information.
createReusableDelegationSetResponse_delegationSet :: Lens' CreateReusableDelegationSetResponse DelegationSet

-- | The unique URL representing the new reusable delegation set.
createReusableDelegationSetResponse_location :: Lens' CreateReusableDelegationSetResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet
instance GHC.Show.Show Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet
instance GHC.Read.Read Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet
instance GHC.Classes.Eq Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet
instance GHC.Generics.Generic Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSetResponse
instance GHC.Show.Show Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSetResponse
instance GHC.Read.Read Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSetResponse
instance GHC.Classes.Eq Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSetResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSetResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.CreateReusableDelegationSet.CreateReusableDelegationSet


-- | Creates a configuration for DNS query logging. After you create a
--   query logging configuration, Amazon Route 53 begins to publish log
--   data to an Amazon CloudWatch Logs log group.
--   
--   DNS query logs contain information about the queries that Route 53
--   receives for a specified public hosted zone, such as the following:
--   
--   <ul>
--   <li>Route 53 edge location that responded to the DNS query</li>
--   <li>Domain or subdomain that was requested</li>
--   <li>DNS record type, such as A or AAAA</li>
--   <li>DNS response code, such as <tt>NoError</tt> or
--   <tt>ServFail</tt></li>
--   </ul>
--   
--   <ul>
--   <li><i>Log Group and Resource Policy</i> Before you create a query
--   logging configuration, perform the following operations.If you create
--   a query logging configuration using the Route 53 console, Route 53
--   performs these operations automatically.<ol><li>Create a CloudWatch
--   Logs log group, and make note of the ARN, which you specify when you
--   create a query logging configuration. Note the following:<ul><li>You
--   must create the log group in the us-east-1 region.</li><li>You must
--   use the same Amazon Web Services account to create the log group and
--   the hosted zone that you want to configure query logging
--   for.</li><li>When you create log groups for query logging, we
--   recommend that you use a consistent prefix, for
--   example:<pre>/aws/route53/hosted zone name</pre>In the next step,
--   you'll create a resource policy, which controls access to one or more
--   log groups and the associated Amazon Web Services resources, such as
--   Route 53 hosted zones. There's a limit on the number of resource
--   policies that you can create, so we recommend that you use a
--   consistent prefix so you can use the same resource policy for all the
--   log groups that you create for query logging.</li></ul></li><li>Create
--   a CloudWatch Logs resource policy, and give it the permissions that
--   Route 53 needs to create log streams and to send query logs to log
--   streams. For the value of <tt>Resource</tt>, specify the ARN for the
--   log group that you created in the previous step. To use the same
--   resource policy for all the CloudWatch Logs log groups that you
--   created for query logging configurations, replace the hosted zone name
--   with <tt>*</tt>, for
--   example:<pre>arn:aws:logs:us-east-1:123412341234:log-group:/aws/route53/*</pre>You
--   can't use the CloudWatch console to create or edit a resource policy.
--   You must use the CloudWatch API, one of the Amazon Web Services SDKs,
--   or the CLI.</li></ol></li>
--   <li><i>Log Streams and Edge Locations</i> When Route 53 finishes
--   creating the configuration for DNS query logging, it does the
--   following:<ul><li>Creates a log stream for an edge location the first
--   time that the edge location responds to DNS queries for the specified
--   hosted zone. That log stream is used to log all queries that Route 53
--   responds to for that edge location.</li><li>Begins to send query logs
--   to the applicable log stream.</li></ul>The name of each log stream is
--   in the following format:<pre> hosted zone ID/edge location
--   code</pre>The edge location code is a three-letter code and an
--   arbitrarily assigned number, for example, DFW3. The three-letter code
--   typically corresponds with the International Air Transport Association
--   airport code for an airport near the edge location. (These
--   abbreviations might change in the future.) For a list of edge
--   locations, see "The Route 53 Global Network" on the <a>Route 53
--   Product Details</a> page.</li>
--   <li><i>Queries That Are Logged</i> Query logs contain only the queries
--   that DNS resolvers forward to Route 53. If a DNS resolver has already
--   cached the response to a query (such as the IP address for a load
--   balancer for example.com), the resolver will continue to return the
--   cached response. It doesn't forward another query to Route 53 until
--   the TTL for the corresponding resource record set expires. Depending
--   on how many DNS queries are submitted for a resource record set, and
--   depending on the TTL for that resource record set, query logs might
--   contain information about only one query out of every several thousand
--   queries that are submitted to DNS. For more information about how DNS
--   works, see <a>Routing Internet Traffic to Your Website or Web
--   Application</a> in the <i>Amazon Route 53 Developer Guide</i>.</li>
--   <li><i>Log File Format</i> For a list of the values in each query log
--   and the format of each value, see <a>Logging DNS Queries</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.</li>
--   <li><i>Pricing</i> For information about charges for query logs, see
--   <a>Amazon CloudWatch Pricing</a>.</li>
--   <li><i>How to Stop Logging</i> If you want Route 53 to stop sending
--   query logs to CloudWatch Logs, delete the query logging configuration.
--   For more information, see <a>DeleteQueryLoggingConfig</a>.</li>
--   </ul>
module Network.AWS.Route53.CreateQueryLoggingConfig

-- | <i>See:</i> <a>newCreateQueryLoggingConfig</a> smart constructor.
data CreateQueryLoggingConfig
CreateQueryLoggingConfig' :: ResourceId -> Text -> CreateQueryLoggingConfig

-- | The ID of the hosted zone that you want to log queries for. You can
--   log queries only for public hosted zones.
[$sel:hostedZoneId:CreateQueryLoggingConfig'] :: CreateQueryLoggingConfig -> ResourceId

-- | The Amazon Resource Name (ARN) for the log group that you want to
--   Amazon Route 53 to send query logs to. This is the format of the ARN:
--   
--   
--   arn:aws:logs:<i>region</i>:<i>account-id</i>:log-group:<i>log_group_name</i>
--   
--   To get the ARN for a log group, you can use the CloudWatch console,
--   the <a>DescribeLogGroups</a> API action, the
--   <a>describe-log-groups</a> command, or the applicable command in one
--   of the Amazon Web Services SDKs.
[$sel:cloudWatchLogsLogGroupArn:CreateQueryLoggingConfig'] :: CreateQueryLoggingConfig -> Text

-- | Create a value of <a>CreateQueryLoggingConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:CreateQueryLoggingConfig'</a>,
--   <a>createQueryLoggingConfig_hostedZoneId</a> - The ID of the hosted
--   zone that you want to log queries for. You can log queries only for
--   public hosted zones.
--   
--   <a>$sel:cloudWatchLogsLogGroupArn:CreateQueryLoggingConfig'</a>,
--   <a>createQueryLoggingConfig_cloudWatchLogsLogGroupArn</a> - The Amazon
--   Resource Name (ARN) for the log group that you want to Amazon Route 53
--   to send query logs to. This is the format of the ARN:
--   
--   
--   arn:aws:logs:<i>region</i>:<i>account-id</i>:log-group:<i>log_group_name</i>
--   
--   To get the ARN for a log group, you can use the CloudWatch console,
--   the <a>DescribeLogGroups</a> API action, the
--   <a>describe-log-groups</a> command, or the applicable command in one
--   of the Amazon Web Services SDKs.
newCreateQueryLoggingConfig :: ResourceId -> Text -> CreateQueryLoggingConfig

-- | The ID of the hosted zone that you want to log queries for. You can
--   log queries only for public hosted zones.
createQueryLoggingConfig_hostedZoneId :: Lens' CreateQueryLoggingConfig ResourceId

-- | The Amazon Resource Name (ARN) for the log group that you want to
--   Amazon Route 53 to send query logs to. This is the format of the ARN:
--   
--   
--   arn:aws:logs:<i>region</i>:<i>account-id</i>:log-group:<i>log_group_name</i>
--   
--   To get the ARN for a log group, you can use the CloudWatch console,
--   the <a>DescribeLogGroups</a> API action, the
--   <a>describe-log-groups</a> command, or the applicable command in one
--   of the Amazon Web Services SDKs.
createQueryLoggingConfig_cloudWatchLogsLogGroupArn :: Lens' CreateQueryLoggingConfig Text

-- | <i>See:</i> <a>newCreateQueryLoggingConfigResponse</a> smart
--   constructor.
data CreateQueryLoggingConfigResponse
CreateQueryLoggingConfigResponse' :: Int -> QueryLoggingConfig -> Text -> CreateQueryLoggingConfigResponse

-- | The response's http status code.
[$sel:httpStatus:CreateQueryLoggingConfigResponse'] :: CreateQueryLoggingConfigResponse -> Int

-- | A complex type that contains the ID for a query logging configuration,
--   the ID of the hosted zone that you want to log queries for, and the
--   ARN for the log group that you want Amazon Route 53 to send query logs
--   to.
[$sel:queryLoggingConfig:CreateQueryLoggingConfigResponse'] :: CreateQueryLoggingConfigResponse -> QueryLoggingConfig

-- | The unique URL representing the new query logging configuration.
[$sel:location:CreateQueryLoggingConfigResponse'] :: CreateQueryLoggingConfigResponse -> Text

-- | Create a value of <a>CreateQueryLoggingConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateQueryLoggingConfigResponse'</a>,
--   <a>createQueryLoggingConfigResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:queryLoggingConfig:CreateQueryLoggingConfigResponse'</a>,
--   <a>createQueryLoggingConfigResponse_queryLoggingConfig</a> - A complex
--   type that contains the ID for a query logging configuration, the ID of
--   the hosted zone that you want to log queries for, and the ARN for the
--   log group that you want Amazon Route 53 to send query logs to.
--   
--   <a>$sel:location:CreateQueryLoggingConfigResponse'</a>,
--   <a>createQueryLoggingConfigResponse_location</a> - The unique URL
--   representing the new query logging configuration.
newCreateQueryLoggingConfigResponse :: Int -> QueryLoggingConfig -> Text -> CreateQueryLoggingConfigResponse

-- | The response's http status code.
createQueryLoggingConfigResponse_httpStatus :: Lens' CreateQueryLoggingConfigResponse Int

-- | A complex type that contains the ID for a query logging configuration,
--   the ID of the hosted zone that you want to log queries for, and the
--   ARN for the log group that you want Amazon Route 53 to send query logs
--   to.
createQueryLoggingConfigResponse_queryLoggingConfig :: Lens' CreateQueryLoggingConfigResponse QueryLoggingConfig

-- | The unique URL representing the new query logging configuration.
createQueryLoggingConfigResponse_location :: Lens' CreateQueryLoggingConfigResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig
instance GHC.Show.Show Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig
instance GHC.Read.Read Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig
instance GHC.Classes.Eq Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig
instance GHC.Generics.Generic Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfigResponse
instance GHC.Show.Show Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfigResponse
instance GHC.Read.Read Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfigResponse
instance GHC.Classes.Eq Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.CreateQueryLoggingConfig.CreateQueryLoggingConfig


-- | Creates a new key-signing key (KSK) associated with a hosted zone. You
--   can only have two KSKs per hosted zone.
module Network.AWS.Route53.CreateKeySigningKey

-- | <i>See:</i> <a>newCreateKeySigningKey</a> smart constructor.
data CreateKeySigningKey
CreateKeySigningKey' :: Text -> ResourceId -> Text -> Text -> Text -> CreateKeySigningKey

-- | A unique string that identifies the request.
[$sel:callerReference:CreateKeySigningKey'] :: CreateKeySigningKey -> Text

-- | The unique string (ID) used to identify a hosted zone.
[$sel:hostedZoneId:CreateKeySigningKey'] :: CreateKeySigningKey -> ResourceId

-- | The Amazon resource name (ARN) for a customer managed customer master
--   key (CMK) in Key Management Service (KMS). The
--   <tt>KeyManagementServiceArn</tt> must be unique for each key-signing
--   key (KSK) in a single hosted zone. To see an example of
--   <tt>KeyManagementServiceArn</tt> that grants the correct permissions
--   for DNSSEC, scroll down to <b>Example</b>.
--   
--   You must configure the customer managed CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with a customer managed CMK in KMS,
--   see <a>Key Management Service concepts</a>.
[$sel:keyManagementServiceArn:CreateKeySigningKey'] :: CreateKeySigningKey -> Text

-- | A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
[$sel:name:CreateKeySigningKey'] :: CreateKeySigningKey -> Text

-- | A string specifying the initial status of the key-signing key (KSK).
--   You can set the value to <tt>ACTIVE</tt> or <tt>INACTIVE</tt>.
[$sel:status:CreateKeySigningKey'] :: CreateKeySigningKey -> Text

-- | Create a value of <a>CreateKeySigningKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:callerReference:CreateKeySigningKey'</a>,
--   <a>createKeySigningKey_callerReference</a> - A unique string that
--   identifies the request.
--   
--   <a>$sel:hostedZoneId:CreateKeySigningKey'</a>,
--   <a>createKeySigningKey_hostedZoneId</a> - The unique string (ID) used
--   to identify a hosted zone.
--   
--   <a>$sel:keyManagementServiceArn:CreateKeySigningKey'</a>,
--   <a>createKeySigningKey_keyManagementServiceArn</a> - The Amazon
--   resource name (ARN) for a customer managed customer master key (CMK)
--   in Key Management Service (KMS). The <tt>KeyManagementServiceArn</tt>
--   must be unique for each key-signing key (KSK) in a single hosted zone.
--   To see an example of <tt>KeyManagementServiceArn</tt> that grants the
--   correct permissions for DNSSEC, scroll down to <b>Example</b>.
--   
--   You must configure the customer managed CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with a customer managed CMK in KMS,
--   see <a>Key Management Service concepts</a>.
--   
--   <a>$sel:name:CreateKeySigningKey'</a>, <a>createKeySigningKey_name</a>
--   - A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
--   
--   <a>$sel:status:CreateKeySigningKey'</a>,
--   <a>createKeySigningKey_status</a> - A string specifying the initial
--   status of the key-signing key (KSK). You can set the value to
--   <tt>ACTIVE</tt> or <tt>INACTIVE</tt>.
newCreateKeySigningKey :: Text -> ResourceId -> Text -> Text -> Text -> CreateKeySigningKey

-- | A unique string that identifies the request.
createKeySigningKey_callerReference :: Lens' CreateKeySigningKey Text

-- | The unique string (ID) used to identify a hosted zone.
createKeySigningKey_hostedZoneId :: Lens' CreateKeySigningKey ResourceId

-- | The Amazon resource name (ARN) for a customer managed customer master
--   key (CMK) in Key Management Service (KMS). The
--   <tt>KeyManagementServiceArn</tt> must be unique for each key-signing
--   key (KSK) in a single hosted zone. To see an example of
--   <tt>KeyManagementServiceArn</tt> that grants the correct permissions
--   for DNSSEC, scroll down to <b>Example</b>.
--   
--   You must configure the customer managed CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with a customer managed CMK in KMS,
--   see <a>Key Management Service concepts</a>.
createKeySigningKey_keyManagementServiceArn :: Lens' CreateKeySigningKey Text

-- | A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
createKeySigningKey_name :: Lens' CreateKeySigningKey Text

-- | A string specifying the initial status of the key-signing key (KSK).
--   You can set the value to <tt>ACTIVE</tt> or <tt>INACTIVE</tt>.
createKeySigningKey_status :: Lens' CreateKeySigningKey Text

-- | <i>See:</i> <a>newCreateKeySigningKeyResponse</a> smart constructor.
data CreateKeySigningKeyResponse
CreateKeySigningKeyResponse' :: Int -> ChangeInfo -> KeySigningKey -> Text -> CreateKeySigningKeyResponse

-- | The response's http status code.
[$sel:httpStatus:CreateKeySigningKeyResponse'] :: CreateKeySigningKeyResponse -> Int
[$sel:changeInfo:CreateKeySigningKeyResponse'] :: CreateKeySigningKeyResponse -> ChangeInfo

-- | The key-signing key (KSK) that the request creates.
[$sel:keySigningKey:CreateKeySigningKeyResponse'] :: CreateKeySigningKeyResponse -> KeySigningKey

-- | The unique URL representing the new key-signing key (KSK).
[$sel:location:CreateKeySigningKeyResponse'] :: CreateKeySigningKeyResponse -> Text

-- | Create a value of <a>CreateKeySigningKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateKeySigningKeyResponse'</a>,
--   <a>createKeySigningKeyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:changeInfo:CreateKeySigningKeyResponse'</a>,
--   <a>createKeySigningKeyResponse_changeInfo</a> - Undocumented member.
--   
--   <a>$sel:keySigningKey:CreateKeySigningKeyResponse'</a>,
--   <a>createKeySigningKeyResponse_keySigningKey</a> - The key-signing key
--   (KSK) that the request creates.
--   
--   <a>$sel:location:CreateKeySigningKeyResponse'</a>,
--   <a>createKeySigningKeyResponse_location</a> - The unique URL
--   representing the new key-signing key (KSK).
newCreateKeySigningKeyResponse :: Int -> ChangeInfo -> KeySigningKey -> Text -> CreateKeySigningKeyResponse

-- | The response's http status code.
createKeySigningKeyResponse_httpStatus :: Lens' CreateKeySigningKeyResponse Int

-- | Undocumented member.
createKeySigningKeyResponse_changeInfo :: Lens' CreateKeySigningKeyResponse ChangeInfo

-- | The key-signing key (KSK) that the request creates.
createKeySigningKeyResponse_keySigningKey :: Lens' CreateKeySigningKeyResponse KeySigningKey

-- | The unique URL representing the new key-signing key (KSK).
createKeySigningKeyResponse_location :: Lens' CreateKeySigningKeyResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey
instance GHC.Show.Show Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey
instance GHC.Read.Read Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey
instance GHC.Classes.Eq Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey
instance GHC.Generics.Generic Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKeyResponse
instance GHC.Show.Show Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKeyResponse
instance GHC.Read.Read Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKeyResponse
instance GHC.Classes.Eq Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.CreateKeySigningKey.CreateKeySigningKey


-- | Creates a new public or private hosted zone. You create records in a
--   public hosted zone to define how you want to route traffic on the
--   internet for a domain, such as example.com, and its subdomains
--   (apex.example.com, acme.example.com). You create records in a private
--   hosted zone to define how you want to route traffic for a domain and
--   its subdomains within one or more Amazon Virtual Private Clouds
--   (Amazon VPCs).
--   
--   You can't convert a public hosted zone to a private hosted zone or
--   vice versa. Instead, you must create a new hosted zone with the same
--   name and create new resource record sets.
--   
--   For more information about charges for hosted zones, see <a>Amazon
--   Route 53 Pricing</a>.
--   
--   Note the following:
--   
--   <ul>
--   <li>You can't create a hosted zone for a top-level domain (TLD) such
--   as .com.</li>
--   <li>For public hosted zones, Route 53 automatically creates a default
--   SOA record and four NS records for the zone. For more information
--   about SOA and NS records, see <a>NS and SOA Records that Route 53
--   Creates for a Hosted Zone</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.If you want to use the same name servers for multiple public
--   hosted zones, you can optionally associate a reusable delegation set
--   with the hosted zone. See the <tt>DelegationSetId</tt> element.</li>
--   <li>If your domain is registered with a registrar other than Route 53,
--   you must update the name servers with your registrar to make Route 53
--   the DNS service for the domain. For more information, see <a>Migrating
--   DNS Service for an Existing Domain to Amazon Route 53</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   When you submit a <tt>CreateHostedZone</tt> request, the initial
--   status of the hosted zone is <tt>PENDING</tt>. For public hosted
--   zones, this means that the NS and SOA records are not yet available on
--   all Route 53 DNS servers. When the NS and SOA records are available,
--   the status of the zone changes to <tt>INSYNC</tt>.
--   
--   The <tt>CreateHostedZone</tt> request requires the caller to have an
--   <tt>ec2:DescribeVpcs</tt> permission.
module Network.AWS.Route53.CreateHostedZone

-- | A complex type that contains information about the request to create a
--   public or private hosted zone.
--   
--   <i>See:</i> <a>newCreateHostedZone</a> smart constructor.
data CreateHostedZone
CreateHostedZone' :: Maybe ResourceId -> Maybe VPC -> Maybe HostedZoneConfig -> Text -> Text -> CreateHostedZone

-- | If you want to associate a reusable delegation set with this hosted
--   zone, the ID that Amazon Route 53 assigned to the reusable delegation
--   set when you created it. For more information about reusable
--   delegation sets, see <a>CreateReusableDelegationSet</a>.
[$sel:delegationSetId:CreateHostedZone'] :: CreateHostedZone -> Maybe ResourceId

-- | (Private hosted zones only) A complex type that contains information
--   about the Amazon VPC that you're associating with this hosted zone.
--   
--   You can specify only one Amazon VPC when you create a private hosted
--   zone. To associate additional Amazon VPCs with the hosted zone, use
--   <a>AssociateVPCWithHostedZone</a> after you create a hosted zone.
[$sel:vpc:CreateHostedZone'] :: CreateHostedZone -> Maybe VPC

-- | (Optional) A complex type that contains the following optional values:
--   
--   <ul>
--   <li>For public and private hosted zones, an optional comment</li>
--   <li>For private hosted zones, an optional <tt>PrivateZone</tt>
--   element</li>
--   </ul>
--   
--   If you don't specify a comment or the <tt>PrivateZone</tt> element,
--   omit <tt>HostedZoneConfig</tt> and the other elements.
[$sel:hostedZoneConfig:CreateHostedZone'] :: CreateHostedZone -> Maybe HostedZoneConfig

-- | The name of the domain. Specify a fully qualified domain name, for
--   example, <i>www.example.com</i>. The trailing dot is optional; Amazon
--   Route 53 assumes that the domain name is fully qualified. This means
--   that Route 53 treats <i>www.example.com</i> (without a trailing dot)
--   and <i>www.example.com.</i> (with a trailing dot) as identical.
--   
--   If you're creating a public hosted zone, this is the name you have
--   registered with your DNS registrar. If your domain name is registered
--   with a registrar other than Route 53, change the name servers for your
--   domain to the set of <tt>NameServers</tt> that
--   <tt>CreateHostedZone</tt> returns in <tt>DelegationSet</tt>.
[$sel:name:CreateHostedZone'] :: CreateHostedZone -> Text

-- | A unique string that identifies the request and that allows failed
--   <tt>CreateHostedZone</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you submit a
--   <tt>CreateHostedZone</tt> request. <tt>CallerReference</tt> can be any
--   unique string, for example, a date/time stamp.
[$sel:callerReference:CreateHostedZone'] :: CreateHostedZone -> Text

-- | Create a value of <a>CreateHostedZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:delegationSetId:CreateHostedZone'</a>,
--   <a>createHostedZone_delegationSetId</a> - If you want to associate a
--   reusable delegation set with this hosted zone, the ID that Amazon
--   Route 53 assigned to the reusable delegation set when you created it.
--   For more information about reusable delegation sets, see
--   <a>CreateReusableDelegationSet</a>.
--   
--   <a>$sel:vpc:CreateHostedZone'</a>, <a>createHostedZone_vpc</a> -
--   (Private hosted zones only) A complex type that contains information
--   about the Amazon VPC that you're associating with this hosted zone.
--   
--   You can specify only one Amazon VPC when you create a private hosted
--   zone. To associate additional Amazon VPCs with the hosted zone, use
--   <a>AssociateVPCWithHostedZone</a> after you create a hosted zone.
--   
--   <a>$sel:hostedZoneConfig:CreateHostedZone'</a>,
--   <a>createHostedZone_hostedZoneConfig</a> - (Optional) A complex type
--   that contains the following optional values:
--   
--   <ul>
--   <li>For public and private hosted zones, an optional comment</li>
--   <li>For private hosted zones, an optional <tt>PrivateZone</tt>
--   element</li>
--   </ul>
--   
--   If you don't specify a comment or the <tt>PrivateZone</tt> element,
--   omit <tt>HostedZoneConfig</tt> and the other elements.
--   
--   <a>$sel:name:CreateHostedZone'</a>, <a>createHostedZone_name</a> - The
--   name of the domain. Specify a fully qualified domain name, for
--   example, <i>www.example.com</i>. The trailing dot is optional; Amazon
--   Route 53 assumes that the domain name is fully qualified. This means
--   that Route 53 treats <i>www.example.com</i> (without a trailing dot)
--   and <i>www.example.com.</i> (with a trailing dot) as identical.
--   
--   If you're creating a public hosted zone, this is the name you have
--   registered with your DNS registrar. If your domain name is registered
--   with a registrar other than Route 53, change the name servers for your
--   domain to the set of <tt>NameServers</tt> that
--   <tt>CreateHostedZone</tt> returns in <tt>DelegationSet</tt>.
--   
--   <a>$sel:callerReference:CreateHostedZone'</a>,
--   <a>createHostedZone_callerReference</a> - A unique string that
--   identifies the request and that allows failed
--   <tt>CreateHostedZone</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you submit a
--   <tt>CreateHostedZone</tt> request. <tt>CallerReference</tt> can be any
--   unique string, for example, a date/time stamp.
newCreateHostedZone :: Text -> Text -> CreateHostedZone

-- | If you want to associate a reusable delegation set with this hosted
--   zone, the ID that Amazon Route 53 assigned to the reusable delegation
--   set when you created it. For more information about reusable
--   delegation sets, see <a>CreateReusableDelegationSet</a>.
createHostedZone_delegationSetId :: Lens' CreateHostedZone (Maybe ResourceId)

-- | (Private hosted zones only) A complex type that contains information
--   about the Amazon VPC that you're associating with this hosted zone.
--   
--   You can specify only one Amazon VPC when you create a private hosted
--   zone. To associate additional Amazon VPCs with the hosted zone, use
--   <a>AssociateVPCWithHostedZone</a> after you create a hosted zone.
createHostedZone_vpc :: Lens' CreateHostedZone (Maybe VPC)

-- | (Optional) A complex type that contains the following optional values:
--   
--   <ul>
--   <li>For public and private hosted zones, an optional comment</li>
--   <li>For private hosted zones, an optional <tt>PrivateZone</tt>
--   element</li>
--   </ul>
--   
--   If you don't specify a comment or the <tt>PrivateZone</tt> element,
--   omit <tt>HostedZoneConfig</tt> and the other elements.
createHostedZone_hostedZoneConfig :: Lens' CreateHostedZone (Maybe HostedZoneConfig)

-- | The name of the domain. Specify a fully qualified domain name, for
--   example, <i>www.example.com</i>. The trailing dot is optional; Amazon
--   Route 53 assumes that the domain name is fully qualified. This means
--   that Route 53 treats <i>www.example.com</i> (without a trailing dot)
--   and <i>www.example.com.</i> (with a trailing dot) as identical.
--   
--   If you're creating a public hosted zone, this is the name you have
--   registered with your DNS registrar. If your domain name is registered
--   with a registrar other than Route 53, change the name servers for your
--   domain to the set of <tt>NameServers</tt> that
--   <tt>CreateHostedZone</tt> returns in <tt>DelegationSet</tt>.
createHostedZone_name :: Lens' CreateHostedZone Text

-- | A unique string that identifies the request and that allows failed
--   <tt>CreateHostedZone</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you submit a
--   <tt>CreateHostedZone</tt> request. <tt>CallerReference</tt> can be any
--   unique string, for example, a date/time stamp.
createHostedZone_callerReference :: Lens' CreateHostedZone Text

-- | A complex type containing the response information for the hosted
--   zone.
--   
--   <i>See:</i> <a>newCreateHostedZoneResponse</a> smart constructor.
data CreateHostedZoneResponse
CreateHostedZoneResponse' :: Maybe VPC -> Int -> HostedZone -> ChangeInfo -> DelegationSet -> Text -> CreateHostedZoneResponse

-- | A complex type that contains information about an Amazon VPC that you
--   associated with this hosted zone.
[$sel:vpc:CreateHostedZoneResponse'] :: CreateHostedZoneResponse -> Maybe VPC

-- | The response's http status code.
[$sel:httpStatus:CreateHostedZoneResponse'] :: CreateHostedZoneResponse -> Int

-- | A complex type that contains general information about the hosted
--   zone.
[$sel:hostedZone:CreateHostedZoneResponse'] :: CreateHostedZoneResponse -> HostedZone

-- | A complex type that contains information about the
--   <tt>CreateHostedZone</tt> request.
[$sel:changeInfo:CreateHostedZoneResponse'] :: CreateHostedZoneResponse -> ChangeInfo

-- | A complex type that describes the name servers for this hosted zone.
[$sel:delegationSet:CreateHostedZoneResponse'] :: CreateHostedZoneResponse -> DelegationSet

-- | The unique URL representing the new hosted zone.
[$sel:location:CreateHostedZoneResponse'] :: CreateHostedZoneResponse -> Text

-- | Create a value of <a>CreateHostedZoneResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpc:CreateHostedZone'</a>, <a>createHostedZoneResponse_vpc</a>
--   - A complex type that contains information about an Amazon VPC that
--   you associated with this hosted zone.
--   
--   <a>$sel:httpStatus:CreateHostedZoneResponse'</a>,
--   <a>createHostedZoneResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:hostedZone:CreateHostedZoneResponse'</a>,
--   <a>createHostedZoneResponse_hostedZone</a> - A complex type that
--   contains general information about the hosted zone.
--   
--   <a>$sel:changeInfo:CreateHostedZoneResponse'</a>,
--   <a>createHostedZoneResponse_changeInfo</a> - A complex type that
--   contains information about the <tt>CreateHostedZone</tt> request.
--   
--   <a>$sel:delegationSet:CreateHostedZoneResponse'</a>,
--   <a>createHostedZoneResponse_delegationSet</a> - A complex type that
--   describes the name servers for this hosted zone.
--   
--   <a>$sel:location:CreateHostedZoneResponse'</a>,
--   <a>createHostedZoneResponse_location</a> - The unique URL representing
--   the new hosted zone.
newCreateHostedZoneResponse :: Int -> HostedZone -> ChangeInfo -> DelegationSet -> Text -> CreateHostedZoneResponse

-- | A complex type that contains information about an Amazon VPC that you
--   associated with this hosted zone.
createHostedZoneResponse_vpc :: Lens' CreateHostedZoneResponse (Maybe VPC)

-- | The response's http status code.
createHostedZoneResponse_httpStatus :: Lens' CreateHostedZoneResponse Int

-- | A complex type that contains general information about the hosted
--   zone.
createHostedZoneResponse_hostedZone :: Lens' CreateHostedZoneResponse HostedZone

-- | A complex type that contains information about the
--   <tt>CreateHostedZone</tt> request.
createHostedZoneResponse_changeInfo :: Lens' CreateHostedZoneResponse ChangeInfo

-- | A complex type that describes the name servers for this hosted zone.
createHostedZoneResponse_delegationSet :: Lens' CreateHostedZoneResponse DelegationSet

-- | The unique URL representing the new hosted zone.
createHostedZoneResponse_location :: Lens' CreateHostedZoneResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.CreateHostedZone.CreateHostedZone
instance GHC.Show.Show Network.AWS.Route53.CreateHostedZone.CreateHostedZone
instance GHC.Read.Read Network.AWS.Route53.CreateHostedZone.CreateHostedZone
instance GHC.Classes.Eq Network.AWS.Route53.CreateHostedZone.CreateHostedZone
instance GHC.Generics.Generic Network.AWS.Route53.CreateHostedZone.CreateHostedZoneResponse
instance GHC.Show.Show Network.AWS.Route53.CreateHostedZone.CreateHostedZoneResponse
instance GHC.Read.Read Network.AWS.Route53.CreateHostedZone.CreateHostedZoneResponse
instance GHC.Classes.Eq Network.AWS.Route53.CreateHostedZone.CreateHostedZoneResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.CreateHostedZone.CreateHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateHostedZone.CreateHostedZoneResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.CreateHostedZone.CreateHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateHostedZone.CreateHostedZone
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.CreateHostedZone.CreateHostedZone
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.CreateHostedZone.CreateHostedZone
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.CreateHostedZone.CreateHostedZone
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.CreateHostedZone.CreateHostedZone
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.CreateHostedZone.CreateHostedZone


-- | Creates a new health check.
--   
--   For information about adding health checks to resource record sets,
--   see <a>HealthCheckId</a> in <a>ChangeResourceRecordSets</a>.
--   
--   <b>ELB Load Balancers</b>
--   
--   If you're registering EC2 instances with an Elastic Load Balancing
--   (ELB) load balancer, do not create Amazon Route 53 health checks for
--   the EC2 instances. When you register an EC2 instance with a load
--   balancer, you configure settings for an ELB health check, which
--   performs a similar function to a Route 53 health check.
--   
--   <b>Private Hosted Zones</b>
--   
--   You can associate health checks with failover resource record sets in
--   a private hosted zone. Note the following:
--   
--   <ul>
--   <li>Route 53 health checkers are outside the VPC. To check the health
--   of an endpoint within a VPC by IP address, you must assign a public IP
--   address to the instance in the VPC.</li>
--   <li>You can configure a health checker to check the health of an
--   external resource that the instance relies on, such as a database
--   server.</li>
--   <li>You can create a CloudWatch metric, associate an alarm with the
--   metric, and then create a health check that is based on the state of
--   the alarm. For example, you might create a CloudWatch metric that
--   checks the status of the Amazon EC2 <tt>StatusCheckFailed</tt> metric,
--   add an alarm to the metric, and then create a health check that is
--   based on the state of the alarm. For information about creating
--   CloudWatch metrics and alarms by using the CloudWatch console, see the
--   <a>Amazon CloudWatch User Guide</a>.</li>
--   </ul>
module Network.AWS.Route53.CreateHealthCheck

-- | A complex type that contains the health check request information.
--   
--   <i>See:</i> <a>newCreateHealthCheck</a> smart constructor.
data CreateHealthCheck
CreateHealthCheck' :: Text -> HealthCheckConfig -> CreateHealthCheck

-- | A unique string that identifies the request and that allows you to
--   retry a failed <tt>CreateHealthCheck</tt> request without the risk of
--   creating two identical health checks:
--   
--   <ul>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> and settings as a previous request, and if
--   the health check doesn't exist, Amazon Route 53 creates the health
--   check. If the health check does exist, Route 53 returns the settings
--   for the existing health check.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> as a deleted health check, regardless of the
--   settings, Route 53 returns a <tt>HealthCheckAlreadyExists</tt>
--   error.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> as an existing health check but with
--   different settings, Route 53 returns a
--   <tt>HealthCheckAlreadyExists</tt> error.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with a unique
--   <tt>CallerReference</tt> but settings identical to an existing health
--   check, Route 53 creates the health check.</li>
--   </ul>
[$sel:callerReference:CreateHealthCheck'] :: CreateHealthCheck -> Text

-- | A complex type that contains settings for a new health check.
[$sel:healthCheckConfig:CreateHealthCheck'] :: CreateHealthCheck -> HealthCheckConfig

-- | Create a value of <a>CreateHealthCheck</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:callerReference:CreateHealthCheck'</a>,
--   <a>createHealthCheck_callerReference</a> - A unique string that
--   identifies the request and that allows you to retry a failed
--   <tt>CreateHealthCheck</tt> request without the risk of creating two
--   identical health checks:
--   
--   <ul>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> and settings as a previous request, and if
--   the health check doesn't exist, Amazon Route 53 creates the health
--   check. If the health check does exist, Route 53 returns the settings
--   for the existing health check.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> as a deleted health check, regardless of the
--   settings, Route 53 returns a <tt>HealthCheckAlreadyExists</tt>
--   error.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> as an existing health check but with
--   different settings, Route 53 returns a
--   <tt>HealthCheckAlreadyExists</tt> error.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with a unique
--   <tt>CallerReference</tt> but settings identical to an existing health
--   check, Route 53 creates the health check.</li>
--   </ul>
--   
--   <a>$sel:healthCheckConfig:CreateHealthCheck'</a>,
--   <a>createHealthCheck_healthCheckConfig</a> - A complex type that
--   contains settings for a new health check.
newCreateHealthCheck :: Text -> HealthCheckConfig -> CreateHealthCheck

-- | A unique string that identifies the request and that allows you to
--   retry a failed <tt>CreateHealthCheck</tt> request without the risk of
--   creating two identical health checks:
--   
--   <ul>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> and settings as a previous request, and if
--   the health check doesn't exist, Amazon Route 53 creates the health
--   check. If the health check does exist, Route 53 returns the settings
--   for the existing health check.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> as a deleted health check, regardless of the
--   settings, Route 53 returns a <tt>HealthCheckAlreadyExists</tt>
--   error.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> as an existing health check but with
--   different settings, Route 53 returns a
--   <tt>HealthCheckAlreadyExists</tt> error.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with a unique
--   <tt>CallerReference</tt> but settings identical to an existing health
--   check, Route 53 creates the health check.</li>
--   </ul>
createHealthCheck_callerReference :: Lens' CreateHealthCheck Text

-- | A complex type that contains settings for a new health check.
createHealthCheck_healthCheckConfig :: Lens' CreateHealthCheck HealthCheckConfig

-- | A complex type containing the response information for the new health
--   check.
--   
--   <i>See:</i> <a>newCreateHealthCheckResponse</a> smart constructor.
data CreateHealthCheckResponse
CreateHealthCheckResponse' :: Int -> HealthCheck -> Text -> CreateHealthCheckResponse

-- | The response's http status code.
[$sel:httpStatus:CreateHealthCheckResponse'] :: CreateHealthCheckResponse -> Int

-- | A complex type that contains identifying information about the health
--   check.
[$sel:healthCheck:CreateHealthCheckResponse'] :: CreateHealthCheckResponse -> HealthCheck

-- | The unique URL representing the new health check.
[$sel:location:CreateHealthCheckResponse'] :: CreateHealthCheckResponse -> Text

-- | Create a value of <a>CreateHealthCheckResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateHealthCheckResponse'</a>,
--   <a>createHealthCheckResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:healthCheck:CreateHealthCheckResponse'</a>,
--   <a>createHealthCheckResponse_healthCheck</a> - A complex type that
--   contains identifying information about the health check.
--   
--   <a>$sel:location:CreateHealthCheckResponse'</a>,
--   <a>createHealthCheckResponse_location</a> - The unique URL
--   representing the new health check.
newCreateHealthCheckResponse :: Int -> HealthCheck -> Text -> CreateHealthCheckResponse

-- | The response's http status code.
createHealthCheckResponse_httpStatus :: Lens' CreateHealthCheckResponse Int

-- | A complex type that contains identifying information about the health
--   check.
createHealthCheckResponse_healthCheck :: Lens' CreateHealthCheckResponse HealthCheck

-- | The unique URL representing the new health check.
createHealthCheckResponse_location :: Lens' CreateHealthCheckResponse Text
instance GHC.Generics.Generic Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck
instance GHC.Show.Show Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck
instance GHC.Read.Read Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck
instance GHC.Classes.Eq Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck
instance GHC.Generics.Generic Network.AWS.Route53.CreateHealthCheck.CreateHealthCheckResponse
instance GHC.Show.Show Network.AWS.Route53.CreateHealthCheck.CreateHealthCheckResponse
instance GHC.Read.Read Network.AWS.Route53.CreateHealthCheck.CreateHealthCheckResponse
instance GHC.Classes.Eq Network.AWS.Route53.CreateHealthCheck.CreateHealthCheckResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateHealthCheck.CreateHealthCheckResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck
instance Control.DeepSeq.NFData Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.CreateHealthCheck.CreateHealthCheck


-- | Adds, edits, or deletes tags for a health check or a hosted zone.
--   
--   For information about using tags for cost allocation, see <a>Using
--   Cost Allocation Tags</a> in the <i>Billing and Cost Management User
--   Guide</i>.
module Network.AWS.Route53.ChangeTagsForResource

-- | A complex type that contains information about the tags that you want
--   to add, edit, or delete.
--   
--   <i>See:</i> <a>newChangeTagsForResource</a> smart constructor.
data ChangeTagsForResource
ChangeTagsForResource' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Tag) -> TagResourceType -> Text -> ChangeTagsForResource

-- | A complex type that contains a list of the tags that you want to
--   delete from the specified health check or hosted zone. You can specify
--   up to 10 keys.
[$sel:removeTagKeys:ChangeTagsForResource'] :: ChangeTagsForResource -> Maybe (NonEmpty Text)

-- | A complex type that contains a list of the tags that you want to add
--   to the specified health check or hosted zone and/or the tags that you
--   want to edit <tt>Value</tt> for.
--   
--   You can add a maximum of 10 tags to a health check or a hosted zone.
[$sel:addTags:ChangeTagsForResource'] :: ChangeTagsForResource -> Maybe (NonEmpty Tag)

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
[$sel:resourceType:ChangeTagsForResource'] :: ChangeTagsForResource -> TagResourceType

-- | The ID of the resource for which you want to add, change, or delete
--   tags.
[$sel:resourceId:ChangeTagsForResource'] :: ChangeTagsForResource -> Text

-- | Create a value of <a>ChangeTagsForResource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:removeTagKeys:ChangeTagsForResource'</a>,
--   <a>changeTagsForResource_removeTagKeys</a> - A complex type that
--   contains a list of the tags that you want to delete from the specified
--   health check or hosted zone. You can specify up to 10 keys.
--   
--   <a>$sel:addTags:ChangeTagsForResource'</a>,
--   <a>changeTagsForResource_addTags</a> - A complex type that contains a
--   list of the tags that you want to add to the specified health check or
--   hosted zone and/or the tags that you want to edit <tt>Value</tt> for.
--   
--   You can add a maximum of 10 tags to a health check or a hosted zone.
--   
--   <a>$sel:resourceType:ChangeTagsForResource'</a>,
--   <a>changeTagsForResource_resourceType</a> - The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
--   
--   <a>$sel:resourceId:ChangeTagsForResource'</a>,
--   <a>changeTagsForResource_resourceId</a> - The ID of the resource for
--   which you want to add, change, or delete tags.
newChangeTagsForResource :: TagResourceType -> Text -> ChangeTagsForResource

-- | A complex type that contains a list of the tags that you want to
--   delete from the specified health check or hosted zone. You can specify
--   up to 10 keys.
changeTagsForResource_removeTagKeys :: Lens' ChangeTagsForResource (Maybe (NonEmpty Text))

-- | A complex type that contains a list of the tags that you want to add
--   to the specified health check or hosted zone and/or the tags that you
--   want to edit <tt>Value</tt> for.
--   
--   You can add a maximum of 10 tags to a health check or a hosted zone.
changeTagsForResource_addTags :: Lens' ChangeTagsForResource (Maybe (NonEmpty Tag))

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
changeTagsForResource_resourceType :: Lens' ChangeTagsForResource TagResourceType

-- | The ID of the resource for which you want to add, change, or delete
--   tags.
changeTagsForResource_resourceId :: Lens' ChangeTagsForResource Text

-- | Empty response for the request.
--   
--   <i>See:</i> <a>newChangeTagsForResourceResponse</a> smart constructor.
data ChangeTagsForResourceResponse
ChangeTagsForResourceResponse' :: Int -> ChangeTagsForResourceResponse

-- | The response's http status code.
[$sel:httpStatus:ChangeTagsForResourceResponse'] :: ChangeTagsForResourceResponse -> Int

-- | Create a value of <a>ChangeTagsForResourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ChangeTagsForResourceResponse'</a>,
--   <a>changeTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newChangeTagsForResourceResponse :: Int -> ChangeTagsForResourceResponse

-- | The response's http status code.
changeTagsForResourceResponse_httpStatus :: Lens' ChangeTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource
instance GHC.Show.Show Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource
instance GHC.Read.Read Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource
instance GHC.Classes.Eq Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource
instance GHC.Generics.Generic Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResourceResponse
instance GHC.Show.Show Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResourceResponse
instance GHC.Read.Read Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource
instance Control.DeepSeq.NFData Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.ChangeTagsForResource.ChangeTagsForResource


-- | Creates, changes, or deletes a resource record set, which contains
--   authoritative DNS information for a specified domain name or subdomain
--   name. For example, you can use <tt>ChangeResourceRecordSets</tt> to
--   create a resource record set that routes traffic for test.example.com
--   to a web server that has an IP address of 192.0.2.44.
--   
--   <b>Deleting Resource Record Sets</b>
--   
--   To delete a resource record set, you must specify all the same values
--   that you specified when you created it.
--   
--   <b>Change Batches and Transactional Changes</b>
--   
--   The request body must include a document with a
--   <tt>ChangeResourceRecordSetsRequest</tt> element. The request body
--   contains a list of change items, known as a change batch. Change
--   batches are considered transactional changes. Route 53 validates the
--   changes in the request and then either makes all or none of the
--   changes in the change batch request. This ensures that DNS routing
--   isn't adversely affected by partial changes to the resource record
--   sets in a hosted zone.
--   
--   For example, suppose a change batch request contains two changes: it
--   deletes the <tt>CNAME</tt> resource record set for www.example.com and
--   creates an alias resource record set for www.example.com. If
--   validation for both records succeeds, Route 53 deletes the first
--   resource record set and creates the second resource record set in a
--   single operation. If validation for either the <tt>DELETE</tt> or the
--   <tt>CREATE</tt> action fails, then the request is canceled, and the
--   original <tt>CNAME</tt> record continues to exist.
--   
--   If you try to delete the same resource record set more than once in a
--   single change batch, Route 53 returns an <tt>InvalidChangeBatch</tt>
--   error.
--   
--   <b>Traffic Flow</b>
--   
--   To create resource record sets for complex routing configurations, use
--   either the traffic flow visual editor in the Route 53 console or the
--   API actions for traffic policies and traffic policy instances. Save
--   the configuration as a traffic policy, then associate the traffic
--   policy with one or more domain names (such as example.com) or
--   subdomain names (such as www.example.com), in the same hosted zone or
--   in multiple hosted zones. You can roll back the updates if the new
--   configuration isn't performing as expected. For more information, see
--   <a>Using Traffic Flow to Route DNS Traffic</a> in the <i>Amazon Route
--   53 Developer Guide</i>.
--   
--   <b>Create, Delete, and Upsert</b>
--   
--   Use <tt>ChangeResourceRecordsSetsRequest</tt> to perform the following
--   actions:
--   
--   <ul>
--   <li><tt>CREATE</tt>: Creates a resource record set that has the
--   specified values.</li>
--   <li><tt>DELETE</tt>: Deletes an existing resource record set that has
--   the specified values.</li>
--   <li><tt>UPSERT</tt>: If a resource record set does not already exist,
--   Amazon Web Services creates it. If a resource set does exist, Route 53
--   updates it with the values in the request.</li>
--   </ul>
--   
--   <b>Syntaxes for Creating, Updating, and Deleting Resource Record
--   Sets</b>
--   
--   The syntax for a request depends on the type of resource record set
--   that you want to create, delete, or update, such as weighted, alias,
--   or failover. The XML elements in your request must appear in the order
--   listed in the syntax.
--   
--   For an example for each type of resource record set, see "Examples."
--   
--   Don't refer to the syntax in the "Parameter Syntax" section, which
--   includes all of the elements for every kind of resource record set
--   that you can create, delete, or update by using
--   <tt>ChangeResourceRecordSets</tt>.
--   
--   <b>Change Propagation to Route 53 DNS Servers</b>
--   
--   When you submit a <tt>ChangeResourceRecordSets</tt> request, Route 53
--   propagates your changes to all of the Route 53 authoritative DNS
--   servers. While your changes are propagating, <tt>GetChange</tt>
--   returns a status of <tt>PENDING</tt>. When propagation is complete,
--   <tt>GetChange</tt> returns a status of <tt>INSYNC</tt>. Changes
--   generally propagate to all Route 53 name servers within 60 seconds.
--   For more information, see <a>GetChange</a>.
--   
--   <b>Limits on ChangeResourceRecordSets Requests</b>
--   
--   For information about the limits on a
--   <tt>ChangeResourceRecordSets</tt> request, see <a>Limits</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.
module Network.AWS.Route53.ChangeResourceRecordSets

-- | A complex type that contains change information for the resource
--   record set.
--   
--   <i>See:</i> <a>newChangeResourceRecordSets</a> smart constructor.
data ChangeResourceRecordSets
ChangeResourceRecordSets' :: ResourceId -> ChangeBatch -> ChangeResourceRecordSets

-- | The ID of the hosted zone that contains the resource record sets that
--   you want to change.
[$sel:hostedZoneId:ChangeResourceRecordSets'] :: ChangeResourceRecordSets -> ResourceId

-- | A complex type that contains an optional comment and the
--   <tt>Changes</tt> element.
[$sel:changeBatch:ChangeResourceRecordSets'] :: ChangeResourceRecordSets -> ChangeBatch

-- | Create a value of <a>ChangeResourceRecordSets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:ChangeResourceRecordSets'</a>,
--   <a>changeResourceRecordSets_hostedZoneId</a> - The ID of the hosted
--   zone that contains the resource record sets that you want to change.
--   
--   <a>$sel:changeBatch:ChangeResourceRecordSets'</a>,
--   <a>changeResourceRecordSets_changeBatch</a> - A complex type that
--   contains an optional comment and the <tt>Changes</tt> element.
newChangeResourceRecordSets :: ResourceId -> ChangeBatch -> ChangeResourceRecordSets

-- | The ID of the hosted zone that contains the resource record sets that
--   you want to change.
changeResourceRecordSets_hostedZoneId :: Lens' ChangeResourceRecordSets ResourceId

-- | A complex type that contains an optional comment and the
--   <tt>Changes</tt> element.
changeResourceRecordSets_changeBatch :: Lens' ChangeResourceRecordSets ChangeBatch

-- | A complex type containing the response for the request.
--   
--   <i>See:</i> <a>newChangeResourceRecordSetsResponse</a> smart
--   constructor.
data ChangeResourceRecordSetsResponse
ChangeResourceRecordSetsResponse' :: Int -> ChangeInfo -> ChangeResourceRecordSetsResponse

-- | The response's http status code.
[$sel:httpStatus:ChangeResourceRecordSetsResponse'] :: ChangeResourceRecordSetsResponse -> Int

-- | A complex type that contains information about changes made to your
--   hosted zone.
--   
--   This element contains an ID that you use when performing a
--   <a>GetChange</a> action to get detailed information about the change.
[$sel:changeInfo:ChangeResourceRecordSetsResponse'] :: ChangeResourceRecordSetsResponse -> ChangeInfo

-- | Create a value of <a>ChangeResourceRecordSetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ChangeResourceRecordSetsResponse'</a>,
--   <a>changeResourceRecordSetsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:changeInfo:ChangeResourceRecordSetsResponse'</a>,
--   <a>changeResourceRecordSetsResponse_changeInfo</a> - A complex type
--   that contains information about changes made to your hosted zone.
--   
--   This element contains an ID that you use when performing a
--   <a>GetChange</a> action to get detailed information about the change.
newChangeResourceRecordSetsResponse :: Int -> ChangeInfo -> ChangeResourceRecordSetsResponse

-- | The response's http status code.
changeResourceRecordSetsResponse_httpStatus :: Lens' ChangeResourceRecordSetsResponse Int

-- | A complex type that contains information about changes made to your
--   hosted zone.
--   
--   This element contains an ID that you use when performing a
--   <a>GetChange</a> action to get detailed information about the change.
changeResourceRecordSetsResponse_changeInfo :: Lens' ChangeResourceRecordSetsResponse ChangeInfo
instance GHC.Generics.Generic Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets
instance GHC.Show.Show Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets
instance GHC.Read.Read Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets
instance GHC.Classes.Eq Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets
instance GHC.Generics.Generic Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSetsResponse
instance GHC.Show.Show Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSetsResponse
instance GHC.Read.Read Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSetsResponse
instance GHC.Classes.Eq Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSetsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets
instance Control.DeepSeq.NFData Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSetsResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets
instance Control.DeepSeq.NFData Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.ChangeResourceRecordSets.ChangeResourceRecordSets


-- | Associates an Amazon VPC with a private hosted zone.
--   
--   To perform the association, the VPC and the private hosted zone must
--   already exist. You can't convert a public hosted zone into a private
--   hosted zone.
--   
--   If you want to associate a VPC that was created by using one Amazon
--   Web Services account with a private hosted zone that was created by
--   using a different account, the Amazon Web Services account that
--   created the private hosted zone must first submit a
--   <tt>CreateVPCAssociationAuthorization</tt> request. Then the account
--   that created the VPC must submit an
--   <tt>AssociateVPCWithHostedZone</tt> request.
module Network.AWS.Route53.AssociateVPCWithHostedZone

-- | A complex type that contains information about the request to
--   associate a VPC with a private hosted zone.
--   
--   <i>See:</i> <a>newAssociateVPCWithHostedZone</a> smart constructor.
data AssociateVPCWithHostedZone
AssociateVPCWithHostedZone' :: Maybe Text -> ResourceId -> VPC -> AssociateVPCWithHostedZone

-- | <i>Optional:</i> A comment about the association request.
[$sel:comment:AssociateVPCWithHostedZone'] :: AssociateVPCWithHostedZone -> Maybe Text

-- | The ID of the private hosted zone that you want to associate an Amazon
--   VPC with.
--   
--   Note that you can't associate a VPC with a hosted zone that doesn't
--   have an existing VPC association.
[$sel:hostedZoneId:AssociateVPCWithHostedZone'] :: AssociateVPCWithHostedZone -> ResourceId

-- | A complex type that contains information about the VPC that you want
--   to associate with a private hosted zone.
[$sel:vpc:AssociateVPCWithHostedZone'] :: AssociateVPCWithHostedZone -> VPC

-- | Create a value of <a>AssociateVPCWithHostedZone</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:AssociateVPCWithHostedZone'</a>,
--   <a>associateVPCWithHostedZone_comment</a> - <i>Optional:</i> A comment
--   about the association request.
--   
--   <a>$sel:hostedZoneId:AssociateVPCWithHostedZone'</a>,
--   <a>associateVPCWithHostedZone_hostedZoneId</a> - The ID of the private
--   hosted zone that you want to associate an Amazon VPC with.
--   
--   Note that you can't associate a VPC with a hosted zone that doesn't
--   have an existing VPC association.
--   
--   <a>$sel:vpc:AssociateVPCWithHostedZone'</a>,
--   <a>associateVPCWithHostedZone_vpc</a> - A complex type that contains
--   information about the VPC that you want to associate with a private
--   hosted zone.
newAssociateVPCWithHostedZone :: ResourceId -> VPC -> AssociateVPCWithHostedZone

-- | <i>Optional:</i> A comment about the association request.
associateVPCWithHostedZone_comment :: Lens' AssociateVPCWithHostedZone (Maybe Text)

-- | The ID of the private hosted zone that you want to associate an Amazon
--   VPC with.
--   
--   Note that you can't associate a VPC with a hosted zone that doesn't
--   have an existing VPC association.
associateVPCWithHostedZone_hostedZoneId :: Lens' AssociateVPCWithHostedZone ResourceId

-- | A complex type that contains information about the VPC that you want
--   to associate with a private hosted zone.
associateVPCWithHostedZone_vpc :: Lens' AssociateVPCWithHostedZone VPC

-- | A complex type that contains the response information for the
--   <tt>AssociateVPCWithHostedZone</tt> request.
--   
--   <i>See:</i> <a>newAssociateVPCWithHostedZoneResponse</a> smart
--   constructor.
data AssociateVPCWithHostedZoneResponse
AssociateVPCWithHostedZoneResponse' :: Int -> ChangeInfo -> AssociateVPCWithHostedZoneResponse

-- | The response's http status code.
[$sel:httpStatus:AssociateVPCWithHostedZoneResponse'] :: AssociateVPCWithHostedZoneResponse -> Int

-- | A complex type that describes the changes made to your hosted zone.
[$sel:changeInfo:AssociateVPCWithHostedZoneResponse'] :: AssociateVPCWithHostedZoneResponse -> ChangeInfo

-- | Create a value of <a>AssociateVPCWithHostedZoneResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateVPCWithHostedZoneResponse'</a>,
--   <a>associateVPCWithHostedZoneResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:changeInfo:AssociateVPCWithHostedZoneResponse'</a>,
--   <a>associateVPCWithHostedZoneResponse_changeInfo</a> - A complex type
--   that describes the changes made to your hosted zone.
newAssociateVPCWithHostedZoneResponse :: Int -> ChangeInfo -> AssociateVPCWithHostedZoneResponse

-- | The response's http status code.
associateVPCWithHostedZoneResponse_httpStatus :: Lens' AssociateVPCWithHostedZoneResponse Int

-- | A complex type that describes the changes made to your hosted zone.
associateVPCWithHostedZoneResponse_changeInfo :: Lens' AssociateVPCWithHostedZoneResponse ChangeInfo
instance GHC.Generics.Generic Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone
instance GHC.Show.Show Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone
instance GHC.Read.Read Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone
instance GHC.Classes.Eq Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone
instance GHC.Generics.Generic Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZoneResponse
instance GHC.Show.Show Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZoneResponse
instance GHC.Read.Read Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZoneResponse
instance GHC.Classes.Eq Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZoneResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZoneResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone
instance Control.DeepSeq.NFData Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.AssociateVPCWithHostedZone.AssociateVPCWithHostedZone


-- | Activates a key-signing key (KSK) so that it can be used for signing
--   by DNSSEC. This operation changes the KSK status to <tt>ACTIVE</tt>.
module Network.AWS.Route53.ActivateKeySigningKey

-- | <i>See:</i> <a>newActivateKeySigningKey</a> smart constructor.
data ActivateKeySigningKey
ActivateKeySigningKey' :: ResourceId -> Text -> ActivateKeySigningKey

-- | A unique string used to identify a hosted zone.
[$sel:hostedZoneId:ActivateKeySigningKey'] :: ActivateKeySigningKey -> ResourceId

-- | A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
[$sel:name:ActivateKeySigningKey'] :: ActivateKeySigningKey -> Text

-- | Create a value of <a>ActivateKeySigningKey</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:ActivateKeySigningKey'</a>,
--   <a>activateKeySigningKey_hostedZoneId</a> - A unique string used to
--   identify a hosted zone.
--   
--   <a>$sel:name:ActivateKeySigningKey'</a>,
--   <a>activateKeySigningKey_name</a> - A string used to identify a
--   key-signing key (KSK). <tt>Name</tt> can include numbers, letters, and
--   underscores (_). <tt>Name</tt> must be unique for each key-signing key
--   in the same hosted zone.
newActivateKeySigningKey :: ResourceId -> Text -> ActivateKeySigningKey

-- | A unique string used to identify a hosted zone.
activateKeySigningKey_hostedZoneId :: Lens' ActivateKeySigningKey ResourceId

-- | A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
activateKeySigningKey_name :: Lens' ActivateKeySigningKey Text

-- | <i>See:</i> <a>newActivateKeySigningKeyResponse</a> smart constructor.
data ActivateKeySigningKeyResponse
ActivateKeySigningKeyResponse' :: Int -> ChangeInfo -> ActivateKeySigningKeyResponse

-- | The response's http status code.
[$sel:httpStatus:ActivateKeySigningKeyResponse'] :: ActivateKeySigningKeyResponse -> Int
[$sel:changeInfo:ActivateKeySigningKeyResponse'] :: ActivateKeySigningKeyResponse -> ChangeInfo

-- | Create a value of <a>ActivateKeySigningKeyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ActivateKeySigningKeyResponse'</a>,
--   <a>activateKeySigningKeyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:changeInfo:ActivateKeySigningKeyResponse'</a>,
--   <a>activateKeySigningKeyResponse_changeInfo</a> - Undocumented member.
newActivateKeySigningKeyResponse :: Int -> ChangeInfo -> ActivateKeySigningKeyResponse

-- | The response's http status code.
activateKeySigningKeyResponse_httpStatus :: Lens' ActivateKeySigningKeyResponse Int

-- | Undocumented member.
activateKeySigningKeyResponse_changeInfo :: Lens' ActivateKeySigningKeyResponse ChangeInfo
instance GHC.Generics.Generic Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKey
instance GHC.Show.Show Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKey
instance GHC.Read.Read Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKey
instance GHC.Classes.Eq Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKey
instance GHC.Generics.Generic Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKeyResponse
instance GHC.Show.Show Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKeyResponse
instance GHC.Read.Read Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKeyResponse
instance GHC.Classes.Eq Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKeyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKey
instance Control.DeepSeq.NFData Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKeyResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKey
instance Control.DeepSeq.NFData Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKey
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKey
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKey
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.ActivateKeySigningKey.ActivateKeySigningKey


-- | Updates an existing health check. Note that some values can't be
--   updated.
--   
--   For more information about updating health checks, see <a>Creating,
--   Updating, and Deleting Health Checks</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
module Network.AWS.Route53.UpdateHealthCheck

-- | A complex type that contains information about a request to update a
--   health check.
--   
--   <i>See:</i> <a>newUpdateHealthCheck</a> smart constructor.
data UpdateHealthCheck
UpdateHealthCheck' :: Maybe Natural -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe [ResettableElementName] -> Maybe Text -> Maybe Natural -> Maybe (NonEmpty HealthCheckRegion) -> Maybe Text -> Maybe InsufficientDataHealthStatus -> Maybe Natural -> Maybe AlarmIdentifier -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Natural -> Text -> UpdateHealthCheck

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Amazon Route 53 to change the current status of the endpoint
--   from unhealthy to healthy or vice versa. For more information, see
--   <a>How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a>
--   in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
[$sel:failureThreshold:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe Natural

-- | The IPv4 or IPv6 IP address for the endpoint that you want Amazon
--   Route 53 to perform health checks on. If you don't specify a value for
--   <tt>IPAddress</tt>, Route 53 sends a DNS request to resolve the domain
--   name that you specify in <tt>FullyQualifiedDomainName</tt> at the
--   interval that you specify in <tt>RequestInterval</tt>. Using an IP
--   address that is returned by DNS, Route 53 then checks the health of
--   the endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance never changes. For more information, see
--   the applicable documentation:
--   
--   <ul>
--   <li>Linux: <a>Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i></li>
--   <li>Windows: <a>Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2
--   User Guide for Windows Instances</i></li>
--   </ul>
--   
--   If a health check already has a value for <tt>IPAddress</tt>, you can
--   change the value. However, you can't update an existing health check
--   to add or remove the value of <tt>IPAddress</tt>.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
[$sel:iPAddress:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe Text

-- | Specify whether you want Amazon Route 53 to send the value of
--   <tt>FullyQualifiedDomainName</tt> to the endpoint in the
--   <tt>client_hello</tt> message during <tt>TLS</tt> negotiation. This
--   allows the endpoint to respond to <tt>HTTPS</tt> health check requests
--   with the applicable SSL/TLS certificate.
--   
--   Some endpoints require that HTTPS requests include the host name in
--   the <tt>client_hello</tt> message. If you don't enable SNI, the status
--   of the health check will be SSL alert <tt>handshake_failure</tt>. A
--   health check can also have that status for other reasons. If SNI is
--   enabled and you're still getting the error, check the SSL/TLS
--   configuration on your endpoint and confirm that your certificate is
--   valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
[$sel:enableSNI:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe Bool

-- | Stops Route 53 from performing health checks. When you disable a
--   health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
[$sel:disabled:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe Bool

-- | A complex type that contains one <tt>ResettableElementName</tt>
--   element for each element that you want to reset to the default value.
--   Valid values for <tt>ResettableElementName</tt> include the following:
--   
--   <ul>
--   <li><tt>ChildHealthChecks</tt>: Amazon Route 53 resets
--   <a>ChildHealthChecks</a> to null.</li>
--   <li><tt>FullyQualifiedDomainName</tt>: Route 53 resets
--   <a>FullyQualifiedDomainName</a>. to null.</li>
--   <li><tt>Regions</tt>: Route 53 resets the <a>Regions</a> list to the
--   default set of regions.</li>
--   <li><tt>ResourcePath</tt>: Route 53 resets <a>ResourcePath</a> to
--   null.</li>
--   </ul>
[$sel:resetElements:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe [ResettableElementName]

-- | If the value of <tt>Type</tt> is <tt>HTTP_STR_MATCH</tt> or
--   <tt>HTTPS_STR_MATCH</tt>, the string that you want Amazon Route 53 to
--   search for in the response body from the specified resource. If the
--   string appears in the response body, Route 53 considers the resource
--   healthy. (You can't change the value of <tt>Type</tt> when you update
--   a health check.)
[$sel:searchString:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe Text

-- | The number of child health checks that are associated with a
--   <tt>CALCULATED</tt> health that Amazon Route 53 must consider healthy
--   for the <tt>CALCULATED</tt> health check to be considered healthy. To
--   specify the child health checks that you want to associate with a
--   <tt>CALCULATED</tt> health check, use the <tt>ChildHealthChecks</tt>
--   and <tt>ChildHealthCheck</tt> elements.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
[$sel:healthThreshold:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe Natural

-- | A complex type that contains one <tt>Region</tt> element for each
--   region that you want Amazon Route 53 health checkers to check the
--   specified endpoint from.
[$sel:regions:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe (NonEmpty HealthCheckRegion)

-- | The path that you want Amazon Route 53 to request when performing
--   health checks. The path can be any value for which your endpoint will
--   return an HTTP status code of 2xx or 3xx when the endpoint is healthy,
--   for example the file /docs/route53-health-check.html. You can also
--   include query string parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
--   
--   Specify this value only if you want to change it.
[$sel:resourcePath:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe Text

-- | When CloudWatch has insufficient data about the metric to determine
--   the alarm state, the status that you want Amazon Route 53 to assign to
--   the health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time CloudWatch had sufficient data to determine
--   the alarm state. For new health checks that have no last known status,
--   the default status for the health check is healthy.</li>
--   </ul>
[$sel:insufficientDataHealthStatus:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe InsufficientDataHealthStatus

-- | A sequential counter that Amazon Route 53 sets to <tt>1</tt> when you
--   create a health check and increments by 1 each time you update
--   settings for the health check.
--   
--   We recommend that you use <tt>GetHealthCheck</tt> or
--   <tt>ListHealthChecks</tt> to get the current value of
--   <tt>HealthCheckVersion</tt> for the health check that you want to
--   update, and that you include that value in your
--   <tt>UpdateHealthCheck</tt> request. This prevents Route 53 from
--   overwriting an intervening update:
--   
--   <ul>
--   <li>If the value in the <tt>UpdateHealthCheck</tt> request matches the
--   value of <tt>HealthCheckVersion</tt> in the health check, Route 53
--   updates the health check with the new settings.</li>
--   <li>If the value of <tt>HealthCheckVersion</tt> in the health check is
--   greater, the health check was changed after you got the version
--   number. Route 53 does not update the health check, and it returns a
--   <tt>HealthCheckVersionMismatch</tt> error.</li>
--   </ul>
[$sel:healthCheckVersion:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe Natural

-- | A complex type that identifies the CloudWatch alarm that you want
--   Amazon Route 53 health checkers to use to determine whether the
--   specified health check is healthy.
[$sel:alarmIdentifier:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe AlarmIdentifier

-- | Specify whether you want Amazon Route 53 to invert the status of a
--   health check, for example, to consider a health check unhealthy when
--   it otherwise would be considered healthy.
[$sel:inverted:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe Bool

-- | Amazon Route 53 behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   If a health check already has a value for <tt>IPAddress</tt>, you can
--   change the value. However, you can't update an existing health check
--   to add or remove the value of <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends health check requests to the specified IPv4 or IPv6
--   address and passes the value of <tt>FullyQualifiedDomainName</tt> in
--   the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <i><tt>FullyQualifiedDomainName</tt>:<tt>Port</tt></i> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the above cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 sends a
--   DNS request to the domain that you specify in
--   <tt>FullyQualifiedDomainName</tt> at the interval you specify in
--   <tt>RequestInterval</tt>. Using an IPv4 address that is returned by
--   DNS, Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   <tt>us-east-2-www.example.com</tt>), not the name of the resource
--   record sets (www.example.com).
--   
--   In this configuration, if the value of
--   <tt>FullyQualifiedDomainName</tt> matches the name of the resource
--   record sets and you then associate the health check with those
--   resource record sets, health check results will be unpredictable.
--   
--   In addition, if the value of <tt>Type</tt> is <tt>HTTP</tt>,
--   <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or <tt>HTTPS_STR_MATCH</tt>,
--   Route 53 passes the value of <tt>FullyQualifiedDomainName</tt> in the
--   <tt>Host</tt> header, as it does when you specify a value for
--   <tt>IPAddress</tt>. If the value of <tt>Type</tt> is <tt>TCP</tt>,
--   Route 53 doesn't pass a <tt>Host</tt> header.
[$sel:fullyQualifiedDomainName:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe Text

-- | A complex type that contains one <tt>ChildHealthCheck</tt> element for
--   each health check that you want to associate with a
--   <tt>CALCULATED</tt> health check.
[$sel:childHealthChecks:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe [Text]

-- | The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
[$sel:port:UpdateHealthCheck'] :: UpdateHealthCheck -> Maybe Natural

-- | The ID for the health check for which you want detailed information.
--   When you created the health check, <tt>CreateHealthCheck</tt> returned
--   the ID in the response, in the <tt>HealthCheckId</tt> element.
[$sel:healthCheckId:UpdateHealthCheck'] :: UpdateHealthCheck -> Text

-- | Create a value of <a>UpdateHealthCheck</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureThreshold:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_failureThreshold</a> - The number of consecutive
--   health checks that an endpoint must pass or fail for Amazon Route 53
--   to change the current status of the endpoint from unhealthy to healthy
--   or vice versa. For more information, see <a>How Amazon Route 53
--   Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route
--   53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
--   
--   <a>$sel:iPAddress:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_iPAddress</a> - The IPv4 or IPv6 IP address for
--   the endpoint that you want Amazon Route 53 to perform health checks
--   on. If you don't specify a value for <tt>IPAddress</tt>, Route 53
--   sends a DNS request to resolve the domain name that you specify in
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify in
--   <tt>RequestInterval</tt>. Using an IP address that is returned by DNS,
--   Route 53 then checks the health of the endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance never changes. For more information, see
--   the applicable documentation:
--   
--   <ul>
--   <li>Linux: <a>Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i></li>
--   <li>Windows: <a>Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2
--   User Guide for Windows Instances</i></li>
--   </ul>
--   
--   If a health check already has a value for <tt>IPAddress</tt>, you can
--   change the value. However, you can't update an existing health check
--   to add or remove the value of <tt>IPAddress</tt>.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
--   
--   <a>$sel:enableSNI:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_enableSNI</a> - Specify whether you want Amazon
--   Route 53 to send the value of <tt>FullyQualifiedDomainName</tt> to the
--   endpoint in the <tt>client_hello</tt> message during <tt>TLS</tt>
--   negotiation. This allows the endpoint to respond to <tt>HTTPS</tt>
--   health check requests with the applicable SSL/TLS certificate.
--   
--   Some endpoints require that HTTPS requests include the host name in
--   the <tt>client_hello</tt> message. If you don't enable SNI, the status
--   of the health check will be SSL alert <tt>handshake_failure</tt>. A
--   health check can also have that status for other reasons. If SNI is
--   enabled and you're still getting the error, check the SSL/TLS
--   configuration on your endpoint and confirm that your certificate is
--   valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
--   
--   <a>$sel:disabled:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_disabled</a> - Stops Route 53 from performing
--   health checks. When you disable a health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
--   
--   <a>$sel:resetElements:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_resetElements</a> - A complex type that contains
--   one <tt>ResettableElementName</tt> element for each element that you
--   want to reset to the default value. Valid values for
--   <tt>ResettableElementName</tt> include the following:
--   
--   <ul>
--   <li><tt>ChildHealthChecks</tt>: Amazon Route 53 resets
--   <a>ChildHealthChecks</a> to null.</li>
--   <li><tt>FullyQualifiedDomainName</tt>: Route 53 resets
--   <a>FullyQualifiedDomainName</a>. to null.</li>
--   <li><tt>Regions</tt>: Route 53 resets the <a>Regions</a> list to the
--   default set of regions.</li>
--   <li><tt>ResourcePath</tt>: Route 53 resets <a>ResourcePath</a> to
--   null.</li>
--   </ul>
--   
--   <a>$sel:searchString:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_searchString</a> - If the value of <tt>Type</tt>
--   is <tt>HTTP_STR_MATCH</tt> or <tt>HTTPS_STR_MATCH</tt>, the string
--   that you want Amazon Route 53 to search for in the response body from
--   the specified resource. If the string appears in the response body,
--   Route 53 considers the resource healthy. (You can't change the value
--   of <tt>Type</tt> when you update a health check.)
--   
--   <a>$sel:healthThreshold:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_healthThreshold</a> - The number of child health
--   checks that are associated with a <tt>CALCULATED</tt> health that
--   Amazon Route 53 must consider healthy for the <tt>CALCULATED</tt>
--   health check to be considered healthy. To specify the child health
--   checks that you want to associate with a <tt>CALCULATED</tt> health
--   check, use the <tt>ChildHealthChecks</tt> and
--   <tt>ChildHealthCheck</tt> elements.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
--   
--   <a>$sel:regions:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_regions</a> - A complex type that contains one
--   <tt>Region</tt> element for each region that you want Amazon Route 53
--   health checkers to check the specified endpoint from.
--   
--   <a>$sel:resourcePath:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_resourcePath</a> - The path that you want Amazon
--   Route 53 to request when performing health checks. The path can be any
--   value for which your endpoint will return an HTTP status code of 2xx
--   or 3xx when the endpoint is healthy, for example the file
--   /docs/route53-health-check.html. You can also include query string
--   parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
--   
--   Specify this value only if you want to change it.
--   
--   <a>$sel:insufficientDataHealthStatus:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_insufficientDataHealthStatus</a> - When
--   CloudWatch has insufficient data about the metric to determine the
--   alarm state, the status that you want Amazon Route 53 to assign to the
--   health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time CloudWatch had sufficient data to determine
--   the alarm state. For new health checks that have no last known status,
--   the default status for the health check is healthy.</li>
--   </ul>
--   
--   <a>$sel:healthCheckVersion:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_healthCheckVersion</a> - A sequential counter
--   that Amazon Route 53 sets to <tt>1</tt> when you create a health check
--   and increments by 1 each time you update settings for the health
--   check.
--   
--   We recommend that you use <tt>GetHealthCheck</tt> or
--   <tt>ListHealthChecks</tt> to get the current value of
--   <tt>HealthCheckVersion</tt> for the health check that you want to
--   update, and that you include that value in your
--   <tt>UpdateHealthCheck</tt> request. This prevents Route 53 from
--   overwriting an intervening update:
--   
--   <ul>
--   <li>If the value in the <tt>UpdateHealthCheck</tt> request matches the
--   value of <tt>HealthCheckVersion</tt> in the health check, Route 53
--   updates the health check with the new settings.</li>
--   <li>If the value of <tt>HealthCheckVersion</tt> in the health check is
--   greater, the health check was changed after you got the version
--   number. Route 53 does not update the health check, and it returns a
--   <tt>HealthCheckVersionMismatch</tt> error.</li>
--   </ul>
--   
--   <a>$sel:alarmIdentifier:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_alarmIdentifier</a> - A complex type that
--   identifies the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether the specified health check is
--   healthy.
--   
--   <a>$sel:inverted:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_inverted</a> - Specify whether you want Amazon
--   Route 53 to invert the status of a health check, for example, to
--   consider a health check unhealthy when it otherwise would be
--   considered healthy.
--   
--   <a>$sel:fullyQualifiedDomainName:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_fullyQualifiedDomainName</a> - Amazon Route 53
--   behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   If a health check already has a value for <tt>IPAddress</tt>, you can
--   change the value. However, you can't update an existing health check
--   to add or remove the value of <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends health check requests to the specified IPv4 or IPv6
--   address and passes the value of <tt>FullyQualifiedDomainName</tt> in
--   the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <i><tt>FullyQualifiedDomainName</tt>:<tt>Port</tt></i> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the above cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 sends a
--   DNS request to the domain that you specify in
--   <tt>FullyQualifiedDomainName</tt> at the interval you specify in
--   <tt>RequestInterval</tt>. Using an IPv4 address that is returned by
--   DNS, Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   <tt>us-east-2-www.example.com</tt>), not the name of the resource
--   record sets (www.example.com).
--   
--   In this configuration, if the value of
--   <tt>FullyQualifiedDomainName</tt> matches the name of the resource
--   record sets and you then associate the health check with those
--   resource record sets, health check results will be unpredictable.
--   
--   In addition, if the value of <tt>Type</tt> is <tt>HTTP</tt>,
--   <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or <tt>HTTPS_STR_MATCH</tt>,
--   Route 53 passes the value of <tt>FullyQualifiedDomainName</tt> in the
--   <tt>Host</tt> header, as it does when you specify a value for
--   <tt>IPAddress</tt>. If the value of <tt>Type</tt> is <tt>TCP</tt>,
--   Route 53 doesn't pass a <tt>Host</tt> header.
--   
--   <a>$sel:childHealthChecks:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_childHealthChecks</a> - A complex type that
--   contains one <tt>ChildHealthCheck</tt> element for each health check
--   that you want to associate with a <tt>CALCULATED</tt> health check.
--   
--   <a>$sel:port:UpdateHealthCheck'</a>, <a>updateHealthCheck_port</a> -
--   The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
--   
--   <a>$sel:healthCheckId:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_healthCheckId</a> - The ID for the health check
--   for which you want detailed information. When you created the health
--   check, <tt>CreateHealthCheck</tt> returned the ID in the response, in
--   the <tt>HealthCheckId</tt> element.
newUpdateHealthCheck :: Text -> UpdateHealthCheck

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Amazon Route 53 to change the current status of the endpoint
--   from unhealthy to healthy or vice versa. For more information, see
--   <a>How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a>
--   in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
updateHealthCheck_failureThreshold :: Lens' UpdateHealthCheck (Maybe Natural)

-- | The IPv4 or IPv6 IP address for the endpoint that you want Amazon
--   Route 53 to perform health checks on. If you don't specify a value for
--   <tt>IPAddress</tt>, Route 53 sends a DNS request to resolve the domain
--   name that you specify in <tt>FullyQualifiedDomainName</tt> at the
--   interval that you specify in <tt>RequestInterval</tt>. Using an IP
--   address that is returned by DNS, Route 53 then checks the health of
--   the endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance never changes. For more information, see
--   the applicable documentation:
--   
--   <ul>
--   <li>Linux: <a>Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i></li>
--   <li>Windows: <a>Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2
--   User Guide for Windows Instances</i></li>
--   </ul>
--   
--   If a health check already has a value for <tt>IPAddress</tt>, you can
--   change the value. However, you can't update an existing health check
--   to add or remove the value of <tt>IPAddress</tt>.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
updateHealthCheck_iPAddress :: Lens' UpdateHealthCheck (Maybe Text)

-- | Specify whether you want Amazon Route 53 to send the value of
--   <tt>FullyQualifiedDomainName</tt> to the endpoint in the
--   <tt>client_hello</tt> message during <tt>TLS</tt> negotiation. This
--   allows the endpoint to respond to <tt>HTTPS</tt> health check requests
--   with the applicable SSL/TLS certificate.
--   
--   Some endpoints require that HTTPS requests include the host name in
--   the <tt>client_hello</tt> message. If you don't enable SNI, the status
--   of the health check will be SSL alert <tt>handshake_failure</tt>. A
--   health check can also have that status for other reasons. If SNI is
--   enabled and you're still getting the error, check the SSL/TLS
--   configuration on your endpoint and confirm that your certificate is
--   valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
updateHealthCheck_enableSNI :: Lens' UpdateHealthCheck (Maybe Bool)

-- | Stops Route 53 from performing health checks. When you disable a
--   health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
updateHealthCheck_disabled :: Lens' UpdateHealthCheck (Maybe Bool)

-- | A complex type that contains one <tt>ResettableElementName</tt>
--   element for each element that you want to reset to the default value.
--   Valid values for <tt>ResettableElementName</tt> include the following:
--   
--   <ul>
--   <li><tt>ChildHealthChecks</tt>: Amazon Route 53 resets
--   <a>ChildHealthChecks</a> to null.</li>
--   <li><tt>FullyQualifiedDomainName</tt>: Route 53 resets
--   <a>FullyQualifiedDomainName</a>. to null.</li>
--   <li><tt>Regions</tt>: Route 53 resets the <a>Regions</a> list to the
--   default set of regions.</li>
--   <li><tt>ResourcePath</tt>: Route 53 resets <a>ResourcePath</a> to
--   null.</li>
--   </ul>
updateHealthCheck_resetElements :: Lens' UpdateHealthCheck (Maybe [ResettableElementName])

-- | If the value of <tt>Type</tt> is <tt>HTTP_STR_MATCH</tt> or
--   <tt>HTTPS_STR_MATCH</tt>, the string that you want Amazon Route 53 to
--   search for in the response body from the specified resource. If the
--   string appears in the response body, Route 53 considers the resource
--   healthy. (You can't change the value of <tt>Type</tt> when you update
--   a health check.)
updateHealthCheck_searchString :: Lens' UpdateHealthCheck (Maybe Text)

-- | The number of child health checks that are associated with a
--   <tt>CALCULATED</tt> health that Amazon Route 53 must consider healthy
--   for the <tt>CALCULATED</tt> health check to be considered healthy. To
--   specify the child health checks that you want to associate with a
--   <tt>CALCULATED</tt> health check, use the <tt>ChildHealthChecks</tt>
--   and <tt>ChildHealthCheck</tt> elements.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
updateHealthCheck_healthThreshold :: Lens' UpdateHealthCheck (Maybe Natural)

-- | A complex type that contains one <tt>Region</tt> element for each
--   region that you want Amazon Route 53 health checkers to check the
--   specified endpoint from.
updateHealthCheck_regions :: Lens' UpdateHealthCheck (Maybe (NonEmpty HealthCheckRegion))

-- | The path that you want Amazon Route 53 to request when performing
--   health checks. The path can be any value for which your endpoint will
--   return an HTTP status code of 2xx or 3xx when the endpoint is healthy,
--   for example the file /docs/route53-health-check.html. You can also
--   include query string parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
--   
--   Specify this value only if you want to change it.
updateHealthCheck_resourcePath :: Lens' UpdateHealthCheck (Maybe Text)

-- | When CloudWatch has insufficient data about the metric to determine
--   the alarm state, the status that you want Amazon Route 53 to assign to
--   the health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time CloudWatch had sufficient data to determine
--   the alarm state. For new health checks that have no last known status,
--   the default status for the health check is healthy.</li>
--   </ul>
updateHealthCheck_insufficientDataHealthStatus :: Lens' UpdateHealthCheck (Maybe InsufficientDataHealthStatus)

-- | A sequential counter that Amazon Route 53 sets to <tt>1</tt> when you
--   create a health check and increments by 1 each time you update
--   settings for the health check.
--   
--   We recommend that you use <tt>GetHealthCheck</tt> or
--   <tt>ListHealthChecks</tt> to get the current value of
--   <tt>HealthCheckVersion</tt> for the health check that you want to
--   update, and that you include that value in your
--   <tt>UpdateHealthCheck</tt> request. This prevents Route 53 from
--   overwriting an intervening update:
--   
--   <ul>
--   <li>If the value in the <tt>UpdateHealthCheck</tt> request matches the
--   value of <tt>HealthCheckVersion</tt> in the health check, Route 53
--   updates the health check with the new settings.</li>
--   <li>If the value of <tt>HealthCheckVersion</tt> in the health check is
--   greater, the health check was changed after you got the version
--   number. Route 53 does not update the health check, and it returns a
--   <tt>HealthCheckVersionMismatch</tt> error.</li>
--   </ul>
updateHealthCheck_healthCheckVersion :: Lens' UpdateHealthCheck (Maybe Natural)

-- | A complex type that identifies the CloudWatch alarm that you want
--   Amazon Route 53 health checkers to use to determine whether the
--   specified health check is healthy.
updateHealthCheck_alarmIdentifier :: Lens' UpdateHealthCheck (Maybe AlarmIdentifier)

-- | Specify whether you want Amazon Route 53 to invert the status of a
--   health check, for example, to consider a health check unhealthy when
--   it otherwise would be considered healthy.
updateHealthCheck_inverted :: Lens' UpdateHealthCheck (Maybe Bool)

-- | Amazon Route 53 behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   If a health check already has a value for <tt>IPAddress</tt>, you can
--   change the value. However, you can't update an existing health check
--   to add or remove the value of <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends health check requests to the specified IPv4 or IPv6
--   address and passes the value of <tt>FullyQualifiedDomainName</tt> in
--   the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <i><tt>FullyQualifiedDomainName</tt>:<tt>Port</tt></i> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the above cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 sends a
--   DNS request to the domain that you specify in
--   <tt>FullyQualifiedDomainName</tt> at the interval you specify in
--   <tt>RequestInterval</tt>. Using an IPv4 address that is returned by
--   DNS, Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   <tt>us-east-2-www.example.com</tt>), not the name of the resource
--   record sets (www.example.com).
--   
--   In this configuration, if the value of
--   <tt>FullyQualifiedDomainName</tt> matches the name of the resource
--   record sets and you then associate the health check with those
--   resource record sets, health check results will be unpredictable.
--   
--   In addition, if the value of <tt>Type</tt> is <tt>HTTP</tt>,
--   <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or <tt>HTTPS_STR_MATCH</tt>,
--   Route 53 passes the value of <tt>FullyQualifiedDomainName</tt> in the
--   <tt>Host</tt> header, as it does when you specify a value for
--   <tt>IPAddress</tt>. If the value of <tt>Type</tt> is <tt>TCP</tt>,
--   Route 53 doesn't pass a <tt>Host</tt> header.
updateHealthCheck_fullyQualifiedDomainName :: Lens' UpdateHealthCheck (Maybe Text)

-- | A complex type that contains one <tt>ChildHealthCheck</tt> element for
--   each health check that you want to associate with a
--   <tt>CALCULATED</tt> health check.
updateHealthCheck_childHealthChecks :: Lens' UpdateHealthCheck (Maybe [Text])

-- | The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
updateHealthCheck_port :: Lens' UpdateHealthCheck (Maybe Natural)

-- | The ID for the health check for which you want detailed information.
--   When you created the health check, <tt>CreateHealthCheck</tt> returned
--   the ID in the response, in the <tt>HealthCheckId</tt> element.
updateHealthCheck_healthCheckId :: Lens' UpdateHealthCheck Text

-- | A complex type that contains the response to the
--   <tt>UpdateHealthCheck</tt> request.
--   
--   <i>See:</i> <a>newUpdateHealthCheckResponse</a> smart constructor.
data UpdateHealthCheckResponse
UpdateHealthCheckResponse' :: Int -> HealthCheck -> UpdateHealthCheckResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateHealthCheckResponse'] :: UpdateHealthCheckResponse -> Int

-- | A complex type that contains the response to an
--   <tt>UpdateHealthCheck</tt> request.
[$sel:healthCheck:UpdateHealthCheckResponse'] :: UpdateHealthCheckResponse -> HealthCheck

-- | Create a value of <a>UpdateHealthCheckResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateHealthCheckResponse'</a>,
--   <a>updateHealthCheckResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:healthCheck:UpdateHealthCheckResponse'</a>,
--   <a>updateHealthCheckResponse_healthCheck</a> - A complex type that
--   contains the response to an <tt>UpdateHealthCheck</tt> request.
newUpdateHealthCheckResponse :: Int -> HealthCheck -> UpdateHealthCheckResponse

-- | The response's http status code.
updateHealthCheckResponse_httpStatus :: Lens' UpdateHealthCheckResponse Int

-- | A complex type that contains the response to an
--   <tt>UpdateHealthCheck</tt> request.
updateHealthCheckResponse_healthCheck :: Lens' UpdateHealthCheckResponse HealthCheck
instance GHC.Generics.Generic Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck
instance GHC.Show.Show Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck
instance GHC.Read.Read Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck
instance GHC.Classes.Eq Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck
instance GHC.Generics.Generic Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheckResponse
instance GHC.Show.Show Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheckResponse
instance GHC.Read.Read Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheckResponse
instance GHC.Classes.Eq Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheckResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck
instance Control.DeepSeq.NFData Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheckResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck
instance Control.DeepSeq.NFData Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.UpdateHealthCheck.UpdateHealthCheck


-- | Updates the comment for a specified hosted zone.
module Network.AWS.Route53.UpdateHostedZoneComment

-- | A request to update the comment for a hosted zone.
--   
--   <i>See:</i> <a>newUpdateHostedZoneComment</a> smart constructor.
data UpdateHostedZoneComment
UpdateHostedZoneComment' :: Maybe Text -> ResourceId -> UpdateHostedZoneComment

-- | The new comment for the hosted zone. If you don't specify a value for
--   <tt>Comment</tt>, Amazon Route 53 deletes the existing value of the
--   <tt>Comment</tt> element, if any.
[$sel:comment:UpdateHostedZoneComment'] :: UpdateHostedZoneComment -> Maybe Text

-- | The ID for the hosted zone that you want to update the comment for.
[$sel:id:UpdateHostedZoneComment'] :: UpdateHostedZoneComment -> ResourceId

-- | Create a value of <a>UpdateHostedZoneComment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:UpdateHostedZoneComment'</a>,
--   <a>updateHostedZoneComment_comment</a> - The new comment for the
--   hosted zone. If you don't specify a value for <tt>Comment</tt>, Amazon
--   Route 53 deletes the existing value of the <tt>Comment</tt> element,
--   if any.
--   
--   <a>$sel:id:UpdateHostedZoneComment'</a>,
--   <a>updateHostedZoneComment_id</a> - The ID for the hosted zone that
--   you want to update the comment for.
newUpdateHostedZoneComment :: ResourceId -> UpdateHostedZoneComment

-- | The new comment for the hosted zone. If you don't specify a value for
--   <tt>Comment</tt>, Amazon Route 53 deletes the existing value of the
--   <tt>Comment</tt> element, if any.
updateHostedZoneComment_comment :: Lens' UpdateHostedZoneComment (Maybe Text)

-- | The ID for the hosted zone that you want to update the comment for.
updateHostedZoneComment_id :: Lens' UpdateHostedZoneComment ResourceId

-- | A complex type that contains the response to the
--   <tt>UpdateHostedZoneComment</tt> request.
--   
--   <i>See:</i> <a>newUpdateHostedZoneCommentResponse</a> smart
--   constructor.
data UpdateHostedZoneCommentResponse
UpdateHostedZoneCommentResponse' :: Int -> HostedZone -> UpdateHostedZoneCommentResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateHostedZoneCommentResponse'] :: UpdateHostedZoneCommentResponse -> Int

-- | A complex type that contains the response to the
--   <tt>UpdateHostedZoneComment</tt> request.
[$sel:hostedZone:UpdateHostedZoneCommentResponse'] :: UpdateHostedZoneCommentResponse -> HostedZone

-- | Create a value of <a>UpdateHostedZoneCommentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateHostedZoneCommentResponse'</a>,
--   <a>updateHostedZoneCommentResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:hostedZone:UpdateHostedZoneCommentResponse'</a>,
--   <a>updateHostedZoneCommentResponse_hostedZone</a> - A complex type
--   that contains the response to the <tt>UpdateHostedZoneComment</tt>
--   request.
newUpdateHostedZoneCommentResponse :: Int -> HostedZone -> UpdateHostedZoneCommentResponse

-- | The response's http status code.
updateHostedZoneCommentResponse_httpStatus :: Lens' UpdateHostedZoneCommentResponse Int

-- | A complex type that contains the response to the
--   <tt>UpdateHostedZoneComment</tt> request.
updateHostedZoneCommentResponse_hostedZone :: Lens' UpdateHostedZoneCommentResponse HostedZone
instance GHC.Generics.Generic Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment
instance GHC.Show.Show Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment
instance GHC.Read.Read Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment
instance GHC.Classes.Eq Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment
instance GHC.Generics.Generic Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneCommentResponse
instance GHC.Show.Show Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneCommentResponse
instance GHC.Read.Read Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneCommentResponse
instance GHC.Classes.Eq Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneCommentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment
instance Control.DeepSeq.NFData Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneCommentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment
instance Control.DeepSeq.NFData Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.UpdateHostedZoneComment.UpdateHostedZoneComment


-- | Updates the comment for a specified traffic policy version.
module Network.AWS.Route53.UpdateTrafficPolicyComment

-- | A complex type that contains information about the traffic policy that
--   you want to update the comment for.
--   
--   <i>See:</i> <a>newUpdateTrafficPolicyComment</a> smart constructor.
data UpdateTrafficPolicyComment
UpdateTrafficPolicyComment' :: Text -> Natural -> Text -> UpdateTrafficPolicyComment

-- | The value of <tt>Id</tt> for the traffic policy that you want to
--   update the comment for.
[$sel:id:UpdateTrafficPolicyComment'] :: UpdateTrafficPolicyComment -> Text

-- | The value of <tt>Version</tt> for the traffic policy that you want to
--   update the comment for.
[$sel:version:UpdateTrafficPolicyComment'] :: UpdateTrafficPolicyComment -> Natural

-- | The new comment for the specified traffic policy and version.
[$sel:comment:UpdateTrafficPolicyComment'] :: UpdateTrafficPolicyComment -> Text

-- | Create a value of <a>UpdateTrafficPolicyComment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:UpdateTrafficPolicyComment'</a>,
--   <a>updateTrafficPolicyComment_id</a> - The value of <tt>Id</tt> for
--   the traffic policy that you want to update the comment for.
--   
--   <a>$sel:version:UpdateTrafficPolicyComment'</a>,
--   <a>updateTrafficPolicyComment_version</a> - The value of
--   <tt>Version</tt> for the traffic policy that you want to update the
--   comment for.
--   
--   <a>$sel:comment:UpdateTrafficPolicyComment'</a>,
--   <a>updateTrafficPolicyComment_comment</a> - The new comment for the
--   specified traffic policy and version.
newUpdateTrafficPolicyComment :: Text -> Natural -> Text -> UpdateTrafficPolicyComment

-- | The value of <tt>Id</tt> for the traffic policy that you want to
--   update the comment for.
updateTrafficPolicyComment_id :: Lens' UpdateTrafficPolicyComment Text

-- | The value of <tt>Version</tt> for the traffic policy that you want to
--   update the comment for.
updateTrafficPolicyComment_version :: Lens' UpdateTrafficPolicyComment Natural

-- | The new comment for the specified traffic policy and version.
updateTrafficPolicyComment_comment :: Lens' UpdateTrafficPolicyComment Text

-- | A complex type that contains the response information for the traffic
--   policy.
--   
--   <i>See:</i> <a>newUpdateTrafficPolicyCommentResponse</a> smart
--   constructor.
data UpdateTrafficPolicyCommentResponse
UpdateTrafficPolicyCommentResponse' :: Int -> TrafficPolicy -> UpdateTrafficPolicyCommentResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateTrafficPolicyCommentResponse'] :: UpdateTrafficPolicyCommentResponse -> Int

-- | A complex type that contains settings for the specified traffic
--   policy.
[$sel:trafficPolicy:UpdateTrafficPolicyCommentResponse'] :: UpdateTrafficPolicyCommentResponse -> TrafficPolicy

-- | Create a value of <a>UpdateTrafficPolicyCommentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateTrafficPolicyCommentResponse'</a>,
--   <a>updateTrafficPolicyCommentResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:trafficPolicy:UpdateTrafficPolicyCommentResponse'</a>,
--   <a>updateTrafficPolicyCommentResponse_trafficPolicy</a> - A complex
--   type that contains settings for the specified traffic policy.
newUpdateTrafficPolicyCommentResponse :: Int -> TrafficPolicy -> UpdateTrafficPolicyCommentResponse

-- | The response's http status code.
updateTrafficPolicyCommentResponse_httpStatus :: Lens' UpdateTrafficPolicyCommentResponse Int

-- | A complex type that contains settings for the specified traffic
--   policy.
updateTrafficPolicyCommentResponse_trafficPolicy :: Lens' UpdateTrafficPolicyCommentResponse TrafficPolicy
instance GHC.Generics.Generic Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment
instance GHC.Show.Show Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment
instance GHC.Read.Read Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment
instance GHC.Classes.Eq Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment
instance GHC.Generics.Generic Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyCommentResponse
instance GHC.Show.Show Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyCommentResponse
instance GHC.Read.Read Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyCommentResponse
instance GHC.Classes.Eq Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyCommentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment
instance Control.DeepSeq.NFData Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyCommentResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment
instance Control.DeepSeq.NFData Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.UpdateTrafficPolicyComment.UpdateTrafficPolicyComment


-- | Updates the resource record sets in a specified hosted zone that were
--   created based on the settings in a specified traffic policy version.
--   
--   When you update a traffic policy instance, Amazon Route 53 continues
--   to respond to DNS queries for the root resource record set name (such
--   as example.com) while it replaces one group of resource record sets
--   with another. Route 53 performs the following operations:
--   
--   <ol>
--   <li>Route 53 creates a new group of resource record sets based on the
--   specified traffic policy. This is true regardless of how significant
--   the differences are between the existing resource record sets and the
--   new resource record sets.</li>
--   <li>When all of the new resource record sets have been created, Route
--   53 starts to respond to DNS queries for the root resource record set
--   name (such as example.com) by using the new resource record sets.</li>
--   <li>Route 53 deletes the old group of resource record sets that are
--   associated with the root resource record set name.</li>
--   </ol>
module Network.AWS.Route53.UpdateTrafficPolicyInstance

-- | A complex type that contains information about the resource record
--   sets that you want to update based on a specified traffic policy
--   instance.
--   
--   <i>See:</i> <a>newUpdateTrafficPolicyInstance</a> smart constructor.
data UpdateTrafficPolicyInstance
UpdateTrafficPolicyInstance' :: Text -> Natural -> Text -> Natural -> UpdateTrafficPolicyInstance

-- | The ID of the traffic policy instance that you want to update.
[$sel:id:UpdateTrafficPolicyInstance'] :: UpdateTrafficPolicyInstance -> Text

-- | The TTL that you want Amazon Route 53 to assign to all of the updated
--   resource record sets.
[$sel:ttl:UpdateTrafficPolicyInstance'] :: UpdateTrafficPolicyInstance -> Natural

-- | The ID of the traffic policy that you want Amazon Route 53 to use to
--   update resource record sets for the specified traffic policy instance.
[$sel:trafficPolicyId:UpdateTrafficPolicyInstance'] :: UpdateTrafficPolicyInstance -> Text

-- | The version of the traffic policy that you want Amazon Route 53 to use
--   to update resource record sets for the specified traffic policy
--   instance.
[$sel:trafficPolicyVersion:UpdateTrafficPolicyInstance'] :: UpdateTrafficPolicyInstance -> Natural

-- | Create a value of <a>UpdateTrafficPolicyInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:UpdateTrafficPolicyInstance'</a>,
--   <a>updateTrafficPolicyInstance_id</a> - The ID of the traffic policy
--   instance that you want to update.
--   
--   <a>$sel:ttl:UpdateTrafficPolicyInstance'</a>,
--   <a>updateTrafficPolicyInstance_ttl</a> - The TTL that you want Amazon
--   Route 53 to assign to all of the updated resource record sets.
--   
--   <a>$sel:trafficPolicyId:UpdateTrafficPolicyInstance'</a>,
--   <a>updateTrafficPolicyInstance_trafficPolicyId</a> - The ID of the
--   traffic policy that you want Amazon Route 53 to use to update resource
--   record sets for the specified traffic policy instance.
--   
--   <a>$sel:trafficPolicyVersion:UpdateTrafficPolicyInstance'</a>,
--   <a>updateTrafficPolicyInstance_trafficPolicyVersion</a> - The version
--   of the traffic policy that you want Amazon Route 53 to use to update
--   resource record sets for the specified traffic policy instance.
newUpdateTrafficPolicyInstance :: Text -> Natural -> Text -> Natural -> UpdateTrafficPolicyInstance

-- | The ID of the traffic policy instance that you want to update.
updateTrafficPolicyInstance_id :: Lens' UpdateTrafficPolicyInstance Text

-- | The TTL that you want Amazon Route 53 to assign to all of the updated
--   resource record sets.
updateTrafficPolicyInstance_ttl :: Lens' UpdateTrafficPolicyInstance Natural

-- | The ID of the traffic policy that you want Amazon Route 53 to use to
--   update resource record sets for the specified traffic policy instance.
updateTrafficPolicyInstance_trafficPolicyId :: Lens' UpdateTrafficPolicyInstance Text

-- | The version of the traffic policy that you want Amazon Route 53 to use
--   to update resource record sets for the specified traffic policy
--   instance.
updateTrafficPolicyInstance_trafficPolicyVersion :: Lens' UpdateTrafficPolicyInstance Natural

-- | A complex type that contains information about the resource record
--   sets that Amazon Route 53 created based on a specified traffic policy.
--   
--   <i>See:</i> <a>newUpdateTrafficPolicyInstanceResponse</a> smart
--   constructor.
data UpdateTrafficPolicyInstanceResponse
UpdateTrafficPolicyInstanceResponse' :: Int -> TrafficPolicyInstance -> UpdateTrafficPolicyInstanceResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateTrafficPolicyInstanceResponse'] :: UpdateTrafficPolicyInstanceResponse -> Int

-- | A complex type that contains settings for the updated traffic policy
--   instance.
[$sel:trafficPolicyInstance:UpdateTrafficPolicyInstanceResponse'] :: UpdateTrafficPolicyInstanceResponse -> TrafficPolicyInstance

-- | Create a value of <a>UpdateTrafficPolicyInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateTrafficPolicyInstanceResponse'</a>,
--   <a>updateTrafficPolicyInstanceResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:trafficPolicyInstance:UpdateTrafficPolicyInstanceResponse'</a>,
--   <a>updateTrafficPolicyInstanceResponse_trafficPolicyInstance</a> - A
--   complex type that contains settings for the updated traffic policy
--   instance.
newUpdateTrafficPolicyInstanceResponse :: Int -> TrafficPolicyInstance -> UpdateTrafficPolicyInstanceResponse

-- | The response's http status code.
updateTrafficPolicyInstanceResponse_httpStatus :: Lens' UpdateTrafficPolicyInstanceResponse Int

-- | A complex type that contains settings for the updated traffic policy
--   instance.
updateTrafficPolicyInstanceResponse_trafficPolicyInstance :: Lens' UpdateTrafficPolicyInstanceResponse TrafficPolicyInstance
instance GHC.Generics.Generic Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance
instance GHC.Show.Show Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance
instance GHC.Read.Read Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance
instance GHC.Classes.Eq Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance
instance GHC.Generics.Generic Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstanceResponse
instance GHC.Show.Show Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstanceResponse
instance GHC.Read.Read Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstanceResponse
instance GHC.Classes.Eq Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstanceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance
instance Control.DeepSeq.NFData Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstanceResponse
instance Data.Hashable.Class.Hashable Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance
instance Control.DeepSeq.NFData Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance
instance Network.AWS.Data.XML.ToElement Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance
instance Network.AWS.Data.Path.ToPath Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance
instance Network.AWS.Data.Query.ToQuery Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance
instance Network.AWS.Data.XML.ToXML Network.AWS.Route53.UpdateTrafficPolicyInstance.UpdateTrafficPolicyInstance


module Network.AWS.Route53.Lens

-- | The limit that you want to get. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
getHostedZoneLimit_type :: Lens' GetHostedZoneLimit HostedZoneLimitType

-- | The ID of the hosted zone that you want to get a limit for.
getHostedZoneLimit_hostedZoneId :: Lens' GetHostedZoneLimit ResourceId

-- | The response's http status code.
getHostedZoneLimitResponse_httpStatus :: Lens' GetHostedZoneLimitResponse Int

-- | The current setting for the specified limit. For example, if you
--   specified <tt>MAX_RRSETS_BY_ZONE</tt> for the value of <tt>Type</tt>
--   in the request, the value of <tt>Limit</tt> is the maximum number of
--   records that you can create in the specified hosted zone.
getHostedZoneLimitResponse_limit :: Lens' GetHostedZoneLimitResponse HostedZoneLimit

-- | The current number of entities that you have created of the specified
--   type. For example, if you specified <tt>MAX_RRSETS_BY_ZONE</tt> for
--   the value of <tt>Type</tt> in the request, the value of <tt>Count</tt>
--   is the current number of records that you have created in the
--   specified hosted zone.
getHostedZoneLimitResponse_count :: Lens' GetHostedZoneLimitResponse Natural

-- | <i>Optional:</i> A comment about the association request.
associateVPCWithHostedZone_comment :: Lens' AssociateVPCWithHostedZone (Maybe Text)

-- | The ID of the private hosted zone that you want to associate an Amazon
--   VPC with.
--   
--   Note that you can't associate a VPC with a hosted zone that doesn't
--   have an existing VPC association.
associateVPCWithHostedZone_hostedZoneId :: Lens' AssociateVPCWithHostedZone ResourceId

-- | A complex type that contains information about the VPC that you want
--   to associate with a private hosted zone.
associateVPCWithHostedZone_vpc :: Lens' AssociateVPCWithHostedZone VPC

-- | The response's http status code.
associateVPCWithHostedZoneResponse_httpStatus :: Lens' AssociateVPCWithHostedZoneResponse Int

-- | A complex type that describes the changes made to your hosted zone.
associateVPCWithHostedZoneResponse_changeInfo :: Lens' AssociateVPCWithHostedZoneResponse ChangeInfo

-- | The ID of the traffic policy that you want to delete.
deleteTrafficPolicy_id :: Lens' DeleteTrafficPolicy Text

-- | The version number of the traffic policy that you want to delete.
deleteTrafficPolicy_version :: Lens' DeleteTrafficPolicy Natural

-- | The response's http status code.
deleteTrafficPolicyResponse_httpStatus :: Lens' DeleteTrafficPolicyResponse Int

-- | A unique string used to identify a hosted zone.
disableHostedZoneDNSSEC_hostedZoneId :: Lens' DisableHostedZoneDNSSEC ResourceId

-- | The response's http status code.
disableHostedZoneDNSSECResponse_httpStatus :: Lens' DisableHostedZoneDNSSECResponse Int

-- | Undocumented member.
disableHostedZoneDNSSECResponse_changeInfo :: Lens' DisableHostedZoneDNSSECResponse ChangeInfo

-- | A unique string that identifies the request.
createKeySigningKey_callerReference :: Lens' CreateKeySigningKey Text

-- | The unique string (ID) used to identify a hosted zone.
createKeySigningKey_hostedZoneId :: Lens' CreateKeySigningKey ResourceId

-- | The Amazon resource name (ARN) for a customer managed customer master
--   key (CMK) in Key Management Service (KMS). The
--   <tt>KeyManagementServiceArn</tt> must be unique for each key-signing
--   key (KSK) in a single hosted zone. To see an example of
--   <tt>KeyManagementServiceArn</tt> that grants the correct permissions
--   for DNSSEC, scroll down to <b>Example</b>.
--   
--   You must configure the customer managed CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with a customer managed CMK in KMS,
--   see <a>Key Management Service concepts</a>.
createKeySigningKey_keyManagementServiceArn :: Lens' CreateKeySigningKey Text

-- | A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
createKeySigningKey_name :: Lens' CreateKeySigningKey Text

-- | A string specifying the initial status of the key-signing key (KSK).
--   You can set the value to <tt>ACTIVE</tt> or <tt>INACTIVE</tt>.
createKeySigningKey_status :: Lens' CreateKeySigningKey Text

-- | The response's http status code.
createKeySigningKeyResponse_httpStatus :: Lens' CreateKeySigningKeyResponse Int

-- | Undocumented member.
createKeySigningKeyResponse_changeInfo :: Lens' CreateKeySigningKeyResponse ChangeInfo

-- | The key-signing key (KSK) that the request creates.
createKeySigningKeyResponse_keySigningKey :: Lens' CreateKeySigningKeyResponse KeySigningKey

-- | The unique URL representing the new key-signing key (KSK).
createKeySigningKeyResponse_location :: Lens' CreateKeySigningKeyResponse Text

-- | The response's http status code.
getCheckerIpRangesResponse_httpStatus :: Lens' GetCheckerIpRangesResponse Int

-- | A complex type that contains sorted list of IP ranges in CIDR format
--   for Amazon Route 53 health checkers.
getCheckerIpRangesResponse_checkerIpRanges :: Lens' GetCheckerIpRangesResponse [Text]

-- | The ID of the traffic policy instance that you want to get information
--   about.
getTrafficPolicyInstance_id :: Lens' GetTrafficPolicyInstance Text

-- | The response's http status code.
getTrafficPolicyInstanceResponse_httpStatus :: Lens' GetTrafficPolicyInstanceResponse Int

-- | A complex type that contains settings for the traffic policy instance.
getTrafficPolicyInstanceResponse_trafficPolicyInstance :: Lens' GetTrafficPolicyInstanceResponse TrafficPolicyInstance

-- | The ID for the health check for which you want the last failure
--   reason. When you created the health check, <tt>CreateHealthCheck</tt>
--   returned the ID in the response, in the <tt>HealthCheckId</tt>
--   element.
--   
--   If you want to get the last failure reason for a calculated health
--   check, you must use the Amazon Route 53 console or the CloudWatch
--   console. You can't use <tt>GetHealthCheckLastFailureReason</tt> for a
--   calculated health check.
getHealthCheckLastFailureReason_healthCheckId :: Lens' GetHealthCheckLastFailureReason Text

-- | The response's http status code.
getHealthCheckLastFailureReasonResponse_httpStatus :: Lens' GetHealthCheckLastFailureReasonResponse Int

-- | A list that contains one <tt>Observation</tt> element for each Amazon
--   Route 53 health checker that is reporting a last failure reason.
getHealthCheckLastFailureReasonResponse_healthCheckObservations :: Lens' GetHealthCheckLastFailureReasonResponse [HealthCheckObservation]

-- | The ID of the reusable delegation set that you want to delete.
deleteReusableDelegationSet_id :: Lens' DeleteReusableDelegationSet ResourceId

-- | The response's http status code.
deleteReusableDelegationSetResponse_httpStatus :: Lens' DeleteReusableDelegationSetResponse Int

-- | (Optional) For your first request to <tt>ListHostedZonesByName</tt>,
--   do not include the <tt>hostedzoneid</tt> parameter.
--   
--   If you have more hosted zones than the value of <tt>maxitems</tt>,
--   <tt>ListHostedZonesByName</tt> returns only the first
--   <tt>maxitems</tt> hosted zones. To get the next group of
--   <tt>maxitems</tt> hosted zones, submit another request to
--   <tt>ListHostedZonesByName</tt> and include both <tt>dnsname</tt> and
--   <tt>hostedzoneid</tt> parameters. For the value of
--   <tt>hostedzoneid</tt>, specify the value of the
--   <tt>NextHostedZoneId</tt> element from the previous response.
listHostedZonesByName_hostedZoneId :: Lens' ListHostedZonesByName (Maybe ResourceId)

-- | The maximum number of hosted zones to be included in the response body
--   for this request. If you have more than <tt>maxitems</tt> hosted
--   zones, then the value of the <tt>IsTruncated</tt> element in the
--   response is true, and the values of <tt>NextDNSName</tt> and
--   <tt>NextHostedZoneId</tt> specify the first hosted zone in the next
--   group of <tt>maxitems</tt> hosted zones.
listHostedZonesByName_maxItems :: Lens' ListHostedZonesByName (Maybe Text)

-- | (Optional) For your first request to <tt>ListHostedZonesByName</tt>,
--   include the <tt>dnsname</tt> parameter only if you want to specify the
--   name of the first hosted zone in the response. If you don't include
--   the <tt>dnsname</tt> parameter, Amazon Route 53 returns all of the
--   hosted zones that were created by the current Amazon Web Services
--   account, in ASCII order. For subsequent requests, include both
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters. For
--   <tt>dnsname</tt>, specify the value of <tt>NextDNSName</tt> from the
--   previous response.
listHostedZonesByName_dNSName :: Lens' ListHostedZonesByName (Maybe Text)

-- | The ID that Amazon Route 53 assigned to the hosted zone when you
--   created it.
listHostedZonesByNameResponse_hostedZoneId :: Lens' ListHostedZonesByNameResponse (Maybe ResourceId)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextHostedZoneId</tt> identifies the first hosted zone in the next
--   group of <tt>maxitems</tt> hosted zones. Call
--   <tt>ListHostedZonesByName</tt> again and specify the value of
--   <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters, respectively.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
listHostedZonesByNameResponse_nextHostedZoneId :: Lens' ListHostedZonesByNameResponse (Maybe ResourceId)

-- | For the second and subsequent calls to <tt>ListHostedZonesByName</tt>,
--   <tt>DNSName</tt> is the value that you specified for the
--   <tt>dnsname</tt> parameter in the request that produced the current
--   response.
listHostedZonesByNameResponse_dNSName :: Lens' ListHostedZonesByNameResponse (Maybe Text)

-- | If <tt>IsTruncated</tt> is true, the value of <tt>NextDNSName</tt> is
--   the name of the first hosted zone in the next group of
--   <tt>maxitems</tt> hosted zones. Call <tt>ListHostedZonesByName</tt>
--   again and specify the value of <tt>NextDNSName</tt> and
--   <tt>NextHostedZoneId</tt> in the <tt>dnsname</tt> and
--   <tt>hostedzoneid</tt> parameters, respectively.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
listHostedZonesByNameResponse_nextDNSName :: Lens' ListHostedZonesByNameResponse (Maybe Text)

-- | The response's http status code.
listHostedZonesByNameResponse_httpStatus :: Lens' ListHostedZonesByNameResponse Int

-- | A complex type that contains general information about the hosted
--   zone.
listHostedZonesByNameResponse_hostedZones :: Lens' ListHostedZonesByNameResponse [HostedZone]

-- | A flag that indicates whether there are more hosted zones to be
--   listed. If the response was truncated, you can get the next group of
--   <tt>maxitems</tt> hosted zones by calling
--   <tt>ListHostedZonesByName</tt> again and specifying the values of
--   <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> elements in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters.
listHostedZonesByNameResponse_isTruncated :: Lens' ListHostedZonesByNameResponse Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListHostedZonesByName</tt> that produced the current
--   response.
listHostedZonesByNameResponse_maxItems :: Lens' ListHostedZonesByNameResponse Text

-- | A unique string used to identify a hosted zone.
activateKeySigningKey_hostedZoneId :: Lens' ActivateKeySigningKey ResourceId

-- | A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
activateKeySigningKey_name :: Lens' ActivateKeySigningKey Text

-- | The response's http status code.
activateKeySigningKeyResponse_httpStatus :: Lens' ActivateKeySigningKeyResponse Int

-- | Undocumented member.
activateKeySigningKeyResponse_changeInfo :: Lens' ActivateKeySigningKeyResponse ChangeInfo

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more reusable delegation sets. To get another
--   group, submit another <tt>ListReusableDelegationSets</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first reusable delegation set that Amazon Route 53 will return if you
--   submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more reusable delegation sets to get.
listReusableDelegationSets_marker :: Lens' ListReusableDelegationSets (Maybe Text)

-- | The number of reusable delegation sets that you want Amazon Route 53
--   to return in the response to this request. If you specify a value
--   greater than 100, Route 53 returns only the first 100 reusable
--   delegation sets.
listReusableDelegationSets_maxItems :: Lens' ListReusableDelegationSets (Maybe Text)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextMarker</tt> identifies the next reusable delegation set that
--   Amazon Route 53 will return if you submit another
--   <tt>ListReusableDelegationSets</tt> request and specify the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
listReusableDelegationSetsResponse_nextMarker :: Lens' ListReusableDelegationSetsResponse (Maybe Text)

-- | The response's http status code.
listReusableDelegationSetsResponse_httpStatus :: Lens' ListReusableDelegationSetsResponse Int

-- | A complex type that contains one <tt>DelegationSet</tt> element for
--   each reusable delegation set that was created by the current Amazon
--   Web Services account.
listReusableDelegationSetsResponse_delegationSets :: Lens' ListReusableDelegationSetsResponse [DelegationSet]

-- | For the second and subsequent calls to
--   <tt>ListReusableDelegationSets</tt>, <tt>Marker</tt> is the value that
--   you specified for the <tt>marker</tt> parameter in the request that
--   produced the current response.
listReusableDelegationSetsResponse_marker :: Lens' ListReusableDelegationSetsResponse Text

-- | A flag that indicates whether there are more reusable delegation sets
--   to be listed.
listReusableDelegationSetsResponse_isTruncated :: Lens' ListReusableDelegationSetsResponse Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListReusableDelegationSets</tt> that produced the
--   current response.
listReusableDelegationSetsResponse_maxItems :: Lens' ListReusableDelegationSetsResponse Text

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
listTagsForResource_resourceType :: Lens' ListTagsForResource TagResourceType

-- | The ID of the resource for which you want to retrieve tags.
listTagsForResource_resourceId :: Lens' ListTagsForResource Text

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | A <tt>ResourceTagSet</tt> containing tags associated with the
--   specified resource.
listTagsForResourceResponse_resourceTagSet :: Lens' ListTagsForResourceResponse ResourceTagSet

-- | (Optional) If you want to list the query logging configuration that is
--   associated with a hosted zone, specify the ID in
--   <tt>HostedZoneId</tt>.
--   
--   If you don't specify a hosted zone ID,
--   <tt>ListQueryLoggingConfigs</tt> returns all of the configurations
--   that are associated with the current Amazon Web Services account.
listQueryLoggingConfigs_hostedZoneId :: Lens' ListQueryLoggingConfigs (Maybe ResourceId)

-- | (Optional) If the current Amazon Web Services account has more than
--   <tt>MaxResults</tt> query logging configurations, use
--   <tt>NextToken</tt> to get the second and subsequent pages of results.
--   
--   For the first <tt>ListQueryLoggingConfigs</tt> request, omit this
--   value.
--   
--   For the second and subsequent requests, get the value of
--   <tt>NextToken</tt> from the previous response and specify that value
--   for <tt>NextToken</tt> in the request.
listQueryLoggingConfigs_nextToken :: Lens' ListQueryLoggingConfigs (Maybe Text)

-- | (Optional) The maximum number of query logging configurations that you
--   want Amazon Route 53 to return in response to the current request. If
--   the current Amazon Web Services account has more than
--   <tt>MaxResults</tt> configurations, use the value of <a>NextToken</a>
--   in the response to get the next page of results.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Route 53 returns
--   up to 100 configurations.
listQueryLoggingConfigs_maxResults :: Lens' ListQueryLoggingConfigs (Maybe Text)

-- | If a response includes the last of the query logging configurations
--   that are associated with the current Amazon Web Services account,
--   <tt>NextToken</tt> doesn't appear in the response.
--   
--   If a response doesn't include the last of the configurations, you can
--   get more configurations by submitting another
--   <a>ListQueryLoggingConfigs</a> request. Get the value of
--   <tt>NextToken</tt> that Amazon Route 53 returned in the previous
--   response and include it in <tt>NextToken</tt> in the next request.
listQueryLoggingConfigsResponse_nextToken :: Lens' ListQueryLoggingConfigsResponse (Maybe Text)

-- | The response's http status code.
listQueryLoggingConfigsResponse_httpStatus :: Lens' ListQueryLoggingConfigsResponse Int

-- | An array that contains one <a>QueryLoggingConfig</a> element for each
--   configuration for DNS query logging that is associated with the
--   current Amazon Web Services account.
listQueryLoggingConfigsResponse_queryLoggingConfigs :: Lens' ListQueryLoggingConfigsResponse [QueryLoggingConfig]

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>trafficpolicyinstancetype</tt>, specify the value of
--   <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous response,
--   which is the type of the first traffic policy instance in the next
--   group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstances_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstances (Maybe RRType)

-- | The maximum number of traffic policy instances that you want Amazon
--   Route 53 to return in response to a
--   <tt>ListTrafficPolicyInstances</tt> request. If you have more than
--   <tt>MaxItems</tt> traffic policy instances, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first traffic
--   policy instance in the next group of <tt>MaxItems</tt> traffic policy
--   instances.
listTrafficPolicyInstances_maxItems :: Lens' ListTrafficPolicyInstances (Maybe Text)

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>HostedZoneId</tt>, specify the value of
--   <tt>HostedZoneIdMarker</tt> from the previous response, which is the
--   hosted zone ID of the first traffic policy instance in the next group
--   of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstances_hostedZoneIdMarker :: Lens' ListTrafficPolicyInstances (Maybe ResourceId)

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>trafficpolicyinstancename</tt>, specify the value of
--   <tt>TrafficPolicyInstanceNameMarker</tt> from the previous response,
--   which is the name of the first traffic policy instance in the next
--   group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstances_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstances (Maybe Text)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance that Amazon Route 53 will return if you submit another
--   <tt>ListTrafficPolicyInstances</tt> request.
listTrafficPolicyInstancesResponse_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstancesResponse (Maybe RRType)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, <tt>HostedZoneIdMarker</tt>
--   is the ID of the hosted zone of the first traffic policy instance that
--   Route 53 will return if you submit another
--   <tt>ListTrafficPolicyInstances</tt> request.
listTrafficPolicyInstancesResponse_hostedZoneIdMarker :: Lens' ListTrafficPolicyInstancesResponse (Maybe ResourceId)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance that Route 53 will return if you submit
--   another <tt>ListTrafficPolicyInstances</tt> request.
listTrafficPolicyInstancesResponse_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstancesResponse (Maybe Text)

-- | The response's http status code.
listTrafficPolicyInstancesResponse_httpStatus :: Lens' ListTrafficPolicyInstancesResponse Int

-- | A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
listTrafficPolicyInstancesResponse_trafficPolicyInstances :: Lens' ListTrafficPolicyInstancesResponse [TrafficPolicyInstance]

-- | A flag that indicates whether there are more traffic policy instances
--   to be listed. If the response was truncated, you can get more traffic
--   policy instances by calling <tt>ListTrafficPolicyInstances</tt> again
--   and specifying the values of the <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> in the corresponding request
--   parameters.
listTrafficPolicyInstancesResponse_isTruncated :: Lens' ListTrafficPolicyInstancesResponse Bool

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the call to <tt>ListTrafficPolicyInstances</tt> that produced the
--   current response.
listTrafficPolicyInstancesResponse_maxItems :: Lens' ListTrafficPolicyInstancesResponse Text

-- | The ID of the hosted zone that you want Amazon Route 53 to create
--   resource record sets in by using the configuration in a traffic
--   policy.
createTrafficPolicyInstance_hostedZoneId :: Lens' CreateTrafficPolicyInstance ResourceId

-- | The domain name (such as example.com) or subdomain name (such as
--   www.example.com) for which Amazon Route 53 responds to DNS queries by
--   using the resource record sets that Route 53 creates for this traffic
--   policy instance.
createTrafficPolicyInstance_name :: Lens' CreateTrafficPolicyInstance Text

-- | (Optional) The TTL that you want Amazon Route 53 to assign to all of
--   the resource record sets that it creates in the specified hosted zone.
createTrafficPolicyInstance_ttl :: Lens' CreateTrafficPolicyInstance Natural

-- | The ID of the traffic policy that you want to use to create resource
--   record sets in the specified hosted zone.
createTrafficPolicyInstance_trafficPolicyId :: Lens' CreateTrafficPolicyInstance Text

-- | The version of the traffic policy that you want to use to create
--   resource record sets in the specified hosted zone.
createTrafficPolicyInstance_trafficPolicyVersion :: Lens' CreateTrafficPolicyInstance Natural

-- | The response's http status code.
createTrafficPolicyInstanceResponse_httpStatus :: Lens' CreateTrafficPolicyInstanceResponse Int

-- | A complex type that contains settings for the new traffic policy
--   instance.
createTrafficPolicyInstanceResponse_trafficPolicyInstance :: Lens' CreateTrafficPolicyInstanceResponse TrafficPolicyInstance

-- | A unique URL that represents a new traffic policy instance.
createTrafficPolicyInstanceResponse_location :: Lens' CreateTrafficPolicyInstanceResponse Text

-- | The ID of the change batch request. The value that you specify here is
--   the value that <tt>ChangeResourceRecordSets</tt> returned in the
--   <tt>Id</tt> element when you submitted the request.
getChange_id :: Lens' GetChange ResourceId

-- | The response's http status code.
getChangeResponse_httpStatus :: Lens' GetChangeResponse Int

-- | A complex type that contains information about the specified change
--   batch.
getChangeResponse_changeInfo :: Lens' GetChangeResponse ChangeInfo

-- | The ID of the hosted zone that contains the resource record sets that
--   you want to change.
changeResourceRecordSets_hostedZoneId :: Lens' ChangeResourceRecordSets ResourceId

-- | A complex type that contains an optional comment and the
--   <tt>Changes</tt> element.
changeResourceRecordSets_changeBatch :: Lens' ChangeResourceRecordSets ChangeBatch

-- | The response's http status code.
changeResourceRecordSetsResponse_httpStatus :: Lens' ChangeResourceRecordSetsResponse Int

-- | A complex type that contains information about changes made to your
--   hosted zone.
--   
--   This element contains an ID that you use when performing a
--   <a>GetChange</a> action to get detailed information about the change.
changeResourceRecordSetsResponse_changeInfo :: Lens' ChangeResourceRecordSetsResponse ChangeInfo

-- | The ID of the health check that you want to delete.
deleteHealthCheck_healthCheckId :: Lens' DeleteHealthCheck Text

-- | The response's http status code.
deleteHealthCheckResponse_httpStatus :: Lens' DeleteHealthCheckResponse Int

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Amazon Route 53 to change the current status of the endpoint
--   from unhealthy to healthy or vice versa. For more information, see
--   <a>How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a>
--   in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
updateHealthCheck_failureThreshold :: Lens' UpdateHealthCheck (Maybe Natural)

-- | The IPv4 or IPv6 IP address for the endpoint that you want Amazon
--   Route 53 to perform health checks on. If you don't specify a value for
--   <tt>IPAddress</tt>, Route 53 sends a DNS request to resolve the domain
--   name that you specify in <tt>FullyQualifiedDomainName</tt> at the
--   interval that you specify in <tt>RequestInterval</tt>. Using an IP
--   address that is returned by DNS, Route 53 then checks the health of
--   the endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance never changes. For more information, see
--   the applicable documentation:
--   
--   <ul>
--   <li>Linux: <a>Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i></li>
--   <li>Windows: <a>Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2
--   User Guide for Windows Instances</i></li>
--   </ul>
--   
--   If a health check already has a value for <tt>IPAddress</tt>, you can
--   change the value. However, you can't update an existing health check
--   to add or remove the value of <tt>IPAddress</tt>.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
updateHealthCheck_iPAddress :: Lens' UpdateHealthCheck (Maybe Text)

-- | Specify whether you want Amazon Route 53 to send the value of
--   <tt>FullyQualifiedDomainName</tt> to the endpoint in the
--   <tt>client_hello</tt> message during <tt>TLS</tt> negotiation. This
--   allows the endpoint to respond to <tt>HTTPS</tt> health check requests
--   with the applicable SSL/TLS certificate.
--   
--   Some endpoints require that HTTPS requests include the host name in
--   the <tt>client_hello</tt> message. If you don't enable SNI, the status
--   of the health check will be SSL alert <tt>handshake_failure</tt>. A
--   health check can also have that status for other reasons. If SNI is
--   enabled and you're still getting the error, check the SSL/TLS
--   configuration on your endpoint and confirm that your certificate is
--   valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
updateHealthCheck_enableSNI :: Lens' UpdateHealthCheck (Maybe Bool)

-- | Stops Route 53 from performing health checks. When you disable a
--   health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
updateHealthCheck_disabled :: Lens' UpdateHealthCheck (Maybe Bool)

-- | A complex type that contains one <tt>ResettableElementName</tt>
--   element for each element that you want to reset to the default value.
--   Valid values for <tt>ResettableElementName</tt> include the following:
--   
--   <ul>
--   <li><tt>ChildHealthChecks</tt>: Amazon Route 53 resets
--   <a>ChildHealthChecks</a> to null.</li>
--   <li><tt>FullyQualifiedDomainName</tt>: Route 53 resets
--   <a>FullyQualifiedDomainName</a>. to null.</li>
--   <li><tt>Regions</tt>: Route 53 resets the <a>Regions</a> list to the
--   default set of regions.</li>
--   <li><tt>ResourcePath</tt>: Route 53 resets <a>ResourcePath</a> to
--   null.</li>
--   </ul>
updateHealthCheck_resetElements :: Lens' UpdateHealthCheck (Maybe [ResettableElementName])

-- | If the value of <tt>Type</tt> is <tt>HTTP_STR_MATCH</tt> or
--   <tt>HTTPS_STR_MATCH</tt>, the string that you want Amazon Route 53 to
--   search for in the response body from the specified resource. If the
--   string appears in the response body, Route 53 considers the resource
--   healthy. (You can't change the value of <tt>Type</tt> when you update
--   a health check.)
updateHealthCheck_searchString :: Lens' UpdateHealthCheck (Maybe Text)

-- | The number of child health checks that are associated with a
--   <tt>CALCULATED</tt> health that Amazon Route 53 must consider healthy
--   for the <tt>CALCULATED</tt> health check to be considered healthy. To
--   specify the child health checks that you want to associate with a
--   <tt>CALCULATED</tt> health check, use the <tt>ChildHealthChecks</tt>
--   and <tt>ChildHealthCheck</tt> elements.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
updateHealthCheck_healthThreshold :: Lens' UpdateHealthCheck (Maybe Natural)

-- | A complex type that contains one <tt>Region</tt> element for each
--   region that you want Amazon Route 53 health checkers to check the
--   specified endpoint from.
updateHealthCheck_regions :: Lens' UpdateHealthCheck (Maybe (NonEmpty HealthCheckRegion))

-- | The path that you want Amazon Route 53 to request when performing
--   health checks. The path can be any value for which your endpoint will
--   return an HTTP status code of 2xx or 3xx when the endpoint is healthy,
--   for example the file /docs/route53-health-check.html. You can also
--   include query string parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
--   
--   Specify this value only if you want to change it.
updateHealthCheck_resourcePath :: Lens' UpdateHealthCheck (Maybe Text)

-- | When CloudWatch has insufficient data about the metric to determine
--   the alarm state, the status that you want Amazon Route 53 to assign to
--   the health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time CloudWatch had sufficient data to determine
--   the alarm state. For new health checks that have no last known status,
--   the default status for the health check is healthy.</li>
--   </ul>
updateHealthCheck_insufficientDataHealthStatus :: Lens' UpdateHealthCheck (Maybe InsufficientDataHealthStatus)

-- | A sequential counter that Amazon Route 53 sets to <tt>1</tt> when you
--   create a health check and increments by 1 each time you update
--   settings for the health check.
--   
--   We recommend that you use <tt>GetHealthCheck</tt> or
--   <tt>ListHealthChecks</tt> to get the current value of
--   <tt>HealthCheckVersion</tt> for the health check that you want to
--   update, and that you include that value in your
--   <tt>UpdateHealthCheck</tt> request. This prevents Route 53 from
--   overwriting an intervening update:
--   
--   <ul>
--   <li>If the value in the <tt>UpdateHealthCheck</tt> request matches the
--   value of <tt>HealthCheckVersion</tt> in the health check, Route 53
--   updates the health check with the new settings.</li>
--   <li>If the value of <tt>HealthCheckVersion</tt> in the health check is
--   greater, the health check was changed after you got the version
--   number. Route 53 does not update the health check, and it returns a
--   <tt>HealthCheckVersionMismatch</tt> error.</li>
--   </ul>
updateHealthCheck_healthCheckVersion :: Lens' UpdateHealthCheck (Maybe Natural)

-- | A complex type that identifies the CloudWatch alarm that you want
--   Amazon Route 53 health checkers to use to determine whether the
--   specified health check is healthy.
updateHealthCheck_alarmIdentifier :: Lens' UpdateHealthCheck (Maybe AlarmIdentifier)

-- | Specify whether you want Amazon Route 53 to invert the status of a
--   health check, for example, to consider a health check unhealthy when
--   it otherwise would be considered healthy.
updateHealthCheck_inverted :: Lens' UpdateHealthCheck (Maybe Bool)

-- | Amazon Route 53 behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   If a health check already has a value for <tt>IPAddress</tt>, you can
--   change the value. However, you can't update an existing health check
--   to add or remove the value of <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends health check requests to the specified IPv4 or IPv6
--   address and passes the value of <tt>FullyQualifiedDomainName</tt> in
--   the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <i><tt>FullyQualifiedDomainName</tt>:<tt>Port</tt></i> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the above cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 sends a
--   DNS request to the domain that you specify in
--   <tt>FullyQualifiedDomainName</tt> at the interval you specify in
--   <tt>RequestInterval</tt>. Using an IPv4 address that is returned by
--   DNS, Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   <tt>us-east-2-www.example.com</tt>), not the name of the resource
--   record sets (www.example.com).
--   
--   In this configuration, if the value of
--   <tt>FullyQualifiedDomainName</tt> matches the name of the resource
--   record sets and you then associate the health check with those
--   resource record sets, health check results will be unpredictable.
--   
--   In addition, if the value of <tt>Type</tt> is <tt>HTTP</tt>,
--   <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or <tt>HTTPS_STR_MATCH</tt>,
--   Route 53 passes the value of <tt>FullyQualifiedDomainName</tt> in the
--   <tt>Host</tt> header, as it does when you specify a value for
--   <tt>IPAddress</tt>. If the value of <tt>Type</tt> is <tt>TCP</tt>,
--   Route 53 doesn't pass a <tt>Host</tt> header.
updateHealthCheck_fullyQualifiedDomainName :: Lens' UpdateHealthCheck (Maybe Text)

-- | A complex type that contains one <tt>ChildHealthCheck</tt> element for
--   each health check that you want to associate with a
--   <tt>CALCULATED</tt> health check.
updateHealthCheck_childHealthChecks :: Lens' UpdateHealthCheck (Maybe [Text])

-- | The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
updateHealthCheck_port :: Lens' UpdateHealthCheck (Maybe Natural)

-- | The ID for the health check for which you want detailed information.
--   When you created the health check, <tt>CreateHealthCheck</tt> returned
--   the ID in the response, in the <tt>HealthCheckId</tt> element.
updateHealthCheck_healthCheckId :: Lens' UpdateHealthCheck Text

-- | The response's http status code.
updateHealthCheckResponse_httpStatus :: Lens' UpdateHealthCheckResponse Int

-- | A complex type that contains the response to an
--   <tt>UpdateHealthCheck</tt> request.
updateHealthCheckResponse_healthCheck :: Lens' UpdateHealthCheckResponse HealthCheck

-- | If you want to associate a reusable delegation set with this hosted
--   zone, the ID that Amazon Route 53 assigned to the reusable delegation
--   set when you created it. For more information about reusable
--   delegation sets, see <a>CreateReusableDelegationSet</a>.
createHostedZone_delegationSetId :: Lens' CreateHostedZone (Maybe ResourceId)

-- | (Private hosted zones only) A complex type that contains information
--   about the Amazon VPC that you're associating with this hosted zone.
--   
--   You can specify only one Amazon VPC when you create a private hosted
--   zone. To associate additional Amazon VPCs with the hosted zone, use
--   <a>AssociateVPCWithHostedZone</a> after you create a hosted zone.
createHostedZone_vpc :: Lens' CreateHostedZone (Maybe VPC)

-- | (Optional) A complex type that contains the following optional values:
--   
--   <ul>
--   <li>For public and private hosted zones, an optional comment</li>
--   <li>For private hosted zones, an optional <tt>PrivateZone</tt>
--   element</li>
--   </ul>
--   
--   If you don't specify a comment or the <tt>PrivateZone</tt> element,
--   omit <tt>HostedZoneConfig</tt> and the other elements.
createHostedZone_hostedZoneConfig :: Lens' CreateHostedZone (Maybe HostedZoneConfig)

-- | The name of the domain. Specify a fully qualified domain name, for
--   example, <i>www.example.com</i>. The trailing dot is optional; Amazon
--   Route 53 assumes that the domain name is fully qualified. This means
--   that Route 53 treats <i>www.example.com</i> (without a trailing dot)
--   and <i>www.example.com.</i> (with a trailing dot) as identical.
--   
--   If you're creating a public hosted zone, this is the name you have
--   registered with your DNS registrar. If your domain name is registered
--   with a registrar other than Route 53, change the name servers for your
--   domain to the set of <tt>NameServers</tt> that
--   <tt>CreateHostedZone</tt> returns in <tt>DelegationSet</tt>.
createHostedZone_name :: Lens' CreateHostedZone Text

-- | A unique string that identifies the request and that allows failed
--   <tt>CreateHostedZone</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you submit a
--   <tt>CreateHostedZone</tt> request. <tt>CallerReference</tt> can be any
--   unique string, for example, a date/time stamp.
createHostedZone_callerReference :: Lens' CreateHostedZone Text

-- | A complex type that contains information about an Amazon VPC that you
--   associated with this hosted zone.
createHostedZoneResponse_vpc :: Lens' CreateHostedZoneResponse (Maybe VPC)

-- | The response's http status code.
createHostedZoneResponse_httpStatus :: Lens' CreateHostedZoneResponse Int

-- | A complex type that contains general information about the hosted
--   zone.
createHostedZoneResponse_hostedZone :: Lens' CreateHostedZoneResponse HostedZone

-- | A complex type that contains information about the
--   <tt>CreateHostedZone</tt> request.
createHostedZoneResponse_changeInfo :: Lens' CreateHostedZoneResponse ChangeInfo

-- | A complex type that describes the name servers for this hosted zone.
createHostedZoneResponse_delegationSet :: Lens' CreateHostedZoneResponse DelegationSet

-- | The unique URL representing the new hosted zone.
createHostedZoneResponse_location :: Lens' CreateHostedZoneResponse Text

-- | The ID of the private hosted zone that you want to authorize
--   associating a VPC with.
createVPCAssociationAuthorization_hostedZoneId :: Lens' CreateVPCAssociationAuthorization ResourceId

-- | A complex type that contains the VPC ID and region for the VPC that
--   you want to authorize associating with your hosted zone.
createVPCAssociationAuthorization_vpc :: Lens' CreateVPCAssociationAuthorization VPC

-- | The response's http status code.
createVPCAssociationAuthorizationResponse_httpStatus :: Lens' CreateVPCAssociationAuthorizationResponse Int

-- | The ID of the hosted zone that you authorized associating a VPC with.
createVPCAssociationAuthorizationResponse_hostedZoneId :: Lens' CreateVPCAssociationAuthorizationResponse ResourceId

-- | The VPC that you authorized associating with a hosted zone.
createVPCAssociationAuthorizationResponse_vpc :: Lens' CreateVPCAssociationAuthorizationResponse VPC

-- | <i>Optional</i>: If a response includes a <tt>NextToken</tt> element,
--   there are more VPCs that can be associated with the specified hosted
--   zone. To get the next page of results, submit another request, and
--   include the value of <tt>NextToken</tt> from the response in the
--   <tt>nexttoken</tt> parameter in another
--   <tt>ListVPCAssociationAuthorizations</tt> request.
listVPCAssociationAuthorizations_nextToken :: Lens' ListVPCAssociationAuthorizations (Maybe Text)

-- | <i>Optional</i>: An integer that specifies the maximum number of VPCs
--   that you want Amazon Route 53 to return. If you don't specify a value
--   for <tt>MaxResults</tt>, Route 53 returns up to 50 VPCs per page.
listVPCAssociationAuthorizations_maxResults :: Lens' ListVPCAssociationAuthorizations (Maybe Text)

-- | The ID of the hosted zone for which you want a list of VPCs that can
--   be associated with the hosted zone.
listVPCAssociationAuthorizations_hostedZoneId :: Lens' ListVPCAssociationAuthorizations ResourceId

-- | When the response includes a <tt>NextToken</tt> element, there are
--   more VPCs that can be associated with the specified hosted zone. To
--   get the next page of VPCs, submit another
--   <tt>ListVPCAssociationAuthorizations</tt> request, and include the
--   value of the <tt>NextToken</tt> element from the response in the
--   <tt>nexttoken</tt> request parameter.
listVPCAssociationAuthorizationsResponse_nextToken :: Lens' ListVPCAssociationAuthorizationsResponse (Maybe Text)

-- | The response's http status code.
listVPCAssociationAuthorizationsResponse_httpStatus :: Lens' ListVPCAssociationAuthorizationsResponse Int

-- | The ID of the hosted zone that you can associate the listed VPCs with.
listVPCAssociationAuthorizationsResponse_hostedZoneId :: Lens' ListVPCAssociationAuthorizationsResponse ResourceId

-- | The list of VPCs that are authorized to be associated with the
--   specified hosted zone.
listVPCAssociationAuthorizationsResponse_vPCs :: Lens' ListVPCAssociationAuthorizationsResponse (NonEmpty VPC)

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>trafficpolicyinstancetype</tt>, specify the value
--   of <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance that
--   Amazon Route 53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstancesByPolicy_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstancesByPolicy (Maybe RRType)

-- | The maximum number of traffic policy instances to be included in the
--   response body for this request. If you have more than
--   <tt>MaxItems</tt> traffic policy instances, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first traffic
--   policy instance that Amazon Route 53 will return if you submit another
--   request.
listTrafficPolicyInstancesByPolicy_maxItems :: Lens' ListTrafficPolicyInstancesByPolicy (Maybe Text)

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>hostedzoneid</tt>, specify the value of
--   <tt>HostedZoneIdMarker</tt> from the previous response, which is the
--   hosted zone ID of the first traffic policy instance that Amazon Route
--   53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstancesByPolicy_hostedZoneIdMarker :: Lens' ListTrafficPolicyInstancesByPolicy (Maybe ResourceId)

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>trafficpolicyinstancename</tt>, specify the value
--   of <tt>TrafficPolicyInstanceNameMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance that
--   Amazon Route 53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstancesByPolicy_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstancesByPolicy (Maybe Text)

-- | The ID of the traffic policy for which you want to list traffic policy
--   instances.
listTrafficPolicyInstancesByPolicy_trafficPolicyId :: Lens' ListTrafficPolicyInstancesByPolicy Text

-- | The version of the traffic policy for which you want to list traffic
--   policy instances. The version must be associated with the traffic
--   policy that is specified by <tt>TrafficPolicyId</tt>.
listTrafficPolicyInstancesByPolicy_trafficPolicyVersion :: Lens' ListTrafficPolicyInstancesByPolicy Natural

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance in the next group of <tt>MaxItems</tt> traffic policy
--   instances.
listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstancesByPolicyResponse (Maybe RRType)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, <tt>HostedZoneIdMarker</tt>
--   is the ID of the hosted zone of the first traffic policy instance in
--   the next group of traffic policy instances.
listTrafficPolicyInstancesByPolicyResponse_hostedZoneIdMarker :: Lens' ListTrafficPolicyInstancesByPolicyResponse (Maybe ResourceId)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance in the next group of <tt>MaxItems</tt> traffic
--   policy instances.
listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstancesByPolicyResponse (Maybe Text)

-- | The response's http status code.
listTrafficPolicyInstancesByPolicyResponse_httpStatus :: Lens' ListTrafficPolicyInstancesByPolicyResponse Int

-- | A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstances :: Lens' ListTrafficPolicyInstancesByPolicyResponse [TrafficPolicyInstance]

-- | A flag that indicates whether there are more traffic policy instances
--   to be listed. If the response was truncated, you can get the next
--   group of traffic policy instances by calling
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> again and specifying the
--   values of the <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> elements in the corresponding
--   request parameters.
listTrafficPolicyInstancesByPolicyResponse_isTruncated :: Lens' ListTrafficPolicyInstancesByPolicyResponse Bool

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the call to <tt>ListTrafficPolicyInstancesByPolicy</tt> that produced
--   the current response.
listTrafficPolicyInstancesByPolicyResponse_maxItems :: Lens' ListTrafficPolicyInstancesByPolicyResponse Text

-- | <i>Optional:</i> A comment about the disassociation request.
disassociateVPCFromHostedZone_comment :: Lens' DisassociateVPCFromHostedZone (Maybe Text)

-- | The ID of the private hosted zone that you want to disassociate a VPC
--   from.
disassociateVPCFromHostedZone_hostedZoneId :: Lens' DisassociateVPCFromHostedZone ResourceId

-- | A complex type that contains information about the VPC that you're
--   disassociating from the specified hosted zone.
disassociateVPCFromHostedZone_vpc :: Lens' DisassociateVPCFromHostedZone VPC

-- | The response's http status code.
disassociateVPCFromHostedZoneResponse_httpStatus :: Lens' DisassociateVPCFromHostedZoneResponse Int

-- | A complex type that describes the changes made to the specified
--   private hosted zone.
disassociateVPCFromHostedZoneResponse_changeInfo :: Lens' DisassociateVPCFromHostedZoneResponse ChangeInfo

-- | A unique string that identifies the request and that allows you to
--   retry a failed <tt>CreateHealthCheck</tt> request without the risk of
--   creating two identical health checks:
--   
--   <ul>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> and settings as a previous request, and if
--   the health check doesn't exist, Amazon Route 53 creates the health
--   check. If the health check does exist, Route 53 returns the settings
--   for the existing health check.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> as a deleted health check, regardless of the
--   settings, Route 53 returns a <tt>HealthCheckAlreadyExists</tt>
--   error.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> as an existing health check but with
--   different settings, Route 53 returns a
--   <tt>HealthCheckAlreadyExists</tt> error.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with a unique
--   <tt>CallerReference</tt> but settings identical to an existing health
--   check, Route 53 creates the health check.</li>
--   </ul>
createHealthCheck_callerReference :: Lens' CreateHealthCheck Text

-- | A complex type that contains settings for a new health check.
createHealthCheck_healthCheckConfig :: Lens' CreateHealthCheck HealthCheckConfig

-- | The response's http status code.
createHealthCheckResponse_httpStatus :: Lens' CreateHealthCheckResponse Int

-- | A complex type that contains identifying information about the health
--   check.
createHealthCheckResponse_healthCheck :: Lens' CreateHealthCheckResponse HealthCheck

-- | The unique URL representing the new health check.
createHealthCheckResponse_location :: Lens' CreateHealthCheckResponse Text

-- | When removing authorization to associate a VPC that was created by one
--   Amazon Web Services account with a hosted zone that was created with a
--   different Amazon Web Services account, the ID of the hosted zone.
deleteVPCAssociationAuthorization_hostedZoneId :: Lens' DeleteVPCAssociationAuthorization ResourceId

-- | When removing authorization to associate a VPC that was created by one
--   Amazon Web Services account with a hosted zone that was created with a
--   different Amazon Web Services account, a complex type that includes
--   the ID and region of the VPC.
deleteVPCAssociationAuthorization_vpc :: Lens' DeleteVPCAssociationAuthorization VPC

-- | The response's http status code.
deleteVPCAssociationAuthorizationResponse_httpStatus :: Lens' DeleteVPCAssociationAuthorizationResponse Int

-- | A complex type that contains a list of the tags that you want to
--   delete from the specified health check or hosted zone. You can specify
--   up to 10 keys.
changeTagsForResource_removeTagKeys :: Lens' ChangeTagsForResource (Maybe (NonEmpty Text))

-- | A complex type that contains a list of the tags that you want to add
--   to the specified health check or hosted zone and/or the tags that you
--   want to edit <tt>Value</tt> for.
--   
--   You can add a maximum of 10 tags to a health check or a hosted zone.
changeTagsForResource_addTags :: Lens' ChangeTagsForResource (Maybe (NonEmpty Tag))

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
changeTagsForResource_resourceType :: Lens' ChangeTagsForResource TagResourceType

-- | The ID of the resource for which you want to add, change, or delete
--   tags.
changeTagsForResource_resourceId :: Lens' ChangeTagsForResource Text

-- | The response's http status code.
changeTagsForResourceResponse_httpStatus :: Lens' ChangeTagsForResourceResponse Int

-- | If you're using reusable delegation sets and you want to list all of
--   the hosted zones that are associated with a reusable delegation set,
--   specify the ID of that reusable delegation set.
listHostedZones_delegationSetId :: Lens' ListHostedZones (Maybe ResourceId)

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more hosted zones. To get more hosted zones,
--   submit another <tt>ListHostedZones</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first hosted zone that Amazon Route 53 will return if you submit
--   another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more hosted zones to get.
listHostedZones_marker :: Lens' ListHostedZones (Maybe Text)

-- | (Optional) The maximum number of hosted zones that you want Amazon
--   Route 53 to return. If you have more than <tt>maxitems</tt> hosted
--   zones, the value of <tt>IsTruncated</tt> in the response is
--   <tt>true</tt>, and the value of <tt>NextMarker</tt> is the hosted zone
--   ID of the first hosted zone that Route 53 will return if you submit
--   another request.
listHostedZones_maxItems :: Lens' ListHostedZones (Maybe Text)

-- | For the second and subsequent calls to <tt>ListHostedZones</tt>,
--   <tt>Marker</tt> is the value that you specified for the
--   <tt>marker</tt> parameter in the request that produced the current
--   response.
listHostedZonesResponse_marker :: Lens' ListHostedZonesResponse (Maybe Text)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextMarker</tt> identifies the first hosted zone in the next group
--   of hosted zones. Submit another <tt>ListHostedZones</tt> request, and
--   specify the value of <tt>NextMarker</tt> from the response in the
--   <tt>marker</tt> parameter.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
listHostedZonesResponse_nextMarker :: Lens' ListHostedZonesResponse (Maybe Text)

-- | The response's http status code.
listHostedZonesResponse_httpStatus :: Lens' ListHostedZonesResponse Int

-- | A complex type that contains general information about the hosted
--   zone.
listHostedZonesResponse_hostedZones :: Lens' ListHostedZonesResponse [HostedZone]

-- | A flag indicating whether there are more hosted zones to be listed. If
--   the response was truncated, you can get more hosted zones by
--   submitting another <tt>ListHostedZones</tt> request and specifying the
--   value of <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
listHostedZonesResponse_isTruncated :: Lens' ListHostedZonesResponse Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListHostedZones</tt> that produced the current
--   response.
listHostedZonesResponse_maxItems :: Lens' ListHostedZonesResponse Text

-- | The response's http status code.
getTrafficPolicyInstanceCountResponse_httpStatus :: Lens' GetTrafficPolicyInstanceCountResponse Int

-- | The number of traffic policy instances that are associated with the
--   current Amazon Web Services account.
getTrafficPolicyInstanceCountResponse_trafficPolicyInstanceCount :: Lens' GetTrafficPolicyInstanceCountResponse Int

-- | The code for the state of the United States with which you want to
--   start listing locations that Amazon Route 53 supports for geolocation.
--   If Route 53 has already returned a page or more of results, if
--   <tt>IsTruncated</tt> is <tt>true</tt>, and if
--   <tt>NextSubdivisionCode</tt> from the previous response has a value,
--   enter that value in <tt>startsubdivisioncode</tt> to return the next
--   page of results.
--   
--   To list subdivisions (U.S. states), you must include both
--   <tt>startcountrycode</tt> and <tt>startsubdivisioncode</tt>.
listGeoLocations_startSubdivisionCode :: Lens' ListGeoLocations (Maybe Text)

-- | (Optional) The maximum number of geolocations to be included in the
--   response body for this request. If more than <tt>maxitems</tt>
--   geolocations remain to be listed, then the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>.
listGeoLocations_maxItems :: Lens' ListGeoLocations (Maybe Text)

-- | The code for the country with which you want to start listing
--   locations that Amazon Route 53 supports for geolocation. If Route 53
--   has already returned a page or more of results, if
--   <tt>IsTruncated</tt> is <tt>true</tt>, and if <tt>NextCountryCode</tt>
--   from the previous response has a value, enter that value in
--   <tt>startcountrycode</tt> to return the next page of results.
listGeoLocations_startCountryCode :: Lens' ListGeoLocations (Maybe Text)

-- | The code for the continent with which you want to start listing
--   locations that Amazon Route 53 supports for geolocation. If Route 53
--   has already returned a page or more of results, if
--   <tt>IsTruncated</tt> is true, and if <tt>NextContinentCode</tt> from
--   the previous response has a value, enter that value in
--   <tt>startcontinentcode</tt> to return the next page of results.
--   
--   Include <tt>startcontinentcode</tt> only if you want to list
--   continents. Don't include <tt>startcontinentcode</tt> when you're
--   listing countries or countries with their subdivisions.
listGeoLocations_startContinentCode :: Lens' ListGeoLocations (Maybe Text)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextContinentCode</tt> in the <tt>startcontinentcode</tt>
--   parameter in another <tt>ListGeoLocations</tt> request.
listGeoLocationsResponse_nextContinentCode :: Lens' ListGeoLocationsResponse (Maybe Text)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextCountryCode</tt> in the <tt>startcountrycode</tt> parameter in
--   another <tt>ListGeoLocations</tt> request.
listGeoLocationsResponse_nextCountryCode :: Lens' ListGeoLocationsResponse (Maybe Text)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextSubdivisionCode</tt> in the <tt>startsubdivisioncode</tt>
--   parameter in another <tt>ListGeoLocations</tt> request.
listGeoLocationsResponse_nextSubdivisionCode :: Lens' ListGeoLocationsResponse (Maybe Text)

-- | The response's http status code.
listGeoLocationsResponse_httpStatus :: Lens' ListGeoLocationsResponse Int

-- | A complex type that contains one <tt>GeoLocationDetails</tt> element
--   for each location that Amazon Route 53 supports for geolocation.
listGeoLocationsResponse_geoLocationDetailsList :: Lens' ListGeoLocationsResponse [GeoLocationDetails]

-- | A value that indicates whether more locations remain to be listed
--   after the last location in this response. If so, the value of
--   <tt>IsTruncated</tt> is <tt>true</tt>. To get more values, submit
--   another request and include the values of <tt>NextContinentCode</tt>,
--   <tt>NextCountryCode</tt>, and <tt>NextSubdivisionCode</tt> in the
--   <tt>startcontinentcode</tt>, <tt>startcountrycode</tt>, and
--   <tt>startsubdivisioncode</tt>, as applicable.
listGeoLocationsResponse_isTruncated :: Lens' ListGeoLocationsResponse Bool

-- | The value that you specified for <tt>MaxItems</tt> in the request.
listGeoLocationsResponse_maxItems :: Lens' ListGeoLocationsResponse Text

-- | The ID of the hosted zone that you want to get information about.
getHostedZone_id :: Lens' GetHostedZone ResourceId

-- | A complex type that contains information about the VPCs that are
--   associated with the specified hosted zone.
getHostedZoneResponse_vPCs :: Lens' GetHostedZoneResponse (Maybe (NonEmpty VPC))

-- | A complex type that lists the Amazon Route 53 name servers for the
--   specified hosted zone.
getHostedZoneResponse_delegationSet :: Lens' GetHostedZoneResponse (Maybe DelegationSet)

-- | The response's http status code.
getHostedZoneResponse_httpStatus :: Lens' GetHostedZoneResponse Int

-- | A complex type that contains general information about the specified
--   hosted zone.
getHostedZoneResponse_hostedZone :: Lens' GetHostedZoneResponse HostedZone

-- | The identifier that Amazon Route 53 assigned to the health check when
--   you created it. When you add or update a resource record set, you use
--   this value to specify which health check to use. The value can be up
--   to 64 characters long.
getHealthCheck_healthCheckId :: Lens' GetHealthCheck Text

-- | The response's http status code.
getHealthCheckResponse_httpStatus :: Lens' GetHealthCheckResponse Int

-- | A complex type that contains information about one health check that
--   is associated with the current Amazon Web Services account.
getHealthCheckResponse_healthCheck :: Lens' GetHealthCheckResponse HealthCheck

-- | The first name in the lexicographic ordering of resource record sets
--   that you want to list. If the specified record name doesn't exist, the
--   results begin with the first resource record set that has a name
--   greater than the value of <tt>name</tt>.
listResourceRecordSets_startRecordName :: Lens' ListResourceRecordSets (Maybe Text)

-- | The type of resource record set to begin the record listing from.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>MX</tt> |
--   <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> | <tt>SOA</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>API Gateway custom regional API or edge-optimized API</b>:
--   A</li>
--   <li><b>CloudFront distribution</b>: A or AAAA</li>
--   <li><b>Elastic Beanstalk environment that has a regionalized
--   subdomain</b>: A</li>
--   <li><b>Elastic Load Balancing load balancer</b>: A | AAAA</li>
--   <li><b>S3 bucket</b>: A</li>
--   <li><b>VPC interface VPC endpoint</b>: A</li>
--   <li><b>Another resource record set in this hosted zone:</b> The type
--   of the resource record set that the alias references.</li>
--   </ul>
--   
--   Constraint: Specifying <tt>type</tt> without specifying <tt>name</tt>
--   returns an <tt>InvalidInput</tt> error.
listResourceRecordSets_startRecordType :: Lens' ListResourceRecordSets (Maybe RRType)

-- | <i>Resource record sets that have a routing policy other than
--   simple:</i> If results were truncated for a given DNS name and type,
--   specify the value of <tt>NextRecordIdentifier</tt> from the previous
--   response to get the next resource record set that has the current DNS
--   name and type.
listResourceRecordSets_startRecordIdentifier :: Lens' ListResourceRecordSets (Maybe Text)

-- | (Optional) The maximum number of resource records sets to include in
--   the response body for this request. If the response includes more than
--   <tt>maxitems</tt> resource record sets, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of the <tt>NextRecordName</tt> and <tt>NextRecordType</tt>
--   elements in the response identify the first resource record set in the
--   next group of <tt>maxitems</tt> resource record sets.
listResourceRecordSets_maxItems :: Lens' ListResourceRecordSets (Maybe Text)

-- | The ID of the hosted zone that contains the resource record sets that
--   you want to list.
listResourceRecordSets_hostedZoneId :: Lens' ListResourceRecordSets ResourceId

-- | If the results were truncated, the type of the next record in the
--   list.
--   
--   This element is present only if <tt>IsTruncated</tt> is true.
listResourceRecordSetsResponse_nextRecordType :: Lens' ListResourceRecordSetsResponse (Maybe RRType)

-- | If the results were truncated, the name of the next record in the
--   list.
--   
--   This element is present only if <tt>IsTruncated</tt> is true.
listResourceRecordSetsResponse_nextRecordName :: Lens' ListResourceRecordSetsResponse (Maybe Text)

-- | <i>Resource record sets that have a routing policy other than
--   simple:</i> If results were truncated for a given DNS name and type,
--   the value of <tt>SetIdentifier</tt> for the next resource record set
--   that has the current DNS name and type.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
listResourceRecordSetsResponse_nextRecordIdentifier :: Lens' ListResourceRecordSetsResponse (Maybe Text)

-- | The response's http status code.
listResourceRecordSetsResponse_httpStatus :: Lens' ListResourceRecordSetsResponse Int

-- | Information about multiple resource record sets.
listResourceRecordSetsResponse_resourceRecordSets :: Lens' ListResourceRecordSetsResponse [ResourceRecordSet]

-- | A flag that indicates whether more resource record sets remain to be
--   listed. If your results were truncated, you can make a follow-up
--   pagination request by using the <tt>NextRecordName</tt> element.
listResourceRecordSetsResponse_isTruncated :: Lens' ListResourceRecordSetsResponse Bool

-- | The maximum number of records you requested.
listResourceRecordSetsResponse_maxItems :: Lens' ListResourceRecordSetsResponse Text

-- | If you want to mark the delegation set for an existing hosted zone as
--   reusable, the ID for that hosted zone.
createReusableDelegationSet_hostedZoneId :: Lens' CreateReusableDelegationSet (Maybe ResourceId)

-- | A unique string that identifies the request, and that allows you to
--   retry failed <tt>CreateReusableDelegationSet</tt> requests without the
--   risk of executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you submit a
--   <tt>CreateReusableDelegationSet</tt> request. <tt>CallerReference</tt>
--   can be any unique string, for example a date/time stamp.
createReusableDelegationSet_callerReference :: Lens' CreateReusableDelegationSet Text

-- | The response's http status code.
createReusableDelegationSetResponse_httpStatus :: Lens' CreateReusableDelegationSetResponse Int

-- | A complex type that contains name server information.
createReusableDelegationSetResponse_delegationSet :: Lens' CreateReusableDelegationSetResponse DelegationSet

-- | The unique URL representing the new reusable delegation set.
createReusableDelegationSetResponse_location :: Lens' CreateReusableDelegationSetResponse Text

-- | The ID of the hosted zone that you want to log queries for. You can
--   log queries only for public hosted zones.
createQueryLoggingConfig_hostedZoneId :: Lens' CreateQueryLoggingConfig ResourceId

-- | The Amazon Resource Name (ARN) for the log group that you want to
--   Amazon Route 53 to send query logs to. This is the format of the ARN:
--   
--   
--   arn:aws:logs:<i>region</i>:<i>account-id</i>:log-group:<i>log_group_name</i>
--   
--   To get the ARN for a log group, you can use the CloudWatch console,
--   the <a>DescribeLogGroups</a> API action, the
--   <a>describe-log-groups</a> command, or the applicable command in one
--   of the Amazon Web Services SDKs.
createQueryLoggingConfig_cloudWatchLogsLogGroupArn :: Lens' CreateQueryLoggingConfig Text

-- | The response's http status code.
createQueryLoggingConfigResponse_httpStatus :: Lens' CreateQueryLoggingConfigResponse Int

-- | A complex type that contains the ID for a query logging configuration,
--   the ID of the hosted zone that you want to log queries for, and the
--   ARN for the log group that you want Amazon Route 53 to send query logs
--   to.
createQueryLoggingConfigResponse_queryLoggingConfig :: Lens' CreateQueryLoggingConfigResponse QueryLoggingConfig

-- | The unique URL representing the new query logging configuration.
createQueryLoggingConfigResponse_location :: Lens' CreateQueryLoggingConfigResponse Text

-- | The response's http status code.
getHealthCheckCountResponse_httpStatus :: Lens' GetHealthCheckCountResponse Int

-- | The number of health checks associated with the current Amazon Web
--   Services account.
getHealthCheckCountResponse_healthCheckCount :: Lens' GetHealthCheckCountResponse Integer

-- | The value of <tt>Id</tt> for the traffic policy that you want to
--   update the comment for.
updateTrafficPolicyComment_id :: Lens' UpdateTrafficPolicyComment Text

-- | The value of <tt>Version</tt> for the traffic policy that you want to
--   update the comment for.
updateTrafficPolicyComment_version :: Lens' UpdateTrafficPolicyComment Natural

-- | The new comment for the specified traffic policy and version.
updateTrafficPolicyComment_comment :: Lens' UpdateTrafficPolicyComment Text

-- | The response's http status code.
updateTrafficPolicyCommentResponse_httpStatus :: Lens' UpdateTrafficPolicyCommentResponse Int

-- | A complex type that contains settings for the specified traffic
--   policy.
updateTrafficPolicyCommentResponse_trafficPolicy :: Lens' UpdateTrafficPolicyCommentResponse TrafficPolicy

-- | The response's http status code.
getHostedZoneCountResponse_httpStatus :: Lens' GetHostedZoneCountResponse Int

-- | The total number of public and private hosted zones that are
--   associated with the current Amazon Web Services account.
getHostedZoneCountResponse_hostedZoneCount :: Lens' GetHostedZoneCountResponse Integer

-- | A unique string used to identify a hosted zone.
deleteKeySigningKey_hostedZoneId :: Lens' DeleteKeySigningKey ResourceId

-- | A string used to identify a key-signing key (KSK).
deleteKeySigningKey_name :: Lens' DeleteKeySigningKey Text

-- | The response's http status code.
deleteKeySigningKeyResponse_httpStatus :: Lens' DeleteKeySigningKeyResponse Int

-- | Undocumented member.
deleteKeySigningKeyResponse_changeInfo :: Lens' DeleteKeySigningKeyResponse ChangeInfo

-- | A unique string used to identify a hosted zone.
getDNSSEC_hostedZoneId :: Lens' GetDNSSEC ResourceId

-- | The response's http status code.
getDNSSECResponse_httpStatus :: Lens' GetDNSSECResponse Int

-- | A string repesenting the status of DNSSEC.
getDNSSECResponse_status :: Lens' GetDNSSECResponse DNSSECStatus

-- | The key-signing keys (KSKs) in your account.
getDNSSECResponse_keySigningKeys :: Lens' GetDNSSECResponse [KeySigningKey]

-- | The limit that you want to get. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
getAccountLimit_type :: Lens' GetAccountLimit AccountLimitType

-- | The response's http status code.
getAccountLimitResponse_httpStatus :: Lens' GetAccountLimitResponse Int

-- | The current setting for the specified limit. For example, if you
--   specified <tt>MAX_HEALTH_CHECKS_BY_OWNER</tt> for the value of
--   <tt>Type</tt> in the request, the value of <tt>Limit</tt> is the
--   maximum number of health checks that you can create using the current
--   account.
getAccountLimitResponse_limit :: Lens' GetAccountLimitResponse AccountLimit

-- | The current number of entities that you have created of the specified
--   type. For example, if you specified
--   <tt>MAX_HEALTH_CHECKS_BY_OWNER</tt> for the value of <tt>Type</tt> in
--   the request, the value of <tt>Count</tt> is the current number of
--   health checks that you have created using the current account.
getAccountLimitResponse_count :: Lens' GetAccountLimitResponse Natural

-- | A unique string used to identify a hosted zone.
enableHostedZoneDNSSEC_hostedZoneId :: Lens' EnableHostedZoneDNSSEC ResourceId

-- | The response's http status code.
enableHostedZoneDNSSECResponse_httpStatus :: Lens' EnableHostedZoneDNSSECResponse Int

-- | Undocumented member.
enableHostedZoneDNSSECResponse_changeInfo :: Lens' EnableHostedZoneDNSSECResponse ChangeInfo

-- | The ID of the configuration that you want to delete.
deleteQueryLoggingConfig_id :: Lens' DeleteQueryLoggingConfig Text

-- | The response's http status code.
deleteQueryLoggingConfigResponse_httpStatus :: Lens' DeleteQueryLoggingConfigResponse Int

-- | The ID of the configuration for DNS query logging that you want to get
--   information about.
getQueryLoggingConfig_id :: Lens' GetQueryLoggingConfig Text

-- | The response's http status code.
getQueryLoggingConfigResponse_httpStatus :: Lens' GetQueryLoggingConfigResponse Int

-- | A complex type that contains information about the query logging
--   configuration that you specified in a <a>GetQueryLoggingConfig</a>
--   request.
getQueryLoggingConfigResponse_queryLoggingConfig :: Lens' GetQueryLoggingConfigResponse QueryLoggingConfig

-- | The ID of the reusable delegation set that you want to get a list of
--   name servers for.
getReusableDelegationSet_id :: Lens' GetReusableDelegationSet ResourceId

-- | The response's http status code.
getReusableDelegationSetResponse_httpStatus :: Lens' GetReusableDelegationSetResponse Int

-- | A complex type that contains information about the reusable delegation
--   set.
getReusableDelegationSetResponse_delegationSet :: Lens' GetReusableDelegationSetResponse DelegationSet

-- | The ID of the traffic policy instance that you want to delete.
--   
--   When you delete a traffic policy instance, Amazon Route 53 also
--   deletes all of the resource record sets that were created when you
--   created the traffic policy instance.
deleteTrafficPolicyInstance_id :: Lens' DeleteTrafficPolicyInstance Text

-- | The response's http status code.
deleteTrafficPolicyInstanceResponse_httpStatus :: Lens' DeleteTrafficPolicyInstanceResponse Int

-- | The ID of the traffic policy instance that you want to update.
updateTrafficPolicyInstance_id :: Lens' UpdateTrafficPolicyInstance Text

-- | The TTL that you want Amazon Route 53 to assign to all of the updated
--   resource record sets.
updateTrafficPolicyInstance_ttl :: Lens' UpdateTrafficPolicyInstance Natural

-- | The ID of the traffic policy that you want Amazon Route 53 to use to
--   update resource record sets for the specified traffic policy instance.
updateTrafficPolicyInstance_trafficPolicyId :: Lens' UpdateTrafficPolicyInstance Text

-- | The version of the traffic policy that you want Amazon Route 53 to use
--   to update resource record sets for the specified traffic policy
--   instance.
updateTrafficPolicyInstance_trafficPolicyVersion :: Lens' UpdateTrafficPolicyInstance Natural

-- | The response's http status code.
updateTrafficPolicyInstanceResponse_httpStatus :: Lens' UpdateTrafficPolicyInstanceResponse Int

-- | A complex type that contains settings for the updated traffic policy
--   instance.
updateTrafficPolicyInstanceResponse_trafficPolicyInstance :: Lens' UpdateTrafficPolicyInstanceResponse TrafficPolicyInstance

-- | The new comment for the hosted zone. If you don't specify a value for
--   <tt>Comment</tt>, Amazon Route 53 deletes the existing value of the
--   <tt>Comment</tt> element, if any.
updateHostedZoneComment_comment :: Lens' UpdateHostedZoneComment (Maybe Text)

-- | The ID for the hosted zone that you want to update the comment for.
updateHostedZoneComment_id :: Lens' UpdateHostedZoneComment ResourceId

-- | The response's http status code.
updateHostedZoneCommentResponse_httpStatus :: Lens' UpdateHostedZoneCommentResponse Int

-- | A complex type that contains the response to the
--   <tt>UpdateHostedZoneComment</tt> request.
updateHostedZoneCommentResponse_hostedZone :: Lens' UpdateHostedZoneCommentResponse HostedZone

-- | The ID for the health check that you want the current status for. When
--   you created the health check, <tt>CreateHealthCheck</tt> returned the
--   ID in the response, in the <tt>HealthCheckId</tt> element.
--   
--   If you want to check the status of a calculated health check, you must
--   use the Amazon Route 53 console or the CloudWatch console. You can't
--   use <tt>GetHealthCheckStatus</tt> to get the status of a calculated
--   health check.
getHealthCheckStatus_healthCheckId :: Lens' GetHealthCheckStatus Text

-- | The response's http status code.
getHealthCheckStatusResponse_httpStatus :: Lens' GetHealthCheckStatusResponse Int

-- | A list that contains one <tt>HealthCheckObservation</tt> element for
--   each Amazon Route 53 health checker that is reporting a status about
--   the health check endpoint.
getHealthCheckStatusResponse_healthCheckObservations :: Lens' GetHealthCheckStatusResponse [HealthCheckObservation]

-- | If the previous response included a <tt>NextToken</tt> element, the
--   specified VPC is associated with more hosted zones. To get more hosted
--   zones, submit another <tt>ListHostedZonesByVPC</tt> request.
--   
--   For the value of <tt>NextToken</tt>, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   If the previous response didn't include a <tt>NextToken</tt> element,
--   there are no more hosted zones to get.
listHostedZonesByVPC_nextToken :: Lens' ListHostedZonesByVPC (Maybe Text)

-- | (Optional) The maximum number of hosted zones that you want Amazon
--   Route 53 to return. If the specified VPC is associated with more than
--   <tt>MaxItems</tt> hosted zones, the response includes a
--   <tt>NextToken</tt> element. <tt>NextToken</tt> contains an encrypted
--   token that identifies the first hosted zone that Route 53 will return
--   if you submit another request.
listHostedZonesByVPC_maxItems :: Lens' ListHostedZonesByVPC (Maybe Text)

-- | The ID of the Amazon VPC that you want to list hosted zones for.
listHostedZonesByVPC_vPCId :: Lens' ListHostedZonesByVPC Text

-- | For the Amazon VPC that you specified for <tt>VPCId</tt>, the Amazon
--   Web Services Region that you created the VPC in.
listHostedZonesByVPC_vPCRegion :: Lens' ListHostedZonesByVPC VPCRegion

-- | The value that you will use for <tt>NextToken</tt> in the next
--   <tt>ListHostedZonesByVPC</tt> request.
listHostedZonesByVPCResponse_nextToken :: Lens' ListHostedZonesByVPCResponse (Maybe Text)

-- | The response's http status code.
listHostedZonesByVPCResponse_httpStatus :: Lens' ListHostedZonesByVPCResponse Int

-- | A list that contains one <tt>HostedZoneSummary</tt> element for each
--   hosted zone that the specified Amazon VPC is associated with. Each
--   <tt>HostedZoneSummary</tt> element contains the hosted zone name and
--   ID, and information about who owns the hosted zone.
listHostedZonesByVPCResponse_hostedZoneSummaries :: Lens' ListHostedZonesByVPCResponse [HostedZoneSummary]

-- | The value that you specified for <tt>MaxItems</tt> in the most recent
--   <tt>ListHostedZonesByVPC</tt> request.
listHostedZonesByVPCResponse_maxItems :: Lens' ListHostedZonesByVPCResponse Text

-- | Specify <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> to get the
--   maximum number of hosted zones that you can associate with the
--   specified reusable delegation set.
getReusableDelegationSetLimit_type :: Lens' GetReusableDelegationSetLimit ReusableDelegationSetLimitType

-- | The ID of the delegation set that you want to get the limit for.
getReusableDelegationSetLimit_delegationSetId :: Lens' GetReusableDelegationSetLimit ResourceId

-- | The response's http status code.
getReusableDelegationSetLimitResponse_httpStatus :: Lens' GetReusableDelegationSetLimitResponse Int

-- | The current setting for the limit on hosted zones that you can
--   associate with the specified reusable delegation set.
getReusableDelegationSetLimitResponse_limit :: Lens' GetReusableDelegationSetLimitResponse ReusableDelegationSetLimit

-- | The current number of hosted zones that you can associate with the
--   specified reusable delegation set.
getReusableDelegationSetLimitResponse_count :: Lens' GetReusableDelegationSetLimitResponse Natural

-- | The comment that you specified in the
--   <tt>CreateTrafficPolicyVersion</tt> request, if any.
createTrafficPolicyVersion_comment :: Lens' CreateTrafficPolicyVersion (Maybe Text)

-- | The ID of the traffic policy for which you want to create a new
--   version.
createTrafficPolicyVersion_id :: Lens' CreateTrafficPolicyVersion Text

-- | The definition of this version of the traffic policy, in JSON format.
--   You specified the JSON in the <tt>CreateTrafficPolicyVersion</tt>
--   request. For more information about the JSON format, see
--   <a>CreateTrafficPolicy</a>.
createTrafficPolicyVersion_document :: Lens' CreateTrafficPolicyVersion Text

-- | The response's http status code.
createTrafficPolicyVersionResponse_httpStatus :: Lens' CreateTrafficPolicyVersionResponse Int

-- | A complex type that contains settings for the new version of the
--   traffic policy.
createTrafficPolicyVersionResponse_trafficPolicy :: Lens' CreateTrafficPolicyVersionResponse TrafficPolicy

-- | A unique URL that represents a new traffic policy version.
createTrafficPolicyVersionResponse_location :: Lens' CreateTrafficPolicyVersionResponse Text

-- | A unique string used to identify a hosted zone.
deactivateKeySigningKey_hostedZoneId :: Lens' DeactivateKeySigningKey ResourceId

-- | A string used to identify a key-signing key (KSK).
deactivateKeySigningKey_name :: Lens' DeactivateKeySigningKey Text

-- | The response's http status code.
deactivateKeySigningKeyResponse_httpStatus :: Lens' DeactivateKeySigningKeyResponse Int

-- | Undocumented member.
deactivateKeySigningKeyResponse_changeInfo :: Lens' DeactivateKeySigningKeyResponse ChangeInfo

-- | If you want to simulate a request from a specific DNS resolver,
--   specify the IP address for that resolver. If you omit this value,
--   <tt>TestDnsAnswer</tt> uses the IP address of a DNS resolver in the
--   Amazon Web Services US East (N. Virginia) Region (<tt>us-east-1</tt>).
testDNSAnswer_resolverIP :: Lens' TestDNSAnswer (Maybe Text)

-- | If the resolver that you specified for resolverip supports EDNS0,
--   specify the IPv4 or IPv6 address of a client in the applicable
--   location, for example, <tt>192.0.2.44</tt> or
--   <tt>2001:db8:85a3::8a2e:370:7334</tt>.
testDNSAnswer_eDNS0ClientSubnetIP :: Lens' TestDNSAnswer (Maybe Text)

-- | If you specify an IP address for <tt>edns0clientsubnetip</tt>, you can
--   optionally specify the number of bits of the IP address that you want
--   the checking tool to include in the DNS query. For example, if you
--   specify <tt>192.0.2.44</tt> for <tt>edns0clientsubnetip</tt> and
--   <tt>24</tt> for <tt>edns0clientsubnetmask</tt>, the checking tool will
--   simulate a request from 192.0.2.0/24. The default value is 24 bits for
--   IPv4 addresses and 64 bits for IPv6 addresses.
--   
--   The range of valid values depends on whether
--   <tt>edns0clientsubnetip</tt> is an IPv4 or an IPv6 address:
--   
--   <ul>
--   <li><b>IPv4</b>: Specify a value between 0 and 32</li>
--   <li><b>IPv6</b>: Specify a value between 0 and 128</li>
--   </ul>
testDNSAnswer_eDNS0ClientSubnetMask :: Lens' TestDNSAnswer (Maybe Text)

-- | The ID of the hosted zone that you want Amazon Route 53 to simulate a
--   query for.
testDNSAnswer_hostedZoneId :: Lens' TestDNSAnswer ResourceId

-- | The name of the resource record set that you want Amazon Route 53 to
--   simulate a query for.
testDNSAnswer_recordName :: Lens' TestDNSAnswer Text

-- | The type of the resource record set.
testDNSAnswer_recordType :: Lens' TestDNSAnswer RRType

-- | The response's http status code.
testDNSAnswerResponse_httpStatus :: Lens' TestDNSAnswerResponse Int

-- | The Amazon Route 53 name server used to respond to the request.
testDNSAnswerResponse_nameserver :: Lens' TestDNSAnswerResponse Text

-- | The name of the resource record set that you submitted a request for.
testDNSAnswerResponse_recordName :: Lens' TestDNSAnswerResponse Text

-- | The type of the resource record set that you submitted a request for.
testDNSAnswerResponse_recordType :: Lens' TestDNSAnswerResponse RRType

-- | A list that contains values that Amazon Route 53 returned for this
--   resource record set.
testDNSAnswerResponse_recordData :: Lens' TestDNSAnswerResponse [Text]

-- | A code that indicates whether the request is valid or not. The most
--   common response code is <tt>NOERROR</tt>, meaning that the request is
--   valid. If the response is not valid, Amazon Route 53 returns a
--   response code that describes the error. For a list of possible
--   response codes, see <a>DNS RCODES</a> on the IANA website.
testDNSAnswerResponse_responseCode :: Lens' TestDNSAnswerResponse Text

-- | The protocol that Amazon Route 53 used to respond to the request,
--   either <tt>UDP</tt> or <tt>TCP</tt>.
testDNSAnswerResponse_protocol :: Lens' TestDNSAnswerResponse Text

-- | If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more health checks. To get another group,
--   submit another <tt>ListHealthChecks</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first health check that Amazon Route 53 will return if you submit
--   another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more health checks to get.
listHealthChecks_marker :: Lens' ListHealthChecks (Maybe Text)

-- | The maximum number of health checks that you want
--   <tt>ListHealthChecks</tt> to return in response to the current
--   request. Amazon Route 53 returns a maximum of 100 items. If you set
--   <tt>MaxItems</tt> to a value greater than 100, Route 53 returns only
--   the first 100 health checks.
listHealthChecks_maxItems :: Lens' ListHealthChecks (Maybe Text)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextMarker</tt> identifies the first health check that Amazon
--   Route 53 returns if you submit another <tt>ListHealthChecks</tt>
--   request and specify the value of <tt>NextMarker</tt> in the
--   <tt>marker</tt> parameter.
listHealthChecksResponse_nextMarker :: Lens' ListHealthChecksResponse (Maybe Text)

-- | The response's http status code.
listHealthChecksResponse_httpStatus :: Lens' ListHealthChecksResponse Int

-- | A complex type that contains one <tt>HealthCheck</tt> element for each
--   health check that is associated with the current Amazon Web Services
--   account.
listHealthChecksResponse_healthChecks :: Lens' ListHealthChecksResponse [HealthCheck]

-- | For the second and subsequent calls to <tt>ListHealthChecks</tt>,
--   <tt>Marker</tt> is the value that you specified for the
--   <tt>marker</tt> parameter in the previous request.
listHealthChecksResponse_marker :: Lens' ListHealthChecksResponse Text

-- | A flag that indicates whether there are more health checks to be
--   listed. If the response was truncated, you can get the next group of
--   health checks by submitting another <tt>ListHealthChecks</tt> request
--   and specifying the value of <tt>NextMarker</tt> in the <tt>marker</tt>
--   parameter.
listHealthChecksResponse_isTruncated :: Lens' ListHealthChecksResponse Bool

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the call to <tt>ListHealthChecks</tt> that produced the current
--   response.
listHealthChecksResponse_maxItems :: Lens' ListHealthChecksResponse Text

-- | The ID of the traffic policy that you want to get information about.
getTrafficPolicy_id :: Lens' GetTrafficPolicy Text

-- | The version number of the traffic policy that you want to get
--   information about.
getTrafficPolicy_version :: Lens' GetTrafficPolicy Natural

-- | The response's http status code.
getTrafficPolicyResponse_httpStatus :: Lens' GetTrafficPolicyResponse Int

-- | A complex type that contains settings for the specified traffic
--   policy.
getTrafficPolicyResponse_trafficPolicy :: Lens' GetTrafficPolicyResponse TrafficPolicy

-- | The maximum number of traffic policy versions that you want Amazon
--   Route 53 to include in the response body for this request. If the
--   specified traffic policy has more than <tt>MaxItems</tt> versions, the
--   value of <tt>IsTruncated</tt> in the response is <tt>true</tt>, and
--   the value of the <tt>TrafficPolicyVersionMarker</tt> element is the ID
--   of the first version that Route 53 will return if you submit another
--   request.
listTrafficPolicyVersions_maxItems :: Lens' ListTrafficPolicyVersions (Maybe Text)

-- | For your first request to <tt>ListTrafficPolicyVersions</tt>, don't
--   include the <tt>TrafficPolicyVersionMarker</tt> parameter.
--   
--   If you have more traffic policy versions than the value of
--   <tt>MaxItems</tt>, <tt>ListTrafficPolicyVersions</tt> returns only the
--   first group of <tt>MaxItems</tt> versions. To get more traffic policy
--   versions, submit another <tt>ListTrafficPolicyVersions</tt> request.
--   For the value of <tt>TrafficPolicyVersionMarker</tt>, specify the
--   value of <tt>TrafficPolicyVersionMarker</tt> in the previous response.
listTrafficPolicyVersions_trafficPolicyVersionMarker :: Lens' ListTrafficPolicyVersions (Maybe Text)

-- | Specify the value of <tt>Id</tt> of the traffic policy for which you
--   want to list all versions.
listTrafficPolicyVersions_id :: Lens' ListTrafficPolicyVersions Text

-- | The response's http status code.
listTrafficPolicyVersionsResponse_httpStatus :: Lens' ListTrafficPolicyVersionsResponse Int

-- | A list that contains one <tt>TrafficPolicy</tt> element for each
--   traffic policy version that is associated with the specified traffic
--   policy.
listTrafficPolicyVersionsResponse_trafficPolicies :: Lens' ListTrafficPolicyVersionsResponse [TrafficPolicy]

-- | A flag that indicates whether there are more traffic policies to be
--   listed. If the response was truncated, you can get the next group of
--   traffic policies by submitting another
--   <tt>ListTrafficPolicyVersions</tt> request and specifying the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
listTrafficPolicyVersionsResponse_isTruncated :: Lens' ListTrafficPolicyVersionsResponse Bool

-- | If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>TrafficPolicyVersionMarker</tt> identifies the first traffic
--   policy that Amazon Route 53 will return if you submit another request.
--   Call <tt>ListTrafficPolicyVersions</tt> again and specify the value of
--   <tt>TrafficPolicyVersionMarker</tt> in the
--   <tt>TrafficPolicyVersionMarker</tt> request parameter.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
listTrafficPolicyVersionsResponse_trafficPolicyVersionMarker :: Lens' ListTrafficPolicyVersionsResponse Text

-- | The value that you specified for the <tt>maxitems</tt> parameter in
--   the <tt>ListTrafficPolicyVersions</tt> request that produced the
--   current response.
listTrafficPolicyVersionsResponse_maxItems :: Lens' ListTrafficPolicyVersionsResponse Text

-- | The ID of the hosted zone you want to delete.
deleteHostedZone_id :: Lens' DeleteHostedZone ResourceId

-- | The response's http status code.
deleteHostedZoneResponse_httpStatus :: Lens' DeleteHostedZoneResponse Int

-- | A complex type that contains the ID, the status, and the date and time
--   of a request to delete a hosted zone.
deleteHostedZoneResponse_changeInfo :: Lens' DeleteHostedZoneResponse ChangeInfo

-- | The code for the subdivision, such as a particular state within the
--   United States. For a list of US state abbreviations, see <a>Appendix
--   B: Two–Letter State and Possession Abbreviations</a> on the United
--   States Postal Service website. For a list of all supported subdivision
--   codes, use the <a>ListGeoLocations</a> API.
getGeoLocation_subdivisionCode :: Lens' GetGeoLocation (Maybe Text)

-- | Amazon Route 53 uses the two-letter country codes that are specified
--   in <a>ISO standard 3166-1 alpha-2</a>.
getGeoLocation_countryCode :: Lens' GetGeoLocation (Maybe Text)

-- | For geolocation resource record sets, a two-letter abbreviation that
--   identifies a continent. Amazon Route 53 supports the following
--   continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
getGeoLocation_continentCode :: Lens' GetGeoLocation (Maybe Text)

-- | The response's http status code.
getGeoLocationResponse_httpStatus :: Lens' GetGeoLocationResponse Int

-- | A complex type that contains the codes and full continent, country,
--   and subdivision names for the specified geolocation code.
getGeoLocationResponse_geoLocationDetails :: Lens' GetGeoLocationResponse GeoLocationDetails

-- | The type of the resources.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
listTagsForResources_resourceType :: Lens' ListTagsForResources TagResourceType

-- | A complex type that contains the ResourceId element for each resource
--   for which you want to get a list of tags.
listTagsForResources_resourceIds :: Lens' ListTagsForResources (NonEmpty Text)

-- | The response's http status code.
listTagsForResourcesResponse_httpStatus :: Lens' ListTagsForResourcesResponse Int

-- | A list of <tt>ResourceTagSet</tt>s containing tags associated with the
--   specified resources.
listTagsForResourcesResponse_resourceTagSets :: Lens' ListTagsForResourcesResponse [ResourceTagSet]

-- | (Optional) Any comments that you want to include about the traffic
--   policy.
createTrafficPolicy_comment :: Lens' CreateTrafficPolicy (Maybe Text)

-- | The name of the traffic policy.
createTrafficPolicy_name :: Lens' CreateTrafficPolicy Text

-- | The definition of this traffic policy in JSON format. For more
--   information, see <a>Traffic Policy Document Format</a>.
createTrafficPolicy_document :: Lens' CreateTrafficPolicy Text

-- | The response's http status code.
createTrafficPolicyResponse_httpStatus :: Lens' CreateTrafficPolicyResponse Int

-- | A complex type that contains settings for the new traffic policy.
createTrafficPolicyResponse_trafficPolicy :: Lens' CreateTrafficPolicyResponse TrafficPolicy

-- | A unique URL that represents a new traffic policy.
createTrafficPolicyResponse_location :: Lens' CreateTrafficPolicyResponse Text

-- | If the value of <tt>IsTruncated</tt> in the previous response is true,
--   you have more traffic policy instances. To get more traffic policy
--   instances, submit another <tt>ListTrafficPolicyInstances</tt> request.
--   For the value of <tt>trafficpolicyinstancetype</tt>, specify the value
--   of <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous
--   response, which is the type of the first traffic policy instance in
--   the next group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstancesByHostedZone_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstancesByHostedZone (Maybe RRType)

-- | The maximum number of traffic policy instances to be included in the
--   response body for this request. If you have more than
--   <tt>MaxItems</tt> traffic policy instances, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first traffic
--   policy instance that Amazon Route 53 will return if you submit another
--   request.
listTrafficPolicyInstancesByHostedZone_maxItems :: Lens' ListTrafficPolicyInstancesByHostedZone (Maybe Text)

-- | If the value of <tt>IsTruncated</tt> in the previous response is true,
--   you have more traffic policy instances. To get more traffic policy
--   instances, submit another <tt>ListTrafficPolicyInstances</tt> request.
--   For the value of <tt>trafficpolicyinstancename</tt>, specify the value
--   of <tt>TrafficPolicyInstanceNameMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance in
--   the next group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
listTrafficPolicyInstancesByHostedZone_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstancesByHostedZone (Maybe Text)

-- | The ID of the hosted zone that you want to list traffic policy
--   instances for.
listTrafficPolicyInstancesByHostedZone_hostedZoneId :: Lens' ListTrafficPolicyInstancesByHostedZone ResourceId

-- | If <tt>IsTruncated</tt> is true,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance in the next group of traffic policy instances.
listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstanceTypeMarker :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse (Maybe RRType)

-- | If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance in the next group of traffic policy instances.
listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstanceNameMarker :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse (Maybe Text)

-- | The response's http status code.
listTrafficPolicyInstancesByHostedZoneResponse_httpStatus :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse Int

-- | A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstances :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse [TrafficPolicyInstance]

-- | A flag that indicates whether there are more traffic policy instances
--   to be listed. If the response was truncated, you can get the next
--   group of traffic policy instances by submitting another
--   <tt>ListTrafficPolicyInstancesByHostedZone</tt> request and specifying
--   the values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> in the corresponding request
--   parameters.
listTrafficPolicyInstancesByHostedZoneResponse_isTruncated :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse Bool

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the <tt>ListTrafficPolicyInstancesByHostedZone</tt> request that
--   produced the current response.
listTrafficPolicyInstancesByHostedZoneResponse_maxItems :: Lens' ListTrafficPolicyInstancesByHostedZoneResponse Text

-- | (Conditional) For your first request to <tt>ListTrafficPolicies</tt>,
--   don't include the <tt>TrafficPolicyIdMarker</tt> parameter.
--   
--   If you have more traffic policies than the value of <tt>MaxItems</tt>,
--   <tt>ListTrafficPolicies</tt> returns only the first <tt>MaxItems</tt>
--   traffic policies. To get the next group of policies, submit another
--   request to <tt>ListTrafficPolicies</tt>. For the value of
--   <tt>TrafficPolicyIdMarker</tt>, specify the value of
--   <tt>TrafficPolicyIdMarker</tt> that was returned in the previous
--   response.
listTrafficPolicies_trafficPolicyIdMarker :: Lens' ListTrafficPolicies (Maybe Text)

-- | (Optional) The maximum number of traffic policies that you want Amazon
--   Route 53 to return in response to this request. If you have more than
--   <tt>MaxItems</tt> traffic policies, the value of <tt>IsTruncated</tt>
--   in the response is <tt>true</tt>, and the value of
--   <tt>TrafficPolicyIdMarker</tt> is the ID of the first traffic policy
--   that Route 53 will return if you submit another request.
listTrafficPolicies_maxItems :: Lens' ListTrafficPolicies (Maybe Text)

-- | The response's http status code.
listTrafficPoliciesResponse_httpStatus :: Lens' ListTrafficPoliciesResponse Int

-- | A list that contains one <tt>TrafficPolicySummary</tt> element for
--   each traffic policy that was created by the current Amazon Web
--   Services account.
listTrafficPoliciesResponse_trafficPolicySummaries :: Lens' ListTrafficPoliciesResponse [TrafficPolicySummary]

-- | A flag that indicates whether there are more traffic policies to be
--   listed. If the response was truncated, you can get the next group of
--   traffic policies by submitting another <tt>ListTrafficPolicies</tt>
--   request and specifying the value of <tt>TrafficPolicyIdMarker</tt> in
--   the <tt>TrafficPolicyIdMarker</tt> request parameter.
listTrafficPoliciesResponse_isTruncated :: Lens' ListTrafficPoliciesResponse Bool

-- | If the value of <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyIdMarker</tt> is the ID of the first traffic policy
--   in the next group of <tt>MaxItems</tt> traffic policies.
listTrafficPoliciesResponse_trafficPolicyIdMarker :: Lens' ListTrafficPoliciesResponse Text

-- | The value that you specified for the <tt>MaxItems</tt> parameter in
--   the <tt>ListTrafficPolicies</tt> request that produced the current
--   response.
listTrafficPoliciesResponse_maxItems :: Lens' ListTrafficPoliciesResponse Text

-- | The limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
accountLimit_type :: Lens' AccountLimit AccountLimitType

-- | The current value for the limit that is specified by <a>Type</a>.
accountLimit_value :: Lens' AccountLimit Natural

-- | For the CloudWatch alarm that you want Route 53 health checkers to use
--   to determine whether this health check is healthy, the region that the
--   alarm was created in.
--   
--   For the current list of CloudWatch regions, see <a>Amazon CloudWatch
--   endpoints and quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
alarmIdentifier_region :: Lens' AlarmIdentifier CloudWatchRegion

-- | The name of the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether this health check is healthy.
--   
--   Route 53 supports CloudWatch alarms with the following features:
--   
--   <ul>
--   <li>Standard-resolution metrics. High-resolution metrics aren't
--   supported. For more information, see <a>High-Resolution Metrics</a> in
--   the <i>Amazon CloudWatch User Guide</i>.</li>
--   <li>Statistics: Average, Minimum, Maximum, Sum, and SampleCount.
--   Extended statistics aren't supported.</li>
--   </ul>
alarmIdentifier_name :: Lens' AlarmIdentifier Text

-- | <i>Alias resource records sets only</i>: The value used depends on
--   where you want to route traffic:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the hosted zone ID for your API. You can get the
--   applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalHostedZoneId</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionHostedZoneId</tt>.</li></ul></li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Specify
--   the hosted zone ID for your interface endpoint. You can get the value
--   of <tt>HostedZoneId</tt> using the CLI command
--   <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify
--   <tt>Z2FDTNDATAQYW2</tt>.Alias resource record sets for CloudFront
--   can't be created in a private zone.</li>
--   <li><i>Elastic Beanstalk environment</i> Specify the hosted zone ID
--   for the region that you created the environment in. The environment
--   must have a regionalized subdomain. For a list of regions and the
--   corresponding hosted zone IDs, see <a>Elastic Beanstalk endpoints and
--   quotas</a> in the the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>ELB load balancer</i> Specify the value of the hosted zone ID
--   for the load balancer. Use the following methods to get the hosted
--   zone ID:<ul><li><a>Elastic Load Balancing endpoints and quotas</a>
--   topic in the <i>Amazon Web Services General Reference</i>: Use the
--   value that corresponds with the region that you created your load
--   balancer in. Note that there are separate columns for Application and
--   Classic Load Balancers and for Network Load
--   Balancers.</li><li><b>Amazon Web Services Management Console</b>: Go
--   to the Amazon EC2 page, choose <b>Load Balancers</b> in the navigation
--   pane, select the load balancer, and get the value of the <b>Hosted
--   zone</b> field on the <b>Description</b> tab.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the
--   applicable value. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers: Use <a>DescribeLoadBalancers</a>
--   to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>DescribeLoadBalancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li><li><b>CLI</b>: Use
--   <tt>describe-load-balancers</tt> to get the applicable value. For more
--   information, see the applicable guide:<ul><li>Classic Load Balancers:
--   Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify
--   <tt>Z2BJ6XQ5FK7U4H</tt>.</li>
--   <li><i>An Amazon S3 bucket configured as a static website</i> Specify
--   the hosted zone ID for the region that you created the bucket in. For
--   more information about valid values, see the table <a>Amazon S3
--   Website Endpoints</a> in the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>Another Route 53 resource record set in your hosted zone</i>
--   Specify the hosted zone ID of your hosted zone. (An alias resource
--   record set can't reference a resource record set in a different hosted
--   zone.)</li>
--   </ul>
aliasTarget_hostedZoneId :: Lens' AliasTarget ResourceId

-- | <i>Alias resource record sets only:</i> The value that you specify
--   depends on where you want to route queries:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the applicable domain name for your API. You can get
--   the applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalDomainName</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionDomainName</tt>. This is the name
--   of the associated CloudFront distribution, such as
--   <tt>da1b2c3d4e5.cloudfront.net</tt>.</li></ul>The name of the record
--   that you're creating must match a custom domain name for your API,
--   such as <tt>api.example.com</tt>.</li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Enter
--   the API endpoint for the interface endpoint, such as
--   <tt>vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com</tt>.
--   For edge-optimized APIs, this is the domain name for the corresponding
--   CloudFront distribution. You can get the value of <tt>DnsName</tt>
--   using the CLI command <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify the domain name that
--   CloudFront assigned when you created your distribution.Your CloudFront
--   distribution must include an alternate domain name that matches the
--   name of the resource record set. For example, if the name of the
--   resource record set is <i>acme.example.com</i>, your CloudFront
--   distribution must include <i>acme.example.com</i> as one of the
--   alternate domain names. For more information, see <a>Using Alternate
--   Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront Developer
--   Guide</i>.You can't create a resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.For failover alias
--   records, you can't specify a CloudFront distribution for both the
--   primary and secondary records. A distribution must include an
--   alternate domain name that matches the name of the record. However,
--   the primary and secondary records have the same name, and you can't
--   include the same alternate domain name in more than one
--   distribution.</li>
--   <li><i>Elastic Beanstalk environment</i> If the domain name for your
--   Elastic Beanstalk environment includes the region that you deployed
--   the environment in, you can create an alias record that routes traffic
--   to the environment. For example, the domain name
--   <tt>my-environment.us-west-2.elasticbeanstalk.com</tt> is a
--   regionalized domain name.For environments that were created before
--   early 2016, the domain name doesn't include the region. To route
--   traffic to these environments, you must create a CNAME record instead
--   of an alias record. Note that you can't create a CNAME record for the
--   root domain name. For example, if your domain name is example.com, you
--   can create a record that routes traffic for acme.example.com to your
--   Elastic Beanstalk environment, but you can't create a record that
--   routes traffic for example.com to your Elastic Beanstalk
--   environment.For Elastic Beanstalk environments that have regionalized
--   subdomains, specify the <tt>CNAME</tt> attribute for the environment.
--   You can use the following methods to get the value of the CNAME
--   attribute:<ul><li><i>Amazon Web Services Management Console</i>: For
--   information about how to get the value by using the console, see
--   <a>Using Custom Domains with Elastic Beanstalk</a> in the <i>Elastic
--   Beanstalk Developer Guide</i>.</li><li><i>Elastic Beanstalk API</i>:
--   Use the <tt>DescribeEnvironments</tt> action to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>DescribeEnvironments</a> in the <i>Elastic Beanstalk API
--   Reference</i>.</li><li><i>CLI</i>: Use the
--   <tt>describe-environments</tt> command to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>describe-environments</a> in the <i>CLI Command
--   Reference</i>.</li></ul></li>
--   <li><i>ELB load balancer</i> Specify the DNS name that is associated
--   with the load balancer. Get the DNS name by using the Amazon Web
--   Services Management Console, the ELB API, or the CLI.<ul><li><b>Amazon
--   Web Services Management Console</b>: Go to the EC2 page, choose
--   <b>Load Balancers</b> in the navigation pane, choose the load
--   balancer, choose the <b>Description</b> tab, and get the value of the
--   <b>DNS name</b> field.If you're routing traffic to a Classic Load
--   Balancer, get the value that begins with <b>dualstack</b>. If you're
--   routing traffic to another type of load balancer, get the value that
--   applies to the record type, A or AAAA.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the value
--   of <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>DescribeLoadBalancers</a></li><li>Application and Network Load
--   Balancers: <a>DescribeLoadBalancers</a></li></ul></li><li><b>CLI</b>:
--   Use <tt>describe-load-balancers</tt> to get the value of
--   <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>describe-load-balancers</a></li><li>Application and Network Load
--   Balancers: <a>describe-load-balancers</a></li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify the DNS name for
--   your accelerator:<ul><li><b>Global Accelerator API:</b> To get the DNS
--   name, use <a>DescribeAccelerator</a>.</li><li><b>CLI:</b> To get the
--   DNS name, use <a>describe-accelerator</a>.</li></ul></li>
--   <li><i>Amazon S3 bucket that is configured as a static website</i>
--   Specify the domain name of the Amazon S3 website endpoint that you
--   created the bucket in, for example,
--   <tt>s3-website.us-east-2.amazonaws.com</tt>. For more information
--   about valid values, see the table <a>Amazon S3 Website Endpoints</a>
--   in the <i>Amazon Web Services General Reference</i>. For more
--   information about using S3 buckets for websites, see <a>Getting
--   Started with Amazon Route 53</a> in the <i>Amazon Route 53 Developer
--   Guide.</i></li>
--   <li><i>Another Route 53 resource record set</i> Specify the value of
--   the <tt>Name</tt> element for a resource record set in the current
--   hosted zone.If you're creating an alias record that has the same name
--   as the hosted zone (known as the zone apex), you can't specify the
--   domain name for a record for which the value of <tt>Type</tt> is
--   <tt>CNAME</tt>. This is because the alias record must have the same
--   type as the record that you're routing traffic to, and creating a
--   CNAME record for the zone apex isn't supported even for an alias
--   record.</li>
--   </ul>
aliasTarget_dNSName :: Lens' AliasTarget Text

-- | /Applies only to alias, failover alias, geolocation alias, latency
--   alias, and weighted alias resource record sets:/ When
--   <tt>EvaluateTargetHealth</tt> is <tt>true</tt>, an alias resource
--   record set inherits the health of the referenced Amazon Web Services
--   resource, such as an ELB load balancer or another resource record set
--   in the hosted zone.
--   
--   Note the following:
--   
--   <ul>
--   <li><i>CloudFront distributions</i> You can't set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is a CloudFront distribution.</li>
--   <li><i>Elastic Beanstalk environments that have regionalized
--   subdomains</i> If you specify an Elastic Beanstalk environment in
--   <tt>DNSName</tt> and the environment contains an ELB load balancer,
--   Elastic Load Balancing routes queries only to the healthy Amazon EC2
--   instances that are registered with the load balancer. (An environment
--   automatically contains an ELB load balancer if it includes more than
--   one Amazon EC2 instance.) If you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt> and either no Amazon EC2 instances are healthy or the
--   load balancer itself is unhealthy, Route 53 routes queries to other
--   available resources that are healthy, if any.If the environment
--   contains a single Amazon EC2 instance, there are no special
--   requirements.</li>
--   <li><i>ELB load balancers</i> Health checking behavior depends on the
--   type of load balancer:<ul><li><b>Classic Load Balancers</b>: If you
--   specify an ELB Classic Load Balancer in <tt>DNSName</tt>, Elastic Load
--   Balancing routes queries only to the healthy Amazon EC2 instances that
--   are registered with the load balancer. If you set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> and either no EC2
--   instances are healthy or the load balancer itself is unhealthy, Route
--   53 routes queries to other resources.</li><li><b>Application and
--   Network Load Balancers</b>: If you specify an ELB Application or
--   Network Load Balancer and you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt>, Route 53 routes queries to the load balancer based on
--   the health of the target groups that are associated with the load
--   balancer:<ul><li>For an Application or Network Load Balancer to be
--   considered healthy, every target group that contains targets must
--   contain at least one healthy target. If any target group contains only
--   unhealthy targets, the load balancer is considered unhealthy, and
--   Route 53 routes queries to other resources.</li><li>A target group
--   that has no registered targets is considered
--   unhealthy.</li></ul></li></ul>When you create a load balancer, you
--   configure settings for Elastic Load Balancing health checks; they're
--   not Route 53 health checks, but they perform a similar function. Do
--   not create Route 53 health checks for the EC2 instances that you
--   register with an ELB load balancer.</li>
--   <li><i>S3 buckets</i> There are no special requirements for setting
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is an S3 bucket.</li>
--   <li><i>Other records in the same hosted zone</i> If the Amazon Web
--   Services resource that you specify in <tt>DNSName</tt> is a record or
--   a group of records (for example, a group of weighted records) but is
--   not another alias record, we recommend that you associate a health
--   check with all of the records in the alias target. For more
--   information, see <a>What Happens When You Omit Health Checks?</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   For more information and examples, see <a>Amazon Route 53 Health
--   Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.
aliasTarget_evaluateTargetHealth :: Lens' AliasTarget Bool

-- | The action to perform:
--   
--   <ul>
--   <li><tt>CREATE</tt>: Creates a resource record set that has the
--   specified values.</li>
--   <li><tt>DELETE</tt>: Deletes a existing resource record set.To delete
--   the resource record set that is associated with a traffic policy
--   instance, use <a>DeleteTrafficPolicyInstance</a>. Amazon Route 53 will
--   delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.</li>
--   <li><tt>UPSERT</tt>: If a resource record set doesn't already exist,
--   Route 53 creates it. If a resource record set does exist, Route 53
--   updates it with the values in the request.</li>
--   </ul>
change_action :: Lens' Change ChangeAction

-- | Information about the resource record set to create, delete, or
--   update.
change_resourceRecordSet :: Lens' Change ResourceRecordSet

-- | <i>Optional:</i> Any comments you want to include about a change batch
--   request.
changeBatch_comment :: Lens' ChangeBatch (Maybe Text)

-- | Information about the changes to make to the record sets.
changeBatch_changes :: Lens' ChangeBatch (NonEmpty Change)

-- | A comment you can provide.
changeInfo_comment :: Lens' ChangeInfo (Maybe Text)

-- | This element contains an ID that you use when performing a
--   <a>GetChange</a> action to get detailed information about the change.
changeInfo_id :: Lens' ChangeInfo ResourceId

-- | The current state of the request. <tt>PENDING</tt> indicates that this
--   request has not yet been applied to all Amazon Route 53 DNS servers.
changeInfo_status :: Lens' ChangeInfo ChangeStatus

-- | The date and time that the change request was submitted in <a>ISO 8601
--   format</a> and Coordinated Universal Time (UTC). For example, the
--   value <tt>2017-03-27T17:48:16.751Z</tt> represents March 27, 2017 at
--   17:48:16.751 UTC.
changeInfo_submittedAt :: Lens' ChangeInfo UTCTime

-- | For the metric that the CloudWatch alarm is associated with, a complex
--   type that contains information about the dimensions for the metric.
--   For information, see <a>Amazon CloudWatch Namespaces, Dimensions, and
--   Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
cloudWatchAlarmConfiguration_dimensions :: Lens' CloudWatchAlarmConfiguration (Maybe [Dimension])

-- | For the metric that the CloudWatch alarm is associated with, the
--   number of periods that the metric is compared to the threshold.
cloudWatchAlarmConfiguration_evaluationPeriods :: Lens' CloudWatchAlarmConfiguration Natural

-- | For the metric that the CloudWatch alarm is associated with, the value
--   the metric is compared with.
cloudWatchAlarmConfiguration_threshold :: Lens' CloudWatchAlarmConfiguration Double

-- | For the metric that the CloudWatch alarm is associated with, the
--   arithmetic operation that is used for the comparison.
cloudWatchAlarmConfiguration_comparisonOperator :: Lens' CloudWatchAlarmConfiguration ComparisonOperator

-- | For the metric that the CloudWatch alarm is associated with, the
--   duration of one evaluation period in seconds.
cloudWatchAlarmConfiguration_period :: Lens' CloudWatchAlarmConfiguration Natural

-- | The name of the CloudWatch metric that the alarm is associated with.
cloudWatchAlarmConfiguration_metricName :: Lens' CloudWatchAlarmConfiguration Text

-- | The namespace of the metric that the alarm is associated with. For
--   more information, see <a>Amazon CloudWatch Namespaces, Dimensions, and
--   Metrics Reference</a> in the <i>Amazon CloudWatch User Guide</i>.
cloudWatchAlarmConfiguration_namespace :: Lens' CloudWatchAlarmConfiguration Text

-- | For the metric that the CloudWatch alarm is associated with, the
--   statistic that is applied to the metric.
cloudWatchAlarmConfiguration_statistic :: Lens' CloudWatchAlarmConfiguration Statistic

-- | A string that represents the current hosted zone signing status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>SIGNING</i> DNSSEC signing is enabled for the hosted zone.</li>
--   <li><i>NOT_SIGNING</i> DNSSEC signing is not enabled for the hosted
--   zone.</li>
--   <li><i>DELETING</i> DNSSEC signing is in the process of being removed
--   for the hosted zone.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with signing in the hosted
--   zone that requires you to take action to resolve. For example, the
--   customer managed customer master key (CMK) might have been deleted, or
--   the permissions for the customer managed CMK might have been
--   changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including with
--   key-signing keys (KSKs), you must correct the problem by enabling or
--   disabling DNSSEC signing for the hosted zone.</li>
--   </ul>
dNSSECStatus_serveSignature :: Lens' DNSSECStatus (Maybe Text)

-- | The status message provided for the following DNSSEC signing status:
--   <tt>INTERNAL_FAILURE</tt>. The status message includes information
--   about what the problem might be and steps that you can take to correct
--   the issue.
dNSSECStatus_statusMessage :: Lens' DNSSECStatus (Maybe Text)

-- | The ID that Amazon Route 53 assigns to a reusable delegation set.
delegationSet_id :: Lens' DelegationSet (Maybe ResourceId)

-- | The value that you specified for <tt>CallerReference</tt> when you
--   created the reusable delegation set.
delegationSet_callerReference :: Lens' DelegationSet (Maybe Text)

-- | A complex type that contains a list of the authoritative name servers
--   for a hosted zone or for a reusable delegation set.
delegationSet_nameServers :: Lens' DelegationSet (NonEmpty Text)

-- | For the metric that the CloudWatch alarm is associated with, the name
--   of one dimension.
dimension_name :: Lens' Dimension Text

-- | For the metric that the CloudWatch alarm is associated with, the value
--   of one dimension.
dimension_value :: Lens' Dimension Text

-- | For geolocation resource record sets, the two-letter code for a state
--   of the United States. Route 53 doesn't support any other values for
--   <tt>SubdivisionCode</tt>. For a list of state abbreviations, see
--   <a>Appendix B: Two–Letter State and Possession Abbreviations</a> on
--   the United States Postal Service website.
--   
--   If you specify <tt>subdivisioncode</tt>, you must also specify
--   <tt>US</tt> for <tt>CountryCode</tt>.
geoLocation_subdivisionCode :: Lens' GeoLocation (Maybe Text)

-- | For geolocation resource record sets, the two-letter code for a
--   country.
--   
--   Amazon Route 53 uses the two-letter country codes that are specified
--   in <a>ISO standard 3166-1 alpha-2</a>.
geoLocation_countryCode :: Lens' GeoLocation (Maybe Text)

-- | The two-letter code for the continent.
--   
--   Amazon Route 53 supports the following continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
--   
--   Constraint: Specifying <tt>ContinentCode</tt> with either
--   <tt>CountryCode</tt> or <tt>SubdivisionCode</tt> returns an
--   <tt>InvalidInput</tt> error.
geoLocation_continentCode :: Lens' GeoLocation (Maybe Text)

-- | The full name of the subdivision. Route 53 currently supports only
--   states in the United States.
geoLocationDetails_subdivisionName :: Lens' GeoLocationDetails (Maybe Text)

-- | The code for the subdivision, such as a particular state within the
--   United States. For a list of US state abbreviations, see <a>Appendix
--   B: Two–Letter State and Possession Abbreviations</a> on the United
--   States Postal Service website. For a list of all supported subdivision
--   codes, use the <a>ListGeoLocations</a> API.
geoLocationDetails_subdivisionCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The name of the country.
geoLocationDetails_countryName :: Lens' GeoLocationDetails (Maybe Text)

-- | The two-letter code for the country.
geoLocationDetails_countryCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The two-letter code for the continent.
geoLocationDetails_continentCode :: Lens' GeoLocationDetails (Maybe Text)

-- | The full name of the continent.
geoLocationDetails_continentName :: Lens' GeoLocationDetails (Maybe Text)

-- | If the health check was created by another service, the service that
--   created the health check. When a health check is created by another
--   service, you can't edit or delete it using Amazon Route 53.
healthCheck_linkedService :: Lens' HealthCheck (Maybe LinkedService)

-- | A complex type that contains information about the CloudWatch alarm
--   that Amazon Route 53 is monitoring for this health check.
healthCheck_cloudWatchAlarmConfiguration :: Lens' HealthCheck (Maybe CloudWatchAlarmConfiguration)

-- | The identifier that Amazon Route 53 assigned to the health check when
--   you created it. When you add or update a resource record set, you use
--   this value to specify which health check to use. The value can be up
--   to 64 characters long.
healthCheck_id :: Lens' HealthCheck Text

-- | A unique string that you specified when you created the health check.
healthCheck_callerReference :: Lens' HealthCheck Text

-- | A complex type that contains detailed information about one health
--   check.
healthCheck_healthCheckConfig :: Lens' HealthCheck HealthCheckConfig

-- | The version of the health check. You can optionally pass this value in
--   a call to <tt>UpdateHealthCheck</tt> to prevent overwriting another
--   change to the health check.
healthCheck_healthCheckVersion :: Lens' HealthCheck Natural

-- | The number of consecutive health checks that an endpoint must pass or
--   fail for Amazon Route 53 to change the current status of the endpoint
--   from unhealthy to healthy or vice versa. For more information, see
--   <a>How Amazon Route 53 Determines Whether an Endpoint Is Healthy</a>
--   in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
healthCheckConfig_failureThreshold :: Lens' HealthCheckConfig (Maybe Natural)

-- | The IPv4 or IPv6 IP address of the endpoint that you want Amazon Route
--   53 to perform health checks on. If you don't specify a value for
--   <tt>IPAddress</tt>, Route 53 sends a DNS request to resolve the domain
--   name that you specify in <tt>FullyQualifiedDomainName</tt> at the
--   interval that you specify in <tt>RequestInterval</tt>. Using an IP
--   address returned by DNS, Route 53 then checks the health of the
--   endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance will never change.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
--   
--   When the value of <tt>Type</tt> is <tt>CALCULATED</tt> or
--   <tt>CLOUDWATCH_METRIC</tt>, omit <tt>IPAddress</tt>.
healthCheckConfig_iPAddress :: Lens' HealthCheckConfig (Maybe Text)

-- | Specify whether you want Amazon Route 53 to send the value of
--   <tt>FullyQualifiedDomainName</tt> to the endpoint in the
--   <tt>client_hello</tt> message during TLS negotiation. This allows the
--   endpoint to respond to <tt>HTTPS</tt> health check requests with the
--   applicable SSL/TLS certificate.
--   
--   Some endpoints require that <tt>HTTPS</tt> requests include the host
--   name in the <tt>client_hello</tt> message. If you don't enable SNI,
--   the status of the health check will be <tt>SSL alert
--   handshake_failure</tt>. A health check can also have that status for
--   other reasons. If SNI is enabled and you're still getting the error,
--   check the SSL/TLS configuration on your endpoint and confirm that your
--   certificate is valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
healthCheckConfig_enableSNI :: Lens' HealthCheckConfig (Maybe Bool)

-- | Stops Route 53 from performing health checks. When you disable a
--   health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
healthCheckConfig_disabled :: Lens' HealthCheckConfig (Maybe Bool)

-- | If the value of Type is <tt>HTTP_STR_MATCH</tt> or
--   <tt>HTTPS_STR_MATCH</tt>, the string that you want Amazon Route 53 to
--   search for in the response body from the specified resource. If the
--   string appears in the response body, Route 53 considers the resource
--   healthy.
--   
--   Route 53 considers case when searching for <tt>SearchString</tt> in
--   the response body.
healthCheckConfig_searchString :: Lens' HealthCheckConfig (Maybe Text)

-- | The number of child health checks that are associated with a
--   <tt>CALCULATED</tt> health check that Amazon Route 53 must consider
--   healthy for the <tt>CALCULATED</tt> health check to be considered
--   healthy. To specify the child health checks that you want to associate
--   with a <tt>CALCULATED</tt> health check, use the
--   <a>ChildHealthChecks</a> element.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
healthCheckConfig_healthThreshold :: Lens' HealthCheckConfig (Maybe Natural)

-- | A complex type that contains one <tt>Region</tt> element for each
--   region from which you want Amazon Route 53 health checkers to check
--   the specified endpoint.
--   
--   If you don't specify any regions, Route 53 health checkers
--   automatically performs checks from all of the regions that are listed
--   under <b>Valid Values</b>.
--   
--   If you update a health check to remove a region that has been
--   performing health checks, Route 53 will briefly continue to perform
--   checks from that region to ensure that some health checkers are always
--   checking the endpoint (for example, if you replace three regions with
--   four different regions).
healthCheckConfig_regions :: Lens' HealthCheckConfig (Maybe (NonEmpty HealthCheckRegion))

-- | The path, if any, that you want Amazon Route 53 to request when
--   performing health checks. The path can be any value for which your
--   endpoint will return an HTTP status code of 2xx or 3xx when the
--   endpoint is healthy, for example, the file
--   /docs/route53-health-check.html. You can also include query string
--   parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
healthCheckConfig_resourcePath :: Lens' HealthCheckConfig (Maybe Text)

-- | When CloudWatch has insufficient data about the metric to determine
--   the alarm state, the status that you want Amazon Route 53 to assign to
--   the health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time that CloudWatch had sufficient data to
--   determine the alarm state. For new health checks that have no last
--   known status, the default status for the health check is healthy.</li>
--   </ul>
healthCheckConfig_insufficientDataHealthStatus :: Lens' HealthCheckConfig (Maybe InsufficientDataHealthStatus)

-- | A complex type that identifies the CloudWatch alarm that you want
--   Amazon Route 53 health checkers to use to determine whether the
--   specified health check is healthy.
healthCheckConfig_alarmIdentifier :: Lens' HealthCheckConfig (Maybe AlarmIdentifier)

-- | Specify whether you want Amazon Route 53 to measure the latency
--   between health checkers in multiple Amazon Web Services regions and
--   your endpoint, and to display CloudWatch latency graphs on the
--   __Health Checks__ page in the Route 53 console.
--   
--   You can't change the value of <tt>MeasureLatency</tt> after you create
--   a health check.
healthCheckConfig_measureLatency :: Lens' HealthCheckConfig (Maybe Bool)

-- | Specify whether you want Amazon Route 53 to invert the status of a
--   health check, for example, to consider a health check unhealthy when
--   it otherwise would be considered healthy.
healthCheckConfig_inverted :: Lens' HealthCheckConfig (Maybe Bool)

-- | Amazon Route 53 behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Amazon Route 53 sends health check requests to the specified IPv4 or
--   IPv6 address and passes the value of <tt>FullyQualifiedDomainName</tt>
--   in the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the Host header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <tt>FullyQualifiedDomainName:Port</tt> to the endpoint in the
--   <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the preceding cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends a DNS request to the domain that you specify for
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify for
--   <tt>RequestInterval</tt>. Using an IPv4 address that DNS returns,
--   Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   us-east-2-www.example.com), not the name of the resource record sets
--   (www.example.com).
--   
--   In this configuration, if you create a health check for which the
--   value of <tt>FullyQualifiedDomainName</tt> matches the name of the
--   resource record sets and you then associate the health check with
--   those resource record sets, health check results will be
--   unpredictable.
--   
--   In addition, if the value that you specify for <tt>Type</tt> is
--   <tt>HTTP</tt>, <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or
--   <tt>HTTPS_STR_MATCH</tt>, Route 53 passes the value of
--   <tt>FullyQualifiedDomainName</tt> in the <tt>Host</tt> header, as it
--   does when you specify a value for <tt>IPAddress</tt>. If the value of
--   <tt>Type</tt> is <tt>TCP</tt>, Route 53 doesn't pass a <tt>Host</tt>
--   header.
healthCheckConfig_fullyQualifiedDomainName :: Lens' HealthCheckConfig (Maybe Text)

-- | (CALCULATED Health Checks Only) A complex type that contains one
--   <tt>ChildHealthCheck</tt> element for each health check that you want
--   to associate with a <tt>CALCULATED</tt> health check.
healthCheckConfig_childHealthChecks :: Lens' HealthCheckConfig (Maybe [Text])

-- | The Amazon Resource Name (ARN) for the Route 53 Application Recovery
--   Controller routing control.
--   
--   For more information about Route 53 Application Recovery Controller,
--   see <a>Route 53 Application Recovery Controller Developer Guide.</a>.
healthCheckConfig_routingControlArn :: Lens' HealthCheckConfig (Maybe Text)

-- | The number of seconds between the time that Amazon Route 53 gets a
--   response from your endpoint and the time that it sends the next health
--   check request. Each Route 53 health checker makes requests at this
--   interval.
--   
--   You can't change the value of <tt>RequestInterval</tt> after you
--   create a health check.
--   
--   If you don't specify a value for <tt>RequestInterval</tt>, the default
--   value is <tt>30</tt> seconds.
healthCheckConfig_requestInterval :: Lens' HealthCheckConfig (Maybe Natural)

-- | The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
healthCheckConfig_port :: Lens' HealthCheckConfig (Maybe Natural)

-- | The type of health check that you want to create, which indicates how
--   Amazon Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify
--   <tt>HTTPS</tt> for the value of <tt>Type</tt>, the endpoint must
--   support TLS v1.0 or later.</li>
--   <li><b>HTTP_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an HTTP request and
--   searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>HTTPS_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an <tt>HTTPS</tt> request
--   and searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.</li>
--   <li><b>CLOUDWATCH_METRIC</b>: The health check is associated with a
--   CloudWatch alarm. If the state of the alarm is <tt>OK</tt>, the health
--   check is considered healthy. If the state is <tt>ALARM</tt>, the
--   health check is considered unhealthy. If CloudWatch doesn't have
--   sufficient data to determine whether the state is <tt>OK</tt> or
--   <tt>ALARM</tt>, the health check status depends on the setting for
--   <tt>InsufficientDataHealthStatus</tt>: <tt>Healthy</tt>,
--   <tt>Unhealthy</tt>, or <tt>LastKnownStatus</tt>.</li>
--   <li><b>CALCULATED</b>: For health checks that monitor the status of
--   other health checks, Route 53 adds up the number of health checks that
--   Route 53 health checkers consider to be healthy and compares that
--   number with the value of <tt>HealthThreshold</tt>.</li>
--   <li><b>RECOVERY_CONTROL</b>: The health check is assocated with a
--   Route53 Application Recovery Controller routing control. If the
--   routing control state is <tt>ON</tt>, the health check is considered
--   healthy. If the state is <tt>OFF</tt>, the health check is considered
--   unhealthy.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.
healthCheckConfig_type :: Lens' HealthCheckConfig HealthCheckType

-- | The IP address of the Amazon Route 53 health checker that provided the
--   failure reason in <tt>StatusReport</tt>.
healthCheckObservation_iPAddress :: Lens' HealthCheckObservation (Maybe Text)

-- | A complex type that contains the last failure reason as reported by
--   one Amazon Route 53 health checker and the time of the failed health
--   check.
healthCheckObservation_statusReport :: Lens' HealthCheckObservation (Maybe StatusReport)

-- | The region of the Amazon Route 53 health checker that provided the
--   status in <tt>StatusReport</tt>.
healthCheckObservation_region :: Lens' HealthCheckObservation (Maybe HealthCheckRegion)

-- | If the hosted zone was created by another service, the service that
--   created the hosted zone. When a hosted zone is created by another
--   service, you can't edit or delete it using Route 53.
hostedZone_linkedService :: Lens' HostedZone (Maybe LinkedService)

-- | A complex type that includes the <tt>Comment</tt> and
--   <tt>PrivateZone</tt> elements. If you omitted the
--   <tt>HostedZoneConfig</tt> and <tt>Comment</tt> elements from the
--   request, the <tt>Config</tt> and <tt>Comment</tt> elements don't
--   appear in the response.
hostedZone_config :: Lens' HostedZone (Maybe HostedZoneConfig)

-- | The number of resource record sets in the hosted zone.
hostedZone_resourceRecordSetCount :: Lens' HostedZone (Maybe Integer)

-- | The ID that Amazon Route 53 assigned to the hosted zone when you
--   created it.
hostedZone_id :: Lens' HostedZone ResourceId

-- | The name of the domain. For public hosted zones, this is the name that
--   you have registered with your DNS registrar.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>CreateHostedZone</a>.
hostedZone_name :: Lens' HostedZone Text

-- | The value that you specified for <tt>CallerReference</tt> when you
--   created the hosted zone.
hostedZone_callerReference :: Lens' HostedZone Text

-- | A value that indicates whether this is a private hosted zone.
hostedZoneConfig_privateZone :: Lens' HostedZoneConfig (Maybe Bool)

-- | Any comments that you want to include about the hosted zone.
hostedZoneConfig_comment :: Lens' HostedZoneConfig (Maybe Text)

-- | The limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
hostedZoneLimit_type :: Lens' HostedZoneLimit HostedZoneLimitType

-- | The current value for the limit that is specified by <tt>Type</tt>.
hostedZoneLimit_value :: Lens' HostedZoneLimit Natural

-- | If the hosted zone was created by an Amazon Web Services account, or
--   was created by an Amazon Web Services service that creates hosted
--   zones using the current account, <tt>OwningAccount</tt> contains the
--   account ID of that account. For example, when you use Cloud Map to
--   create a hosted zone, Cloud Map creates the hosted zone using the
--   current Amazon Web Services account.
hostedZoneOwner_owningAccount :: Lens' HostedZoneOwner (Maybe Text)

-- | If an Amazon Web Services service uses its own account to create a
--   hosted zone and associate the specified VPC with that hosted zone,
--   <tt>OwningService</tt> contains an abbreviation that identifies the
--   service. For example, if Amazon Elastic File System (Amazon EFS)
--   created a hosted zone and associated a VPC with the hosted zone, the
--   value of <tt>OwningService</tt> is <tt>efs.amazonaws.com</tt>.
hostedZoneOwner_owningService :: Lens' HostedZoneOwner (Maybe Text)

-- | The Route 53 hosted zone ID of a private hosted zone that the
--   specified VPC is associated with.
hostedZoneSummary_hostedZoneId :: Lens' HostedZoneSummary ResourceId

-- | The name of the private hosted zone, such as <tt>example.com</tt>.
hostedZoneSummary_name :: Lens' HostedZoneSummary Text

-- | The owner of a private hosted zone that the specified VPC is
--   associated with. The owner can be either an Amazon Web Services
--   account or an Amazon Web Services service.
hostedZoneSummary_owner :: Lens' HostedZoneSummary HostedZoneOwner

-- | A string that represents the current key-signing key (KSK) status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The KSK is being used for signing.</li>
--   <li><i>INACTIVE</i> The KSK is not being used for signing.</li>
--   <li><i>DELETING</i> The KSK is in the process of being deleted.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with the KSK that requires
--   you to take action to resolve. For example, the customer managed
--   customer master key (CMK) might have been deleted, or the permissions
--   for the customer managed CMK might have been changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including actions
--   that involve this KSK, you must correct the problem. For example, you
--   may need to activate or deactivate the KSK.</li>
--   </ul>
keySigningKey_status :: Lens' KeySigningKey (Maybe Text)

-- | A string used to represent the signing algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.1</a>.
keySigningKey_signingAlgorithmMnemonic :: Lens' KeySigningKey (Maybe Text)

-- | A string used to represent the delegation signer digest algorithm.
--   This value must follow the guidelines provided by <a>RFC-8624 Section
--   3.3</a>.
keySigningKey_digestAlgorithmMnemonic :: Lens' KeySigningKey (Maybe Text)

-- | The last time that the key-signing key (KSK) was changed.
keySigningKey_lastModifiedDate :: Lens' KeySigningKey (Maybe UTCTime)

-- | An integer used to identify the DNSSEC record for the domain name. The
--   process used to calculate the value is described in <a>RFC-4034
--   Appendix B</a>.
keySigningKey_keyTag :: Lens' KeySigningKey (Maybe Natural)

-- | A string that represents a DNSKEY record.
keySigningKey_dNSKEYRecord :: Lens' KeySigningKey (Maybe Text)

-- | The public key, represented as a Base64 encoding, as required by
--   <a>RFC-4034 Page 5</a>.
keySigningKey_publicKey :: Lens' KeySigningKey (Maybe Text)

-- | An integer used to represent the signing algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.1</a>.
keySigningKey_signingAlgorithmType :: Lens' KeySigningKey (Maybe Int)

-- | The date when the key-signing key (KSK) was created.
keySigningKey_createdDate :: Lens' KeySigningKey (Maybe UTCTime)

-- | An integer that specifies how the key is used. For key-signing key
--   (KSK), this value is always 257.
keySigningKey_flag :: Lens' KeySigningKey (Maybe Int)

-- | An integer used to represent the delegation signer digest algorithm.
--   This value must follow the guidelines provided by <a>RFC-8624 Section
--   3.3</a>.
keySigningKey_digestAlgorithmType :: Lens' KeySigningKey (Maybe Int)

-- | The status message provided for the following key-signing key (KSK)
--   statuses: <tt>ACTION_NEEDED</tt> or <tt>INTERNAL_FAILURE</tt>. The
--   status message includes information about what the problem might be
--   and steps that you can take to correct the issue.
keySigningKey_statusMessage :: Lens' KeySigningKey (Maybe Text)

-- | A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
keySigningKey_name :: Lens' KeySigningKey (Maybe Text)

-- | A string that represents a delegation signer (DS) record.
keySigningKey_dSRecord :: Lens' KeySigningKey (Maybe Text)

-- | The Amazon resource name (ARN) used to identify the customer managed
--   customer master key (CMK) in Key Management Service (KMS). The
--   <tt>KmsArn</tt> must be unique for each key-signing key (KSK) in a
--   single hosted zone.
--   
--   You must configure the CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with the customer managed CMK in
--   KMS, see <a>Key Management Service concepts</a>.
keySigningKey_kmsArn :: Lens' KeySigningKey (Maybe Text)

-- | A cryptographic digest of a DNSKEY resource record (RR). DNSKEY
--   records are used to publish the public key that resolvers can use to
--   verify DNSSEC signatures that are used to secure certain kinds of
--   information provided by the DNS system.
keySigningKey_digestValue :: Lens' KeySigningKey (Maybe Text)

-- | If the health check or hosted zone was created by another service, the
--   service that created the resource. When a resource is created by
--   another service, you can't edit or delete it using Amazon Route 53.
linkedService_servicePrincipal :: Lens' LinkedService (Maybe Text)

-- | If the health check or hosted zone was created by another service, an
--   optional description that can be provided by the other service. When a
--   resource is created by another service, you can't edit or delete it
--   using Amazon Route 53.
linkedService_description :: Lens' LinkedService (Maybe Text)

-- | The ID for a configuration for DNS query logging.
queryLoggingConfig_id :: Lens' QueryLoggingConfig Text

-- | The ID of the hosted zone that CloudWatch Logs is logging queries for.
queryLoggingConfig_hostedZoneId :: Lens' QueryLoggingConfig ResourceId

-- | The Amazon Resource Name (ARN) of the CloudWatch Logs log group that
--   Amazon Route 53 is publishing logs to.
queryLoggingConfig_cloudWatchLogsLogGroupArn :: Lens' QueryLoggingConfig Text

-- | The current or new DNS record value, not to exceed 4,000 characters.
--   In the case of a <tt>DELETE</tt> action, if the current value does not
--   match the actual value, an error is returned. For descriptions about
--   how to format <tt>Value</tt> for different record types, see
--   <a>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
--   
--   You can specify more than one value for all record types except
--   <tt>CNAME</tt> and <tt>SOA</tt>.
--   
--   If you're creating an alias resource record set, omit <tt>Value</tt>.
resourceRecord_value :: Lens' ResourceRecord Text

-- | The resource record cache time to live (TTL), in seconds. Note the
--   following:
--   
--   <ul>
--   <li>If you're creating or updating an alias resource record set, omit
--   <tt>TTL</tt>. Amazon Route 53 uses the value of <tt>TTL</tt> for the
--   alias target.</li>
--   <li>If you're associating this resource record set with a health check
--   (if you're adding a <tt>HealthCheckId</tt> element), we recommend that
--   you specify a <tt>TTL</tt> of 60 seconds or less so clients respond
--   quickly to changes in health status.</li>
--   <li>All of the resource record sets in a group of weighted resource
--   record sets must have the same value for <tt>TTL</tt>.</li>
--   <li>If a group of weighted resource record sets includes one or more
--   weighted alias resource record sets for which the alias target is an
--   ELB load balancer, we recommend that you specify a <tt>TTL</tt> of 60
--   seconds for all of the non-alias weighted resource record sets that
--   have the same name and type. Values other than 60 seconds (the TTL for
--   load balancers) will change the effect of the values that you specify
--   for <tt>Weight</tt>.</li>
--   </ul>
resourceRecordSet_ttl :: Lens' ResourceRecordSet (Maybe Natural)

-- | Information about the resource records to act upon.
--   
--   If you're creating an alias resource record set, omit
--   <tt>ResourceRecords</tt>.
resourceRecordSet_resourceRecords :: Lens' ResourceRecordSet (Maybe (NonEmpty ResourceRecord))

-- | <i>Alias resource record sets only:</i> Information about the Amazon
--   Web Services resource, such as a CloudFront distribution or an Amazon
--   S3 bucket, that you want to route traffic to.
--   
--   If you're creating resource records sets for a private hosted zone,
--   note the following:
--   
--   <ul>
--   <li>You can't create an alias resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.</li>
--   <li>Creating geolocation alias resource record sets or latency alias
--   resource record sets in a private hosted zone is unsupported.</li>
--   <li>For information about creating failover resource record sets in a
--   private hosted zone, see <a>Configuring Failover in a Private Hosted
--   Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
resourceRecordSet_aliasTarget :: Lens' ResourceRecordSet (Maybe AliasTarget)

-- | <i>Weighted resource record sets only:</i> Among resource record sets
--   that have the same combination of DNS name and type, a value that
--   determines the proportion of DNS queries that Amazon Route 53 responds
--   to using the current resource record set. Route 53 calculates the sum
--   of the weights for the resource record sets that have the same
--   combination of DNS name and type. Route 53 then responds to queries
--   based on the ratio of a resource's weight to the total. Note the
--   following:
--   
--   <ul>
--   <li>You must specify a value for the <tt>Weight</tt> element for every
--   weighted resource record set.</li>
--   <li>You can only specify one <tt>ResourceRecord</tt> per weighted
--   resource record set.</li>
--   <li>You can't create latency, failover, or geolocation resource record
--   sets that have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements as weighted resource record sets.</li>
--   <li>You can create a maximum of 100 weighted resource record sets that
--   have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements.</li>
--   <li>For weighted (but not weighted alias) resource record sets, if you
--   set <tt>Weight</tt> to <tt>0</tt> for a resource record set, Route 53
--   never responds to queries with the applicable value for that resource
--   record set. However, if you set <tt>Weight</tt> to <tt>0</tt> for all
--   resource record sets that have the same combination of DNS name and
--   type, traffic is routed to all resources with equal probability.The
--   effect of setting <tt>Weight</tt> to <tt>0</tt> is different when you
--   associate health checks with weighted resource record sets. For more
--   information, see <a>Options for Configuring Route 53 Active-Active and
--   Active-Passive Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.</li>
--   </ul>
resourceRecordSet_weight :: Lens' ResourceRecordSet (Maybe Natural)

-- | When you create a traffic policy instance, Amazon Route 53
--   automatically creates a resource record set.
--   <tt>TrafficPolicyInstanceId</tt> is the ID of the traffic policy
--   instance that Route 53 created this resource record set for.
--   
--   To delete the resource record set that is associated with a traffic
--   policy instance, use <tt>DeleteTrafficPolicyInstance</tt>. Route 53
--   will delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.
resourceRecordSet_trafficPolicyInstanceId :: Lens' ResourceRecordSet (Maybe Text)

-- | <i>Resource record sets that have a routing policy other than
--   simple:</i> An identifier that differentiates among multiple resource
--   record sets that have the same combination of name and type, such as
--   multiple weighted resource record sets named acme.example.com that
--   have a type of A. In a group of resource record sets that have the
--   same name and type, the value of <tt>SetIdentifier</tt> must be unique
--   for each resource record set.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
resourceRecordSet_setIdentifier :: Lens' ResourceRecordSet (Maybe Text)

-- | <i>Failover resource record sets only:</i> To configure failover, you
--   add the <tt>Failover</tt> element to two resource record sets. For one
--   resource record set, you specify <tt>PRIMARY</tt> as the value for
--   <tt>Failover</tt>; for the other resource record set, you specify
--   <tt>SECONDARY</tt>. In addition, you include the
--   <tt>HealthCheckId</tt> element and specify the health check that you
--   want Amazon Route 53 to perform for each resource record set.
--   
--   Except where noted, the following failover behaviors assume that you
--   have included the <tt>HealthCheckId</tt> element in both resource
--   record sets:
--   
--   <ul>
--   <li>When the primary resource record set is healthy, Route 53 responds
--   to DNS queries with the applicable value from the primary resource
--   record set regardless of the health of the secondary resource record
--   set.</li>
--   <li>When the primary resource record set is unhealthy and the
--   secondary resource record set is healthy, Route 53 responds to DNS
--   queries with the applicable value from the secondary resource record
--   set.</li>
--   <li>When the secondary resource record set is unhealthy, Route 53
--   responds to DNS queries with the applicable value from the primary
--   resource record set regardless of the health of the primary resource
--   record set.</li>
--   <li>If you omit the <tt>HealthCheckId</tt> element for the secondary
--   resource record set, and if the primary resource record set is
--   unhealthy, Route 53 always responds to DNS queries with the applicable
--   value from the secondary resource record set. This is true regardless
--   of the health of the associated endpoint.</li>
--   </ul>
--   
--   You can't create non-failover resource record sets that have the same
--   values for the <tt>Name</tt> and <tt>Type</tt> elements as failover
--   resource record sets.
--   
--   For failover alias resource record sets, you must also include the
--   <tt>EvaluateTargetHealth</tt> element and set the value to true.
--   
--   For more information about configuring failover for Route 53, see the
--   following topics in the <i>Amazon Route 53 Developer Guide</i>:
--   
--   <ul>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
resourceRecordSet_failover :: Lens' ResourceRecordSet (Maybe ResourceRecordSetFailover)

-- | If you want Amazon Route 53 to return this resource record set in
--   response to a DNS query only when the status of a health check is
--   healthy, include the <tt>HealthCheckId</tt> element and specify the ID
--   of the applicable health check.
--   
--   Route 53 determines whether a resource record set is healthy based on
--   one of the following:
--   
--   <ul>
--   <li>By periodically sending a request to the endpoint that is
--   specified in the health check</li>
--   <li>By aggregating the status of a specified group of health checks
--   (calculated health checks)</li>
--   <li>By determining the current state of a CloudWatch alarm (CloudWatch
--   metric health checks)</li>
--   </ul>
--   
--   Route 53 doesn't check the health of the endpoint that is specified in
--   the resource record set, for example, the endpoint specified by the IP
--   address in the <tt>Value</tt> element. When you add a
--   <tt>HealthCheckId</tt> element to a resource record set, Route 53
--   checks the health of the endpoint that you specified in the health
--   check.
--   
--   For more information, see the following topics in the /Amazon Route 53
--   Developer Guide/:
--   
--   <ul>
--   <li><a>How Amazon Route 53 Determines Whether an Endpoint Is
--   Healthy</a></li>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
--   
--   <b>When to Specify HealthCheckId</b>
--   
--   Specifying a value for <tt>HealthCheckId</tt> is useful only when
--   Route 53 is choosing between two or more resource record sets to
--   respond to a DNS query, and you want Route 53 to base the choice in
--   part on the status of a health check. Configuring health checks makes
--   sense only in the following configurations:
--   
--   <ul>
--   <li><b>Non-alias resource record sets</b>: You're checking the health
--   of a group of non-alias resource record sets that have the same
--   routing policy, name, and type (such as multiple weighted records
--   named www.example.com with a type of A) and you specify health check
--   IDs for all the resource record sets.If the health check status for a
--   resource record set is healthy, Route 53 includes the record among the
--   records that it responds to DNS queries with.If the health check
--   status for a resource record set is unhealthy, Route 53 stops
--   responding to DNS queries using the value for that resource record
--   set.If the health check status for all resource record sets in the
--   group is unhealthy, Route 53 considers all resource record sets in the
--   group healthy and responds to DNS queries accordingly.</li>
--   <li><b>Alias resource record sets</b>: You specify the following
--   settings:<ul><li>You set <tt>EvaluateTargetHealth</tt> to true for an
--   alias resource record set in a group of resource record sets that have
--   the same routing policy, name, and type (such as multiple weighted
--   records named www.example.com with a type of A).</li><li>You configure
--   the alias resource record set to route traffic to a non-alias resource
--   record set in the same hosted zone.</li><li>You specify a health check
--   ID for the non-alias resource record set.</li></ul>If the health check
--   status is healthy, Route 53 considers the alias resource record set to
--   be healthy and includes the alias record among the records that it
--   responds to DNS queries with.If the health check status is unhealthy,
--   Route 53 stops responding to DNS queries using the alias resource
--   record set.The alias resource record set can also route traffic to a
--   <i>group</i> of non-alias resource record sets that have the same
--   routing policy, name, and type. In that configuration, associate
--   health checks with all of the resource record sets in the group of
--   non-alias resource record sets.</li>
--   </ul>
--   
--   <b>Geolocation Routing</b>
--   
--   For geolocation resource record sets, if an endpoint is unhealthy,
--   Route 53 looks for a resource record set for the larger, associated
--   geographic region. For example, suppose you have resource record sets
--   for a state in the United States, for the entire United States, for
--   North America, and a resource record set that has <tt>*</tt> for
--   <tt>CountryCode</tt> is <tt>*</tt>, which applies to all locations. If
--   the endpoint for the state resource record set is unhealthy, Route 53
--   checks for healthy resource record sets in the following order until
--   it finds a resource record set for which the endpoint is healthy:
--   
--   <ul>
--   <li>The United States</li>
--   <li>North America</li>
--   <li>The default resource record set</li>
--   </ul>
--   
--   <b>Specifying the Health Check Endpoint by Domain Name</b>
--   
--   If your health checks specify the endpoint only by domain name, we
--   recommend that you create a separate health check for each endpoint.
--   For example, create a health check for each <tt>HTTP</tt> server that
--   is serving content for <tt>www.example.com</tt>. For the value of
--   <tt>FullyQualifiedDomainName</tt>, specify the domain name of the
--   server (such as <tt>us-east-2-www.example.com</tt>), not the name of
--   the resource record sets (<tt>www.example.com</tt>).
--   
--   Health check results will be unpredictable if you do the following:
--   
--   <ul>
--   <li>Create a health check that has the same value for
--   <tt>FullyQualifiedDomainName</tt> as the name of a resource record
--   set.</li>
--   <li>Associate that health check with the resource record set.</li>
--   </ul>
resourceRecordSet_healthCheckId :: Lens' ResourceRecordSet (Maybe Text)

-- | <i>Latency-based resource record sets only:</i> The Amazon EC2 Region
--   where you created the resource that this resource record set refers
--   to. The resource typically is an Amazon Web Services resource, such as
--   an EC2 instance or an ELB load balancer, and is referred to by an IP
--   address or a DNS domain name, depending on the record type.
--   
--   Although creating latency and latency alias resource record sets in a
--   private hosted zone is allowed, it's not supported.
--   
--   When Amazon Route 53 receives a DNS query for a domain name and type
--   for which you have created latency resource record sets, Route 53
--   selects the latency resource record set that has the lowest latency
--   between the end user and the associated Amazon EC2 Region. Route 53
--   then returns the value that is associated with the selected resource
--   record set.
--   
--   Note the following:
--   
--   <ul>
--   <li>You can only specify one <tt>ResourceRecord</tt> per latency
--   resource record set.</li>
--   <li>You can only create one latency resource record set for each
--   Amazon EC2 Region.</li>
--   <li>You aren't required to create latency resource record sets for all
--   Amazon EC2 Regions. Route 53 will choose the region with the best
--   latency from among the regions that you create latency resource record
--   sets for.</li>
--   <li>You can't create non-latency resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   latency resource record sets.</li>
--   </ul>
resourceRecordSet_region :: Lens' ResourceRecordSet (Maybe Region)

-- | <i>Geolocation resource record sets only:</i> A complex type that lets
--   you control how Amazon Route 53 responds to DNS queries based on the
--   geographic origin of the query. For example, if you want all queries
--   from Africa to be routed to a web server with an IP address of
--   <tt>192.0.2.111</tt>, create a resource record set with a
--   <tt>Type</tt> of <tt>A</tt> and a <tt>ContinentCode</tt> of
--   <tt>AF</tt>.
--   
--   Although creating geolocation and geolocation alias resource record
--   sets in a private hosted zone is allowed, it's not supported.
--   
--   If you create separate resource record sets for overlapping geographic
--   regions (for example, one resource record set for a continent and one
--   for a country on the same continent), priority goes to the smallest
--   geographic region. This allows you to route most queries for a
--   continent to one resource and to route queries for a country on that
--   continent to a different resource.
--   
--   You can't create two geolocation resource record sets that specify the
--   same geographic location.
--   
--   The value <tt>*</tt> in the <tt>CountryCode</tt> element matches all
--   geographic locations that aren't specified in other geolocation
--   resource record sets that have the same values for the <tt>Name</tt>
--   and <tt>Type</tt> elements.
--   
--   Geolocation works by mapping IP addresses to locations. However, some
--   IP addresses aren't mapped to geographic locations, so even if you
--   create geolocation resource record sets that cover all seven
--   continents, Route 53 will receive some DNS queries from locations that
--   it can't identify. We recommend that you create a resource record set
--   for which the value of <tt>CountryCode</tt> is <tt>*</tt>. Two groups
--   of queries are routed to the resource that you specify in this record:
--   queries that come from locations for which you haven't created
--   geolocation resource record sets and queries from IP addresses that
--   aren't mapped to a location. If you don't create a <tt>*</tt> resource
--   record set, Route 53 returns a "no answer" response for queries from
--   those locations.
--   
--   You can't create non-geolocation resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   geolocation resource record sets.
resourceRecordSet_geoLocation :: Lens' ResourceRecordSet (Maybe GeoLocation)

-- | <i>Multivalue answer resource record sets only</i>: To route traffic
--   approximately randomly to multiple resources, such as web servers,
--   create one multivalue answer record for each resource and specify
--   <tt>true</tt> for <tt>MultiValueAnswer</tt>. Note the following:
--   
--   <ul>
--   <li>If you associate a health check with a multivalue answer resource
--   record set, Amazon Route 53 responds to DNS queries with the
--   corresponding IP address only when the health check is healthy.</li>
--   <li>If you don't associate a health check with a multivalue answer
--   record, Route 53 always considers the record to be healthy.</li>
--   <li>Route 53 responds to DNS queries with up to eight healthy records;
--   if you have eight or fewer healthy records, Route 53 responds to all
--   DNS queries with all the healthy records.</li>
--   <li>If you have more than eight healthy records, Route 53 responds to
--   different DNS resolvers with different combinations of healthy
--   records.</li>
--   <li>When all records are unhealthy, Route 53 responds to DNS queries
--   with up to eight unhealthy records.</li>
--   <li>If a resource becomes unavailable after a resolver caches a
--   response, client software typically tries another of the IP addresses
--   in the response.</li>
--   </ul>
--   
--   You can't create multivalue answer alias records.
resourceRecordSet_multiValueAnswer :: Lens' ResourceRecordSet (Maybe Bool)

-- | For <tt>ChangeResourceRecordSets</tt> requests, the name of the record
--   that you want to create, update, or delete. For
--   <tt>ListResourceRecordSets</tt> responses, the name of a record in the
--   specified hosted zone.
--   
--   <b>ChangeResourceRecordSets Only</b>
--   
--   Enter a fully qualified domain name, for example,
--   <tt>www.example.com</tt>. You can optionally include a trailing dot.
--   If you omit the trailing dot, Amazon Route 53 assumes that the domain
--   name that you specify is fully qualified. This means that Route 53
--   treats <tt>www.example.com</tt> (without a trailing dot) and
--   <tt>www.example.com.</tt> (with a trailing dot) as identical.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>DNS Domain Name Format</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.
--   
--   You can use the asterisk (*) wildcard to replace the leftmost label in
--   a domain name, for example, <tt>*.example.com</tt>. Note the
--   following:
--   
--   <ul>
--   <li>The * must replace the entire label. For example, you can't
--   specify <tt>*prod.example.com</tt> or <tt>prod*.example.com</tt>.</li>
--   <li>The * can't replace any of the middle labels, for example,
--   marketing.*.example.com.</li>
--   <li>If you include * in any position other than the leftmost label in
--   a domain name, DNS treats it as an * character (ASCII 42), not as a
--   wildcard.You can't use the * wildcard for resource records sets that
--   have a type of NS.</li>
--   </ul>
--   
--   You can use the * wildcard as the leftmost label in a domain name, for
--   example, <tt>*.example.com</tt>. You can't use an * for one of the
--   middle labels, for example, <tt>marketing.*.example.com</tt>. In
--   addition, the * must replace the entire label; for example, you can't
--   specify <tt>prod*.example.com</tt>.
resourceRecordSet_name :: Lens' ResourceRecordSet Text

-- | The DNS record type. For information about different record types and
--   how data is encoded for them, see <a>Supported DNS Resource Record
--   Types</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>DS</tt>
--   |<tt>MX</tt> | <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> |
--   <tt>SOA</tt> | <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>. When creating a group of
--   weighted, latency, geolocation, or failover resource record sets,
--   specify the same value for all of the resource record sets in the
--   group.
--   
--   Valid values for multivalue answer resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   SPF records were formerly used to verify the identity of the sender of
--   email messages. However, we no longer recommend that you create
--   resource record sets for which the value of <tt>Type</tt> is
--   <tt>SPF</tt>. RFC 7208, /Sender Policy Framework (SPF) for Authorizing
--   Use of Domains in Email, Version 1/, has been updated to say,
--   "...[I]ts existence and mechanism defined in [RFC4408] have led to
--   some interoperability issues. Accordingly, its use is no longer
--   appropriate for SPF version 1; implementations are not to use it." In
--   RFC 7208, see section 14.1, <a>The SPF DNS Record Type</a>.
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs:</b> <tt>A</tt></li>
--   <li><b>CloudFront distributions:</b> <tt>A</tt>If IPv6 is enabled for
--   the distribution, create two resource record sets to route traffic to
--   your distribution, one with a value of <tt>A</tt> and one with a value
--   of <tt>AAAA</tt>.</li>
--   <li>__Amazon API Gateway environment that has a regionalized
--   subdomain__: <tt>A</tt></li>
--   <li><b>ELB load balancers:</b> <tt>A</tt> | <tt>AAAA</tt></li>
--   <li><b>Amazon S3 buckets:</b> <tt>A</tt></li>
--   <li><b>Amazon Virtual Private Cloud interface VPC endpoints</b>
--   <tt>A</tt></li>
--   <li><b>Another resource record set in this hosted zone:</b> Specify
--   the type of the resource record set that you're creating the alias
--   for. All values are supported except <tt>NS</tt> and <tt>SOA</tt>.If
--   you're creating an alias record that has the same name as the hosted
--   zone (known as the zone apex), you can't route traffic to a record for
--   which the value of <tt>Type</tt> is <tt>CNAME</tt>. This is because
--   the alias record must have the same type as the record you're routing
--   traffic to, and creating a CNAME record for the zone apex isn't
--   supported even for an alias record.</li>
--   </ul>
resourceRecordSet_type :: Lens' ResourceRecordSet RRType

-- | The ID for the specified resource.
resourceTagSet_resourceId :: Lens' ResourceTagSet (Maybe Text)

-- | The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
resourceTagSet_resourceType :: Lens' ResourceTagSet (Maybe TagResourceType)

-- | The tags associated with the specified resource.
resourceTagSet_tags :: Lens' ResourceTagSet (Maybe (NonEmpty Tag))

-- | The limit that you requested:
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt>, the maximum number of
--   hosted zones that you can associate with the specified reusable
--   delegation set.
reusableDelegationSetLimit_type :: Lens' ReusableDelegationSetLimit ReusableDelegationSetLimitType

-- | The current value for the
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> limit.
reusableDelegationSetLimit_value :: Lens' ReusableDelegationSetLimit Natural

-- | A description of the status of the health check endpoint as reported
--   by one of the Amazon Route 53 health checkers.
statusReport_status :: Lens' StatusReport (Maybe Text)

-- | The date and time that the health checker performed the health check
--   in <a>ISO 8601 format</a> and Coordinated Universal Time (UTC). For
--   example, the value <tt>2017-03-27T17:48:16.751Z</tt> represents March
--   27, 2017 at 17:48:16.751 UTC.
statusReport_checkedTime :: Lens' StatusReport (Maybe UTCTime)

-- | The value of <tt>Value</tt> depends on the operation that you want to
--   perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Value</tt>
--   is the value that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Value</tt> is the new value that you want
--   to assign the tag.</li>
--   </ul>
tag_value :: Lens' Tag (Maybe Text)

-- | The value of <tt>Key</tt> depends on the operation that you want to
--   perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Key</tt> is
--   the name that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Key</tt> is the name of the tag that you
--   want to change the <tt>Value</tt> for.</li>
--   <li><b>Delete a key</b>: <tt>Key</tt> is the name of the tag you want
--   to remove.</li>
--   <li><b>Give a name to a health check</b>: Edit the default
--   <tt>Name</tt> tag. In the Amazon Route 53 console, the list of your
--   health checks includes a <b>Name</b> column that lets you see the name
--   that you've given to each health check.</li>
--   </ul>
tag_key :: Lens' Tag (Maybe Text)

-- | The comment that you specify in the <tt>CreateTrafficPolicy</tt>
--   request, if any.
trafficPolicy_comment :: Lens' TrafficPolicy (Maybe Text)

-- | The ID that Amazon Route 53 assigned to a traffic policy when you
--   created it.
trafficPolicy_id :: Lens' TrafficPolicy Text

-- | The version number that Amazon Route 53 assigns to a traffic policy.
--   For a new traffic policy, the value of <tt>Version</tt> is always 1.
trafficPolicy_version :: Lens' TrafficPolicy Natural

-- | The name that you specified when you created the traffic policy.
trafficPolicy_name :: Lens' TrafficPolicy Text

-- | The DNS type of the resource record sets that Amazon Route 53 creates
--   when you use a traffic policy to create a traffic policy instance.
trafficPolicy_type :: Lens' TrafficPolicy RRType

-- | The definition of a traffic policy in JSON format. You specify the
--   JSON document to use for a new traffic policy in the
--   <tt>CreateTrafficPolicy</tt> request. For more information about the
--   JSON format, see <a>Traffic Policy Document Format</a>.
trafficPolicy_document :: Lens' TrafficPolicy Text

-- | The ID that Amazon Route 53 assigned to the new traffic policy
--   instance.
trafficPolicyInstance_id :: Lens' TrafficPolicyInstance Text

-- | The ID of the hosted zone that Amazon Route 53 created resource record
--   sets in.
trafficPolicyInstance_hostedZoneId :: Lens' TrafficPolicyInstance ResourceId

-- | The DNS name, such as www.example.com, for which Amazon Route 53
--   responds to queries by using the resource record sets that are
--   associated with this traffic policy instance.
trafficPolicyInstance_name :: Lens' TrafficPolicyInstance Text

-- | The TTL that Amazon Route 53 assigned to all of the resource record
--   sets that it created in the specified hosted zone.
trafficPolicyInstance_ttl :: Lens' TrafficPolicyInstance Natural

-- | The value of <tt>State</tt> is one of the following values:
--   
--   <ul>
--   <li><i>Applied</i> Amazon Route 53 has finished creating resource
--   record sets, and changes have propagated to all Route 53 edge
--   locations.</li>
--   <li><i>Creating</i> Route 53 is creating the resource record sets. Use
--   <tt>GetTrafficPolicyInstance</tt> to confirm that the
--   <tt>CreateTrafficPolicyInstance</tt> request completed
--   successfully.</li>
--   <li><i>Failed</i> Route 53 wasn't able to create or update the
--   resource record sets. When the value of <tt>State</tt> is
--   <tt>Failed</tt>, see <tt>Message</tt> for an explanation of what
--   caused the request to fail.</li>
--   </ul>
trafficPolicyInstance_state :: Lens' TrafficPolicyInstance Text

-- | If <tt>State</tt> is <tt>Failed</tt>, an explanation of the reason for
--   the failure. If <tt>State</tt> is another value, <tt>Message</tt> is
--   empty.
trafficPolicyInstance_message :: Lens' TrafficPolicyInstance Text

-- | The ID of the traffic policy that Amazon Route 53 used to create
--   resource record sets in the specified hosted zone.
trafficPolicyInstance_trafficPolicyId :: Lens' TrafficPolicyInstance Text

-- | The version of the traffic policy that Amazon Route 53 used to create
--   resource record sets in the specified hosted zone.
trafficPolicyInstance_trafficPolicyVersion :: Lens' TrafficPolicyInstance Natural

-- | The DNS type that Amazon Route 53 assigned to all of the resource
--   record sets that it created for this traffic policy instance.
trafficPolicyInstance_trafficPolicyType :: Lens' TrafficPolicyInstance RRType

-- | The ID that Amazon Route 53 assigned to the traffic policy when you
--   created it.
trafficPolicySummary_id :: Lens' TrafficPolicySummary Text

-- | The name that you specified for the traffic policy when you created
--   it.
trafficPolicySummary_name :: Lens' TrafficPolicySummary Text

-- | The DNS type of the resource record sets that Amazon Route 53 creates
--   when you use a traffic policy to create a traffic policy instance.
trafficPolicySummary_type :: Lens' TrafficPolicySummary RRType

-- | The version number of the latest version of the traffic policy.
trafficPolicySummary_latestVersion :: Lens' TrafficPolicySummary Natural

-- | The number of traffic policies that are associated with the current
--   Amazon Web Services account.
trafficPolicySummary_trafficPolicyCount :: Lens' TrafficPolicySummary Natural

-- | (Private hosted zones only) The region that an Amazon VPC was created
--   in.
vpc_vPCRegion :: Lens' VPC (Maybe VPCRegion)

-- | Undocumented member.
vpc_vPCId :: Lens' VPC (Maybe Text)


module Network.AWS.Route53.Waiters

-- | Polls <a>GetChange</a> every 30 seconds until a successful state is
--   reached. An error is returned after 60 failed checks.
newResourceRecordSetsChanged :: Wait GetChange


-- | Derived from API version <tt>2013-04-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Route 53 is a scalable Domain Name System (DNS) web service. It
--   provides secure and reliable routing to your infrastructure that uses
--   Amazon Web Services (AWS) products, such as Amazon Elastic Compute
--   Cloud (Amazon EC2), Elastic Load Balancing, or Amazon Simple Storage
--   Service (Amazon S3). You can also use Amazon Route 53 to route users
--   to your infrastructure outside of AWS.
module Network.AWS.Route53

-- | API version <tt>2013-04-01</tt> of the Amazon Route 53 SDK
--   configuration.
defaultService :: Service

-- | The value of <tt>HealthCheckVersion</tt> in the request doesn't match
--   the value of <tt>HealthCheckVersion</tt> in the health check.
_HealthCheckVersionMismatch :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is no DNS query logging configuration with the specified ID.
_NoSuchQueryLoggingConfig :: AsError a => Getting (First ServiceError) a ServiceError

-- | The hosted zone doesn't have any DNSSEC resources.
_DNSSECNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The key-signing key (KSK) that you specified can't be deactivated
--   because it's the only KSK for a currently-enabled DNSSEC. Disable
--   DNSSEC signing, or add or enable another KSK.
_KeySigningKeyInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've reached the limit for the number of key-signing keys (KSKs).
--   Remove at least one KSK, and then try again.
_TooManyKeySigningKeys :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified hosted zone is a public hosted zone, not a private
--   hosted zone.
_HostedZoneNotPrivate :: AsError a => Getting (First ServiceError) a ServiceError

-- | The input is not valid.
_InvalidInput :: AsError a => Getting (First ServiceError) a ServiceError

-- | The hosted zone contains resource records that are not SOA or NS
--   records.
_HostedZoneNotEmpty :: AsError a => Getting (First ServiceError) a ServiceError

-- | Parameter name is not valid.
_InvalidArgument :: AsError a => Getting (First ServiceError) a ServiceError

-- | A key-signing key (KSK) with <tt>ACTIVE</tt> status wasn't found.
_KeySigningKeyWithActiveStatusNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is already a traffic policy instance with the specified ID.
_TrafficPolicyInstanceAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | You tried to update a traffic policy instance by using a traffic
--   policy version that has a different DNS type than the current type for
--   the instance. You specified the type in the JSON document in the
--   <tt>CreateTrafficPolicy</tt> or
--   <tt>CreateTrafficPolicyVersion</tt>request.
_ConflictingTypes :: AsError a => Getting (First ServiceError) a ServiceError

-- | You can create only one query logging configuration for a hosted zone,
--   and a query logging configuration already exists for this hosted zone.
_QueryLoggingConfigAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | Another user submitted a request to create, update, or delete the
--   object at the same time that you did. Retry the request.
_ConcurrentModification :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified delegation set has already been marked as reusable.
_DelegationSetAlreadyReusable :: AsError a => Getting (First ServiceError) a ServiceError

-- | Associating the specified VPC with the specified hosted zone has not
--   been authorized.
_NotAuthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Route 53 doesn't have the permissions required to create log
--   streams and send query logs to log streams. Possible causes include
--   the following:
--   
--   <ul>
--   <li>There is no resource policy that specifies the log group ARN in
--   the value for <tt>Resource</tt>.</li>
--   <li>The resource policy that includes the log group ARN in the value
--   for <tt>Resource</tt> doesn't have the necessary permissions.</li>
--   <li>The resource policy hasn't finished propagating yet.</li>
--   <li>The Key management service (KMS) key you specified doesn’t exist
--   or it can’t be used with the log group associated with query log.
--   Update or provide a resource policy to grant permissions for the KMS
--   key.</li>
--   </ul>
_InsufficientCloudWatchLogsResourcePolicy :: AsError a => Getting (First ServiceError) a ServiceError

-- | There is no CloudWatch Logs log group with the specified ARN.
_NoSuchCloudWatchLogsLogGroup :: AsError a => Getting (First ServiceError) a ServiceError

-- | If Amazon Route 53 can't process a request before the next request
--   arrives, it will reject subsequent requests for the same hosted zone
--   and return an <tt>HTTP 400 error</tt> (<tt>Bad request</tt>). If Route
--   53 returns this error repeatedly for the same request, we recommend
--   that you wait, in intervals of increasing duration, before you try the
--   request again.
_PriorRequestNotComplete :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception contains a list of messages that might contain one or
--   more error messages. Each error message indicates one error in the
--   change batch.
_InvalidChangeBatch :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've created the maximum number of authorizations that can be
--   created for the specified hosted zone. To authorize another VPC to be
--   associated with the hosted zone, submit a
--   <tt>DeleteVPCAssociationAuthorization</tt> request to remove an
--   existing authorization. To get a list of existing authorizations,
--   submit a <tt>ListVPCAssociationAuthorizations</tt> request.
_TooManyVPCAssociationAuthorizations :: AsError a => Getting (First ServiceError) a ServiceError

-- | A traffic policy that has the same value for <tt>Name</tt> already
--   exists.
_TrafficPolicyAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | The format of the traffic policy document that you specified in the
--   <tt>Document</tt> element is not valid.
_InvalidTrafficPolicyDocument :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your hosted zone status isn't valid for this operation. In the hosted
--   zone, change the status to enable <tt>DNSSEC</tt> or disable
--   <tt>DNSSEC</tt>.
_InvalidSigningStatus :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value that you specified to get the second or subsequent page of
--   results is invalid.
_InvalidPaginationToken :: AsError a => Getting (First ServiceError) a ServiceError

-- | A reusable delegation set with the specified ID does not exist.
_DelegationSetNotReusable :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified domain name is not valid.
_InvalidDomainName :: AsError a => Getting (First ServiceError) a ServiceError

-- | No traffic policy exists with the specified ID.
_NoSuchTrafficPolicy :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified HostedZone can't be found.
_HostedZoneNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified delegation contains associated hosted zones which must
--   be deleted before the reusable delegation set can be deleted.
_DelegationSetInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | A reusable delegation set with the specified ID does not exist.
_NoSuchDelegationSet :: AsError a => Getting (First ServiceError) a ServiceError

-- | The health check you're attempting to create already exists. Amazon
--   Route 53 returns this error when you submit a request that has the
--   following values:
--   
--   <ul>
--   <li>The same value for <tt>CallerReference</tt> as an existing health
--   check, and one or more values that differ from the existing health
--   check that has the same caller reference.</li>
--   <li>The same value for <tt>CallerReference</tt> as a health check that
--   you created and later deleted, regardless of the other settings in the
--   request.</li>
--   </ul>
_HealthCheckAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | This traffic policy can't be created because the current account has
--   reached the limit on the number of traffic policies.
--   
--   For information about default limits, see <a>Limits</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.
--   
--   To get the current limit for an account, see <a>GetAccountLimit</a>.
--   
--   To request a higher limit, <a>create a case</a> with the Amazon Web
--   Services Support Center.
_TooManyTrafficPolicies :: AsError a => Getting (First ServiceError) a ServiceError

-- | The VPC that you specified is not authorized to be associated with the
--   hosted zone.
_VPCAssociationAuthorizationNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Route 53 doesn't support the specified geographic location. For
--   a list of supported geolocation codes, see the <a>GeoLocation</a> data
--   type.
_NoSuchGeoLocation :: AsError a => Getting (First ServiceError) a ServiceError

-- | You can create a hosted zone that has the same name as an existing
--   hosted zone (example.com is common), but there is a limit to the
--   number of hosted zones that have the same name. If you get this error,
--   Amazon Route 53 has reached that limit. If you own the domain name and
--   Route 53 generates this error, contact Customer Support.
_DelegationSetNotAvailable :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified key-signing key (KSK) doesn't exist.
_NoSuchKeySigningKey :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified VPC and hosted zone are not currently associated.
_VPCAssociationNotFound :: AsError a => Getting (First ServiceError) a ServiceError

-- | The limit on the number of requests per second was exceeded.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The hosted zone nameservers don't match the parent nameservers. The
--   hosted zone and parent must have the same nameservers.
_HostedZonePartiallyDelegated :: AsError a => Getting (First ServiceError) a ServiceError

-- | The key-signing key (KSK) is specified in a parent DS record.
_KeySigningKeyInParentDSRecord :: AsError a => Getting (First ServiceError) a ServiceError

-- | A change with the specified change ID does not exist.
_NoSuchChange :: AsError a => Getting (First ServiceError) a ServiceError

-- | The key-signing key (KSK) name that you specified isn't a valid name.
_InvalidKeySigningKeyName :: AsError a => Getting (First ServiceError) a ServiceError

-- | This operation can't be completed either because the current account
--   has reached the limit on reusable delegation sets that it can create
--   or because you've reached the limit on the number of Amazon VPCs that
--   you can associate with a private hosted zone. To get the current limit
--   on the number of reusable delegation sets, see <a>GetAccountLimit</a>.
--   To get the current limit on the number of Amazon VPCs that you can
--   associate with a private hosted zone, see <a>GetHostedZoneLimit</a>.
--   To request a higher limit, <a>create a case</a> with the Amazon Web
--   Services Support Center.
_LimitsExceeded :: AsError a => Getting (First ServiceError) a ServiceError

-- | You've already created a key-signing key (KSK) with this name or with
--   the same customer managed customer master key (CMK) ARN.
_KeySigningKeyAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | This traffic policy instance can't be created because the current
--   account has reached the limit on the number of traffic policy
--   instances.
--   
--   For information about default limits, see <a>Limits</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.
--   
--   For information about how to get the current limit for an account, see
--   <a>GetAccountLimit</a>.
--   
--   To request a higher limit, <a>create a case</a> with the Amazon Web
--   Services Support Center.
_TooManyTrafficPolicyInstances :: AsError a => Getting (First ServiceError) a ServiceError

-- | No traffic policy instance exists with the specified ID.
_NoSuchTrafficPolicyInstance :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource you're trying to access is unsupported on this Amazon
--   Route 53 endpoint.
_IncompatibleVersion :: AsError a => Getting (First ServiceError) a ServiceError

-- | You're trying to associate a VPC with a public hosted zone. Amazon
--   Route 53 doesn't support associating a VPC with a public hosted zone.
_PublicZoneVPCAssociation :: AsError a => Getting (First ServiceError) a ServiceError

-- | No hosted zone exists with the ID that you specified.
_NoSuchHostedZone :: AsError a => Getting (First ServiceError) a ServiceError

-- | This operation can't be completed either because the current account
--   has reached the limit on the number of hosted zones or because you've
--   reached the limit on the number of hosted zones that can be associated
--   with a reusable delegation set.
--   
--   For information about default limits, see <a>Limits</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.
--   
--   To get the current limit on hosted zones that can be created by an
--   account, see <a>GetAccountLimit</a>.
--   
--   To get the current limit on hosted zones that can be associated with a
--   reusable delegation set, see <a>GetReusableDelegationSetLimit</a>.
--   
--   To request a higher limit, <a>create a case</a> with the Amazon Web
--   Services Support Center.
_TooManyHostedZones :: AsError a => Getting (First ServiceError) a ServiceError

-- | This error code is not in use.
_HealthCheckInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | The key-signing key (KSK) status isn't valid or another KSK has the
--   status <tt>INTERNAL_FAILURE</tt>.
_InvalidKeySigningKeyStatus :: AsError a => Getting (First ServiceError) a ServiceError

-- | A delegation set with the same owner and caller reference combination
--   has already been created.
_DelegationSetAlreadyCreated :: AsError a => Getting (First ServiceError) a ServiceError

-- | The cause of this error depends on the operation that you're
--   performing:
--   
--   <ul>
--   <li><b>Create a public hosted zone:</b> Two hosted zones that have the
--   same name or that have a parent/child relationship (example.com and
--   test.example.com) can't have any common name servers. You tried to
--   create a hosted zone that has the same name as an existing hosted zone
--   or that's the parent or child of an existing hosted zone, and you
--   specified a delegation set that shares one or more name servers with
--   the existing hosted zone. For more information, see
--   <a>CreateReusableDelegationSet</a>.</li>
--   <li><b>Create a private hosted zone:</b> A hosted zone with the
--   specified name already exists and is already associated with the
--   Amazon VPC that you specified.</li>
--   <li><b>Associate VPCs with a private hosted zone:</b> The VPC that you
--   specified is already associated with another hosted zone that has the
--   same name.</li>
--   </ul>
_ConflictingDomainExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | The VPC that you're trying to disassociate from the private hosted
--   zone is the last VPC that is associated with the hosted zone. Amazon
--   Route 53 doesn't support disassociating the last VPC from a hosted
--   zone.
_LastVPCAssociation :: AsError a => Getting (First ServiceError) a ServiceError

-- | This health check can't be created because the current account has
--   reached the limit on the number of active health checks.
--   
--   For information about default limits, see <a>Limits</a> in the
--   <i>Amazon Route 53 Developer Guide</i>.
--   
--   For information about how to get the current limit for an account, see
--   <a>GetAccountLimit</a>. To request a higher limit, <a>create a
--   case</a> with the Amazon Web Services Support Center.
--   
--   You have reached the maximum number of active health checks for an
--   Amazon Web Services account. To request a higher limit, <a>create a
--   case</a> with the Amazon Web Services Support Center.
_TooManyHealthChecks :: AsError a => Getting (First ServiceError) a ServiceError

-- | No health check exists with the specified ID.
_NoSuchHealthCheck :: AsError a => Getting (First ServiceError) a ServiceError

-- | The KeyManagementServiceArn that you specified isn't valid to use with
--   DNSSEC signing.
_InvalidKMSArn :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more traffic policy instances were created by using the
--   specified traffic policy.
_TrafficPolicyInUse :: AsError a => Getting (First ServiceError) a ServiceError

-- | The VPC ID that you specified either isn't a valid ID or the current
--   account is not authorized to access this VPC.
_InvalidVPCId :: AsError a => Getting (First ServiceError) a ServiceError

-- | The hosted zone you're trying to create already exists. Amazon Route
--   53 returns this error when a hosted zone has already been created with
--   the specified <tt>CallerReference</tt>.
_HostedZoneAlreadyExists :: AsError a => Getting (First ServiceError) a ServiceError

-- | This traffic policy version can't be created because you've reached
--   the limit of 1000 on the number of versions that you can create for
--   the current traffic policy.
--   
--   To create more traffic policy versions, you can use
--   <a>GetTrafficPolicy</a> to get the traffic policy document for a
--   specified traffic policy version, and then use
--   <a>CreateTrafficPolicy</a> to create a new traffic policy using the
--   traffic policy document.
_TooManyTrafficPolicyVersionsForCurrentPolicy :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>GetChange</a> every 30 seconds until a successful state is
--   reached. An error is returned after 60 failed checks.
newResourceRecordSetsChanged :: Wait GetChange

-- | A complex type that contains information about the request to create a
--   hosted zone.
--   
--   <i>See:</i> <a>newGetHostedZoneLimit</a> smart constructor.
data GetHostedZoneLimit
GetHostedZoneLimit' :: HostedZoneLimitType -> ResourceId -> GetHostedZoneLimit

-- | Create a value of <a>GetHostedZoneLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':GetHostedZoneLimit'</a>, <a>getHostedZoneLimit_type</a>
--   - The limit that you want to get. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
--   
--   <a>$sel:hostedZoneId:GetHostedZoneLimit'</a>,
--   <a>getHostedZoneLimit_hostedZoneId</a> - The ID of the hosted zone
--   that you want to get a limit for.
newGetHostedZoneLimit :: HostedZoneLimitType -> ResourceId -> GetHostedZoneLimit

-- | A complex type that contains the requested limit.
--   
--   <i>See:</i> <a>newGetHostedZoneLimitResponse</a> smart constructor.
data GetHostedZoneLimitResponse
GetHostedZoneLimitResponse' :: Int -> HostedZoneLimit -> Natural -> GetHostedZoneLimitResponse

-- | Create a value of <a>GetHostedZoneLimitResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHostedZoneLimitResponse'</a>,
--   <a>getHostedZoneLimitResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:limit:GetHostedZoneLimitResponse'</a>,
--   <a>getHostedZoneLimitResponse_limit</a> - The current setting for the
--   specified limit. For example, if you specified
--   <tt>MAX_RRSETS_BY_ZONE</tt> for the value of <tt>Type</tt> in the
--   request, the value of <tt>Limit</tt> is the maximum number of records
--   that you can create in the specified hosted zone.
--   
--   <a>$sel:count:GetHostedZoneLimitResponse'</a>,
--   <a>getHostedZoneLimitResponse_count</a> - The current number of
--   entities that you have created of the specified type. For example, if
--   you specified <tt>MAX_RRSETS_BY_ZONE</tt> for the value of
--   <tt>Type</tt> in the request, the value of <tt>Count</tt> is the
--   current number of records that you have created in the specified
--   hosted zone.
newGetHostedZoneLimitResponse :: Int -> HostedZoneLimit -> Natural -> GetHostedZoneLimitResponse

-- | A complex type that contains information about the request to
--   associate a VPC with a private hosted zone.
--   
--   <i>See:</i> <a>newAssociateVPCWithHostedZone</a> smart constructor.
data AssociateVPCWithHostedZone
AssociateVPCWithHostedZone' :: Maybe Text -> ResourceId -> VPC -> AssociateVPCWithHostedZone

-- | Create a value of <a>AssociateVPCWithHostedZone</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:AssociateVPCWithHostedZone'</a>,
--   <a>associateVPCWithHostedZone_comment</a> - <i>Optional:</i> A comment
--   about the association request.
--   
--   <a>$sel:hostedZoneId:AssociateVPCWithHostedZone'</a>,
--   <a>associateVPCWithHostedZone_hostedZoneId</a> - The ID of the private
--   hosted zone that you want to associate an Amazon VPC with.
--   
--   Note that you can't associate a VPC with a hosted zone that doesn't
--   have an existing VPC association.
--   
--   <a>$sel:vpc:AssociateVPCWithHostedZone'</a>,
--   <a>associateVPCWithHostedZone_vpc</a> - A complex type that contains
--   information about the VPC that you want to associate with a private
--   hosted zone.
newAssociateVPCWithHostedZone :: ResourceId -> VPC -> AssociateVPCWithHostedZone

-- | A complex type that contains the response information for the
--   <tt>AssociateVPCWithHostedZone</tt> request.
--   
--   <i>See:</i> <a>newAssociateVPCWithHostedZoneResponse</a> smart
--   constructor.
data AssociateVPCWithHostedZoneResponse
AssociateVPCWithHostedZoneResponse' :: Int -> ChangeInfo -> AssociateVPCWithHostedZoneResponse

-- | Create a value of <a>AssociateVPCWithHostedZoneResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateVPCWithHostedZoneResponse'</a>,
--   <a>associateVPCWithHostedZoneResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:changeInfo:AssociateVPCWithHostedZoneResponse'</a>,
--   <a>associateVPCWithHostedZoneResponse_changeInfo</a> - A complex type
--   that describes the changes made to your hosted zone.
newAssociateVPCWithHostedZoneResponse :: Int -> ChangeInfo -> AssociateVPCWithHostedZoneResponse

-- | A request to delete a specified traffic policy version.
--   
--   <i>See:</i> <a>newDeleteTrafficPolicy</a> smart constructor.
data DeleteTrafficPolicy
DeleteTrafficPolicy' :: Text -> Natural -> DeleteTrafficPolicy

-- | Create a value of <a>DeleteTrafficPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteTrafficPolicy'</a>, <a>deleteTrafficPolicy_id</a> -
--   The ID of the traffic policy that you want to delete.
--   
--   <a>$sel:version:DeleteTrafficPolicy'</a>,
--   <a>deleteTrafficPolicy_version</a> - The version number of the traffic
--   policy that you want to delete.
newDeleteTrafficPolicy :: Text -> Natural -> DeleteTrafficPolicy

-- | An empty element.
--   
--   <i>See:</i> <a>newDeleteTrafficPolicyResponse</a> smart constructor.
data DeleteTrafficPolicyResponse
DeleteTrafficPolicyResponse' :: Int -> DeleteTrafficPolicyResponse

-- | Create a value of <a>DeleteTrafficPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTrafficPolicyResponse'</a>,
--   <a>deleteTrafficPolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteTrafficPolicyResponse :: Int -> DeleteTrafficPolicyResponse

-- | <i>See:</i> <a>newDisableHostedZoneDNSSEC</a> smart constructor.
data DisableHostedZoneDNSSEC
DisableHostedZoneDNSSEC' :: ResourceId -> DisableHostedZoneDNSSEC

-- | Create a value of <a>DisableHostedZoneDNSSEC</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:DisableHostedZoneDNSSEC'</a>,
--   <a>disableHostedZoneDNSSEC_hostedZoneId</a> - A unique string used to
--   identify a hosted zone.
newDisableHostedZoneDNSSEC :: ResourceId -> DisableHostedZoneDNSSEC

-- | <i>See:</i> <a>newDisableHostedZoneDNSSECResponse</a> smart
--   constructor.
data DisableHostedZoneDNSSECResponse
DisableHostedZoneDNSSECResponse' :: Int -> ChangeInfo -> DisableHostedZoneDNSSECResponse

-- | Create a value of <a>DisableHostedZoneDNSSECResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisableHostedZoneDNSSECResponse'</a>,
--   <a>disableHostedZoneDNSSECResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:changeInfo:DisableHostedZoneDNSSECResponse'</a>,
--   <a>disableHostedZoneDNSSECResponse_changeInfo</a> - Undocumented
--   member.
newDisableHostedZoneDNSSECResponse :: Int -> ChangeInfo -> DisableHostedZoneDNSSECResponse

-- | <i>See:</i> <a>newCreateKeySigningKey</a> smart constructor.
data CreateKeySigningKey
CreateKeySigningKey' :: Text -> ResourceId -> Text -> Text -> Text -> CreateKeySigningKey

-- | Create a value of <a>CreateKeySigningKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:callerReference:CreateKeySigningKey'</a>,
--   <a>createKeySigningKey_callerReference</a> - A unique string that
--   identifies the request.
--   
--   <a>$sel:hostedZoneId:CreateKeySigningKey'</a>,
--   <a>createKeySigningKey_hostedZoneId</a> - The unique string (ID) used
--   to identify a hosted zone.
--   
--   <a>$sel:keyManagementServiceArn:CreateKeySigningKey'</a>,
--   <a>createKeySigningKey_keyManagementServiceArn</a> - The Amazon
--   resource name (ARN) for a customer managed customer master key (CMK)
--   in Key Management Service (KMS). The <tt>KeyManagementServiceArn</tt>
--   must be unique for each key-signing key (KSK) in a single hosted zone.
--   To see an example of <tt>KeyManagementServiceArn</tt> that grants the
--   correct permissions for DNSSEC, scroll down to <b>Example</b>.
--   
--   You must configure the customer managed CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with a customer managed CMK in KMS,
--   see <a>Key Management Service concepts</a>.
--   
--   <a>$sel:name:CreateKeySigningKey'</a>, <a>createKeySigningKey_name</a>
--   - A string used to identify a key-signing key (KSK). <tt>Name</tt> can
--   include numbers, letters, and underscores (_). <tt>Name</tt> must be
--   unique for each key-signing key in the same hosted zone.
--   
--   <a>$sel:status:CreateKeySigningKey'</a>,
--   <a>createKeySigningKey_status</a> - A string specifying the initial
--   status of the key-signing key (KSK). You can set the value to
--   <tt>ACTIVE</tt> or <tt>INACTIVE</tt>.
newCreateKeySigningKey :: Text -> ResourceId -> Text -> Text -> Text -> CreateKeySigningKey

-- | <i>See:</i> <a>newCreateKeySigningKeyResponse</a> smart constructor.
data CreateKeySigningKeyResponse
CreateKeySigningKeyResponse' :: Int -> ChangeInfo -> KeySigningKey -> Text -> CreateKeySigningKeyResponse

-- | Create a value of <a>CreateKeySigningKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateKeySigningKeyResponse'</a>,
--   <a>createKeySigningKeyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:changeInfo:CreateKeySigningKeyResponse'</a>,
--   <a>createKeySigningKeyResponse_changeInfo</a> - Undocumented member.
--   
--   <a>$sel:keySigningKey:CreateKeySigningKeyResponse'</a>,
--   <a>createKeySigningKeyResponse_keySigningKey</a> - The key-signing key
--   (KSK) that the request creates.
--   
--   <a>$sel:location:CreateKeySigningKeyResponse'</a>,
--   <a>createKeySigningKeyResponse_location</a> - The unique URL
--   representing the new key-signing key (KSK).
newCreateKeySigningKeyResponse :: Int -> ChangeInfo -> KeySigningKey -> Text -> CreateKeySigningKeyResponse

-- | Empty request.
--   
--   <i>See:</i> <a>newGetCheckerIpRanges</a> smart constructor.
data GetCheckerIpRanges
GetCheckerIpRanges' :: GetCheckerIpRanges

-- | Create a value of <a>GetCheckerIpRanges</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetCheckerIpRanges :: GetCheckerIpRanges

-- | A complex type that contains the <tt>CheckerIpRanges</tt> element.
--   
--   <i>See:</i> <a>newGetCheckerIpRangesResponse</a> smart constructor.
data GetCheckerIpRangesResponse
GetCheckerIpRangesResponse' :: Int -> [Text] -> GetCheckerIpRangesResponse

-- | Create a value of <a>GetCheckerIpRangesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetCheckerIpRangesResponse'</a>,
--   <a>getCheckerIpRangesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:checkerIpRanges:GetCheckerIpRangesResponse'</a>,
--   <a>getCheckerIpRangesResponse_checkerIpRanges</a> - A complex type
--   that contains sorted list of IP ranges in CIDR format for Amazon Route
--   53 health checkers.
newGetCheckerIpRangesResponse :: Int -> GetCheckerIpRangesResponse

-- | Gets information about a specified traffic policy instance.
--   
--   <i>See:</i> <a>newGetTrafficPolicyInstance</a> smart constructor.
data GetTrafficPolicyInstance
GetTrafficPolicyInstance' :: Text -> GetTrafficPolicyInstance

-- | Create a value of <a>GetTrafficPolicyInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetTrafficPolicyInstance'</a>,
--   <a>getTrafficPolicyInstance_id</a> - The ID of the traffic policy
--   instance that you want to get information about.
newGetTrafficPolicyInstance :: Text -> GetTrafficPolicyInstance

-- | A complex type that contains information about the resource record
--   sets that Amazon Route 53 created based on a specified traffic policy.
--   
--   <i>See:</i> <a>newGetTrafficPolicyInstanceResponse</a> smart
--   constructor.
data GetTrafficPolicyInstanceResponse
GetTrafficPolicyInstanceResponse' :: Int -> TrafficPolicyInstance -> GetTrafficPolicyInstanceResponse

-- | Create a value of <a>GetTrafficPolicyInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetTrafficPolicyInstanceResponse'</a>,
--   <a>getTrafficPolicyInstanceResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:trafficPolicyInstance:GetTrafficPolicyInstanceResponse'</a>,
--   <a>getTrafficPolicyInstanceResponse_trafficPolicyInstance</a> - A
--   complex type that contains settings for the traffic policy instance.
newGetTrafficPolicyInstanceResponse :: Int -> TrafficPolicyInstance -> GetTrafficPolicyInstanceResponse

-- | A request for the reason that a health check failed most recently.
--   
--   <i>See:</i> <a>newGetHealthCheckLastFailureReason</a> smart
--   constructor.
data GetHealthCheckLastFailureReason
GetHealthCheckLastFailureReason' :: Text -> GetHealthCheckLastFailureReason

-- | Create a value of <a>GetHealthCheckLastFailureReason</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckId:GetHealthCheckLastFailureReason'</a>,
--   <a>getHealthCheckLastFailureReason_healthCheckId</a> - The ID for the
--   health check for which you want the last failure reason. When you
--   created the health check, <tt>CreateHealthCheck</tt> returned the ID
--   in the response, in the <tt>HealthCheckId</tt> element.
--   
--   If you want to get the last failure reason for a calculated health
--   check, you must use the Amazon Route 53 console or the CloudWatch
--   console. You can't use <tt>GetHealthCheckLastFailureReason</tt> for a
--   calculated health check.
newGetHealthCheckLastFailureReason :: Text -> GetHealthCheckLastFailureReason

-- | A complex type that contains the response to a
--   <tt>GetHealthCheckLastFailureReason</tt> request.
--   
--   <i>See:</i> <a>newGetHealthCheckLastFailureReasonResponse</a> smart
--   constructor.
data GetHealthCheckLastFailureReasonResponse
GetHealthCheckLastFailureReasonResponse' :: Int -> [HealthCheckObservation] -> GetHealthCheckLastFailureReasonResponse

-- | Create a value of <a>GetHealthCheckLastFailureReasonResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHealthCheckLastFailureReasonResponse'</a>,
--   <a>getHealthCheckLastFailureReasonResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:healthCheckObservations:GetHealthCheckLastFailureReasonResponse'</a>,
--   <a>getHealthCheckLastFailureReasonResponse_healthCheckObservations</a>
--   - A list that contains one <tt>Observation</tt> element for each
--   Amazon Route 53 health checker that is reporting a last failure
--   reason.
newGetHealthCheckLastFailureReasonResponse :: Int -> GetHealthCheckLastFailureReasonResponse

-- | A request to delete a reusable delegation set.
--   
--   <i>See:</i> <a>newDeleteReusableDelegationSet</a> smart constructor.
data DeleteReusableDelegationSet
DeleteReusableDelegationSet' :: ResourceId -> DeleteReusableDelegationSet

-- | Create a value of <a>DeleteReusableDelegationSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteReusableDelegationSet'</a>,
--   <a>deleteReusableDelegationSet_id</a> - The ID of the reusable
--   delegation set that you want to delete.
newDeleteReusableDelegationSet :: ResourceId -> DeleteReusableDelegationSet

-- | An empty element.
--   
--   <i>See:</i> <a>newDeleteReusableDelegationSetResponse</a> smart
--   constructor.
data DeleteReusableDelegationSetResponse
DeleteReusableDelegationSetResponse' :: Int -> DeleteReusableDelegationSetResponse

-- | Create a value of <a>DeleteReusableDelegationSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteReusableDelegationSetResponse'</a>,
--   <a>deleteReusableDelegationSetResponse_httpStatus</a> - The response's
--   http status code.
newDeleteReusableDelegationSetResponse :: Int -> DeleteReusableDelegationSetResponse

-- | Retrieves a list of the public and private hosted zones that are
--   associated with the current Amazon Web Services account in ASCII order
--   by domain name.
--   
--   <i>See:</i> <a>newListHostedZonesByName</a> smart constructor.
data ListHostedZonesByName
ListHostedZonesByName' :: Maybe ResourceId -> Maybe Text -> Maybe Text -> ListHostedZonesByName

-- | Create a value of <a>ListHostedZonesByName</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByName_hostedZoneId</a> - (Optional) For your first
--   request to <tt>ListHostedZonesByName</tt>, do not include the
--   <tt>hostedzoneid</tt> parameter.
--   
--   If you have more hosted zones than the value of <tt>maxitems</tt>,
--   <tt>ListHostedZonesByName</tt> returns only the first
--   <tt>maxitems</tt> hosted zones. To get the next group of
--   <tt>maxitems</tt> hosted zones, submit another request to
--   <tt>ListHostedZonesByName</tt> and include both <tt>dnsname</tt> and
--   <tt>hostedzoneid</tt> parameters. For the value of
--   <tt>hostedzoneid</tt>, specify the value of the
--   <tt>NextHostedZoneId</tt> element from the previous response.
--   
--   <a>$sel:maxItems:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByName_maxItems</a> - The maximum number of hosted
--   zones to be included in the response body for this request. If you
--   have more than <tt>maxitems</tt> hosted zones, then the value of the
--   <tt>IsTruncated</tt> element in the response is true, and the values
--   of <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> specify the
--   first hosted zone in the next group of <tt>maxitems</tt> hosted zones.
--   
--   <a>$sel:dNSName:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByName_dNSName</a> - (Optional) For your first
--   request to <tt>ListHostedZonesByName</tt>, include the
--   <tt>dnsname</tt> parameter only if you want to specify the name of the
--   first hosted zone in the response. If you don't include the
--   <tt>dnsname</tt> parameter, Amazon Route 53 returns all of the hosted
--   zones that were created by the current Amazon Web Services account, in
--   ASCII order. For subsequent requests, include both <tt>dnsname</tt>
--   and <tt>hostedzoneid</tt> parameters. For <tt>dnsname</tt>, specify
--   the value of <tt>NextDNSName</tt> from the previous response.
newListHostedZonesByName :: ListHostedZonesByName

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListHostedZonesByNameResponse</a> smart constructor.
data ListHostedZonesByNameResponse
ListHostedZonesByNameResponse' :: Maybe ResourceId -> Maybe ResourceId -> Maybe Text -> Maybe Text -> Int -> [HostedZone] -> Bool -> Text -> ListHostedZonesByNameResponse

-- | Create a value of <a>ListHostedZonesByNameResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByNameResponse_hostedZoneId</a> - The ID that Amazon
--   Route 53 assigned to the hosted zone when you created it.
--   
--   <a>$sel:nextHostedZoneId:ListHostedZonesByNameResponse'</a>,
--   <a>listHostedZonesByNameResponse_nextHostedZoneId</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextHostedZoneId</tt> identifies the first hosted zone in the next
--   group of <tt>maxitems</tt> hosted zones. Call
--   <tt>ListHostedZonesByName</tt> again and specify the value of
--   <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters, respectively.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
--   
--   <a>$sel:dNSName:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByNameResponse_dNSName</a> - For the second and
--   subsequent calls to <tt>ListHostedZonesByName</tt>, <tt>DNSName</tt>
--   is the value that you specified for the <tt>dnsname</tt> parameter in
--   the request that produced the current response.
--   
--   <a>$sel:nextDNSName:ListHostedZonesByNameResponse'</a>,
--   <a>listHostedZonesByNameResponse_nextDNSName</a> - If
--   <tt>IsTruncated</tt> is true, the value of <tt>NextDNSName</tt> is the
--   name of the first hosted zone in the next group of <tt>maxitems</tt>
--   hosted zones. Call <tt>ListHostedZonesByName</tt> again and specify
--   the value of <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters, respectively.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
--   
--   <a>$sel:httpStatus:ListHostedZonesByNameResponse'</a>,
--   <a>listHostedZonesByNameResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:hostedZones:ListHostedZonesByNameResponse'</a>,
--   <a>listHostedZonesByNameResponse_hostedZones</a> - A complex type that
--   contains general information about the hosted zone.
--   
--   <a>$sel:isTruncated:ListHostedZonesByNameResponse'</a>,
--   <a>listHostedZonesByNameResponse_isTruncated</a> - A flag that
--   indicates whether there are more hosted zones to be listed. If the
--   response was truncated, you can get the next group of
--   <tt>maxitems</tt> hosted zones by calling
--   <tt>ListHostedZonesByName</tt> again and specifying the values of
--   <tt>NextDNSName</tt> and <tt>NextHostedZoneId</tt> elements in the
--   <tt>dnsname</tt> and <tt>hostedzoneid</tt> parameters.
--   
--   <a>$sel:maxItems:ListHostedZonesByName'</a>,
--   <a>listHostedZonesByNameResponse_maxItems</a> - The value that you
--   specified for the <tt>maxitems</tt> parameter in the call to
--   <tt>ListHostedZonesByName</tt> that produced the current response.
newListHostedZonesByNameResponse :: Int -> Bool -> Text -> ListHostedZonesByNameResponse

-- | <i>See:</i> <a>newActivateKeySigningKey</a> smart constructor.
data ActivateKeySigningKey
ActivateKeySigningKey' :: ResourceId -> Text -> ActivateKeySigningKey

-- | Create a value of <a>ActivateKeySigningKey</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:ActivateKeySigningKey'</a>,
--   <a>activateKeySigningKey_hostedZoneId</a> - A unique string used to
--   identify a hosted zone.
--   
--   <a>$sel:name:ActivateKeySigningKey'</a>,
--   <a>activateKeySigningKey_name</a> - A string used to identify a
--   key-signing key (KSK). <tt>Name</tt> can include numbers, letters, and
--   underscores (_). <tt>Name</tt> must be unique for each key-signing key
--   in the same hosted zone.
newActivateKeySigningKey :: ResourceId -> Text -> ActivateKeySigningKey

-- | <i>See:</i> <a>newActivateKeySigningKeyResponse</a> smart constructor.
data ActivateKeySigningKeyResponse
ActivateKeySigningKeyResponse' :: Int -> ChangeInfo -> ActivateKeySigningKeyResponse

-- | Create a value of <a>ActivateKeySigningKeyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ActivateKeySigningKeyResponse'</a>,
--   <a>activateKeySigningKeyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:changeInfo:ActivateKeySigningKeyResponse'</a>,
--   <a>activateKeySigningKeyResponse_changeInfo</a> - Undocumented member.
newActivateKeySigningKeyResponse :: Int -> ChangeInfo -> ActivateKeySigningKeyResponse

-- | A request to get a list of the reusable delegation sets that are
--   associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newListReusableDelegationSets</a> smart constructor.
data ListReusableDelegationSets
ListReusableDelegationSets' :: Maybe Text -> Maybe Text -> ListReusableDelegationSets

-- | Create a value of <a>ListReusableDelegationSets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListReusableDelegationSets'</a>,
--   <a>listReusableDelegationSets_marker</a> - If the value of
--   <tt>IsTruncated</tt> in the previous response was <tt>true</tt>, you
--   have more reusable delegation sets. To get another group, submit
--   another <tt>ListReusableDelegationSets</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first reusable delegation set that Amazon Route 53 will return if you
--   submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more reusable delegation sets to get.
--   
--   <a>$sel:maxItems:ListReusableDelegationSets'</a>,
--   <a>listReusableDelegationSets_maxItems</a> - The number of reusable
--   delegation sets that you want Amazon Route 53 to return in the
--   response to this request. If you specify a value greater than 100,
--   Route 53 returns only the first 100 reusable delegation sets.
newListReusableDelegationSets :: ListReusableDelegationSets

-- | A complex type that contains information about the reusable delegation
--   sets that are associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newListReusableDelegationSetsResponse</a> smart
--   constructor.
data ListReusableDelegationSetsResponse
ListReusableDelegationSetsResponse' :: Maybe Text -> Int -> [DelegationSet] -> Text -> Bool -> Text -> ListReusableDelegationSetsResponse

-- | Create a value of <a>ListReusableDelegationSetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:ListReusableDelegationSetsResponse'</a>,
--   <a>listReusableDelegationSetsResponse_nextMarker</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>NextMarker</tt> identifies the next reusable delegation set that
--   Amazon Route 53 will return if you submit another
--   <tt>ListReusableDelegationSets</tt> request and specify the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
--   
--   <a>$sel:httpStatus:ListReusableDelegationSetsResponse'</a>,
--   <a>listReusableDelegationSetsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:delegationSets:ListReusableDelegationSetsResponse'</a>,
--   <a>listReusableDelegationSetsResponse_delegationSets</a> - A complex
--   type that contains one <tt>DelegationSet</tt> element for each
--   reusable delegation set that was created by the current Amazon Web
--   Services account.
--   
--   <a>$sel:marker:ListReusableDelegationSets'</a>,
--   <a>listReusableDelegationSetsResponse_marker</a> - For the second and
--   subsequent calls to <tt>ListReusableDelegationSets</tt>,
--   <tt>Marker</tt> is the value that you specified for the
--   <tt>marker</tt> parameter in the request that produced the current
--   response.
--   
--   <a>$sel:isTruncated:ListReusableDelegationSetsResponse'</a>,
--   <a>listReusableDelegationSetsResponse_isTruncated</a> - A flag that
--   indicates whether there are more reusable delegation sets to be
--   listed.
--   
--   <a>$sel:maxItems:ListReusableDelegationSets'</a>,
--   <a>listReusableDelegationSetsResponse_maxItems</a> - The value that
--   you specified for the <tt>maxitems</tt> parameter in the call to
--   <tt>ListReusableDelegationSets</tt> that produced the current
--   response.
newListReusableDelegationSetsResponse :: Int -> Text -> Bool -> Text -> ListReusableDelegationSetsResponse

-- | A complex type containing information about a request for a list of
--   the tags that are associated with an individual resource.
--   
--   <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: TagResourceType -> Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceType</a> - The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
--   
--   <a>$sel:resourceId:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceId</a> - The ID of the resource for
--   which you want to retrieve tags.
newListTagsForResource :: TagResourceType -> Text -> ListTagsForResource

-- | A complex type that contains information about the health checks or
--   hosted zones for which you want to list tags.
--   
--   <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Int -> ResourceTagSet -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceTagSet:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_resourceTagSet</a> - A
--   <tt>ResourceTagSet</tt> containing tags associated with the specified
--   resource.
newListTagsForResourceResponse :: Int -> ResourceTagSet -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newListQueryLoggingConfigs</a> smart constructor.
data ListQueryLoggingConfigs
ListQueryLoggingConfigs' :: Maybe ResourceId -> Maybe Text -> Maybe Text -> ListQueryLoggingConfigs

-- | Create a value of <a>ListQueryLoggingConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:ListQueryLoggingConfigs'</a>,
--   <a>listQueryLoggingConfigs_hostedZoneId</a> - (Optional) If you want
--   to list the query logging configuration that is associated with a
--   hosted zone, specify the ID in <tt>HostedZoneId</tt>.
--   
--   If you don't specify a hosted zone ID,
--   <tt>ListQueryLoggingConfigs</tt> returns all of the configurations
--   that are associated with the current Amazon Web Services account.
--   
--   <a>$sel:nextToken:ListQueryLoggingConfigs'</a>,
--   <a>listQueryLoggingConfigs_nextToken</a> - (Optional) If the current
--   Amazon Web Services account has more than <tt>MaxResults</tt> query
--   logging configurations, use <tt>NextToken</tt> to get the second and
--   subsequent pages of results.
--   
--   For the first <tt>ListQueryLoggingConfigs</tt> request, omit this
--   value.
--   
--   For the second and subsequent requests, get the value of
--   <tt>NextToken</tt> from the previous response and specify that value
--   for <tt>NextToken</tt> in the request.
--   
--   <a>$sel:maxResults:ListQueryLoggingConfigs'</a>,
--   <a>listQueryLoggingConfigs_maxResults</a> - (Optional) The maximum
--   number of query logging configurations that you want Amazon Route 53
--   to return in response to the current request. If the current Amazon
--   Web Services account has more than <tt>MaxResults</tt> configurations,
--   use the value of <a>NextToken</a> in the response to get the next page
--   of results.
--   
--   If you don't specify a value for <tt>MaxResults</tt>, Route 53 returns
--   up to 100 configurations.
newListQueryLoggingConfigs :: ListQueryLoggingConfigs

-- | <i>See:</i> <a>newListQueryLoggingConfigsResponse</a> smart
--   constructor.
data ListQueryLoggingConfigsResponse
ListQueryLoggingConfigsResponse' :: Maybe Text -> Int -> [QueryLoggingConfig] -> ListQueryLoggingConfigsResponse

-- | Create a value of <a>ListQueryLoggingConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListQueryLoggingConfigs'</a>,
--   <a>listQueryLoggingConfigsResponse_nextToken</a> - If a response
--   includes the last of the query logging configurations that are
--   associated with the current Amazon Web Services account,
--   <tt>NextToken</tt> doesn't appear in the response.
--   
--   If a response doesn't include the last of the configurations, you can
--   get more configurations by submitting another
--   <a>ListQueryLoggingConfigs</a> request. Get the value of
--   <tt>NextToken</tt> that Amazon Route 53 returned in the previous
--   response and include it in <tt>NextToken</tt> in the next request.
--   
--   <a>$sel:httpStatus:ListQueryLoggingConfigsResponse'</a>,
--   <a>listQueryLoggingConfigsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:queryLoggingConfigs:ListQueryLoggingConfigsResponse'</a>,
--   <a>listQueryLoggingConfigsResponse_queryLoggingConfigs</a> - An array
--   that contains one <a>QueryLoggingConfig</a> element for each
--   configuration for DNS query logging that is associated with the
--   current Amazon Web Services account.
newListQueryLoggingConfigsResponse :: Int -> ListQueryLoggingConfigsResponse

-- | A request to get information about the traffic policy instances that
--   you created by using the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstances</a> smart constructor.
data ListTrafficPolicyInstances
ListTrafficPolicyInstances' :: Maybe RRType -> Maybe Text -> Maybe ResourceId -> Maybe Text -> ListTrafficPolicyInstances

-- | Create a value of <a>ListTrafficPolicyInstances</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstances_trafficPolicyInstanceTypeMarker</a> - If
--   the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>trafficpolicyinstancetype</tt>, specify the value of
--   <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous response,
--   which is the type of the first traffic policy instance in the next
--   group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstances_maxItems</a> - The maximum number of
--   traffic policy instances that you want Amazon Route 53 to return in
--   response to a <tt>ListTrafficPolicyInstances</tt> request. If you have
--   more than <tt>MaxItems</tt> traffic policy instances, the value of the
--   <tt>IsTruncated</tt> element in the response is <tt>true</tt>, and the
--   values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first traffic
--   policy instance in the next group of <tt>MaxItems</tt> traffic policy
--   instances.
--   
--   <a>$sel:hostedZoneIdMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstances_hostedZoneIdMarker</a> - If the value of
--   <tt>IsTruncated</tt> in the previous response was <tt>true</tt>, you
--   have more traffic policy instances. To get more traffic policy
--   instances, submit another <tt>ListTrafficPolicyInstances</tt> request.
--   For the value of <tt>HostedZoneId</tt>, specify the value of
--   <tt>HostedZoneIdMarker</tt> from the previous response, which is the
--   hosted zone ID of the first traffic policy instance in the next group
--   of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstances_trafficPolicyInstanceNameMarker</a> - If
--   the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstances</tt> request. For the value of
--   <tt>trafficpolicyinstancename</tt>, specify the value of
--   <tt>TrafficPolicyInstanceNameMarker</tt> from the previous response,
--   which is the name of the first traffic policy instance in the next
--   group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
newListTrafficPolicyInstances :: ListTrafficPolicyInstances

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstancesResponse</a> smart
--   constructor.
data ListTrafficPolicyInstancesResponse
ListTrafficPolicyInstancesResponse' :: Maybe RRType -> Maybe ResourceId -> Maybe Text -> Int -> [TrafficPolicyInstance] -> Bool -> Text -> ListTrafficPolicyInstancesResponse

-- | Create a value of <a>ListTrafficPolicyInstancesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstancesResponse_trafficPolicyInstanceTypeMarker</a>
--   - If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance that Amazon Route 53 will return if you submit another
--   <tt>ListTrafficPolicyInstances</tt> request.
--   
--   <a>$sel:hostedZoneIdMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstancesResponse_hostedZoneIdMarker</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, <tt>HostedZoneIdMarker</tt> is
--   the ID of the hosted zone of the first traffic policy instance that
--   Route 53 will return if you submit another
--   <tt>ListTrafficPolicyInstances</tt> request.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstancesResponse_trafficPolicyInstanceNameMarker</a>
--   - If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance that Route 53 will return if you submit
--   another <tt>ListTrafficPolicyInstances</tt> request.
--   
--   <a>$sel:httpStatus:ListTrafficPolicyInstancesResponse'</a>,
--   <a>listTrafficPolicyInstancesResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:trafficPolicyInstances:ListTrafficPolicyInstancesResponse'</a>,
--   <a>listTrafficPolicyInstancesResponse_trafficPolicyInstances</a> - A
--   list that contains one <tt>TrafficPolicyInstance</tt> element for each
--   traffic policy instance that matches the elements in the request.
--   
--   <a>$sel:isTruncated:ListTrafficPolicyInstancesResponse'</a>,
--   <a>listTrafficPolicyInstancesResponse_isTruncated</a> - A flag that
--   indicates whether there are more traffic policy instances to be
--   listed. If the response was truncated, you can get more traffic policy
--   instances by calling <tt>ListTrafficPolicyInstances</tt> again and
--   specifying the values of the <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> in the corresponding request
--   parameters.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstances'</a>,
--   <a>listTrafficPolicyInstancesResponse_maxItems</a> - The value that
--   you specified for the <tt>MaxItems</tt> parameter in the call to
--   <tt>ListTrafficPolicyInstances</tt> that produced the current
--   response.
newListTrafficPolicyInstancesResponse :: Int -> Bool -> Text -> ListTrafficPolicyInstancesResponse

-- | A complex type that contains information about the resource record
--   sets that you want to create based on a specified traffic policy.
--   
--   <i>See:</i> <a>newCreateTrafficPolicyInstance</a> smart constructor.
data CreateTrafficPolicyInstance
CreateTrafficPolicyInstance' :: ResourceId -> Text -> Natural -> Text -> Natural -> CreateTrafficPolicyInstance

-- | Create a value of <a>CreateTrafficPolicyInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:CreateTrafficPolicyInstance'</a>,
--   <a>createTrafficPolicyInstance_hostedZoneId</a> - The ID of the hosted
--   zone that you want Amazon Route 53 to create resource record sets in
--   by using the configuration in a traffic policy.
--   
--   <a>$sel:name:CreateTrafficPolicyInstance'</a>,
--   <a>createTrafficPolicyInstance_name</a> - The domain name (such as
--   example.com) or subdomain name (such as www.example.com) for which
--   Amazon Route 53 responds to DNS queries by using the resource record
--   sets that Route 53 creates for this traffic policy instance.
--   
--   <a>$sel:ttl:CreateTrafficPolicyInstance'</a>,
--   <a>createTrafficPolicyInstance_ttl</a> - (Optional) The TTL that you
--   want Amazon Route 53 to assign to all of the resource record sets that
--   it creates in the specified hosted zone.
--   
--   <a>$sel:trafficPolicyId:CreateTrafficPolicyInstance'</a>,
--   <a>createTrafficPolicyInstance_trafficPolicyId</a> - The ID of the
--   traffic policy that you want to use to create resource record sets in
--   the specified hosted zone.
--   
--   <a>$sel:trafficPolicyVersion:CreateTrafficPolicyInstance'</a>,
--   <a>createTrafficPolicyInstance_trafficPolicyVersion</a> - The version
--   of the traffic policy that you want to use to create resource record
--   sets in the specified hosted zone.
newCreateTrafficPolicyInstance :: ResourceId -> Text -> Natural -> Text -> Natural -> CreateTrafficPolicyInstance

-- | A complex type that contains the response information for the
--   <tt>CreateTrafficPolicyInstance</tt> request.
--   
--   <i>See:</i> <a>newCreateTrafficPolicyInstanceResponse</a> smart
--   constructor.
data CreateTrafficPolicyInstanceResponse
CreateTrafficPolicyInstanceResponse' :: Int -> TrafficPolicyInstance -> Text -> CreateTrafficPolicyInstanceResponse

-- | Create a value of <a>CreateTrafficPolicyInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTrafficPolicyInstanceResponse'</a>,
--   <a>createTrafficPolicyInstanceResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:trafficPolicyInstance:CreateTrafficPolicyInstanceResponse'</a>,
--   <a>createTrafficPolicyInstanceResponse_trafficPolicyInstance</a> - A
--   complex type that contains settings for the new traffic policy
--   instance.
--   
--   <a>$sel:location:CreateTrafficPolicyInstanceResponse'</a>,
--   <a>createTrafficPolicyInstanceResponse_location</a> - A unique URL
--   that represents a new traffic policy instance.
newCreateTrafficPolicyInstanceResponse :: Int -> TrafficPolicyInstance -> Text -> CreateTrafficPolicyInstanceResponse

-- | The input for a GetChange request.
--   
--   <i>See:</i> <a>newGetChange</a> smart constructor.
data GetChange
GetChange' :: ResourceId -> GetChange

-- | Create a value of <a>GetChange</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetChange'</a>, <a>getChange_id</a> - The ID of the change
--   batch request. The value that you specify here is the value that
--   <tt>ChangeResourceRecordSets</tt> returned in the <tt>Id</tt> element
--   when you submitted the request.
newGetChange :: ResourceId -> GetChange

-- | A complex type that contains the <tt>ChangeInfo</tt> element.
--   
--   <i>See:</i> <a>newGetChangeResponse</a> smart constructor.
data GetChangeResponse
GetChangeResponse' :: Int -> ChangeInfo -> GetChangeResponse

-- | Create a value of <a>GetChangeResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetChangeResponse'</a>,
--   <a>getChangeResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:changeInfo:GetChangeResponse'</a>,
--   <a>getChangeResponse_changeInfo</a> - A complex type that contains
--   information about the specified change batch.
newGetChangeResponse :: Int -> ChangeInfo -> GetChangeResponse

-- | A complex type that contains change information for the resource
--   record set.
--   
--   <i>See:</i> <a>newChangeResourceRecordSets</a> smart constructor.
data ChangeResourceRecordSets
ChangeResourceRecordSets' :: ResourceId -> ChangeBatch -> ChangeResourceRecordSets

-- | Create a value of <a>ChangeResourceRecordSets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:ChangeResourceRecordSets'</a>,
--   <a>changeResourceRecordSets_hostedZoneId</a> - The ID of the hosted
--   zone that contains the resource record sets that you want to change.
--   
--   <a>$sel:changeBatch:ChangeResourceRecordSets'</a>,
--   <a>changeResourceRecordSets_changeBatch</a> - A complex type that
--   contains an optional comment and the <tt>Changes</tt> element.
newChangeResourceRecordSets :: ResourceId -> ChangeBatch -> ChangeResourceRecordSets

-- | A complex type containing the response for the request.
--   
--   <i>See:</i> <a>newChangeResourceRecordSetsResponse</a> smart
--   constructor.
data ChangeResourceRecordSetsResponse
ChangeResourceRecordSetsResponse' :: Int -> ChangeInfo -> ChangeResourceRecordSetsResponse

-- | Create a value of <a>ChangeResourceRecordSetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ChangeResourceRecordSetsResponse'</a>,
--   <a>changeResourceRecordSetsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:changeInfo:ChangeResourceRecordSetsResponse'</a>,
--   <a>changeResourceRecordSetsResponse_changeInfo</a> - A complex type
--   that contains information about changes made to your hosted zone.
--   
--   This element contains an ID that you use when performing a
--   <a>GetChange</a> action to get detailed information about the change.
newChangeResourceRecordSetsResponse :: Int -> ChangeInfo -> ChangeResourceRecordSetsResponse

-- | This action deletes a health check.
--   
--   <i>See:</i> <a>newDeleteHealthCheck</a> smart constructor.
data DeleteHealthCheck
DeleteHealthCheck' :: Text -> DeleteHealthCheck

-- | Create a value of <a>DeleteHealthCheck</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckId:DeleteHealthCheck'</a>,
--   <a>deleteHealthCheck_healthCheckId</a> - The ID of the health check
--   that you want to delete.
newDeleteHealthCheck :: Text -> DeleteHealthCheck

-- | An empty element.
--   
--   <i>See:</i> <a>newDeleteHealthCheckResponse</a> smart constructor.
data DeleteHealthCheckResponse
DeleteHealthCheckResponse' :: Int -> DeleteHealthCheckResponse

-- | Create a value of <a>DeleteHealthCheckResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteHealthCheckResponse'</a>,
--   <a>deleteHealthCheckResponse_httpStatus</a> - The response's http
--   status code.
newDeleteHealthCheckResponse :: Int -> DeleteHealthCheckResponse

-- | A complex type that contains information about a request to update a
--   health check.
--   
--   <i>See:</i> <a>newUpdateHealthCheck</a> smart constructor.
data UpdateHealthCheck
UpdateHealthCheck' :: Maybe Natural -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe [ResettableElementName] -> Maybe Text -> Maybe Natural -> Maybe (NonEmpty HealthCheckRegion) -> Maybe Text -> Maybe InsufficientDataHealthStatus -> Maybe Natural -> Maybe AlarmIdentifier -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Natural -> Text -> UpdateHealthCheck

-- | Create a value of <a>UpdateHealthCheck</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureThreshold:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_failureThreshold</a> - The number of consecutive
--   health checks that an endpoint must pass or fail for Amazon Route 53
--   to change the current status of the endpoint from unhealthy to healthy
--   or vice versa. For more information, see <a>How Amazon Route 53
--   Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route
--   53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
--   
--   <a>$sel:iPAddress:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_iPAddress</a> - The IPv4 or IPv6 IP address for
--   the endpoint that you want Amazon Route 53 to perform health checks
--   on. If you don't specify a value for <tt>IPAddress</tt>, Route 53
--   sends a DNS request to resolve the domain name that you specify in
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify in
--   <tt>RequestInterval</tt>. Using an IP address that is returned by DNS,
--   Route 53 then checks the health of the endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance never changes. For more information, see
--   the applicable documentation:
--   
--   <ul>
--   <li>Linux: <a>Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2 User
--   Guide for Linux Instances</i></li>
--   <li>Windows: <a>Elastic IP Addresses (EIP)</a> in the <i>Amazon EC2
--   User Guide for Windows Instances</i></li>
--   </ul>
--   
--   If a health check already has a value for <tt>IPAddress</tt>, you can
--   change the value. However, you can't update an existing health check
--   to add or remove the value of <tt>IPAddress</tt>.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
--   
--   <a>$sel:enableSNI:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_enableSNI</a> - Specify whether you want Amazon
--   Route 53 to send the value of <tt>FullyQualifiedDomainName</tt> to the
--   endpoint in the <tt>client_hello</tt> message during <tt>TLS</tt>
--   negotiation. This allows the endpoint to respond to <tt>HTTPS</tt>
--   health check requests with the applicable SSL/TLS certificate.
--   
--   Some endpoints require that HTTPS requests include the host name in
--   the <tt>client_hello</tt> message. If you don't enable SNI, the status
--   of the health check will be SSL alert <tt>handshake_failure</tt>. A
--   health check can also have that status for other reasons. If SNI is
--   enabled and you're still getting the error, check the SSL/TLS
--   configuration on your endpoint and confirm that your certificate is
--   valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
--   
--   <a>$sel:disabled:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_disabled</a> - Stops Route 53 from performing
--   health checks. When you disable a health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
--   
--   <a>$sel:resetElements:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_resetElements</a> - A complex type that contains
--   one <tt>ResettableElementName</tt> element for each element that you
--   want to reset to the default value. Valid values for
--   <tt>ResettableElementName</tt> include the following:
--   
--   <ul>
--   <li><tt>ChildHealthChecks</tt>: Amazon Route 53 resets
--   <a>ChildHealthChecks</a> to null.</li>
--   <li><tt>FullyQualifiedDomainName</tt>: Route 53 resets
--   <a>FullyQualifiedDomainName</a>. to null.</li>
--   <li><tt>Regions</tt>: Route 53 resets the <a>Regions</a> list to the
--   default set of regions.</li>
--   <li><tt>ResourcePath</tt>: Route 53 resets <a>ResourcePath</a> to
--   null.</li>
--   </ul>
--   
--   <a>$sel:searchString:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_searchString</a> - If the value of <tt>Type</tt>
--   is <tt>HTTP_STR_MATCH</tt> or <tt>HTTPS_STR_MATCH</tt>, the string
--   that you want Amazon Route 53 to search for in the response body from
--   the specified resource. If the string appears in the response body,
--   Route 53 considers the resource healthy. (You can't change the value
--   of <tt>Type</tt> when you update a health check.)
--   
--   <a>$sel:healthThreshold:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_healthThreshold</a> - The number of child health
--   checks that are associated with a <tt>CALCULATED</tt> health that
--   Amazon Route 53 must consider healthy for the <tt>CALCULATED</tt>
--   health check to be considered healthy. To specify the child health
--   checks that you want to associate with a <tt>CALCULATED</tt> health
--   check, use the <tt>ChildHealthChecks</tt> and
--   <tt>ChildHealthCheck</tt> elements.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
--   
--   <a>$sel:regions:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_regions</a> - A complex type that contains one
--   <tt>Region</tt> element for each region that you want Amazon Route 53
--   health checkers to check the specified endpoint from.
--   
--   <a>$sel:resourcePath:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_resourcePath</a> - The path that you want Amazon
--   Route 53 to request when performing health checks. The path can be any
--   value for which your endpoint will return an HTTP status code of 2xx
--   or 3xx when the endpoint is healthy, for example the file
--   /docs/route53-health-check.html. You can also include query string
--   parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
--   
--   Specify this value only if you want to change it.
--   
--   <a>$sel:insufficientDataHealthStatus:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_insufficientDataHealthStatus</a> - When
--   CloudWatch has insufficient data about the metric to determine the
--   alarm state, the status that you want Amazon Route 53 to assign to the
--   health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time CloudWatch had sufficient data to determine
--   the alarm state. For new health checks that have no last known status,
--   the default status for the health check is healthy.</li>
--   </ul>
--   
--   <a>$sel:healthCheckVersion:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_healthCheckVersion</a> - A sequential counter
--   that Amazon Route 53 sets to <tt>1</tt> when you create a health check
--   and increments by 1 each time you update settings for the health
--   check.
--   
--   We recommend that you use <tt>GetHealthCheck</tt> or
--   <tt>ListHealthChecks</tt> to get the current value of
--   <tt>HealthCheckVersion</tt> for the health check that you want to
--   update, and that you include that value in your
--   <tt>UpdateHealthCheck</tt> request. This prevents Route 53 from
--   overwriting an intervening update:
--   
--   <ul>
--   <li>If the value in the <tt>UpdateHealthCheck</tt> request matches the
--   value of <tt>HealthCheckVersion</tt> in the health check, Route 53
--   updates the health check with the new settings.</li>
--   <li>If the value of <tt>HealthCheckVersion</tt> in the health check is
--   greater, the health check was changed after you got the version
--   number. Route 53 does not update the health check, and it returns a
--   <tt>HealthCheckVersionMismatch</tt> error.</li>
--   </ul>
--   
--   <a>$sel:alarmIdentifier:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_alarmIdentifier</a> - A complex type that
--   identifies the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether the specified health check is
--   healthy.
--   
--   <a>$sel:inverted:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_inverted</a> - Specify whether you want Amazon
--   Route 53 to invert the status of a health check, for example, to
--   consider a health check unhealthy when it otherwise would be
--   considered healthy.
--   
--   <a>$sel:fullyQualifiedDomainName:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_fullyQualifiedDomainName</a> - Amazon Route 53
--   behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   If a health check already has a value for <tt>IPAddress</tt>, you can
--   change the value. However, you can't update an existing health check
--   to add or remove the value of <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends health check requests to the specified IPv4 or IPv6
--   address and passes the value of <tt>FullyQualifiedDomainName</tt> in
--   the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <i><tt>FullyQualifiedDomainName</tt>:<tt>Port</tt></i> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the above cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 sends a
--   DNS request to the domain that you specify in
--   <tt>FullyQualifiedDomainName</tt> at the interval you specify in
--   <tt>RequestInterval</tt>. Using an IPv4 address that is returned by
--   DNS, Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   <tt>us-east-2-www.example.com</tt>), not the name of the resource
--   record sets (www.example.com).
--   
--   In this configuration, if the value of
--   <tt>FullyQualifiedDomainName</tt> matches the name of the resource
--   record sets and you then associate the health check with those
--   resource record sets, health check results will be unpredictable.
--   
--   In addition, if the value of <tt>Type</tt> is <tt>HTTP</tt>,
--   <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or <tt>HTTPS_STR_MATCH</tt>,
--   Route 53 passes the value of <tt>FullyQualifiedDomainName</tt> in the
--   <tt>Host</tt> header, as it does when you specify a value for
--   <tt>IPAddress</tt>. If the value of <tt>Type</tt> is <tt>TCP</tt>,
--   Route 53 doesn't pass a <tt>Host</tt> header.
--   
--   <a>$sel:childHealthChecks:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_childHealthChecks</a> - A complex type that
--   contains one <tt>ChildHealthCheck</tt> element for each health check
--   that you want to associate with a <tt>CALCULATED</tt> health check.
--   
--   <a>$sel:port:UpdateHealthCheck'</a>, <a>updateHealthCheck_port</a> -
--   The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
--   
--   <a>$sel:healthCheckId:UpdateHealthCheck'</a>,
--   <a>updateHealthCheck_healthCheckId</a> - The ID for the health check
--   for which you want detailed information. When you created the health
--   check, <tt>CreateHealthCheck</tt> returned the ID in the response, in
--   the <tt>HealthCheckId</tt> element.
newUpdateHealthCheck :: Text -> UpdateHealthCheck

-- | A complex type that contains the response to the
--   <tt>UpdateHealthCheck</tt> request.
--   
--   <i>See:</i> <a>newUpdateHealthCheckResponse</a> smart constructor.
data UpdateHealthCheckResponse
UpdateHealthCheckResponse' :: Int -> HealthCheck -> UpdateHealthCheckResponse

-- | Create a value of <a>UpdateHealthCheckResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateHealthCheckResponse'</a>,
--   <a>updateHealthCheckResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:healthCheck:UpdateHealthCheckResponse'</a>,
--   <a>updateHealthCheckResponse_healthCheck</a> - A complex type that
--   contains the response to an <tt>UpdateHealthCheck</tt> request.
newUpdateHealthCheckResponse :: Int -> HealthCheck -> UpdateHealthCheckResponse

-- | A complex type that contains information about the request to create a
--   public or private hosted zone.
--   
--   <i>See:</i> <a>newCreateHostedZone</a> smart constructor.
data CreateHostedZone
CreateHostedZone' :: Maybe ResourceId -> Maybe VPC -> Maybe HostedZoneConfig -> Text -> Text -> CreateHostedZone

-- | Create a value of <a>CreateHostedZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:delegationSetId:CreateHostedZone'</a>,
--   <a>createHostedZone_delegationSetId</a> - If you want to associate a
--   reusable delegation set with this hosted zone, the ID that Amazon
--   Route 53 assigned to the reusable delegation set when you created it.
--   For more information about reusable delegation sets, see
--   <a>CreateReusableDelegationSet</a>.
--   
--   <a>$sel:vpc:CreateHostedZone'</a>, <a>createHostedZone_vpc</a> -
--   (Private hosted zones only) A complex type that contains information
--   about the Amazon VPC that you're associating with this hosted zone.
--   
--   You can specify only one Amazon VPC when you create a private hosted
--   zone. To associate additional Amazon VPCs with the hosted zone, use
--   <a>AssociateVPCWithHostedZone</a> after you create a hosted zone.
--   
--   <a>$sel:hostedZoneConfig:CreateHostedZone'</a>,
--   <a>createHostedZone_hostedZoneConfig</a> - (Optional) A complex type
--   that contains the following optional values:
--   
--   <ul>
--   <li>For public and private hosted zones, an optional comment</li>
--   <li>For private hosted zones, an optional <tt>PrivateZone</tt>
--   element</li>
--   </ul>
--   
--   If you don't specify a comment or the <tt>PrivateZone</tt> element,
--   omit <tt>HostedZoneConfig</tt> and the other elements.
--   
--   <a>$sel:name:CreateHostedZone'</a>, <a>createHostedZone_name</a> - The
--   name of the domain. Specify a fully qualified domain name, for
--   example, <i>www.example.com</i>. The trailing dot is optional; Amazon
--   Route 53 assumes that the domain name is fully qualified. This means
--   that Route 53 treats <i>www.example.com</i> (without a trailing dot)
--   and <i>www.example.com.</i> (with a trailing dot) as identical.
--   
--   If you're creating a public hosted zone, this is the name you have
--   registered with your DNS registrar. If your domain name is registered
--   with a registrar other than Route 53, change the name servers for your
--   domain to the set of <tt>NameServers</tt> that
--   <tt>CreateHostedZone</tt> returns in <tt>DelegationSet</tt>.
--   
--   <a>$sel:callerReference:CreateHostedZone'</a>,
--   <a>createHostedZone_callerReference</a> - A unique string that
--   identifies the request and that allows failed
--   <tt>CreateHostedZone</tt> requests to be retried without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you submit a
--   <tt>CreateHostedZone</tt> request. <tt>CallerReference</tt> can be any
--   unique string, for example, a date/time stamp.
newCreateHostedZone :: Text -> Text -> CreateHostedZone

-- | A complex type containing the response information for the hosted
--   zone.
--   
--   <i>See:</i> <a>newCreateHostedZoneResponse</a> smart constructor.
data CreateHostedZoneResponse
CreateHostedZoneResponse' :: Maybe VPC -> Int -> HostedZone -> ChangeInfo -> DelegationSet -> Text -> CreateHostedZoneResponse

-- | Create a value of <a>CreateHostedZoneResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpc:CreateHostedZone'</a>, <a>createHostedZoneResponse_vpc</a>
--   - A complex type that contains information about an Amazon VPC that
--   you associated with this hosted zone.
--   
--   <a>$sel:httpStatus:CreateHostedZoneResponse'</a>,
--   <a>createHostedZoneResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:hostedZone:CreateHostedZoneResponse'</a>,
--   <a>createHostedZoneResponse_hostedZone</a> - A complex type that
--   contains general information about the hosted zone.
--   
--   <a>$sel:changeInfo:CreateHostedZoneResponse'</a>,
--   <a>createHostedZoneResponse_changeInfo</a> - A complex type that
--   contains information about the <tt>CreateHostedZone</tt> request.
--   
--   <a>$sel:delegationSet:CreateHostedZoneResponse'</a>,
--   <a>createHostedZoneResponse_delegationSet</a> - A complex type that
--   describes the name servers for this hosted zone.
--   
--   <a>$sel:location:CreateHostedZoneResponse'</a>,
--   <a>createHostedZoneResponse_location</a> - The unique URL representing
--   the new hosted zone.
newCreateHostedZoneResponse :: Int -> HostedZone -> ChangeInfo -> DelegationSet -> Text -> CreateHostedZoneResponse

-- | A complex type that contains information about the request to
--   authorize associating a VPC with your private hosted zone.
--   Authorization is only required when a private hosted zone and a VPC
--   were created by using different accounts.
--   
--   <i>See:</i> <a>newCreateVPCAssociationAuthorization</a> smart
--   constructor.
data CreateVPCAssociationAuthorization
CreateVPCAssociationAuthorization' :: ResourceId -> VPC -> CreateVPCAssociationAuthorization

-- | Create a value of <a>CreateVPCAssociationAuthorization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:CreateVPCAssociationAuthorization'</a>,
--   <a>createVPCAssociationAuthorization_hostedZoneId</a> - The ID of the
--   private hosted zone that you want to authorize associating a VPC with.
--   
--   <a>$sel:vpc:CreateVPCAssociationAuthorization'</a>,
--   <a>createVPCAssociationAuthorization_vpc</a> - A complex type that
--   contains the VPC ID and region for the VPC that you want to authorize
--   associating with your hosted zone.
newCreateVPCAssociationAuthorization :: ResourceId -> VPC -> CreateVPCAssociationAuthorization

-- | A complex type that contains the response information from a
--   <tt>CreateVPCAssociationAuthorization</tt> request.
--   
--   <i>See:</i> <a>newCreateVPCAssociationAuthorizationResponse</a> smart
--   constructor.
data CreateVPCAssociationAuthorizationResponse
CreateVPCAssociationAuthorizationResponse' :: Int -> ResourceId -> VPC -> CreateVPCAssociationAuthorizationResponse

-- | Create a value of <a>CreateVPCAssociationAuthorizationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateVPCAssociationAuthorizationResponse'</a>,
--   <a>createVPCAssociationAuthorizationResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:hostedZoneId:CreateVPCAssociationAuthorization'</a>,
--   <a>createVPCAssociationAuthorizationResponse_hostedZoneId</a> - The ID
--   of the hosted zone that you authorized associating a VPC with.
--   
--   <a>$sel:vpc:CreateVPCAssociationAuthorization'</a>,
--   <a>createVPCAssociationAuthorizationResponse_vpc</a> - The VPC that
--   you authorized associating with a hosted zone.
newCreateVPCAssociationAuthorizationResponse :: Int -> ResourceId -> VPC -> CreateVPCAssociationAuthorizationResponse

-- | A complex type that contains information about that can be associated
--   with your hosted zone.
--   
--   <i>See:</i> <a>newListVPCAssociationAuthorizations</a> smart
--   constructor.
data ListVPCAssociationAuthorizations
ListVPCAssociationAuthorizations' :: Maybe Text -> Maybe Text -> ResourceId -> ListVPCAssociationAuthorizations

-- | Create a value of <a>ListVPCAssociationAuthorizations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVPCAssociationAuthorizations'</a>,
--   <a>listVPCAssociationAuthorizations_nextToken</a> - <i>Optional</i>:
--   If a response includes a <tt>NextToken</tt> element, there are more
--   VPCs that can be associated with the specified hosted zone. To get the
--   next page of results, submit another request, and include the value of
--   <tt>NextToken</tt> from the response in the <tt>nexttoken</tt>
--   parameter in another <tt>ListVPCAssociationAuthorizations</tt>
--   request.
--   
--   <a>$sel:maxResults:ListVPCAssociationAuthorizations'</a>,
--   <a>listVPCAssociationAuthorizations_maxResults</a> - <i>Optional</i>:
--   An integer that specifies the maximum number of VPCs that you want
--   Amazon Route 53 to return. If you don't specify a value for
--   <tt>MaxResults</tt>, Route 53 returns up to 50 VPCs per page.
--   
--   <a>$sel:hostedZoneId:ListVPCAssociationAuthorizations'</a>,
--   <a>listVPCAssociationAuthorizations_hostedZoneId</a> - The ID of the
--   hosted zone for which you want a list of VPCs that can be associated
--   with the hosted zone.
newListVPCAssociationAuthorizations :: ResourceId -> ListVPCAssociationAuthorizations

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListVPCAssociationAuthorizationsResponse</a> smart
--   constructor.
data ListVPCAssociationAuthorizationsResponse
ListVPCAssociationAuthorizationsResponse' :: Maybe Text -> Int -> ResourceId -> NonEmpty VPC -> ListVPCAssociationAuthorizationsResponse

-- | Create a value of <a>ListVPCAssociationAuthorizationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListVPCAssociationAuthorizations'</a>,
--   <a>listVPCAssociationAuthorizationsResponse_nextToken</a> - When the
--   response includes a <tt>NextToken</tt> element, there are more VPCs
--   that can be associated with the specified hosted zone. To get the next
--   page of VPCs, submit another <tt>ListVPCAssociationAuthorizations</tt>
--   request, and include the value of the <tt>NextToken</tt> element from
--   the response in the <tt>nexttoken</tt> request parameter.
--   
--   <a>$sel:httpStatus:ListVPCAssociationAuthorizationsResponse'</a>,
--   <a>listVPCAssociationAuthorizationsResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:hostedZoneId:ListVPCAssociationAuthorizations'</a>,
--   <a>listVPCAssociationAuthorizationsResponse_hostedZoneId</a> - The ID
--   of the hosted zone that you can associate the listed VPCs with.
--   
--   <a>$sel:vPCs:ListVPCAssociationAuthorizationsResponse'</a>,
--   <a>listVPCAssociationAuthorizationsResponse_vPCs</a> - The list of
--   VPCs that are authorized to be associated with the specified hosted
--   zone.
newListVPCAssociationAuthorizationsResponse :: Int -> ResourceId -> NonEmpty VPC -> ListVPCAssociationAuthorizationsResponse

-- | A complex type that contains the information about the request to list
--   your traffic policy instances.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstancesByPolicy</a> smart
--   constructor.
data ListTrafficPolicyInstancesByPolicy
ListTrafficPolicyInstancesByPolicy' :: Maybe RRType -> Maybe Text -> Maybe ResourceId -> Maybe Text -> Text -> Natural -> ListTrafficPolicyInstancesByPolicy

-- | Create a value of <a>ListTrafficPolicyInstancesByPolicy</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_trafficPolicyInstanceTypeMarker</a>
--   - If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>trafficpolicyinstancetype</tt>, specify the value
--   of <tt>TrafficPolicyInstanceTypeMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance that
--   Amazon Route 53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_maxItems</a> - The maximum
--   number of traffic policy instances to be included in the response body
--   for this request. If you have more than <tt>MaxItems</tt> traffic
--   policy instances, the value of the <tt>IsTruncated</tt> element in the
--   response is <tt>true</tt>, and the values of
--   <tt>HostedZoneIdMarker</tt>, <tt>TrafficPolicyInstanceNameMarker</tt>,
--   and <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first
--   traffic policy instance that Amazon Route 53 will return if you submit
--   another request.
--   
--   <a>$sel:hostedZoneIdMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_hostedZoneIdMarker</a> - If the
--   value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>hostedzoneid</tt>, specify the value of
--   <tt>HostedZoneIdMarker</tt> from the previous response, which is the
--   hosted zone ID of the first traffic policy instance that Amazon Route
--   53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_trafficPolicyInstanceNameMarker</a>
--   - If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more traffic policy instances. To get more
--   traffic policy instances, submit another
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> request.
--   
--   For the value of <tt>trafficpolicyinstancename</tt>, specify the value
--   of <tt>TrafficPolicyInstanceNameMarker</tt> from the previous
--   response, which is the name of the first traffic policy instance that
--   Amazon Route 53 will return if you submit another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   <a>$sel:trafficPolicyId:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_trafficPolicyId</a> - The ID of
--   the traffic policy for which you want to list traffic policy
--   instances.
--   
--   <a>$sel:trafficPolicyVersion:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicy_trafficPolicyVersion</a> - The
--   version of the traffic policy for which you want to list traffic
--   policy instances. The version must be associated with the traffic
--   policy that is specified by <tt>TrafficPolicyId</tt>.
newListTrafficPolicyInstancesByPolicy :: Text -> Natural -> ListTrafficPolicyInstancesByPolicy

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstancesByPolicyResponse</a> smart
--   constructor.
data ListTrafficPolicyInstancesByPolicyResponse
ListTrafficPolicyInstancesByPolicyResponse' :: Maybe RRType -> Maybe ResourceId -> Maybe Text -> Int -> [TrafficPolicyInstance] -> Bool -> Text -> ListTrafficPolicyInstancesByPolicyResponse

-- | Create a value of <a>ListTrafficPolicyInstancesByPolicyResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstanceTypeMarker</a>
--   - If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance in the next group of <tt>MaxItems</tt> traffic policy
--   instances.
--   
--   <a>$sel:hostedZoneIdMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_hostedZoneIdMarker</a> -
--   If <tt>IsTruncated</tt> is <tt>true</tt>, <tt>HostedZoneIdMarker</tt>
--   is the ID of the hosted zone of the first traffic policy instance in
--   the next group of traffic policy instances.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstanceNameMarker</a>
--   - If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance in the next group of <tt>MaxItems</tt> traffic
--   policy instances.
--   
--   <a>$sel:httpStatus:ListTrafficPolicyInstancesByPolicyResponse'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:trafficPolicyInstances:ListTrafficPolicyInstancesByPolicyResponse'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_trafficPolicyInstances</a>
--   - A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
--   
--   <a>$sel:isTruncated:ListTrafficPolicyInstancesByPolicyResponse'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_isTruncated</a> - A flag
--   that indicates whether there are more traffic policy instances to be
--   listed. If the response was truncated, you can get the next group of
--   traffic policy instances by calling
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> again and specifying the
--   values of the <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> elements in the corresponding
--   request parameters.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstancesByPolicy'</a>,
--   <a>listTrafficPolicyInstancesByPolicyResponse_maxItems</a> - The value
--   that you specified for the <tt>MaxItems</tt> parameter in the call to
--   <tt>ListTrafficPolicyInstancesByPolicy</tt> that produced the current
--   response.
newListTrafficPolicyInstancesByPolicyResponse :: Int -> Bool -> Text -> ListTrafficPolicyInstancesByPolicyResponse

-- | A complex type that contains information about the VPC that you want
--   to disassociate from a specified private hosted zone.
--   
--   <i>See:</i> <a>newDisassociateVPCFromHostedZone</a> smart constructor.
data DisassociateVPCFromHostedZone
DisassociateVPCFromHostedZone' :: Maybe Text -> ResourceId -> VPC -> DisassociateVPCFromHostedZone

-- | Create a value of <a>DisassociateVPCFromHostedZone</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:DisassociateVPCFromHostedZone'</a>,
--   <a>disassociateVPCFromHostedZone_comment</a> - <i>Optional:</i> A
--   comment about the disassociation request.
--   
--   <a>$sel:hostedZoneId:DisassociateVPCFromHostedZone'</a>,
--   <a>disassociateVPCFromHostedZone_hostedZoneId</a> - The ID of the
--   private hosted zone that you want to disassociate a VPC from.
--   
--   <a>$sel:vpc:DisassociateVPCFromHostedZone'</a>,
--   <a>disassociateVPCFromHostedZone_vpc</a> - A complex type that
--   contains information about the VPC that you're disassociating from the
--   specified hosted zone.
newDisassociateVPCFromHostedZone :: ResourceId -> VPC -> DisassociateVPCFromHostedZone

-- | A complex type that contains the response information for the
--   disassociate request.
--   
--   <i>See:</i> <a>newDisassociateVPCFromHostedZoneResponse</a> smart
--   constructor.
data DisassociateVPCFromHostedZoneResponse
DisassociateVPCFromHostedZoneResponse' :: Int -> ChangeInfo -> DisassociateVPCFromHostedZoneResponse

-- | Create a value of <a>DisassociateVPCFromHostedZoneResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateVPCFromHostedZoneResponse'</a>,
--   <a>disassociateVPCFromHostedZoneResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:changeInfo:DisassociateVPCFromHostedZoneResponse'</a>,
--   <a>disassociateVPCFromHostedZoneResponse_changeInfo</a> - A complex
--   type that describes the changes made to the specified private hosted
--   zone.
newDisassociateVPCFromHostedZoneResponse :: Int -> ChangeInfo -> DisassociateVPCFromHostedZoneResponse

-- | A complex type that contains the health check request information.
--   
--   <i>See:</i> <a>newCreateHealthCheck</a> smart constructor.
data CreateHealthCheck
CreateHealthCheck' :: Text -> HealthCheckConfig -> CreateHealthCheck

-- | Create a value of <a>CreateHealthCheck</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:callerReference:CreateHealthCheck'</a>,
--   <a>createHealthCheck_callerReference</a> - A unique string that
--   identifies the request and that allows you to retry a failed
--   <tt>CreateHealthCheck</tt> request without the risk of creating two
--   identical health checks:
--   
--   <ul>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> and settings as a previous request, and if
--   the health check doesn't exist, Amazon Route 53 creates the health
--   check. If the health check does exist, Route 53 returns the settings
--   for the existing health check.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> as a deleted health check, regardless of the
--   settings, Route 53 returns a <tt>HealthCheckAlreadyExists</tt>
--   error.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with the same
--   <tt>CallerReference</tt> as an existing health check but with
--   different settings, Route 53 returns a
--   <tt>HealthCheckAlreadyExists</tt> error.</li>
--   <li>If you send a <tt>CreateHealthCheck</tt> request with a unique
--   <tt>CallerReference</tt> but settings identical to an existing health
--   check, Route 53 creates the health check.</li>
--   </ul>
--   
--   <a>$sel:healthCheckConfig:CreateHealthCheck'</a>,
--   <a>createHealthCheck_healthCheckConfig</a> - A complex type that
--   contains settings for a new health check.
newCreateHealthCheck :: Text -> HealthCheckConfig -> CreateHealthCheck

-- | A complex type containing the response information for the new health
--   check.
--   
--   <i>See:</i> <a>newCreateHealthCheckResponse</a> smart constructor.
data CreateHealthCheckResponse
CreateHealthCheckResponse' :: Int -> HealthCheck -> Text -> CreateHealthCheckResponse

-- | Create a value of <a>CreateHealthCheckResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateHealthCheckResponse'</a>,
--   <a>createHealthCheckResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:healthCheck:CreateHealthCheckResponse'</a>,
--   <a>createHealthCheckResponse_healthCheck</a> - A complex type that
--   contains identifying information about the health check.
--   
--   <a>$sel:location:CreateHealthCheckResponse'</a>,
--   <a>createHealthCheckResponse_location</a> - The unique URL
--   representing the new health check.
newCreateHealthCheckResponse :: Int -> HealthCheck -> Text -> CreateHealthCheckResponse

-- | A complex type that contains information about the request to remove
--   authorization to associate a VPC that was created by one Amazon Web
--   Services account with a hosted zone that was created with a different
--   Amazon Web Services account.
--   
--   <i>See:</i> <a>newDeleteVPCAssociationAuthorization</a> smart
--   constructor.
data DeleteVPCAssociationAuthorization
DeleteVPCAssociationAuthorization' :: ResourceId -> VPC -> DeleteVPCAssociationAuthorization

-- | Create a value of <a>DeleteVPCAssociationAuthorization</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:DeleteVPCAssociationAuthorization'</a>,
--   <a>deleteVPCAssociationAuthorization_hostedZoneId</a> - When removing
--   authorization to associate a VPC that was created by one Amazon Web
--   Services account with a hosted zone that was created with a different
--   Amazon Web Services account, the ID of the hosted zone.
--   
--   <a>$sel:vpc:DeleteVPCAssociationAuthorization'</a>,
--   <a>deleteVPCAssociationAuthorization_vpc</a> - When removing
--   authorization to associate a VPC that was created by one Amazon Web
--   Services account with a hosted zone that was created with a different
--   Amazon Web Services account, a complex type that includes the ID and
--   region of the VPC.
newDeleteVPCAssociationAuthorization :: ResourceId -> VPC -> DeleteVPCAssociationAuthorization

-- | Empty response for the request.
--   
--   <i>See:</i> <a>newDeleteVPCAssociationAuthorizationResponse</a> smart
--   constructor.
data DeleteVPCAssociationAuthorizationResponse
DeleteVPCAssociationAuthorizationResponse' :: Int -> DeleteVPCAssociationAuthorizationResponse

-- | Create a value of <a>DeleteVPCAssociationAuthorizationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVPCAssociationAuthorizationResponse'</a>,
--   <a>deleteVPCAssociationAuthorizationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteVPCAssociationAuthorizationResponse :: Int -> DeleteVPCAssociationAuthorizationResponse

-- | A complex type that contains information about the tags that you want
--   to add, edit, or delete.
--   
--   <i>See:</i> <a>newChangeTagsForResource</a> smart constructor.
data ChangeTagsForResource
ChangeTagsForResource' :: Maybe (NonEmpty Text) -> Maybe (NonEmpty Tag) -> TagResourceType -> Text -> ChangeTagsForResource

-- | Create a value of <a>ChangeTagsForResource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:removeTagKeys:ChangeTagsForResource'</a>,
--   <a>changeTagsForResource_removeTagKeys</a> - A complex type that
--   contains a list of the tags that you want to delete from the specified
--   health check or hosted zone. You can specify up to 10 keys.
--   
--   <a>$sel:addTags:ChangeTagsForResource'</a>,
--   <a>changeTagsForResource_addTags</a> - A complex type that contains a
--   list of the tags that you want to add to the specified health check or
--   hosted zone and/or the tags that you want to edit <tt>Value</tt> for.
--   
--   You can add a maximum of 10 tags to a health check or a hosted zone.
--   
--   <a>$sel:resourceType:ChangeTagsForResource'</a>,
--   <a>changeTagsForResource_resourceType</a> - The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
--   
--   <a>$sel:resourceId:ChangeTagsForResource'</a>,
--   <a>changeTagsForResource_resourceId</a> - The ID of the resource for
--   which you want to add, change, or delete tags.
newChangeTagsForResource :: TagResourceType -> Text -> ChangeTagsForResource

-- | Empty response for the request.
--   
--   <i>See:</i> <a>newChangeTagsForResourceResponse</a> smart constructor.
data ChangeTagsForResourceResponse
ChangeTagsForResourceResponse' :: Int -> ChangeTagsForResourceResponse

-- | Create a value of <a>ChangeTagsForResourceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ChangeTagsForResourceResponse'</a>,
--   <a>changeTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newChangeTagsForResourceResponse :: Int -> ChangeTagsForResourceResponse

-- | A request to retrieve a list of the public and private hosted zones
--   that are associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newListHostedZones</a> smart constructor.
data ListHostedZones
ListHostedZones' :: Maybe ResourceId -> Maybe Text -> Maybe Text -> ListHostedZones

-- | Create a value of <a>ListHostedZones</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:delegationSetId:ListHostedZones'</a>,
--   <a>listHostedZones_delegationSetId</a> - If you're using reusable
--   delegation sets and you want to list all of the hosted zones that are
--   associated with a reusable delegation set, specify the ID of that
--   reusable delegation set.
--   
--   <a>$sel:marker:ListHostedZones'</a>, <a>listHostedZones_marker</a> -
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more hosted zones. To get more hosted zones,
--   submit another <tt>ListHostedZones</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first hosted zone that Amazon Route 53 will return if you submit
--   another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more hosted zones to get.
--   
--   <a>$sel:maxItems:ListHostedZones'</a>, <a>listHostedZones_maxItems</a>
--   - (Optional) The maximum number of hosted zones that you want Amazon
--   Route 53 to return. If you have more than <tt>maxitems</tt> hosted
--   zones, the value of <tt>IsTruncated</tt> in the response is
--   <tt>true</tt>, and the value of <tt>NextMarker</tt> is the hosted zone
--   ID of the first hosted zone that Route 53 will return if you submit
--   another request.
newListHostedZones :: ListHostedZones

-- | <i>See:</i> <a>newListHostedZonesResponse</a> smart constructor.
data ListHostedZonesResponse
ListHostedZonesResponse' :: Maybe Text -> Maybe Text -> Int -> [HostedZone] -> Bool -> Text -> ListHostedZonesResponse

-- | Create a value of <a>ListHostedZonesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListHostedZones'</a>,
--   <a>listHostedZonesResponse_marker</a> - For the second and subsequent
--   calls to <tt>ListHostedZones</tt>, <tt>Marker</tt> is the value that
--   you specified for the <tt>marker</tt> parameter in the request that
--   produced the current response.
--   
--   <a>$sel:nextMarker:ListHostedZonesResponse'</a>,
--   <a>listHostedZonesResponse_nextMarker</a> - If <tt>IsTruncated</tt> is
--   <tt>true</tt>, the value of <tt>NextMarker</tt> identifies the first
--   hosted zone in the next group of hosted zones. Submit another
--   <tt>ListHostedZones</tt> request, and specify the value of
--   <tt>NextMarker</tt> from the response in the <tt>marker</tt>
--   parameter.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
--   
--   <a>$sel:httpStatus:ListHostedZonesResponse'</a>,
--   <a>listHostedZonesResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:hostedZones:ListHostedZonesResponse'</a>,
--   <a>listHostedZonesResponse_hostedZones</a> - A complex type that
--   contains general information about the hosted zone.
--   
--   <a>$sel:isTruncated:ListHostedZonesResponse'</a>,
--   <a>listHostedZonesResponse_isTruncated</a> - A flag indicating whether
--   there are more hosted zones to be listed. If the response was
--   truncated, you can get more hosted zones by submitting another
--   <tt>ListHostedZones</tt> request and specifying the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
--   
--   <a>$sel:maxItems:ListHostedZones'</a>,
--   <a>listHostedZonesResponse_maxItems</a> - The value that you specified
--   for the <tt>maxitems</tt> parameter in the call to
--   <tt>ListHostedZones</tt> that produced the current response.
newListHostedZonesResponse :: Int -> Bool -> Text -> ListHostedZonesResponse

-- | Request to get the number of traffic policy instances that are
--   associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newGetTrafficPolicyInstanceCount</a> smart constructor.
data GetTrafficPolicyInstanceCount
GetTrafficPolicyInstanceCount' :: GetTrafficPolicyInstanceCount

-- | Create a value of <a>GetTrafficPolicyInstanceCount</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetTrafficPolicyInstanceCount :: GetTrafficPolicyInstanceCount

-- | A complex type that contains information about the resource record
--   sets that Amazon Route 53 created based on a specified traffic policy.
--   
--   <i>See:</i> <a>newGetTrafficPolicyInstanceCountResponse</a> smart
--   constructor.
data GetTrafficPolicyInstanceCountResponse
GetTrafficPolicyInstanceCountResponse' :: Int -> Int -> GetTrafficPolicyInstanceCountResponse

-- | Create a value of <a>GetTrafficPolicyInstanceCountResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetTrafficPolicyInstanceCountResponse'</a>,
--   <a>getTrafficPolicyInstanceCountResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:trafficPolicyInstanceCount:GetTrafficPolicyInstanceCountResponse'</a>,
--   <a>getTrafficPolicyInstanceCountResponse_trafficPolicyInstanceCount</a>
--   - The number of traffic policy instances that are associated with the
--   current Amazon Web Services account.
newGetTrafficPolicyInstanceCountResponse :: Int -> Int -> GetTrafficPolicyInstanceCountResponse

-- | A request to get a list of geographic locations that Amazon Route 53
--   supports for geolocation resource record sets.
--   
--   <i>See:</i> <a>newListGeoLocations</a> smart constructor.
data ListGeoLocations
ListGeoLocations' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ListGeoLocations

-- | Create a value of <a>ListGeoLocations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startSubdivisionCode:ListGeoLocations'</a>,
--   <a>listGeoLocations_startSubdivisionCode</a> - The code for the state
--   of the United States with which you want to start listing locations
--   that Amazon Route 53 supports for geolocation. If Route 53 has already
--   returned a page or more of results, if <tt>IsTruncated</tt> is
--   <tt>true</tt>, and if <tt>NextSubdivisionCode</tt> from the previous
--   response has a value, enter that value in
--   <tt>startsubdivisioncode</tt> to return the next page of results.
--   
--   To list subdivisions (U.S. states), you must include both
--   <tt>startcountrycode</tt> and <tt>startsubdivisioncode</tt>.
--   
--   <a>$sel:maxItems:ListGeoLocations'</a>,
--   <a>listGeoLocations_maxItems</a> - (Optional) The maximum number of
--   geolocations to be included in the response body for this request. If
--   more than <tt>maxitems</tt> geolocations remain to be listed, then the
--   value of the <tt>IsTruncated</tt> element in the response is
--   <tt>true</tt>.
--   
--   <a>$sel:startCountryCode:ListGeoLocations'</a>,
--   <a>listGeoLocations_startCountryCode</a> - The code for the country
--   with which you want to start listing locations that Amazon Route 53
--   supports for geolocation. If Route 53 has already returned a page or
--   more of results, if <tt>IsTruncated</tt> is <tt>true</tt>, and if
--   <tt>NextCountryCode</tt> from the previous response has a value, enter
--   that value in <tt>startcountrycode</tt> to return the next page of
--   results.
--   
--   <a>$sel:startContinentCode:ListGeoLocations'</a>,
--   <a>listGeoLocations_startContinentCode</a> - The code for the
--   continent with which you want to start listing locations that Amazon
--   Route 53 supports for geolocation. If Route 53 has already returned a
--   page or more of results, if <tt>IsTruncated</tt> is true, and if
--   <tt>NextContinentCode</tt> from the previous response has a value,
--   enter that value in <tt>startcontinentcode</tt> to return the next
--   page of results.
--   
--   Include <tt>startcontinentcode</tt> only if you want to list
--   continents. Don't include <tt>startcontinentcode</tt> when you're
--   listing countries or countries with their subdivisions.
newListGeoLocations :: ListGeoLocations

-- | A complex type containing the response information for the request.
--   
--   <i>See:</i> <a>newListGeoLocationsResponse</a> smart constructor.
data ListGeoLocationsResponse
ListGeoLocationsResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> [GeoLocationDetails] -> Bool -> Text -> ListGeoLocationsResponse

-- | Create a value of <a>ListGeoLocationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextContinentCode:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_nextContinentCode</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextContinentCode</tt> in the <tt>startcontinentcode</tt>
--   parameter in another <tt>ListGeoLocations</tt> request.
--   
--   <a>$sel:nextCountryCode:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_nextCountryCode</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextCountryCode</tt> in the <tt>startcountrycode</tt> parameter in
--   another <tt>ListGeoLocations</tt> request.
--   
--   <a>$sel:nextSubdivisionCode:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_nextSubdivisionCode</a> - If
--   <tt>IsTruncated</tt> is <tt>true</tt>, you can make a follow-up
--   request to display more locations. Enter the value of
--   <tt>NextSubdivisionCode</tt> in the <tt>startsubdivisioncode</tt>
--   parameter in another <tt>ListGeoLocations</tt> request.
--   
--   <a>$sel:httpStatus:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:geoLocationDetailsList:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_geoLocationDetailsList</a> - A complex
--   type that contains one <tt>GeoLocationDetails</tt> element for each
--   location that Amazon Route 53 supports for geolocation.
--   
--   <a>$sel:isTruncated:ListGeoLocationsResponse'</a>,
--   <a>listGeoLocationsResponse_isTruncated</a> - A value that indicates
--   whether more locations remain to be listed after the last location in
--   this response. If so, the value of <tt>IsTruncated</tt> is
--   <tt>true</tt>. To get more values, submit another request and include
--   the values of <tt>NextContinentCode</tt>, <tt>NextCountryCode</tt>,
--   and <tt>NextSubdivisionCode</tt> in the <tt>startcontinentcode</tt>,
--   <tt>startcountrycode</tt>, and <tt>startsubdivisioncode</tt>, as
--   applicable.
--   
--   <a>$sel:maxItems:ListGeoLocations'</a>,
--   <a>listGeoLocationsResponse_maxItems</a> - The value that you
--   specified for <tt>MaxItems</tt> in the request.
newListGeoLocationsResponse :: Int -> Bool -> Text -> ListGeoLocationsResponse

-- | A request to get information about a specified hosted zone.
--   
--   <i>See:</i> <a>newGetHostedZone</a> smart constructor.
data GetHostedZone
GetHostedZone' :: ResourceId -> GetHostedZone

-- | Create a value of <a>GetHostedZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetHostedZone'</a>, <a>getHostedZone_id</a> - The ID of the
--   hosted zone that you want to get information about.
newGetHostedZone :: ResourceId -> GetHostedZone

-- | A complex type that contain the response to a <tt>GetHostedZone</tt>
--   request.
--   
--   <i>See:</i> <a>newGetHostedZoneResponse</a> smart constructor.
data GetHostedZoneResponse
GetHostedZoneResponse' :: Maybe (NonEmpty VPC) -> Maybe DelegationSet -> Int -> HostedZone -> GetHostedZoneResponse

-- | Create a value of <a>GetHostedZoneResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vPCs:GetHostedZoneResponse'</a>,
--   <a>getHostedZoneResponse_vPCs</a> - A complex type that contains
--   information about the VPCs that are associated with the specified
--   hosted zone.
--   
--   <a>$sel:delegationSet:GetHostedZoneResponse'</a>,
--   <a>getHostedZoneResponse_delegationSet</a> - A complex type that lists
--   the Amazon Route 53 name servers for the specified hosted zone.
--   
--   <a>$sel:httpStatus:GetHostedZoneResponse'</a>,
--   <a>getHostedZoneResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:hostedZone:GetHostedZoneResponse'</a>,
--   <a>getHostedZoneResponse_hostedZone</a> - A complex type that contains
--   general information about the specified hosted zone.
newGetHostedZoneResponse :: Int -> HostedZone -> GetHostedZoneResponse

-- | A request to get information about a specified health check.
--   
--   <i>See:</i> <a>newGetHealthCheck</a> smart constructor.
data GetHealthCheck
GetHealthCheck' :: Text -> GetHealthCheck

-- | Create a value of <a>GetHealthCheck</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckId:GetHealthCheck'</a>,
--   <a>getHealthCheck_healthCheckId</a> - The identifier that Amazon Route
--   53 assigned to the health check when you created it. When you add or
--   update a resource record set, you use this value to specify which
--   health check to use. The value can be up to 64 characters long.
newGetHealthCheck :: Text -> GetHealthCheck

-- | A complex type that contains the response to a <tt>GetHealthCheck</tt>
--   request.
--   
--   <i>See:</i> <a>newGetHealthCheckResponse</a> smart constructor.
data GetHealthCheckResponse
GetHealthCheckResponse' :: Int -> HealthCheck -> GetHealthCheckResponse

-- | Create a value of <a>GetHealthCheckResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHealthCheckResponse'</a>,
--   <a>getHealthCheckResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:healthCheck:GetHealthCheckResponse'</a>,
--   <a>getHealthCheckResponse_healthCheck</a> - A complex type that
--   contains information about one health check that is associated with
--   the current Amazon Web Services account.
newGetHealthCheckResponse :: Int -> HealthCheck -> GetHealthCheckResponse

-- | A request for the resource record sets that are associated with a
--   specified hosted zone.
--   
--   <i>See:</i> <a>newListResourceRecordSets</a> smart constructor.
data ListResourceRecordSets
ListResourceRecordSets' :: Maybe Text -> Maybe RRType -> Maybe Text -> Maybe Text -> ResourceId -> ListResourceRecordSets

-- | Create a value of <a>ListResourceRecordSets</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startRecordName:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSets_startRecordName</a> - The first name in the
--   lexicographic ordering of resource record sets that you want to list.
--   If the specified record name doesn't exist, the results begin with the
--   first resource record set that has a name greater than the value of
--   <tt>name</tt>.
--   
--   <a>$sel:startRecordType:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSets_startRecordType</a> - The type of resource
--   record set to begin the record listing from.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>MX</tt> |
--   <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> | <tt>SOA</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>API Gateway custom regional API or edge-optimized API</b>:
--   A</li>
--   <li><b>CloudFront distribution</b>: A or AAAA</li>
--   <li><b>Elastic Beanstalk environment that has a regionalized
--   subdomain</b>: A</li>
--   <li><b>Elastic Load Balancing load balancer</b>: A | AAAA</li>
--   <li><b>S3 bucket</b>: A</li>
--   <li><b>VPC interface VPC endpoint</b>: A</li>
--   <li><b>Another resource record set in this hosted zone:</b> The type
--   of the resource record set that the alias references.</li>
--   </ul>
--   
--   Constraint: Specifying <tt>type</tt> without specifying <tt>name</tt>
--   returns an <tt>InvalidInput</tt> error.
--   
--   <a>$sel:startRecordIdentifier:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSets_startRecordIdentifier</a> - <i>Resource
--   record sets that have a routing policy other than simple:</i> If
--   results were truncated for a given DNS name and type, specify the
--   value of <tt>NextRecordIdentifier</tt> from the previous response to
--   get the next resource record set that has the current DNS name and
--   type.
--   
--   <a>$sel:maxItems:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSets_maxItems</a> - (Optional) The maximum number
--   of resource records sets to include in the response body for this
--   request. If the response includes more than <tt>maxitems</tt> resource
--   record sets, the value of the <tt>IsTruncated</tt> element in the
--   response is <tt>true</tt>, and the values of the
--   <tt>NextRecordName</tt> and <tt>NextRecordType</tt> elements in the
--   response identify the first resource record set in the next group of
--   <tt>maxitems</tt> resource record sets.
--   
--   <a>$sel:hostedZoneId:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSets_hostedZoneId</a> - The ID of the hosted zone
--   that contains the resource record sets that you want to list.
newListResourceRecordSets :: ResourceId -> ListResourceRecordSets

-- | A complex type that contains list information for the resource record
--   set.
--   
--   <i>See:</i> <a>newListResourceRecordSetsResponse</a> smart
--   constructor.
data ListResourceRecordSetsResponse
ListResourceRecordSetsResponse' :: Maybe RRType -> Maybe Text -> Maybe Text -> Int -> [ResourceRecordSet] -> Bool -> Text -> ListResourceRecordSetsResponse

-- | Create a value of <a>ListResourceRecordSetsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextRecordType:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_nextRecordType</a> - If the results
--   were truncated, the type of the next record in the list.
--   
--   This element is present only if <tt>IsTruncated</tt> is true.
--   
--   <a>$sel:nextRecordName:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_nextRecordName</a> - If the results
--   were truncated, the name of the next record in the list.
--   
--   This element is present only if <tt>IsTruncated</tt> is true.
--   
--   <a>$sel:nextRecordIdentifier:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_nextRecordIdentifier</a> -
--   <i>Resource record sets that have a routing policy other than
--   simple:</i> If results were truncated for a given DNS name and type,
--   the value of <tt>SetIdentifier</tt> for the next resource record set
--   that has the current DNS name and type.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   <a>$sel:httpStatus:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceRecordSets:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_resourceRecordSets</a> - Information
--   about multiple resource record sets.
--   
--   <a>$sel:isTruncated:ListResourceRecordSetsResponse'</a>,
--   <a>listResourceRecordSetsResponse_isTruncated</a> - A flag that
--   indicates whether more resource record sets remain to be listed. If
--   your results were truncated, you can make a follow-up pagination
--   request by using the <tt>NextRecordName</tt> element.
--   
--   <a>$sel:maxItems:ListResourceRecordSets'</a>,
--   <a>listResourceRecordSetsResponse_maxItems</a> - The maximum number of
--   records you requested.
newListResourceRecordSetsResponse :: Int -> Bool -> Text -> ListResourceRecordSetsResponse

-- | <i>See:</i> <a>newCreateReusableDelegationSet</a> smart constructor.
data CreateReusableDelegationSet
CreateReusableDelegationSet' :: Maybe ResourceId -> Text -> CreateReusableDelegationSet

-- | Create a value of <a>CreateReusableDelegationSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:CreateReusableDelegationSet'</a>,
--   <a>createReusableDelegationSet_hostedZoneId</a> - If you want to mark
--   the delegation set for an existing hosted zone as reusable, the ID for
--   that hosted zone.
--   
--   <a>$sel:callerReference:CreateReusableDelegationSet'</a>,
--   <a>createReusableDelegationSet_callerReference</a> - A unique string
--   that identifies the request, and that allows you to retry failed
--   <tt>CreateReusableDelegationSet</tt> requests without the risk of
--   executing the operation twice. You must use a unique
--   <tt>CallerReference</tt> string every time you submit a
--   <tt>CreateReusableDelegationSet</tt> request. <tt>CallerReference</tt>
--   can be any unique string, for example a date/time stamp.
newCreateReusableDelegationSet :: Text -> CreateReusableDelegationSet

-- | <i>See:</i> <a>newCreateReusableDelegationSetResponse</a> smart
--   constructor.
data CreateReusableDelegationSetResponse
CreateReusableDelegationSetResponse' :: Int -> DelegationSet -> Text -> CreateReusableDelegationSetResponse

-- | Create a value of <a>CreateReusableDelegationSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateReusableDelegationSetResponse'</a>,
--   <a>createReusableDelegationSetResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:delegationSet:CreateReusableDelegationSetResponse'</a>,
--   <a>createReusableDelegationSetResponse_delegationSet</a> - A complex
--   type that contains name server information.
--   
--   <a>$sel:location:CreateReusableDelegationSetResponse'</a>,
--   <a>createReusableDelegationSetResponse_location</a> - The unique URL
--   representing the new reusable delegation set.
newCreateReusableDelegationSetResponse :: Int -> DelegationSet -> Text -> CreateReusableDelegationSetResponse

-- | <i>See:</i> <a>newCreateQueryLoggingConfig</a> smart constructor.
data CreateQueryLoggingConfig
CreateQueryLoggingConfig' :: ResourceId -> Text -> CreateQueryLoggingConfig

-- | Create a value of <a>CreateQueryLoggingConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:CreateQueryLoggingConfig'</a>,
--   <a>createQueryLoggingConfig_hostedZoneId</a> - The ID of the hosted
--   zone that you want to log queries for. You can log queries only for
--   public hosted zones.
--   
--   <a>$sel:cloudWatchLogsLogGroupArn:CreateQueryLoggingConfig'</a>,
--   <a>createQueryLoggingConfig_cloudWatchLogsLogGroupArn</a> - The Amazon
--   Resource Name (ARN) for the log group that you want to Amazon Route 53
--   to send query logs to. This is the format of the ARN:
--   
--   
--   arn:aws:logs:<i>region</i>:<i>account-id</i>:log-group:<i>log_group_name</i>
--   
--   To get the ARN for a log group, you can use the CloudWatch console,
--   the <a>DescribeLogGroups</a> API action, the
--   <a>describe-log-groups</a> command, or the applicable command in one
--   of the Amazon Web Services SDKs.
newCreateQueryLoggingConfig :: ResourceId -> Text -> CreateQueryLoggingConfig

-- | <i>See:</i> <a>newCreateQueryLoggingConfigResponse</a> smart
--   constructor.
data CreateQueryLoggingConfigResponse
CreateQueryLoggingConfigResponse' :: Int -> QueryLoggingConfig -> Text -> CreateQueryLoggingConfigResponse

-- | Create a value of <a>CreateQueryLoggingConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateQueryLoggingConfigResponse'</a>,
--   <a>createQueryLoggingConfigResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:queryLoggingConfig:CreateQueryLoggingConfigResponse'</a>,
--   <a>createQueryLoggingConfigResponse_queryLoggingConfig</a> - A complex
--   type that contains the ID for a query logging configuration, the ID of
--   the hosted zone that you want to log queries for, and the ARN for the
--   log group that you want Amazon Route 53 to send query logs to.
--   
--   <a>$sel:location:CreateQueryLoggingConfigResponse'</a>,
--   <a>createQueryLoggingConfigResponse_location</a> - The unique URL
--   representing the new query logging configuration.
newCreateQueryLoggingConfigResponse :: Int -> QueryLoggingConfig -> Text -> CreateQueryLoggingConfigResponse

-- | A request for the number of health checks that are associated with the
--   current Amazon Web Services account.
--   
--   <i>See:</i> <a>newGetHealthCheckCount</a> smart constructor.
data GetHealthCheckCount
GetHealthCheckCount' :: GetHealthCheckCount

-- | Create a value of <a>GetHealthCheckCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetHealthCheckCount :: GetHealthCheckCount

-- | A complex type that contains the response to a
--   <tt>GetHealthCheckCount</tt> request.
--   
--   <i>See:</i> <a>newGetHealthCheckCountResponse</a> smart constructor.
data GetHealthCheckCountResponse
GetHealthCheckCountResponse' :: Int -> Integer -> GetHealthCheckCountResponse

-- | Create a value of <a>GetHealthCheckCountResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHealthCheckCountResponse'</a>,
--   <a>getHealthCheckCountResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:healthCheckCount:GetHealthCheckCountResponse'</a>,
--   <a>getHealthCheckCountResponse_healthCheckCount</a> - The number of
--   health checks associated with the current Amazon Web Services account.
newGetHealthCheckCountResponse :: Int -> Integer -> GetHealthCheckCountResponse

-- | A complex type that contains information about the traffic policy that
--   you want to update the comment for.
--   
--   <i>See:</i> <a>newUpdateTrafficPolicyComment</a> smart constructor.
data UpdateTrafficPolicyComment
UpdateTrafficPolicyComment' :: Text -> Natural -> Text -> UpdateTrafficPolicyComment

-- | Create a value of <a>UpdateTrafficPolicyComment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:UpdateTrafficPolicyComment'</a>,
--   <a>updateTrafficPolicyComment_id</a> - The value of <tt>Id</tt> for
--   the traffic policy that you want to update the comment for.
--   
--   <a>$sel:version:UpdateTrafficPolicyComment'</a>,
--   <a>updateTrafficPolicyComment_version</a> - The value of
--   <tt>Version</tt> for the traffic policy that you want to update the
--   comment for.
--   
--   <a>$sel:comment:UpdateTrafficPolicyComment'</a>,
--   <a>updateTrafficPolicyComment_comment</a> - The new comment for the
--   specified traffic policy and version.
newUpdateTrafficPolicyComment :: Text -> Natural -> Text -> UpdateTrafficPolicyComment

-- | A complex type that contains the response information for the traffic
--   policy.
--   
--   <i>See:</i> <a>newUpdateTrafficPolicyCommentResponse</a> smart
--   constructor.
data UpdateTrafficPolicyCommentResponse
UpdateTrafficPolicyCommentResponse' :: Int -> TrafficPolicy -> UpdateTrafficPolicyCommentResponse

-- | Create a value of <a>UpdateTrafficPolicyCommentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateTrafficPolicyCommentResponse'</a>,
--   <a>updateTrafficPolicyCommentResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:trafficPolicy:UpdateTrafficPolicyCommentResponse'</a>,
--   <a>updateTrafficPolicyCommentResponse_trafficPolicy</a> - A complex
--   type that contains settings for the specified traffic policy.
newUpdateTrafficPolicyCommentResponse :: Int -> TrafficPolicy -> UpdateTrafficPolicyCommentResponse

-- | A request to retrieve a count of all the hosted zones that are
--   associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newGetHostedZoneCount</a> smart constructor.
data GetHostedZoneCount
GetHostedZoneCount' :: GetHostedZoneCount

-- | Create a value of <a>GetHostedZoneCount</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetHostedZoneCount :: GetHostedZoneCount

-- | A complex type that contains the response to a
--   <tt>GetHostedZoneCount</tt> request.
--   
--   <i>See:</i> <a>newGetHostedZoneCountResponse</a> smart constructor.
data GetHostedZoneCountResponse
GetHostedZoneCountResponse' :: Int -> Integer -> GetHostedZoneCountResponse

-- | Create a value of <a>GetHostedZoneCountResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHostedZoneCountResponse'</a>,
--   <a>getHostedZoneCountResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:hostedZoneCount:GetHostedZoneCountResponse'</a>,
--   <a>getHostedZoneCountResponse_hostedZoneCount</a> - The total number
--   of public and private hosted zones that are associated with the
--   current Amazon Web Services account.
newGetHostedZoneCountResponse :: Int -> Integer -> GetHostedZoneCountResponse

-- | <i>See:</i> <a>newDeleteKeySigningKey</a> smart constructor.
data DeleteKeySigningKey
DeleteKeySigningKey' :: ResourceId -> Text -> DeleteKeySigningKey

-- | Create a value of <a>DeleteKeySigningKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:DeleteKeySigningKey'</a>,
--   <a>deleteKeySigningKey_hostedZoneId</a> - A unique string used to
--   identify a hosted zone.
--   
--   <a>$sel:name:DeleteKeySigningKey'</a>, <a>deleteKeySigningKey_name</a>
--   - A string used to identify a key-signing key (KSK).
newDeleteKeySigningKey :: ResourceId -> Text -> DeleteKeySigningKey

-- | <i>See:</i> <a>newDeleteKeySigningKeyResponse</a> smart constructor.
data DeleteKeySigningKeyResponse
DeleteKeySigningKeyResponse' :: Int -> ChangeInfo -> DeleteKeySigningKeyResponse

-- | Create a value of <a>DeleteKeySigningKeyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteKeySigningKeyResponse'</a>,
--   <a>deleteKeySigningKeyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:changeInfo:DeleteKeySigningKeyResponse'</a>,
--   <a>deleteKeySigningKeyResponse_changeInfo</a> - Undocumented member.
newDeleteKeySigningKeyResponse :: Int -> ChangeInfo -> DeleteKeySigningKeyResponse

-- | <i>See:</i> <a>newGetDNSSEC</a> smart constructor.
data GetDNSSEC
GetDNSSEC' :: ResourceId -> GetDNSSEC

-- | Create a value of <a>GetDNSSEC</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:GetDNSSEC'</a>, <a>getDNSSEC_hostedZoneId</a> - A
--   unique string used to identify a hosted zone.
newGetDNSSEC :: ResourceId -> GetDNSSEC

-- | <i>See:</i> <a>newGetDNSSECResponse</a> smart constructor.
data GetDNSSECResponse
GetDNSSECResponse' :: Int -> DNSSECStatus -> [KeySigningKey] -> GetDNSSECResponse

-- | Create a value of <a>GetDNSSECResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetDNSSECResponse'</a>,
--   <a>getDNSSECResponse_httpStatus</a> - The response's http status code.
--   
--   <a>$sel:status:GetDNSSECResponse'</a>, <a>getDNSSECResponse_status</a>
--   - A string repesenting the status of DNSSEC.
--   
--   <a>$sel:keySigningKeys:GetDNSSECResponse'</a>,
--   <a>getDNSSECResponse_keySigningKeys</a> - The key-signing keys (KSKs)
--   in your account.
newGetDNSSECResponse :: Int -> DNSSECStatus -> GetDNSSECResponse

-- | A complex type that contains information about the request to create a
--   hosted zone.
--   
--   <i>See:</i> <a>newGetAccountLimit</a> smart constructor.
data GetAccountLimit
GetAccountLimit' :: AccountLimitType -> GetAccountLimit

-- | Create a value of <a>GetAccountLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':GetAccountLimit'</a>, <a>getAccountLimit_type</a> - The
--   limit that you want to get. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
newGetAccountLimit :: AccountLimitType -> GetAccountLimit

-- | A complex type that contains the requested limit.
--   
--   <i>See:</i> <a>newGetAccountLimitResponse</a> smart constructor.
data GetAccountLimitResponse
GetAccountLimitResponse' :: Int -> AccountLimit -> Natural -> GetAccountLimitResponse

-- | Create a value of <a>GetAccountLimitResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetAccountLimitResponse'</a>,
--   <a>getAccountLimitResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:limit:GetAccountLimitResponse'</a>,
--   <a>getAccountLimitResponse_limit</a> - The current setting for the
--   specified limit. For example, if you specified
--   <tt>MAX_HEALTH_CHECKS_BY_OWNER</tt> for the value of <tt>Type</tt> in
--   the request, the value of <tt>Limit</tt> is the maximum number of
--   health checks that you can create using the current account.
--   
--   <a>$sel:count:GetAccountLimitResponse'</a>,
--   <a>getAccountLimitResponse_count</a> - The current number of entities
--   that you have created of the specified type. For example, if you
--   specified <tt>MAX_HEALTH_CHECKS_BY_OWNER</tt> for the value of
--   <tt>Type</tt> in the request, the value of <tt>Count</tt> is the
--   current number of health checks that you have created using the
--   current account.
newGetAccountLimitResponse :: Int -> AccountLimit -> Natural -> GetAccountLimitResponse

-- | <i>See:</i> <a>newEnableHostedZoneDNSSEC</a> smart constructor.
data EnableHostedZoneDNSSEC
EnableHostedZoneDNSSEC' :: ResourceId -> EnableHostedZoneDNSSEC

-- | Create a value of <a>EnableHostedZoneDNSSEC</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:EnableHostedZoneDNSSEC'</a>,
--   <a>enableHostedZoneDNSSEC_hostedZoneId</a> - A unique string used to
--   identify a hosted zone.
newEnableHostedZoneDNSSEC :: ResourceId -> EnableHostedZoneDNSSEC

-- | <i>See:</i> <a>newEnableHostedZoneDNSSECResponse</a> smart
--   constructor.
data EnableHostedZoneDNSSECResponse
EnableHostedZoneDNSSECResponse' :: Int -> ChangeInfo -> EnableHostedZoneDNSSECResponse

-- | Create a value of <a>EnableHostedZoneDNSSECResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:EnableHostedZoneDNSSECResponse'</a>,
--   <a>enableHostedZoneDNSSECResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:changeInfo:EnableHostedZoneDNSSECResponse'</a>,
--   <a>enableHostedZoneDNSSECResponse_changeInfo</a> - Undocumented
--   member.
newEnableHostedZoneDNSSECResponse :: Int -> ChangeInfo -> EnableHostedZoneDNSSECResponse

-- | <i>See:</i> <a>newDeleteQueryLoggingConfig</a> smart constructor.
data DeleteQueryLoggingConfig
DeleteQueryLoggingConfig' :: Text -> DeleteQueryLoggingConfig

-- | Create a value of <a>DeleteQueryLoggingConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteQueryLoggingConfig'</a>,
--   <a>deleteQueryLoggingConfig_id</a> - The ID of the configuration that
--   you want to delete.
newDeleteQueryLoggingConfig :: Text -> DeleteQueryLoggingConfig

-- | <i>See:</i> <a>newDeleteQueryLoggingConfigResponse</a> smart
--   constructor.
data DeleteQueryLoggingConfigResponse
DeleteQueryLoggingConfigResponse' :: Int -> DeleteQueryLoggingConfigResponse

-- | Create a value of <a>DeleteQueryLoggingConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteQueryLoggingConfigResponse'</a>,
--   <a>deleteQueryLoggingConfigResponse_httpStatus</a> - The response's
--   http status code.
newDeleteQueryLoggingConfigResponse :: Int -> DeleteQueryLoggingConfigResponse

-- | <i>See:</i> <a>newGetQueryLoggingConfig</a> smart constructor.
data GetQueryLoggingConfig
GetQueryLoggingConfig' :: Text -> GetQueryLoggingConfig

-- | Create a value of <a>GetQueryLoggingConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetQueryLoggingConfig'</a>, <a>getQueryLoggingConfig_id</a>
--   - The ID of the configuration for DNS query logging that you want to
--   get information about.
newGetQueryLoggingConfig :: Text -> GetQueryLoggingConfig

-- | <i>See:</i> <a>newGetQueryLoggingConfigResponse</a> smart constructor.
data GetQueryLoggingConfigResponse
GetQueryLoggingConfigResponse' :: Int -> QueryLoggingConfig -> GetQueryLoggingConfigResponse

-- | Create a value of <a>GetQueryLoggingConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetQueryLoggingConfigResponse'</a>,
--   <a>getQueryLoggingConfigResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:queryLoggingConfig:GetQueryLoggingConfigResponse'</a>,
--   <a>getQueryLoggingConfigResponse_queryLoggingConfig</a> - A complex
--   type that contains information about the query logging configuration
--   that you specified in a <a>GetQueryLoggingConfig</a> request.
newGetQueryLoggingConfigResponse :: Int -> QueryLoggingConfig -> GetQueryLoggingConfigResponse

-- | A request to get information about a specified reusable delegation
--   set.
--   
--   <i>See:</i> <a>newGetReusableDelegationSet</a> smart constructor.
data GetReusableDelegationSet
GetReusableDelegationSet' :: ResourceId -> GetReusableDelegationSet

-- | Create a value of <a>GetReusableDelegationSet</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetReusableDelegationSet'</a>,
--   <a>getReusableDelegationSet_id</a> - The ID of the reusable delegation
--   set that you want to get a list of name servers for.
newGetReusableDelegationSet :: ResourceId -> GetReusableDelegationSet

-- | A complex type that contains the response to the
--   <tt>GetReusableDelegationSet</tt> request.
--   
--   <i>See:</i> <a>newGetReusableDelegationSetResponse</a> smart
--   constructor.
data GetReusableDelegationSetResponse
GetReusableDelegationSetResponse' :: Int -> DelegationSet -> GetReusableDelegationSetResponse

-- | Create a value of <a>GetReusableDelegationSetResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetReusableDelegationSetResponse'</a>,
--   <a>getReusableDelegationSetResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:delegationSet:GetReusableDelegationSetResponse'</a>,
--   <a>getReusableDelegationSetResponse_delegationSet</a> - A complex type
--   that contains information about the reusable delegation set.
newGetReusableDelegationSetResponse :: Int -> DelegationSet -> GetReusableDelegationSetResponse

-- | A request to delete a specified traffic policy instance.
--   
--   <i>See:</i> <a>newDeleteTrafficPolicyInstance</a> smart constructor.
data DeleteTrafficPolicyInstance
DeleteTrafficPolicyInstance' :: Text -> DeleteTrafficPolicyInstance

-- | Create a value of <a>DeleteTrafficPolicyInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteTrafficPolicyInstance'</a>,
--   <a>deleteTrafficPolicyInstance_id</a> - The ID of the traffic policy
--   instance that you want to delete.
--   
--   When you delete a traffic policy instance, Amazon Route 53 also
--   deletes all of the resource record sets that were created when you
--   created the traffic policy instance.
newDeleteTrafficPolicyInstance :: Text -> DeleteTrafficPolicyInstance

-- | An empty element.
--   
--   <i>See:</i> <a>newDeleteTrafficPolicyInstanceResponse</a> smart
--   constructor.
data DeleteTrafficPolicyInstanceResponse
DeleteTrafficPolicyInstanceResponse' :: Int -> DeleteTrafficPolicyInstanceResponse

-- | Create a value of <a>DeleteTrafficPolicyInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteTrafficPolicyInstanceResponse'</a>,
--   <a>deleteTrafficPolicyInstanceResponse_httpStatus</a> - The response's
--   http status code.
newDeleteTrafficPolicyInstanceResponse :: Int -> DeleteTrafficPolicyInstanceResponse

-- | A complex type that contains information about the resource record
--   sets that you want to update based on a specified traffic policy
--   instance.
--   
--   <i>See:</i> <a>newUpdateTrafficPolicyInstance</a> smart constructor.
data UpdateTrafficPolicyInstance
UpdateTrafficPolicyInstance' :: Text -> Natural -> Text -> Natural -> UpdateTrafficPolicyInstance

-- | Create a value of <a>UpdateTrafficPolicyInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:UpdateTrafficPolicyInstance'</a>,
--   <a>updateTrafficPolicyInstance_id</a> - The ID of the traffic policy
--   instance that you want to update.
--   
--   <a>$sel:ttl:UpdateTrafficPolicyInstance'</a>,
--   <a>updateTrafficPolicyInstance_ttl</a> - The TTL that you want Amazon
--   Route 53 to assign to all of the updated resource record sets.
--   
--   <a>$sel:trafficPolicyId:UpdateTrafficPolicyInstance'</a>,
--   <a>updateTrafficPolicyInstance_trafficPolicyId</a> - The ID of the
--   traffic policy that you want Amazon Route 53 to use to update resource
--   record sets for the specified traffic policy instance.
--   
--   <a>$sel:trafficPolicyVersion:UpdateTrafficPolicyInstance'</a>,
--   <a>updateTrafficPolicyInstance_trafficPolicyVersion</a> - The version
--   of the traffic policy that you want Amazon Route 53 to use to update
--   resource record sets for the specified traffic policy instance.
newUpdateTrafficPolicyInstance :: Text -> Natural -> Text -> Natural -> UpdateTrafficPolicyInstance

-- | A complex type that contains information about the resource record
--   sets that Amazon Route 53 created based on a specified traffic policy.
--   
--   <i>See:</i> <a>newUpdateTrafficPolicyInstanceResponse</a> smart
--   constructor.
data UpdateTrafficPolicyInstanceResponse
UpdateTrafficPolicyInstanceResponse' :: Int -> TrafficPolicyInstance -> UpdateTrafficPolicyInstanceResponse

-- | Create a value of <a>UpdateTrafficPolicyInstanceResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateTrafficPolicyInstanceResponse'</a>,
--   <a>updateTrafficPolicyInstanceResponse_httpStatus</a> - The response's
--   http status code.
--   
--   
--   <a>$sel:trafficPolicyInstance:UpdateTrafficPolicyInstanceResponse'</a>,
--   <a>updateTrafficPolicyInstanceResponse_trafficPolicyInstance</a> - A
--   complex type that contains settings for the updated traffic policy
--   instance.
newUpdateTrafficPolicyInstanceResponse :: Int -> TrafficPolicyInstance -> UpdateTrafficPolicyInstanceResponse

-- | A request to update the comment for a hosted zone.
--   
--   <i>See:</i> <a>newUpdateHostedZoneComment</a> smart constructor.
data UpdateHostedZoneComment
UpdateHostedZoneComment' :: Maybe Text -> ResourceId -> UpdateHostedZoneComment

-- | Create a value of <a>UpdateHostedZoneComment</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:UpdateHostedZoneComment'</a>,
--   <a>updateHostedZoneComment_comment</a> - The new comment for the
--   hosted zone. If you don't specify a value for <tt>Comment</tt>, Amazon
--   Route 53 deletes the existing value of the <tt>Comment</tt> element,
--   if any.
--   
--   <a>$sel:id:UpdateHostedZoneComment'</a>,
--   <a>updateHostedZoneComment_id</a> - The ID for the hosted zone that
--   you want to update the comment for.
newUpdateHostedZoneComment :: ResourceId -> UpdateHostedZoneComment

-- | A complex type that contains the response to the
--   <tt>UpdateHostedZoneComment</tt> request.
--   
--   <i>See:</i> <a>newUpdateHostedZoneCommentResponse</a> smart
--   constructor.
data UpdateHostedZoneCommentResponse
UpdateHostedZoneCommentResponse' :: Int -> HostedZone -> UpdateHostedZoneCommentResponse

-- | Create a value of <a>UpdateHostedZoneCommentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateHostedZoneCommentResponse'</a>,
--   <a>updateHostedZoneCommentResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:hostedZone:UpdateHostedZoneCommentResponse'</a>,
--   <a>updateHostedZoneCommentResponse_hostedZone</a> - A complex type
--   that contains the response to the <tt>UpdateHostedZoneComment</tt>
--   request.
newUpdateHostedZoneCommentResponse :: Int -> HostedZone -> UpdateHostedZoneCommentResponse

-- | A request to get the status for a health check.
--   
--   <i>See:</i> <a>newGetHealthCheckStatus</a> smart constructor.
data GetHealthCheckStatus
GetHealthCheckStatus' :: Text -> GetHealthCheckStatus

-- | Create a value of <a>GetHealthCheckStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:healthCheckId:GetHealthCheckStatus'</a>,
--   <a>getHealthCheckStatus_healthCheckId</a> - The ID for the health
--   check that you want the current status for. When you created the
--   health check, <tt>CreateHealthCheck</tt> returned the ID in the
--   response, in the <tt>HealthCheckId</tt> element.
--   
--   If you want to check the status of a calculated health check, you must
--   use the Amazon Route 53 console or the CloudWatch console. You can't
--   use <tt>GetHealthCheckStatus</tt> to get the status of a calculated
--   health check.
newGetHealthCheckStatus :: Text -> GetHealthCheckStatus

-- | A complex type that contains the response to a <tt>GetHealthCheck</tt>
--   request.
--   
--   <i>See:</i> <a>newGetHealthCheckStatusResponse</a> smart constructor.
data GetHealthCheckStatusResponse
GetHealthCheckStatusResponse' :: Int -> [HealthCheckObservation] -> GetHealthCheckStatusResponse

-- | Create a value of <a>GetHealthCheckStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetHealthCheckStatusResponse'</a>,
--   <a>getHealthCheckStatusResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:healthCheckObservations:GetHealthCheckStatusResponse'</a>,
--   <a>getHealthCheckStatusResponse_healthCheckObservations</a> - A list
--   that contains one <tt>HealthCheckObservation</tt> element for each
--   Amazon Route 53 health checker that is reporting a status about the
--   health check endpoint.
newGetHealthCheckStatusResponse :: Int -> GetHealthCheckStatusResponse

-- | Lists all the private hosted zones that a specified VPC is associated
--   with, regardless of which Amazon Web Services account created the
--   hosted zones.
--   
--   <i>See:</i> <a>newListHostedZonesByVPC</a> smart constructor.
data ListHostedZonesByVPC
ListHostedZonesByVPC' :: Maybe Text -> Maybe Text -> Text -> VPCRegion -> ListHostedZonesByVPC

-- | Create a value of <a>ListHostedZonesByVPC</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPC_nextToken</a> - If the previous response
--   included a <tt>NextToken</tt> element, the specified VPC is associated
--   with more hosted zones. To get more hosted zones, submit another
--   <tt>ListHostedZonesByVPC</tt> request.
--   
--   For the value of <tt>NextToken</tt>, specify the value of
--   <tt>NextToken</tt> from the previous response.
--   
--   If the previous response didn't include a <tt>NextToken</tt> element,
--   there are no more hosted zones to get.
--   
--   <a>$sel:maxItems:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPC_maxItems</a> - (Optional) The maximum number
--   of hosted zones that you want Amazon Route 53 to return. If the
--   specified VPC is associated with more than <tt>MaxItems</tt> hosted
--   zones, the response includes a <tt>NextToken</tt> element.
--   <tt>NextToken</tt> contains an encrypted token that identifies the
--   first hosted zone that Route 53 will return if you submit another
--   request.
--   
--   <a>$sel:vPCId:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPC_vPCId</a> - The ID of the Amazon VPC that you
--   want to list hosted zones for.
--   
--   <a>$sel:vPCRegion:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPC_vPCRegion</a> - For the Amazon VPC that you
--   specified for <tt>VPCId</tt>, the Amazon Web Services Region that you
--   created the VPC in.
newListHostedZonesByVPC :: Text -> VPCRegion -> ListHostedZonesByVPC

-- | <i>See:</i> <a>newListHostedZonesByVPCResponse</a> smart constructor.
data ListHostedZonesByVPCResponse
ListHostedZonesByVPCResponse' :: Maybe Text -> Int -> [HostedZoneSummary] -> Text -> ListHostedZonesByVPCResponse

-- | Create a value of <a>ListHostedZonesByVPCResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPCResponse_nextToken</a> - The value that you
--   will use for <tt>NextToken</tt> in the next
--   <tt>ListHostedZonesByVPC</tt> request.
--   
--   <a>$sel:httpStatus:ListHostedZonesByVPCResponse'</a>,
--   <a>listHostedZonesByVPCResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:hostedZoneSummaries:ListHostedZonesByVPCResponse'</a>,
--   <a>listHostedZonesByVPCResponse_hostedZoneSummaries</a> - A list that
--   contains one <tt>HostedZoneSummary</tt> element for each hosted zone
--   that the specified Amazon VPC is associated with. Each
--   <tt>HostedZoneSummary</tt> element contains the hosted zone name and
--   ID, and information about who owns the hosted zone.
--   
--   <a>$sel:maxItems:ListHostedZonesByVPC'</a>,
--   <a>listHostedZonesByVPCResponse_maxItems</a> - The value that you
--   specified for <tt>MaxItems</tt> in the most recent
--   <tt>ListHostedZonesByVPC</tt> request.
newListHostedZonesByVPCResponse :: Int -> Text -> ListHostedZonesByVPCResponse

-- | A complex type that contains information about the request to create a
--   hosted zone.
--   
--   <i>See:</i> <a>newGetReusableDelegationSetLimit</a> smart constructor.
data GetReusableDelegationSetLimit
GetReusableDelegationSetLimit' :: ReusableDelegationSetLimitType -> ResourceId -> GetReusableDelegationSetLimit

-- | Create a value of <a>GetReusableDelegationSetLimit</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':GetReusableDelegationSetLimit'</a>,
--   <a>getReusableDelegationSetLimit_type</a> - Specify
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> to get the maximum
--   number of hosted zones that you can associate with the specified
--   reusable delegation set.
--   
--   <a>$sel:delegationSetId:GetReusableDelegationSetLimit'</a>,
--   <a>getReusableDelegationSetLimit_delegationSetId</a> - The ID of the
--   delegation set that you want to get the limit for.
newGetReusableDelegationSetLimit :: ReusableDelegationSetLimitType -> ResourceId -> GetReusableDelegationSetLimit

-- | A complex type that contains the requested limit.
--   
--   <i>See:</i> <a>newGetReusableDelegationSetLimitResponse</a> smart
--   constructor.
data GetReusableDelegationSetLimitResponse
GetReusableDelegationSetLimitResponse' :: Int -> ReusableDelegationSetLimit -> Natural -> GetReusableDelegationSetLimitResponse

-- | Create a value of <a>GetReusableDelegationSetLimitResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetReusableDelegationSetLimitResponse'</a>,
--   <a>getReusableDelegationSetLimitResponse_httpStatus</a> - The
--   response's http status code.
--   
--   <a>$sel:limit:GetReusableDelegationSetLimitResponse'</a>,
--   <a>getReusableDelegationSetLimitResponse_limit</a> - The current
--   setting for the limit on hosted zones that you can associate with the
--   specified reusable delegation set.
--   
--   <a>$sel:count:GetReusableDelegationSetLimitResponse'</a>,
--   <a>getReusableDelegationSetLimitResponse_count</a> - The current
--   number of hosted zones that you can associate with the specified
--   reusable delegation set.
newGetReusableDelegationSetLimitResponse :: Int -> ReusableDelegationSetLimit -> Natural -> GetReusableDelegationSetLimitResponse

-- | A complex type that contains information about the traffic policy that
--   you want to create a new version for.
--   
--   <i>See:</i> <a>newCreateTrafficPolicyVersion</a> smart constructor.
data CreateTrafficPolicyVersion
CreateTrafficPolicyVersion' :: Maybe Text -> Text -> Text -> CreateTrafficPolicyVersion

-- | Create a value of <a>CreateTrafficPolicyVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:CreateTrafficPolicyVersion'</a>,
--   <a>createTrafficPolicyVersion_comment</a> - The comment that you
--   specified in the <tt>CreateTrafficPolicyVersion</tt> request, if any.
--   
--   <a>$sel:id:CreateTrafficPolicyVersion'</a>,
--   <a>createTrafficPolicyVersion_id</a> - The ID of the traffic policy
--   for which you want to create a new version.
--   
--   <a>$sel:document:CreateTrafficPolicyVersion'</a>,
--   <a>createTrafficPolicyVersion_document</a> - The definition of this
--   version of the traffic policy, in JSON format. You specified the JSON
--   in the <tt>CreateTrafficPolicyVersion</tt> request. For more
--   information about the JSON format, see <a>CreateTrafficPolicy</a>.
newCreateTrafficPolicyVersion :: Text -> Text -> CreateTrafficPolicyVersion

-- | A complex type that contains the response information for the
--   <tt>CreateTrafficPolicyVersion</tt> request.
--   
--   <i>See:</i> <a>newCreateTrafficPolicyVersionResponse</a> smart
--   constructor.
data CreateTrafficPolicyVersionResponse
CreateTrafficPolicyVersionResponse' :: Int -> TrafficPolicy -> Text -> CreateTrafficPolicyVersionResponse

-- | Create a value of <a>CreateTrafficPolicyVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTrafficPolicyVersionResponse'</a>,
--   <a>createTrafficPolicyVersionResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:trafficPolicy:CreateTrafficPolicyVersionResponse'</a>,
--   <a>createTrafficPolicyVersionResponse_trafficPolicy</a> - A complex
--   type that contains settings for the new version of the traffic policy.
--   
--   <a>$sel:location:CreateTrafficPolicyVersionResponse'</a>,
--   <a>createTrafficPolicyVersionResponse_location</a> - A unique URL that
--   represents a new traffic policy version.
newCreateTrafficPolicyVersionResponse :: Int -> TrafficPolicy -> Text -> CreateTrafficPolicyVersionResponse

-- | <i>See:</i> <a>newDeactivateKeySigningKey</a> smart constructor.
data DeactivateKeySigningKey
DeactivateKeySigningKey' :: ResourceId -> Text -> DeactivateKeySigningKey

-- | Create a value of <a>DeactivateKeySigningKey</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:DeactivateKeySigningKey'</a>,
--   <a>deactivateKeySigningKey_hostedZoneId</a> - A unique string used to
--   identify a hosted zone.
--   
--   <a>$sel:name:DeactivateKeySigningKey'</a>,
--   <a>deactivateKeySigningKey_name</a> - A string used to identify a
--   key-signing key (KSK).
newDeactivateKeySigningKey :: ResourceId -> Text -> DeactivateKeySigningKey

-- | <i>See:</i> <a>newDeactivateKeySigningKeyResponse</a> smart
--   constructor.
data DeactivateKeySigningKeyResponse
DeactivateKeySigningKeyResponse' :: Int -> ChangeInfo -> DeactivateKeySigningKeyResponse

-- | Create a value of <a>DeactivateKeySigningKeyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeactivateKeySigningKeyResponse'</a>,
--   <a>deactivateKeySigningKeyResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:changeInfo:DeactivateKeySigningKeyResponse'</a>,
--   <a>deactivateKeySigningKeyResponse_changeInfo</a> - Undocumented
--   member.
newDeactivateKeySigningKeyResponse :: Int -> ChangeInfo -> DeactivateKeySigningKeyResponse

-- | Gets the value that Amazon Route 53 returns in response to a DNS
--   request for a specified record name and type. You can optionally
--   specify the IP address of a DNS resolver, an EDNS0 client subnet IP
--   address, and a subnet mask.
--   
--   <i>See:</i> <a>newTestDNSAnswer</a> smart constructor.
data TestDNSAnswer
TestDNSAnswer' :: Maybe Text -> Maybe Text -> Maybe Text -> ResourceId -> Text -> RRType -> TestDNSAnswer

-- | Create a value of <a>TestDNSAnswer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resolverIP:TestDNSAnswer'</a>, <a>testDNSAnswer_resolverIP</a>
--   - If you want to simulate a request from a specific DNS resolver,
--   specify the IP address for that resolver. If you omit this value,
--   <tt>TestDnsAnswer</tt> uses the IP address of a DNS resolver in the
--   Amazon Web Services US East (N. Virginia) Region (<tt>us-east-1</tt>).
--   
--   <a>$sel:eDNS0ClientSubnetIP:TestDNSAnswer'</a>,
--   <a>testDNSAnswer_eDNS0ClientSubnetIP</a> - If the resolver that you
--   specified for resolverip supports EDNS0, specify the IPv4 or IPv6
--   address of a client in the applicable location, for example,
--   <tt>192.0.2.44</tt> or <tt>2001:db8:85a3::8a2e:370:7334</tt>.
--   
--   <a>$sel:eDNS0ClientSubnetMask:TestDNSAnswer'</a>,
--   <a>testDNSAnswer_eDNS0ClientSubnetMask</a> - If you specify an IP
--   address for <tt>edns0clientsubnetip</tt>, you can optionally specify
--   the number of bits of the IP address that you want the checking tool
--   to include in the DNS query. For example, if you specify
--   <tt>192.0.2.44</tt> for <tt>edns0clientsubnetip</tt> and <tt>24</tt>
--   for <tt>edns0clientsubnetmask</tt>, the checking tool will simulate a
--   request from 192.0.2.0/24. The default value is 24 bits for IPv4
--   addresses and 64 bits for IPv6 addresses.
--   
--   The range of valid values depends on whether
--   <tt>edns0clientsubnetip</tt> is an IPv4 or an IPv6 address:
--   
--   <ul>
--   <li><b>IPv4</b>: Specify a value between 0 and 32</li>
--   <li><b>IPv6</b>: Specify a value between 0 and 128</li>
--   </ul>
--   
--   <a>$sel:hostedZoneId:TestDNSAnswer'</a>,
--   <a>testDNSAnswer_hostedZoneId</a> - The ID of the hosted zone that you
--   want Amazon Route 53 to simulate a query for.
--   
--   <a>$sel:recordName:TestDNSAnswer'</a>, <a>testDNSAnswer_recordName</a>
--   - The name of the resource record set that you want Amazon Route 53 to
--   simulate a query for.
--   
--   <a>$sel:recordType:TestDNSAnswer'</a>, <a>testDNSAnswer_recordType</a>
--   - The type of the resource record set.
newTestDNSAnswer :: ResourceId -> Text -> RRType -> TestDNSAnswer

-- | A complex type that contains the response to a <tt>TestDNSAnswer</tt>
--   request.
--   
--   <i>See:</i> <a>newTestDNSAnswerResponse</a> smart constructor.
data TestDNSAnswerResponse
TestDNSAnswerResponse' :: Int -> Text -> Text -> RRType -> [Text] -> Text -> Text -> TestDNSAnswerResponse

-- | Create a value of <a>TestDNSAnswerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TestDNSAnswerResponse'</a>,
--   <a>testDNSAnswerResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:nameserver:TestDNSAnswerResponse'</a>,
--   <a>testDNSAnswerResponse_nameserver</a> - The Amazon Route 53 name
--   server used to respond to the request.
--   
--   <a>$sel:recordName:TestDNSAnswer'</a>,
--   <a>testDNSAnswerResponse_recordName</a> - The name of the resource
--   record set that you submitted a request for.
--   
--   <a>$sel:recordType:TestDNSAnswer'</a>,
--   <a>testDNSAnswerResponse_recordType</a> - The type of the resource
--   record set that you submitted a request for.
--   
--   <a>$sel:recordData:TestDNSAnswerResponse'</a>,
--   <a>testDNSAnswerResponse_recordData</a> - A list that contains values
--   that Amazon Route 53 returned for this resource record set.
--   
--   <a>$sel:responseCode:TestDNSAnswerResponse'</a>,
--   <a>testDNSAnswerResponse_responseCode</a> - A code that indicates
--   whether the request is valid or not. The most common response code is
--   <tt>NOERROR</tt>, meaning that the request is valid. If the response
--   is not valid, Amazon Route 53 returns a response code that describes
--   the error. For a list of possible response codes, see <a>DNS
--   RCODES</a> on the IANA website.
--   
--   <a>$sel:protocol:TestDNSAnswerResponse'</a>,
--   <a>testDNSAnswerResponse_protocol</a> - The protocol that Amazon Route
--   53 used to respond to the request, either <tt>UDP</tt> or
--   <tt>TCP</tt>.
newTestDNSAnswerResponse :: Int -> Text -> Text -> RRType -> Text -> Text -> TestDNSAnswerResponse

-- | A request to retrieve a list of the health checks that are associated
--   with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newListHealthChecks</a> smart constructor.
data ListHealthChecks
ListHealthChecks' :: Maybe Text -> Maybe Text -> ListHealthChecks

-- | Create a value of <a>ListHealthChecks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:marker:ListHealthChecks'</a>, <a>listHealthChecks_marker</a> -
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>true</tt>, you have more health checks. To get another group,
--   submit another <tt>ListHealthChecks</tt> request.
--   
--   For the value of <tt>marker</tt>, specify the value of
--   <tt>NextMarker</tt> from the previous response, which is the ID of the
--   first health check that Amazon Route 53 will return if you submit
--   another request.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more health checks to get.
--   
--   <a>$sel:maxItems:ListHealthChecks'</a>,
--   <a>listHealthChecks_maxItems</a> - The maximum number of health checks
--   that you want <tt>ListHealthChecks</tt> to return in response to the
--   current request. Amazon Route 53 returns a maximum of 100 items. If
--   you set <tt>MaxItems</tt> to a value greater than 100, Route 53
--   returns only the first 100 health checks.
newListHealthChecks :: ListHealthChecks

-- | A complex type that contains the response to a
--   <tt>ListHealthChecks</tt> request.
--   
--   <i>See:</i> <a>newListHealthChecksResponse</a> smart constructor.
data ListHealthChecksResponse
ListHealthChecksResponse' :: Maybe Text -> Int -> [HealthCheck] -> Text -> Bool -> Text -> ListHealthChecksResponse

-- | Create a value of <a>ListHealthChecksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextMarker:ListHealthChecksResponse'</a>,
--   <a>listHealthChecksResponse_nextMarker</a> - If <tt>IsTruncated</tt>
--   is <tt>true</tt>, the value of <tt>NextMarker</tt> identifies the
--   first health check that Amazon Route 53 returns if you submit another
--   <tt>ListHealthChecks</tt> request and specify the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
--   
--   <a>$sel:httpStatus:ListHealthChecksResponse'</a>,
--   <a>listHealthChecksResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:healthChecks:ListHealthChecksResponse'</a>,
--   <a>listHealthChecksResponse_healthChecks</a> - A complex type that
--   contains one <tt>HealthCheck</tt> element for each health check that
--   is associated with the current Amazon Web Services account.
--   
--   <a>$sel:marker:ListHealthChecks'</a>,
--   <a>listHealthChecksResponse_marker</a> - For the second and subsequent
--   calls to <tt>ListHealthChecks</tt>, <tt>Marker</tt> is the value that
--   you specified for the <tt>marker</tt> parameter in the previous
--   request.
--   
--   <a>$sel:isTruncated:ListHealthChecksResponse'</a>,
--   <a>listHealthChecksResponse_isTruncated</a> - A flag that indicates
--   whether there are more health checks to be listed. If the response was
--   truncated, you can get the next group of health checks by submitting
--   another <tt>ListHealthChecks</tt> request and specifying the value of
--   <tt>NextMarker</tt> in the <tt>marker</tt> parameter.
--   
--   <a>$sel:maxItems:ListHealthChecks'</a>,
--   <a>listHealthChecksResponse_maxItems</a> - The value that you
--   specified for the <tt>maxitems</tt> parameter in the call to
--   <tt>ListHealthChecks</tt> that produced the current response.
newListHealthChecksResponse :: Int -> Text -> Bool -> Text -> ListHealthChecksResponse

-- | Gets information about a specific traffic policy version.
--   
--   <i>See:</i> <a>newGetTrafficPolicy</a> smart constructor.
data GetTrafficPolicy
GetTrafficPolicy' :: Text -> Natural -> GetTrafficPolicy

-- | Create a value of <a>GetTrafficPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:GetTrafficPolicy'</a>, <a>getTrafficPolicy_id</a> - The ID
--   of the traffic policy that you want to get information about.
--   
--   <a>$sel:version:GetTrafficPolicy'</a>, <a>getTrafficPolicy_version</a>
--   - The version number of the traffic policy that you want to get
--   information about.
newGetTrafficPolicy :: Text -> Natural -> GetTrafficPolicy

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newGetTrafficPolicyResponse</a> smart constructor.
data GetTrafficPolicyResponse
GetTrafficPolicyResponse' :: Int -> TrafficPolicy -> GetTrafficPolicyResponse

-- | Create a value of <a>GetTrafficPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetTrafficPolicyResponse'</a>,
--   <a>getTrafficPolicyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:trafficPolicy:GetTrafficPolicyResponse'</a>,
--   <a>getTrafficPolicyResponse_trafficPolicy</a> - A complex type that
--   contains settings for the specified traffic policy.
newGetTrafficPolicyResponse :: Int -> TrafficPolicy -> GetTrafficPolicyResponse

-- | A complex type that contains the information about the request to list
--   your traffic policies.
--   
--   <i>See:</i> <a>newListTrafficPolicyVersions</a> smart constructor.
data ListTrafficPolicyVersions
ListTrafficPolicyVersions' :: Maybe Text -> Maybe Text -> Text -> ListTrafficPolicyVersions

-- | Create a value of <a>ListTrafficPolicyVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxItems:ListTrafficPolicyVersions'</a>,
--   <a>listTrafficPolicyVersions_maxItems</a> - The maximum number of
--   traffic policy versions that you want Amazon Route 53 to include in
--   the response body for this request. If the specified traffic policy
--   has more than <tt>MaxItems</tt> versions, the value of
--   <tt>IsTruncated</tt> in the response is <tt>true</tt>, and the value
--   of the <tt>TrafficPolicyVersionMarker</tt> element is the ID of the
--   first version that Route 53 will return if you submit another request.
--   
--   <a>$sel:trafficPolicyVersionMarker:ListTrafficPolicyVersions'</a>,
--   <a>listTrafficPolicyVersions_trafficPolicyVersionMarker</a> - For your
--   first request to <tt>ListTrafficPolicyVersions</tt>, don't include the
--   <tt>TrafficPolicyVersionMarker</tt> parameter.
--   
--   If you have more traffic policy versions than the value of
--   <tt>MaxItems</tt>, <tt>ListTrafficPolicyVersions</tt> returns only the
--   first group of <tt>MaxItems</tt> versions. To get more traffic policy
--   versions, submit another <tt>ListTrafficPolicyVersions</tt> request.
--   For the value of <tt>TrafficPolicyVersionMarker</tt>, specify the
--   value of <tt>TrafficPolicyVersionMarker</tt> in the previous response.
--   
--   <a>$sel:id:ListTrafficPolicyVersions'</a>,
--   <a>listTrafficPolicyVersions_id</a> - Specify the value of <tt>Id</tt>
--   of the traffic policy for which you want to list all versions.
newListTrafficPolicyVersions :: Text -> ListTrafficPolicyVersions

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListTrafficPolicyVersionsResponse</a> smart
--   constructor.
data ListTrafficPolicyVersionsResponse
ListTrafficPolicyVersionsResponse' :: Int -> [TrafficPolicy] -> Bool -> Text -> Text -> ListTrafficPolicyVersionsResponse

-- | Create a value of <a>ListTrafficPolicyVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListTrafficPolicyVersionsResponse'</a>,
--   <a>listTrafficPolicyVersionsResponse_httpStatus</a> - The response's
--   http status code.
--   
--   <a>$sel:trafficPolicies:ListTrafficPolicyVersionsResponse'</a>,
--   <a>listTrafficPolicyVersionsResponse_trafficPolicies</a> - A list that
--   contains one <tt>TrafficPolicy</tt> element for each traffic policy
--   version that is associated with the specified traffic policy.
--   
--   <a>$sel:isTruncated:ListTrafficPolicyVersionsResponse'</a>,
--   <a>listTrafficPolicyVersionsResponse_isTruncated</a> - A flag that
--   indicates whether there are more traffic policies to be listed. If the
--   response was truncated, you can get the next group of traffic policies
--   by submitting another <tt>ListTrafficPolicyVersions</tt> request and
--   specifying the value of <tt>NextMarker</tt> in the <tt>marker</tt>
--   parameter.
--   
--   <a>$sel:trafficPolicyVersionMarker:ListTrafficPolicyVersions'</a>,
--   <a>listTrafficPolicyVersionsResponse_trafficPolicyVersionMarker</a> -
--   If <tt>IsTruncated</tt> is <tt>true</tt>, the value of
--   <tt>TrafficPolicyVersionMarker</tt> identifies the first traffic
--   policy that Amazon Route 53 will return if you submit another request.
--   Call <tt>ListTrafficPolicyVersions</tt> again and specify the value of
--   <tt>TrafficPolicyVersionMarker</tt> in the
--   <tt>TrafficPolicyVersionMarker</tt> request parameter.
--   
--   This element is present only if <tt>IsTruncated</tt> is <tt>true</tt>.
--   
--   <a>$sel:maxItems:ListTrafficPolicyVersions'</a>,
--   <a>listTrafficPolicyVersionsResponse_maxItems</a> - The value that you
--   specified for the <tt>maxitems</tt> parameter in the
--   <tt>ListTrafficPolicyVersions</tt> request that produced the current
--   response.
newListTrafficPolicyVersionsResponse :: Int -> Bool -> Text -> Text -> ListTrafficPolicyVersionsResponse

-- | A request to delete a hosted zone.
--   
--   <i>See:</i> <a>newDeleteHostedZone</a> smart constructor.
data DeleteHostedZone
DeleteHostedZone' :: ResourceId -> DeleteHostedZone

-- | Create a value of <a>DeleteHostedZone</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DeleteHostedZone'</a>, <a>deleteHostedZone_id</a> - The ID
--   of the hosted zone you want to delete.
newDeleteHostedZone :: ResourceId -> DeleteHostedZone

-- | A complex type that contains the response to a
--   <tt>DeleteHostedZone</tt> request.
--   
--   <i>See:</i> <a>newDeleteHostedZoneResponse</a> smart constructor.
data DeleteHostedZoneResponse
DeleteHostedZoneResponse' :: Int -> ChangeInfo -> DeleteHostedZoneResponse

-- | Create a value of <a>DeleteHostedZoneResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteHostedZoneResponse'</a>,
--   <a>deleteHostedZoneResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:changeInfo:DeleteHostedZoneResponse'</a>,
--   <a>deleteHostedZoneResponse_changeInfo</a> - A complex type that
--   contains the ID, the status, and the date and time of a request to
--   delete a hosted zone.
newDeleteHostedZoneResponse :: Int -> ChangeInfo -> DeleteHostedZoneResponse

-- | A request for information about whether a specified geographic
--   location is supported for Amazon Route 53 geolocation resource record
--   sets.
--   
--   <i>See:</i> <a>newGetGeoLocation</a> smart constructor.
data GetGeoLocation
GetGeoLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> GetGeoLocation

-- | Create a value of <a>GetGeoLocation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subdivisionCode:GetGeoLocation'</a>,
--   <a>getGeoLocation_subdivisionCode</a> - The code for the subdivision,
--   such as a particular state within the United States. For a list of US
--   state abbreviations, see <a>Appendix B: Two–Letter State and
--   Possession Abbreviations</a> on the United States Postal Service
--   website. For a list of all supported subdivision codes, use the
--   <a>ListGeoLocations</a> API.
--   
--   <a>$sel:countryCode:GetGeoLocation'</a>,
--   <a>getGeoLocation_countryCode</a> - Amazon Route 53 uses the
--   two-letter country codes that are specified in <a>ISO standard 3166-1
--   alpha-2</a>.
--   
--   <a>$sel:continentCode:GetGeoLocation'</a>,
--   <a>getGeoLocation_continentCode</a> - For geolocation resource record
--   sets, a two-letter abbreviation that identifies a continent. Amazon
--   Route 53 supports the following continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
newGetGeoLocation :: GetGeoLocation

-- | A complex type that contains the response information for the
--   specified geolocation code.
--   
--   <i>See:</i> <a>newGetGeoLocationResponse</a> smart constructor.
data GetGeoLocationResponse
GetGeoLocationResponse' :: Int -> GeoLocationDetails -> GetGeoLocationResponse

-- | Create a value of <a>GetGeoLocationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:GetGeoLocationResponse'</a>,
--   <a>getGeoLocationResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:geoLocationDetails:GetGeoLocationResponse'</a>,
--   <a>getGeoLocationResponse_geoLocationDetails</a> - A complex type that
--   contains the codes and full continent, country, and subdivision names
--   for the specified geolocation code.
newGetGeoLocationResponse :: Int -> GeoLocationDetails -> GetGeoLocationResponse

-- | A complex type that contains information about the health checks or
--   hosted zones for which you want to list tags.
--   
--   <i>See:</i> <a>newListTagsForResources</a> smart constructor.
data ListTagsForResources
ListTagsForResources' :: TagResourceType -> NonEmpty Text -> ListTagsForResources

-- | Create a value of <a>ListTagsForResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceType:ListTagsForResources'</a>,
--   <a>listTagsForResources_resourceType</a> - The type of the resources.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
--   
--   <a>$sel:resourceIds:ListTagsForResources'</a>,
--   <a>listTagsForResources_resourceIds</a> - A complex type that contains
--   the ResourceId element for each resource for which you want to get a
--   list of tags.
newListTagsForResources :: TagResourceType -> NonEmpty Text -> ListTagsForResources

-- | A complex type containing tags for the specified resources.
--   
--   <i>See:</i> <a>newListTagsForResourcesResponse</a> smart constructor.
data ListTagsForResourcesResponse
ListTagsForResourcesResponse' :: Int -> [ResourceTagSet] -> ListTagsForResourcesResponse

-- | Create a value of <a>ListTagsForResourcesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListTagsForResourcesResponse'</a>,
--   <a>listTagsForResourcesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:resourceTagSets:ListTagsForResourcesResponse'</a>,
--   <a>listTagsForResourcesResponse_resourceTagSets</a> - A list of
--   <tt>ResourceTagSet</tt>s containing tags associated with the specified
--   resources.
newListTagsForResourcesResponse :: Int -> ListTagsForResourcesResponse

-- | A complex type that contains information about the traffic policy that
--   you want to create.
--   
--   <i>See:</i> <a>newCreateTrafficPolicy</a> smart constructor.
data CreateTrafficPolicy
CreateTrafficPolicy' :: Maybe Text -> Text -> Text -> CreateTrafficPolicy

-- | Create a value of <a>CreateTrafficPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:CreateTrafficPolicy'</a>,
--   <a>createTrafficPolicy_comment</a> - (Optional) Any comments that you
--   want to include about the traffic policy.
--   
--   <a>$sel:name:CreateTrafficPolicy'</a>, <a>createTrafficPolicy_name</a>
--   - The name of the traffic policy.
--   
--   <a>$sel:document:CreateTrafficPolicy'</a>,
--   <a>createTrafficPolicy_document</a> - The definition of this traffic
--   policy in JSON format. For more information, see <a>Traffic Policy
--   Document Format</a>.
newCreateTrafficPolicy :: Text -> Text -> CreateTrafficPolicy

-- | A complex type that contains the response information for the
--   <tt>CreateTrafficPolicy</tt> request.
--   
--   <i>See:</i> <a>newCreateTrafficPolicyResponse</a> smart constructor.
data CreateTrafficPolicyResponse
CreateTrafficPolicyResponse' :: Int -> TrafficPolicy -> Text -> CreateTrafficPolicyResponse

-- | Create a value of <a>CreateTrafficPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateTrafficPolicyResponse'</a>,
--   <a>createTrafficPolicyResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:trafficPolicy:CreateTrafficPolicyResponse'</a>,
--   <a>createTrafficPolicyResponse_trafficPolicy</a> - A complex type that
--   contains settings for the new traffic policy.
--   
--   <a>$sel:location:CreateTrafficPolicyResponse'</a>,
--   <a>createTrafficPolicyResponse_location</a> - A unique URL that
--   represents a new traffic policy.
newCreateTrafficPolicyResponse :: Int -> TrafficPolicy -> Text -> CreateTrafficPolicyResponse

-- | A request for the traffic policy instances that you created in a
--   specified hosted zone.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstancesByHostedZone</a> smart
--   constructor.
data ListTrafficPolicyInstancesByHostedZone
ListTrafficPolicyInstancesByHostedZone' :: Maybe RRType -> Maybe Text -> Maybe Text -> ResourceId -> ListTrafficPolicyInstancesByHostedZone

-- | Create a value of <a>ListTrafficPolicyInstancesByHostedZone</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZone_trafficPolicyInstanceTypeMarker</a>
--   - If the value of <tt>IsTruncated</tt> in the previous response is
--   true, you have more traffic policy instances. To get more traffic
--   policy instances, submit another <tt>ListTrafficPolicyInstances</tt>
--   request. For the value of <tt>trafficpolicyinstancetype</tt>, specify
--   the value of <tt>TrafficPolicyInstanceTypeMarker</tt> from the
--   previous response, which is the type of the first traffic policy
--   instance in the next group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZone_maxItems</a> - The maximum
--   number of traffic policy instances to be included in the response body
--   for this request. If you have more than <tt>MaxItems</tt> traffic
--   policy instances, the value of the <tt>IsTruncated</tt> element in the
--   response is <tt>true</tt>, and the values of
--   <tt>HostedZoneIdMarker</tt>, <tt>TrafficPolicyInstanceNameMarker</tt>,
--   and <tt>TrafficPolicyInstanceTypeMarker</tt> represent the first
--   traffic policy instance that Amazon Route 53 will return if you submit
--   another request.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZone_trafficPolicyInstanceNameMarker</a>
--   - If the value of <tt>IsTruncated</tt> in the previous response is
--   true, you have more traffic policy instances. To get more traffic
--   policy instances, submit another <tt>ListTrafficPolicyInstances</tt>
--   request. For the value of <tt>trafficpolicyinstancename</tt>, specify
--   the value of <tt>TrafficPolicyInstanceNameMarker</tt> from the
--   previous response, which is the name of the first traffic policy
--   instance in the next group of traffic policy instances.
--   
--   If the value of <tt>IsTruncated</tt> in the previous response was
--   <tt>false</tt>, there are no more traffic policy instances to get.
--   
--   <a>$sel:hostedZoneId:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZone_hostedZoneId</a> - The ID of
--   the hosted zone that you want to list traffic policy instances for.
newListTrafficPolicyInstancesByHostedZone :: ResourceId -> ListTrafficPolicyInstancesByHostedZone

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListTrafficPolicyInstancesByHostedZoneResponse</a>
--   smart constructor.
data ListTrafficPolicyInstancesByHostedZoneResponse
ListTrafficPolicyInstancesByHostedZoneResponse' :: Maybe RRType -> Maybe Text -> Int -> [TrafficPolicyInstance] -> Bool -> Text -> ListTrafficPolicyInstancesByHostedZoneResponse

-- | Create a value of
--   <a>ListTrafficPolicyInstancesByHostedZoneResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:trafficPolicyInstanceTypeMarker:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstanceTypeMarker</a>
--   - If <tt>IsTruncated</tt> is true,
--   <tt>TrafficPolicyInstanceTypeMarker</tt> is the DNS type of the
--   resource record sets that are associated with the first traffic policy
--   instance in the next group of traffic policy instances.
--   
--   
--   <a>$sel:trafficPolicyInstanceNameMarker:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstanceNameMarker</a>
--   - If <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt> is the name of the first
--   traffic policy instance in the next group of traffic policy instances.
--   
--   
--   <a>$sel:httpStatus:ListTrafficPolicyInstancesByHostedZoneResponse'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_httpStatus</a> - The
--   response's http status code.
--   
--   
--   <a>$sel:trafficPolicyInstances:ListTrafficPolicyInstancesByHostedZoneResponse'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_trafficPolicyInstances</a>
--   - A list that contains one <tt>TrafficPolicyInstance</tt> element for
--   each traffic policy instance that matches the elements in the request.
--   
--   
--   <a>$sel:isTruncated:ListTrafficPolicyInstancesByHostedZoneResponse'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_isTruncated</a> - A
--   flag that indicates whether there are more traffic policy instances to
--   be listed. If the response was truncated, you can get the next group
--   of traffic policy instances by submitting another
--   <tt>ListTrafficPolicyInstancesByHostedZone</tt> request and specifying
--   the values of <tt>HostedZoneIdMarker</tt>,
--   <tt>TrafficPolicyInstanceNameMarker</tt>, and
--   <tt>TrafficPolicyInstanceTypeMarker</tt> in the corresponding request
--   parameters.
--   
--   <a>$sel:maxItems:ListTrafficPolicyInstancesByHostedZone'</a>,
--   <a>listTrafficPolicyInstancesByHostedZoneResponse_maxItems</a> - The
--   value that you specified for the <tt>MaxItems</tt> parameter in the
--   <tt>ListTrafficPolicyInstancesByHostedZone</tt> request that produced
--   the current response.
newListTrafficPolicyInstancesByHostedZoneResponse :: Int -> Bool -> Text -> ListTrafficPolicyInstancesByHostedZoneResponse

-- | A complex type that contains the information about the request to list
--   the traffic policies that are associated with the current Amazon Web
--   Services account.
--   
--   <i>See:</i> <a>newListTrafficPolicies</a> smart constructor.
data ListTrafficPolicies
ListTrafficPolicies' :: Maybe Text -> Maybe Text -> ListTrafficPolicies

-- | Create a value of <a>ListTrafficPolicies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:trafficPolicyIdMarker:ListTrafficPolicies'</a>,
--   <a>listTrafficPolicies_trafficPolicyIdMarker</a> - (Conditional) For
--   your first request to <tt>ListTrafficPolicies</tt>, don't include the
--   <tt>TrafficPolicyIdMarker</tt> parameter.
--   
--   If you have more traffic policies than the value of <tt>MaxItems</tt>,
--   <tt>ListTrafficPolicies</tt> returns only the first <tt>MaxItems</tt>
--   traffic policies. To get the next group of policies, submit another
--   request to <tt>ListTrafficPolicies</tt>. For the value of
--   <tt>TrafficPolicyIdMarker</tt>, specify the value of
--   <tt>TrafficPolicyIdMarker</tt> that was returned in the previous
--   response.
--   
--   <a>$sel:maxItems:ListTrafficPolicies'</a>,
--   <a>listTrafficPolicies_maxItems</a> - (Optional) The maximum number of
--   traffic policies that you want Amazon Route 53 to return in response
--   to this request. If you have more than <tt>MaxItems</tt> traffic
--   policies, the value of <tt>IsTruncated</tt> in the response is
--   <tt>true</tt>, and the value of <tt>TrafficPolicyIdMarker</tt> is the
--   ID of the first traffic policy that Route 53 will return if you submit
--   another request.
newListTrafficPolicies :: ListTrafficPolicies

-- | A complex type that contains the response information for the request.
--   
--   <i>See:</i> <a>newListTrafficPoliciesResponse</a> smart constructor.
data ListTrafficPoliciesResponse
ListTrafficPoliciesResponse' :: Int -> [TrafficPolicySummary] -> Bool -> Text -> Text -> ListTrafficPoliciesResponse

-- | Create a value of <a>ListTrafficPoliciesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListTrafficPoliciesResponse'</a>,
--   <a>listTrafficPoliciesResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:trafficPolicySummaries:ListTrafficPoliciesResponse'</a>,
--   <a>listTrafficPoliciesResponse_trafficPolicySummaries</a> - A list
--   that contains one <tt>TrafficPolicySummary</tt> element for each
--   traffic policy that was created by the current Amazon Web Services
--   account.
--   
--   <a>$sel:isTruncated:ListTrafficPoliciesResponse'</a>,
--   <a>listTrafficPoliciesResponse_isTruncated</a> - A flag that indicates
--   whether there are more traffic policies to be listed. If the response
--   was truncated, you can get the next group of traffic policies by
--   submitting another <tt>ListTrafficPolicies</tt> request and specifying
--   the value of <tt>TrafficPolicyIdMarker</tt> in the
--   <tt>TrafficPolicyIdMarker</tt> request parameter.
--   
--   <a>$sel:trafficPolicyIdMarker:ListTrafficPolicies'</a>,
--   <a>listTrafficPoliciesResponse_trafficPolicyIdMarker</a> - If the
--   value of <tt>IsTruncated</tt> is <tt>true</tt>,
--   <tt>TrafficPolicyIdMarker</tt> is the ID of the first traffic policy
--   in the next group of <tt>MaxItems</tt> traffic policies.
--   
--   <a>$sel:maxItems:ListTrafficPolicies'</a>,
--   <a>listTrafficPoliciesResponse_maxItems</a> - The value that you
--   specified for the <tt>MaxItems</tt> parameter in the
--   <tt>ListTrafficPolicies</tt> request that produced the current
--   response.
newListTrafficPoliciesResponse :: Int -> Bool -> Text -> Text -> ListTrafficPoliciesResponse
newtype AccountLimitType
AccountLimitType' :: Text -> AccountLimitType
[fromAccountLimitType] :: AccountLimitType -> Text
pattern AccountLimitType_MAX_HEALTH_CHECKS_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_HOSTED_ZONES_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_REUSABLE_DELEGATION_SETS_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_TRAFFIC_POLICIES_BY_OWNER :: AccountLimitType
pattern AccountLimitType_MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER :: AccountLimitType
newtype ChangeAction
ChangeAction' :: Text -> ChangeAction
[fromChangeAction] :: ChangeAction -> Text
pattern ChangeAction_CREATE :: ChangeAction
pattern ChangeAction_DELETE :: ChangeAction
pattern ChangeAction_UPSERT :: ChangeAction
newtype ChangeStatus
ChangeStatus' :: Text -> ChangeStatus
[fromChangeStatus] :: ChangeStatus -> Text
pattern ChangeStatus_INSYNC :: ChangeStatus
pattern ChangeStatus_PENDING :: ChangeStatus
newtype CloudWatchRegion
CloudWatchRegion' :: Text -> CloudWatchRegion
[fromCloudWatchRegion] :: CloudWatchRegion -> Text
pattern CloudWatchRegion_Af_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_northeast_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_northeast_2 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_northeast_3 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_southeast_1 :: CloudWatchRegion
pattern CloudWatchRegion_Ap_southeast_2 :: CloudWatchRegion
pattern CloudWatchRegion_Ca_central_1 :: CloudWatchRegion
pattern CloudWatchRegion_Cn_north_1 :: CloudWatchRegion
pattern CloudWatchRegion_Cn_northwest_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_central_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_north_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_west_1 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_west_2 :: CloudWatchRegion
pattern CloudWatchRegion_Eu_west_3 :: CloudWatchRegion
pattern CloudWatchRegion_Me_south_1 :: CloudWatchRegion
pattern CloudWatchRegion_Sa_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_east_2 :: CloudWatchRegion
pattern CloudWatchRegion_Us_gov_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_gov_west_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_iso_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_isob_east_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_west_1 :: CloudWatchRegion
pattern CloudWatchRegion_Us_west_2 :: CloudWatchRegion
newtype ComparisonOperator
ComparisonOperator' :: Text -> ComparisonOperator
[fromComparisonOperator] :: ComparisonOperator -> Text
pattern ComparisonOperator_GreaterThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_GreaterThanThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanOrEqualToThreshold :: ComparisonOperator
pattern ComparisonOperator_LessThanThreshold :: ComparisonOperator
newtype HealthCheckRegion
HealthCheckRegion' :: Text -> HealthCheckRegion
[fromHealthCheckRegion] :: HealthCheckRegion -> Text
pattern HealthCheckRegion_Ap_northeast_1 :: HealthCheckRegion
pattern HealthCheckRegion_Ap_southeast_1 :: HealthCheckRegion
pattern HealthCheckRegion_Ap_southeast_2 :: HealthCheckRegion
pattern HealthCheckRegion_Eu_west_1 :: HealthCheckRegion
pattern HealthCheckRegion_Sa_east_1 :: HealthCheckRegion
pattern HealthCheckRegion_Us_east_1 :: HealthCheckRegion
pattern HealthCheckRegion_Us_west_1 :: HealthCheckRegion
pattern HealthCheckRegion_Us_west_2 :: HealthCheckRegion
newtype HealthCheckType
HealthCheckType' :: Text -> HealthCheckType
[fromHealthCheckType] :: HealthCheckType -> Text
pattern HealthCheckType_CALCULATED :: HealthCheckType
pattern HealthCheckType_CLOUDWATCH_METRIC :: HealthCheckType
pattern HealthCheckType_HTTP :: HealthCheckType
pattern HealthCheckType_HTTPS :: HealthCheckType
pattern HealthCheckType_HTTPS_STR_MATCH :: HealthCheckType
pattern HealthCheckType_HTTP_STR_MATCH :: HealthCheckType
pattern HealthCheckType_RECOVERY_CONTROL :: HealthCheckType
pattern HealthCheckType_TCP :: HealthCheckType
newtype HostedZoneLimitType
HostedZoneLimitType' :: Text -> HostedZoneLimitType
[fromHostedZoneLimitType] :: HostedZoneLimitType -> Text
pattern HostedZoneLimitType_MAX_RRSETS_BY_ZONE :: HostedZoneLimitType
pattern HostedZoneLimitType_MAX_VPCS_ASSOCIATED_BY_ZONE :: HostedZoneLimitType
newtype InsufficientDataHealthStatus
InsufficientDataHealthStatus' :: Text -> InsufficientDataHealthStatus
[fromInsufficientDataHealthStatus] :: InsufficientDataHealthStatus -> Text
pattern InsufficientDataHealthStatus_Healthy :: InsufficientDataHealthStatus
pattern InsufficientDataHealthStatus_LastKnownStatus :: InsufficientDataHealthStatus
pattern InsufficientDataHealthStatus_Unhealthy :: InsufficientDataHealthStatus
newtype RRType
RRType' :: Text -> RRType
[fromRRType] :: RRType -> Text
pattern RRType_A :: RRType
pattern RRType_AAAA :: RRType
pattern RRType_CAA :: RRType
pattern RRType_CNAME :: RRType
pattern RRType_DS :: RRType
pattern RRType_MX :: RRType
pattern RRType_NAPTR :: RRType
pattern RRType_NS :: RRType
pattern RRType_PTR :: RRType
pattern RRType_SOA :: RRType
pattern RRType_SPF :: RRType
pattern RRType_SRV :: RRType
pattern RRType_TXT :: RRType
newtype ResettableElementName
ResettableElementName' :: Text -> ResettableElementName
[fromResettableElementName] :: ResettableElementName -> Text
pattern ResettableElementName_ChildHealthChecks :: ResettableElementName
pattern ResettableElementName_FullyQualifiedDomainName :: ResettableElementName
pattern ResettableElementName_Regions :: ResettableElementName
pattern ResettableElementName_ResourcePath :: ResettableElementName
newtype ResourceRecordSetFailover
ResourceRecordSetFailover' :: Text -> ResourceRecordSetFailover
[fromResourceRecordSetFailover] :: ResourceRecordSetFailover -> Text
pattern ResourceRecordSetFailover_PRIMARY :: ResourceRecordSetFailover
pattern ResourceRecordSetFailover_SECONDARY :: ResourceRecordSetFailover
newtype ReusableDelegationSetLimitType
ReusableDelegationSetLimitType' :: Text -> ReusableDelegationSetLimitType
[fromReusableDelegationSetLimitType] :: ReusableDelegationSetLimitType -> Text
pattern ReusableDelegationSetLimitType_MAX_ZONES_BY_REUSABLE_DELEGATION_SET :: ReusableDelegationSetLimitType
newtype Statistic
Statistic' :: Text -> Statistic
[fromStatistic] :: Statistic -> Text
pattern Statistic_Average :: Statistic
pattern Statistic_Maximum :: Statistic
pattern Statistic_Minimum :: Statistic
pattern Statistic_SampleCount :: Statistic
pattern Statistic_Sum :: Statistic
newtype TagResourceType
TagResourceType' :: Text -> TagResourceType
[fromTagResourceType] :: TagResourceType -> Text
pattern TagResourceType_Healthcheck :: TagResourceType
pattern TagResourceType_Hostedzone :: TagResourceType
newtype VPCRegion
VPCRegion' :: Text -> VPCRegion
[fromVPCRegion] :: VPCRegion -> Text
pattern VPCRegion_Af_south_1 :: VPCRegion
pattern VPCRegion_Ap_east_1 :: VPCRegion
pattern VPCRegion_Ap_northeast_1 :: VPCRegion
pattern VPCRegion_Ap_northeast_2 :: VPCRegion
pattern VPCRegion_Ap_northeast_3 :: VPCRegion
pattern VPCRegion_Ap_south_1 :: VPCRegion
pattern VPCRegion_Ap_southeast_1 :: VPCRegion
pattern VPCRegion_Ap_southeast_2 :: VPCRegion
pattern VPCRegion_Ca_central_1 :: VPCRegion
pattern VPCRegion_Cn_north_1 :: VPCRegion
pattern VPCRegion_Eu_central_1 :: VPCRegion
pattern VPCRegion_Eu_north_1 :: VPCRegion
pattern VPCRegion_Eu_south_1 :: VPCRegion
pattern VPCRegion_Eu_west_1 :: VPCRegion
pattern VPCRegion_Eu_west_2 :: VPCRegion
pattern VPCRegion_Eu_west_3 :: VPCRegion
pattern VPCRegion_Me_south_1 :: VPCRegion
pattern VPCRegion_Sa_east_1 :: VPCRegion
pattern VPCRegion_Us_east_1 :: VPCRegion
pattern VPCRegion_Us_east_2 :: VPCRegion
pattern VPCRegion_Us_gov_east_1 :: VPCRegion
pattern VPCRegion_Us_gov_west_1 :: VPCRegion
pattern VPCRegion_Us_iso_east_1 :: VPCRegion
pattern VPCRegion_Us_isob_east_1 :: VPCRegion
pattern VPCRegion_Us_west_1 :: VPCRegion
pattern VPCRegion_Us_west_2 :: VPCRegion

-- | A complex type that contains the type of limit that you specified in
--   the request and the current value for that limit.
--   
--   <i>See:</i> <a>newAccountLimit</a> smart constructor.
data AccountLimit
AccountLimit' :: AccountLimitType -> Natural -> AccountLimit

-- | Create a value of <a>AccountLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':AccountLimit'</a>, <a>accountLimit_type</a> - The limit
--   that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_HEALTH_CHECKS_BY_OWNER</b>: The maximum number of health
--   checks that you can create using the current account.</li>
--   <li><b>MAX_HOSTED_ZONES_BY_OWNER</b>: The maximum number of hosted
--   zones that you can create using the current account.</li>
--   <li><b>MAX_REUSABLE_DELEGATION_SETS_BY_OWNER</b>: The maximum number
--   of reusable delegation sets that you can create using the current
--   account.</li>
--   <li><b>MAX_TRAFFIC_POLICIES_BY_OWNER</b>: The maximum number of
--   traffic policies that you can create using the current account.</li>
--   <li><b>MAX_TRAFFIC_POLICY_INSTANCES_BY_OWNER</b>: The maximum number
--   of traffic policy instances that you can create using the current
--   account. (Traffic policy instances are referred to as traffic flow
--   policy records in the Amazon Route 53 console.)</li>
--   </ul>
--   
--   <a>$sel:value:AccountLimit'</a>, <a>accountLimit_value</a> - The
--   current value for the limit that is specified by <a>Type</a>.
newAccountLimit :: AccountLimitType -> Natural -> AccountLimit

-- | A complex type that identifies the CloudWatch alarm that you want
--   Amazon Route 53 health checkers to use to determine whether the
--   specified health check is healthy.
--   
--   <i>See:</i> <a>newAlarmIdentifier</a> smart constructor.
data AlarmIdentifier
AlarmIdentifier' :: CloudWatchRegion -> Text -> AlarmIdentifier

-- | Create a value of <a>AlarmIdentifier</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:region:AlarmIdentifier'</a>, <a>alarmIdentifier_region</a> -
--   For the CloudWatch alarm that you want Route 53 health checkers to use
--   to determine whether this health check is healthy, the region that the
--   alarm was created in.
--   
--   For the current list of CloudWatch regions, see <a>Amazon CloudWatch
--   endpoints and quotas</a> in the <i>Amazon Web Services General
--   Reference</i>.
--   
--   <a>$sel:name:AlarmIdentifier'</a>, <a>alarmIdentifier_name</a> - The
--   name of the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether this health check is healthy.
--   
--   Route 53 supports CloudWatch alarms with the following features:
--   
--   <ul>
--   <li>Standard-resolution metrics. High-resolution metrics aren't
--   supported. For more information, see <a>High-Resolution Metrics</a> in
--   the <i>Amazon CloudWatch User Guide</i>.</li>
--   <li>Statistics: Average, Minimum, Maximum, Sum, and SampleCount.
--   Extended statistics aren't supported.</li>
--   </ul>
newAlarmIdentifier :: CloudWatchRegion -> Text -> AlarmIdentifier

-- | <i>Alias resource record sets only:</i> Information about the Amazon
--   Web Services resource, such as a CloudFront distribution or an Amazon
--   S3 bucket, that you want to route traffic to.
--   
--   When creating resource record sets for a private hosted zone, note the
--   following:
--   
--   <ul>
--   <li>Creating geolocation alias resource record sets or latency alias
--   resource record sets in a private hosted zone is unsupported.</li>
--   <li>For information about creating failover resource record sets in a
--   private hosted zone, see <a>Configuring Failover in a Private Hosted
--   Zone</a>.</li>
--   </ul>
--   
--   <i>See:</i> <a>newAliasTarget</a> smart constructor.
data AliasTarget
AliasTarget' :: ResourceId -> Text -> Bool -> AliasTarget

-- | Create a value of <a>AliasTarget</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:AliasTarget'</a>, <a>aliasTarget_hostedZoneId</a>
--   - <i>Alias resource records sets only</i>: The value used depends on
--   where you want to route traffic:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the hosted zone ID for your API. You can get the
--   applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalHostedZoneId</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionHostedZoneId</tt>.</li></ul></li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Specify
--   the hosted zone ID for your interface endpoint. You can get the value
--   of <tt>HostedZoneId</tt> using the CLI command
--   <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify
--   <tt>Z2FDTNDATAQYW2</tt>.Alias resource record sets for CloudFront
--   can't be created in a private zone.</li>
--   <li><i>Elastic Beanstalk environment</i> Specify the hosted zone ID
--   for the region that you created the environment in. The environment
--   must have a regionalized subdomain. For a list of regions and the
--   corresponding hosted zone IDs, see <a>Elastic Beanstalk endpoints and
--   quotas</a> in the the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>ELB load balancer</i> Specify the value of the hosted zone ID
--   for the load balancer. Use the following methods to get the hosted
--   zone ID:<ul><li><a>Elastic Load Balancing endpoints and quotas</a>
--   topic in the <i>Amazon Web Services General Reference</i>: Use the
--   value that corresponds with the region that you created your load
--   balancer in. Note that there are separate columns for Application and
--   Classic Load Balancers and for Network Load
--   Balancers.</li><li><b>Amazon Web Services Management Console</b>: Go
--   to the Amazon EC2 page, choose <b>Load Balancers</b> in the navigation
--   pane, select the load balancer, and get the value of the <b>Hosted
--   zone</b> field on the <b>Description</b> tab.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the
--   applicable value. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers: Use <a>DescribeLoadBalancers</a>
--   to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>DescribeLoadBalancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li><li><b>CLI</b>: Use
--   <tt>describe-load-balancers</tt> to get the applicable value. For more
--   information, see the applicable guide:<ul><li>Classic Load Balancers:
--   Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneNameId</tt>.</li><li>Application and Network
--   Load Balancers: Use <a>describe-load-balancers</a> to get the value of
--   <tt>CanonicalHostedZoneId</tt>.</li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify
--   <tt>Z2BJ6XQ5FK7U4H</tt>.</li>
--   <li><i>An Amazon S3 bucket configured as a static website</i> Specify
--   the hosted zone ID for the region that you created the bucket in. For
--   more information about valid values, see the table <a>Amazon S3
--   Website Endpoints</a> in the <i>Amazon Web Services General
--   Reference</i>.</li>
--   <li><i>Another Route 53 resource record set in your hosted zone</i>
--   Specify the hosted zone ID of your hosted zone. (An alias resource
--   record set can't reference a resource record set in a different hosted
--   zone.)</li>
--   </ul>
--   
--   <a>$sel:dNSName:AliasTarget'</a>, <a>aliasTarget_dNSName</a> -
--   <i>Alias resource record sets only:</i> The value that you specify
--   depends on where you want to route queries:
--   
--   <ul>
--   <li><i>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs</i> Specify the applicable domain name for your API. You can get
--   the applicable value using the CLI command
--   <a>get-domain-names</a>:<ul><li>For regional APIs, specify the value
--   of <tt>regionalDomainName</tt>.</li><li>For edge-optimized APIs,
--   specify the value of <tt>distributionDomainName</tt>. This is the name
--   of the associated CloudFront distribution, such as
--   <tt>da1b2c3d4e5.cloudfront.net</tt>.</li></ul>The name of the record
--   that you're creating must match a custom domain name for your API,
--   such as <tt>api.example.com</tt>.</li>
--   <li><i>Amazon Virtual Private Cloud interface VPC endpoint</i> Enter
--   the API endpoint for the interface endpoint, such as
--   <tt>vpce-123456789abcdef01-example-us-east-1a.elasticloadbalancing.us-east-1.vpce.amazonaws.com</tt>.
--   For edge-optimized APIs, this is the domain name for the corresponding
--   CloudFront distribution. You can get the value of <tt>DnsName</tt>
--   using the CLI command <a>describe-vpc-endpoints</a>.</li>
--   <li><i>CloudFront distribution</i> Specify the domain name that
--   CloudFront assigned when you created your distribution.Your CloudFront
--   distribution must include an alternate domain name that matches the
--   name of the resource record set. For example, if the name of the
--   resource record set is <i>acme.example.com</i>, your CloudFront
--   distribution must include <i>acme.example.com</i> as one of the
--   alternate domain names. For more information, see <a>Using Alternate
--   Domain Names (CNAMEs)</a> in the <i>Amazon CloudFront Developer
--   Guide</i>.You can't create a resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.For failover alias
--   records, you can't specify a CloudFront distribution for both the
--   primary and secondary records. A distribution must include an
--   alternate domain name that matches the name of the record. However,
--   the primary and secondary records have the same name, and you can't
--   include the same alternate domain name in more than one
--   distribution.</li>
--   <li><i>Elastic Beanstalk environment</i> If the domain name for your
--   Elastic Beanstalk environment includes the region that you deployed
--   the environment in, you can create an alias record that routes traffic
--   to the environment. For example, the domain name
--   <tt>my-environment.us-west-2.elasticbeanstalk.com</tt> is a
--   regionalized domain name.For environments that were created before
--   early 2016, the domain name doesn't include the region. To route
--   traffic to these environments, you must create a CNAME record instead
--   of an alias record. Note that you can't create a CNAME record for the
--   root domain name. For example, if your domain name is example.com, you
--   can create a record that routes traffic for acme.example.com to your
--   Elastic Beanstalk environment, but you can't create a record that
--   routes traffic for example.com to your Elastic Beanstalk
--   environment.For Elastic Beanstalk environments that have regionalized
--   subdomains, specify the <tt>CNAME</tt> attribute for the environment.
--   You can use the following methods to get the value of the CNAME
--   attribute:<ul><li><i>Amazon Web Services Management Console</i>: For
--   information about how to get the value by using the console, see
--   <a>Using Custom Domains with Elastic Beanstalk</a> in the <i>Elastic
--   Beanstalk Developer Guide</i>.</li><li><i>Elastic Beanstalk API</i>:
--   Use the <tt>DescribeEnvironments</tt> action to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>DescribeEnvironments</a> in the <i>Elastic Beanstalk API
--   Reference</i>.</li><li><i>CLI</i>: Use the
--   <tt>describe-environments</tt> command to get the value of the
--   <tt>CNAME</tt> attribute. For more information, see
--   <a>describe-environments</a> in the <i>CLI Command
--   Reference</i>.</li></ul></li>
--   <li><i>ELB load balancer</i> Specify the DNS name that is associated
--   with the load balancer. Get the DNS name by using the Amazon Web
--   Services Management Console, the ELB API, or the CLI.<ul><li><b>Amazon
--   Web Services Management Console</b>: Go to the EC2 page, choose
--   <b>Load Balancers</b> in the navigation pane, choose the load
--   balancer, choose the <b>Description</b> tab, and get the value of the
--   <b>DNS name</b> field.If you're routing traffic to a Classic Load
--   Balancer, get the value that begins with <b>dualstack</b>. If you're
--   routing traffic to another type of load balancer, get the value that
--   applies to the record type, A or AAAA.</li><li><b>Elastic Load
--   Balancing API</b>: Use <tt>DescribeLoadBalancers</tt> to get the value
--   of <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>DescribeLoadBalancers</a></li><li>Application and Network Load
--   Balancers: <a>DescribeLoadBalancers</a></li></ul></li><li><b>CLI</b>:
--   Use <tt>describe-load-balancers</tt> to get the value of
--   <tt>DNSName</tt>. For more information, see the applicable
--   guide:<ul><li>Classic Load Balancers:
--   <a>describe-load-balancers</a></li><li>Application and Network Load
--   Balancers: <a>describe-load-balancers</a></li></ul></li></ul></li>
--   <li><i>Global Accelerator accelerator</i> Specify the DNS name for
--   your accelerator:<ul><li><b>Global Accelerator API:</b> To get the DNS
--   name, use <a>DescribeAccelerator</a>.</li><li><b>CLI:</b> To get the
--   DNS name, use <a>describe-accelerator</a>.</li></ul></li>
--   <li><i>Amazon S3 bucket that is configured as a static website</i>
--   Specify the domain name of the Amazon S3 website endpoint that you
--   created the bucket in, for example,
--   <tt>s3-website.us-east-2.amazonaws.com</tt>. For more information
--   about valid values, see the table <a>Amazon S3 Website Endpoints</a>
--   in the <i>Amazon Web Services General Reference</i>. For more
--   information about using S3 buckets for websites, see <a>Getting
--   Started with Amazon Route 53</a> in the <i>Amazon Route 53 Developer
--   Guide.</i></li>
--   <li><i>Another Route 53 resource record set</i> Specify the value of
--   the <tt>Name</tt> element for a resource record set in the current
--   hosted zone.If you're creating an alias record that has the same name
--   as the hosted zone (known as the zone apex), you can't specify the
--   domain name for a record for which the value of <tt>Type</tt> is
--   <tt>CNAME</tt>. This is because the alias record must have the same
--   type as the record that you're routing traffic to, and creating a
--   CNAME record for the zone apex isn't supported even for an alias
--   record.</li>
--   </ul>
--   
--   <a>$sel:evaluateTargetHealth:AliasTarget'</a>,
--   <a>aliasTarget_evaluateTargetHealth</a> - /Applies only to alias,
--   failover alias, geolocation alias, latency alias, and weighted alias
--   resource record sets:/ When <tt>EvaluateTargetHealth</tt> is
--   <tt>true</tt>, an alias resource record set inherits the health of the
--   referenced Amazon Web Services resource, such as an ELB load balancer
--   or another resource record set in the hosted zone.
--   
--   Note the following:
--   
--   <ul>
--   <li><i>CloudFront distributions</i> You can't set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is a CloudFront distribution.</li>
--   <li><i>Elastic Beanstalk environments that have regionalized
--   subdomains</i> If you specify an Elastic Beanstalk environment in
--   <tt>DNSName</tt> and the environment contains an ELB load balancer,
--   Elastic Load Balancing routes queries only to the healthy Amazon EC2
--   instances that are registered with the load balancer. (An environment
--   automatically contains an ELB load balancer if it includes more than
--   one Amazon EC2 instance.) If you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt> and either no Amazon EC2 instances are healthy or the
--   load balancer itself is unhealthy, Route 53 routes queries to other
--   available resources that are healthy, if any.If the environment
--   contains a single Amazon EC2 instance, there are no special
--   requirements.</li>
--   <li><i>ELB load balancers</i> Health checking behavior depends on the
--   type of load balancer:<ul><li><b>Classic Load Balancers</b>: If you
--   specify an ELB Classic Load Balancer in <tt>DNSName</tt>, Elastic Load
--   Balancing routes queries only to the healthy Amazon EC2 instances that
--   are registered with the load balancer. If you set
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> and either no EC2
--   instances are healthy or the load balancer itself is unhealthy, Route
--   53 routes queries to other resources.</li><li><b>Application and
--   Network Load Balancers</b>: If you specify an ELB Application or
--   Network Load Balancer and you set <tt>EvaluateTargetHealth</tt> to
--   <tt>true</tt>, Route 53 routes queries to the load balancer based on
--   the health of the target groups that are associated with the load
--   balancer:<ul><li>For an Application or Network Load Balancer to be
--   considered healthy, every target group that contains targets must
--   contain at least one healthy target. If any target group contains only
--   unhealthy targets, the load balancer is considered unhealthy, and
--   Route 53 routes queries to other resources.</li><li>A target group
--   that has no registered targets is considered
--   unhealthy.</li></ul></li></ul>When you create a load balancer, you
--   configure settings for Elastic Load Balancing health checks; they're
--   not Route 53 health checks, but they perform a similar function. Do
--   not create Route 53 health checks for the EC2 instances that you
--   register with an ELB load balancer.</li>
--   <li><i>S3 buckets</i> There are no special requirements for setting
--   <tt>EvaluateTargetHealth</tt> to <tt>true</tt> when the alias target
--   is an S3 bucket.</li>
--   <li><i>Other records in the same hosted zone</i> If the Amazon Web
--   Services resource that you specify in <tt>DNSName</tt> is a record or
--   a group of records (for example, a group of weighted records) but is
--   not another alias record, we recommend that you associate a health
--   check with all of the records in the alias target. For more
--   information, see <a>What Happens When You Omit Health Checks?</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   For more information and examples, see <a>Amazon Route 53 Health
--   Checks and DNS Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.
newAliasTarget :: ResourceId -> Text -> Bool -> AliasTarget

-- | The information for each resource record set that you want to change.
--   
--   <i>See:</i> <a>newChange</a> smart constructor.
data Change
Change' :: ChangeAction -> ResourceRecordSet -> Change

-- | Create a value of <a>Change</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:action:Change'</a>, <a>change_action</a> - The action to
--   perform:
--   
--   <ul>
--   <li><tt>CREATE</tt>: Creates a resource record set that has the
--   specified values.</li>
--   <li><tt>DELETE</tt>: Deletes a existing resource record set.To delete
--   the resource record set that is associated with a traffic policy
--   instance, use <a>DeleteTrafficPolicyInstance</a>. Amazon Route 53 will
--   delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.</li>
--   <li><tt>UPSERT</tt>: If a resource record set doesn't already exist,
--   Route 53 creates it. If a resource record set does exist, Route 53
--   updates it with the values in the request.</li>
--   </ul>
--   
--   <a>$sel:resourceRecordSet:Change'</a>, <a>change_resourceRecordSet</a>
--   - Information about the resource record set to create, delete, or
--   update.
newChange :: ChangeAction -> ResourceRecordSet -> Change

-- | The information for a change request.
--   
--   <i>See:</i> <a>newChangeBatch</a> smart constructor.
data ChangeBatch
ChangeBatch' :: Maybe Text -> NonEmpty Change -> ChangeBatch

-- | Create a value of <a>ChangeBatch</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:ChangeBatch'</a>, <a>changeBatch_comment</a> -
--   <i>Optional:</i> Any comments you want to include about a change batch
--   request.
--   
--   <a>$sel:changes:ChangeBatch'</a>, <a>changeBatch_changes</a> -
--   Information about the changes to make to the record sets.
newChangeBatch :: NonEmpty Change -> ChangeBatch

-- | A complex type that describes change information about changes made to
--   your hosted zone.
--   
--   <i>See:</i> <a>newChangeInfo</a> smart constructor.
data ChangeInfo
ChangeInfo' :: Maybe Text -> ResourceId -> ChangeStatus -> ISO8601 -> ChangeInfo

-- | Create a value of <a>ChangeInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:ChangeInfo'</a>, <a>changeInfo_comment</a> - A comment
--   you can provide.
--   
--   <a>$sel:id:ChangeInfo'</a>, <a>changeInfo_id</a> - This element
--   contains an ID that you use when performing a <a>GetChange</a> action
--   to get detailed information about the change.
--   
--   <a>$sel:status:ChangeInfo'</a>, <a>changeInfo_status</a> - The current
--   state of the request. <tt>PENDING</tt> indicates that this request has
--   not yet been applied to all Amazon Route 53 DNS servers.
--   
--   <a>$sel:submittedAt:ChangeInfo'</a>, <a>changeInfo_submittedAt</a> -
--   The date and time that the change request was submitted in <a>ISO 8601
--   format</a> and Coordinated Universal Time (UTC). For example, the
--   value <tt>2017-03-27T17:48:16.751Z</tt> represents March 27, 2017 at
--   17:48:16.751 UTC.
newChangeInfo :: ResourceId -> ChangeStatus -> UTCTime -> ChangeInfo

-- | A complex type that contains information about the CloudWatch alarm
--   that Amazon Route 53 is monitoring for this health check.
--   
--   <i>See:</i> <a>newCloudWatchAlarmConfiguration</a> smart constructor.
data CloudWatchAlarmConfiguration
CloudWatchAlarmConfiguration' :: Maybe [Dimension] -> Natural -> Double -> ComparisonOperator -> Natural -> Text -> Text -> Statistic -> CloudWatchAlarmConfiguration

-- | Create a value of <a>CloudWatchAlarmConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dimensions:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_dimensions</a> - For the metric that
--   the CloudWatch alarm is associated with, a complex type that contains
--   information about the dimensions for the metric. For information, see
--   <a>Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a>
--   in the <i>Amazon CloudWatch User Guide</i>.
--   
--   <a>$sel:evaluationPeriods:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_evaluationPeriods</a> - For the metric
--   that the CloudWatch alarm is associated with, the number of periods
--   that the metric is compared to the threshold.
--   
--   <a>$sel:threshold:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_threshold</a> - For the metric that
--   the CloudWatch alarm is associated with, the value the metric is
--   compared with.
--   
--   <a>$sel:comparisonOperator:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_comparisonOperator</a> - For the
--   metric that the CloudWatch alarm is associated with, the arithmetic
--   operation that is used for the comparison.
--   
--   <a>$sel:period:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_period</a> - For the metric that the
--   CloudWatch alarm is associated with, the duration of one evaluation
--   period in seconds.
--   
--   <a>$sel:metricName:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_metricName</a> - The name of the
--   CloudWatch metric that the alarm is associated with.
--   
--   <a>$sel:namespace:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_namespace</a> - The namespace of the
--   metric that the alarm is associated with. For more information, see
--   <a>Amazon CloudWatch Namespaces, Dimensions, and Metrics Reference</a>
--   in the <i>Amazon CloudWatch User Guide</i>.
--   
--   <a>$sel:statistic:CloudWatchAlarmConfiguration'</a>,
--   <a>cloudWatchAlarmConfiguration_statistic</a> - For the metric that
--   the CloudWatch alarm is associated with, the statistic that is applied
--   to the metric.
newCloudWatchAlarmConfiguration :: Natural -> Double -> ComparisonOperator -> Natural -> Text -> Text -> Statistic -> CloudWatchAlarmConfiguration

-- | A string repesenting the status of DNSSEC signing.
--   
--   <i>See:</i> <a>newDNSSECStatus</a> smart constructor.
data DNSSECStatus
DNSSECStatus' :: Maybe Text -> Maybe Text -> DNSSECStatus

-- | Create a value of <a>DNSSECStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serveSignature:DNSSECStatus'</a>,
--   <a>dNSSECStatus_serveSignature</a> - A string that represents the
--   current hosted zone signing status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>SIGNING</i> DNSSEC signing is enabled for the hosted zone.</li>
--   <li><i>NOT_SIGNING</i> DNSSEC signing is not enabled for the hosted
--   zone.</li>
--   <li><i>DELETING</i> DNSSEC signing is in the process of being removed
--   for the hosted zone.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with signing in the hosted
--   zone that requires you to take action to resolve. For example, the
--   customer managed customer master key (CMK) might have been deleted, or
--   the permissions for the customer managed CMK might have been
--   changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including with
--   key-signing keys (KSKs), you must correct the problem by enabling or
--   disabling DNSSEC signing for the hosted zone.</li>
--   </ul>
--   
--   <a>$sel:statusMessage:DNSSECStatus'</a>,
--   <a>dNSSECStatus_statusMessage</a> - The status message provided for
--   the following DNSSEC signing status: <tt>INTERNAL_FAILURE</tt>. The
--   status message includes information about what the problem might be
--   and steps that you can take to correct the issue.
newDNSSECStatus :: DNSSECStatus

-- | A complex type that lists the name servers in a delegation set, as
--   well as the <tt>CallerReference</tt> and the <tt>ID</tt> for the
--   delegation set.
--   
--   <i>See:</i> <a>newDelegationSet</a> smart constructor.
data DelegationSet
DelegationSet' :: Maybe ResourceId -> Maybe Text -> NonEmpty Text -> DelegationSet

-- | Create a value of <a>DelegationSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:DelegationSet'</a>, <a>delegationSet_id</a> - The ID that
--   Amazon Route 53 assigns to a reusable delegation set.
--   
--   <a>$sel:callerReference:DelegationSet'</a>,
--   <a>delegationSet_callerReference</a> - The value that you specified
--   for <tt>CallerReference</tt> when you created the reusable delegation
--   set.
--   
--   <a>$sel:nameServers:DelegationSet'</a>,
--   <a>delegationSet_nameServers</a> - A complex type that contains a list
--   of the authoritative name servers for a hosted zone or for a reusable
--   delegation set.
newDelegationSet :: NonEmpty Text -> DelegationSet

-- | For the metric that the CloudWatch alarm is associated with, a complex
--   type that contains information about one dimension.
--   
--   <i>See:</i> <a>newDimension</a> smart constructor.
data Dimension
Dimension' :: Text -> Text -> Dimension

-- | Create a value of <a>Dimension</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Dimension'</a>, <a>dimension_name</a> - For the metric
--   that the CloudWatch alarm is associated with, the name of one
--   dimension.
--   
--   <a>$sel:value:Dimension'</a>, <a>dimension_value</a> - For the metric
--   that the CloudWatch alarm is associated with, the value of one
--   dimension.
newDimension :: Text -> Text -> Dimension

-- | A complex type that contains information about a geographic location.
--   
--   <i>See:</i> <a>newGeoLocation</a> smart constructor.
data GeoLocation
GeoLocation' :: Maybe Text -> Maybe Text -> Maybe Text -> GeoLocation

-- | Create a value of <a>GeoLocation</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subdivisionCode:GeoLocation'</a>,
--   <a>geoLocation_subdivisionCode</a> - For geolocation resource record
--   sets, the two-letter code for a state of the United States. Route 53
--   doesn't support any other values for <tt>SubdivisionCode</tt>. For a
--   list of state abbreviations, see <a>Appendix B: Two–Letter State and
--   Possession Abbreviations</a> on the United States Postal Service
--   website.
--   
--   If you specify <tt>subdivisioncode</tt>, you must also specify
--   <tt>US</tt> for <tt>CountryCode</tt>.
--   
--   <a>$sel:countryCode:GeoLocation'</a>, <a>geoLocation_countryCode</a> -
--   For geolocation resource record sets, the two-letter code for a
--   country.
--   
--   Amazon Route 53 uses the two-letter country codes that are specified
--   in <a>ISO standard 3166-1 alpha-2</a>.
--   
--   <a>$sel:continentCode:GeoLocation'</a>,
--   <a>geoLocation_continentCode</a> - The two-letter code for the
--   continent.
--   
--   Amazon Route 53 supports the following continent codes:
--   
--   <ul>
--   <li><b>AF</b>: Africa</li>
--   <li><b>AN</b>: Antarctica</li>
--   <li><b>AS</b>: Asia</li>
--   <li><b>EU</b>: Europe</li>
--   <li><b>OC</b>: Oceania</li>
--   <li><b>NA</b>: North America</li>
--   <li><b>SA</b>: South America</li>
--   </ul>
--   
--   Constraint: Specifying <tt>ContinentCode</tt> with either
--   <tt>CountryCode</tt> or <tt>SubdivisionCode</tt> returns an
--   <tt>InvalidInput</tt> error.
newGeoLocation :: GeoLocation

-- | A complex type that contains the codes and full continent, country,
--   and subdivision names for the specified <tt>geolocation</tt> code.
--   
--   <i>See:</i> <a>newGeoLocationDetails</a> smart constructor.
data GeoLocationDetails
GeoLocationDetails' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> GeoLocationDetails

-- | Create a value of <a>GeoLocationDetails</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subdivisionName:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_subdivisionName</a> - The full name of the
--   subdivision. Route 53 currently supports only states in the United
--   States.
--   
--   <a>$sel:subdivisionCode:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_subdivisionCode</a> - The code for the
--   subdivision, such as a particular state within the United States. For
--   a list of US state abbreviations, see <a>Appendix B: Two–Letter State
--   and Possession Abbreviations</a> on the United States Postal Service
--   website. For a list of all supported subdivision codes, use the
--   <a>ListGeoLocations</a> API.
--   
--   <a>$sel:countryName:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_countryName</a> - The name of the country.
--   
--   <a>$sel:countryCode:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_countryCode</a> - The two-letter code for the
--   country.
--   
--   <a>$sel:continentCode:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_continentCode</a> - The two-letter code for the
--   continent.
--   
--   <a>$sel:continentName:GeoLocationDetails'</a>,
--   <a>geoLocationDetails_continentName</a> - The full name of the
--   continent.
newGeoLocationDetails :: GeoLocationDetails

-- | A complex type that contains information about one health check that
--   is associated with the current Amazon Web Services account.
--   
--   <i>See:</i> <a>newHealthCheck</a> smart constructor.
data HealthCheck
HealthCheck' :: Maybe LinkedService -> Maybe CloudWatchAlarmConfiguration -> Text -> Text -> HealthCheckConfig -> Natural -> HealthCheck

-- | Create a value of <a>HealthCheck</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkedService:HealthCheck'</a>,
--   <a>healthCheck_linkedService</a> - If the health check was created by
--   another service, the service that created the health check. When a
--   health check is created by another service, you can't edit or delete
--   it using Amazon Route 53.
--   
--   <a>$sel:cloudWatchAlarmConfiguration:HealthCheck'</a>,
--   <a>healthCheck_cloudWatchAlarmConfiguration</a> - A complex type that
--   contains information about the CloudWatch alarm that Amazon Route 53
--   is monitoring for this health check.
--   
--   <a>$sel:id:HealthCheck'</a>, <a>healthCheck_id</a> - The identifier
--   that Amazon Route 53 assigned to the health check when you created it.
--   When you add or update a resource record set, you use this value to
--   specify which health check to use. The value can be up to 64
--   characters long.
--   
--   <a>$sel:callerReference:HealthCheck'</a>,
--   <a>healthCheck_callerReference</a> - A unique string that you
--   specified when you created the health check.
--   
--   <a>$sel:healthCheckConfig:HealthCheck'</a>,
--   <a>healthCheck_healthCheckConfig</a> - A complex type that contains
--   detailed information about one health check.
--   
--   <a>$sel:healthCheckVersion:HealthCheck'</a>,
--   <a>healthCheck_healthCheckVersion</a> - The version of the health
--   check. You can optionally pass this value in a call to
--   <tt>UpdateHealthCheck</tt> to prevent overwriting another change to
--   the health check.
newHealthCheck :: Text -> Text -> HealthCheckConfig -> Natural -> HealthCheck

-- | A complex type that contains information about the health check.
--   
--   <i>See:</i> <a>newHealthCheckConfig</a> smart constructor.
data HealthCheckConfig
HealthCheckConfig' :: Maybe Natural -> Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe (NonEmpty HealthCheckRegion) -> Maybe Text -> Maybe InsufficientDataHealthStatus -> Maybe AlarmIdentifier -> Maybe Bool -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Natural -> Maybe Natural -> HealthCheckType -> HealthCheckConfig

-- | Create a value of <a>HealthCheckConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:failureThreshold:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_failureThreshold</a> - The number of consecutive
--   health checks that an endpoint must pass or fail for Amazon Route 53
--   to change the current status of the endpoint from unhealthy to healthy
--   or vice versa. For more information, see <a>How Amazon Route 53
--   Determines Whether an Endpoint Is Healthy</a> in the <i>Amazon Route
--   53 Developer Guide</i>.
--   
--   If you don't specify a value for <tt>FailureThreshold</tt>, the
--   default value is three health checks.
--   
--   <a>$sel:iPAddress:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_iPAddress</a> - The IPv4 or IPv6 IP address of
--   the endpoint that you want Amazon Route 53 to perform health checks
--   on. If you don't specify a value for <tt>IPAddress</tt>, Route 53
--   sends a DNS request to resolve the domain name that you specify in
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify in
--   <tt>RequestInterval</tt>. Using an IP address returned by DNS, Route
--   53 then checks the health of the endpoint.
--   
--   Use one of the following formats for the value of <tt>IPAddress</tt>:
--   
--   <ul>
--   <li><b>IPv4 address</b>: four values between 0 and 255, separated by
--   periods (.), for example, <tt>192.0.2.44</tt>.</li>
--   <li><b>IPv6 address</b>: eight groups of four hexadecimal values,
--   separated by colons (:), for example,
--   <tt>2001:0db8:85a3:0000:0000:abcd:0001:2345</tt>. You can also shorten
--   IPv6 addresses as described in RFC 5952, for example,
--   <tt>2001:db8:85a3::abcd:1:2345</tt>.</li>
--   </ul>
--   
--   If the endpoint is an EC2 instance, we recommend that you create an
--   Elastic IP address, associate it with your EC2 instance, and specify
--   the Elastic IP address for <tt>IPAddress</tt>. This ensures that the
--   IP address of your instance will never change.
--   
--   For more information, see <a>FullyQualifiedDomainName</a>.
--   
--   Constraints: Route 53 can't check the health of endpoints for which
--   the IP address is in local, private, non-routable, or multicast
--   ranges. For more information about IP addresses for which you can't
--   create health checks, see the following documents:
--   
--   <ul>
--   <li><a>RFC 5735, Special Use IPv4 Addresses</a></li>
--   <li><a>RFC 6598, IANA-Reserved IPv4 Prefix for Shared Address
--   Space</a></li>
--   <li><a>RFC 5156, Special-Use IPv6 Addresses</a></li>
--   </ul>
--   
--   When the value of <tt>Type</tt> is <tt>CALCULATED</tt> or
--   <tt>CLOUDWATCH_METRIC</tt>, omit <tt>IPAddress</tt>.
--   
--   <a>$sel:enableSNI:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_enableSNI</a> - Specify whether you want Amazon
--   Route 53 to send the value of <tt>FullyQualifiedDomainName</tt> to the
--   endpoint in the <tt>client_hello</tt> message during TLS negotiation.
--   This allows the endpoint to respond to <tt>HTTPS</tt> health check
--   requests with the applicable SSL/TLS certificate.
--   
--   Some endpoints require that <tt>HTTPS</tt> requests include the host
--   name in the <tt>client_hello</tt> message. If you don't enable SNI,
--   the status of the health check will be <tt>SSL alert
--   handshake_failure</tt>. A health check can also have that status for
--   other reasons. If SNI is enabled and you're still getting the error,
--   check the SSL/TLS configuration on your endpoint and confirm that your
--   certificate is valid.
--   
--   The SSL/TLS certificate on your endpoint includes a domain name in the
--   <tt>Common Name</tt> field and possibly several more in the
--   <tt>Subject Alternative Names</tt> field. One of the domain names in
--   the certificate should match the value that you specify for
--   <tt>FullyQualifiedDomainName</tt>. If the endpoint responds to the
--   <tt>client_hello</tt> message with a certificate that does not include
--   the domain name that you specified in
--   <tt>FullyQualifiedDomainName</tt>, a health checker will retry the
--   handshake. In the second attempt, the health checker will omit
--   <tt>FullyQualifiedDomainName</tt> from the <tt>client_hello</tt>
--   message.
--   
--   <a>$sel:disabled:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_disabled</a> - Stops Route 53 from performing
--   health checks. When you disable a health check, here's what happens:
--   
--   <ul>
--   <li><b>Health checks that check the health of endpoints:</b> Route 53
--   stops submitting requests to your application, server, or other
--   resource.</li>
--   <li><b>Calculated health checks:</b> Route 53 stops aggregating the
--   status of the referenced health checks.</li>
--   <li><b>Health checks that monitor CloudWatch alarms:</b> Route 53
--   stops monitoring the corresponding CloudWatch metrics.</li>
--   </ul>
--   
--   After you disable a health check, Route 53 considers the status of the
--   health check to always be healthy. If you configured DNS failover,
--   Route 53 continues to route traffic to the corresponding resources. If
--   you want to stop routing traffic to a resource, change the value of
--   <a>Inverted</a>.
--   
--   Charges for a health check still apply when the health check is
--   disabled. For more information, see <a>Amazon Route 53 Pricing</a>.
--   
--   <a>$sel:searchString:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_searchString</a> - If the value of Type is
--   <tt>HTTP_STR_MATCH</tt> or <tt>HTTPS_STR_MATCH</tt>, the string that
--   you want Amazon Route 53 to search for in the response body from the
--   specified resource. If the string appears in the response body, Route
--   53 considers the resource healthy.
--   
--   Route 53 considers case when searching for <tt>SearchString</tt> in
--   the response body.
--   
--   <a>$sel:healthThreshold:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_healthThreshold</a> - The number of child health
--   checks that are associated with a <tt>CALCULATED</tt> health check
--   that Amazon Route 53 must consider healthy for the <tt>CALCULATED</tt>
--   health check to be considered healthy. To specify the child health
--   checks that you want to associate with a <tt>CALCULATED</tt> health
--   check, use the <a>ChildHealthChecks</a> element.
--   
--   Note the following:
--   
--   <ul>
--   <li>If you specify a number greater than the number of child health
--   checks, Route 53 always considers this health check to be
--   unhealthy.</li>
--   <li>If you specify <tt>0</tt>, Route 53 always considers this health
--   check to be healthy.</li>
--   </ul>
--   
--   <a>$sel:regions:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_regions</a> - A complex type that contains one
--   <tt>Region</tt> element for each region from which you want Amazon
--   Route 53 health checkers to check the specified endpoint.
--   
--   If you don't specify any regions, Route 53 health checkers
--   automatically performs checks from all of the regions that are listed
--   under <b>Valid Values</b>.
--   
--   If you update a health check to remove a region that has been
--   performing health checks, Route 53 will briefly continue to perform
--   checks from that region to ensure that some health checkers are always
--   checking the endpoint (for example, if you replace three regions with
--   four different regions).
--   
--   <a>$sel:resourcePath:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_resourcePath</a> - The path, if any, that you
--   want Amazon Route 53 to request when performing health checks. The
--   path can be any value for which your endpoint will return an HTTP
--   status code of 2xx or 3xx when the endpoint is healthy, for example,
--   the file /docs/route53-health-check.html. You can also include query
--   string parameters, for example,
--   <tt>/welcome.html?language=jp&amp;login=y</tt>.
--   
--   <a>$sel:insufficientDataHealthStatus:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_insufficientDataHealthStatus</a> - When
--   CloudWatch has insufficient data about the metric to determine the
--   alarm state, the status that you want Amazon Route 53 to assign to the
--   health check:
--   
--   <ul>
--   <li><tt>Healthy</tt>: Route 53 considers the health check to be
--   healthy.</li>
--   <li><tt>Unhealthy</tt>: Route 53 considers the health check to be
--   unhealthy.</li>
--   <li><tt>LastKnownStatus</tt>: Route 53 uses the status of the health
--   check from the last time that CloudWatch had sufficient data to
--   determine the alarm state. For new health checks that have no last
--   known status, the default status for the health check is healthy.</li>
--   </ul>
--   
--   <a>$sel:alarmIdentifier:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_alarmIdentifier</a> - A complex type that
--   identifies the CloudWatch alarm that you want Amazon Route 53 health
--   checkers to use to determine whether the specified health check is
--   healthy.
--   
--   <a>$sel:measureLatency:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_measureLatency</a> - Specify whether you want
--   Amazon Route 53 to measure the latency between health checkers in
--   multiple Amazon Web Services regions and your endpoint, and to display
--   CloudWatch latency graphs on the __Health Checks__ page in the Route
--   53 console.
--   
--   You can't change the value of <tt>MeasureLatency</tt> after you create
--   a health check.
--   
--   <a>$sel:inverted:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_inverted</a> - Specify whether you want Amazon
--   Route 53 to invert the status of a health check, for example, to
--   consider a health check unhealthy when it otherwise would be
--   considered healthy.
--   
--   <a>$sel:fullyQualifiedDomainName:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_fullyQualifiedDomainName</a> - Amazon Route 53
--   behavior depends on whether you specify a value for
--   <tt>IPAddress</tt>.
--   
--   <b>If you specify a value for</b> <tt>IPAddress</tt>:
--   
--   Amazon Route 53 sends health check requests to the specified IPv4 or
--   IPv6 address and passes the value of <tt>FullyQualifiedDomainName</tt>
--   in the <tt>Host</tt> header for all health checks except TCP health
--   checks. This is typically the fully qualified DNS name of the endpoint
--   on which you want Route 53 to perform health checks.
--   
--   When Route 53 checks the health of an endpoint, here is how it
--   constructs the <tt>Host</tt> header:
--   
--   <ul>
--   <li>If you specify a value of <tt>80</tt> for <tt>Port</tt> and
--   <tt>HTTP</tt> or <tt>HTTP_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the Host header.</li>
--   <li>If you specify a value of <tt>443</tt> for <tt>Port</tt> and
--   <tt>HTTPS</tt> or <tt>HTTPS_STR_MATCH</tt> for <tt>Type</tt>, Route 53
--   passes the value of <tt>FullyQualifiedDomainName</tt> to the endpoint
--   in the <tt>Host</tt> header.</li>
--   <li>If you specify another value for <tt>Port</tt> and any value
--   except <tt>TCP</tt> for <tt>Type</tt>, Route 53 passes
--   <tt>FullyQualifiedDomainName:Port</tt> to the endpoint in the
--   <tt>Host</tt> header.</li>
--   </ul>
--   
--   If you don't specify a value for <tt>FullyQualifiedDomainName</tt>,
--   Route 53 substitutes the value of <tt>IPAddress</tt> in the
--   <tt>Host</tt> header in each of the preceding cases.
--   
--   <b>If you don't specify a value for</b> <tt>IPAddress</tt>:
--   
--   Route 53 sends a DNS request to the domain that you specify for
--   <tt>FullyQualifiedDomainName</tt> at the interval that you specify for
--   <tt>RequestInterval</tt>. Using an IPv4 address that DNS returns,
--   Route 53 then checks the health of the endpoint.
--   
--   If you don't specify a value for <tt>IPAddress</tt>, Route 53 uses
--   only IPv4 to send health checks to the endpoint. If there's no
--   resource record set with a type of A for the name that you specify for
--   <tt>FullyQualifiedDomainName</tt>, the health check fails with a "DNS
--   resolution failed" error.
--   
--   If you want to check the health of weighted, latency, or failover
--   resource record sets and you choose to specify the endpoint only by
--   <tt>FullyQualifiedDomainName</tt>, we recommend that you create a
--   separate health check for each endpoint. For example, create a health
--   check for each HTTP server that is serving content for
--   www.example.com. For the value of <tt>FullyQualifiedDomainName</tt>,
--   specify the domain name of the server (such as
--   us-east-2-www.example.com), not the name of the resource record sets
--   (www.example.com).
--   
--   In this configuration, if you create a health check for which the
--   value of <tt>FullyQualifiedDomainName</tt> matches the name of the
--   resource record sets and you then associate the health check with
--   those resource record sets, health check results will be
--   unpredictable.
--   
--   In addition, if the value that you specify for <tt>Type</tt> is
--   <tt>HTTP</tt>, <tt>HTTPS</tt>, <tt>HTTP_STR_MATCH</tt>, or
--   <tt>HTTPS_STR_MATCH</tt>, Route 53 passes the value of
--   <tt>FullyQualifiedDomainName</tt> in the <tt>Host</tt> header, as it
--   does when you specify a value for <tt>IPAddress</tt>. If the value of
--   <tt>Type</tt> is <tt>TCP</tt>, Route 53 doesn't pass a <tt>Host</tt>
--   header.
--   
--   <a>$sel:childHealthChecks:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_childHealthChecks</a> - (CALCULATED Health Checks
--   Only) A complex type that contains one <tt>ChildHealthCheck</tt>
--   element for each health check that you want to associate with a
--   <tt>CALCULATED</tt> health check.
--   
--   <a>$sel:routingControlArn:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_routingControlArn</a> - The Amazon Resource Name
--   (ARN) for the Route 53 Application Recovery Controller routing
--   control.
--   
--   For more information about Route 53 Application Recovery Controller,
--   see <a>Route 53 Application Recovery Controller Developer Guide.</a>.
--   
--   <a>$sel:requestInterval:HealthCheckConfig'</a>,
--   <a>healthCheckConfig_requestInterval</a> - The number of seconds
--   between the time that Amazon Route 53 gets a response from your
--   endpoint and the time that it sends the next health check request.
--   Each Route 53 health checker makes requests at this interval.
--   
--   You can't change the value of <tt>RequestInterval</tt> after you
--   create a health check.
--   
--   If you don't specify a value for <tt>RequestInterval</tt>, the default
--   value is <tt>30</tt> seconds.
--   
--   <a>$sel:port:HealthCheckConfig'</a>, <a>healthCheckConfig_port</a> -
--   The port on the endpoint that you want Amazon Route 53 to perform
--   health checks on.
--   
--   Don't specify a value for <tt>Port</tt> when you specify a value for
--   <tt>Type</tt> of <tt>CLOUDWATCH_METRIC</tt> or <tt>CALCULATED</tt>.
--   
--   <a>$sel:type':HealthCheckConfig'</a>, <a>healthCheckConfig_type</a> -
--   The type of health check that you want to create, which indicates how
--   Amazon Route 53 determines whether an endpoint is healthy.
--   
--   You can't change the value of <tt>Type</tt> after you create a health
--   check.
--   
--   You can create the following types of health checks:
--   
--   <ul>
--   <li><b>HTTP</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTP request and waits for an HTTP
--   status code of 200 or greater and less than 400.</li>
--   <li><b>HTTPS</b>: Route 53 tries to establish a TCP connection. If
--   successful, Route 53 submits an HTTPS request and waits for an HTTP
--   status code of 200 or greater and less than 400.If you specify
--   <tt>HTTPS</tt> for the value of <tt>Type</tt>, the endpoint must
--   support TLS v1.0 or later.</li>
--   <li><b>HTTP_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an HTTP request and
--   searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>HTTPS_STR_MATCH</b>: Route 53 tries to establish a TCP
--   connection. If successful, Route 53 submits an <tt>HTTPS</tt> request
--   and searches the first 5,120 bytes of the response body for the string
--   that you specify in <tt>SearchString</tt>.</li>
--   <li><b>TCP</b>: Route 53 tries to establish a TCP connection.</li>
--   <li><b>CLOUDWATCH_METRIC</b>: The health check is associated with a
--   CloudWatch alarm. If the state of the alarm is <tt>OK</tt>, the health
--   check is considered healthy. If the state is <tt>ALARM</tt>, the
--   health check is considered unhealthy. If CloudWatch doesn't have
--   sufficient data to determine whether the state is <tt>OK</tt> or
--   <tt>ALARM</tt>, the health check status depends on the setting for
--   <tt>InsufficientDataHealthStatus</tt>: <tt>Healthy</tt>,
--   <tt>Unhealthy</tt>, or <tt>LastKnownStatus</tt>.</li>
--   <li><b>CALCULATED</b>: For health checks that monitor the status of
--   other health checks, Route 53 adds up the number of health checks that
--   Route 53 health checkers consider to be healthy and compares that
--   number with the value of <tt>HealthThreshold</tt>.</li>
--   <li><b>RECOVERY_CONTROL</b>: The health check is assocated with a
--   Route53 Application Recovery Controller routing control. If the
--   routing control state is <tt>ON</tt>, the health check is considered
--   healthy. If the state is <tt>OFF</tt>, the health check is considered
--   unhealthy.</li>
--   </ul>
--   
--   For more information, see <a>How Route 53 Determines Whether an
--   Endpoint Is Healthy</a> in the <i>Amazon Route 53 Developer Guide</i>.
newHealthCheckConfig :: HealthCheckType -> HealthCheckConfig

-- | A complex type that contains the last failure reason as reported by
--   one Amazon Route 53 health checker.
--   
--   <i>See:</i> <a>newHealthCheckObservation</a> smart constructor.
data HealthCheckObservation
HealthCheckObservation' :: Maybe Text -> Maybe StatusReport -> Maybe HealthCheckRegion -> HealthCheckObservation

-- | Create a value of <a>HealthCheckObservation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:iPAddress:HealthCheckObservation'</a>,
--   <a>healthCheckObservation_iPAddress</a> - The IP address of the Amazon
--   Route 53 health checker that provided the failure reason in
--   <tt>StatusReport</tt>.
--   
--   <a>$sel:statusReport:HealthCheckObservation'</a>,
--   <a>healthCheckObservation_statusReport</a> - A complex type that
--   contains the last failure reason as reported by one Amazon Route 53
--   health checker and the time of the failed health check.
--   
--   <a>$sel:region:HealthCheckObservation'</a>,
--   <a>healthCheckObservation_region</a> - The region of the Amazon Route
--   53 health checker that provided the status in <tt>StatusReport</tt>.
newHealthCheckObservation :: HealthCheckObservation

-- | A complex type that contains general information about the hosted
--   zone.
--   
--   <i>See:</i> <a>newHostedZone</a> smart constructor.
data HostedZone
HostedZone' :: Maybe LinkedService -> Maybe HostedZoneConfig -> Maybe Integer -> ResourceId -> Text -> Text -> HostedZone

-- | Create a value of <a>HostedZone</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:linkedService:HostedZone'</a>, <a>hostedZone_linkedService</a>
--   - If the hosted zone was created by another service, the service that
--   created the hosted zone. When a hosted zone is created by another
--   service, you can't edit or delete it using Route 53.
--   
--   <a>$sel:config:HostedZone'</a>, <a>hostedZone_config</a> - A complex
--   type that includes the <tt>Comment</tt> and <tt>PrivateZone</tt>
--   elements. If you omitted the <tt>HostedZoneConfig</tt> and
--   <tt>Comment</tt> elements from the request, the <tt>Config</tt> and
--   <tt>Comment</tt> elements don't appear in the response.
--   
--   <a>$sel:resourceRecordSetCount:HostedZone'</a>,
--   <a>hostedZone_resourceRecordSetCount</a> - The number of resource
--   record sets in the hosted zone.
--   
--   <a>$sel:id:HostedZone'</a>, <a>hostedZone_id</a> - The ID that Amazon
--   Route 53 assigned to the hosted zone when you created it.
--   
--   <a>$sel:name:HostedZone'</a>, <a>hostedZone_name</a> - The name of the
--   domain. For public hosted zones, this is the name that you have
--   registered with your DNS registrar.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>CreateHostedZone</a>.
--   
--   <a>$sel:callerReference:HostedZone'</a>,
--   <a>hostedZone_callerReference</a> - The value that you specified for
--   <tt>CallerReference</tt> when you created the hosted zone.
newHostedZone :: ResourceId -> Text -> Text -> HostedZone

-- | A complex type that contains an optional comment about your hosted
--   zone. If you don't want to specify a comment, omit both the
--   <tt>HostedZoneConfig</tt> and <tt>Comment</tt> elements.
--   
--   <i>See:</i> <a>newHostedZoneConfig</a> smart constructor.
data HostedZoneConfig
HostedZoneConfig' :: Maybe Bool -> Maybe Text -> HostedZoneConfig

-- | Create a value of <a>HostedZoneConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:privateZone:HostedZoneConfig'</a>,
--   <a>hostedZoneConfig_privateZone</a> - A value that indicates whether
--   this is a private hosted zone.
--   
--   <a>$sel:comment:HostedZoneConfig'</a>, <a>hostedZoneConfig_comment</a>
--   - Any comments that you want to include about the hosted zone.
newHostedZoneConfig :: HostedZoneConfig

-- | A complex type that contains the type of limit that you specified in
--   the request and the current value for that limit.
--   
--   <i>See:</i> <a>newHostedZoneLimit</a> smart constructor.
data HostedZoneLimit
HostedZoneLimit' :: HostedZoneLimitType -> Natural -> HostedZoneLimit

-- | Create a value of <a>HostedZoneLimit</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':HostedZoneLimit'</a>, <a>hostedZoneLimit_type</a> - The
--   limit that you requested. Valid values include the following:
--   
--   <ul>
--   <li><b>MAX_RRSETS_BY_ZONE</b>: The maximum number of records that you
--   can create in the specified hosted zone.</li>
--   <li><b>MAX_VPCS_ASSOCIATED_BY_ZONE</b>: The maximum number of Amazon
--   VPCs that you can associate with the specified private hosted
--   zone.</li>
--   </ul>
--   
--   <a>$sel:value:HostedZoneLimit'</a>, <a>hostedZoneLimit_value</a> - The
--   current value for the limit that is specified by <tt>Type</tt>.
newHostedZoneLimit :: HostedZoneLimitType -> Natural -> HostedZoneLimit

-- | A complex type that identifies a hosted zone that a specified Amazon
--   VPC is associated with and the owner of the hosted zone. If there is a
--   value for <tt>OwningAccount</tt>, there is no value for
--   <tt>OwningService</tt>, and vice versa.
--   
--   <i>See:</i> <a>newHostedZoneOwner</a> smart constructor.
data HostedZoneOwner
HostedZoneOwner' :: Maybe Text -> Maybe Text -> HostedZoneOwner

-- | Create a value of <a>HostedZoneOwner</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:owningAccount:HostedZoneOwner'</a>,
--   <a>hostedZoneOwner_owningAccount</a> - If the hosted zone was created
--   by an Amazon Web Services account, or was created by an Amazon Web
--   Services service that creates hosted zones using the current account,
--   <tt>OwningAccount</tt> contains the account ID of that account. For
--   example, when you use Cloud Map to create a hosted zone, Cloud Map
--   creates the hosted zone using the current Amazon Web Services account.
--   
--   <a>$sel:owningService:HostedZoneOwner'</a>,
--   <a>hostedZoneOwner_owningService</a> - If an Amazon Web Services
--   service uses its own account to create a hosted zone and associate the
--   specified VPC with that hosted zone, <tt>OwningService</tt> contains
--   an abbreviation that identifies the service. For example, if Amazon
--   Elastic File System (Amazon EFS) created a hosted zone and associated
--   a VPC with the hosted zone, the value of <tt>OwningService</tt> is
--   <tt>efs.amazonaws.com</tt>.
newHostedZoneOwner :: HostedZoneOwner

-- | In the response to a <tt>ListHostedZonesByVPC</tt> request, the
--   <tt>HostedZoneSummaries</tt> element contains one
--   <tt>HostedZoneSummary</tt> element for each hosted zone that the
--   specified Amazon VPC is associated with. Each
--   <tt>HostedZoneSummary</tt> element contains the hosted zone name and
--   ID, and information about who owns the hosted zone.
--   
--   <i>See:</i> <a>newHostedZoneSummary</a> smart constructor.
data HostedZoneSummary
HostedZoneSummary' :: ResourceId -> Text -> HostedZoneOwner -> HostedZoneSummary

-- | Create a value of <a>HostedZoneSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostedZoneId:HostedZoneSummary'</a>,
--   <a>hostedZoneSummary_hostedZoneId</a> - The Route 53 hosted zone ID of
--   a private hosted zone that the specified VPC is associated with.
--   
--   <a>$sel:name:HostedZoneSummary'</a>, <a>hostedZoneSummary_name</a> -
--   The name of the private hosted zone, such as <tt>example.com</tt>.
--   
--   <a>$sel:owner:HostedZoneSummary'</a>, <a>hostedZoneSummary_owner</a> -
--   The owner of a private hosted zone that the specified VPC is
--   associated with. The owner can be either an Amazon Web Services
--   account or an Amazon Web Services service.
newHostedZoneSummary :: ResourceId -> Text -> HostedZoneOwner -> HostedZoneSummary

-- | A key-signing key (KSK) is a complex type that represents a
--   public/private key pair. The private key is used to generate a digital
--   signature for the zone signing key (ZSK). The public key is stored in
--   the DNS and is used to authenticate the ZSK. A KSK is always
--   associated with a hosted zone; it cannot exist by itself.
--   
--   <i>See:</i> <a>newKeySigningKey</a> smart constructor.
data KeySigningKey
KeySigningKey' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ISO8601 -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe ISO8601 -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> KeySigningKey

-- | Create a value of <a>KeySigningKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:KeySigningKey'</a>, <a>keySigningKey_status</a> - A
--   string that represents the current key-signing key (KSK) status.
--   
--   Status can have one of the following values:
--   
--   <ul>
--   <li><i>ACTIVE</i> The KSK is being used for signing.</li>
--   <li><i>INACTIVE</i> The KSK is not being used for signing.</li>
--   <li><i>DELETING</i> The KSK is in the process of being deleted.</li>
--   <li><i>ACTION_NEEDED</i> There is a problem with the KSK that requires
--   you to take action to resolve. For example, the customer managed
--   customer master key (CMK) might have been deleted, or the permissions
--   for the customer managed CMK might have been changed.</li>
--   <li><i>INTERNAL_FAILURE</i> There was an error during a request.
--   Before you can continue to work with DNSSEC signing, including actions
--   that involve this KSK, you must correct the problem. For example, you
--   may need to activate or deactivate the KSK.</li>
--   </ul>
--   
--   <a>$sel:signingAlgorithmMnemonic:KeySigningKey'</a>,
--   <a>keySigningKey_signingAlgorithmMnemonic</a> - A string used to
--   represent the signing algorithm. This value must follow the guidelines
--   provided by <a>RFC-8624 Section 3.1</a>.
--   
--   <a>$sel:digestAlgorithmMnemonic:KeySigningKey'</a>,
--   <a>keySigningKey_digestAlgorithmMnemonic</a> - A string used to
--   represent the delegation signer digest algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.3</a>.
--   
--   <a>$sel:lastModifiedDate:KeySigningKey'</a>,
--   <a>keySigningKey_lastModifiedDate</a> - The last time that the
--   key-signing key (KSK) was changed.
--   
--   <a>$sel:keyTag:KeySigningKey'</a>, <a>keySigningKey_keyTag</a> - An
--   integer used to identify the DNSSEC record for the domain name. The
--   process used to calculate the value is described in <a>RFC-4034
--   Appendix B</a>.
--   
--   <a>$sel:dNSKEYRecord:KeySigningKey'</a>,
--   <a>keySigningKey_dNSKEYRecord</a> - A string that represents a DNSKEY
--   record.
--   
--   <a>$sel:publicKey:KeySigningKey'</a>, <a>keySigningKey_publicKey</a> -
--   The public key, represented as a Base64 encoding, as required by
--   <a>RFC-4034 Page 5</a>.
--   
--   <a>$sel:signingAlgorithmType:KeySigningKey'</a>,
--   <a>keySigningKey_signingAlgorithmType</a> - An integer used to
--   represent the signing algorithm. This value must follow the guidelines
--   provided by <a>RFC-8624 Section 3.1</a>.
--   
--   <a>$sel:createdDate:KeySigningKey'</a>,
--   <a>keySigningKey_createdDate</a> - The date when the key-signing key
--   (KSK) was created.
--   
--   <a>$sel:flag:KeySigningKey'</a>, <a>keySigningKey_flag</a> - An
--   integer that specifies how the key is used. For key-signing key (KSK),
--   this value is always 257.
--   
--   <a>$sel:digestAlgorithmType:KeySigningKey'</a>,
--   <a>keySigningKey_digestAlgorithmType</a> - An integer used to
--   represent the delegation signer digest algorithm. This value must
--   follow the guidelines provided by <a>RFC-8624 Section 3.3</a>.
--   
--   <a>$sel:statusMessage:KeySigningKey'</a>,
--   <a>keySigningKey_statusMessage</a> - The status message provided for
--   the following key-signing key (KSK) statuses: <tt>ACTION_NEEDED</tt>
--   or <tt>INTERNAL_FAILURE</tt>. The status message includes information
--   about what the problem might be and steps that you can take to correct
--   the issue.
--   
--   <a>$sel:name:KeySigningKey'</a>, <a>keySigningKey_name</a> - A string
--   used to identify a key-signing key (KSK). <tt>Name</tt> can include
--   numbers, letters, and underscores (_). <tt>Name</tt> must be unique
--   for each key-signing key in the same hosted zone.
--   
--   <a>$sel:dSRecord:KeySigningKey'</a>, <a>keySigningKey_dSRecord</a> - A
--   string that represents a delegation signer (DS) record.
--   
--   <a>$sel:kmsArn:KeySigningKey'</a>, <a>keySigningKey_kmsArn</a> - The
--   Amazon resource name (ARN) used to identify the customer managed
--   customer master key (CMK) in Key Management Service (KMS). The
--   <tt>KmsArn</tt> must be unique for each key-signing key (KSK) in a
--   single hosted zone.
--   
--   You must configure the CMK as follows:
--   
--   <ul>
--   <li><i>Status</i> Enabled</li>
--   <li><i>Key spec</i> ECC_NIST_P256</li>
--   <li><i>Key usage</i> Sign and verify</li>
--   <li><i>Key policy</i> The key policy must give permission for the
--   following
--   actions:<ul><li>DescribeKey</li><li>GetPublicKey</li><li>Sign</li></ul>The
--   key policy must also include the Amazon Route 53 service in the
--   principal for your account. Specify the
--   following:<ul><li><pre>"Service":
--   "dnssec-route53.amazonaws.com"</pre></li></ul></li>
--   </ul>
--   
--   For more information about working with the customer managed CMK in
--   KMS, see <a>Key Management Service concepts</a>.
--   
--   <a>$sel:digestValue:KeySigningKey'</a>,
--   <a>keySigningKey_digestValue</a> - A cryptographic digest of a DNSKEY
--   resource record (RR). DNSKEY records are used to publish the public
--   key that resolvers can use to verify DNSSEC signatures that are used
--   to secure certain kinds of information provided by the DNS system.
newKeySigningKey :: KeySigningKey

-- | If a health check or hosted zone was created by another service,
--   <tt>LinkedService</tt> is a complex type that describes the service
--   that created the resource. When a resource is created by another
--   service, you can't edit or delete it using Amazon Route 53.
--   
--   <i>See:</i> <a>newLinkedService</a> smart constructor.
data LinkedService
LinkedService' :: Maybe Text -> Maybe Text -> LinkedService

-- | Create a value of <a>LinkedService</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:servicePrincipal:LinkedService'</a>,
--   <a>linkedService_servicePrincipal</a> - If the health check or hosted
--   zone was created by another service, the service that created the
--   resource. When a resource is created by another service, you can't
--   edit or delete it using Amazon Route 53.
--   
--   <a>$sel:description:LinkedService'</a>,
--   <a>linkedService_description</a> - If the health check or hosted zone
--   was created by another service, an optional description that can be
--   provided by the other service. When a resource is created by another
--   service, you can't edit or delete it using Amazon Route 53.
newLinkedService :: LinkedService

-- | A complex type that contains information about a configuration for DNS
--   query logging.
--   
--   <i>See:</i> <a>newQueryLoggingConfig</a> smart constructor.
data QueryLoggingConfig
QueryLoggingConfig' :: Text -> ResourceId -> Text -> QueryLoggingConfig

-- | Create a value of <a>QueryLoggingConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:QueryLoggingConfig'</a>, <a>queryLoggingConfig_id</a> - The
--   ID for a configuration for DNS query logging.
--   
--   <a>$sel:hostedZoneId:QueryLoggingConfig'</a>,
--   <a>queryLoggingConfig_hostedZoneId</a> - The ID of the hosted zone
--   that CloudWatch Logs is logging queries for.
--   
--   <a>$sel:cloudWatchLogsLogGroupArn:QueryLoggingConfig'</a>,
--   <a>queryLoggingConfig_cloudWatchLogsLogGroupArn</a> - The Amazon
--   Resource Name (ARN) of the CloudWatch Logs log group that Amazon Route
--   53 is publishing logs to.
newQueryLoggingConfig :: Text -> ResourceId -> Text -> QueryLoggingConfig

-- | Information specific to the resource record.
--   
--   If you're creating an alias resource record set, omit
--   <tt>ResourceRecord</tt>.
--   
--   <i>See:</i> <a>newResourceRecord</a> smart constructor.
data ResourceRecord
ResourceRecord' :: Text -> ResourceRecord

-- | Create a value of <a>ResourceRecord</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ResourceRecord'</a>, <a>resourceRecord_value</a> - The
--   current or new DNS record value, not to exceed 4,000 characters. In
--   the case of a <tt>DELETE</tt> action, if the current value does not
--   match the actual value, an error is returned. For descriptions about
--   how to format <tt>Value</tt> for different record types, see
--   <a>Supported DNS Resource Record Types</a> in the <i>Amazon Route 53
--   Developer Guide</i>.
--   
--   You can specify more than one value for all record types except
--   <tt>CNAME</tt> and <tt>SOA</tt>.
--   
--   If you're creating an alias resource record set, omit <tt>Value</tt>.
newResourceRecord :: Text -> ResourceRecord

-- | Information about the resource record set to create or delete.
--   
--   <i>See:</i> <a>newResourceRecordSet</a> smart constructor.
data ResourceRecordSet
ResourceRecordSet' :: Maybe Natural -> Maybe (NonEmpty ResourceRecord) -> Maybe AliasTarget -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe ResourceRecordSetFailover -> Maybe Text -> Maybe Region -> Maybe GeoLocation -> Maybe Bool -> Text -> RRType -> ResourceRecordSet

-- | Create a value of <a>ResourceRecordSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ttl:ResourceRecordSet'</a>, <a>resourceRecordSet_ttl</a> - The
--   resource record cache time to live (TTL), in seconds. Note the
--   following:
--   
--   <ul>
--   <li>If you're creating or updating an alias resource record set, omit
--   <tt>TTL</tt>. Amazon Route 53 uses the value of <tt>TTL</tt> for the
--   alias target.</li>
--   <li>If you're associating this resource record set with a health check
--   (if you're adding a <tt>HealthCheckId</tt> element), we recommend that
--   you specify a <tt>TTL</tt> of 60 seconds or less so clients respond
--   quickly to changes in health status.</li>
--   <li>All of the resource record sets in a group of weighted resource
--   record sets must have the same value for <tt>TTL</tt>.</li>
--   <li>If a group of weighted resource record sets includes one or more
--   weighted alias resource record sets for which the alias target is an
--   ELB load balancer, we recommend that you specify a <tt>TTL</tt> of 60
--   seconds for all of the non-alias weighted resource record sets that
--   have the same name and type. Values other than 60 seconds (the TTL for
--   load balancers) will change the effect of the values that you specify
--   for <tt>Weight</tt>.</li>
--   </ul>
--   
--   <a>$sel:resourceRecords:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_resourceRecords</a> - Information about the
--   resource records to act upon.
--   
--   If you're creating an alias resource record set, omit
--   <tt>ResourceRecords</tt>.
--   
--   <a>$sel:aliasTarget:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_aliasTarget</a> - <i>Alias resource record sets
--   only:</i> Information about the Amazon Web Services resource, such as
--   a CloudFront distribution or an Amazon S3 bucket, that you want to
--   route traffic to.
--   
--   If you're creating resource records sets for a private hosted zone,
--   note the following:
--   
--   <ul>
--   <li>You can't create an alias resource record set in a private hosted
--   zone to route traffic to a CloudFront distribution.</li>
--   <li>Creating geolocation alias resource record sets or latency alias
--   resource record sets in a private hosted zone is unsupported.</li>
--   <li>For information about creating failover resource record sets in a
--   private hosted zone, see <a>Configuring Failover in a Private Hosted
--   Zone</a> in the <i>Amazon Route 53 Developer Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:weight:ResourceRecordSet'</a>, <a>resourceRecordSet_weight</a>
--   - <i>Weighted resource record sets only:</i> Among resource record
--   sets that have the same combination of DNS name and type, a value that
--   determines the proportion of DNS queries that Amazon Route 53 responds
--   to using the current resource record set. Route 53 calculates the sum
--   of the weights for the resource record sets that have the same
--   combination of DNS name and type. Route 53 then responds to queries
--   based on the ratio of a resource's weight to the total. Note the
--   following:
--   
--   <ul>
--   <li>You must specify a value for the <tt>Weight</tt> element for every
--   weighted resource record set.</li>
--   <li>You can only specify one <tt>ResourceRecord</tt> per weighted
--   resource record set.</li>
--   <li>You can't create latency, failover, or geolocation resource record
--   sets that have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements as weighted resource record sets.</li>
--   <li>You can create a maximum of 100 weighted resource record sets that
--   have the same values for the <tt>Name</tt> and <tt>Type</tt>
--   elements.</li>
--   <li>For weighted (but not weighted alias) resource record sets, if you
--   set <tt>Weight</tt> to <tt>0</tt> for a resource record set, Route 53
--   never responds to queries with the applicable value for that resource
--   record set. However, if you set <tt>Weight</tt> to <tt>0</tt> for all
--   resource record sets that have the same combination of DNS name and
--   type, traffic is routed to all resources with equal probability.The
--   effect of setting <tt>Weight</tt> to <tt>0</tt> is different when you
--   associate health checks with weighted resource record sets. For more
--   information, see <a>Options for Configuring Route 53 Active-Active and
--   Active-Passive Failover</a> in the <i>Amazon Route 53 Developer
--   Guide</i>.</li>
--   </ul>
--   
--   <a>$sel:trafficPolicyInstanceId:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_trafficPolicyInstanceId</a> - When you create a
--   traffic policy instance, Amazon Route 53 automatically creates a
--   resource record set. <tt>TrafficPolicyInstanceId</tt> is the ID of the
--   traffic policy instance that Route 53 created this resource record set
--   for.
--   
--   To delete the resource record set that is associated with a traffic
--   policy instance, use <tt>DeleteTrafficPolicyInstance</tt>. Route 53
--   will delete the resource record set automatically. If you delete the
--   resource record set by using <tt>ChangeResourceRecordSets</tt>, Route
--   53 doesn't automatically delete the traffic policy instance, and
--   you'll continue to be charged for it even though it's no longer in
--   use.
--   
--   <a>$sel:setIdentifier:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_setIdentifier</a> - <i>Resource record sets that
--   have a routing policy other than simple:</i> An identifier that
--   differentiates among multiple resource record sets that have the same
--   combination of name and type, such as multiple weighted resource
--   record sets named acme.example.com that have a type of A. In a group
--   of resource record sets that have the same name and type, the value of
--   <tt>SetIdentifier</tt> must be unique for each resource record set.
--   
--   For information about routing policies, see <a>Choosing a Routing
--   Policy</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   <a>$sel:failover:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_failover</a> - <i>Failover resource record sets
--   only:</i> To configure failover, you add the <tt>Failover</tt> element
--   to two resource record sets. For one resource record set, you specify
--   <tt>PRIMARY</tt> as the value for <tt>Failover</tt>; for the other
--   resource record set, you specify <tt>SECONDARY</tt>. In addition, you
--   include the <tt>HealthCheckId</tt> element and specify the health
--   check that you want Amazon Route 53 to perform for each resource
--   record set.
--   
--   Except where noted, the following failover behaviors assume that you
--   have included the <tt>HealthCheckId</tt> element in both resource
--   record sets:
--   
--   <ul>
--   <li>When the primary resource record set is healthy, Route 53 responds
--   to DNS queries with the applicable value from the primary resource
--   record set regardless of the health of the secondary resource record
--   set.</li>
--   <li>When the primary resource record set is unhealthy and the
--   secondary resource record set is healthy, Route 53 responds to DNS
--   queries with the applicable value from the secondary resource record
--   set.</li>
--   <li>When the secondary resource record set is unhealthy, Route 53
--   responds to DNS queries with the applicable value from the primary
--   resource record set regardless of the health of the primary resource
--   record set.</li>
--   <li>If you omit the <tt>HealthCheckId</tt> element for the secondary
--   resource record set, and if the primary resource record set is
--   unhealthy, Route 53 always responds to DNS queries with the applicable
--   value from the secondary resource record set. This is true regardless
--   of the health of the associated endpoint.</li>
--   </ul>
--   
--   You can't create non-failover resource record sets that have the same
--   values for the <tt>Name</tt> and <tt>Type</tt> elements as failover
--   resource record sets.
--   
--   For failover alias resource record sets, you must also include the
--   <tt>EvaluateTargetHealth</tt> element and set the value to true.
--   
--   For more information about configuring failover for Route 53, see the
--   following topics in the <i>Amazon Route 53 Developer Guide</i>:
--   
--   <ul>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
--   
--   <a>$sel:healthCheckId:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_healthCheckId</a> - If you want Amazon Route 53
--   to return this resource record set in response to a DNS query only
--   when the status of a health check is healthy, include the
--   <tt>HealthCheckId</tt> element and specify the ID of the applicable
--   health check.
--   
--   Route 53 determines whether a resource record set is healthy based on
--   one of the following:
--   
--   <ul>
--   <li>By periodically sending a request to the endpoint that is
--   specified in the health check</li>
--   <li>By aggregating the status of a specified group of health checks
--   (calculated health checks)</li>
--   <li>By determining the current state of a CloudWatch alarm (CloudWatch
--   metric health checks)</li>
--   </ul>
--   
--   Route 53 doesn't check the health of the endpoint that is specified in
--   the resource record set, for example, the endpoint specified by the IP
--   address in the <tt>Value</tt> element. When you add a
--   <tt>HealthCheckId</tt> element to a resource record set, Route 53
--   checks the health of the endpoint that you specified in the health
--   check.
--   
--   For more information, see the following topics in the /Amazon Route 53
--   Developer Guide/:
--   
--   <ul>
--   <li><a>How Amazon Route 53 Determines Whether an Endpoint Is
--   Healthy</a></li>
--   <li><a>Route 53 Health Checks and DNS Failover</a></li>
--   <li><a>Configuring Failover in a Private Hosted Zone</a></li>
--   </ul>
--   
--   <b>When to Specify HealthCheckId</b>
--   
--   Specifying a value for <tt>HealthCheckId</tt> is useful only when
--   Route 53 is choosing between two or more resource record sets to
--   respond to a DNS query, and you want Route 53 to base the choice in
--   part on the status of a health check. Configuring health checks makes
--   sense only in the following configurations:
--   
--   <ul>
--   <li><b>Non-alias resource record sets</b>: You're checking the health
--   of a group of non-alias resource record sets that have the same
--   routing policy, name, and type (such as multiple weighted records
--   named www.example.com with a type of A) and you specify health check
--   IDs for all the resource record sets.If the health check status for a
--   resource record set is healthy, Route 53 includes the record among the
--   records that it responds to DNS queries with.If the health check
--   status for a resource record set is unhealthy, Route 53 stops
--   responding to DNS queries using the value for that resource record
--   set.If the health check status for all resource record sets in the
--   group is unhealthy, Route 53 considers all resource record sets in the
--   group healthy and responds to DNS queries accordingly.</li>
--   <li><b>Alias resource record sets</b>: You specify the following
--   settings:<ul><li>You set <tt>EvaluateTargetHealth</tt> to true for an
--   alias resource record set in a group of resource record sets that have
--   the same routing policy, name, and type (such as multiple weighted
--   records named www.example.com with a type of A).</li><li>You configure
--   the alias resource record set to route traffic to a non-alias resource
--   record set in the same hosted zone.</li><li>You specify a health check
--   ID for the non-alias resource record set.</li></ul>If the health check
--   status is healthy, Route 53 considers the alias resource record set to
--   be healthy and includes the alias record among the records that it
--   responds to DNS queries with.If the health check status is unhealthy,
--   Route 53 stops responding to DNS queries using the alias resource
--   record set.The alias resource record set can also route traffic to a
--   <i>group</i> of non-alias resource record sets that have the same
--   routing policy, name, and type. In that configuration, associate
--   health checks with all of the resource record sets in the group of
--   non-alias resource record sets.</li>
--   </ul>
--   
--   <b>Geolocation Routing</b>
--   
--   For geolocation resource record sets, if an endpoint is unhealthy,
--   Route 53 looks for a resource record set for the larger, associated
--   geographic region. For example, suppose you have resource record sets
--   for a state in the United States, for the entire United States, for
--   North America, and a resource record set that has <tt>*</tt> for
--   <tt>CountryCode</tt> is <tt>*</tt>, which applies to all locations. If
--   the endpoint for the state resource record set is unhealthy, Route 53
--   checks for healthy resource record sets in the following order until
--   it finds a resource record set for which the endpoint is healthy:
--   
--   <ul>
--   <li>The United States</li>
--   <li>North America</li>
--   <li>The default resource record set</li>
--   </ul>
--   
--   <b>Specifying the Health Check Endpoint by Domain Name</b>
--   
--   If your health checks specify the endpoint only by domain name, we
--   recommend that you create a separate health check for each endpoint.
--   For example, create a health check for each <tt>HTTP</tt> server that
--   is serving content for <tt>www.example.com</tt>. For the value of
--   <tt>FullyQualifiedDomainName</tt>, specify the domain name of the
--   server (such as <tt>us-east-2-www.example.com</tt>), not the name of
--   the resource record sets (<tt>www.example.com</tt>).
--   
--   Health check results will be unpredictable if you do the following:
--   
--   <ul>
--   <li>Create a health check that has the same value for
--   <tt>FullyQualifiedDomainName</tt> as the name of a resource record
--   set.</li>
--   <li>Associate that health check with the resource record set.</li>
--   </ul>
--   
--   <a>$sel:region:ResourceRecordSet'</a>, <a>resourceRecordSet_region</a>
--   - <i>Latency-based resource record sets only:</i> The Amazon EC2
--   Region where you created the resource that this resource record set
--   refers to. The resource typically is an Amazon Web Services resource,
--   such as an EC2 instance or an ELB load balancer, and is referred to by
--   an IP address or a DNS domain name, depending on the record type.
--   
--   Although creating latency and latency alias resource record sets in a
--   private hosted zone is allowed, it's not supported.
--   
--   When Amazon Route 53 receives a DNS query for a domain name and type
--   for which you have created latency resource record sets, Route 53
--   selects the latency resource record set that has the lowest latency
--   between the end user and the associated Amazon EC2 Region. Route 53
--   then returns the value that is associated with the selected resource
--   record set.
--   
--   Note the following:
--   
--   <ul>
--   <li>You can only specify one <tt>ResourceRecord</tt> per latency
--   resource record set.</li>
--   <li>You can only create one latency resource record set for each
--   Amazon EC2 Region.</li>
--   <li>You aren't required to create latency resource record sets for all
--   Amazon EC2 Regions. Route 53 will choose the region with the best
--   latency from among the regions that you create latency resource record
--   sets for.</li>
--   <li>You can't create non-latency resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   latency resource record sets.</li>
--   </ul>
--   
--   <a>$sel:geoLocation:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_geoLocation</a> - <i>Geolocation resource record
--   sets only:</i> A complex type that lets you control how Amazon Route
--   53 responds to DNS queries based on the geographic origin of the
--   query. For example, if you want all queries from Africa to be routed
--   to a web server with an IP address of <tt>192.0.2.111</tt>, create a
--   resource record set with a <tt>Type</tt> of <tt>A</tt> and a
--   <tt>ContinentCode</tt> of <tt>AF</tt>.
--   
--   Although creating geolocation and geolocation alias resource record
--   sets in a private hosted zone is allowed, it's not supported.
--   
--   If you create separate resource record sets for overlapping geographic
--   regions (for example, one resource record set for a continent and one
--   for a country on the same continent), priority goes to the smallest
--   geographic region. This allows you to route most queries for a
--   continent to one resource and to route queries for a country on that
--   continent to a different resource.
--   
--   You can't create two geolocation resource record sets that specify the
--   same geographic location.
--   
--   The value <tt>*</tt> in the <tt>CountryCode</tt> element matches all
--   geographic locations that aren't specified in other geolocation
--   resource record sets that have the same values for the <tt>Name</tt>
--   and <tt>Type</tt> elements.
--   
--   Geolocation works by mapping IP addresses to locations. However, some
--   IP addresses aren't mapped to geographic locations, so even if you
--   create geolocation resource record sets that cover all seven
--   continents, Route 53 will receive some DNS queries from locations that
--   it can't identify. We recommend that you create a resource record set
--   for which the value of <tt>CountryCode</tt> is <tt>*</tt>. Two groups
--   of queries are routed to the resource that you specify in this record:
--   queries that come from locations for which you haven't created
--   geolocation resource record sets and queries from IP addresses that
--   aren't mapped to a location. If you don't create a <tt>*</tt> resource
--   record set, Route 53 returns a "no answer" response for queries from
--   those locations.
--   
--   You can't create non-geolocation resource record sets that have the
--   same values for the <tt>Name</tt> and <tt>Type</tt> elements as
--   geolocation resource record sets.
--   
--   <a>$sel:multiValueAnswer:ResourceRecordSet'</a>,
--   <a>resourceRecordSet_multiValueAnswer</a> - <i>Multivalue answer
--   resource record sets only</i>: To route traffic approximately randomly
--   to multiple resources, such as web servers, create one multivalue
--   answer record for each resource and specify <tt>true</tt> for
--   <tt>MultiValueAnswer</tt>. Note the following:
--   
--   <ul>
--   <li>If you associate a health check with a multivalue answer resource
--   record set, Amazon Route 53 responds to DNS queries with the
--   corresponding IP address only when the health check is healthy.</li>
--   <li>If you don't associate a health check with a multivalue answer
--   record, Route 53 always considers the record to be healthy.</li>
--   <li>Route 53 responds to DNS queries with up to eight healthy records;
--   if you have eight or fewer healthy records, Route 53 responds to all
--   DNS queries with all the healthy records.</li>
--   <li>If you have more than eight healthy records, Route 53 responds to
--   different DNS resolvers with different combinations of healthy
--   records.</li>
--   <li>When all records are unhealthy, Route 53 responds to DNS queries
--   with up to eight unhealthy records.</li>
--   <li>If a resource becomes unavailable after a resolver caches a
--   response, client software typically tries another of the IP addresses
--   in the response.</li>
--   </ul>
--   
--   You can't create multivalue answer alias records.
--   
--   <a>$sel:name:ResourceRecordSet'</a>, <a>resourceRecordSet_name</a> -
--   For <tt>ChangeResourceRecordSets</tt> requests, the name of the record
--   that you want to create, update, or delete. For
--   <tt>ListResourceRecordSets</tt> responses, the name of a record in the
--   specified hosted zone.
--   
--   <b>ChangeResourceRecordSets Only</b>
--   
--   Enter a fully qualified domain name, for example,
--   <tt>www.example.com</tt>. You can optionally include a trailing dot.
--   If you omit the trailing dot, Amazon Route 53 assumes that the domain
--   name that you specify is fully qualified. This means that Route 53
--   treats <tt>www.example.com</tt> (without a trailing dot) and
--   <tt>www.example.com.</tt> (with a trailing dot) as identical.
--   
--   For information about how to specify characters other than
--   <tt>a-z</tt>, <tt>0-9</tt>, and <tt>-</tt> (hyphen) and how to specify
--   internationalized domain names, see <a>DNS Domain Name Format</a> in
--   the <i>Amazon Route 53 Developer Guide</i>.
--   
--   You can use the asterisk (*) wildcard to replace the leftmost label in
--   a domain name, for example, <tt>*.example.com</tt>. Note the
--   following:
--   
--   <ul>
--   <li>The * must replace the entire label. For example, you can't
--   specify <tt>*prod.example.com</tt> or <tt>prod*.example.com</tt>.</li>
--   <li>The * can't replace any of the middle labels, for example,
--   marketing.*.example.com.</li>
--   <li>If you include * in any position other than the leftmost label in
--   a domain name, DNS treats it as an * character (ASCII 42), not as a
--   wildcard.You can't use the * wildcard for resource records sets that
--   have a type of NS.</li>
--   </ul>
--   
--   You can use the * wildcard as the leftmost label in a domain name, for
--   example, <tt>*.example.com</tt>. You can't use an * for one of the
--   middle labels, for example, <tt>marketing.*.example.com</tt>. In
--   addition, the * must replace the entire label; for example, you can't
--   specify <tt>prod*.example.com</tt>.
--   
--   <a>$sel:type':ResourceRecordSet'</a>, <a>resourceRecordSet_type</a> -
--   The DNS record type. For information about different record types and
--   how data is encoded for them, see <a>Supported DNS Resource Record
--   Types</a> in the <i>Amazon Route 53 Developer Guide</i>.
--   
--   Valid values for basic resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>CAA</tt> | <tt>CNAME</tt> | <tt>DS</tt>
--   |<tt>MX</tt> | <tt>NAPTR</tt> | <tt>NS</tt> | <tt>PTR</tt> |
--   <tt>SOA</tt> | <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   Values for weighted, latency, geolocation, and failover resource
--   record sets: <tt>A</tt> | <tt>AAAA</tt> | <tt>CAA</tt> |
--   <tt>CNAME</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>. When creating a group of
--   weighted, latency, geolocation, or failover resource record sets,
--   specify the same value for all of the resource record sets in the
--   group.
--   
--   Valid values for multivalue answer resource record sets: <tt>A</tt> |
--   <tt>AAAA</tt> | <tt>MX</tt> | <tt>NAPTR</tt> | <tt>PTR</tt> |
--   <tt>SPF</tt> | <tt>SRV</tt> | <tt>TXT</tt>
--   
--   SPF records were formerly used to verify the identity of the sender of
--   email messages. However, we no longer recommend that you create
--   resource record sets for which the value of <tt>Type</tt> is
--   <tt>SPF</tt>. RFC 7208, /Sender Policy Framework (SPF) for Authorizing
--   Use of Domains in Email, Version 1/, has been updated to say,
--   "...[I]ts existence and mechanism defined in [RFC4408] have led to
--   some interoperability issues. Accordingly, its use is no longer
--   appropriate for SPF version 1; implementations are not to use it." In
--   RFC 7208, see section 14.1, <a>The SPF DNS Record Type</a>.
--   
--   Values for alias resource record sets:
--   
--   <ul>
--   <li><b>Amazon API Gateway custom regional APIs and edge-optimized
--   APIs:</b> <tt>A</tt></li>
--   <li><b>CloudFront distributions:</b> <tt>A</tt>If IPv6 is enabled for
--   the distribution, create two resource record sets to route traffic to
--   your distribution, one with a value of <tt>A</tt> and one with a value
--   of <tt>AAAA</tt>.</li>
--   <li>__Amazon API Gateway environment that has a regionalized
--   subdomain__: <tt>A</tt></li>
--   <li><b>ELB load balancers:</b> <tt>A</tt> | <tt>AAAA</tt></li>
--   <li><b>Amazon S3 buckets:</b> <tt>A</tt></li>
--   <li><b>Amazon Virtual Private Cloud interface VPC endpoints</b>
--   <tt>A</tt></li>
--   <li><b>Another resource record set in this hosted zone:</b> Specify
--   the type of the resource record set that you're creating the alias
--   for. All values are supported except <tt>NS</tt> and <tt>SOA</tt>.If
--   you're creating an alias record that has the same name as the hosted
--   zone (known as the zone apex), you can't route traffic to a record for
--   which the value of <tt>Type</tt> is <tt>CNAME</tt>. This is because
--   the alias record must have the same type as the record you're routing
--   traffic to, and creating a CNAME record for the zone apex isn't
--   supported even for an alias record.</li>
--   </ul>
newResourceRecordSet :: Text -> RRType -> ResourceRecordSet

-- | A complex type containing a resource and its associated tags.
--   
--   <i>See:</i> <a>newResourceTagSet</a> smart constructor.
data ResourceTagSet
ResourceTagSet' :: Maybe Text -> Maybe TagResourceType -> Maybe (NonEmpty Tag) -> ResourceTagSet

-- | Create a value of <a>ResourceTagSet</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceId:ResourceTagSet'</a>,
--   <a>resourceTagSet_resourceId</a> - The ID for the specified resource.
--   
--   <a>$sel:resourceType:ResourceTagSet'</a>,
--   <a>resourceTagSet_resourceType</a> - The type of the resource.
--   
--   <ul>
--   <li>The resource type for health checks is <tt>healthcheck</tt>.</li>
--   <li>The resource type for hosted zones is <tt>hostedzone</tt>.</li>
--   </ul>
--   
--   <a>$sel:tags:ResourceTagSet'</a>, <a>resourceTagSet_tags</a> - The
--   tags associated with the specified resource.
newResourceTagSet :: ResourceTagSet

-- | A complex type that contains the type of limit that you specified in
--   the request and the current value for that limit.
--   
--   <i>See:</i> <a>newReusableDelegationSetLimit</a> smart constructor.
data ReusableDelegationSetLimit
ReusableDelegationSetLimit' :: ReusableDelegationSetLimitType -> Natural -> ReusableDelegationSetLimit

-- | Create a value of <a>ReusableDelegationSetLimit</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':ReusableDelegationSetLimit'</a>,
--   <a>reusableDelegationSetLimit_type</a> - The limit that you requested:
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt>, the maximum number of
--   hosted zones that you can associate with the specified reusable
--   delegation set.
--   
--   <a>$sel:value:ReusableDelegationSetLimit'</a>,
--   <a>reusableDelegationSetLimit_value</a> - The current value for the
--   <tt>MAX_ZONES_BY_REUSABLE_DELEGATION_SET</tt> limit.
newReusableDelegationSetLimit :: ReusableDelegationSetLimitType -> Natural -> ReusableDelegationSetLimit

-- | A complex type that contains the status that one Amazon Route 53
--   health checker reports and the time of the health check.
--   
--   <i>See:</i> <a>newStatusReport</a> smart constructor.
data StatusReport
StatusReport' :: Maybe Text -> Maybe ISO8601 -> StatusReport

-- | Create a value of <a>StatusReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:StatusReport'</a>, <a>statusReport_status</a> - A
--   description of the status of the health check endpoint as reported by
--   one of the Amazon Route 53 health checkers.
--   
--   <a>$sel:checkedTime:StatusReport'</a>, <a>statusReport_checkedTime</a>
--   - The date and time that the health checker performed the health check
--   in <a>ISO 8601 format</a> and Coordinated Universal Time (UTC). For
--   example, the value <tt>2017-03-27T17:48:16.751Z</tt> represents March
--   27, 2017 at 17:48:16.751 UTC.
newStatusReport :: StatusReport

-- | A complex type that contains information about a tag that you want to
--   add or edit for the specified health check or hosted zone.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of <tt>Value</tt>
--   depends on the operation that you want to perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Value</tt>
--   is the value that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Value</tt> is the new value that you want
--   to assign the tag.</li>
--   </ul>
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The value of <tt>Key</tt>
--   depends on the operation that you want to perform:
--   
--   <ul>
--   <li><b>Add a tag to a health check or hosted zone</b>: <tt>Key</tt> is
--   the name that you want to give the new tag.</li>
--   <li><b>Edit a tag</b>: <tt>Key</tt> is the name of the tag that you
--   want to change the <tt>Value</tt> for.</li>
--   <li><b>Delete a key</b>: <tt>Key</tt> is the name of the tag you want
--   to remove.</li>
--   <li><b>Give a name to a health check</b>: Edit the default
--   <tt>Name</tt> tag. In the Amazon Route 53 console, the list of your
--   health checks includes a <b>Name</b> column that lets you see the name
--   that you've given to each health check.</li>
--   </ul>
newTag :: Tag

-- | A complex type that contains settings for a traffic policy.
--   
--   <i>See:</i> <a>newTrafficPolicy</a> smart constructor.
data TrafficPolicy
TrafficPolicy' :: Maybe Text -> Text -> Natural -> Text -> RRType -> Text -> TrafficPolicy

-- | Create a value of <a>TrafficPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:comment:TrafficPolicy'</a>, <a>trafficPolicy_comment</a> - The
--   comment that you specify in the <tt>CreateTrafficPolicy</tt> request,
--   if any.
--   
--   <a>$sel:id:TrafficPolicy'</a>, <a>trafficPolicy_id</a> - The ID that
--   Amazon Route 53 assigned to a traffic policy when you created it.
--   
--   <a>$sel:version:TrafficPolicy'</a>, <a>trafficPolicy_version</a> - The
--   version number that Amazon Route 53 assigns to a traffic policy. For a
--   new traffic policy, the value of <tt>Version</tt> is always 1.
--   
--   <a>$sel:name:TrafficPolicy'</a>, <a>trafficPolicy_name</a> - The name
--   that you specified when you created the traffic policy.
--   
--   <a>$sel:type':TrafficPolicy'</a>, <a>trafficPolicy_type</a> - The DNS
--   type of the resource record sets that Amazon Route 53 creates when you
--   use a traffic policy to create a traffic policy instance.
--   
--   <a>$sel:document:TrafficPolicy'</a>, <a>trafficPolicy_document</a> -
--   The definition of a traffic policy in JSON format. You specify the
--   JSON document to use for a new traffic policy in the
--   <tt>CreateTrafficPolicy</tt> request. For more information about the
--   JSON format, see <a>Traffic Policy Document Format</a>.
newTrafficPolicy :: Text -> Natural -> Text -> RRType -> Text -> TrafficPolicy

-- | A complex type that contains settings for the new traffic policy
--   instance.
--   
--   <i>See:</i> <a>newTrafficPolicyInstance</a> smart constructor.
data TrafficPolicyInstance
TrafficPolicyInstance' :: Text -> ResourceId -> Text -> Natural -> Text -> Text -> Text -> Natural -> RRType -> TrafficPolicyInstance

-- | Create a value of <a>TrafficPolicyInstance</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:TrafficPolicyInstance'</a>, <a>trafficPolicyInstance_id</a>
--   - The ID that Amazon Route 53 assigned to the new traffic policy
--   instance.
--   
--   <a>$sel:hostedZoneId:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_hostedZoneId</a> - The ID of the hosted zone
--   that Amazon Route 53 created resource record sets in.
--   
--   <a>$sel:name:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_name</a> - The DNS name, such as
--   www.example.com, for which Amazon Route 53 responds to queries by
--   using the resource record sets that are associated with this traffic
--   policy instance.
--   
--   <a>$sel:ttl:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_ttl</a> - The TTL that Amazon Route 53
--   assigned to all of the resource record sets that it created in the
--   specified hosted zone.
--   
--   <a>$sel:state:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_state</a> - The value of <tt>State</tt> is
--   one of the following values:
--   
--   <ul>
--   <li><i>Applied</i> Amazon Route 53 has finished creating resource
--   record sets, and changes have propagated to all Route 53 edge
--   locations.</li>
--   <li><i>Creating</i> Route 53 is creating the resource record sets. Use
--   <tt>GetTrafficPolicyInstance</tt> to confirm that the
--   <tt>CreateTrafficPolicyInstance</tt> request completed
--   successfully.</li>
--   <li><i>Failed</i> Route 53 wasn't able to create or update the
--   resource record sets. When the value of <tt>State</tt> is
--   <tt>Failed</tt>, see <tt>Message</tt> for an explanation of what
--   caused the request to fail.</li>
--   </ul>
--   
--   <a>$sel:message:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_message</a> - If <tt>State</tt> is
--   <tt>Failed</tt>, an explanation of the reason for the failure. If
--   <tt>State</tt> is another value, <tt>Message</tt> is empty.
--   
--   <a>$sel:trafficPolicyId:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_trafficPolicyId</a> - The ID of the traffic
--   policy that Amazon Route 53 used to create resource record sets in the
--   specified hosted zone.
--   
--   <a>$sel:trafficPolicyVersion:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_trafficPolicyVersion</a> - The version of the
--   traffic policy that Amazon Route 53 used to create resource record
--   sets in the specified hosted zone.
--   
--   <a>$sel:trafficPolicyType:TrafficPolicyInstance'</a>,
--   <a>trafficPolicyInstance_trafficPolicyType</a> - The DNS type that
--   Amazon Route 53 assigned to all of the resource record sets that it
--   created for this traffic policy instance.
newTrafficPolicyInstance :: Text -> ResourceId -> Text -> Natural -> Text -> Text -> Text -> Natural -> RRType -> TrafficPolicyInstance

-- | A complex type that contains information about the latest version of
--   one traffic policy that is associated with the current Amazon Web
--   Services account.
--   
--   <i>See:</i> <a>newTrafficPolicySummary</a> smart constructor.
data TrafficPolicySummary
TrafficPolicySummary' :: Text -> Text -> RRType -> Natural -> Natural -> TrafficPolicySummary

-- | Create a value of <a>TrafficPolicySummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:TrafficPolicySummary'</a>, <a>trafficPolicySummary_id</a> -
--   The ID that Amazon Route 53 assigned to the traffic policy when you
--   created it.
--   
--   <a>$sel:name:TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_name</a> - The name that you specified for the
--   traffic policy when you created it.
--   
--   <a>$sel:type':TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_type</a> - The DNS type of the resource record
--   sets that Amazon Route 53 creates when you use a traffic policy to
--   create a traffic policy instance.
--   
--   <a>$sel:latestVersion:TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_latestVersion</a> - The version number of the
--   latest version of the traffic policy.
--   
--   <a>$sel:trafficPolicyCount:TrafficPolicySummary'</a>,
--   <a>trafficPolicySummary_trafficPolicyCount</a> - The number of traffic
--   policies that are associated with the current Amazon Web Services
--   account.
newTrafficPolicySummary :: Text -> Text -> RRType -> Natural -> Natural -> TrafficPolicySummary

-- | (Private hosted zones only) A complex type that contains information
--   about an Amazon VPC.
--   
--   <i>See:</i> <a>newVPC</a> smart constructor.
data VPC
VPC' :: Maybe VPCRegion -> Maybe Text -> VPC

-- | Create a value of <a>VPC</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vPCRegion:VPC'</a>, <a>vpc_vPCRegion</a> - (Private hosted
--   zones only) The region that an Amazon VPC was created in.
--   
--   <a>$sel:vPCId:VPC'</a>, <a>vpc_vPCId</a> - Undocumented member.
newVPC :: VPC
