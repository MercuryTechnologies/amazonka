-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-secretsmanagerZSamazonka-secretsmanager
@version 1.6.1


module Network.AWS.SecretsManager.Types.FilterNameStringType
newtype FilterNameStringType
FilterNameStringType' :: Text -> FilterNameStringType
[fromFilterNameStringType] :: FilterNameStringType -> Text
pattern FilterNameStringType_All :: FilterNameStringType
pattern FilterNameStringType_Description :: FilterNameStringType
pattern FilterNameStringType_Name :: FilterNameStringType
pattern FilterNameStringType_Primary_region :: FilterNameStringType
pattern FilterNameStringType_Tag_key :: FilterNameStringType
pattern FilterNameStringType_Tag_value :: FilterNameStringType
instance Network.AWS.Data.XML.ToXML Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Network.AWS.Data.XML.FromXML Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Network.AWS.Data.Log.ToLog Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Network.AWS.Data.Text.ToText Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Network.AWS.Data.Text.FromText Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance GHC.Generics.Generic Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance GHC.Classes.Ord Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance GHC.Classes.Eq Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance GHC.Read.Read Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType
instance GHC.Show.Show Network.AWS.SecretsManager.Types.FilterNameStringType.FilterNameStringType


module Network.AWS.SecretsManager.Types.Filter

-- | Allows you to add filters when you use the search function in Secrets
--   Manager.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe FilterNameStringType -> Maybe (NonEmpty Text) -> Filter

-- | Filters your list of secrets by a specific key.
[$sel:key:Filter'] :: Filter -> Maybe FilterNameStringType

-- | Filters your list of secrets by a specific value.
--   
--   You can prefix your search value with an exclamation mark (<tt>!</tt>)
--   in order to perform negation filters.
[$sel:values:Filter'] :: Filter -> Maybe (NonEmpty Text)

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Filter'</a>, <a>filter_key</a> - Filters your list of
--   secrets by a specific key.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - Filters your list
--   of secrets by a specific value.
--   
--   You can prefix your search value with an exclamation mark (<tt>!</tt>)
--   in order to perform negation filters.
newFilter :: Filter

-- | Filters your list of secrets by a specific key.
filter_key :: Lens' Filter (Maybe FilterNameStringType)

-- | Filters your list of secrets by a specific value.
--   
--   You can prefix your search value with an exclamation mark (<tt>!</tt>)
--   in order to perform negation filters.
filter_values :: Lens' Filter (Maybe (NonEmpty Text))
instance GHC.Generics.Generic Network.AWS.SecretsManager.Types.Filter.Filter
instance GHC.Show.Show Network.AWS.SecretsManager.Types.Filter.Filter
instance GHC.Read.Read Network.AWS.SecretsManager.Types.Filter.Filter
instance GHC.Classes.Eq Network.AWS.SecretsManager.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.Types.Filter.Filter
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.Types.Filter.Filter
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.Types.Filter.Filter


module Network.AWS.SecretsManager.Types.ReplicaRegionType

-- | (Optional) Custom type consisting of a <tt>Region</tt> (required) and
--   the <tt>KmsKeyId</tt> which can be an <tt>ARN</tt>, <tt>Key ID</tt>,
--   or <tt>Alias</tt>.
--   
--   <i>See:</i> <a>newReplicaRegionType</a> smart constructor.
data ReplicaRegionType
ReplicaRegionType' :: Maybe Text -> Maybe Text -> ReplicaRegionType

-- | Can be an <tt>ARN</tt>, <tt>Key ID</tt>, or <tt>Alias</tt>.
[$sel:kmsKeyId:ReplicaRegionType'] :: ReplicaRegionType -> Maybe Text

-- | Describes a single instance of Region objects.
[$sel:region:ReplicaRegionType'] :: ReplicaRegionType -> Maybe Text

-- | Create a value of <a>ReplicaRegionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:ReplicaRegionType'</a>,
--   <a>replicaRegionType_kmsKeyId</a> - Can be an <tt>ARN</tt>, <tt>Key
--   ID</tt>, or <tt>Alias</tt>.
--   
--   <a>$sel:region:ReplicaRegionType'</a>, <a>replicaRegionType_region</a>
--   - Describes a single instance of Region objects.
newReplicaRegionType :: ReplicaRegionType

-- | Can be an <tt>ARN</tt>, <tt>Key ID</tt>, or <tt>Alias</tt>.
replicaRegionType_kmsKeyId :: Lens' ReplicaRegionType (Maybe Text)

-- | Describes a single instance of Region objects.
replicaRegionType_region :: Lens' ReplicaRegionType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.SecretsManager.Types.ReplicaRegionType.ReplicaRegionType
instance GHC.Show.Show Network.AWS.SecretsManager.Types.ReplicaRegionType.ReplicaRegionType
instance GHC.Read.Read Network.AWS.SecretsManager.Types.ReplicaRegionType.ReplicaRegionType
instance GHC.Classes.Eq Network.AWS.SecretsManager.Types.ReplicaRegionType.ReplicaRegionType
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.Types.ReplicaRegionType.ReplicaRegionType
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.Types.ReplicaRegionType.ReplicaRegionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.Types.ReplicaRegionType.ReplicaRegionType


module Network.AWS.SecretsManager.Types.RotationRulesType

-- | A structure that defines the rotation configuration for the secret.
--   
--   <i>See:</i> <a>newRotationRulesType</a> smart constructor.
data RotationRulesType
RotationRulesType' :: Maybe Natural -> RotationRulesType

-- | Specifies the number of days between automatic scheduled rotations of
--   the secret.
--   
--   Secrets Manager schedules the next rotation when the previous one is
--   complete. Secrets Manager schedules the date by adding the rotation
--   interval (number of days) to the actual date of the last rotation. The
--   service chooses the hour within that 24-hour date window randomly. The
--   minute is also chosen somewhat randomly, but weighted towards the top
--   of the hour and influenced by a variety of factors that help
--   distribute load.
[$sel:automaticallyAfterDays:RotationRulesType'] :: RotationRulesType -> Maybe Natural

-- | Create a value of <a>RotationRulesType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:automaticallyAfterDays:RotationRulesType'</a>,
--   <a>rotationRulesType_automaticallyAfterDays</a> - Specifies the number
--   of days between automatic scheduled rotations of the secret.
--   
--   Secrets Manager schedules the next rotation when the previous one is
--   complete. Secrets Manager schedules the date by adding the rotation
--   interval (number of days) to the actual date of the last rotation. The
--   service chooses the hour within that 24-hour date window randomly. The
--   minute is also chosen somewhat randomly, but weighted towards the top
--   of the hour and influenced by a variety of factors that help
--   distribute load.
newRotationRulesType :: RotationRulesType

-- | Specifies the number of days between automatic scheduled rotations of
--   the secret.
--   
--   Secrets Manager schedules the next rotation when the previous one is
--   complete. Secrets Manager schedules the date by adding the rotation
--   interval (number of days) to the actual date of the last rotation. The
--   service chooses the hour within that 24-hour date window randomly. The
--   minute is also chosen somewhat randomly, but weighted towards the top
--   of the hour and influenced by a variety of factors that help
--   distribute load.
rotationRulesType_automaticallyAfterDays :: Lens' RotationRulesType (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.SecretsManager.Types.RotationRulesType.RotationRulesType
instance GHC.Show.Show Network.AWS.SecretsManager.Types.RotationRulesType.RotationRulesType
instance GHC.Read.Read Network.AWS.SecretsManager.Types.RotationRulesType.RotationRulesType
instance GHC.Classes.Eq Network.AWS.SecretsManager.Types.RotationRulesType.RotationRulesType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SecretsManager.Types.RotationRulesType.RotationRulesType
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.Types.RotationRulesType.RotationRulesType
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.Types.RotationRulesType.RotationRulesType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.Types.RotationRulesType.RotationRulesType


module Network.AWS.SecretsManager.Types.SecretVersionsListEntry

-- | A structure that contains information about one version of a secret.
--   
--   <i>See:</i> <a>newSecretVersionsListEntry</a> smart constructor.
data SecretVersionsListEntry
SecretVersionsListEntry' :: Maybe POSIX -> Maybe [Text] -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe POSIX -> SecretVersionsListEntry

-- | The date and time this version of the secret was created.
[$sel:createdDate:SecretVersionsListEntry'] :: SecretVersionsListEntry -> Maybe POSIX

-- | The KMS keys used to encrypt the secret version.
[$sel:kmsKeyIds:SecretVersionsListEntry'] :: SecretVersionsListEntry -> Maybe [Text]

-- | An array of staging labels that are currently associated with this
--   version of the secret.
[$sel:versionStages:SecretVersionsListEntry'] :: SecretVersionsListEntry -> Maybe (NonEmpty Text)

-- | The unique version identifier of this version of the secret.
[$sel:versionId:SecretVersionsListEntry'] :: SecretVersionsListEntry -> Maybe Text

-- | The date that this version of the secret was last accessed. Note that
--   the resolution of this field is at the date level and does not include
--   the time.
[$sel:lastAccessedDate:SecretVersionsListEntry'] :: SecretVersionsListEntry -> Maybe POSIX

-- | Create a value of <a>SecretVersionsListEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_createdDate</a> - The date and time this
--   version of the secret was created.
--   
--   <a>$sel:kmsKeyIds:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_kmsKeyIds</a> - The KMS keys used to
--   encrypt the secret version.
--   
--   <a>$sel:versionStages:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_versionStages</a> - An array of staging
--   labels that are currently associated with this version of the secret.
--   
--   <a>$sel:versionId:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_versionId</a> - The unique version
--   identifier of this version of the secret.
--   
--   <a>$sel:lastAccessedDate:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_lastAccessedDate</a> - The date that this
--   version of the secret was last accessed. Note that the resolution of
--   this field is at the date level and does not include the time.
newSecretVersionsListEntry :: SecretVersionsListEntry

-- | The date and time this version of the secret was created.
secretVersionsListEntry_createdDate :: Lens' SecretVersionsListEntry (Maybe UTCTime)

-- | The KMS keys used to encrypt the secret version.
secretVersionsListEntry_kmsKeyIds :: Lens' SecretVersionsListEntry (Maybe [Text])

-- | An array of staging labels that are currently associated with this
--   version of the secret.
secretVersionsListEntry_versionStages :: Lens' SecretVersionsListEntry (Maybe (NonEmpty Text))

-- | The unique version identifier of this version of the secret.
secretVersionsListEntry_versionId :: Lens' SecretVersionsListEntry (Maybe Text)

-- | The date that this version of the secret was last accessed. Note that
--   the resolution of this field is at the date level and does not include
--   the time.
secretVersionsListEntry_lastAccessedDate :: Lens' SecretVersionsListEntry (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.SecretsManager.Types.SecretVersionsListEntry.SecretVersionsListEntry
instance GHC.Show.Show Network.AWS.SecretsManager.Types.SecretVersionsListEntry.SecretVersionsListEntry
instance GHC.Read.Read Network.AWS.SecretsManager.Types.SecretVersionsListEntry.SecretVersionsListEntry
instance GHC.Classes.Eq Network.AWS.SecretsManager.Types.SecretVersionsListEntry.SecretVersionsListEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SecretsManager.Types.SecretVersionsListEntry.SecretVersionsListEntry
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.Types.SecretVersionsListEntry.SecretVersionsListEntry
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.Types.SecretVersionsListEntry.SecretVersionsListEntry


module Network.AWS.SecretsManager.Types.SortOrderType
newtype SortOrderType
SortOrderType' :: Text -> SortOrderType
[fromSortOrderType] :: SortOrderType -> Text
pattern SortOrderType_Asc :: SortOrderType
pattern SortOrderType_Desc :: SortOrderType
instance Network.AWS.Data.XML.ToXML Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Network.AWS.Data.XML.FromXML Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Network.AWS.Data.Log.ToLog Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Network.AWS.Data.Text.ToText Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Network.AWS.Data.Text.FromText Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance GHC.Generics.Generic Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance GHC.Classes.Ord Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance GHC.Classes.Eq Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance GHC.Read.Read Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType
instance GHC.Show.Show Network.AWS.SecretsManager.Types.SortOrderType.SortOrderType


module Network.AWS.SecretsManager.Types.StatusType
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_Failed :: StatusType
pattern StatusType_InProgress :: StatusType
pattern StatusType_InSync :: StatusType
instance Network.AWS.Data.XML.ToXML Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Network.AWS.Data.XML.FromXML Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Network.AWS.Data.Log.ToLog Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Network.AWS.Data.Text.ToText Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Network.AWS.Data.Text.FromText Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.Types.StatusType.StatusType
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.Types.StatusType.StatusType
instance GHC.Generics.Generic Network.AWS.SecretsManager.Types.StatusType.StatusType
instance GHC.Classes.Ord Network.AWS.SecretsManager.Types.StatusType.StatusType
instance GHC.Classes.Eq Network.AWS.SecretsManager.Types.StatusType.StatusType
instance GHC.Read.Read Network.AWS.SecretsManager.Types.StatusType.StatusType
instance GHC.Show.Show Network.AWS.SecretsManager.Types.StatusType.StatusType


module Network.AWS.SecretsManager.Types.ReplicationStatusType

-- | A replication object consisting of a <tt>RegionReplicationStatus</tt>
--   object and includes a Region, KMSKeyId, status, and status message.
--   
--   <i>See:</i> <a>newReplicationStatusType</a> smart constructor.
data ReplicationStatusType
ReplicationStatusType' :: Maybe Text -> Maybe StatusType -> Maybe Text -> Maybe POSIX -> Maybe Text -> ReplicationStatusType

-- | Status message such as "/Secret with this name already exists in this
--   region/".
[$sel:statusMessage:ReplicationStatusType'] :: ReplicationStatusType -> Maybe Text

-- | The status can be <tt>InProgress</tt>, <tt>Failed</tt>, or
--   <tt>InSync</tt>.
[$sel:status:ReplicationStatusType'] :: ReplicationStatusType -> Maybe StatusType

-- | Can be an <tt>ARN</tt>, <tt>Key ID</tt>, or <tt>Alias</tt>.
[$sel:kmsKeyId:ReplicationStatusType'] :: ReplicationStatusType -> Maybe Text

-- | The date that you last accessed the secret in the Region.
[$sel:lastAccessedDate:ReplicationStatusType'] :: ReplicationStatusType -> Maybe POSIX

-- | The Region where replication occurs.
[$sel:region:ReplicationStatusType'] :: ReplicationStatusType -> Maybe Text

-- | Create a value of <a>ReplicationStatusType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:ReplicationStatusType'</a>,
--   <a>replicationStatusType_statusMessage</a> - Status message such as
--   "/Secret with this name already exists in this region/".
--   
--   <a>$sel:status:ReplicationStatusType'</a>,
--   <a>replicationStatusType_status</a> - The status can be
--   <tt>InProgress</tt>, <tt>Failed</tt>, or <tt>InSync</tt>.
--   
--   <a>$sel:kmsKeyId:ReplicationStatusType'</a>,
--   <a>replicationStatusType_kmsKeyId</a> - Can be an <tt>ARN</tt>,
--   <tt>Key ID</tt>, or <tt>Alias</tt>.
--   
--   <a>$sel:lastAccessedDate:ReplicationStatusType'</a>,
--   <a>replicationStatusType_lastAccessedDate</a> - The date that you last
--   accessed the secret in the Region.
--   
--   <a>$sel:region:ReplicationStatusType'</a>,
--   <a>replicationStatusType_region</a> - The Region where replication
--   occurs.
newReplicationStatusType :: ReplicationStatusType

-- | Status message such as "/Secret with this name already exists in this
--   region/".
replicationStatusType_statusMessage :: Lens' ReplicationStatusType (Maybe Text)

-- | The status can be <tt>InProgress</tt>, <tt>Failed</tt>, or
--   <tt>InSync</tt>.
replicationStatusType_status :: Lens' ReplicationStatusType (Maybe StatusType)

-- | Can be an <tt>ARN</tt>, <tt>Key ID</tt>, or <tt>Alias</tt>.
replicationStatusType_kmsKeyId :: Lens' ReplicationStatusType (Maybe Text)

-- | The date that you last accessed the secret in the Region.
replicationStatusType_lastAccessedDate :: Lens' ReplicationStatusType (Maybe UTCTime)

-- | The Region where replication occurs.
replicationStatusType_region :: Lens' ReplicationStatusType (Maybe Text)
instance GHC.Generics.Generic Network.AWS.SecretsManager.Types.ReplicationStatusType.ReplicationStatusType
instance GHC.Show.Show Network.AWS.SecretsManager.Types.ReplicationStatusType.ReplicationStatusType
instance GHC.Read.Read Network.AWS.SecretsManager.Types.ReplicationStatusType.ReplicationStatusType
instance GHC.Classes.Eq Network.AWS.SecretsManager.Types.ReplicationStatusType.ReplicationStatusType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SecretsManager.Types.ReplicationStatusType.ReplicationStatusType
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.Types.ReplicationStatusType.ReplicationStatusType
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.Types.ReplicationStatusType.ReplicationStatusType


module Network.AWS.SecretsManager.Types.Tag

-- | A structure that contains information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The key identifier, or name, of the tag.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | The string value associated with the key of the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key identifier, or name, of
--   the tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The string value associated
--   with the key of the tag.
newTag :: Tag

-- | The key identifier, or name, of the tag.
tag_key :: Lens' Tag (Maybe Text)

-- | The string value associated with the key of the tag.
tag_value :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Network.AWS.SecretsManager.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.SecretsManager.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.SecretsManager.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.SecretsManager.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SecretsManager.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.Types.Tag.Tag


module Network.AWS.SecretsManager.Types.SecretListEntry

-- | A structure that contains the details about a secret. It does not
--   include the encrypted <tt>SecretString</tt> and <tt>SecretBinary</tt>
--   values. To get those values, use the GetSecretValue operation.
--   
--   <i>See:</i> <a>newSecretListEntry</a> smart constructor.
data SecretListEntry
SecretListEntry' :: Maybe POSIX -> Maybe Text -> Maybe (HashMap Text (NonEmpty Text)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe [Tag] -> Maybe Bool -> Maybe RotationRulesType -> Maybe Text -> Maybe Text -> Maybe POSIX -> SecretListEntry

-- | The date and time when a secret was created.
[$sel:createdDate:SecretListEntry'] :: SecretListEntry -> Maybe POSIX

-- | Returns the name of the service that created the secret.
[$sel:owningService:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | A list of all of the currently assigned <tt>SecretVersionStage</tt>
--   staging labels and the <tt>SecretVersionId</tt> attached to each one.
--   Staging labels are used to keep track of the different versions during
--   the rotation process.
--   
--   A version that does not have any <tt>SecretVersionStage</tt> is
--   considered deprecated and subject to deletion. Such versions are not
--   included in this list.
[$sel:secretVersionsToStages:SecretListEntry'] :: SecretListEntry -> Maybe (HashMap Text (NonEmpty Text))

-- | The most recent date and time that the Secrets Manager rotation
--   process was successfully completed. This value is null if the secret
--   hasn't ever rotated.
[$sel:lastRotatedDate:SecretListEntry'] :: SecretListEntry -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the secret.
--   
--   For more information about ARNs in Secrets Manager, see <a>Policy
--   Resources</a> in the <i>Amazon Web Services Secrets Manager User
--   Guide</i>.
[$sel:arn:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The ARN or alias of the Amazon Web Services KMS customer master key
--   (CMK) used to encrypt the <tt>SecretString</tt> and
--   <tt>SecretBinary</tt> fields in each version of the secret. If you
--   don't provide a key, then Secrets Manager defaults to encrypting the
--   secret fields with the default KMS CMK, the key named
--   <tt>awssecretsmanager</tt>, for this account.
[$sel:kmsKeyId:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The friendly name of the secret. You can use forward slashes in the
--   name to represent a path hierarchy. For example,
--   <tt>/prod/databases/dbserver1</tt> could represent the secret for a
--   server named <tt>dbserver1</tt> in the folder <tt>databases</tt> in
--   the folder <tt>prod</tt>.
[$sel:name:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The Region where Secrets Manager originated the secret.
[$sel:primaryRegion:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The last date and time that this secret was modified in any way.
[$sel:lastChangedDate:SecretListEntry'] :: SecretListEntry -> Maybe POSIX

-- | The date and time the deletion of the secret occurred. Not present on
--   active secrets. The secret can be recovered until the number of days
--   in the recovery window has passed, as specified in the
--   <tt>RecoveryWindowInDays</tt> parameter of the DeleteSecret operation.
[$sel:deletedDate:SecretListEntry'] :: SecretListEntry -> Maybe POSIX

-- | The list of user-defined tags associated with the secret. To add tags
--   to a secret, use TagResource. To remove tags, use UntagResource.
[$sel:tags:SecretListEntry'] :: SecretListEntry -> Maybe [Tag]

-- | Indicates whether automatic, scheduled rotation is enabled for this
--   secret.
[$sel:rotationEnabled:SecretListEntry'] :: SecretListEntry -> Maybe Bool

-- | A structure that defines the rotation configuration for the secret.
[$sel:rotationRules:SecretListEntry'] :: SecretListEntry -> Maybe RotationRulesType

-- | The user-provided description of the secret.
[$sel:description:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The ARN of an Amazon Web Services Lambda function invoked by Secrets
--   Manager to rotate and expire the secret either automatically per the
--   schedule or manually by a call to RotateSecret.
[$sel:rotationLambdaARN:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The last date that this secret was accessed. This value is truncated
--   to midnight of the date and therefore shows only the date, not the
--   time.
[$sel:lastAccessedDate:SecretListEntry'] :: SecretListEntry -> Maybe POSIX

-- | Create a value of <a>SecretListEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:SecretListEntry'</a>,
--   <a>secretListEntry_createdDate</a> - The date and time when a secret
--   was created.
--   
--   <a>$sel:owningService:SecretListEntry'</a>,
--   <a>secretListEntry_owningService</a> - Returns the name of the service
--   that created the secret.
--   
--   <a>$sel:secretVersionsToStages:SecretListEntry'</a>,
--   <a>secretListEntry_secretVersionsToStages</a> - A list of all of the
--   currently assigned <tt>SecretVersionStage</tt> staging labels and the
--   <tt>SecretVersionId</tt> attached to each one. Staging labels are used
--   to keep track of the different versions during the rotation process.
--   
--   A version that does not have any <tt>SecretVersionStage</tt> is
--   considered deprecated and subject to deletion. Such versions are not
--   included in this list.
--   
--   <a>$sel:lastRotatedDate:SecretListEntry'</a>,
--   <a>secretListEntry_lastRotatedDate</a> - The most recent date and time
--   that the Secrets Manager rotation process was successfully completed.
--   This value is null if the secret hasn't ever rotated.
--   
--   <a>$sel:arn:SecretListEntry'</a>, <a>secretListEntry_arn</a> - The
--   Amazon Resource Name (ARN) of the secret.
--   
--   For more information about ARNs in Secrets Manager, see <a>Policy
--   Resources</a> in the <i>Amazon Web Services Secrets Manager User
--   Guide</i>.
--   
--   <a>$sel:kmsKeyId:SecretListEntry'</a>, <a>secretListEntry_kmsKeyId</a>
--   - The ARN or alias of the Amazon Web Services KMS customer master key
--   (CMK) used to encrypt the <tt>SecretString</tt> and
--   <tt>SecretBinary</tt> fields in each version of the secret. If you
--   don't provide a key, then Secrets Manager defaults to encrypting the
--   secret fields with the default KMS CMK, the key named
--   <tt>awssecretsmanager</tt>, for this account.
--   
--   <a>$sel:name:SecretListEntry'</a>, <a>secretListEntry_name</a> - The
--   friendly name of the secret. You can use forward slashes in the name
--   to represent a path hierarchy. For example,
--   <tt>/prod/databases/dbserver1</tt> could represent the secret for a
--   server named <tt>dbserver1</tt> in the folder <tt>databases</tt> in
--   the folder <tt>prod</tt>.
--   
--   <a>$sel:primaryRegion:SecretListEntry'</a>,
--   <a>secretListEntry_primaryRegion</a> - The Region where Secrets
--   Manager originated the secret.
--   
--   <a>$sel:lastChangedDate:SecretListEntry'</a>,
--   <a>secretListEntry_lastChangedDate</a> - The last date and time that
--   this secret was modified in any way.
--   
--   <a>$sel:deletedDate:SecretListEntry'</a>,
--   <a>secretListEntry_deletedDate</a> - The date and time the deletion of
--   the secret occurred. Not present on active secrets. The secret can be
--   recovered until the number of days in the recovery window has passed,
--   as specified in the <tt>RecoveryWindowInDays</tt> parameter of the
--   DeleteSecret operation.
--   
--   <a>$sel:tags:SecretListEntry'</a>, <a>secretListEntry_tags</a> - The
--   list of user-defined tags associated with the secret. To add tags to a
--   secret, use TagResource. To remove tags, use UntagResource.
--   
--   <a>$sel:rotationEnabled:SecretListEntry'</a>,
--   <a>secretListEntry_rotationEnabled</a> - Indicates whether automatic,
--   scheduled rotation is enabled for this secret.
--   
--   <a>$sel:rotationRules:SecretListEntry'</a>,
--   <a>secretListEntry_rotationRules</a> - A structure that defines the
--   rotation configuration for the secret.
--   
--   <a>$sel:description:SecretListEntry'</a>,
--   <a>secretListEntry_description</a> - The user-provided description of
--   the secret.
--   
--   <a>$sel:rotationLambdaARN:SecretListEntry'</a>,
--   <a>secretListEntry_rotationLambdaARN</a> - The ARN of an Amazon Web
--   Services Lambda function invoked by Secrets Manager to rotate and
--   expire the secret either automatically per the schedule or manually by
--   a call to RotateSecret.
--   
--   <a>$sel:lastAccessedDate:SecretListEntry'</a>,
--   <a>secretListEntry_lastAccessedDate</a> - The last date that this
--   secret was accessed. This value is truncated to midnight of the date
--   and therefore shows only the date, not the time.
newSecretListEntry :: SecretListEntry

-- | The date and time when a secret was created.
secretListEntry_createdDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | Returns the name of the service that created the secret.
secretListEntry_owningService :: Lens' SecretListEntry (Maybe Text)

-- | A list of all of the currently assigned <tt>SecretVersionStage</tt>
--   staging labels and the <tt>SecretVersionId</tt> attached to each one.
--   Staging labels are used to keep track of the different versions during
--   the rotation process.
--   
--   A version that does not have any <tt>SecretVersionStage</tt> is
--   considered deprecated and subject to deletion. Such versions are not
--   included in this list.
secretListEntry_secretVersionsToStages :: Lens' SecretListEntry (Maybe (HashMap Text (NonEmpty Text)))

-- | The most recent date and time that the Secrets Manager rotation
--   process was successfully completed. This value is null if the secret
--   hasn't ever rotated.
secretListEntry_lastRotatedDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the secret.
--   
--   For more information about ARNs in Secrets Manager, see <a>Policy
--   Resources</a> in the <i>Amazon Web Services Secrets Manager User
--   Guide</i>.
secretListEntry_arn :: Lens' SecretListEntry (Maybe Text)

-- | The ARN or alias of the Amazon Web Services KMS customer master key
--   (CMK) used to encrypt the <tt>SecretString</tt> and
--   <tt>SecretBinary</tt> fields in each version of the secret. If you
--   don't provide a key, then Secrets Manager defaults to encrypting the
--   secret fields with the default KMS CMK, the key named
--   <tt>awssecretsmanager</tt>, for this account.
secretListEntry_kmsKeyId :: Lens' SecretListEntry (Maybe Text)

-- | The friendly name of the secret. You can use forward slashes in the
--   name to represent a path hierarchy. For example,
--   <tt>/prod/databases/dbserver1</tt> could represent the secret for a
--   server named <tt>dbserver1</tt> in the folder <tt>databases</tt> in
--   the folder <tt>prod</tt>.
secretListEntry_name :: Lens' SecretListEntry (Maybe Text)

-- | The Region where Secrets Manager originated the secret.
secretListEntry_primaryRegion :: Lens' SecretListEntry (Maybe Text)

-- | The last date and time that this secret was modified in any way.
secretListEntry_lastChangedDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | The date and time the deletion of the secret occurred. Not present on
--   active secrets. The secret can be recovered until the number of days
--   in the recovery window has passed, as specified in the
--   <tt>RecoveryWindowInDays</tt> parameter of the DeleteSecret operation.
secretListEntry_deletedDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | The list of user-defined tags associated with the secret. To add tags
--   to a secret, use TagResource. To remove tags, use UntagResource.
secretListEntry_tags :: Lens' SecretListEntry (Maybe [Tag])

-- | Indicates whether automatic, scheduled rotation is enabled for this
--   secret.
secretListEntry_rotationEnabled :: Lens' SecretListEntry (Maybe Bool)

-- | A structure that defines the rotation configuration for the secret.
secretListEntry_rotationRules :: Lens' SecretListEntry (Maybe RotationRulesType)

-- | The user-provided description of the secret.
secretListEntry_description :: Lens' SecretListEntry (Maybe Text)

-- | The ARN of an Amazon Web Services Lambda function invoked by Secrets
--   Manager to rotate and expire the secret either automatically per the
--   schedule or manually by a call to RotateSecret.
secretListEntry_rotationLambdaARN :: Lens' SecretListEntry (Maybe Text)

-- | The last date that this secret was accessed. This value is truncated
--   to midnight of the date and therefore shows only the date, not the
--   time.
secretListEntry_lastAccessedDate :: Lens' SecretListEntry (Maybe UTCTime)
instance GHC.Generics.Generic Network.AWS.SecretsManager.Types.SecretListEntry.SecretListEntry
instance GHC.Show.Show Network.AWS.SecretsManager.Types.SecretListEntry.SecretListEntry
instance GHC.Read.Read Network.AWS.SecretsManager.Types.SecretListEntry.SecretListEntry
instance GHC.Classes.Eq Network.AWS.SecretsManager.Types.SecretListEntry.SecretListEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SecretsManager.Types.SecretListEntry.SecretListEntry
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.Types.SecretListEntry.SecretListEntry
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.Types.SecretListEntry.SecretListEntry


module Network.AWS.SecretsManager.Types.ValidationErrorsEntry

-- | Displays errors that occurred during validation of the resource
--   policy.
--   
--   <i>See:</i> <a>newValidationErrorsEntry</a> smart constructor.
data ValidationErrorsEntry
ValidationErrorsEntry' :: Maybe Text -> Maybe Text -> ValidationErrorsEntry

-- | Checks the name of the policy.
[$sel:checkName:ValidationErrorsEntry'] :: ValidationErrorsEntry -> Maybe Text

-- | Displays error messages if validation encounters problems during
--   validation of the resource policy.
[$sel:errorMessage:ValidationErrorsEntry'] :: ValidationErrorsEntry -> Maybe Text

-- | Create a value of <a>ValidationErrorsEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checkName:ValidationErrorsEntry'</a>,
--   <a>validationErrorsEntry_checkName</a> - Checks the name of the
--   policy.
--   
--   <a>$sel:errorMessage:ValidationErrorsEntry'</a>,
--   <a>validationErrorsEntry_errorMessage</a> - Displays error messages if
--   validation encounters problems during validation of the resource
--   policy.
newValidationErrorsEntry :: ValidationErrorsEntry

-- | Checks the name of the policy.
validationErrorsEntry_checkName :: Lens' ValidationErrorsEntry (Maybe Text)

-- | Displays error messages if validation encounters problems during
--   validation of the resource policy.
validationErrorsEntry_errorMessage :: Lens' ValidationErrorsEntry (Maybe Text)
instance GHC.Generics.Generic Network.AWS.SecretsManager.Types.ValidationErrorsEntry.ValidationErrorsEntry
instance GHC.Show.Show Network.AWS.SecretsManager.Types.ValidationErrorsEntry.ValidationErrorsEntry
instance GHC.Read.Read Network.AWS.SecretsManager.Types.ValidationErrorsEntry.ValidationErrorsEntry
instance GHC.Classes.Eq Network.AWS.SecretsManager.Types.ValidationErrorsEntry.ValidationErrorsEntry
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.SecretsManager.Types.ValidationErrorsEntry.ValidationErrorsEntry
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.Types.ValidationErrorsEntry.ValidationErrorsEntry
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.Types.ValidationErrorsEntry.ValidationErrorsEntry


module Network.AWS.SecretsManager.Types

-- | API version <tt>2017-10-17</tt> of the Amazon Secrets Manager SDK
--   configuration.
defaultService :: Service

-- | Secrets Manager can't encrypt the protected secret text using the
--   provided KMS key. Check that the customer master key (CMK) is
--   available, enabled, and not in an invalid state. For more information,
--   see <a>How Key State Affects Use of a Customer Master Key</a>.
_EncryptionFailure :: AsError a => Getting (First ServiceError) a ServiceError

-- | You provided a resource-based policy with syntax errors.
_MalformedPolicyDocumentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The BlockPublicPolicy parameter is set to true and the resource policy
--   did not prevent broad access to the secret.
_PublicPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Secrets Manager can't decrypt the protected secret text using the
--   provided KMS key.
_DecryptionFailure :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because you did not complete all the prerequisite
--   steps.
_PreconditionNotMetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You provided an invalid <tt>NextToken</tt> value.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You provided an invalid value for a parameter.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You provided a parameter value that is not valid for the current state
--   of the resource.
--   
--   Possible causes:
--   
--   <ul>
--   <li>You tried to perform the operation on a secret that's currently
--   marked deleted.</li>
--   <li>You tried to enable rotation on a secret that doesn't already have
--   a Lambda function ARN configured and you didn't include such an ARN as
--   a parameter in this call.</li>
--   </ul>
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because it would exceed one of the Secrets Manager
--   internal limits.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We can't find the resource that you asked for.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource with the ID you requested already exists.
_ResourceExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error occurred on the server side.
_InternalServiceError :: AsError a => Getting (First ServiceError) a ServiceError
newtype FilterNameStringType
FilterNameStringType' :: Text -> FilterNameStringType
[fromFilterNameStringType] :: FilterNameStringType -> Text
pattern FilterNameStringType_All :: FilterNameStringType
pattern FilterNameStringType_Description :: FilterNameStringType
pattern FilterNameStringType_Name :: FilterNameStringType
pattern FilterNameStringType_Primary_region :: FilterNameStringType
pattern FilterNameStringType_Tag_key :: FilterNameStringType
pattern FilterNameStringType_Tag_value :: FilterNameStringType
newtype SortOrderType
SortOrderType' :: Text -> SortOrderType
[fromSortOrderType] :: SortOrderType -> Text
pattern SortOrderType_Asc :: SortOrderType
pattern SortOrderType_Desc :: SortOrderType
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_Failed :: StatusType
pattern StatusType_InProgress :: StatusType
pattern StatusType_InSync :: StatusType

-- | Allows you to add filters when you use the search function in Secrets
--   Manager.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe FilterNameStringType -> Maybe (NonEmpty Text) -> Filter

-- | Filters your list of secrets by a specific key.
[$sel:key:Filter'] :: Filter -> Maybe FilterNameStringType

-- | Filters your list of secrets by a specific value.
--   
--   You can prefix your search value with an exclamation mark (<tt>!</tt>)
--   in order to perform negation filters.
[$sel:values:Filter'] :: Filter -> Maybe (NonEmpty Text)

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Filter'</a>, <a>filter_key</a> - Filters your list of
--   secrets by a specific key.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - Filters your list
--   of secrets by a specific value.
--   
--   You can prefix your search value with an exclamation mark (<tt>!</tt>)
--   in order to perform negation filters.
newFilter :: Filter

-- | Filters your list of secrets by a specific key.
filter_key :: Lens' Filter (Maybe FilterNameStringType)

-- | Filters your list of secrets by a specific value.
--   
--   You can prefix your search value with an exclamation mark (<tt>!</tt>)
--   in order to perform negation filters.
filter_values :: Lens' Filter (Maybe (NonEmpty Text))

-- | (Optional) Custom type consisting of a <tt>Region</tt> (required) and
--   the <tt>KmsKeyId</tt> which can be an <tt>ARN</tt>, <tt>Key ID</tt>,
--   or <tt>Alias</tt>.
--   
--   <i>See:</i> <a>newReplicaRegionType</a> smart constructor.
data ReplicaRegionType
ReplicaRegionType' :: Maybe Text -> Maybe Text -> ReplicaRegionType

-- | Can be an <tt>ARN</tt>, <tt>Key ID</tt>, or <tt>Alias</tt>.
[$sel:kmsKeyId:ReplicaRegionType'] :: ReplicaRegionType -> Maybe Text

-- | Describes a single instance of Region objects.
[$sel:region:ReplicaRegionType'] :: ReplicaRegionType -> Maybe Text

-- | Create a value of <a>ReplicaRegionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:ReplicaRegionType'</a>,
--   <a>replicaRegionType_kmsKeyId</a> - Can be an <tt>ARN</tt>, <tt>Key
--   ID</tt>, or <tt>Alias</tt>.
--   
--   <a>$sel:region:ReplicaRegionType'</a>, <a>replicaRegionType_region</a>
--   - Describes a single instance of Region objects.
newReplicaRegionType :: ReplicaRegionType

-- | Can be an <tt>ARN</tt>, <tt>Key ID</tt>, or <tt>Alias</tt>.
replicaRegionType_kmsKeyId :: Lens' ReplicaRegionType (Maybe Text)

-- | Describes a single instance of Region objects.
replicaRegionType_region :: Lens' ReplicaRegionType (Maybe Text)

-- | A replication object consisting of a <tt>RegionReplicationStatus</tt>
--   object and includes a Region, KMSKeyId, status, and status message.
--   
--   <i>See:</i> <a>newReplicationStatusType</a> smart constructor.
data ReplicationStatusType
ReplicationStatusType' :: Maybe Text -> Maybe StatusType -> Maybe Text -> Maybe POSIX -> Maybe Text -> ReplicationStatusType

-- | Status message such as "/Secret with this name already exists in this
--   region/".
[$sel:statusMessage:ReplicationStatusType'] :: ReplicationStatusType -> Maybe Text

-- | The status can be <tt>InProgress</tt>, <tt>Failed</tt>, or
--   <tt>InSync</tt>.
[$sel:status:ReplicationStatusType'] :: ReplicationStatusType -> Maybe StatusType

-- | Can be an <tt>ARN</tt>, <tt>Key ID</tt>, or <tt>Alias</tt>.
[$sel:kmsKeyId:ReplicationStatusType'] :: ReplicationStatusType -> Maybe Text

-- | The date that you last accessed the secret in the Region.
[$sel:lastAccessedDate:ReplicationStatusType'] :: ReplicationStatusType -> Maybe POSIX

-- | The Region where replication occurs.
[$sel:region:ReplicationStatusType'] :: ReplicationStatusType -> Maybe Text

-- | Create a value of <a>ReplicationStatusType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:ReplicationStatusType'</a>,
--   <a>replicationStatusType_statusMessage</a> - Status message such as
--   "/Secret with this name already exists in this region/".
--   
--   <a>$sel:status:ReplicationStatusType'</a>,
--   <a>replicationStatusType_status</a> - The status can be
--   <tt>InProgress</tt>, <tt>Failed</tt>, or <tt>InSync</tt>.
--   
--   <a>$sel:kmsKeyId:ReplicationStatusType'</a>,
--   <a>replicationStatusType_kmsKeyId</a> - Can be an <tt>ARN</tt>,
--   <tt>Key ID</tt>, or <tt>Alias</tt>.
--   
--   <a>$sel:lastAccessedDate:ReplicationStatusType'</a>,
--   <a>replicationStatusType_lastAccessedDate</a> - The date that you last
--   accessed the secret in the Region.
--   
--   <a>$sel:region:ReplicationStatusType'</a>,
--   <a>replicationStatusType_region</a> - The Region where replication
--   occurs.
newReplicationStatusType :: ReplicationStatusType

-- | Status message such as "/Secret with this name already exists in this
--   region/".
replicationStatusType_statusMessage :: Lens' ReplicationStatusType (Maybe Text)

-- | The status can be <tt>InProgress</tt>, <tt>Failed</tt>, or
--   <tt>InSync</tt>.
replicationStatusType_status :: Lens' ReplicationStatusType (Maybe StatusType)

-- | Can be an <tt>ARN</tt>, <tt>Key ID</tt>, or <tt>Alias</tt>.
replicationStatusType_kmsKeyId :: Lens' ReplicationStatusType (Maybe Text)

-- | The date that you last accessed the secret in the Region.
replicationStatusType_lastAccessedDate :: Lens' ReplicationStatusType (Maybe UTCTime)

-- | The Region where replication occurs.
replicationStatusType_region :: Lens' ReplicationStatusType (Maybe Text)

-- | A structure that defines the rotation configuration for the secret.
--   
--   <i>See:</i> <a>newRotationRulesType</a> smart constructor.
data RotationRulesType
RotationRulesType' :: Maybe Natural -> RotationRulesType

-- | Specifies the number of days between automatic scheduled rotations of
--   the secret.
--   
--   Secrets Manager schedules the next rotation when the previous one is
--   complete. Secrets Manager schedules the date by adding the rotation
--   interval (number of days) to the actual date of the last rotation. The
--   service chooses the hour within that 24-hour date window randomly. The
--   minute is also chosen somewhat randomly, but weighted towards the top
--   of the hour and influenced by a variety of factors that help
--   distribute load.
[$sel:automaticallyAfterDays:RotationRulesType'] :: RotationRulesType -> Maybe Natural

-- | Create a value of <a>RotationRulesType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:automaticallyAfterDays:RotationRulesType'</a>,
--   <a>rotationRulesType_automaticallyAfterDays</a> - Specifies the number
--   of days between automatic scheduled rotations of the secret.
--   
--   Secrets Manager schedules the next rotation when the previous one is
--   complete. Secrets Manager schedules the date by adding the rotation
--   interval (number of days) to the actual date of the last rotation. The
--   service chooses the hour within that 24-hour date window randomly. The
--   minute is also chosen somewhat randomly, but weighted towards the top
--   of the hour and influenced by a variety of factors that help
--   distribute load.
newRotationRulesType :: RotationRulesType

-- | Specifies the number of days between automatic scheduled rotations of
--   the secret.
--   
--   Secrets Manager schedules the next rotation when the previous one is
--   complete. Secrets Manager schedules the date by adding the rotation
--   interval (number of days) to the actual date of the last rotation. The
--   service chooses the hour within that 24-hour date window randomly. The
--   minute is also chosen somewhat randomly, but weighted towards the top
--   of the hour and influenced by a variety of factors that help
--   distribute load.
rotationRulesType_automaticallyAfterDays :: Lens' RotationRulesType (Maybe Natural)

-- | A structure that contains the details about a secret. It does not
--   include the encrypted <tt>SecretString</tt> and <tt>SecretBinary</tt>
--   values. To get those values, use the GetSecretValue operation.
--   
--   <i>See:</i> <a>newSecretListEntry</a> smart constructor.
data SecretListEntry
SecretListEntry' :: Maybe POSIX -> Maybe Text -> Maybe (HashMap Text (NonEmpty Text)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe [Tag] -> Maybe Bool -> Maybe RotationRulesType -> Maybe Text -> Maybe Text -> Maybe POSIX -> SecretListEntry

-- | The date and time when a secret was created.
[$sel:createdDate:SecretListEntry'] :: SecretListEntry -> Maybe POSIX

-- | Returns the name of the service that created the secret.
[$sel:owningService:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | A list of all of the currently assigned <tt>SecretVersionStage</tt>
--   staging labels and the <tt>SecretVersionId</tt> attached to each one.
--   Staging labels are used to keep track of the different versions during
--   the rotation process.
--   
--   A version that does not have any <tt>SecretVersionStage</tt> is
--   considered deprecated and subject to deletion. Such versions are not
--   included in this list.
[$sel:secretVersionsToStages:SecretListEntry'] :: SecretListEntry -> Maybe (HashMap Text (NonEmpty Text))

-- | The most recent date and time that the Secrets Manager rotation
--   process was successfully completed. This value is null if the secret
--   hasn't ever rotated.
[$sel:lastRotatedDate:SecretListEntry'] :: SecretListEntry -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the secret.
--   
--   For more information about ARNs in Secrets Manager, see <a>Policy
--   Resources</a> in the <i>Amazon Web Services Secrets Manager User
--   Guide</i>.
[$sel:arn:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The ARN or alias of the Amazon Web Services KMS customer master key
--   (CMK) used to encrypt the <tt>SecretString</tt> and
--   <tt>SecretBinary</tt> fields in each version of the secret. If you
--   don't provide a key, then Secrets Manager defaults to encrypting the
--   secret fields with the default KMS CMK, the key named
--   <tt>awssecretsmanager</tt>, for this account.
[$sel:kmsKeyId:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The friendly name of the secret. You can use forward slashes in the
--   name to represent a path hierarchy. For example,
--   <tt>/prod/databases/dbserver1</tt> could represent the secret for a
--   server named <tt>dbserver1</tt> in the folder <tt>databases</tt> in
--   the folder <tt>prod</tt>.
[$sel:name:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The Region where Secrets Manager originated the secret.
[$sel:primaryRegion:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The last date and time that this secret was modified in any way.
[$sel:lastChangedDate:SecretListEntry'] :: SecretListEntry -> Maybe POSIX

-- | The date and time the deletion of the secret occurred. Not present on
--   active secrets. The secret can be recovered until the number of days
--   in the recovery window has passed, as specified in the
--   <tt>RecoveryWindowInDays</tt> parameter of the DeleteSecret operation.
[$sel:deletedDate:SecretListEntry'] :: SecretListEntry -> Maybe POSIX

-- | The list of user-defined tags associated with the secret. To add tags
--   to a secret, use TagResource. To remove tags, use UntagResource.
[$sel:tags:SecretListEntry'] :: SecretListEntry -> Maybe [Tag]

-- | Indicates whether automatic, scheduled rotation is enabled for this
--   secret.
[$sel:rotationEnabled:SecretListEntry'] :: SecretListEntry -> Maybe Bool

-- | A structure that defines the rotation configuration for the secret.
[$sel:rotationRules:SecretListEntry'] :: SecretListEntry -> Maybe RotationRulesType

-- | The user-provided description of the secret.
[$sel:description:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The ARN of an Amazon Web Services Lambda function invoked by Secrets
--   Manager to rotate and expire the secret either automatically per the
--   schedule or manually by a call to RotateSecret.
[$sel:rotationLambdaARN:SecretListEntry'] :: SecretListEntry -> Maybe Text

-- | The last date that this secret was accessed. This value is truncated
--   to midnight of the date and therefore shows only the date, not the
--   time.
[$sel:lastAccessedDate:SecretListEntry'] :: SecretListEntry -> Maybe POSIX

-- | Create a value of <a>SecretListEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:SecretListEntry'</a>,
--   <a>secretListEntry_createdDate</a> - The date and time when a secret
--   was created.
--   
--   <a>$sel:owningService:SecretListEntry'</a>,
--   <a>secretListEntry_owningService</a> - Returns the name of the service
--   that created the secret.
--   
--   <a>$sel:secretVersionsToStages:SecretListEntry'</a>,
--   <a>secretListEntry_secretVersionsToStages</a> - A list of all of the
--   currently assigned <tt>SecretVersionStage</tt> staging labels and the
--   <tt>SecretVersionId</tt> attached to each one. Staging labels are used
--   to keep track of the different versions during the rotation process.
--   
--   A version that does not have any <tt>SecretVersionStage</tt> is
--   considered deprecated and subject to deletion. Such versions are not
--   included in this list.
--   
--   <a>$sel:lastRotatedDate:SecretListEntry'</a>,
--   <a>secretListEntry_lastRotatedDate</a> - The most recent date and time
--   that the Secrets Manager rotation process was successfully completed.
--   This value is null if the secret hasn't ever rotated.
--   
--   <a>$sel:arn:SecretListEntry'</a>, <a>secretListEntry_arn</a> - The
--   Amazon Resource Name (ARN) of the secret.
--   
--   For more information about ARNs in Secrets Manager, see <a>Policy
--   Resources</a> in the <i>Amazon Web Services Secrets Manager User
--   Guide</i>.
--   
--   <a>$sel:kmsKeyId:SecretListEntry'</a>, <a>secretListEntry_kmsKeyId</a>
--   - The ARN or alias of the Amazon Web Services KMS customer master key
--   (CMK) used to encrypt the <tt>SecretString</tt> and
--   <tt>SecretBinary</tt> fields in each version of the secret. If you
--   don't provide a key, then Secrets Manager defaults to encrypting the
--   secret fields with the default KMS CMK, the key named
--   <tt>awssecretsmanager</tt>, for this account.
--   
--   <a>$sel:name:SecretListEntry'</a>, <a>secretListEntry_name</a> - The
--   friendly name of the secret. You can use forward slashes in the name
--   to represent a path hierarchy. For example,
--   <tt>/prod/databases/dbserver1</tt> could represent the secret for a
--   server named <tt>dbserver1</tt> in the folder <tt>databases</tt> in
--   the folder <tt>prod</tt>.
--   
--   <a>$sel:primaryRegion:SecretListEntry'</a>,
--   <a>secretListEntry_primaryRegion</a> - The Region where Secrets
--   Manager originated the secret.
--   
--   <a>$sel:lastChangedDate:SecretListEntry'</a>,
--   <a>secretListEntry_lastChangedDate</a> - The last date and time that
--   this secret was modified in any way.
--   
--   <a>$sel:deletedDate:SecretListEntry'</a>,
--   <a>secretListEntry_deletedDate</a> - The date and time the deletion of
--   the secret occurred. Not present on active secrets. The secret can be
--   recovered until the number of days in the recovery window has passed,
--   as specified in the <tt>RecoveryWindowInDays</tt> parameter of the
--   DeleteSecret operation.
--   
--   <a>$sel:tags:SecretListEntry'</a>, <a>secretListEntry_tags</a> - The
--   list of user-defined tags associated with the secret. To add tags to a
--   secret, use TagResource. To remove tags, use UntagResource.
--   
--   <a>$sel:rotationEnabled:SecretListEntry'</a>,
--   <a>secretListEntry_rotationEnabled</a> - Indicates whether automatic,
--   scheduled rotation is enabled for this secret.
--   
--   <a>$sel:rotationRules:SecretListEntry'</a>,
--   <a>secretListEntry_rotationRules</a> - A structure that defines the
--   rotation configuration for the secret.
--   
--   <a>$sel:description:SecretListEntry'</a>,
--   <a>secretListEntry_description</a> - The user-provided description of
--   the secret.
--   
--   <a>$sel:rotationLambdaARN:SecretListEntry'</a>,
--   <a>secretListEntry_rotationLambdaARN</a> - The ARN of an Amazon Web
--   Services Lambda function invoked by Secrets Manager to rotate and
--   expire the secret either automatically per the schedule or manually by
--   a call to RotateSecret.
--   
--   <a>$sel:lastAccessedDate:SecretListEntry'</a>,
--   <a>secretListEntry_lastAccessedDate</a> - The last date that this
--   secret was accessed. This value is truncated to midnight of the date
--   and therefore shows only the date, not the time.
newSecretListEntry :: SecretListEntry

-- | The date and time when a secret was created.
secretListEntry_createdDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | Returns the name of the service that created the secret.
secretListEntry_owningService :: Lens' SecretListEntry (Maybe Text)

-- | A list of all of the currently assigned <tt>SecretVersionStage</tt>
--   staging labels and the <tt>SecretVersionId</tt> attached to each one.
--   Staging labels are used to keep track of the different versions during
--   the rotation process.
--   
--   A version that does not have any <tt>SecretVersionStage</tt> is
--   considered deprecated and subject to deletion. Such versions are not
--   included in this list.
secretListEntry_secretVersionsToStages :: Lens' SecretListEntry (Maybe (HashMap Text (NonEmpty Text)))

-- | The most recent date and time that the Secrets Manager rotation
--   process was successfully completed. This value is null if the secret
--   hasn't ever rotated.
secretListEntry_lastRotatedDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the secret.
--   
--   For more information about ARNs in Secrets Manager, see <a>Policy
--   Resources</a> in the <i>Amazon Web Services Secrets Manager User
--   Guide</i>.
secretListEntry_arn :: Lens' SecretListEntry (Maybe Text)

-- | The ARN or alias of the Amazon Web Services KMS customer master key
--   (CMK) used to encrypt the <tt>SecretString</tt> and
--   <tt>SecretBinary</tt> fields in each version of the secret. If you
--   don't provide a key, then Secrets Manager defaults to encrypting the
--   secret fields with the default KMS CMK, the key named
--   <tt>awssecretsmanager</tt>, for this account.
secretListEntry_kmsKeyId :: Lens' SecretListEntry (Maybe Text)

-- | The friendly name of the secret. You can use forward slashes in the
--   name to represent a path hierarchy. For example,
--   <tt>/prod/databases/dbserver1</tt> could represent the secret for a
--   server named <tt>dbserver1</tt> in the folder <tt>databases</tt> in
--   the folder <tt>prod</tt>.
secretListEntry_name :: Lens' SecretListEntry (Maybe Text)

-- | The Region where Secrets Manager originated the secret.
secretListEntry_primaryRegion :: Lens' SecretListEntry (Maybe Text)

-- | The last date and time that this secret was modified in any way.
secretListEntry_lastChangedDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | The date and time the deletion of the secret occurred. Not present on
--   active secrets. The secret can be recovered until the number of days
--   in the recovery window has passed, as specified in the
--   <tt>RecoveryWindowInDays</tt> parameter of the DeleteSecret operation.
secretListEntry_deletedDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | The list of user-defined tags associated with the secret. To add tags
--   to a secret, use TagResource. To remove tags, use UntagResource.
secretListEntry_tags :: Lens' SecretListEntry (Maybe [Tag])

-- | Indicates whether automatic, scheduled rotation is enabled for this
--   secret.
secretListEntry_rotationEnabled :: Lens' SecretListEntry (Maybe Bool)

-- | A structure that defines the rotation configuration for the secret.
secretListEntry_rotationRules :: Lens' SecretListEntry (Maybe RotationRulesType)

-- | The user-provided description of the secret.
secretListEntry_description :: Lens' SecretListEntry (Maybe Text)

-- | The ARN of an Amazon Web Services Lambda function invoked by Secrets
--   Manager to rotate and expire the secret either automatically per the
--   schedule or manually by a call to RotateSecret.
secretListEntry_rotationLambdaARN :: Lens' SecretListEntry (Maybe Text)

-- | The last date that this secret was accessed. This value is truncated
--   to midnight of the date and therefore shows only the date, not the
--   time.
secretListEntry_lastAccessedDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | A structure that contains information about one version of a secret.
--   
--   <i>See:</i> <a>newSecretVersionsListEntry</a> smart constructor.
data SecretVersionsListEntry
SecretVersionsListEntry' :: Maybe POSIX -> Maybe [Text] -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe POSIX -> SecretVersionsListEntry

-- | The date and time this version of the secret was created.
[$sel:createdDate:SecretVersionsListEntry'] :: SecretVersionsListEntry -> Maybe POSIX

-- | The KMS keys used to encrypt the secret version.
[$sel:kmsKeyIds:SecretVersionsListEntry'] :: SecretVersionsListEntry -> Maybe [Text]

-- | An array of staging labels that are currently associated with this
--   version of the secret.
[$sel:versionStages:SecretVersionsListEntry'] :: SecretVersionsListEntry -> Maybe (NonEmpty Text)

-- | The unique version identifier of this version of the secret.
[$sel:versionId:SecretVersionsListEntry'] :: SecretVersionsListEntry -> Maybe Text

-- | The date that this version of the secret was last accessed. Note that
--   the resolution of this field is at the date level and does not include
--   the time.
[$sel:lastAccessedDate:SecretVersionsListEntry'] :: SecretVersionsListEntry -> Maybe POSIX

-- | Create a value of <a>SecretVersionsListEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_createdDate</a> - The date and time this
--   version of the secret was created.
--   
--   <a>$sel:kmsKeyIds:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_kmsKeyIds</a> - The KMS keys used to
--   encrypt the secret version.
--   
--   <a>$sel:versionStages:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_versionStages</a> - An array of staging
--   labels that are currently associated with this version of the secret.
--   
--   <a>$sel:versionId:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_versionId</a> - The unique version
--   identifier of this version of the secret.
--   
--   <a>$sel:lastAccessedDate:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_lastAccessedDate</a> - The date that this
--   version of the secret was last accessed. Note that the resolution of
--   this field is at the date level and does not include the time.
newSecretVersionsListEntry :: SecretVersionsListEntry

-- | The date and time this version of the secret was created.
secretVersionsListEntry_createdDate :: Lens' SecretVersionsListEntry (Maybe UTCTime)

-- | The KMS keys used to encrypt the secret version.
secretVersionsListEntry_kmsKeyIds :: Lens' SecretVersionsListEntry (Maybe [Text])

-- | An array of staging labels that are currently associated with this
--   version of the secret.
secretVersionsListEntry_versionStages :: Lens' SecretVersionsListEntry (Maybe (NonEmpty Text))

-- | The unique version identifier of this version of the secret.
secretVersionsListEntry_versionId :: Lens' SecretVersionsListEntry (Maybe Text)

-- | The date that this version of the secret was last accessed. Note that
--   the resolution of this field is at the date level and does not include
--   the time.
secretVersionsListEntry_lastAccessedDate :: Lens' SecretVersionsListEntry (Maybe UTCTime)

-- | A structure that contains information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The key identifier, or name, of the tag.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | The string value associated with the key of the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key identifier, or name, of
--   the tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The string value associated
--   with the key of the tag.
newTag :: Tag

-- | The key identifier, or name, of the tag.
tag_key :: Lens' Tag (Maybe Text)

-- | The string value associated with the key of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | Displays errors that occurred during validation of the resource
--   policy.
--   
--   <i>See:</i> <a>newValidationErrorsEntry</a> smart constructor.
data ValidationErrorsEntry
ValidationErrorsEntry' :: Maybe Text -> Maybe Text -> ValidationErrorsEntry

-- | Checks the name of the policy.
[$sel:checkName:ValidationErrorsEntry'] :: ValidationErrorsEntry -> Maybe Text

-- | Displays error messages if validation encounters problems during
--   validation of the resource policy.
[$sel:errorMessage:ValidationErrorsEntry'] :: ValidationErrorsEntry -> Maybe Text

-- | Create a value of <a>ValidationErrorsEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checkName:ValidationErrorsEntry'</a>,
--   <a>validationErrorsEntry_checkName</a> - Checks the name of the
--   policy.
--   
--   <a>$sel:errorMessage:ValidationErrorsEntry'</a>,
--   <a>validationErrorsEntry_errorMessage</a> - Displays error messages if
--   validation encounters problems during validation of the resource
--   policy.
newValidationErrorsEntry :: ValidationErrorsEntry

-- | Checks the name of the policy.
validationErrorsEntry_checkName :: Lens' ValidationErrorsEntry (Maybe Text)

-- | Displays error messages if validation encounters problems during
--   validation of the resource policy.
validationErrorsEntry_errorMessage :: Lens' ValidationErrorsEntry (Maybe Text)


-- | Attaches one or more tags, each consisting of a key name and a value,
--   to the specified secret. Tags are part of the secret's overall
--   metadata, and are not associated with any specific version of the
--   secret. This operation only appends tags to the existing list of tags.
--   To remove tags, you must use UntagResource.
--   
--   The following basic restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of tags per secret—50</li>
--   <li>Maximum key length—127 Unicode characters in UTF-8</li>
--   <li>Maximum value length—255 Unicode characters in UTF-8</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Do not use the <tt>aws:</tt> prefix in your tag names or values
--   because Amazon Web Services reserves it for Amazon Web Services use.
--   You can't edit or delete tag names or values with this prefix. Tags
--   with this prefix do not count against your tags per secret limit.</li>
--   <li>If you use your tagging schema across multiple services and
--   resources, remember other services might have restrictions on allowed
--   characters. Generally allowed characters: letters, spaces, and numbers
--   representable in UTF-8, plus the following special characters: + - = .
--   _ : / @.</li>
--   </ul>
--   
--   If you use tags as part of your security strategy, then adding or
--   removing a tag can change permissions. If successfully completing this
--   operation would result in you losing your permissions for this secret,
--   then the operation is blocked and returns an Access Denied error.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:TagResource</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To remove one or more tags from the collection attached to a
--   secret, use UntagResource.</li>
--   <li>To view the list of tags attached to a secret, use
--   DescribeSecret.</li>
--   </ul>
module Network.AWS.SecretsManager.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The identifier for the secret that you want to attach tags to. You can
--   specify either the Amazon Resource Name (ARN) or the friendly name of
--   the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:TagResource'] :: TagResource -> Text

-- | The tags to attach to the secret. Each element in the list consists of
--   a <tt>Key</tt> and a <tt>Value</tt>.
--   
--   This parameter to the API requires a JSON text string argument. For
--   information on how to format a JSON parameter for the various command
--   line tool environments, see <a>Using JSON for Parameters</a> in the
--   <i>CLI User Guide</i>. For the CLI, you can also use the syntax:
--   <tt>--Tags Key="Key1",Value="Value1"
--   Key="Key2",Value="Value2"[,…]</tt>
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:TagResource'</a>, <a>tagResource_secretId</a> - The
--   identifier for the secret that you want to attach tags to. You can
--   specify either the Amazon Resource Name (ARN) or the friendly name of
--   the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   attach to the secret. Each element in the list consists of a
--   <tt>Key</tt> and a <tt>Value</tt>.
--   
--   This parameter to the API requires a JSON text string argument. For
--   information on how to format a JSON parameter for the various command
--   line tool environments, see <a>Using JSON for Parameters</a> in the
--   <i>CLI User Guide</i>. For the CLI, you can also use the syntax:
--   <tt>--Tags Key="Key1",Value="Value1"
--   Key="Key2",Value="Value2"[,…]</tt>
newTagResource :: Text -> TagResource

-- | The identifier for the secret that you want to attach tags to. You can
--   specify either the Amazon Resource Name (ARN) or the friendly name of
--   the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
tagResource_secretId :: Lens' TagResource Text

-- | The tags to attach to the secret. Each element in the list consists of
--   a <tt>Key</tt> and a <tt>Value</tt>.
--   
--   This parameter to the API requires a JSON text string argument. For
--   information on how to format a JSON parameter for the various command
--   line tool environments, see <a>Using JSON for Parameters</a> in the
--   <i>CLI User Guide</i>. For the CLI, you can also use the syntax:
--   <tt>--Tags Key="Key1",Value="Value1"
--   Key="Key2",Value="Value2"[,…]</tt>
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse
instance GHC.Generics.Generic Network.AWS.SecretsManager.TagResource.TagResource
instance GHC.Show.Show Network.AWS.SecretsManager.TagResource.TagResource
instance GHC.Read.Read Network.AWS.SecretsManager.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.SecretsManager.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.SecretsManager.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.SecretsManager.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.SecretsManager.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.TagResource.TagResource


-- | Removes the secret from replication and promotes the secret to a
--   regional secret in the replica Region.
module Network.AWS.SecretsManager.StopReplicationToReplica

-- | <i>See:</i> <a>newStopReplicationToReplica</a> smart constructor.
data StopReplicationToReplica
StopReplicationToReplica' :: Text -> StopReplicationToReplica

-- | Response to <tt>StopReplicationToReplica</tt> of a secret, based on
--   the <tt>SecretId</tt>.
[$sel:secretId:StopReplicationToReplica'] :: StopReplicationToReplica -> Text

-- | Create a value of <a>StopReplicationToReplica</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:StopReplicationToReplica'</a>,
--   <a>stopReplicationToReplica_secretId</a> - Response to
--   <tt>StopReplicationToReplica</tt> of a secret, based on the
--   <tt>SecretId</tt>.
newStopReplicationToReplica :: Text -> StopReplicationToReplica

-- | Response to <tt>StopReplicationToReplica</tt> of a secret, based on
--   the <tt>SecretId</tt>.
stopReplicationToReplica_secretId :: Lens' StopReplicationToReplica Text

-- | <i>See:</i> <a>newStopReplicationToReplicaResponse</a> smart
--   constructor.
data StopReplicationToReplicaResponse
StopReplicationToReplicaResponse' :: Maybe Text -> Int -> StopReplicationToReplicaResponse

-- | Response <tt>StopReplicationToReplica</tt> of a secret, based on the
--   <tt>ARN,</tt>.
[$sel:arn:StopReplicationToReplicaResponse'] :: StopReplicationToReplicaResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StopReplicationToReplicaResponse'] :: StopReplicationToReplicaResponse -> Int

-- | Create a value of <a>StopReplicationToReplicaResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StopReplicationToReplicaResponse'</a>,
--   <a>stopReplicationToReplicaResponse_arn</a> - Response
--   <tt>StopReplicationToReplica</tt> of a secret, based on the
--   <tt>ARN,</tt>.
--   
--   <a>$sel:httpStatus:StopReplicationToReplicaResponse'</a>,
--   <a>stopReplicationToReplicaResponse_httpStatus</a> - The response's
--   http status code.
newStopReplicationToReplicaResponse :: Int -> StopReplicationToReplicaResponse

-- | Response <tt>StopReplicationToReplica</tt> of a secret, based on the
--   <tt>ARN,</tt>.
stopReplicationToReplicaResponse_arn :: Lens' StopReplicationToReplicaResponse (Maybe Text)

-- | The response's http status code.
stopReplicationToReplicaResponse_httpStatus :: Lens' StopReplicationToReplicaResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplica
instance GHC.Show.Show Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplica
instance GHC.Read.Read Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplica
instance GHC.Classes.Eq Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplica
instance GHC.Generics.Generic Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplicaResponse
instance GHC.Show.Show Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplicaResponse
instance GHC.Read.Read Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplicaResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplicaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplica
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplicaResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplica
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplica
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplica
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplica
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplica
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.StopReplicationToReplica.StopReplicationToReplica


-- | Configures and starts the asynchronous process of rotating this
--   secret. If you include the configuration parameters, the operation
--   sets those values for the secret and then immediately starts a
--   rotation. If you do not include the configuration parameters, the
--   operation starts a rotation with the values already stored in the
--   secret. After the rotation completes, the protected service and its
--   clients all use the new version of the secret.
--   
--   This required configuration information includes the ARN of an Amazon
--   Web Services Lambda function and optionally, the time between
--   scheduled rotations. The Lambda rotation function creates a new
--   version of the secret and creates or updates the credentials on the
--   protected service to match. After testing the new credentials, the
--   function marks the new secret with the staging label
--   <tt>AWSCURRENT</tt> so that your clients all immediately begin to use
--   the new version. For more information about rotating secrets and how
--   to configure a Lambda function to rotate the secrets for your
--   protected service, see <a>Rotating Secrets in Amazon Web Services
--   Secrets Manager</a> in the <i>Amazon Web Services Secrets Manager User
--   Guide</i>.
--   
--   Secrets Manager schedules the next rotation when the previous one
--   completes. Secrets Manager schedules the date by adding the rotation
--   interval (number of days) to the actual date of the last rotation. The
--   service chooses the hour within that 24-hour date window randomly. The
--   minute is also chosen somewhat randomly, but weighted towards the top
--   of the hour and influenced by a variety of factors that help
--   distribute load.
--   
--   The rotation function must end with the versions of the secret in one
--   of two states:
--   
--   <ul>
--   <li>The <tt>AWSPENDING</tt> and <tt>AWSCURRENT</tt> staging labels are
--   attached to the same version of the secret, or</li>
--   <li>The <tt>AWSPENDING</tt> staging label is not attached to any
--   version of the secret.</li>
--   </ul>
--   
--   If the <tt>AWSPENDING</tt> staging label is present but not attached
--   to the same version as <tt>AWSCURRENT</tt> then any later invocation
--   of <tt>RotateSecret</tt> assumes that a previous rotation request is
--   still in progress and returns an error.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:RotateSecret</li>
--   <li>lambda:InvokeFunction (on the function specified in the secret's
--   metadata)</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To list the secrets in your account, use ListSecrets.</li>
--   <li>To get the details for a version of a secret, use
--   DescribeSecret.</li>
--   <li>To create a new version of a secret, use CreateSecret.</li>
--   <li>To attach staging labels to or remove staging labels from a
--   version of a secret, use UpdateSecretVersionStage.</li>
--   </ul>
module Network.AWS.SecretsManager.RotateSecret

-- | <i>See:</i> <a>newRotateSecret</a> smart constructor.
data RotateSecret
RotateSecret' :: Maybe RotationRulesType -> Maybe Text -> Maybe Text -> Text -> RotateSecret

-- | A structure that defines the rotation configuration for this secret.
[$sel:rotationRules:RotateSecret'] :: RotateSecret -> Maybe RotationRulesType

-- | (Optional) Specifies the ARN of the Lambda function that can rotate
--   the secret.
[$sel:rotationLambdaARN:RotateSecret'] :: RotateSecret -> Maybe Text

-- | (Optional) Specifies a unique identifier for the new version of the
--   secret that helps ensure idempotency.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request for this parameter. If you don't use the SDK and
--   instead generate a raw HTTP request to the Secrets Manager service
--   endpoint, then you must generate a <tt>ClientRequestToken</tt>
--   yourself for new versions and include that value in the request.
--   
--   You only need to specify your own value if you implement your own
--   retry logic and want to ensure that a given secret is not created
--   twice. We recommend that you generate a <a>UUID-type</a> value to
--   ensure uniqueness within the specified secret.
--   
--   Secrets Manager uses this value to prevent the accidental creation of
--   duplicate versions if there are failures and retries during the
--   function's processing. This value becomes the <tt>VersionId</tt> of
--   the new version.
[$sel:clientRequestToken:RotateSecret'] :: RotateSecret -> Maybe Text

-- | Specifies the secret that you want to rotate. You can specify either
--   the Amazon Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:RotateSecret'] :: RotateSecret -> Text

-- | Create a value of <a>RotateSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rotationRules:RotateSecret'</a>,
--   <a>rotateSecret_rotationRules</a> - A structure that defines the
--   rotation configuration for this secret.
--   
--   <a>$sel:rotationLambdaARN:RotateSecret'</a>,
--   <a>rotateSecret_rotationLambdaARN</a> - (Optional) Specifies the ARN
--   of the Lambda function that can rotate the secret.
--   
--   <a>$sel:clientRequestToken:RotateSecret'</a>,
--   <a>rotateSecret_clientRequestToken</a> - (Optional) Specifies a unique
--   identifier for the new version of the secret that helps ensure
--   idempotency.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request for this parameter. If you don't use the SDK and
--   instead generate a raw HTTP request to the Secrets Manager service
--   endpoint, then you must generate a <tt>ClientRequestToken</tt>
--   yourself for new versions and include that value in the request.
--   
--   You only need to specify your own value if you implement your own
--   retry logic and want to ensure that a given secret is not created
--   twice. We recommend that you generate a <a>UUID-type</a> value to
--   ensure uniqueness within the specified secret.
--   
--   Secrets Manager uses this value to prevent the accidental creation of
--   duplicate versions if there are failures and retries during the
--   function's processing. This value becomes the <tt>VersionId</tt> of
--   the new version.
--   
--   <a>$sel:secretId:RotateSecret'</a>, <a>rotateSecret_secretId</a> -
--   Specifies the secret that you want to rotate. You can specify either
--   the Amazon Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newRotateSecret :: Text -> RotateSecret

-- | A structure that defines the rotation configuration for this secret.
rotateSecret_rotationRules :: Lens' RotateSecret (Maybe RotationRulesType)

-- | (Optional) Specifies the ARN of the Lambda function that can rotate
--   the secret.
rotateSecret_rotationLambdaARN :: Lens' RotateSecret (Maybe Text)

-- | (Optional) Specifies a unique identifier for the new version of the
--   secret that helps ensure idempotency.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request for this parameter. If you don't use the SDK and
--   instead generate a raw HTTP request to the Secrets Manager service
--   endpoint, then you must generate a <tt>ClientRequestToken</tt>
--   yourself for new versions and include that value in the request.
--   
--   You only need to specify your own value if you implement your own
--   retry logic and want to ensure that a given secret is not created
--   twice. We recommend that you generate a <a>UUID-type</a> value to
--   ensure uniqueness within the specified secret.
--   
--   Secrets Manager uses this value to prevent the accidental creation of
--   duplicate versions if there are failures and retries during the
--   function's processing. This value becomes the <tt>VersionId</tt> of
--   the new version.
rotateSecret_clientRequestToken :: Lens' RotateSecret (Maybe Text)

-- | Specifies the secret that you want to rotate. You can specify either
--   the Amazon Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
rotateSecret_secretId :: Lens' RotateSecret Text

-- | <i>See:</i> <a>newRotateSecretResponse</a> smart constructor.
data RotateSecretResponse
RotateSecretResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> RotateSecretResponse

-- | The ARN of the secret.
[$sel:arn:RotateSecretResponse'] :: RotateSecretResponse -> Maybe Text

-- | The friendly name of the secret.
[$sel:name:RotateSecretResponse'] :: RotateSecretResponse -> Maybe Text

-- | The ID of the new version of the secret created by the rotation
--   started by this request.
[$sel:versionId:RotateSecretResponse'] :: RotateSecretResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RotateSecretResponse'] :: RotateSecretResponse -> Int

-- | Create a value of <a>RotateSecretResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RotateSecretResponse'</a>, <a>rotateSecretResponse_arn</a>
--   - The ARN of the secret.
--   
--   <a>$sel:name:RotateSecretResponse'</a>,
--   <a>rotateSecretResponse_name</a> - The friendly name of the secret.
--   
--   <a>$sel:versionId:RotateSecretResponse'</a>,
--   <a>rotateSecretResponse_versionId</a> - The ID of the new version of
--   the secret created by the rotation started by this request.
--   
--   <a>$sel:httpStatus:RotateSecretResponse'</a>,
--   <a>rotateSecretResponse_httpStatus</a> - The response's http status
--   code.
newRotateSecretResponse :: Int -> RotateSecretResponse

-- | The ARN of the secret.
rotateSecretResponse_arn :: Lens' RotateSecretResponse (Maybe Text)

-- | The friendly name of the secret.
rotateSecretResponse_name :: Lens' RotateSecretResponse (Maybe Text)

-- | The ID of the new version of the secret created by the rotation
--   started by this request.
rotateSecretResponse_versionId :: Lens' RotateSecretResponse (Maybe Text)

-- | The response's http status code.
rotateSecretResponse_httpStatus :: Lens' RotateSecretResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.RotateSecret.RotateSecret
instance GHC.Show.Show Network.AWS.SecretsManager.RotateSecret.RotateSecret
instance GHC.Read.Read Network.AWS.SecretsManager.RotateSecret.RotateSecret
instance GHC.Classes.Eq Network.AWS.SecretsManager.RotateSecret.RotateSecret
instance GHC.Generics.Generic Network.AWS.SecretsManager.RotateSecret.RotateSecretResponse
instance GHC.Show.Show Network.AWS.SecretsManager.RotateSecret.RotateSecretResponse
instance GHC.Read.Read Network.AWS.SecretsManager.RotateSecret.RotateSecretResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.RotateSecret.RotateSecretResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.RotateSecret.RotateSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.RotateSecret.RotateSecretResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.RotateSecret.RotateSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.RotateSecret.RotateSecret
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.RotateSecret.RotateSecret
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.RotateSecret.RotateSecret
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.RotateSecret.RotateSecret
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.RotateSecret.RotateSecret


-- | Cancels the scheduled deletion of a secret by removing the
--   <tt>DeletedDate</tt> time stamp. This makes the secret accessible to
--   query once again.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:RestoreSecret</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To delete a secret, use DeleteSecret.</li>
--   </ul>
module Network.AWS.SecretsManager.RestoreSecret

-- | <i>See:</i> <a>newRestoreSecret</a> smart constructor.
data RestoreSecret
RestoreSecret' :: Text -> RestoreSecret

-- | Specifies the secret that you want to restore from a previously
--   scheduled deletion. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:RestoreSecret'] :: RestoreSecret -> Text

-- | Create a value of <a>RestoreSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:RestoreSecret'</a>, <a>restoreSecret_secretId</a> -
--   Specifies the secret that you want to restore from a previously
--   scheduled deletion. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newRestoreSecret :: Text -> RestoreSecret

-- | Specifies the secret that you want to restore from a previously
--   scheduled deletion. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
restoreSecret_secretId :: Lens' RestoreSecret Text

-- | <i>See:</i> <a>newRestoreSecretResponse</a> smart constructor.
data RestoreSecretResponse
RestoreSecretResponse' :: Maybe Text -> Maybe Text -> Int -> RestoreSecretResponse

-- | The ARN of the secret that was restored.
[$sel:arn:RestoreSecretResponse'] :: RestoreSecretResponse -> Maybe Text

-- | The friendly name of the secret that was restored.
[$sel:name:RestoreSecretResponse'] :: RestoreSecretResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RestoreSecretResponse'] :: RestoreSecretResponse -> Int

-- | Create a value of <a>RestoreSecretResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RestoreSecretResponse'</a>,
--   <a>restoreSecretResponse_arn</a> - The ARN of the secret that was
--   restored.
--   
--   <a>$sel:name:RestoreSecretResponse'</a>,
--   <a>restoreSecretResponse_name</a> - The friendly name of the secret
--   that was restored.
--   
--   <a>$sel:httpStatus:RestoreSecretResponse'</a>,
--   <a>restoreSecretResponse_httpStatus</a> - The response's http status
--   code.
newRestoreSecretResponse :: Int -> RestoreSecretResponse

-- | The ARN of the secret that was restored.
restoreSecretResponse_arn :: Lens' RestoreSecretResponse (Maybe Text)

-- | The friendly name of the secret that was restored.
restoreSecretResponse_name :: Lens' RestoreSecretResponse (Maybe Text)

-- | The response's http status code.
restoreSecretResponse_httpStatus :: Lens' RestoreSecretResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.RestoreSecret.RestoreSecret
instance GHC.Show.Show Network.AWS.SecretsManager.RestoreSecret.RestoreSecret
instance GHC.Read.Read Network.AWS.SecretsManager.RestoreSecret.RestoreSecret
instance GHC.Classes.Eq Network.AWS.SecretsManager.RestoreSecret.RestoreSecret
instance GHC.Generics.Generic Network.AWS.SecretsManager.RestoreSecret.RestoreSecretResponse
instance GHC.Show.Show Network.AWS.SecretsManager.RestoreSecret.RestoreSecretResponse
instance GHC.Read.Read Network.AWS.SecretsManager.RestoreSecret.RestoreSecretResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.RestoreSecret.RestoreSecretResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.RestoreSecret.RestoreSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.RestoreSecret.RestoreSecretResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.RestoreSecret.RestoreSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.RestoreSecret.RestoreSecret
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.RestoreSecret.RestoreSecret
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.RestoreSecret.RestoreSecret
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.RestoreSecret.RestoreSecret
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.RestoreSecret.RestoreSecret


-- | Converts an existing secret to a multi-Region secret and begins
--   replication the secret to a list of new regions.
module Network.AWS.SecretsManager.ReplicateSecretToRegions

-- | <i>See:</i> <a>newReplicateSecretToRegions</a> smart constructor.
data ReplicateSecretToRegions
ReplicateSecretToRegions' :: Maybe Bool -> Text -> NonEmpty ReplicaRegionType -> ReplicateSecretToRegions

-- | (Optional) If set, Secrets Manager replication overwrites a secret
--   with the same name in the destination region.
[$sel:forceOverwriteReplicaSecret:ReplicateSecretToRegions'] :: ReplicateSecretToRegions -> Maybe Bool

-- | Use the <tt>Secret Id</tt> to replicate a secret to regions.
[$sel:secretId:ReplicateSecretToRegions'] :: ReplicateSecretToRegions -> Text

-- | Add Regions to replicate the secret.
[$sel:addReplicaRegions:ReplicateSecretToRegions'] :: ReplicateSecretToRegions -> NonEmpty ReplicaRegionType

-- | Create a value of <a>ReplicateSecretToRegions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forceOverwriteReplicaSecret:ReplicateSecretToRegions'</a>,
--   <a>replicateSecretToRegions_forceOverwriteReplicaSecret</a> -
--   (Optional) If set, Secrets Manager replication overwrites a secret
--   with the same name in the destination region.
--   
--   <a>$sel:secretId:ReplicateSecretToRegions'</a>,
--   <a>replicateSecretToRegions_secretId</a> - Use the <tt>Secret Id</tt>
--   to replicate a secret to regions.
--   
--   <a>$sel:addReplicaRegions:ReplicateSecretToRegions'</a>,
--   <a>replicateSecretToRegions_addReplicaRegions</a> - Add Regions to
--   replicate the secret.
newReplicateSecretToRegions :: Text -> NonEmpty ReplicaRegionType -> ReplicateSecretToRegions

-- | (Optional) If set, Secrets Manager replication overwrites a secret
--   with the same name in the destination region.
replicateSecretToRegions_forceOverwriteReplicaSecret :: Lens' ReplicateSecretToRegions (Maybe Bool)

-- | Use the <tt>Secret Id</tt> to replicate a secret to regions.
replicateSecretToRegions_secretId :: Lens' ReplicateSecretToRegions Text

-- | Add Regions to replicate the secret.
replicateSecretToRegions_addReplicaRegions :: Lens' ReplicateSecretToRegions (NonEmpty ReplicaRegionType)

-- | <i>See:</i> <a>newReplicateSecretToRegionsResponse</a> smart
--   constructor.
data ReplicateSecretToRegionsResponse
ReplicateSecretToRegionsResponse' :: Maybe [ReplicationStatusType] -> Maybe Text -> Int -> ReplicateSecretToRegionsResponse

-- | Describes the secret replication status as <tt>PENDING</tt>,
--   <tt>SUCCESS</tt> or <tt>FAIL</tt>.
[$sel:replicationStatus:ReplicateSecretToRegionsResponse'] :: ReplicateSecretToRegionsResponse -> Maybe [ReplicationStatusType]

-- | Replicate a secret based on the <tt>ReplicaRegionType</tt>&gt;
--   consisting of a Region(required) and a KMSKeyId (optional) which can
--   be the ARN, KeyID, or Alias.
[$sel:arn:ReplicateSecretToRegionsResponse'] :: ReplicateSecretToRegionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ReplicateSecretToRegionsResponse'] :: ReplicateSecretToRegionsResponse -> Int

-- | Create a value of <a>ReplicateSecretToRegionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationStatus:ReplicateSecretToRegionsResponse'</a>,
--   <a>replicateSecretToRegionsResponse_replicationStatus</a> - Describes
--   the secret replication status as <tt>PENDING</tt>, <tt>SUCCESS</tt> or
--   <tt>FAIL</tt>.
--   
--   <a>$sel:arn:ReplicateSecretToRegionsResponse'</a>,
--   <a>replicateSecretToRegionsResponse_arn</a> - Replicate a secret based
--   on the <tt>ReplicaRegionType</tt>&gt; consisting of a Region(required)
--   and a KMSKeyId (optional) which can be the ARN, KeyID, or Alias.
--   
--   <a>$sel:httpStatus:ReplicateSecretToRegionsResponse'</a>,
--   <a>replicateSecretToRegionsResponse_httpStatus</a> - The response's
--   http status code.
newReplicateSecretToRegionsResponse :: Int -> ReplicateSecretToRegionsResponse

-- | Describes the secret replication status as <tt>PENDING</tt>,
--   <tt>SUCCESS</tt> or <tt>FAIL</tt>.
replicateSecretToRegionsResponse_replicationStatus :: Lens' ReplicateSecretToRegionsResponse (Maybe [ReplicationStatusType])

-- | Replicate a secret based on the <tt>ReplicaRegionType</tt>&gt;
--   consisting of a Region(required) and a KMSKeyId (optional) which can
--   be the ARN, KeyID, or Alias.
replicateSecretToRegionsResponse_arn :: Lens' ReplicateSecretToRegionsResponse (Maybe Text)

-- | The response's http status code.
replicateSecretToRegionsResponse_httpStatus :: Lens' ReplicateSecretToRegionsResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegions
instance GHC.Show.Show Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegions
instance GHC.Read.Read Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegions
instance GHC.Classes.Eq Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegions
instance GHC.Generics.Generic Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegionsResponse
instance GHC.Show.Show Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegionsResponse
instance GHC.Read.Read Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegionsResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegions
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegions
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegions
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegions
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegions
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.ReplicateSecretToRegions.ReplicateSecretToRegions


-- | Remove regions from replication.
module Network.AWS.SecretsManager.RemoveRegionsFromReplication

-- | <i>See:</i> <a>newRemoveRegionsFromReplication</a> smart constructor.
data RemoveRegionsFromReplication
RemoveRegionsFromReplication' :: Text -> NonEmpty Text -> RemoveRegionsFromReplication

-- | Remove a secret by <tt>SecretId</tt> from replica Regions.
[$sel:secretId:RemoveRegionsFromReplication'] :: RemoveRegionsFromReplication -> Text

-- | Remove replication from specific Regions.
[$sel:removeReplicaRegions:RemoveRegionsFromReplication'] :: RemoveRegionsFromReplication -> NonEmpty Text

-- | Create a value of <a>RemoveRegionsFromReplication</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:RemoveRegionsFromReplication'</a>,
--   <a>removeRegionsFromReplication_secretId</a> - Remove a secret by
--   <tt>SecretId</tt> from replica Regions.
--   
--   <a>$sel:removeReplicaRegions:RemoveRegionsFromReplication'</a>,
--   <a>removeRegionsFromReplication_removeReplicaRegions</a> - Remove
--   replication from specific Regions.
newRemoveRegionsFromReplication :: Text -> NonEmpty Text -> RemoveRegionsFromReplication

-- | Remove a secret by <tt>SecretId</tt> from replica Regions.
removeRegionsFromReplication_secretId :: Lens' RemoveRegionsFromReplication Text

-- | Remove replication from specific Regions.
removeRegionsFromReplication_removeReplicaRegions :: Lens' RemoveRegionsFromReplication (NonEmpty Text)

-- | <i>See:</i> <a>newRemoveRegionsFromReplicationResponse</a> smart
--   constructor.
data RemoveRegionsFromReplicationResponse
RemoveRegionsFromReplicationResponse' :: Maybe [ReplicationStatusType] -> Maybe Text -> Int -> RemoveRegionsFromReplicationResponse

-- | Describes the remaining replication status after you remove regions
--   from the replication list.
[$sel:replicationStatus:RemoveRegionsFromReplicationResponse'] :: RemoveRegionsFromReplicationResponse -> Maybe [ReplicationStatusType]

-- | The secret <tt>ARN</tt> removed from replication regions.
[$sel:arn:RemoveRegionsFromReplicationResponse'] :: RemoveRegionsFromReplicationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:RemoveRegionsFromReplicationResponse'] :: RemoveRegionsFromReplicationResponse -> Int

-- | Create a value of <a>RemoveRegionsFromReplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationStatus:RemoveRegionsFromReplicationResponse'</a>,
--   <a>removeRegionsFromReplicationResponse_replicationStatus</a> -
--   Describes the remaining replication status after you remove regions
--   from the replication list.
--   
--   <a>$sel:arn:RemoveRegionsFromReplicationResponse'</a>,
--   <a>removeRegionsFromReplicationResponse_arn</a> - The secret
--   <tt>ARN</tt> removed from replication regions.
--   
--   <a>$sel:httpStatus:RemoveRegionsFromReplicationResponse'</a>,
--   <a>removeRegionsFromReplicationResponse_httpStatus</a> - The
--   response's http status code.
newRemoveRegionsFromReplicationResponse :: Int -> RemoveRegionsFromReplicationResponse

-- | Describes the remaining replication status after you remove regions
--   from the replication list.
removeRegionsFromReplicationResponse_replicationStatus :: Lens' RemoveRegionsFromReplicationResponse (Maybe [ReplicationStatusType])

-- | The secret <tt>ARN</tt> removed from replication regions.
removeRegionsFromReplicationResponse_arn :: Lens' RemoveRegionsFromReplicationResponse (Maybe Text)

-- | The response's http status code.
removeRegionsFromReplicationResponse_httpStatus :: Lens' RemoveRegionsFromReplicationResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplication
instance GHC.Show.Show Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplication
instance GHC.Read.Read Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplication
instance GHC.Classes.Eq Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplication
instance GHC.Generics.Generic Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplicationResponse
instance GHC.Show.Show Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplicationResponse
instance GHC.Read.Read Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplicationResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplication
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplication
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplication
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.RemoveRegionsFromReplication.RemoveRegionsFromReplication


-- | Stores a new encrypted secret value in the specified secret. To do
--   this, the operation creates a new version and attaches it to the
--   secret. The version can contain a new <tt>SecretString</tt> value or a
--   new <tt>SecretBinary</tt> value. You can also specify the staging
--   labels that are initially attached to the new version.
--   
--   The Secrets Manager console uses only the <tt>SecretString</tt> field.
--   To add binary data to a secret with the <tt>SecretBinary</tt> field
--   you must use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDKs.
--   
--   <ul>
--   <li>If this operation creates the first version for the secret then
--   Secrets Manager automatically attaches the staging label
--   <tt>AWSCURRENT</tt> to the new version.</li>
--   <li>If you do not specify a value for VersionStages then Secrets
--   Manager automatically moves the staging label <tt>AWSCURRENT</tt> to
--   this new version.</li>
--   <li>If this operation moves the staging label <tt>AWSCURRENT</tt> from
--   another version to this version, then Secrets Manager also
--   automatically moves the staging label <tt>AWSPREVIOUS</tt> to the
--   version that <tt>AWSCURRENT</tt> was removed from.</li>
--   <li>This operation is idempotent. If a version with a
--   <tt>VersionId</tt> with the same value as the
--   <tt>ClientRequestToken</tt> parameter already exists and you specify
--   the same secret data, the operation succeeds but does nothing.
--   However, if the secret data is different, then the operation fails
--   because you cannot modify an existing version; you can only create new
--   ones.</li>
--   <li>If you call an operation to encrypt or decrypt the
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> for a secret in the
--   same account as the calling user and that secret doesn't specify a
--   Amazon Web Services KMS encryption key, Secrets Manager uses the
--   account's default Amazon Web Services managed customer master key
--   (CMK) with the alias <tt>aws/secretsmanager</tt>. If this key doesn't
--   already exist in your account then Secrets Manager creates it for you
--   automatically. All users and roles in the same Amazon Web Services
--   account automatically have access to use the default CMK. Note that if
--   an Secrets Manager API call results in Amazon Web Services creating
--   the account's Amazon Web Services-managed CMK, it can result in a
--   one-time significant delay in returning the result.</li>
--   <li>If the secret resides in a different Amazon Web Services account
--   from the credentials calling an API that requires encryption or
--   decryption of the secret value then you must create and use a custom
--   Amazon Web Services KMS CMK because you can't access the default CMK
--   for the account using credentials from a different Amazon Web Services
--   account. Store the ARN of the CMK in the secret when you create the
--   secret or when you update it by including it in the <tt>KMSKeyId</tt>.
--   If you call an API that must encrypt or decrypt <tt>SecretString</tt>
--   or <tt>SecretBinary</tt> using credentials from a different account
--   then the Amazon Web Services KMS key policy must grant cross-account
--   access to that other account's user or role for both the
--   kms:GenerateDataKey and kms:Decrypt operations.</li>
--   </ul>
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:PutSecretValue</li>
--   <li>kms:GenerateDataKey - needed only if you use a customer-managed
--   Amazon Web Services KMS key to encrypt the secret. You do not need
--   this permission to use the account's default Amazon Web Services
--   managed CMK for Secrets Manager.</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To retrieve the encrypted value you store in the version of a
--   secret, use GetSecretValue.</li>
--   <li>To create a secret, use CreateSecret.</li>
--   <li>To get the details for a secret, use DescribeSecret.</li>
--   <li>To list the versions attached to a secret, use
--   ListSecretVersionIds.</li>
--   </ul>
module Network.AWS.SecretsManager.PutSecretValue

-- | <i>See:</i> <a>newPutSecretValue</a> smart constructor.
data PutSecretValue
PutSecretValue' :: Maybe (Sensitive Base64) -> Maybe (NonEmpty Text) -> Maybe (Sensitive Text) -> Maybe Text -> Text -> PutSecretValue

-- | (Optional) Specifies binary data that you want to encrypt and store in
--   the new version of the secret. To use this parameter in the
--   command-line tools, we recommend that you store your binary data in a
--   file and then use the appropriate technique for your tool to pass the
--   contents of the file as a parameter. Either <tt>SecretBinary</tt> or
--   <tt>SecretString</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   This parameter is not accessible if the secret using the Secrets
--   Manager console.
[$sel:secretBinary:PutSecretValue'] :: PutSecretValue -> Maybe (Sensitive Base64)

-- | (Optional) Specifies a list of staging labels that are attached to
--   this version of the secret. These staging labels are used to track the
--   versions through the rotation process by the Lambda rotation function.
--   
--   A staging label must be unique to a single version of the secret. If
--   you specify a staging label that's already associated with a different
--   version of the same secret then that staging label is automatically
--   removed from the other version and attached to this version.
--   
--   If you do not specify a value for <tt>VersionStages</tt> then Secrets
--   Manager automatically moves the staging label <tt>AWSCURRENT</tt> to
--   this new version.
[$sel:versionStages:PutSecretValue'] :: PutSecretValue -> Maybe (NonEmpty Text)

-- | (Optional) Specifies text data that you want to encrypt and store in
--   this new version of the secret. Either <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   If you create this secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the
--   default Lambda rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>.
--   
--   For example:
--   
--   <pre>
--   [{"username":"bob"},{"password":"abc123xyz456"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
[$sel:secretString:PutSecretValue'] :: PutSecretValue -> Maybe (Sensitive Text)

-- | (Optional) Specifies a unique identifier for the new version of the
--   secret.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request. If you don't use the SDK and instead generate a
--   raw HTTP request to the Secrets Manager service endpoint, then you
--   must generate a <tt>ClientRequestToken</tt> yourself for new versions
--   and include that value in the request.
--   
--   This value helps ensure idempotency. Secrets Manager uses this value
--   to prevent the accidental creation of duplicate versions if there are
--   failures and retries during the Lambda rotation function's processing.
--   We recommend that you generate a <a>UUID-type</a> value to ensure
--   uniqueness within the specified secret.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> values are the same as
--   those in the request then the request is ignored (the operation is
--   idempotent).</li>
--   <li>If a version with this value already exists and the version of the
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from those in the request then the request fails because you cannot
--   modify an existing secret version. You can only create new versions to
--   store new secret values.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
[$sel:clientRequestToken:PutSecretValue'] :: PutSecretValue -> Maybe Text

-- | Specifies the secret to which you want to add a new version. You can
--   specify either the Amazon Resource Name (ARN) or the friendly name of
--   the secret. The secret must already exist.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:PutSecretValue'] :: PutSecretValue -> Text

-- | Create a value of <a>PutSecretValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretBinary:PutSecretValue'</a>,
--   <a>putSecretValue_secretBinary</a> - (Optional) Specifies binary data
--   that you want to encrypt and store in the new version of the secret.
--   To use this parameter in the command-line tools, we recommend that you
--   store your binary data in a file and then use the appropriate
--   technique for your tool to pass the contents of the file as a
--   parameter. Either <tt>SecretBinary</tt> or <tt>SecretString</tt> must
--   have a value, but not both. They cannot both be empty.
--   
--   This parameter is not accessible if the secret using the Secrets
--   Manager console.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
--   
--   <a>$sel:versionStages:PutSecretValue'</a>,
--   <a>putSecretValue_versionStages</a> - (Optional) Specifies a list of
--   staging labels that are attached to this version of the secret. These
--   staging labels are used to track the versions through the rotation
--   process by the Lambda rotation function.
--   
--   A staging label must be unique to a single version of the secret. If
--   you specify a staging label that's already associated with a different
--   version of the same secret then that staging label is automatically
--   removed from the other version and attached to this version.
--   
--   If you do not specify a value for <tt>VersionStages</tt> then Secrets
--   Manager automatically moves the staging label <tt>AWSCURRENT</tt> to
--   this new version.
--   
--   <a>$sel:secretString:PutSecretValue'</a>,
--   <a>putSecretValue_secretString</a> - (Optional) Specifies text data
--   that you want to encrypt and store in this new version of the secret.
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   If you create this secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the
--   default Lambda rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>.
--   
--   For example:
--   
--   <pre>
--   [{"username":"bob"},{"password":"abc123xyz456"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
--   
--   <a>$sel:clientRequestToken:PutSecretValue'</a>,
--   <a>putSecretValue_clientRequestToken</a> - (Optional) Specifies a
--   unique identifier for the new version of the secret.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request. If you don't use the SDK and instead generate a
--   raw HTTP request to the Secrets Manager service endpoint, then you
--   must generate a <tt>ClientRequestToken</tt> yourself for new versions
--   and include that value in the request.
--   
--   This value helps ensure idempotency. Secrets Manager uses this value
--   to prevent the accidental creation of duplicate versions if there are
--   failures and retries during the Lambda rotation function's processing.
--   We recommend that you generate a <a>UUID-type</a> value to ensure
--   uniqueness within the specified secret.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> values are the same as
--   those in the request then the request is ignored (the operation is
--   idempotent).</li>
--   <li>If a version with this value already exists and the version of the
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from those in the request then the request fails because you cannot
--   modify an existing secret version. You can only create new versions to
--   store new secret values.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
--   
--   <a>$sel:secretId:PutSecretValue'</a>, <a>putSecretValue_secretId</a> -
--   Specifies the secret to which you want to add a new version. You can
--   specify either the Amazon Resource Name (ARN) or the friendly name of
--   the secret. The secret must already exist.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newPutSecretValue :: Text -> PutSecretValue

-- | (Optional) Specifies binary data that you want to encrypt and store in
--   the new version of the secret. To use this parameter in the
--   command-line tools, we recommend that you store your binary data in a
--   file and then use the appropriate technique for your tool to pass the
--   contents of the file as a parameter. Either <tt>SecretBinary</tt> or
--   <tt>SecretString</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   This parameter is not accessible if the secret using the Secrets
--   Manager console.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
putSecretValue_secretBinary :: Lens' PutSecretValue (Maybe ByteString)

-- | (Optional) Specifies a list of staging labels that are attached to
--   this version of the secret. These staging labels are used to track the
--   versions through the rotation process by the Lambda rotation function.
--   
--   A staging label must be unique to a single version of the secret. If
--   you specify a staging label that's already associated with a different
--   version of the same secret then that staging label is automatically
--   removed from the other version and attached to this version.
--   
--   If you do not specify a value for <tt>VersionStages</tt> then Secrets
--   Manager automatically moves the staging label <tt>AWSCURRENT</tt> to
--   this new version.
putSecretValue_versionStages :: Lens' PutSecretValue (Maybe (NonEmpty Text))

-- | (Optional) Specifies text data that you want to encrypt and store in
--   this new version of the secret. Either <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   If you create this secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the
--   default Lambda rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>.
--   
--   For example:
--   
--   <pre>
--   [{"username":"bob"},{"password":"abc123xyz456"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
putSecretValue_secretString :: Lens' PutSecretValue (Maybe Text)

-- | (Optional) Specifies a unique identifier for the new version of the
--   secret.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request. If you don't use the SDK and instead generate a
--   raw HTTP request to the Secrets Manager service endpoint, then you
--   must generate a <tt>ClientRequestToken</tt> yourself for new versions
--   and include that value in the request.
--   
--   This value helps ensure idempotency. Secrets Manager uses this value
--   to prevent the accidental creation of duplicate versions if there are
--   failures and retries during the Lambda rotation function's processing.
--   We recommend that you generate a <a>UUID-type</a> value to ensure
--   uniqueness within the specified secret.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> values are the same as
--   those in the request then the request is ignored (the operation is
--   idempotent).</li>
--   <li>If a version with this value already exists and the version of the
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from those in the request then the request fails because you cannot
--   modify an existing secret version. You can only create new versions to
--   store new secret values.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
putSecretValue_clientRequestToken :: Lens' PutSecretValue (Maybe Text)

-- | Specifies the secret to which you want to add a new version. You can
--   specify either the Amazon Resource Name (ARN) or the friendly name of
--   the secret. The secret must already exist.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
putSecretValue_secretId :: Lens' PutSecretValue Text

-- | <i>See:</i> <a>newPutSecretValueResponse</a> smart constructor.
data PutSecretValueResponse
PutSecretValueResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> PutSecretValueResponse

-- | The list of staging labels that are currently attached to this version
--   of the secret. Staging labels are used to track a version as it
--   progresses through the secret rotation process.
[$sel:versionStages:PutSecretValueResponse'] :: PutSecretValueResponse -> Maybe (NonEmpty Text)

-- | The Amazon Resource Name (ARN) for the secret for which you just
--   created a version.
[$sel:arn:PutSecretValueResponse'] :: PutSecretValueResponse -> Maybe Text

-- | The friendly name of the secret for which you just created or updated
--   a version.
[$sel:name:PutSecretValueResponse'] :: PutSecretValueResponse -> Maybe Text

-- | The unique identifier of the version of the secret you just created or
--   updated.
[$sel:versionId:PutSecretValueResponse'] :: PutSecretValueResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutSecretValueResponse'] :: PutSecretValueResponse -> Int

-- | Create a value of <a>PutSecretValueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionStages:PutSecretValue'</a>,
--   <a>putSecretValueResponse_versionStages</a> - The list of staging
--   labels that are currently attached to this version of the secret.
--   Staging labels are used to track a version as it progresses through
--   the secret rotation process.
--   
--   <a>$sel:arn:PutSecretValueResponse'</a>,
--   <a>putSecretValueResponse_arn</a> - The Amazon Resource Name (ARN) for
--   the secret for which you just created a version.
--   
--   <a>$sel:name:PutSecretValueResponse'</a>,
--   <a>putSecretValueResponse_name</a> - The friendly name of the secret
--   for which you just created or updated a version.
--   
--   <a>$sel:versionId:PutSecretValueResponse'</a>,
--   <a>putSecretValueResponse_versionId</a> - The unique identifier of the
--   version of the secret you just created or updated.
--   
--   <a>$sel:httpStatus:PutSecretValueResponse'</a>,
--   <a>putSecretValueResponse_httpStatus</a> - The response's http status
--   code.
newPutSecretValueResponse :: Int -> PutSecretValueResponse

-- | The list of staging labels that are currently attached to this version
--   of the secret. Staging labels are used to track a version as it
--   progresses through the secret rotation process.
putSecretValueResponse_versionStages :: Lens' PutSecretValueResponse (Maybe (NonEmpty Text))

-- | The Amazon Resource Name (ARN) for the secret for which you just
--   created a version.
putSecretValueResponse_arn :: Lens' PutSecretValueResponse (Maybe Text)

-- | The friendly name of the secret for which you just created or updated
--   a version.
putSecretValueResponse_name :: Lens' PutSecretValueResponse (Maybe Text)

-- | The unique identifier of the version of the secret you just created or
--   updated.
putSecretValueResponse_versionId :: Lens' PutSecretValueResponse (Maybe Text)

-- | The response's http status code.
putSecretValueResponse_httpStatus :: Lens' PutSecretValueResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.PutSecretValue.PutSecretValue
instance GHC.Show.Show Network.AWS.SecretsManager.PutSecretValue.PutSecretValue
instance GHC.Classes.Eq Network.AWS.SecretsManager.PutSecretValue.PutSecretValue
instance GHC.Generics.Generic Network.AWS.SecretsManager.PutSecretValue.PutSecretValueResponse
instance GHC.Show.Show Network.AWS.SecretsManager.PutSecretValue.PutSecretValueResponse
instance GHC.Read.Read Network.AWS.SecretsManager.PutSecretValue.PutSecretValueResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.PutSecretValue.PutSecretValueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.PutSecretValue.PutSecretValue
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.PutSecretValue.PutSecretValueResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.PutSecretValue.PutSecretValue
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.PutSecretValue.PutSecretValue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.PutSecretValue.PutSecretValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.PutSecretValue.PutSecretValue
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.PutSecretValue.PutSecretValue
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.PutSecretValue.PutSecretValue


-- | Attaches the contents of the specified resource-based permission
--   policy to a secret. A resource-based policy is optional.
--   Alternatively, you can use IAM identity-based policies that specify
--   the secret's Amazon Resource Name (ARN) in the policy statement's
--   <tt>Resources</tt> element. You can also use a combination of both
--   identity-based and resource-based policies. The affected users and
--   roles receive the permissions that are permitted by all of the
--   relevant policies. For more information, see <a>Using Resource-Based
--   Policies for Amazon Web Services Secrets Manager</a>. For the complete
--   description of the Amazon Web Services policy syntax and grammar, see
--   <a>IAM JSON Policy Reference</a> in the <i>IAM User Guide</i>.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:PutResourcePolicy</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To retrieve the resource policy attached to a secret, use
--   GetResourcePolicy.</li>
--   <li>To delete the resource-based policy attached to a secret, use
--   DeleteResourcePolicy.</li>
--   <li>To list all of the currently available secrets, use
--   ListSecrets.</li>
--   </ul>
module Network.AWS.SecretsManager.PutResourcePolicy

-- | <i>See:</i> <a>newPutResourcePolicy</a> smart constructor.
data PutResourcePolicy
PutResourcePolicy' :: Maybe Bool -> Text -> Text -> PutResourcePolicy

-- | (Optional) If you set the parameter, <tt>BlockPublicPolicy</tt> to
--   true, then you block resource-based policies that allow broad access
--   to the secret.
[$sel:blockPublicPolicy:PutResourcePolicy'] :: PutResourcePolicy -> Maybe Bool

-- | Specifies the secret that you want to attach the resource-based
--   policy. You can specify either the ARN or the friendly name of the
--   secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:PutResourcePolicy'] :: PutResourcePolicy -> Text

-- | A JSON-formatted string constructed according to the grammar and
--   syntax for an Amazon Web Services resource-based policy. The policy in
--   the string identifies who can access or manage this secret and its
--   versions. For information on how to format a JSON parameter for the
--   various command line tool environments, see <a>Using JSON for
--   Parameters</a> in the <i>CLI User Guide</i>.
[$sel:resourcePolicy:PutResourcePolicy'] :: PutResourcePolicy -> Text

-- | Create a value of <a>PutResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockPublicPolicy:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_blockPublicPolicy</a> - (Optional) If you set the
--   parameter, <tt>BlockPublicPolicy</tt> to true, then you block
--   resource-based policies that allow broad access to the secret.
--   
--   <a>$sel:secretId:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_secretId</a> - Specifies the secret that you want
--   to attach the resource-based policy. You can specify either the ARN or
--   the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
--   
--   <a>$sel:resourcePolicy:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_resourcePolicy</a> - A JSON-formatted string
--   constructed according to the grammar and syntax for an Amazon Web
--   Services resource-based policy. The policy in the string identifies
--   who can access or manage this secret and its versions. For information
--   on how to format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>.
newPutResourcePolicy :: Text -> Text -> PutResourcePolicy

-- | (Optional) If you set the parameter, <tt>BlockPublicPolicy</tt> to
--   true, then you block resource-based policies that allow broad access
--   to the secret.
putResourcePolicy_blockPublicPolicy :: Lens' PutResourcePolicy (Maybe Bool)

-- | Specifies the secret that you want to attach the resource-based
--   policy. You can specify either the ARN or the friendly name of the
--   secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
putResourcePolicy_secretId :: Lens' PutResourcePolicy Text

-- | A JSON-formatted string constructed according to the grammar and
--   syntax for an Amazon Web Services resource-based policy. The policy in
--   the string identifies who can access or manage this secret and its
--   versions. For information on how to format a JSON parameter for the
--   various command line tool environments, see <a>Using JSON for
--   Parameters</a> in the <i>CLI User Guide</i>.
putResourcePolicy_resourcePolicy :: Lens' PutResourcePolicy Text

-- | <i>See:</i> <a>newPutResourcePolicyResponse</a> smart constructor.
data PutResourcePolicyResponse
PutResourcePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> PutResourcePolicyResponse

-- | The ARN of the secret retrieved by the resource-based policy.
[$sel:arn:PutResourcePolicyResponse'] :: PutResourcePolicyResponse -> Maybe Text

-- | The friendly name of the secret retrieved by the resource-based
--   policy.
[$sel:name:PutResourcePolicyResponse'] :: PutResourcePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutResourcePolicyResponse'] :: PutResourcePolicyResponse -> Int

-- | Create a value of <a>PutResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_arn</a> - The ARN of the secret retrieved
--   by the resource-based policy.
--   
--   <a>$sel:name:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_name</a> - The friendly name of the
--   secret retrieved by the resource-based policy.
--   
--   <a>$sel:httpStatus:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutResourcePolicyResponse :: Int -> PutResourcePolicyResponse

-- | The ARN of the secret retrieved by the resource-based policy.
putResourcePolicyResponse_arn :: Lens' PutResourcePolicyResponse (Maybe Text)

-- | The friendly name of the secret retrieved by the resource-based
--   policy.
putResourcePolicyResponse_name :: Lens' PutResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
putResourcePolicyResponse_httpStatus :: Lens' PutResourcePolicyResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicy
instance GHC.Show.Show Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicy
instance GHC.Read.Read Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicy
instance GHC.Classes.Eq Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicy
instance GHC.Generics.Generic Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Show.Show Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Read.Read Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicyResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.PutResourcePolicy.PutResourcePolicy


-- | Lists all of the secrets that are stored by Secrets Manager in the
--   Amazon Web Services account. To list the versions currently stored for
--   a specific secret, use ListSecretVersionIds. The encrypted fields
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> are not included in
--   the output. To get that information, call the GetSecretValue
--   operation.
--   
--   Always check the <tt>NextToken</tt> response parameter when calling
--   any of the <tt>List*</tt> operations. These operations can
--   occasionally return an empty or shorter than expected list of results
--   even when there more results become available. When this happens, the
--   <tt>NextToken</tt> response parameter contains a value to pass to the
--   next call to the same API to request the next part of the list.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:ListSecrets</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To list the versions attached to a secret, use
--   ListSecretVersionIds.</li>
--   </ul>
--   
--   This operation returns paginated results.
module Network.AWS.SecretsManager.ListSecrets

-- | <i>See:</i> <a>newListSecrets</a> smart constructor.
data ListSecrets
ListSecrets' :: Maybe Text -> Maybe SortOrderType -> Maybe Natural -> Maybe [Filter] -> ListSecrets

-- | (Optional) Use this parameter in a request if you receive a
--   <tt>NextToken</tt> response in a previous request indicating there's
--   more output available. In a subsequent call, set it to the value of
--   the previous call <tt>NextToken</tt> response to indicate where the
--   output should continue from.
[$sel:nextToken:ListSecrets'] :: ListSecrets -> Maybe Text

-- | Lists secrets in the requested order.
[$sel:sortOrder:ListSecrets'] :: ListSecrets -> Maybe SortOrderType

-- | (Optional) Limits the number of results you want to include in the
--   response. If you don't include this parameter, it defaults to a value
--   that's specific to the operation. If additional items exist beyond the
--   maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (isn't null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that Secrets Manager might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
[$sel:maxResults:ListSecrets'] :: ListSecrets -> Maybe Natural

-- | Lists the secret request filters.
[$sel:filters:ListSecrets'] :: ListSecrets -> Maybe [Filter]

-- | Create a value of <a>ListSecrets</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecrets'</a>, <a>listSecrets_nextToken</a> -
--   (Optional) Use this parameter in a request if you receive a
--   <tt>NextToken</tt> response in a previous request indicating there's
--   more output available. In a subsequent call, set it to the value of
--   the previous call <tt>NextToken</tt> response to indicate where the
--   output should continue from.
--   
--   <a>$sel:sortOrder:ListSecrets'</a>, <a>listSecrets_sortOrder</a> -
--   Lists secrets in the requested order.
--   
--   <a>$sel:maxResults:ListSecrets'</a>, <a>listSecrets_maxResults</a> -
--   (Optional) Limits the number of results you want to include in the
--   response. If you don't include this parameter, it defaults to a value
--   that's specific to the operation. If additional items exist beyond the
--   maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (isn't null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that Secrets Manager might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
--   
--   <a>$sel:filters:ListSecrets'</a>, <a>listSecrets_filters</a> - Lists
--   the secret request filters.
newListSecrets :: ListSecrets

-- | (Optional) Use this parameter in a request if you receive a
--   <tt>NextToken</tt> response in a previous request indicating there's
--   more output available. In a subsequent call, set it to the value of
--   the previous call <tt>NextToken</tt> response to indicate where the
--   output should continue from.
listSecrets_nextToken :: Lens' ListSecrets (Maybe Text)

-- | Lists secrets in the requested order.
listSecrets_sortOrder :: Lens' ListSecrets (Maybe SortOrderType)

-- | (Optional) Limits the number of results you want to include in the
--   response. If you don't include this parameter, it defaults to a value
--   that's specific to the operation. If additional items exist beyond the
--   maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (isn't null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that Secrets Manager might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
listSecrets_maxResults :: Lens' ListSecrets (Maybe Natural)

-- | Lists the secret request filters.
listSecrets_filters :: Lens' ListSecrets (Maybe [Filter])

-- | <i>See:</i> <a>newListSecretsResponse</a> smart constructor.
data ListSecretsResponse
ListSecretsResponse' :: Maybe Text -> Maybe [SecretListEntry] -> Int -> ListSecretsResponse

-- | If present in the response, this value indicates that there's more
--   output available than included in the current response. This can occur
--   even when the response includes no values at all, such as when you ask
--   for a filtered view of a very long list. Use this value in the
--   <tt>NextToken</tt> request parameter in a subsequent call to the
--   operation to continue processing and get the next part of the output.
--   You should repeat this until the <tt>NextToken</tt> response element
--   comes back empty (as <tt>null</tt>).
[$sel:nextToken:ListSecretsResponse'] :: ListSecretsResponse -> Maybe Text

-- | A list of the secrets in the account.
[$sel:secretList:ListSecretsResponse'] :: ListSecretsResponse -> Maybe [SecretListEntry]

-- | The response's http status code.
[$sel:httpStatus:ListSecretsResponse'] :: ListSecretsResponse -> Int

-- | Create a value of <a>ListSecretsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecrets'</a>,
--   <a>listSecretsResponse_nextToken</a> - If present in the response,
--   this value indicates that there's more output available than included
--   in the current response. This can occur even when the response
--   includes no values at all, such as when you ask for a filtered view of
--   a very long list. Use this value in the <tt>NextToken</tt> request
--   parameter in a subsequent call to the operation to continue processing
--   and get the next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back empty (as
--   <tt>null</tt>).
--   
--   <a>$sel:secretList:ListSecretsResponse'</a>,
--   <a>listSecretsResponse_secretList</a> - A list of the secrets in the
--   account.
--   
--   <a>$sel:httpStatus:ListSecretsResponse'</a>,
--   <a>listSecretsResponse_httpStatus</a> - The response's http status
--   code.
newListSecretsResponse :: Int -> ListSecretsResponse

-- | If present in the response, this value indicates that there's more
--   output available than included in the current response. This can occur
--   even when the response includes no values at all, such as when you ask
--   for a filtered view of a very long list. Use this value in the
--   <tt>NextToken</tt> request parameter in a subsequent call to the
--   operation to continue processing and get the next part of the output.
--   You should repeat this until the <tt>NextToken</tt> response element
--   comes back empty (as <tt>null</tt>).
listSecretsResponse_nextToken :: Lens' ListSecretsResponse (Maybe Text)

-- | A list of the secrets in the account.
listSecretsResponse_secretList :: Lens' ListSecretsResponse (Maybe [SecretListEntry])

-- | The response's http status code.
listSecretsResponse_httpStatus :: Lens' ListSecretsResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.ListSecrets.ListSecrets
instance GHC.Show.Show Network.AWS.SecretsManager.ListSecrets.ListSecrets
instance GHC.Read.Read Network.AWS.SecretsManager.ListSecrets.ListSecrets
instance GHC.Classes.Eq Network.AWS.SecretsManager.ListSecrets.ListSecrets
instance GHC.Generics.Generic Network.AWS.SecretsManager.ListSecrets.ListSecretsResponse
instance GHC.Show.Show Network.AWS.SecretsManager.ListSecrets.ListSecretsResponse
instance GHC.Read.Read Network.AWS.SecretsManager.ListSecrets.ListSecretsResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.ListSecrets.ListSecretsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.ListSecrets.ListSecrets
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.ListSecrets.ListSecretsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SecretsManager.ListSecrets.ListSecrets
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.ListSecrets.ListSecrets
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.ListSecrets.ListSecrets
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.ListSecrets.ListSecrets
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.ListSecrets.ListSecrets
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.ListSecrets.ListSecrets
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.ListSecrets.ListSecrets


-- | Lists all of the versions attached to the specified secret. The output
--   does not include the <tt>SecretString</tt> or <tt>SecretBinary</tt>
--   fields. By default, the list includes only versions that have at least
--   one staging label in <tt>VersionStage</tt> attached.
--   
--   Always check the <tt>NextToken</tt> response parameter when calling
--   any of the <tt>List*</tt> operations. These operations can
--   occasionally return an empty or shorter than expected list of results
--   even when there more results become available. When this happens, the
--   <tt>NextToken</tt> response parameter contains a value to pass to the
--   next call to the same API to request the next part of the list.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:ListSecretVersionIds</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To list the secrets in an account, use ListSecrets.</li>
--   </ul>
--   
--   This operation returns paginated results.
module Network.AWS.SecretsManager.ListSecretVersionIds

-- | <i>See:</i> <a>newListSecretVersionIds</a> smart constructor.
data ListSecretVersionIds
ListSecretVersionIds' :: Maybe Text -> Maybe Natural -> Maybe Bool -> Text -> ListSecretVersionIds

-- | (Optional) Use this parameter in a request if you receive a
--   <tt>NextToken</tt> response in a previous request indicating there's
--   more output available. In a subsequent call, set it to the value of
--   the previous call <tt>NextToken</tt> response to indicate where the
--   output should continue from.
[$sel:nextToken:ListSecretVersionIds'] :: ListSecretVersionIds -> Maybe Text

-- | (Optional) Limits the number of results you want to include in the
--   response. If you don't include this parameter, it defaults to a value
--   that's specific to the operation. If additional items exist beyond the
--   maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (isn't null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that Secrets Manager might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
[$sel:maxResults:ListSecretVersionIds'] :: ListSecretVersionIds -> Maybe Natural

-- | (Optional) Specifies that you want the results to include versions
--   that do not have any staging labels attached to them. Such versions
--   are considered deprecated and are subject to deletion by Secrets
--   Manager as needed.
[$sel:includeDeprecated:ListSecretVersionIds'] :: ListSecretVersionIds -> Maybe Bool

-- | The identifier for the secret containing the versions you want to
--   list. You can specify either the Amazon Resource Name (ARN) or the
--   friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:ListSecretVersionIds'] :: ListSecretVersionIds -> Text

-- | Create a value of <a>ListSecretVersionIds</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecretVersionIds'</a>,
--   <a>listSecretVersionIds_nextToken</a> - (Optional) Use this parameter
--   in a request if you receive a <tt>NextToken</tt> response in a
--   previous request indicating there's more output available. In a
--   subsequent call, set it to the value of the previous call
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
--   
--   <a>$sel:maxResults:ListSecretVersionIds'</a>,
--   <a>listSecretVersionIds_maxResults</a> - (Optional) Limits the number
--   of results you want to include in the response. If you don't include
--   this parameter, it defaults to a value that's specific to the
--   operation. If additional items exist beyond the maximum you specify,
--   the <tt>NextToken</tt> response element is present and has a value
--   (isn't null). Include that value as the <tt>NextToken</tt> request
--   parameter in the next call to the operation to get the next part of
--   the results. Note that Secrets Manager might return fewer results than
--   the maximum even when there are more results available. You should
--   check <tt>NextToken</tt> after every operation to ensure that you
--   receive all of the results.
--   
--   <a>$sel:includeDeprecated:ListSecretVersionIds'</a>,
--   <a>listSecretVersionIds_includeDeprecated</a> - (Optional) Specifies
--   that you want the results to include versions that do not have any
--   staging labels attached to them. Such versions are considered
--   deprecated and are subject to deletion by Secrets Manager as needed.
--   
--   <a>$sel:secretId:ListSecretVersionIds'</a>,
--   <a>listSecretVersionIds_secretId</a> - The identifier for the secret
--   containing the versions you want to list. You can specify either the
--   Amazon Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newListSecretVersionIds :: Text -> ListSecretVersionIds

-- | (Optional) Use this parameter in a request if you receive a
--   <tt>NextToken</tt> response in a previous request indicating there's
--   more output available. In a subsequent call, set it to the value of
--   the previous call <tt>NextToken</tt> response to indicate where the
--   output should continue from.
listSecretVersionIds_nextToken :: Lens' ListSecretVersionIds (Maybe Text)

-- | (Optional) Limits the number of results you want to include in the
--   response. If you don't include this parameter, it defaults to a value
--   that's specific to the operation. If additional items exist beyond the
--   maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (isn't null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that Secrets Manager might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
listSecretVersionIds_maxResults :: Lens' ListSecretVersionIds (Maybe Natural)

-- | (Optional) Specifies that you want the results to include versions
--   that do not have any staging labels attached to them. Such versions
--   are considered deprecated and are subject to deletion by Secrets
--   Manager as needed.
listSecretVersionIds_includeDeprecated :: Lens' ListSecretVersionIds (Maybe Bool)

-- | The identifier for the secret containing the versions you want to
--   list. You can specify either the Amazon Resource Name (ARN) or the
--   friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
listSecretVersionIds_secretId :: Lens' ListSecretVersionIds Text

-- | <i>See:</i> <a>newListSecretVersionIdsResponse</a> smart constructor.
data ListSecretVersionIdsResponse
ListSecretVersionIdsResponse' :: Maybe Text -> Maybe [SecretVersionsListEntry] -> Maybe Text -> Maybe Text -> Int -> ListSecretVersionIdsResponse

-- | If present in the response, this value indicates that there's more
--   output available than included in the current response. This can occur
--   even when the response includes no values at all, such as when you ask
--   for a filtered view of a very long list. Use this value in the
--   <tt>NextToken</tt> request parameter in a subsequent call to the
--   operation to continue processing and get the next part of the output.
--   You should repeat this until the <tt>NextToken</tt> response element
--   comes back empty (as <tt>null</tt>).
[$sel:nextToken:ListSecretVersionIdsResponse'] :: ListSecretVersionIdsResponse -> Maybe Text

-- | The list of the currently available versions of the specified secret.
[$sel:versions:ListSecretVersionIdsResponse'] :: ListSecretVersionIdsResponse -> Maybe [SecretVersionsListEntry]

-- | The Amazon Resource Name (ARN) for the secret.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
[$sel:arn:ListSecretVersionIdsResponse'] :: ListSecretVersionIdsResponse -> Maybe Text

-- | The friendly name of the secret.
[$sel:name:ListSecretVersionIdsResponse'] :: ListSecretVersionIdsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSecretVersionIdsResponse'] :: ListSecretVersionIdsResponse -> Int

-- | Create a value of <a>ListSecretVersionIdsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecretVersionIds'</a>,
--   <a>listSecretVersionIdsResponse_nextToken</a> - If present in the
--   response, this value indicates that there's more output available than
--   included in the current response. This can occur even when the
--   response includes no values at all, such as when you ask for a
--   filtered view of a very long list. Use this value in the
--   <tt>NextToken</tt> request parameter in a subsequent call to the
--   operation to continue processing and get the next part of the output.
--   You should repeat this until the <tt>NextToken</tt> response element
--   comes back empty (as <tt>null</tt>).
--   
--   <a>$sel:versions:ListSecretVersionIdsResponse'</a>,
--   <a>listSecretVersionIdsResponse_versions</a> - The list of the
--   currently available versions of the specified secret.
--   
--   <a>$sel:arn:ListSecretVersionIdsResponse'</a>,
--   <a>listSecretVersionIdsResponse_arn</a> - The Amazon Resource Name
--   (ARN) for the secret.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
--   
--   <a>$sel:name:ListSecretVersionIdsResponse'</a>,
--   <a>listSecretVersionIdsResponse_name</a> - The friendly name of the
--   secret.
--   
--   <a>$sel:httpStatus:ListSecretVersionIdsResponse'</a>,
--   <a>listSecretVersionIdsResponse_httpStatus</a> - The response's http
--   status code.
newListSecretVersionIdsResponse :: Int -> ListSecretVersionIdsResponse

-- | If present in the response, this value indicates that there's more
--   output available than included in the current response. This can occur
--   even when the response includes no values at all, such as when you ask
--   for a filtered view of a very long list. Use this value in the
--   <tt>NextToken</tt> request parameter in a subsequent call to the
--   operation to continue processing and get the next part of the output.
--   You should repeat this until the <tt>NextToken</tt> response element
--   comes back empty (as <tt>null</tt>).
listSecretVersionIdsResponse_nextToken :: Lens' ListSecretVersionIdsResponse (Maybe Text)

-- | The list of the currently available versions of the specified secret.
listSecretVersionIdsResponse_versions :: Lens' ListSecretVersionIdsResponse (Maybe [SecretVersionsListEntry])

-- | The Amazon Resource Name (ARN) for the secret.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
listSecretVersionIdsResponse_arn :: Lens' ListSecretVersionIdsResponse (Maybe Text)

-- | The friendly name of the secret.
listSecretVersionIdsResponse_name :: Lens' ListSecretVersionIdsResponse (Maybe Text)

-- | The response's http status code.
listSecretVersionIdsResponse_httpStatus :: Lens' ListSecretVersionIdsResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds
instance GHC.Show.Show Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds
instance GHC.Read.Read Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds
instance GHC.Classes.Eq Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds
instance GHC.Generics.Generic Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIdsResponse
instance GHC.Show.Show Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIdsResponse
instance GHC.Read.Read Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIdsResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIdsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIdsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.ListSecretVersionIds.ListSecretVersionIds


-- | Retrieves the contents of the encrypted fields <tt>SecretString</tt>
--   or <tt>SecretBinary</tt> from the specified version of a secret,
--   whichever contains content.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:GetSecretValue</li>
--   <li>kms:Decrypt - required only if you use a customer-managed Amazon
--   Web Services KMS key to encrypt the secret. You do not need this
--   permission to use the account's default Amazon Web Services managed
--   CMK for Secrets Manager.</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To create a new version of the secret with different encrypted
--   information, use PutSecretValue.</li>
--   <li>To retrieve the non-encrypted details for the secret, use
--   DescribeSecret.</li>
--   </ul>
module Network.AWS.SecretsManager.GetSecretValue

-- | <i>See:</i> <a>newGetSecretValue</a> smart constructor.
data GetSecretValue
GetSecretValue' :: Maybe Text -> Maybe Text -> Text -> GetSecretValue

-- | Specifies the unique identifier of the version of the secret that you
--   want to retrieve. If you specify both this parameter and
--   <tt>VersionStage</tt>, the two parameters must refer to the same
--   secret version. If you don't specify either a <tt>VersionStage</tt> or
--   <tt>VersionId</tt> then the default is to perform the operation on the
--   version with the <tt>VersionStage</tt> value of <tt>AWSCURRENT</tt>.
--   
--   This value is typically a <a>UUID-type</a> value with 32 hexadecimal
--   digits.
[$sel:versionId:GetSecretValue'] :: GetSecretValue -> Maybe Text

-- | Specifies the secret version that you want to retrieve by the staging
--   label attached to the version.
--   
--   Staging labels are used to keep track of different versions during the
--   rotation process. If you specify both this parameter and
--   <tt>VersionId</tt>, the two parameters must refer to the same secret
--   version . If you don't specify either a <tt>VersionStage</tt> or
--   <tt>VersionId</tt>, then the default is to perform the operation on
--   the version with the <tt>VersionStage</tt> value of
--   <tt>AWSCURRENT</tt>.
[$sel:versionStage:GetSecretValue'] :: GetSecretValue -> Maybe Text

-- | Specifies the secret containing the version that you want to retrieve.
--   You can specify either the Amazon Resource Name (ARN) or the friendly
--   name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:GetSecretValue'] :: GetSecretValue -> Text

-- | Create a value of <a>GetSecretValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:GetSecretValue'</a>, <a>getSecretValue_versionId</a>
--   - Specifies the unique identifier of the version of the secret that
--   you want to retrieve. If you specify both this parameter and
--   <tt>VersionStage</tt>, the two parameters must refer to the same
--   secret version. If you don't specify either a <tt>VersionStage</tt> or
--   <tt>VersionId</tt> then the default is to perform the operation on the
--   version with the <tt>VersionStage</tt> value of <tt>AWSCURRENT</tt>.
--   
--   This value is typically a <a>UUID-type</a> value with 32 hexadecimal
--   digits.
--   
--   <a>$sel:versionStage:GetSecretValue'</a>,
--   <a>getSecretValue_versionStage</a> - Specifies the secret version that
--   you want to retrieve by the staging label attached to the version.
--   
--   Staging labels are used to keep track of different versions during the
--   rotation process. If you specify both this parameter and
--   <tt>VersionId</tt>, the two parameters must refer to the same secret
--   version . If you don't specify either a <tt>VersionStage</tt> or
--   <tt>VersionId</tt>, then the default is to perform the operation on
--   the version with the <tt>VersionStage</tt> value of
--   <tt>AWSCURRENT</tt>.
--   
--   <a>$sel:secretId:GetSecretValue'</a>, <a>getSecretValue_secretId</a> -
--   Specifies the secret containing the version that you want to retrieve.
--   You can specify either the Amazon Resource Name (ARN) or the friendly
--   name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newGetSecretValue :: Text -> GetSecretValue

-- | Specifies the unique identifier of the version of the secret that you
--   want to retrieve. If you specify both this parameter and
--   <tt>VersionStage</tt>, the two parameters must refer to the same
--   secret version. If you don't specify either a <tt>VersionStage</tt> or
--   <tt>VersionId</tt> then the default is to perform the operation on the
--   version with the <tt>VersionStage</tt> value of <tt>AWSCURRENT</tt>.
--   
--   This value is typically a <a>UUID-type</a> value with 32 hexadecimal
--   digits.
getSecretValue_versionId :: Lens' GetSecretValue (Maybe Text)

-- | Specifies the secret version that you want to retrieve by the staging
--   label attached to the version.
--   
--   Staging labels are used to keep track of different versions during the
--   rotation process. If you specify both this parameter and
--   <tt>VersionId</tt>, the two parameters must refer to the same secret
--   version . If you don't specify either a <tt>VersionStage</tt> or
--   <tt>VersionId</tt>, then the default is to perform the operation on
--   the version with the <tt>VersionStage</tt> value of
--   <tt>AWSCURRENT</tt>.
getSecretValue_versionStage :: Lens' GetSecretValue (Maybe Text)

-- | Specifies the secret containing the version that you want to retrieve.
--   You can specify either the Amazon Resource Name (ARN) or the friendly
--   name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
getSecretValue_secretId :: Lens' GetSecretValue Text

-- | <i>See:</i> <a>newGetSecretValueResponse</a> smart constructor.
data GetSecretValueResponse
GetSecretValueResponse' :: Maybe POSIX -> Maybe (Sensitive Base64) -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Int -> GetSecretValueResponse

-- | The date and time that this version of the secret was created.
[$sel:createdDate:GetSecretValueResponse'] :: GetSecretValueResponse -> Maybe POSIX

-- | The decrypted part of the protected secret information that was
--   originally provided as binary data in the form of a byte array. The
--   response parameter represents the binary data as a
--   <a>base64-encoded</a> string.
--   
--   This parameter is not used if the secret is created by the Secrets
--   Manager console.
--   
--   If you store custom information in this field of the secret, then you
--   must code your Lambda rotation function to parse and interpret
--   whatever you store in the <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> fields.
[$sel:secretBinary:GetSecretValueResponse'] :: GetSecretValueResponse -> Maybe (Sensitive Base64)

-- | A list of all of the staging labels currently attached to this version
--   of the secret.
[$sel:versionStages:GetSecretValueResponse'] :: GetSecretValueResponse -> Maybe (NonEmpty Text)

-- | The ARN of the secret.
[$sel:arn:GetSecretValueResponse'] :: GetSecretValueResponse -> Maybe Text

-- | The friendly name of the secret.
[$sel:name:GetSecretValueResponse'] :: GetSecretValueResponse -> Maybe Text

-- | The unique identifier of this version of the secret.
[$sel:versionId:GetSecretValueResponse'] :: GetSecretValueResponse -> Maybe Text

-- | The decrypted part of the protected secret information that was
--   originally provided as a string.
--   
--   If you create this secret by using the Secrets Manager console then
--   only the <tt>SecretString</tt> parameter contains data. Secrets
--   Manager stores the information as a JSON structure of key/value pairs
--   that the Lambda rotation function knows how to parse.
--   
--   If you store custom information in the secret by using the
--   CreateSecret, UpdateSecret, or PutSecretValue API operations instead
--   of the Secrets Manager console, or by using the <b>Other secret
--   type</b> in the console, then you must code your Lambda rotation
--   function to parse and interpret those values.
[$sel:secretString:GetSecretValueResponse'] :: GetSecretValueResponse -> Maybe (Sensitive Text)

-- | The response's http status code.
[$sel:httpStatus:GetSecretValueResponse'] :: GetSecretValueResponse -> Int

-- | Create a value of <a>GetSecretValueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_createdDate</a> - The date and time that
--   this version of the secret was created.
--   
--   <a>$sel:secretBinary:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_secretBinary</a> - The decrypted part of the
--   protected secret information that was originally provided as binary
--   data in the form of a byte array. The response parameter represents
--   the binary data as a <a>base64-encoded</a> string.
--   
--   This parameter is not used if the secret is created by the Secrets
--   Manager console.
--   
--   If you store custom information in this field of the secret, then you
--   must code your Lambda rotation function to parse and interpret
--   whatever you store in the <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> fields.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:versionStages:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_versionStages</a> - A list of all of the
--   staging labels currently attached to this version of the secret.
--   
--   <a>$sel:arn:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_arn</a> - The ARN of the secret.
--   
--   <a>$sel:name:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_name</a> - The friendly name of the secret.
--   
--   <a>$sel:versionId:GetSecretValue'</a>,
--   <a>getSecretValueResponse_versionId</a> - The unique identifier of
--   this version of the secret.
--   
--   <a>$sel:secretString:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_secretString</a> - The decrypted part of the
--   protected secret information that was originally provided as a string.
--   
--   If you create this secret by using the Secrets Manager console then
--   only the <tt>SecretString</tt> parameter contains data. Secrets
--   Manager stores the information as a JSON structure of key/value pairs
--   that the Lambda rotation function knows how to parse.
--   
--   If you store custom information in the secret by using the
--   CreateSecret, UpdateSecret, or PutSecretValue API operations instead
--   of the Secrets Manager console, or by using the <b>Other secret
--   type</b> in the console, then you must code your Lambda rotation
--   function to parse and interpret those values.
--   
--   <a>$sel:httpStatus:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_httpStatus</a> - The response's http status
--   code.
newGetSecretValueResponse :: Int -> GetSecretValueResponse

-- | The date and time that this version of the secret was created.
getSecretValueResponse_createdDate :: Lens' GetSecretValueResponse (Maybe UTCTime)

-- | The decrypted part of the protected secret information that was
--   originally provided as binary data in the form of a byte array. The
--   response parameter represents the binary data as a
--   <a>base64-encoded</a> string.
--   
--   This parameter is not used if the secret is created by the Secrets
--   Manager console.
--   
--   If you store custom information in this field of the secret, then you
--   must code your Lambda rotation function to parse and interpret
--   whatever you store in the <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> fields.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
getSecretValueResponse_secretBinary :: Lens' GetSecretValueResponse (Maybe ByteString)

-- | A list of all of the staging labels currently attached to this version
--   of the secret.
getSecretValueResponse_versionStages :: Lens' GetSecretValueResponse (Maybe (NonEmpty Text))

-- | The ARN of the secret.
getSecretValueResponse_arn :: Lens' GetSecretValueResponse (Maybe Text)

-- | The friendly name of the secret.
getSecretValueResponse_name :: Lens' GetSecretValueResponse (Maybe Text)

-- | The unique identifier of this version of the secret.
getSecretValueResponse_versionId :: Lens' GetSecretValueResponse (Maybe Text)

-- | The decrypted part of the protected secret information that was
--   originally provided as a string.
--   
--   If you create this secret by using the Secrets Manager console then
--   only the <tt>SecretString</tt> parameter contains data. Secrets
--   Manager stores the information as a JSON structure of key/value pairs
--   that the Lambda rotation function knows how to parse.
--   
--   If you store custom information in the secret by using the
--   CreateSecret, UpdateSecret, or PutSecretValue API operations instead
--   of the Secrets Manager console, or by using the <b>Other secret
--   type</b> in the console, then you must code your Lambda rotation
--   function to parse and interpret those values.
getSecretValueResponse_secretString :: Lens' GetSecretValueResponse (Maybe Text)

-- | The response's http status code.
getSecretValueResponse_httpStatus :: Lens' GetSecretValueResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.GetSecretValue.GetSecretValue
instance GHC.Show.Show Network.AWS.SecretsManager.GetSecretValue.GetSecretValue
instance GHC.Read.Read Network.AWS.SecretsManager.GetSecretValue.GetSecretValue
instance GHC.Classes.Eq Network.AWS.SecretsManager.GetSecretValue.GetSecretValue
instance GHC.Generics.Generic Network.AWS.SecretsManager.GetSecretValue.GetSecretValueResponse
instance GHC.Show.Show Network.AWS.SecretsManager.GetSecretValue.GetSecretValueResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.GetSecretValue.GetSecretValueResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.GetSecretValue.GetSecretValue
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.GetSecretValue.GetSecretValueResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.GetSecretValue.GetSecretValue
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.GetSecretValue.GetSecretValue
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.GetSecretValue.GetSecretValue
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.GetSecretValue.GetSecretValue
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.GetSecretValue.GetSecretValue
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.GetSecretValue.GetSecretValue


-- | Retrieves the JSON text of the resource-based policy document attached
--   to the specified secret. The JSON request string input and response
--   output displays formatted code with white space and line breaks for
--   better readability. Submit your input as a single line JSON string.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:GetResourcePolicy</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To attach a resource policy to a secret, use
--   PutResourcePolicy.</li>
--   <li>To delete the resource-based policy attached to a secret, use
--   DeleteResourcePolicy.</li>
--   <li>To list all of the currently available secrets, use
--   ListSecrets.</li>
--   </ul>
module Network.AWS.SecretsManager.GetResourcePolicy

-- | <i>See:</i> <a>newGetResourcePolicy</a> smart constructor.
data GetResourcePolicy
GetResourcePolicy' :: Text -> GetResourcePolicy

-- | Specifies the secret that you want to retrieve the attached
--   resource-based policy for. You can specify either the Amazon Resource
--   Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:GetResourcePolicy'] :: GetResourcePolicy -> Text

-- | Create a value of <a>GetResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:GetResourcePolicy'</a>,
--   <a>getResourcePolicy_secretId</a> - Specifies the secret that you want
--   to retrieve the attached resource-based policy for. You can specify
--   either the Amazon Resource Name (ARN) or the friendly name of the
--   secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newGetResourcePolicy :: Text -> GetResourcePolicy

-- | Specifies the secret that you want to retrieve the attached
--   resource-based policy for. You can specify either the Amazon Resource
--   Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
getResourcePolicy_secretId :: Lens' GetResourcePolicy Text

-- | <i>See:</i> <a>newGetResourcePolicyResponse</a> smart constructor.
data GetResourcePolicyResponse
GetResourcePolicyResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetResourcePolicyResponse

-- | The ARN of the secret that the resource-based policy was retrieved
--   for.
[$sel:arn:GetResourcePolicyResponse'] :: GetResourcePolicyResponse -> Maybe Text

-- | A JSON-formatted string that describes the permissions that are
--   associated with the attached secret. These permissions are combined
--   with any permissions that are associated with the user or role that
--   attempts to access this secret. The combined permissions specify who
--   can access the secret and what actions they can perform. For more
--   information, see <a>Authentication and Access Control for Amazon Web
--   Services Secrets Manager</a> in the <i>Amazon Web Services Secrets
--   Manager User Guide</i>.
[$sel:resourcePolicy:GetResourcePolicyResponse'] :: GetResourcePolicyResponse -> Maybe Text

-- | The friendly name of the secret that the resource-based policy was
--   retrieved for.
[$sel:name:GetResourcePolicyResponse'] :: GetResourcePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetResourcePolicyResponse'] :: GetResourcePolicyResponse -> Int

-- | Create a value of <a>GetResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_arn</a> - The ARN of the secret that the
--   resource-based policy was retrieved for.
--   
--   <a>$sel:resourcePolicy:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_resourcePolicy</a> - A JSON-formatted
--   string that describes the permissions that are associated with the
--   attached secret. These permissions are combined with any permissions
--   that are associated with the user or role that attempts to access this
--   secret. The combined permissions specify who can access the secret and
--   what actions they can perform. For more information, see
--   <a>Authentication and Access Control for Amazon Web Services Secrets
--   Manager</a> in the <i>Amazon Web Services Secrets Manager User
--   Guide</i>.
--   
--   <a>$sel:name:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_name</a> - The friendly name of the
--   secret that the resource-based policy was retrieved for.
--   
--   <a>$sel:httpStatus:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetResourcePolicyResponse :: Int -> GetResourcePolicyResponse

-- | The ARN of the secret that the resource-based policy was retrieved
--   for.
getResourcePolicyResponse_arn :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | A JSON-formatted string that describes the permissions that are
--   associated with the attached secret. These permissions are combined
--   with any permissions that are associated with the user or role that
--   attempts to access this secret. The combined permissions specify who
--   can access the secret and what actions they can perform. For more
--   information, see <a>Authentication and Access Control for Amazon Web
--   Services Secrets Manager</a> in the <i>Amazon Web Services Secrets
--   Manager User Guide</i>.
getResourcePolicyResponse_resourcePolicy :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | The friendly name of the secret that the resource-based policy was
--   retrieved for.
getResourcePolicyResponse_name :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
getResourcePolicyResponse_httpStatus :: Lens' GetResourcePolicyResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicy
instance GHC.Show.Show Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicy
instance GHC.Read.Read Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicy
instance GHC.Classes.Eq Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicy
instance GHC.Generics.Generic Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicyResponse
instance GHC.Show.Show Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicyResponse
instance GHC.Read.Read Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicyResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.GetResourcePolicy.GetResourcePolicy


-- | Generates a random password of the specified complexity. This
--   operation is intended for use in the Lambda rotation function. Per
--   best practice, we recommend that you specify the maximum length and
--   include every character type that the system you are generating a
--   password for can support.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:GetRandomPassword</li>
--   </ul>
module Network.AWS.SecretsManager.GetRandomPassword

-- | <i>See:</i> <a>newGetRandomPassword</a> smart constructor.
data GetRandomPassword
GetRandomPassword' :: Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Natural -> Maybe Bool -> Maybe Bool -> GetRandomPassword

-- | A string that includes characters that should not be included in the
--   generated password. The default is that all characters from the
--   included sets can be used.
[$sel:excludeCharacters:GetRandomPassword'] :: GetRandomPassword -> Maybe Text

-- | Specifies that the generated password should not include lowercase
--   letters. The default if you do not include this switch parameter is
--   that lowercase letters can be included.
[$sel:excludeLowercase:GetRandomPassword'] :: GetRandomPassword -> Maybe Bool

-- | Specifies that the generated password can include the space character.
--   The default if you do not include this switch parameter is that the
--   space character is not included.
[$sel:includeSpace:GetRandomPassword'] :: GetRandomPassword -> Maybe Bool

-- | A boolean value that specifies whether the generated password must
--   include at least one of every allowed character type. The default
--   value is <tt>True</tt> and the operation requires at least one of
--   every character type.
[$sel:requireEachIncludedType:GetRandomPassword'] :: GetRandomPassword -> Maybe Bool

-- | Specifies that the generated password should not include digits. The
--   default if you do not include this switch parameter is that digits can
--   be included.
[$sel:excludeNumbers:GetRandomPassword'] :: GetRandomPassword -> Maybe Bool

-- | The desired length of the generated password. The default value if you
--   do not include this parameter is 32 characters.
[$sel:passwordLength:GetRandomPassword'] :: GetRandomPassword -> Maybe Natural

-- | Specifies that the generated password should not include uppercase
--   letters. The default if you do not include this switch parameter is
--   that uppercase letters can be included.
[$sel:excludeUppercase:GetRandomPassword'] :: GetRandomPassword -> Maybe Bool

-- | Specifies that the generated password should not include punctuation
--   characters. The default if you do not include this switch parameter is
--   that punctuation characters can be included.
--   
--   The following are the punctuation characters that <i>can</i> be
--   included in the generated password if you don't explicitly exclude
--   them with <tt>ExcludeCharacters</tt> or <tt>ExcludePunctuation</tt>:
--   
--   <pre>
--   ! " # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \ ] ^ _ ` { | } ~
--   </pre>
[$sel:excludePunctuation:GetRandomPassword'] :: GetRandomPassword -> Maybe Bool

-- | Create a value of <a>GetRandomPassword</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeCharacters:GetRandomPassword'</a>,
--   <a>getRandomPassword_excludeCharacters</a> - A string that includes
--   characters that should not be included in the generated password. The
--   default is that all characters from the included sets can be used.
--   
--   <a>$sel:excludeLowercase:GetRandomPassword'</a>,
--   <a>getRandomPassword_excludeLowercase</a> - Specifies that the
--   generated password should not include lowercase letters. The default
--   if you do not include this switch parameter is that lowercase letters
--   can be included.
--   
--   <a>$sel:includeSpace:GetRandomPassword'</a>,
--   <a>getRandomPassword_includeSpace</a> - Specifies that the generated
--   password can include the space character. The default if you do not
--   include this switch parameter is that the space character is not
--   included.
--   
--   <a>$sel:requireEachIncludedType:GetRandomPassword'</a>,
--   <a>getRandomPassword_requireEachIncludedType</a> - A boolean value
--   that specifies whether the generated password must include at least
--   one of every allowed character type. The default value is
--   <tt>True</tt> and the operation requires at least one of every
--   character type.
--   
--   <a>$sel:excludeNumbers:GetRandomPassword'</a>,
--   <a>getRandomPassword_excludeNumbers</a> - Specifies that the generated
--   password should not include digits. The default if you do not include
--   this switch parameter is that digits can be included.
--   
--   <a>$sel:passwordLength:GetRandomPassword'</a>,
--   <a>getRandomPassword_passwordLength</a> - The desired length of the
--   generated password. The default value if you do not include this
--   parameter is 32 characters.
--   
--   <a>$sel:excludeUppercase:GetRandomPassword'</a>,
--   <a>getRandomPassword_excludeUppercase</a> - Specifies that the
--   generated password should not include uppercase letters. The default
--   if you do not include this switch parameter is that uppercase letters
--   can be included.
--   
--   <a>$sel:excludePunctuation:GetRandomPassword'</a>,
--   <a>getRandomPassword_excludePunctuation</a> - Specifies that the
--   generated password should not include punctuation characters. The
--   default if you do not include this switch parameter is that
--   punctuation characters can be included.
--   
--   The following are the punctuation characters that <i>can</i> be
--   included in the generated password if you don't explicitly exclude
--   them with <tt>ExcludeCharacters</tt> or <tt>ExcludePunctuation</tt>:
--   
--   <pre>
--   ! " # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \ ] ^ _ ` { | } ~
--   </pre>
newGetRandomPassword :: GetRandomPassword

-- | A string that includes characters that should not be included in the
--   generated password. The default is that all characters from the
--   included sets can be used.
getRandomPassword_excludeCharacters :: Lens' GetRandomPassword (Maybe Text)

-- | Specifies that the generated password should not include lowercase
--   letters. The default if you do not include this switch parameter is
--   that lowercase letters can be included.
getRandomPassword_excludeLowercase :: Lens' GetRandomPassword (Maybe Bool)

-- | Specifies that the generated password can include the space character.
--   The default if you do not include this switch parameter is that the
--   space character is not included.
getRandomPassword_includeSpace :: Lens' GetRandomPassword (Maybe Bool)

-- | A boolean value that specifies whether the generated password must
--   include at least one of every allowed character type. The default
--   value is <tt>True</tt> and the operation requires at least one of
--   every character type.
getRandomPassword_requireEachIncludedType :: Lens' GetRandomPassword (Maybe Bool)

-- | Specifies that the generated password should not include digits. The
--   default if you do not include this switch parameter is that digits can
--   be included.
getRandomPassword_excludeNumbers :: Lens' GetRandomPassword (Maybe Bool)

-- | The desired length of the generated password. The default value if you
--   do not include this parameter is 32 characters.
getRandomPassword_passwordLength :: Lens' GetRandomPassword (Maybe Natural)

-- | Specifies that the generated password should not include uppercase
--   letters. The default if you do not include this switch parameter is
--   that uppercase letters can be included.
getRandomPassword_excludeUppercase :: Lens' GetRandomPassword (Maybe Bool)

-- | Specifies that the generated password should not include punctuation
--   characters. The default if you do not include this switch parameter is
--   that punctuation characters can be included.
--   
--   The following are the punctuation characters that <i>can</i> be
--   included in the generated password if you don't explicitly exclude
--   them with <tt>ExcludeCharacters</tt> or <tt>ExcludePunctuation</tt>:
--   
--   <pre>
--   ! " # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \ ] ^ _ ` { | } ~
--   </pre>
getRandomPassword_excludePunctuation :: Lens' GetRandomPassword (Maybe Bool)

-- | <i>See:</i> <a>newGetRandomPasswordResponse</a> smart constructor.
data GetRandomPasswordResponse
GetRandomPasswordResponse' :: Maybe (Sensitive Text) -> Int -> GetRandomPasswordResponse

-- | A string with the generated password.
[$sel:randomPassword:GetRandomPasswordResponse'] :: GetRandomPasswordResponse -> Maybe (Sensitive Text)

-- | The response's http status code.
[$sel:httpStatus:GetRandomPasswordResponse'] :: GetRandomPasswordResponse -> Int

-- | Create a value of <a>GetRandomPasswordResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:randomPassword:GetRandomPasswordResponse'</a>,
--   <a>getRandomPasswordResponse_randomPassword</a> - A string with the
--   generated password.
--   
--   <a>$sel:httpStatus:GetRandomPasswordResponse'</a>,
--   <a>getRandomPasswordResponse_httpStatus</a> - The response's http
--   status code.
newGetRandomPasswordResponse :: Int -> GetRandomPasswordResponse

-- | A string with the generated password.
getRandomPasswordResponse_randomPassword :: Lens' GetRandomPasswordResponse (Maybe Text)

-- | The response's http status code.
getRandomPasswordResponse_httpStatus :: Lens' GetRandomPasswordResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.GetRandomPassword.GetRandomPassword
instance GHC.Show.Show Network.AWS.SecretsManager.GetRandomPassword.GetRandomPassword
instance GHC.Read.Read Network.AWS.SecretsManager.GetRandomPassword.GetRandomPassword
instance GHC.Classes.Eq Network.AWS.SecretsManager.GetRandomPassword.GetRandomPassword
instance GHC.Generics.Generic Network.AWS.SecretsManager.GetRandomPassword.GetRandomPasswordResponse
instance GHC.Show.Show Network.AWS.SecretsManager.GetRandomPassword.GetRandomPasswordResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.GetRandomPassword.GetRandomPasswordResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.GetRandomPassword.GetRandomPassword
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.GetRandomPassword.GetRandomPasswordResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.GetRandomPassword.GetRandomPassword
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.GetRandomPassword.GetRandomPassword
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.GetRandomPassword.GetRandomPassword
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.GetRandomPassword.GetRandomPassword
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.GetRandomPassword.GetRandomPassword
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.GetRandomPassword.GetRandomPassword


-- | Retrieves the details of a secret. It does not include the encrypted
--   fields. Secrets Manager only returns fields populated with a value in
--   the response.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:DescribeSecret</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To create a secret, use CreateSecret.</li>
--   <li>To modify a secret, use UpdateSecret.</li>
--   <li>To retrieve the encrypted secret information in a version of the
--   secret, use GetSecretValue.</li>
--   <li>To list all of the secrets in the Amazon Web Services account, use
--   ListSecrets.</li>
--   </ul>
module Network.AWS.SecretsManager.DescribeSecret

-- | <i>See:</i> <a>newDescribeSecret</a> smart constructor.
data DescribeSecret
DescribeSecret' :: Text -> DescribeSecret

-- | The identifier of the secret whose details you want to retrieve. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:DescribeSecret'] :: DescribeSecret -> Text

-- | Create a value of <a>DescribeSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:DescribeSecret'</a>, <a>describeSecret_secretId</a> -
--   The identifier of the secret whose details you want to retrieve. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newDescribeSecret :: Text -> DescribeSecret

-- | The identifier of the secret whose details you want to retrieve. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
describeSecret_secretId :: Lens' DescribeSecret Text

-- | <i>See:</i> <a>newDescribeSecretResponse</a> smart constructor.
data DescribeSecretResponse
DescribeSecretResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe [ReplicationStatusType] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe [Tag] -> Maybe Bool -> Maybe RotationRulesType -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe (HashMap Text (NonEmpty Text)) -> Int -> DescribeSecretResponse

-- | The date you created the secret.
[$sel:createdDate:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe POSIX

-- | Returns the name of the service that created this secret.
[$sel:owningService:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe Text

-- | The last date and time that the rotation process for this secret was
--   invoked.
--   
--   The most recent date and time that the Secrets Manager rotation
--   process successfully completed. If the secret doesn't rotate, Secrets
--   Manager returns a null value.
[$sel:lastRotatedDate:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe POSIX

-- | Describes a list of replication status objects as <tt>InProgress</tt>,
--   <tt>Failed</tt> or <tt>InSync</tt>.<tt>P</tt>
[$sel:replicationStatus:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe [ReplicationStatusType]

-- | The ARN of the secret.
[$sel:arn:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe Text

-- | The ARN or alias of the Amazon Web Services KMS customer master key
--   (CMK) that's used to encrypt the <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> fields in each version of the secret. If you
--   don't provide a key, then Secrets Manager defaults to encrypting the
--   secret fields with the default Amazon Web Services KMS CMK (the one
--   named <tt>awssecretsmanager</tt>) for this account.
[$sel:kmsKeyId:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe Text

-- | The user-provided friendly name of the secret.
[$sel:name:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe Text

-- | Specifies the primary region for secret replication.
[$sel:primaryRegion:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe Text

-- | The last date and time that this secret was modified in any way.
[$sel:lastChangedDate:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe POSIX

-- | This value exists if the secret is scheduled for deletion. Some time
--   after the specified date and time, Secrets Manager deletes the secret
--   and all of its versions.
--   
--   If a secret is scheduled for deletion, then its details, including the
--   encrypted secret information, is not accessible. To cancel a scheduled
--   deletion and restore access, use RestoreSecret.
[$sel:deletedDate:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe POSIX

-- | The list of user-defined tags that are associated with the secret. To
--   add tags to a secret, use TagResource. To remove tags, use
--   UntagResource.
[$sel:tags:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe [Tag]

-- | Specifies whether automatic rotation is enabled for this secret.
--   
--   To enable rotation, use RotateSecret with
--   <tt>AutomaticallyRotateAfterDays</tt> set to a value greater than 0.
--   To disable rotation, use CancelRotateSecret.
[$sel:rotationEnabled:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe Bool

-- | A structure with the rotation configuration for this secret.
[$sel:rotationRules:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe RotationRulesType

-- | The user-provided description of the secret.
[$sel:description:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe Text

-- | The ARN of a Lambda function that's invoked by Secrets Manager to
--   rotate the secret either automatically per the schedule or manually by
--   a call to <tt>RotateSecret</tt>.
[$sel:rotationLambdaARN:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe Text

-- | The last date that this secret was accessed. This value is truncated
--   to midnight of the date and therefore shows only the date, not the
--   time.
[$sel:lastAccessedDate:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe POSIX

-- | A list of all of the currently assigned <tt>VersionStage</tt> staging
--   labels and the <tt>VersionId</tt> that each is attached to. Staging
--   labels are used to keep track of the different versions during the
--   rotation process.
--   
--   A version that does not have any staging labels attached is considered
--   deprecated and subject to deletion. Such versions are not included in
--   this list.
[$sel:versionIdsToStages:DescribeSecretResponse'] :: DescribeSecretResponse -> Maybe (HashMap Text (NonEmpty Text))

-- | The response's http status code.
[$sel:httpStatus:DescribeSecretResponse'] :: DescribeSecretResponse -> Int

-- | Create a value of <a>DescribeSecretResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_createdDate</a> - The date you created the
--   secret.
--   
--   <a>$sel:owningService:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_owningService</a> - Returns the name of the
--   service that created this secret.
--   
--   <a>$sel:lastRotatedDate:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_lastRotatedDate</a> - The last date and time
--   that the rotation process for this secret was invoked.
--   
--   The most recent date and time that the Secrets Manager rotation
--   process successfully completed. If the secret doesn't rotate, Secrets
--   Manager returns a null value.
--   
--   <a>$sel:replicationStatus:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_replicationStatus</a> - Describes a list of
--   replication status objects as <tt>InProgress</tt>, <tt>Failed</tt> or
--   <tt>InSync</tt>.<tt>P</tt>
--   
--   <a>$sel:arn:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_arn</a> - The ARN of the secret.
--   
--   <a>$sel:kmsKeyId:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_kmsKeyId</a> - The ARN or alias of the
--   Amazon Web Services KMS customer master key (CMK) that's used to
--   encrypt the <tt>SecretString</tt> or <tt>SecretBinary</tt> fields in
--   each version of the secret. If you don't provide a key, then Secrets
--   Manager defaults to encrypting the secret fields with the default
--   Amazon Web Services KMS CMK (the one named <tt>awssecretsmanager</tt>)
--   for this account.
--   
--   <a>$sel:name:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_name</a> - The user-provided friendly name
--   of the secret.
--   
--   <a>$sel:primaryRegion:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_primaryRegion</a> - Specifies the primary
--   region for secret replication.
--   
--   <a>$sel:lastChangedDate:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_lastChangedDate</a> - The last date and time
--   that this secret was modified in any way.
--   
--   <a>$sel:deletedDate:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_deletedDate</a> - This value exists if the
--   secret is scheduled for deletion. Some time after the specified date
--   and time, Secrets Manager deletes the secret and all of its versions.
--   
--   If a secret is scheduled for deletion, then its details, including the
--   encrypted secret information, is not accessible. To cancel a scheduled
--   deletion and restore access, use RestoreSecret.
--   
--   <a>$sel:tags:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_tags</a> - The list of user-defined tags
--   that are associated with the secret. To add tags to a secret, use
--   TagResource. To remove tags, use UntagResource.
--   
--   <a>$sel:rotationEnabled:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_rotationEnabled</a> - Specifies whether
--   automatic rotation is enabled for this secret.
--   
--   To enable rotation, use RotateSecret with
--   <tt>AutomaticallyRotateAfterDays</tt> set to a value greater than 0.
--   To disable rotation, use CancelRotateSecret.
--   
--   <a>$sel:rotationRules:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_rotationRules</a> - A structure with the
--   rotation configuration for this secret.
--   
--   <a>$sel:description:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_description</a> - The user-provided
--   description of the secret.
--   
--   <a>$sel:rotationLambdaARN:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_rotationLambdaARN</a> - The ARN of a Lambda
--   function that's invoked by Secrets Manager to rotate the secret either
--   automatically per the schedule or manually by a call to
--   <tt>RotateSecret</tt>.
--   
--   <a>$sel:lastAccessedDate:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_lastAccessedDate</a> - The last date that
--   this secret was accessed. This value is truncated to midnight of the
--   date and therefore shows only the date, not the time.
--   
--   <a>$sel:versionIdsToStages:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_versionIdsToStages</a> - A list of all of
--   the currently assigned <tt>VersionStage</tt> staging labels and the
--   <tt>VersionId</tt> that each is attached to. Staging labels are used
--   to keep track of the different versions during the rotation process.
--   
--   A version that does not have any staging labels attached is considered
--   deprecated and subject to deletion. Such versions are not included in
--   this list.
--   
--   <a>$sel:httpStatus:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_httpStatus</a> - The response's http status
--   code.
newDescribeSecretResponse :: Int -> DescribeSecretResponse

-- | The date you created the secret.
describeSecretResponse_createdDate :: Lens' DescribeSecretResponse (Maybe UTCTime)

-- | Returns the name of the service that created this secret.
describeSecretResponse_owningService :: Lens' DescribeSecretResponse (Maybe Text)

-- | The last date and time that the rotation process for this secret was
--   invoked.
--   
--   The most recent date and time that the Secrets Manager rotation
--   process successfully completed. If the secret doesn't rotate, Secrets
--   Manager returns a null value.
describeSecretResponse_lastRotatedDate :: Lens' DescribeSecretResponse (Maybe UTCTime)

-- | Describes a list of replication status objects as <tt>InProgress</tt>,
--   <tt>Failed</tt> or <tt>InSync</tt>.<tt>P</tt>
describeSecretResponse_replicationStatus :: Lens' DescribeSecretResponse (Maybe [ReplicationStatusType])

-- | The ARN of the secret.
describeSecretResponse_arn :: Lens' DescribeSecretResponse (Maybe Text)

-- | The ARN or alias of the Amazon Web Services KMS customer master key
--   (CMK) that's used to encrypt the <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> fields in each version of the secret. If you
--   don't provide a key, then Secrets Manager defaults to encrypting the
--   secret fields with the default Amazon Web Services KMS CMK (the one
--   named <tt>awssecretsmanager</tt>) for this account.
describeSecretResponse_kmsKeyId :: Lens' DescribeSecretResponse (Maybe Text)

-- | The user-provided friendly name of the secret.
describeSecretResponse_name :: Lens' DescribeSecretResponse (Maybe Text)

-- | Specifies the primary region for secret replication.
describeSecretResponse_primaryRegion :: Lens' DescribeSecretResponse (Maybe Text)

-- | The last date and time that this secret was modified in any way.
describeSecretResponse_lastChangedDate :: Lens' DescribeSecretResponse (Maybe UTCTime)

-- | This value exists if the secret is scheduled for deletion. Some time
--   after the specified date and time, Secrets Manager deletes the secret
--   and all of its versions.
--   
--   If a secret is scheduled for deletion, then its details, including the
--   encrypted secret information, is not accessible. To cancel a scheduled
--   deletion and restore access, use RestoreSecret.
describeSecretResponse_deletedDate :: Lens' DescribeSecretResponse (Maybe UTCTime)

-- | The list of user-defined tags that are associated with the secret. To
--   add tags to a secret, use TagResource. To remove tags, use
--   UntagResource.
describeSecretResponse_tags :: Lens' DescribeSecretResponse (Maybe [Tag])

-- | Specifies whether automatic rotation is enabled for this secret.
--   
--   To enable rotation, use RotateSecret with
--   <tt>AutomaticallyRotateAfterDays</tt> set to a value greater than 0.
--   To disable rotation, use CancelRotateSecret.
describeSecretResponse_rotationEnabled :: Lens' DescribeSecretResponse (Maybe Bool)

-- | A structure with the rotation configuration for this secret.
describeSecretResponse_rotationRules :: Lens' DescribeSecretResponse (Maybe RotationRulesType)

-- | The user-provided description of the secret.
describeSecretResponse_description :: Lens' DescribeSecretResponse (Maybe Text)

-- | The ARN of a Lambda function that's invoked by Secrets Manager to
--   rotate the secret either automatically per the schedule or manually by
--   a call to <tt>RotateSecret</tt>.
describeSecretResponse_rotationLambdaARN :: Lens' DescribeSecretResponse (Maybe Text)

-- | The last date that this secret was accessed. This value is truncated
--   to midnight of the date and therefore shows only the date, not the
--   time.
describeSecretResponse_lastAccessedDate :: Lens' DescribeSecretResponse (Maybe UTCTime)

-- | A list of all of the currently assigned <tt>VersionStage</tt> staging
--   labels and the <tt>VersionId</tt> that each is attached to. Staging
--   labels are used to keep track of the different versions during the
--   rotation process.
--   
--   A version that does not have any staging labels attached is considered
--   deprecated and subject to deletion. Such versions are not included in
--   this list.
describeSecretResponse_versionIdsToStages :: Lens' DescribeSecretResponse (Maybe (HashMap Text (NonEmpty Text)))

-- | The response's http status code.
describeSecretResponse_httpStatus :: Lens' DescribeSecretResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.DescribeSecret.DescribeSecret
instance GHC.Show.Show Network.AWS.SecretsManager.DescribeSecret.DescribeSecret
instance GHC.Read.Read Network.AWS.SecretsManager.DescribeSecret.DescribeSecret
instance GHC.Classes.Eq Network.AWS.SecretsManager.DescribeSecret.DescribeSecret
instance GHC.Generics.Generic Network.AWS.SecretsManager.DescribeSecret.DescribeSecretResponse
instance GHC.Show.Show Network.AWS.SecretsManager.DescribeSecret.DescribeSecretResponse
instance GHC.Read.Read Network.AWS.SecretsManager.DescribeSecret.DescribeSecretResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.DescribeSecret.DescribeSecretResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.DescribeSecret.DescribeSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.DescribeSecret.DescribeSecretResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.DescribeSecret.DescribeSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.DescribeSecret.DescribeSecret
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.DescribeSecret.DescribeSecret
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.DescribeSecret.DescribeSecret
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.DescribeSecret.DescribeSecret
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.DescribeSecret.DescribeSecret


-- | Deletes an entire secret and all of the versions. You can optionally
--   include a recovery window during which you can restore the secret. If
--   you don't specify a recovery window value, the operation defaults to
--   30 days. Secrets Manager attaches a <tt>DeletionDate</tt> stamp to the
--   secret that specifies the end of the recovery window. At the end of
--   the recovery window, Secrets Manager deletes the secret permanently.
--   
--   At any time before recovery window ends, you can use RestoreSecret to
--   remove the <tt>DeletionDate</tt> and cancel the deletion of the
--   secret.
--   
--   You cannot access the encrypted secret information in any secret
--   scheduled for deletion. If you need to access that information, you
--   must cancel the deletion with RestoreSecret and then retrieve the
--   information.
--   
--   <ul>
--   <li>There is no explicit operation to delete a version of a secret.
--   Instead, remove all staging labels from the <tt>VersionStage</tt>
--   field of a version. That marks the version as deprecated and allows
--   Secrets Manager to delete it as needed. Versions without any staging
--   labels do not show up in ListSecretVersionIds unless you specify
--   <tt>IncludeDeprecated</tt>.</li>
--   <li>The permanent secret deletion at the end of the waiting period is
--   performed as a background task with low priority. There is no
--   guarantee of a specific time after the recovery window for the actual
--   delete operation to occur.</li>
--   </ul>
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:DeleteSecret</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To create a secret, use CreateSecret.</li>
--   <li>To cancel deletion of a version of a secret before the recovery
--   window has expired, use RestoreSecret.</li>
--   </ul>
module Network.AWS.SecretsManager.DeleteSecret

-- | <i>See:</i> <a>newDeleteSecret</a> smart constructor.
data DeleteSecret
DeleteSecret' :: Maybe Integer -> Maybe Bool -> Text -> DeleteSecret

-- | (Optional) Specifies the number of days that Secrets Manager waits
--   before Secrets Manager can delete the secret. You can't use both this
--   parameter and the <tt>ForceDeleteWithoutRecovery</tt> parameter in the
--   same API call.
--   
--   This value can range from 7 to 30 days with a default value of 30.
[$sel:recoveryWindowInDays:DeleteSecret'] :: DeleteSecret -> Maybe Integer

-- | (Optional) Specifies that the secret is to be deleted without any
--   recovery window. You can't use both this parameter and the
--   <tt>RecoveryWindowInDays</tt> parameter in the same API call.
--   
--   An asynchronous background process performs the actual deletion, so
--   there can be a short delay before the operation completes. If you
--   write code to delete and then immediately recreate a secret with the
--   same name, ensure that your code includes appropriate back off and
--   retry logic.
--   
--   Use this parameter with caution. This parameter causes the operation
--   to skip the normal waiting period before the permanent deletion that
--   Amazon Web Services would normally impose with the
--   <tt>RecoveryWindowInDays</tt> parameter. If you delete a secret with
--   the <tt>ForceDeleteWithouRecovery</tt> parameter, then you have no
--   opportunity to recover the secret. You lose the secret permanently.
--   
--   If you use this parameter and include a previously deleted or
--   nonexistent secret, the operation does not return the error
--   <tt>ResourceNotFoundException</tt> in order to correctly handle
--   retries.
[$sel:forceDeleteWithoutRecovery:DeleteSecret'] :: DeleteSecret -> Maybe Bool

-- | Specifies the secret to delete. You can specify either the Amazon
--   Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:DeleteSecret'] :: DeleteSecret -> Text

-- | Create a value of <a>DeleteSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recoveryWindowInDays:DeleteSecret'</a>,
--   <a>deleteSecret_recoveryWindowInDays</a> - (Optional) Specifies the
--   number of days that Secrets Manager waits before Secrets Manager can
--   delete the secret. You can't use both this parameter and the
--   <tt>ForceDeleteWithoutRecovery</tt> parameter in the same API call.
--   
--   This value can range from 7 to 30 days with a default value of 30.
--   
--   <a>$sel:forceDeleteWithoutRecovery:DeleteSecret'</a>,
--   <a>deleteSecret_forceDeleteWithoutRecovery</a> - (Optional) Specifies
--   that the secret is to be deleted without any recovery window. You
--   can't use both this parameter and the <tt>RecoveryWindowInDays</tt>
--   parameter in the same API call.
--   
--   An asynchronous background process performs the actual deletion, so
--   there can be a short delay before the operation completes. If you
--   write code to delete and then immediately recreate a secret with the
--   same name, ensure that your code includes appropriate back off and
--   retry logic.
--   
--   Use this parameter with caution. This parameter causes the operation
--   to skip the normal waiting period before the permanent deletion that
--   Amazon Web Services would normally impose with the
--   <tt>RecoveryWindowInDays</tt> parameter. If you delete a secret with
--   the <tt>ForceDeleteWithouRecovery</tt> parameter, then you have no
--   opportunity to recover the secret. You lose the secret permanently.
--   
--   If you use this parameter and include a previously deleted or
--   nonexistent secret, the operation does not return the error
--   <tt>ResourceNotFoundException</tt> in order to correctly handle
--   retries.
--   
--   <a>$sel:secretId:DeleteSecret'</a>, <a>deleteSecret_secretId</a> -
--   Specifies the secret to delete. You can specify either the Amazon
--   Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newDeleteSecret :: Text -> DeleteSecret

-- | (Optional) Specifies the number of days that Secrets Manager waits
--   before Secrets Manager can delete the secret. You can't use both this
--   parameter and the <tt>ForceDeleteWithoutRecovery</tt> parameter in the
--   same API call.
--   
--   This value can range from 7 to 30 days with a default value of 30.
deleteSecret_recoveryWindowInDays :: Lens' DeleteSecret (Maybe Integer)

-- | (Optional) Specifies that the secret is to be deleted without any
--   recovery window. You can't use both this parameter and the
--   <tt>RecoveryWindowInDays</tt> parameter in the same API call.
--   
--   An asynchronous background process performs the actual deletion, so
--   there can be a short delay before the operation completes. If you
--   write code to delete and then immediately recreate a secret with the
--   same name, ensure that your code includes appropriate back off and
--   retry logic.
--   
--   Use this parameter with caution. This parameter causes the operation
--   to skip the normal waiting period before the permanent deletion that
--   Amazon Web Services would normally impose with the
--   <tt>RecoveryWindowInDays</tt> parameter. If you delete a secret with
--   the <tt>ForceDeleteWithouRecovery</tt> parameter, then you have no
--   opportunity to recover the secret. You lose the secret permanently.
--   
--   If you use this parameter and include a previously deleted or
--   nonexistent secret, the operation does not return the error
--   <tt>ResourceNotFoundException</tt> in order to correctly handle
--   retries.
deleteSecret_forceDeleteWithoutRecovery :: Lens' DeleteSecret (Maybe Bool)

-- | Specifies the secret to delete. You can specify either the Amazon
--   Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
deleteSecret_secretId :: Lens' DeleteSecret Text

-- | <i>See:</i> <a>newDeleteSecretResponse</a> smart constructor.
data DeleteSecretResponse
DeleteSecretResponse' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Int -> DeleteSecretResponse

-- | The ARN of the secret that is now scheduled for deletion.
[$sel:arn:DeleteSecretResponse'] :: DeleteSecretResponse -> Maybe Text

-- | The friendly name of the secret currently scheduled for deletion.
[$sel:name:DeleteSecretResponse'] :: DeleteSecretResponse -> Maybe Text

-- | The date and time after which this secret can be deleted by Secrets
--   Manager and can no longer be restored. This value is the date and time
--   of the delete request plus the number of days specified in
--   <tt>RecoveryWindowInDays</tt>.
[$sel:deletionDate:DeleteSecretResponse'] :: DeleteSecretResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:DeleteSecretResponse'] :: DeleteSecretResponse -> Int

-- | Create a value of <a>DeleteSecretResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteSecretResponse'</a>, <a>deleteSecretResponse_arn</a>
--   - The ARN of the secret that is now scheduled for deletion.
--   
--   <a>$sel:name:DeleteSecretResponse'</a>,
--   <a>deleteSecretResponse_name</a> - The friendly name of the secret
--   currently scheduled for deletion.
--   
--   <a>$sel:deletionDate:DeleteSecretResponse'</a>,
--   <a>deleteSecretResponse_deletionDate</a> - The date and time after
--   which this secret can be deleted by Secrets Manager and can no longer
--   be restored. This value is the date and time of the delete request
--   plus the number of days specified in <tt>RecoveryWindowInDays</tt>.
--   
--   <a>$sel:httpStatus:DeleteSecretResponse'</a>,
--   <a>deleteSecretResponse_httpStatus</a> - The response's http status
--   code.
newDeleteSecretResponse :: Int -> DeleteSecretResponse

-- | The ARN of the secret that is now scheduled for deletion.
deleteSecretResponse_arn :: Lens' DeleteSecretResponse (Maybe Text)

-- | The friendly name of the secret currently scheduled for deletion.
deleteSecretResponse_name :: Lens' DeleteSecretResponse (Maybe Text)

-- | The date and time after which this secret can be deleted by Secrets
--   Manager and can no longer be restored. This value is the date and time
--   of the delete request plus the number of days specified in
--   <tt>RecoveryWindowInDays</tt>.
deleteSecretResponse_deletionDate :: Lens' DeleteSecretResponse (Maybe UTCTime)

-- | The response's http status code.
deleteSecretResponse_httpStatus :: Lens' DeleteSecretResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.DeleteSecret.DeleteSecret
instance GHC.Show.Show Network.AWS.SecretsManager.DeleteSecret.DeleteSecret
instance GHC.Read.Read Network.AWS.SecretsManager.DeleteSecret.DeleteSecret
instance GHC.Classes.Eq Network.AWS.SecretsManager.DeleteSecret.DeleteSecret
instance GHC.Generics.Generic Network.AWS.SecretsManager.DeleteSecret.DeleteSecretResponse
instance GHC.Show.Show Network.AWS.SecretsManager.DeleteSecret.DeleteSecretResponse
instance GHC.Read.Read Network.AWS.SecretsManager.DeleteSecret.DeleteSecretResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.DeleteSecret.DeleteSecretResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.DeleteSecret.DeleteSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.DeleteSecret.DeleteSecretResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.DeleteSecret.DeleteSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.DeleteSecret.DeleteSecret
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.DeleteSecret.DeleteSecret
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.DeleteSecret.DeleteSecret
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.DeleteSecret.DeleteSecret
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.DeleteSecret.DeleteSecret


-- | Deletes the resource-based permission policy attached to the secret.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:DeleteResourcePolicy</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To attach a resource policy to a secret, use
--   PutResourcePolicy.</li>
--   <li>To retrieve the current resource-based policy attached to a
--   secret, use GetResourcePolicy.</li>
--   <li>To list all of the currently available secrets, use
--   ListSecrets.</li>
--   </ul>
module Network.AWS.SecretsManager.DeleteResourcePolicy

-- | <i>See:</i> <a>newDeleteResourcePolicy</a> smart constructor.
data DeleteResourcePolicy
DeleteResourcePolicy' :: Text -> DeleteResourcePolicy

-- | Specifies the secret that you want to delete the attached
--   resource-based policy for. You can specify either the Amazon Resource
--   Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:DeleteResourcePolicy'] :: DeleteResourcePolicy -> Text

-- | Create a value of <a>DeleteResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:DeleteResourcePolicy'</a>,
--   <a>deleteResourcePolicy_secretId</a> - Specifies the secret that you
--   want to delete the attached resource-based policy for. You can specify
--   either the Amazon Resource Name (ARN) or the friendly name of the
--   secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newDeleteResourcePolicy :: Text -> DeleteResourcePolicy

-- | Specifies the secret that you want to delete the attached
--   resource-based policy for. You can specify either the Amazon Resource
--   Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
deleteResourcePolicy_secretId :: Lens' DeleteResourcePolicy Text

-- | <i>See:</i> <a>newDeleteResourcePolicyResponse</a> smart constructor.
data DeleteResourcePolicyResponse
DeleteResourcePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteResourcePolicyResponse

-- | The ARN of the secret that the resource-based policy was deleted for.
[$sel:arn:DeleteResourcePolicyResponse'] :: DeleteResourcePolicyResponse -> Maybe Text

-- | The friendly name of the secret that the resource-based policy was
--   deleted for.
[$sel:name:DeleteResourcePolicyResponse'] :: DeleteResourcePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteResourcePolicyResponse'] :: DeleteResourcePolicyResponse -> Int

-- | Create a value of <a>DeleteResourcePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteResourcePolicyResponse'</a>,
--   <a>deleteResourcePolicyResponse_arn</a> - The ARN of the secret that
--   the resource-based policy was deleted for.
--   
--   <a>$sel:name:DeleteResourcePolicyResponse'</a>,
--   <a>deleteResourcePolicyResponse_name</a> - The friendly name of the
--   secret that the resource-based policy was deleted for.
--   
--   <a>$sel:httpStatus:DeleteResourcePolicyResponse'</a>,
--   <a>deleteResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteResourcePolicyResponse :: Int -> DeleteResourcePolicyResponse

-- | The ARN of the secret that the resource-based policy was deleted for.
deleteResourcePolicyResponse_arn :: Lens' DeleteResourcePolicyResponse (Maybe Text)

-- | The friendly name of the secret that the resource-based policy was
--   deleted for.
deleteResourcePolicyResponse_name :: Lens' DeleteResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
deleteResourcePolicyResponse_httpStatus :: Lens' DeleteResourcePolicyResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Show.Show Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Read.Read Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Classes.Eq Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicy
instance GHC.Generics.Generic Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Show.Show Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Read.Read Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.DeleteResourcePolicy.DeleteResourcePolicy


-- | Creates a new secret. A secret in Secrets Manager consists of both the
--   protected secret data and the important information needed to manage
--   the secret.
--   
--   Secrets Manager stores the encrypted secret data in one of a
--   collection of "versions" associated with the secret. Each version
--   contains a copy of the encrypted secret data. Each version is
--   associated with one or more "staging labels" that identify where the
--   version is in the rotation cycle. The <tt>SecretVersionsToStages</tt>
--   field of the secret contains the mapping of staging labels to the
--   active versions of the secret. Versions without a staging label are
--   considered deprecated and not included in the list.
--   
--   You provide the secret data to be encrypted by putting text in either
--   the <tt>SecretString</tt> parameter or binary data in the
--   <tt>SecretBinary</tt> parameter, but not both. If you include
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> then Secrets Manager
--   also creates an initial secret version and automatically attaches the
--   staging label <tt>AWSCURRENT</tt> to the new version.
--   
--   <ul>
--   <li>If you call an operation to encrypt or decrypt the
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> for a secret in the
--   same account as the calling user and that secret doesn't specify a
--   Amazon Web Services KMS encryption key, Secrets Manager uses the
--   account's default Amazon Web Services managed customer master key
--   (CMK) with the alias <tt>aws/secretsmanager</tt>. If this key doesn't
--   already exist in your account then Secrets Manager creates it for you
--   automatically. All users and roles in the same Amazon Web Services
--   account automatically have access to use the default CMK. Note that if
--   an Secrets Manager API call results in Amazon Web Services creating
--   the account's Amazon Web Services-managed CMK, it can result in a
--   one-time significant delay in returning the result.</li>
--   <li>If the secret resides in a different Amazon Web Services account
--   from the credentials calling an API that requires encryption or
--   decryption of the secret value then you must create and use a custom
--   Amazon Web Services KMS CMK because you can't access the default CMK
--   for the account using credentials from a different Amazon Web Services
--   account. Store the ARN of the CMK in the secret when you create the
--   secret or when you update it by including it in the <tt>KMSKeyId</tt>.
--   If you call an API that must encrypt or decrypt <tt>SecretString</tt>
--   or <tt>SecretBinary</tt> using credentials from a different account
--   then the Amazon Web Services KMS key policy must grant cross-account
--   access to that other account's user or role for both the
--   kms:GenerateDataKey and kms:Decrypt operations.</li>
--   </ul>
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:CreateSecret</li>
--   <li>kms:GenerateDataKey - needed only if you use a customer-managed
--   Amazon Web Services KMS key to encrypt the secret. You do not need
--   this permission to use the account default Amazon Web Services managed
--   CMK for Secrets Manager.</li>
--   <li>kms:Decrypt - needed only if you use a customer-managed Amazon Web
--   Services KMS key to encrypt the secret. You do not need this
--   permission to use the account default Amazon Web Services managed CMK
--   for Secrets Manager.</li>
--   <li>secretsmanager:TagResource - needed only if you include the
--   <tt>Tags</tt> parameter.</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To delete a secret, use DeleteSecret.</li>
--   <li>To modify an existing secret, use UpdateSecret.</li>
--   <li>To create a new version of a secret, use PutSecretValue.</li>
--   <li>To retrieve the encrypted secure string and secure binary values,
--   use GetSecretValue.</li>
--   <li>To retrieve all other details for a secret, use DescribeSecret.
--   This does not include the encrypted secure string and secure binary
--   values.</li>
--   <li>To retrieve the list of secret versions associated with the
--   current secret, use DescribeSecret and examine the
--   <tt>SecretVersionsToStages</tt> response value.</li>
--   </ul>
module Network.AWS.SecretsManager.CreateSecret

-- | <i>See:</i> <a>newCreateSecret</a> smart constructor.
data CreateSecret
CreateSecret' :: Maybe (Sensitive Base64) -> Maybe Bool -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Text -> Maybe (NonEmpty ReplicaRegionType) -> Text -> CreateSecret

-- | (Optional) Specifies binary data that you want to encrypt and store in
--   the new version of the secret. To use this parameter in the
--   command-line tools, we recommend that you store your binary data in a
--   file and then use the appropriate technique for your tool to pass the
--   contents of the file as a parameter.
--   
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   This parameter is not available using the Secrets Manager console. It
--   can be accessed only by using the Amazon Web Services CLI or one of
--   the Amazon Web Services SDKs.
[$sel:secretBinary:CreateSecret'] :: CreateSecret -> Maybe (Sensitive Base64)

-- | (Optional) If set, the replication overwrites a secret with the same
--   name in the destination region.
[$sel:forceOverwriteReplicaSecret:CreateSecret'] :: CreateSecret -> Maybe Bool

-- | (Optional) Specifies the ARN, Key ID, or alias of the Amazon Web
--   Services KMS customer master key (CMK) to be used to encrypt the
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> values in the versions
--   stored in this secret.
--   
--   You can specify any of the supported ways to identify a Amazon Web
--   Services KMS key ID. If you need to reference a CMK in a different
--   account, you can use only the key ARN or the alias ARN.
--   
--   If you don't specify this value, then Secrets Manager defaults to
--   using the Amazon Web Services account's default CMK (the one named
--   <tt>aws/secretsmanager</tt>). If a Amazon Web Services KMS CMK with
--   that name doesn't yet exist, then Secrets Manager creates it for you
--   automatically the first time it needs to encrypt a version's
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> fields.
--   
--   You can use the account default CMK to encrypt and decrypt only if you
--   call this operation using credentials from the same account that owns
--   the secret. If the secret resides in a different account, then you
--   must create a custom CMK and specify the ARN in this field.
[$sel:kmsKeyId:CreateSecret'] :: CreateSecret -> Maybe Text

-- | (Optional) Specifies a list of user-defined tags that are attached to
--   the secret. Each tag is a "Key" and "Value" pair of strings. This
--   operation only appends tags to the existing list of tags. To remove
--   tags, you must use UntagResource.
--   
--   <ul>
--   <li>Secrets Manager tag key names are case sensitive. A tag with the
--   key "ABC" is a different tag from one with key "abc".</li>
--   <li>If you check tags in IAM policy <tt>Condition</tt> elements as
--   part of your security strategy, then adding or removing a tag can
--   change permissions. If the successful completion of this operation
--   would result in you losing your permissions for this secret, then this
--   operation is blocked and returns an <tt>Access Denied</tt> error.</li>
--   </ul>
--   
--   This parameter requires a JSON text string argument. For information
--   on how to format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   [{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
--   
--   The following basic restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of tags per secret—50</li>
--   <li>Maximum key length—127 Unicode characters in UTF-8</li>
--   <li>Maximum value length—255 Unicode characters in UTF-8</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Do not use the <tt>aws:</tt> prefix in your tag names or values
--   because Amazon Web Services reserves it for Amazon Web Services use.
--   You can't edit or delete tag names or values with this prefix. Tags
--   with this prefix do not count against your tags per secret limit.</li>
--   <li>If you use your tagging schema across multiple services and
--   resources, remember other services might have restrictions on allowed
--   characters. Generally allowed characters: letters, spaces, and numbers
--   representable in UTF-8, plus the following special characters: + - = .
--   _ : / @.</li>
--   </ul>
[$sel:tags:CreateSecret'] :: CreateSecret -> Maybe [Tag]

-- | (Optional) Specifies a user-provided description of the secret.
[$sel:description:CreateSecret'] :: CreateSecret -> Maybe Text

-- | (Optional) Specifies text data that you want to encrypt and store in
--   this new version of the secret.
--   
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   If you create a secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the Lambda
--   rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   {"username":"bob","password":"abc123xyz456"}
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
[$sel:secretString:CreateSecret'] :: CreateSecret -> Maybe (Sensitive Text)

-- | (Optional) If you include <tt>SecretString</tt> or
--   <tt>SecretBinary</tt>, then an initial version is created as part of
--   the secret, and this parameter specifies a unique identifier for the
--   new version.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes it
--   as the value for this parameter in the request. If you don't use the
--   SDK and instead generate a raw HTTP request to the Secrets Manager
--   service endpoint, then you must generate a <tt>ClientRequestToken</tt>
--   yourself for the new version and include the value in the request.
--   
--   This value helps ensure idempotency. Secrets Manager uses this value
--   to prevent the accidental creation of duplicate versions if there are
--   failures and retries during a rotation. We recommend that you generate
--   a <a>UUID-type</a> value to ensure uniqueness of your versions within
--   the specified secret.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and the version
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are the same as
--   those in the request, then the request is ignored.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from those in the request, then the request fails because you cannot
--   modify an existing version. Instead, use PutSecretValue to create a
--   new version.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
[$sel:clientRequestToken:CreateSecret'] :: CreateSecret -> Maybe Text

-- | (Optional) Add a list of regions to replicate secrets. Secrets Manager
--   replicates the KMSKeyID objects to the list of regions specified in
--   the parameter.
[$sel:addReplicaRegions:CreateSecret'] :: CreateSecret -> Maybe (NonEmpty ReplicaRegionType)

-- | Specifies the friendly name of the new secret.
--   
--   The secret name must be ASCII letters, digits, or the following
--   characters : /_+=.@-
--   
--   Do not end your secret name with a hyphen followed by six characters.
--   If you do so, you risk confusion and unexpected results when searching
--   for a secret by partial ARN. Secrets Manager automatically adds a
--   hyphen and six random characters at the end of the ARN.
[$sel:name:CreateSecret'] :: CreateSecret -> Text

-- | Create a value of <a>CreateSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretBinary:CreateSecret'</a>,
--   <a>createSecret_secretBinary</a> - (Optional) Specifies binary data
--   that you want to encrypt and store in the new version of the secret.
--   To use this parameter in the command-line tools, we recommend that you
--   store your binary data in a file and then use the appropriate
--   technique for your tool to pass the contents of the file as a
--   parameter.
--   
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   This parameter is not available using the Secrets Manager console. It
--   can be accessed only by using the Amazon Web Services CLI or one of
--   the Amazon Web Services SDKs.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:forceOverwriteReplicaSecret:CreateSecret'</a>,
--   <a>createSecret_forceOverwriteReplicaSecret</a> - (Optional) If set,
--   the replication overwrites a secret with the same name in the
--   destination region.
--   
--   <a>$sel:kmsKeyId:CreateSecret'</a>, <a>createSecret_kmsKeyId</a> -
--   (Optional) Specifies the ARN, Key ID, or alias of the Amazon Web
--   Services KMS customer master key (CMK) to be used to encrypt the
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> values in the versions
--   stored in this secret.
--   
--   You can specify any of the supported ways to identify a Amazon Web
--   Services KMS key ID. If you need to reference a CMK in a different
--   account, you can use only the key ARN or the alias ARN.
--   
--   If you don't specify this value, then Secrets Manager defaults to
--   using the Amazon Web Services account's default CMK (the one named
--   <tt>aws/secretsmanager</tt>). If a Amazon Web Services KMS CMK with
--   that name doesn't yet exist, then Secrets Manager creates it for you
--   automatically the first time it needs to encrypt a version's
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> fields.
--   
--   You can use the account default CMK to encrypt and decrypt only if you
--   call this operation using credentials from the same account that owns
--   the secret. If the secret resides in a different account, then you
--   must create a custom CMK and specify the ARN in this field.
--   
--   <a>$sel:tags:CreateSecret'</a>, <a>createSecret_tags</a> - (Optional)
--   Specifies a list of user-defined tags that are attached to the secret.
--   Each tag is a "Key" and "Value" pair of strings. This operation only
--   appends tags to the existing list of tags. To remove tags, you must
--   use UntagResource.
--   
--   <ul>
--   <li>Secrets Manager tag key names are case sensitive. A tag with the
--   key "ABC" is a different tag from one with key "abc".</li>
--   <li>If you check tags in IAM policy <tt>Condition</tt> elements as
--   part of your security strategy, then adding or removing a tag can
--   change permissions. If the successful completion of this operation
--   would result in you losing your permissions for this secret, then this
--   operation is blocked and returns an <tt>Access Denied</tt> error.</li>
--   </ul>
--   
--   This parameter requires a JSON text string argument. For information
--   on how to format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   [{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
--   
--   The following basic restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of tags per secret—50</li>
--   <li>Maximum key length—127 Unicode characters in UTF-8</li>
--   <li>Maximum value length—255 Unicode characters in UTF-8</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Do not use the <tt>aws:</tt> prefix in your tag names or values
--   because Amazon Web Services reserves it for Amazon Web Services use.
--   You can't edit or delete tag names or values with this prefix. Tags
--   with this prefix do not count against your tags per secret limit.</li>
--   <li>If you use your tagging schema across multiple services and
--   resources, remember other services might have restrictions on allowed
--   characters. Generally allowed characters: letters, spaces, and numbers
--   representable in UTF-8, plus the following special characters: + - = .
--   _ : / @.</li>
--   </ul>
--   
--   <a>$sel:description:CreateSecret'</a>, <a>createSecret_description</a>
--   - (Optional) Specifies a user-provided description of the secret.
--   
--   <a>$sel:secretString:CreateSecret'</a>,
--   <a>createSecret_secretString</a> - (Optional) Specifies text data that
--   you want to encrypt and store in this new version of the secret.
--   
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   If you create a secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the Lambda
--   rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   {"username":"bob","password":"abc123xyz456"}
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
--   
--   <a>$sel:clientRequestToken:CreateSecret'</a>,
--   <a>createSecret_clientRequestToken</a> - (Optional) If you include
--   <tt>SecretString</tt> or <tt>SecretBinary</tt>, then an initial
--   version is created as part of the secret, and this parameter specifies
--   a unique identifier for the new version.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes it
--   as the value for this parameter in the request. If you don't use the
--   SDK and instead generate a raw HTTP request to the Secrets Manager
--   service endpoint, then you must generate a <tt>ClientRequestToken</tt>
--   yourself for the new version and include the value in the request.
--   
--   This value helps ensure idempotency. Secrets Manager uses this value
--   to prevent the accidental creation of duplicate versions if there are
--   failures and retries during a rotation. We recommend that you generate
--   a <a>UUID-type</a> value to ensure uniqueness of your versions within
--   the specified secret.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and the version
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are the same as
--   those in the request, then the request is ignored.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from those in the request, then the request fails because you cannot
--   modify an existing version. Instead, use PutSecretValue to create a
--   new version.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
--   
--   <a>$sel:addReplicaRegions:CreateSecret'</a>,
--   <a>createSecret_addReplicaRegions</a> - (Optional) Add a list of
--   regions to replicate secrets. Secrets Manager replicates the KMSKeyID
--   objects to the list of regions specified in the parameter.
--   
--   <a>$sel:name:CreateSecret'</a>, <a>createSecret_name</a> - Specifies
--   the friendly name of the new secret.
--   
--   The secret name must be ASCII letters, digits, or the following
--   characters : /_+=.@-
--   
--   Do not end your secret name with a hyphen followed by six characters.
--   If you do so, you risk confusion and unexpected results when searching
--   for a secret by partial ARN. Secrets Manager automatically adds a
--   hyphen and six random characters at the end of the ARN.
newCreateSecret :: Text -> CreateSecret

-- | (Optional) Specifies binary data that you want to encrypt and store in
--   the new version of the secret. To use this parameter in the
--   command-line tools, we recommend that you store your binary data in a
--   file and then use the appropriate technique for your tool to pass the
--   contents of the file as a parameter.
--   
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   This parameter is not available using the Secrets Manager console. It
--   can be accessed only by using the Amazon Web Services CLI or one of
--   the Amazon Web Services SDKs.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
createSecret_secretBinary :: Lens' CreateSecret (Maybe ByteString)

-- | (Optional) If set, the replication overwrites a secret with the same
--   name in the destination region.
createSecret_forceOverwriteReplicaSecret :: Lens' CreateSecret (Maybe Bool)

-- | (Optional) Specifies the ARN, Key ID, or alias of the Amazon Web
--   Services KMS customer master key (CMK) to be used to encrypt the
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> values in the versions
--   stored in this secret.
--   
--   You can specify any of the supported ways to identify a Amazon Web
--   Services KMS key ID. If you need to reference a CMK in a different
--   account, you can use only the key ARN or the alias ARN.
--   
--   If you don't specify this value, then Secrets Manager defaults to
--   using the Amazon Web Services account's default CMK (the one named
--   <tt>aws/secretsmanager</tt>). If a Amazon Web Services KMS CMK with
--   that name doesn't yet exist, then Secrets Manager creates it for you
--   automatically the first time it needs to encrypt a version's
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> fields.
--   
--   You can use the account default CMK to encrypt and decrypt only if you
--   call this operation using credentials from the same account that owns
--   the secret. If the secret resides in a different account, then you
--   must create a custom CMK and specify the ARN in this field.
createSecret_kmsKeyId :: Lens' CreateSecret (Maybe Text)

-- | (Optional) Specifies a list of user-defined tags that are attached to
--   the secret. Each tag is a "Key" and "Value" pair of strings. This
--   operation only appends tags to the existing list of tags. To remove
--   tags, you must use UntagResource.
--   
--   <ul>
--   <li>Secrets Manager tag key names are case sensitive. A tag with the
--   key "ABC" is a different tag from one with key "abc".</li>
--   <li>If you check tags in IAM policy <tt>Condition</tt> elements as
--   part of your security strategy, then adding or removing a tag can
--   change permissions. If the successful completion of this operation
--   would result in you losing your permissions for this secret, then this
--   operation is blocked and returns an <tt>Access Denied</tt> error.</li>
--   </ul>
--   
--   This parameter requires a JSON text string argument. For information
--   on how to format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   [{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
--   
--   The following basic restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of tags per secret—50</li>
--   <li>Maximum key length—127 Unicode characters in UTF-8</li>
--   <li>Maximum value length—255 Unicode characters in UTF-8</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Do not use the <tt>aws:</tt> prefix in your tag names or values
--   because Amazon Web Services reserves it for Amazon Web Services use.
--   You can't edit or delete tag names or values with this prefix. Tags
--   with this prefix do not count against your tags per secret limit.</li>
--   <li>If you use your tagging schema across multiple services and
--   resources, remember other services might have restrictions on allowed
--   characters. Generally allowed characters: letters, spaces, and numbers
--   representable in UTF-8, plus the following special characters: + - = .
--   _ : / @.</li>
--   </ul>
createSecret_tags :: Lens' CreateSecret (Maybe [Tag])

-- | (Optional) Specifies a user-provided description of the secret.
createSecret_description :: Lens' CreateSecret (Maybe Text)

-- | (Optional) Specifies text data that you want to encrypt and store in
--   this new version of the secret.
--   
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   If you create a secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the Lambda
--   rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   {"username":"bob","password":"abc123xyz456"}
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
createSecret_secretString :: Lens' CreateSecret (Maybe Text)

-- | (Optional) If you include <tt>SecretString</tt> or
--   <tt>SecretBinary</tt>, then an initial version is created as part of
--   the secret, and this parameter specifies a unique identifier for the
--   new version.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes it
--   as the value for this parameter in the request. If you don't use the
--   SDK and instead generate a raw HTTP request to the Secrets Manager
--   service endpoint, then you must generate a <tt>ClientRequestToken</tt>
--   yourself for the new version and include the value in the request.
--   
--   This value helps ensure idempotency. Secrets Manager uses this value
--   to prevent the accidental creation of duplicate versions if there are
--   failures and retries during a rotation. We recommend that you generate
--   a <a>UUID-type</a> value to ensure uniqueness of your versions within
--   the specified secret.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and the version
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are the same as
--   those in the request, then the request is ignored.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from those in the request, then the request fails because you cannot
--   modify an existing version. Instead, use PutSecretValue to create a
--   new version.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
createSecret_clientRequestToken :: Lens' CreateSecret (Maybe Text)

-- | (Optional) Add a list of regions to replicate secrets. Secrets Manager
--   replicates the KMSKeyID objects to the list of regions specified in
--   the parameter.
createSecret_addReplicaRegions :: Lens' CreateSecret (Maybe (NonEmpty ReplicaRegionType))

-- | Specifies the friendly name of the new secret.
--   
--   The secret name must be ASCII letters, digits, or the following
--   characters : /_+=.@-
--   
--   Do not end your secret name with a hyphen followed by six characters.
--   If you do so, you risk confusion and unexpected results when searching
--   for a secret by partial ARN. Secrets Manager automatically adds a
--   hyphen and six random characters at the end of the ARN.
createSecret_name :: Lens' CreateSecret Text

-- | <i>See:</i> <a>newCreateSecretResponse</a> smart constructor.
data CreateSecretResponse
CreateSecretResponse' :: Maybe [ReplicationStatusType] -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSecretResponse

-- | Describes a list of replication status objects as <tt>InProgress</tt>,
--   <tt>Failed</tt> or <tt>InSync</tt>.
[$sel:replicationStatus:CreateSecretResponse'] :: CreateSecretResponse -> Maybe [ReplicationStatusType]

-- | The Amazon Resource Name (ARN) of the secret that you just created.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
[$sel:arn:CreateSecretResponse'] :: CreateSecretResponse -> Maybe Text

-- | The friendly name of the secret that you just created.
[$sel:name:CreateSecretResponse'] :: CreateSecretResponse -> Maybe Text

-- | The unique identifier associated with the version of the secret you
--   just created.
[$sel:versionId:CreateSecretResponse'] :: CreateSecretResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateSecretResponse'] :: CreateSecretResponse -> Int

-- | Create a value of <a>CreateSecretResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationStatus:CreateSecretResponse'</a>,
--   <a>createSecretResponse_replicationStatus</a> - Describes a list of
--   replication status objects as <tt>InProgress</tt>, <tt>Failed</tt> or
--   <tt>InSync</tt>.
--   
--   <a>$sel:arn:CreateSecretResponse'</a>, <a>createSecretResponse_arn</a>
--   - The Amazon Resource Name (ARN) of the secret that you just created.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
--   
--   <a>$sel:name:CreateSecret'</a>, <a>createSecretResponse_name</a> - The
--   friendly name of the secret that you just created.
--   
--   <a>$sel:versionId:CreateSecretResponse'</a>,
--   <a>createSecretResponse_versionId</a> - The unique identifier
--   associated with the version of the secret you just created.
--   
--   <a>$sel:httpStatus:CreateSecretResponse'</a>,
--   <a>createSecretResponse_httpStatus</a> - The response's http status
--   code.
newCreateSecretResponse :: Int -> CreateSecretResponse

-- | Describes a list of replication status objects as <tt>InProgress</tt>,
--   <tt>Failed</tt> or <tt>InSync</tt>.
createSecretResponse_replicationStatus :: Lens' CreateSecretResponse (Maybe [ReplicationStatusType])

-- | The Amazon Resource Name (ARN) of the secret that you just created.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
createSecretResponse_arn :: Lens' CreateSecretResponse (Maybe Text)

-- | The friendly name of the secret that you just created.
createSecretResponse_name :: Lens' CreateSecretResponse (Maybe Text)

-- | The unique identifier associated with the version of the secret you
--   just created.
createSecretResponse_versionId :: Lens' CreateSecretResponse (Maybe Text)

-- | The response's http status code.
createSecretResponse_httpStatus :: Lens' CreateSecretResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.CreateSecret.CreateSecret
instance GHC.Show.Show Network.AWS.SecretsManager.CreateSecret.CreateSecret
instance GHC.Classes.Eq Network.AWS.SecretsManager.CreateSecret.CreateSecret
instance GHC.Generics.Generic Network.AWS.SecretsManager.CreateSecret.CreateSecretResponse
instance GHC.Show.Show Network.AWS.SecretsManager.CreateSecret.CreateSecretResponse
instance GHC.Read.Read Network.AWS.SecretsManager.CreateSecret.CreateSecretResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.CreateSecret.CreateSecretResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.CreateSecret.CreateSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.CreateSecret.CreateSecretResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.CreateSecret.CreateSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.CreateSecret.CreateSecret
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.CreateSecret.CreateSecret
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.CreateSecret.CreateSecret
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.CreateSecret.CreateSecret
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.CreateSecret.CreateSecret


-- | Disables automatic scheduled rotation and cancels the rotation of a
--   secret if currently in progress.
--   
--   To re-enable scheduled rotation, call RotateSecret with
--   <tt>AutomaticallyRotateAfterDays</tt> set to a value greater than 0.
--   This immediately rotates your secret and then enables the automatic
--   schedule.
--   
--   If you cancel a rotation while in progress, it can leave the
--   <tt>VersionStage</tt> labels in an unexpected state. Depending on the
--   step of the rotation in progress, you might need to remove the staging
--   label <tt>AWSPENDING</tt> from the partially created version,
--   specified by the <tt>VersionId</tt> response value. You should also
--   evaluate the partially rotated new version to see if it should be
--   deleted, which you can do by removing all staging labels from the new
--   version <tt>VersionStage</tt> field.
--   
--   To successfully start a rotation, the staging label
--   <tt>AWSPENDING</tt> must be in one of the following states:
--   
--   <ul>
--   <li>Not attached to any version at all</li>
--   <li>Attached to the same version as the staging label
--   <tt>AWSCURRENT</tt></li>
--   </ul>
--   
--   If the staging label <tt>AWSPENDING</tt> attached to a different
--   version than the version with <tt>AWSCURRENT</tt> then the attempt to
--   rotate fails.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:CancelRotateSecret</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To configure rotation for a secret or to manually trigger a
--   rotation, use RotateSecret.</li>
--   <li>To get the rotation configuration details for a secret, use
--   DescribeSecret.</li>
--   <li>To list all of the currently available secrets, use
--   ListSecrets.</li>
--   <li>To list all of the versions currently associated with a secret,
--   use ListSecretVersionIds.</li>
--   </ul>
module Network.AWS.SecretsManager.CancelRotateSecret

-- | <i>See:</i> <a>newCancelRotateSecret</a> smart constructor.
data CancelRotateSecret
CancelRotateSecret' :: Text -> CancelRotateSecret

-- | Specifies the secret to cancel a rotation request. You can specify
--   either the Amazon Resource Name (ARN) or the friendly name of the
--   secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:CancelRotateSecret'] :: CancelRotateSecret -> Text

-- | Create a value of <a>CancelRotateSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:CancelRotateSecret'</a>,
--   <a>cancelRotateSecret_secretId</a> - Specifies the secret to cancel a
--   rotation request. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newCancelRotateSecret :: Text -> CancelRotateSecret

-- | Specifies the secret to cancel a rotation request. You can specify
--   either the Amazon Resource Name (ARN) or the friendly name of the
--   secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
cancelRotateSecret_secretId :: Lens' CancelRotateSecret Text

-- | <i>See:</i> <a>newCancelRotateSecretResponse</a> smart constructor.
data CancelRotateSecretResponse
CancelRotateSecretResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CancelRotateSecretResponse

-- | The ARN of the secret for which rotation was canceled.
[$sel:arn:CancelRotateSecretResponse'] :: CancelRotateSecretResponse -> Maybe Text

-- | The friendly name of the secret for which rotation was canceled.
[$sel:name:CancelRotateSecretResponse'] :: CancelRotateSecretResponse -> Maybe Text

-- | The unique identifier of the version of the secret created during the
--   rotation. This version might not be complete, and should be evaluated
--   for possible deletion. At the very least, you should remove the
--   <tt>VersionStage</tt> value <tt>AWSPENDING</tt> to enable this version
--   to be deleted. Failing to clean up a cancelled rotation can block you
--   from successfully starting future rotations.
[$sel:versionId:CancelRotateSecretResponse'] :: CancelRotateSecretResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CancelRotateSecretResponse'] :: CancelRotateSecretResponse -> Int

-- | Create a value of <a>CancelRotateSecretResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CancelRotateSecretResponse'</a>,
--   <a>cancelRotateSecretResponse_arn</a> - The ARN of the secret for
--   which rotation was canceled.
--   
--   <a>$sel:name:CancelRotateSecretResponse'</a>,
--   <a>cancelRotateSecretResponse_name</a> - The friendly name of the
--   secret for which rotation was canceled.
--   
--   <a>$sel:versionId:CancelRotateSecretResponse'</a>,
--   <a>cancelRotateSecretResponse_versionId</a> - The unique identifier of
--   the version of the secret created during the rotation. This version
--   might not be complete, and should be evaluated for possible deletion.
--   At the very least, you should remove the <tt>VersionStage</tt> value
--   <tt>AWSPENDING</tt> to enable this version to be deleted. Failing to
--   clean up a cancelled rotation can block you from successfully starting
--   future rotations.
--   
--   <a>$sel:httpStatus:CancelRotateSecretResponse'</a>,
--   <a>cancelRotateSecretResponse_httpStatus</a> - The response's http
--   status code.
newCancelRotateSecretResponse :: Int -> CancelRotateSecretResponse

-- | The ARN of the secret for which rotation was canceled.
cancelRotateSecretResponse_arn :: Lens' CancelRotateSecretResponse (Maybe Text)

-- | The friendly name of the secret for which rotation was canceled.
cancelRotateSecretResponse_name :: Lens' CancelRotateSecretResponse (Maybe Text)

-- | The unique identifier of the version of the secret created during the
--   rotation. This version might not be complete, and should be evaluated
--   for possible deletion. At the very least, you should remove the
--   <tt>VersionStage</tt> value <tt>AWSPENDING</tt> to enable this version
--   to be deleted. Failing to clean up a cancelled rotation can block you
--   from successfully starting future rotations.
cancelRotateSecretResponse_versionId :: Lens' CancelRotateSecretResponse (Maybe Text)

-- | The response's http status code.
cancelRotateSecretResponse_httpStatus :: Lens' CancelRotateSecretResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecret
instance GHC.Show.Show Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecret
instance GHC.Read.Read Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecret
instance GHC.Classes.Eq Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecret
instance GHC.Generics.Generic Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecretResponse
instance GHC.Show.Show Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecretResponse
instance GHC.Read.Read Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecretResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecretResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecretResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecret
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecret
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecret
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecret
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.CancelRotateSecret.CancelRotateSecret


-- | Removes one or more tags from the specified secret.
--   
--   This operation is idempotent. If a requested tag is not attached to
--   the secret, no error is returned and the secret metadata is unchanged.
--   
--   If you use tags as part of your security strategy, then removing a tag
--   can change permissions. If successfully completing this operation
--   would result in you losing your permissions for this secret, then the
--   operation is blocked and returns an Access Denied error.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:UntagResource</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To add one or more tags to the collection attached to a secret,
--   use TagResource.</li>
--   <li>To view the list of tags attached to a secret, use
--   DescribeSecret.</li>
--   </ul>
module Network.AWS.SecretsManager.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The identifier for the secret that you want to remove tags from. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:UntagResource'] :: UntagResource -> Text

-- | A list of tag key names to remove from the secret. You don't specify
--   the value. Both the key and its associated value are removed.
--   
--   This parameter to the API requires a JSON text string argument. For
--   information on how to format a JSON parameter for the various command
--   line tool environments, see <a>Using JSON for Parameters</a> in the
--   <i>CLI User Guide</i>.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:UntagResource'</a>, <a>untagResource_secretId</a> -
--   The identifier for the secret that you want to remove tags from. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of tag key names to remove from the secret. You don't specify the
--   value. Both the key and its associated value are removed.
--   
--   This parameter to the API requires a JSON text string argument. For
--   information on how to format a JSON parameter for the various command
--   line tool environments, see <a>Using JSON for Parameters</a> in the
--   <i>CLI User Guide</i>.
newUntagResource :: Text -> UntagResource

-- | The identifier for the secret that you want to remove tags from. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
untagResource_secretId :: Lens' UntagResource Text

-- | A list of tag key names to remove from the secret. You don't specify
--   the value. Both the key and its associated value are removed.
--   
--   This parameter to the API requires a JSON text string argument. For
--   information on how to format a JSON parameter for the various command
--   line tool environments, see <a>Using JSON for Parameters</a> in the
--   <i>CLI User Guide</i>.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Network.AWS.SecretsManager.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.SecretsManager.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.SecretsManager.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.SecretsManager.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.SecretsManager.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.SecretsManager.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.SecretsManager.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.UntagResource.UntagResource


-- | Modifies many of the details of the specified secret. If you include a
--   <tt>ClientRequestToken</tt> and <i>either</i> <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> then it also creates a new version attached to
--   the secret.
--   
--   To modify the rotation configuration of a secret, use RotateSecret
--   instead.
--   
--   The Secrets Manager console uses only the <tt>SecretString</tt>
--   parameter and therefore limits you to encrypting and storing only a
--   text string. To encrypt and store binary data as part of the version
--   of a secret, you must use either the Amazon Web Services CLI or one of
--   the Amazon Web Services SDKs.
--   
--   <ul>
--   <li>If a version with a <tt>VersionId</tt> with the same value as the
--   <tt>ClientRequestToken</tt> parameter already exists, the operation
--   results in an error. You cannot modify an existing version, you can
--   only create a new version.</li>
--   <li>If you include <tt>SecretString</tt> or <tt>SecretBinary</tt> to
--   create a new secret version, Secrets Manager automatically attaches
--   the staging label <tt>AWSCURRENT</tt> to the new version.</li>
--   <li>If you call an operation to encrypt or decrypt the
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> for a secret in the
--   same account as the calling user and that secret doesn't specify a
--   Amazon Web Services KMS encryption key, Secrets Manager uses the
--   account's default Amazon Web Services managed customer master key
--   (CMK) with the alias <tt>aws/secretsmanager</tt>. If this key doesn't
--   already exist in your account then Secrets Manager creates it for you
--   automatically. All users and roles in the same Amazon Web Services
--   account automatically have access to use the default CMK. Note that if
--   an Secrets Manager API call results in Amazon Web Services creating
--   the account's Amazon Web Services-managed CMK, it can result in a
--   one-time significant delay in returning the result.</li>
--   <li>If the secret resides in a different Amazon Web Services account
--   from the credentials calling an API that requires encryption or
--   decryption of the secret value then you must create and use a custom
--   Amazon Web Services KMS CMK because you can't access the default CMK
--   for the account using credentials from a different Amazon Web Services
--   account. Store the ARN of the CMK in the secret when you create the
--   secret or when you update it by including it in the <tt>KMSKeyId</tt>.
--   If you call an API that must encrypt or decrypt <tt>SecretString</tt>
--   or <tt>SecretBinary</tt> using credentials from a different account
--   then the Amazon Web Services KMS key policy must grant cross-account
--   access to that other account's user or role for both the
--   kms:GenerateDataKey and kms:Decrypt operations.</li>
--   </ul>
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:UpdateSecret</li>
--   <li>kms:GenerateDataKey - needed only if you use a custom Amazon Web
--   Services KMS key to encrypt the secret. You do not need this
--   permission to use the account's Amazon Web Services managed CMK for
--   Secrets Manager.</li>
--   <li>kms:Decrypt - needed only if you use a custom Amazon Web Services
--   KMS key to encrypt the secret. You do not need this permission to use
--   the account's Amazon Web Services managed CMK for Secrets
--   Manager.</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To create a new secret, use CreateSecret.</li>
--   <li>To add only a new version to an existing secret, use
--   PutSecretValue.</li>
--   <li>To get the details for a secret, use DescribeSecret.</li>
--   <li>To list the versions contained in a secret, use
--   ListSecretVersionIds.</li>
--   </ul>
module Network.AWS.SecretsManager.UpdateSecret

-- | <i>See:</i> <a>newUpdateSecret</a> smart constructor.
data UpdateSecret
UpdateSecret' :: Maybe (Sensitive Base64) -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Text -> Text -> UpdateSecret

-- | (Optional) Specifies updated binary data that you want to encrypt and
--   store in the new version of the secret. To use this parameter in the
--   command-line tools, we recommend that you store your binary data in a
--   file and then use the appropriate technique for your tool to pass the
--   contents of the file as a parameter. Either <tt>SecretBinary</tt> or
--   <tt>SecretString</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   This parameter is not accessible using the Secrets Manager console.
[$sel:secretBinary:UpdateSecret'] :: UpdateSecret -> Maybe (Sensitive Base64)

-- | (Optional) Specifies an updated ARN or alias of the Amazon Web
--   Services KMS customer master key (CMK) to be used to encrypt the
--   protected text in new versions of this secret.
--   
--   You can only use the account's default CMK to encrypt and decrypt if
--   you call this operation using credentials from the same account that
--   owns the secret. If the secret is in a different account, then you
--   must create a custom CMK and provide the ARN of that CMK in this
--   field. The user making the call must have permissions to both the
--   secret and the CMK in their respective accounts.
[$sel:kmsKeyId:UpdateSecret'] :: UpdateSecret -> Maybe Text

-- | (Optional) Specifies an updated user-provided description of the
--   secret.
[$sel:description:UpdateSecret'] :: UpdateSecret -> Maybe Text

-- | (Optional) Specifies updated text data that you want to encrypt and
--   store in this new version of the secret. Either <tt>SecretBinary</tt>
--   or <tt>SecretString</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   If you create this secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the
--   default Lambda rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   [{"username":"bob"},{"password":"abc123xyz456"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text. You can also 'escape' the
--   double quote character in the embedded JSON text by prefacing each
--   with a backslash. For example, the following string is surrounded by
--   double-quotes. All of the embedded double quotes are escaped:
--   
--   <pre>
--   "[{\"username\":\"bob\"},{\"password\":\"abc123xyz456\"}]"
--   </pre>
[$sel:secretString:UpdateSecret'] :: UpdateSecret -> Maybe (Sensitive Text)

-- | (Optional) If you want to add a new version to the secret, this
--   parameter specifies a unique identifier for the new version that helps
--   ensure idempotency.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request. If you don't use the SDK and instead generate a
--   raw HTTP request to the Secrets Manager service endpoint, then you
--   must generate a <tt>ClientRequestToken</tt> yourself for new versions
--   and include that value in the request.
--   
--   You typically only need to interact with this value if you implement
--   your own retry logic and want to ensure that a given secret is not
--   created twice. We recommend that you generate a <a>UUID-type</a> value
--   to ensure uniqueness within the specified secret.
--   
--   Secrets Manager uses this value to prevent the accidental creation of
--   duplicate versions if there are failures and retries during the Lambda
--   rotation function's processing.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are the same as
--   those in the request then the request is ignored (the operation is
--   idempotent).</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from the request then an error occurs because you cannot modify an
--   existing secret value.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
[$sel:clientRequestToken:UpdateSecret'] :: UpdateSecret -> Maybe Text

-- | Specifies the secret that you want to modify or to which you want to
--   add a new version. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:UpdateSecret'] :: UpdateSecret -> Text

-- | Create a value of <a>UpdateSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretBinary:UpdateSecret'</a>,
--   <a>updateSecret_secretBinary</a> - (Optional) Specifies updated binary
--   data that you want to encrypt and store in the new version of the
--   secret. To use this parameter in the command-line tools, we recommend
--   that you store your binary data in a file and then use the appropriate
--   technique for your tool to pass the contents of the file as a
--   parameter. Either <tt>SecretBinary</tt> or <tt>SecretString</tt> must
--   have a value, but not both. They cannot both be empty.
--   
--   This parameter is not accessible using the Secrets Manager console.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:kmsKeyId:UpdateSecret'</a>, <a>updateSecret_kmsKeyId</a> -
--   (Optional) Specifies an updated ARN or alias of the Amazon Web
--   Services KMS customer master key (CMK) to be used to encrypt the
--   protected text in new versions of this secret.
--   
--   You can only use the account's default CMK to encrypt and decrypt if
--   you call this operation using credentials from the same account that
--   owns the secret. If the secret is in a different account, then you
--   must create a custom CMK and provide the ARN of that CMK in this
--   field. The user making the call must have permissions to both the
--   secret and the CMK in their respective accounts.
--   
--   <a>$sel:description:UpdateSecret'</a>, <a>updateSecret_description</a>
--   - (Optional) Specifies an updated user-provided description of the
--   secret.
--   
--   <a>$sel:secretString:UpdateSecret'</a>,
--   <a>updateSecret_secretString</a> - (Optional) Specifies updated text
--   data that you want to encrypt and store in this new version of the
--   secret. Either <tt>SecretBinary</tt> or <tt>SecretString</tt> must
--   have a value, but not both. They cannot both be empty.
--   
--   If you create this secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the
--   default Lambda rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   [{"username":"bob"},{"password":"abc123xyz456"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text. You can also 'escape' the
--   double quote character in the embedded JSON text by prefacing each
--   with a backslash. For example, the following string is surrounded by
--   double-quotes. All of the embedded double quotes are escaped:
--   
--   <pre>
--   "[{\"username\":\"bob\"},{\"password\":\"abc123xyz456\"}]"
--   </pre>
--   
--   <a>$sel:clientRequestToken:UpdateSecret'</a>,
--   <a>updateSecret_clientRequestToken</a> - (Optional) If you want to add
--   a new version to the secret, this parameter specifies a unique
--   identifier for the new version that helps ensure idempotency.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request. If you don't use the SDK and instead generate a
--   raw HTTP request to the Secrets Manager service endpoint, then you
--   must generate a <tt>ClientRequestToken</tt> yourself for new versions
--   and include that value in the request.
--   
--   You typically only need to interact with this value if you implement
--   your own retry logic and want to ensure that a given secret is not
--   created twice. We recommend that you generate a <a>UUID-type</a> value
--   to ensure uniqueness within the specified secret.
--   
--   Secrets Manager uses this value to prevent the accidental creation of
--   duplicate versions if there are failures and retries during the Lambda
--   rotation function's processing.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are the same as
--   those in the request then the request is ignored (the operation is
--   idempotent).</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from the request then an error occurs because you cannot modify an
--   existing secret value.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
--   
--   <a>$sel:secretId:UpdateSecret'</a>, <a>updateSecret_secretId</a> -
--   Specifies the secret that you want to modify or to which you want to
--   add a new version. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newUpdateSecret :: Text -> UpdateSecret

-- | (Optional) Specifies updated binary data that you want to encrypt and
--   store in the new version of the secret. To use this parameter in the
--   command-line tools, we recommend that you store your binary data in a
--   file and then use the appropriate technique for your tool to pass the
--   contents of the file as a parameter. Either <tt>SecretBinary</tt> or
--   <tt>SecretString</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   This parameter is not accessible using the Secrets Manager console.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
updateSecret_secretBinary :: Lens' UpdateSecret (Maybe ByteString)

-- | (Optional) Specifies an updated ARN or alias of the Amazon Web
--   Services KMS customer master key (CMK) to be used to encrypt the
--   protected text in new versions of this secret.
--   
--   You can only use the account's default CMK to encrypt and decrypt if
--   you call this operation using credentials from the same account that
--   owns the secret. If the secret is in a different account, then you
--   must create a custom CMK and provide the ARN of that CMK in this
--   field. The user making the call must have permissions to both the
--   secret and the CMK in their respective accounts.
updateSecret_kmsKeyId :: Lens' UpdateSecret (Maybe Text)

-- | (Optional) Specifies an updated user-provided description of the
--   secret.
updateSecret_description :: Lens' UpdateSecret (Maybe Text)

-- | (Optional) Specifies updated text data that you want to encrypt and
--   store in this new version of the secret. Either <tt>SecretBinary</tt>
--   or <tt>SecretString</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   If you create this secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the
--   default Lambda rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   [{"username":"bob"},{"password":"abc123xyz456"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text. You can also 'escape' the
--   double quote character in the embedded JSON text by prefacing each
--   with a backslash. For example, the following string is surrounded by
--   double-quotes. All of the embedded double quotes are escaped:
--   
--   <pre>
--   "[{\"username\":\"bob\"},{\"password\":\"abc123xyz456\"}]"
--   </pre>
updateSecret_secretString :: Lens' UpdateSecret (Maybe Text)

-- | (Optional) If you want to add a new version to the secret, this
--   parameter specifies a unique identifier for the new version that helps
--   ensure idempotency.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request. If you don't use the SDK and instead generate a
--   raw HTTP request to the Secrets Manager service endpoint, then you
--   must generate a <tt>ClientRequestToken</tt> yourself for new versions
--   and include that value in the request.
--   
--   You typically only need to interact with this value if you implement
--   your own retry logic and want to ensure that a given secret is not
--   created twice. We recommend that you generate a <a>UUID-type</a> value
--   to ensure uniqueness within the specified secret.
--   
--   Secrets Manager uses this value to prevent the accidental creation of
--   duplicate versions if there are failures and retries during the Lambda
--   rotation function's processing.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are the same as
--   those in the request then the request is ignored (the operation is
--   idempotent).</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from the request then an error occurs because you cannot modify an
--   existing secret value.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
updateSecret_clientRequestToken :: Lens' UpdateSecret (Maybe Text)

-- | Specifies the secret that you want to modify or to which you want to
--   add a new version. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
updateSecret_secretId :: Lens' UpdateSecret Text

-- | <i>See:</i> <a>newUpdateSecretResponse</a> smart constructor.
data UpdateSecretResponse
UpdateSecretResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateSecretResponse

-- | The ARN of the secret that was updated.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
[$sel:arn:UpdateSecretResponse'] :: UpdateSecretResponse -> Maybe Text

-- | The friendly name of the secret that was updated.
[$sel:name:UpdateSecretResponse'] :: UpdateSecretResponse -> Maybe Text

-- | If a new version of the secret was created by this operation, then
--   <tt>VersionId</tt> contains the unique identifier of the new version.
[$sel:versionId:UpdateSecretResponse'] :: UpdateSecretResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateSecretResponse'] :: UpdateSecretResponse -> Int

-- | Create a value of <a>UpdateSecretResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UpdateSecretResponse'</a>, <a>updateSecretResponse_arn</a>
--   - The ARN of the secret that was updated.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
--   
--   <a>$sel:name:UpdateSecretResponse'</a>,
--   <a>updateSecretResponse_name</a> - The friendly name of the secret
--   that was updated.
--   
--   <a>$sel:versionId:UpdateSecretResponse'</a>,
--   <a>updateSecretResponse_versionId</a> - If a new version of the secret
--   was created by this operation, then <tt>VersionId</tt> contains the
--   unique identifier of the new version.
--   
--   <a>$sel:httpStatus:UpdateSecretResponse'</a>,
--   <a>updateSecretResponse_httpStatus</a> - The response's http status
--   code.
newUpdateSecretResponse :: Int -> UpdateSecretResponse

-- | The ARN of the secret that was updated.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
updateSecretResponse_arn :: Lens' UpdateSecretResponse (Maybe Text)

-- | The friendly name of the secret that was updated.
updateSecretResponse_name :: Lens' UpdateSecretResponse (Maybe Text)

-- | If a new version of the secret was created by this operation, then
--   <tt>VersionId</tt> contains the unique identifier of the new version.
updateSecretResponse_versionId :: Lens' UpdateSecretResponse (Maybe Text)

-- | The response's http status code.
updateSecretResponse_httpStatus :: Lens' UpdateSecretResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.UpdateSecret.UpdateSecret
instance GHC.Show.Show Network.AWS.SecretsManager.UpdateSecret.UpdateSecret
instance GHC.Classes.Eq Network.AWS.SecretsManager.UpdateSecret.UpdateSecret
instance GHC.Generics.Generic Network.AWS.SecretsManager.UpdateSecret.UpdateSecretResponse
instance GHC.Show.Show Network.AWS.SecretsManager.UpdateSecret.UpdateSecretResponse
instance GHC.Read.Read Network.AWS.SecretsManager.UpdateSecret.UpdateSecretResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.UpdateSecret.UpdateSecretResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.UpdateSecret.UpdateSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.UpdateSecret.UpdateSecretResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.UpdateSecret.UpdateSecret
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.UpdateSecret.UpdateSecret
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.UpdateSecret.UpdateSecret
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.UpdateSecret.UpdateSecret
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.UpdateSecret.UpdateSecret
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.UpdateSecret.UpdateSecret


-- | Modifies the staging labels attached to a version of a secret. Staging
--   labels are used to track a version as it progresses through the secret
--   rotation process. You can attach a staging label to only one version
--   of a secret at a time. If a staging label to be added is already
--   attached to another version, then it is moved--removed from the other
--   version first and then attached to this one. For more information
--   about staging labels, see <a>Staging Labels</a> in the <i>Amazon Web
--   Services Secrets Manager User Guide</i>.
--   
--   The staging labels that you specify in the <tt>VersionStage</tt>
--   parameter are added to the existing list of staging labels--they don't
--   replace it.
--   
--   You can move the <tt>AWSCURRENT</tt> staging label to this version by
--   including it in this call.
--   
--   Whenever you move <tt>AWSCURRENT</tt>, Secrets Manager automatically
--   moves the label <tt>AWSPREVIOUS</tt> to the version that
--   <tt>AWSCURRENT</tt> was removed from.
--   
--   If this action results in the last label being removed from a version,
--   then the version is considered to be 'deprecated' and can be deleted
--   by Secrets Manager.
--   
--   <b>Minimum permissions</b>
--   
--   To run this command, you must have the following permissions:
--   
--   <ul>
--   <li>secretsmanager:UpdateSecretVersionStage</li>
--   </ul>
--   
--   <b>Related operations</b>
--   
--   <ul>
--   <li>To get the list of staging labels that are currently associated
--   with a version of a secret, use <tt> DescribeSecret </tt> and examine
--   the <tt>SecretVersionsToStages</tt> response value.</li>
--   </ul>
module Network.AWS.SecretsManager.UpdateSecretVersionStage

-- | <i>See:</i> <a>newUpdateSecretVersionStage</a> smart constructor.
data UpdateSecretVersionStage
UpdateSecretVersionStage' :: Maybe Text -> Maybe Text -> Text -> Text -> UpdateSecretVersionStage

-- | Specifies the secret version ID of the version that the staging label
--   is to be removed from. If the staging label you are trying to attach
--   to one version is already attached to a different version, then you
--   must include this parameter and specify the version that the label is
--   to be removed from. If the label is attached and you either do not
--   specify this parameter, or the version ID does not match, then the
--   operation fails.
[$sel:removeFromVersionId:UpdateSecretVersionStage'] :: UpdateSecretVersionStage -> Maybe Text

-- | (Optional) The secret version ID that you want to add the staging
--   label. If you want to remove a label from a version, then do not
--   specify this parameter.
--   
--   If the staging label is already attached to a different version of the
--   secret, then you must also specify the <tt>RemoveFromVersionId</tt>
--   parameter.
[$sel:moveToVersionId:UpdateSecretVersionStage'] :: UpdateSecretVersionStage -> Maybe Text

-- | Specifies the secret with the version with the list of staging labels
--   you want to modify. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:UpdateSecretVersionStage'] :: UpdateSecretVersionStage -> Text

-- | The staging label to add to this version.
[$sel:versionStage:UpdateSecretVersionStage'] :: UpdateSecretVersionStage -> Text

-- | Create a value of <a>UpdateSecretVersionStage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:removeFromVersionId:UpdateSecretVersionStage'</a>,
--   <a>updateSecretVersionStage_removeFromVersionId</a> - Specifies the
--   secret version ID of the version that the staging label is to be
--   removed from. If the staging label you are trying to attach to one
--   version is already attached to a different version, then you must
--   include this parameter and specify the version that the label is to be
--   removed from. If the label is attached and you either do not specify
--   this parameter, or the version ID does not match, then the operation
--   fails.
--   
--   <a>$sel:moveToVersionId:UpdateSecretVersionStage'</a>,
--   <a>updateSecretVersionStage_moveToVersionId</a> - (Optional) The
--   secret version ID that you want to add the staging label. If you want
--   to remove a label from a version, then do not specify this parameter.
--   
--   If the staging label is already attached to a different version of the
--   secret, then you must also specify the <tt>RemoveFromVersionId</tt>
--   parameter.
--   
--   <a>$sel:secretId:UpdateSecretVersionStage'</a>,
--   <a>updateSecretVersionStage_secretId</a> - Specifies the secret with
--   the version with the list of staging labels you want to modify. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
--   
--   <a>$sel:versionStage:UpdateSecretVersionStage'</a>,
--   <a>updateSecretVersionStage_versionStage</a> - The staging label to
--   add to this version.
newUpdateSecretVersionStage :: Text -> Text -> UpdateSecretVersionStage

-- | Specifies the secret version ID of the version that the staging label
--   is to be removed from. If the staging label you are trying to attach
--   to one version is already attached to a different version, then you
--   must include this parameter and specify the version that the label is
--   to be removed from. If the label is attached and you either do not
--   specify this parameter, or the version ID does not match, then the
--   operation fails.
updateSecretVersionStage_removeFromVersionId :: Lens' UpdateSecretVersionStage (Maybe Text)

-- | (Optional) The secret version ID that you want to add the staging
--   label. If you want to remove a label from a version, then do not
--   specify this parameter.
--   
--   If the staging label is already attached to a different version of the
--   secret, then you must also specify the <tt>RemoveFromVersionId</tt>
--   parameter.
updateSecretVersionStage_moveToVersionId :: Lens' UpdateSecretVersionStage (Maybe Text)

-- | Specifies the secret with the version with the list of staging labels
--   you want to modify. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
updateSecretVersionStage_secretId :: Lens' UpdateSecretVersionStage Text

-- | The staging label to add to this version.
updateSecretVersionStage_versionStage :: Lens' UpdateSecretVersionStage Text

-- | <i>See:</i> <a>newUpdateSecretVersionStageResponse</a> smart
--   constructor.
data UpdateSecretVersionStageResponse
UpdateSecretVersionStageResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateSecretVersionStageResponse

-- | The ARN of the secret with the modified staging label.
[$sel:arn:UpdateSecretVersionStageResponse'] :: UpdateSecretVersionStageResponse -> Maybe Text

-- | The friendly name of the secret with the modified staging label.
[$sel:name:UpdateSecretVersionStageResponse'] :: UpdateSecretVersionStageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateSecretVersionStageResponse'] :: UpdateSecretVersionStageResponse -> Int

-- | Create a value of <a>UpdateSecretVersionStageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UpdateSecretVersionStageResponse'</a>,
--   <a>updateSecretVersionStageResponse_arn</a> - The ARN of the secret
--   with the modified staging label.
--   
--   <a>$sel:name:UpdateSecretVersionStageResponse'</a>,
--   <a>updateSecretVersionStageResponse_name</a> - The friendly name of
--   the secret with the modified staging label.
--   
--   <a>$sel:httpStatus:UpdateSecretVersionStageResponse'</a>,
--   <a>updateSecretVersionStageResponse_httpStatus</a> - The response's
--   http status code.
newUpdateSecretVersionStageResponse :: Int -> UpdateSecretVersionStageResponse

-- | The ARN of the secret with the modified staging label.
updateSecretVersionStageResponse_arn :: Lens' UpdateSecretVersionStageResponse (Maybe Text)

-- | The friendly name of the secret with the modified staging label.
updateSecretVersionStageResponse_name :: Lens' UpdateSecretVersionStageResponse (Maybe Text)

-- | The response's http status code.
updateSecretVersionStageResponse_httpStatus :: Lens' UpdateSecretVersionStageResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStage
instance GHC.Show.Show Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStage
instance GHC.Read.Read Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStage
instance GHC.Classes.Eq Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStage
instance GHC.Generics.Generic Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStageResponse
instance GHC.Show.Show Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStageResponse
instance GHC.Read.Read Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStageResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStage
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStageResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStage
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStage
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStage
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.UpdateSecretVersionStage.UpdateSecretVersionStage


-- | Validates that the resource policy does not grant a wide range of IAM
--   principals access to your secret. The JSON request string input and
--   response output displays formatted code with white space and line
--   breaks for better readability. Submit your input as a single line JSON
--   string. A resource-based policy is optional for secrets.
--   
--   The API performs three checks when validating the secret:
--   
--   <ul>
--   <li>Sends a call to <a>Zelkova</a>, an automated reasoning engine, to
--   ensure your Resource Policy does not allow broad access to your
--   secret.</li>
--   <li>Checks for correct syntax in a policy.</li>
--   <li>Verifies the policy does not lock out a caller.</li>
--   </ul>
--   
--   <b>Minimum Permissions</b>
--   
--   You must have the permissions required to access the following APIs:
--   
--   <ul>
--   <li><pre>secretsmanager:PutResourcePolicy</pre></li>
--   <li><pre>secretsmanager:ValidateResourcePolicy</pre></li>
--   </ul>
module Network.AWS.SecretsManager.ValidateResourcePolicy

-- | <i>See:</i> <a>newValidateResourcePolicy</a> smart constructor.
data ValidateResourcePolicy
ValidateResourcePolicy' :: Maybe Text -> Text -> ValidateResourcePolicy

-- | (Optional) The identifier of the secret with the resource-based policy
--   you want to validate. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
[$sel:secretId:ValidateResourcePolicy'] :: ValidateResourcePolicy -> Maybe Text

-- | A JSON-formatted string constructed according to the grammar and
--   syntax for an Amazon Web Services resource-based policy. The policy in
--   the string identifies who can access or manage this secret and its
--   versions. For information on how to format a JSON parameter for the
--   various command line tool environments, see <a>Using JSON for
--   Parameters</a> in the <i>CLI User Guide</i>.publi
[$sel:resourcePolicy:ValidateResourcePolicy'] :: ValidateResourcePolicy -> Text

-- | Create a value of <a>ValidateResourcePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:ValidateResourcePolicy'</a>,
--   <a>validateResourcePolicy_secretId</a> - (Optional) The identifier of
--   the secret with the resource-based policy you want to validate. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
--   
--   <a>$sel:resourcePolicy:ValidateResourcePolicy'</a>,
--   <a>validateResourcePolicy_resourcePolicy</a> - A JSON-formatted string
--   constructed according to the grammar and syntax for an Amazon Web
--   Services resource-based policy. The policy in the string identifies
--   who can access or manage this secret and its versions. For information
--   on how to format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>.publi
newValidateResourcePolicy :: Text -> ValidateResourcePolicy

-- | (Optional) The identifier of the secret with the resource-based policy
--   you want to validate. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
validateResourcePolicy_secretId :: Lens' ValidateResourcePolicy (Maybe Text)

-- | A JSON-formatted string constructed according to the grammar and
--   syntax for an Amazon Web Services resource-based policy. The policy in
--   the string identifies who can access or manage this secret and its
--   versions. For information on how to format a JSON parameter for the
--   various command line tool environments, see <a>Using JSON for
--   Parameters</a> in the <i>CLI User Guide</i>.publi
validateResourcePolicy_resourcePolicy :: Lens' ValidateResourcePolicy Text

-- | <i>See:</i> <a>newValidateResourcePolicyResponse</a> smart
--   constructor.
data ValidateResourcePolicyResponse
ValidateResourcePolicyResponse' :: Maybe Bool -> Maybe [ValidationErrorsEntry] -> Int -> ValidateResourcePolicyResponse

-- | Returns a message stating that your Reource Policy passed validation.
[$sel:policyValidationPassed:ValidateResourcePolicyResponse'] :: ValidateResourcePolicyResponse -> Maybe Bool

-- | Returns an error message if your policy doesn't pass validatation.
[$sel:validationErrors:ValidateResourcePolicyResponse'] :: ValidateResourcePolicyResponse -> Maybe [ValidationErrorsEntry]

-- | The response's http status code.
[$sel:httpStatus:ValidateResourcePolicyResponse'] :: ValidateResourcePolicyResponse -> Int

-- | Create a value of <a>ValidateResourcePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyValidationPassed:ValidateResourcePolicyResponse'</a>,
--   <a>validateResourcePolicyResponse_policyValidationPassed</a> - Returns
--   a message stating that your Reource Policy passed validation.
--   
--   <a>$sel:validationErrors:ValidateResourcePolicyResponse'</a>,
--   <a>validateResourcePolicyResponse_validationErrors</a> - Returns an
--   error message if your policy doesn't pass validatation.
--   
--   <a>$sel:httpStatus:ValidateResourcePolicyResponse'</a>,
--   <a>validateResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newValidateResourcePolicyResponse :: Int -> ValidateResourcePolicyResponse

-- | Returns a message stating that your Reource Policy passed validation.
validateResourcePolicyResponse_policyValidationPassed :: Lens' ValidateResourcePolicyResponse (Maybe Bool)

-- | Returns an error message if your policy doesn't pass validatation.
validateResourcePolicyResponse_validationErrors :: Lens' ValidateResourcePolicyResponse (Maybe [ValidationErrorsEntry])

-- | The response's http status code.
validateResourcePolicyResponse_httpStatus :: Lens' ValidateResourcePolicyResponse Int
instance GHC.Generics.Generic Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicy
instance GHC.Show.Show Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicy
instance GHC.Read.Read Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicy
instance GHC.Classes.Eq Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicy
instance GHC.Generics.Generic Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicyResponse
instance GHC.Show.Show Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicyResponse
instance GHC.Read.Read Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicyResponse
instance GHC.Classes.Eq Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicyResponse
instance Network.AWS.Types.AWSRequest Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicyResponse
instance Data.Hashable.Class.Hashable Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicy
instance Control.DeepSeq.NFData Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicy
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicy
instance Network.AWS.Data.Path.ToPath Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.SecretsManager.ValidateResourcePolicy.ValidateResourcePolicy


module Network.AWS.SecretsManager.Lens

-- | (Optional) Specifies the number of days that Secrets Manager waits
--   before Secrets Manager can delete the secret. You can't use both this
--   parameter and the <tt>ForceDeleteWithoutRecovery</tt> parameter in the
--   same API call.
--   
--   This value can range from 7 to 30 days with a default value of 30.
deleteSecret_recoveryWindowInDays :: Lens' DeleteSecret (Maybe Integer)

-- | (Optional) Specifies that the secret is to be deleted without any
--   recovery window. You can't use both this parameter and the
--   <tt>RecoveryWindowInDays</tt> parameter in the same API call.
--   
--   An asynchronous background process performs the actual deletion, so
--   there can be a short delay before the operation completes. If you
--   write code to delete and then immediately recreate a secret with the
--   same name, ensure that your code includes appropriate back off and
--   retry logic.
--   
--   Use this parameter with caution. This parameter causes the operation
--   to skip the normal waiting period before the permanent deletion that
--   Amazon Web Services would normally impose with the
--   <tt>RecoveryWindowInDays</tt> parameter. If you delete a secret with
--   the <tt>ForceDeleteWithouRecovery</tt> parameter, then you have no
--   opportunity to recover the secret. You lose the secret permanently.
--   
--   If you use this parameter and include a previously deleted or
--   nonexistent secret, the operation does not return the error
--   <tt>ResourceNotFoundException</tt> in order to correctly handle
--   retries.
deleteSecret_forceDeleteWithoutRecovery :: Lens' DeleteSecret (Maybe Bool)

-- | Specifies the secret to delete. You can specify either the Amazon
--   Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
deleteSecret_secretId :: Lens' DeleteSecret Text

-- | The ARN of the secret that is now scheduled for deletion.
deleteSecretResponse_arn :: Lens' DeleteSecretResponse (Maybe Text)

-- | The friendly name of the secret currently scheduled for deletion.
deleteSecretResponse_name :: Lens' DeleteSecretResponse (Maybe Text)

-- | The date and time after which this secret can be deleted by Secrets
--   Manager and can no longer be restored. This value is the date and time
--   of the delete request plus the number of days specified in
--   <tt>RecoveryWindowInDays</tt>.
deleteSecretResponse_deletionDate :: Lens' DeleteSecretResponse (Maybe UTCTime)

-- | The response's http status code.
deleteSecretResponse_httpStatus :: Lens' DeleteSecretResponse Int

-- | (Optional) Specifies updated binary data that you want to encrypt and
--   store in the new version of the secret. To use this parameter in the
--   command-line tools, we recommend that you store your binary data in a
--   file and then use the appropriate technique for your tool to pass the
--   contents of the file as a parameter. Either <tt>SecretBinary</tt> or
--   <tt>SecretString</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   This parameter is not accessible using the Secrets Manager console.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
updateSecret_secretBinary :: Lens' UpdateSecret (Maybe ByteString)

-- | (Optional) Specifies an updated ARN or alias of the Amazon Web
--   Services KMS customer master key (CMK) to be used to encrypt the
--   protected text in new versions of this secret.
--   
--   You can only use the account's default CMK to encrypt and decrypt if
--   you call this operation using credentials from the same account that
--   owns the secret. If the secret is in a different account, then you
--   must create a custom CMK and provide the ARN of that CMK in this
--   field. The user making the call must have permissions to both the
--   secret and the CMK in their respective accounts.
updateSecret_kmsKeyId :: Lens' UpdateSecret (Maybe Text)

-- | (Optional) Specifies an updated user-provided description of the
--   secret.
updateSecret_description :: Lens' UpdateSecret (Maybe Text)

-- | (Optional) Specifies updated text data that you want to encrypt and
--   store in this new version of the secret. Either <tt>SecretBinary</tt>
--   or <tt>SecretString</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   If you create this secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the
--   default Lambda rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   [{"username":"bob"},{"password":"abc123xyz456"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text. You can also 'escape' the
--   double quote character in the embedded JSON text by prefacing each
--   with a backslash. For example, the following string is surrounded by
--   double-quotes. All of the embedded double quotes are escaped:
--   
--   <pre>
--   "[{\"username\":\"bob\"},{\"password\":\"abc123xyz456\"}]"
--   </pre>
updateSecret_secretString :: Lens' UpdateSecret (Maybe Text)

-- | (Optional) If you want to add a new version to the secret, this
--   parameter specifies a unique identifier for the new version that helps
--   ensure idempotency.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request. If you don't use the SDK and instead generate a
--   raw HTTP request to the Secrets Manager service endpoint, then you
--   must generate a <tt>ClientRequestToken</tt> yourself for new versions
--   and include that value in the request.
--   
--   You typically only need to interact with this value if you implement
--   your own retry logic and want to ensure that a given secret is not
--   created twice. We recommend that you generate a <a>UUID-type</a> value
--   to ensure uniqueness within the specified secret.
--   
--   Secrets Manager uses this value to prevent the accidental creation of
--   duplicate versions if there are failures and retries during the Lambda
--   rotation function's processing.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are the same as
--   those in the request then the request is ignored (the operation is
--   idempotent).</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from the request then an error occurs because you cannot modify an
--   existing secret value.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
updateSecret_clientRequestToken :: Lens' UpdateSecret (Maybe Text)

-- | Specifies the secret that you want to modify or to which you want to
--   add a new version. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
updateSecret_secretId :: Lens' UpdateSecret Text

-- | The ARN of the secret that was updated.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
updateSecretResponse_arn :: Lens' UpdateSecretResponse (Maybe Text)

-- | The friendly name of the secret that was updated.
updateSecretResponse_name :: Lens' UpdateSecretResponse (Maybe Text)

-- | If a new version of the secret was created by this operation, then
--   <tt>VersionId</tt> contains the unique identifier of the new version.
updateSecretResponse_versionId :: Lens' UpdateSecretResponse (Maybe Text)

-- | The response's http status code.
updateSecretResponse_httpStatus :: Lens' UpdateSecretResponse Int

-- | A structure that defines the rotation configuration for this secret.
rotateSecret_rotationRules :: Lens' RotateSecret (Maybe RotationRulesType)

-- | (Optional) Specifies the ARN of the Lambda function that can rotate
--   the secret.
rotateSecret_rotationLambdaARN :: Lens' RotateSecret (Maybe Text)

-- | (Optional) Specifies a unique identifier for the new version of the
--   secret that helps ensure idempotency.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request for this parameter. If you don't use the SDK and
--   instead generate a raw HTTP request to the Secrets Manager service
--   endpoint, then you must generate a <tt>ClientRequestToken</tt>
--   yourself for new versions and include that value in the request.
--   
--   You only need to specify your own value if you implement your own
--   retry logic and want to ensure that a given secret is not created
--   twice. We recommend that you generate a <a>UUID-type</a> value to
--   ensure uniqueness within the specified secret.
--   
--   Secrets Manager uses this value to prevent the accidental creation of
--   duplicate versions if there are failures and retries during the
--   function's processing. This value becomes the <tt>VersionId</tt> of
--   the new version.
rotateSecret_clientRequestToken :: Lens' RotateSecret (Maybe Text)

-- | Specifies the secret that you want to rotate. You can specify either
--   the Amazon Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
rotateSecret_secretId :: Lens' RotateSecret Text

-- | The ARN of the secret.
rotateSecretResponse_arn :: Lens' RotateSecretResponse (Maybe Text)

-- | The friendly name of the secret.
rotateSecretResponse_name :: Lens' RotateSecretResponse (Maybe Text)

-- | The ID of the new version of the secret created by the rotation
--   started by this request.
rotateSecretResponse_versionId :: Lens' RotateSecretResponse (Maybe Text)

-- | The response's http status code.
rotateSecretResponse_httpStatus :: Lens' RotateSecretResponse Int

-- | Remove a secret by <tt>SecretId</tt> from replica Regions.
removeRegionsFromReplication_secretId :: Lens' RemoveRegionsFromReplication Text

-- | Remove replication from specific Regions.
removeRegionsFromReplication_removeReplicaRegions :: Lens' RemoveRegionsFromReplication (NonEmpty Text)

-- | Describes the remaining replication status after you remove regions
--   from the replication list.
removeRegionsFromReplicationResponse_replicationStatus :: Lens' RemoveRegionsFromReplicationResponse (Maybe [ReplicationStatusType])

-- | The secret <tt>ARN</tt> removed from replication regions.
removeRegionsFromReplicationResponse_arn :: Lens' RemoveRegionsFromReplicationResponse (Maybe Text)

-- | The response's http status code.
removeRegionsFromReplicationResponse_httpStatus :: Lens' RemoveRegionsFromReplicationResponse Int

-- | Specifies the secret that you want to retrieve the attached
--   resource-based policy for. You can specify either the Amazon Resource
--   Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
getResourcePolicy_secretId :: Lens' GetResourcePolicy Text

-- | The ARN of the secret that the resource-based policy was retrieved
--   for.
getResourcePolicyResponse_arn :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | A JSON-formatted string that describes the permissions that are
--   associated with the attached secret. These permissions are combined
--   with any permissions that are associated with the user or role that
--   attempts to access this secret. The combined permissions specify who
--   can access the secret and what actions they can perform. For more
--   information, see <a>Authentication and Access Control for Amazon Web
--   Services Secrets Manager</a> in the <i>Amazon Web Services Secrets
--   Manager User Guide</i>.
getResourcePolicyResponse_resourcePolicy :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | The friendly name of the secret that the resource-based policy was
--   retrieved for.
getResourcePolicyResponse_name :: Lens' GetResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
getResourcePolicyResponse_httpStatus :: Lens' GetResourcePolicyResponse Int

-- | (Optional) The identifier of the secret with the resource-based policy
--   you want to validate. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
validateResourcePolicy_secretId :: Lens' ValidateResourcePolicy (Maybe Text)

-- | A JSON-formatted string constructed according to the grammar and
--   syntax for an Amazon Web Services resource-based policy. The policy in
--   the string identifies who can access or manage this secret and its
--   versions. For information on how to format a JSON parameter for the
--   various command line tool environments, see <a>Using JSON for
--   Parameters</a> in the <i>CLI User Guide</i>.publi
validateResourcePolicy_resourcePolicy :: Lens' ValidateResourcePolicy Text

-- | Returns a message stating that your Reource Policy passed validation.
validateResourcePolicyResponse_policyValidationPassed :: Lens' ValidateResourcePolicyResponse (Maybe Bool)

-- | Returns an error message if your policy doesn't pass validatation.
validateResourcePolicyResponse_validationErrors :: Lens' ValidateResourcePolicyResponse (Maybe [ValidationErrorsEntry])

-- | The response's http status code.
validateResourcePolicyResponse_httpStatus :: Lens' ValidateResourcePolicyResponse Int

-- | Specifies the secret to cancel a rotation request. You can specify
--   either the Amazon Resource Name (ARN) or the friendly name of the
--   secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
cancelRotateSecret_secretId :: Lens' CancelRotateSecret Text

-- | The ARN of the secret for which rotation was canceled.
cancelRotateSecretResponse_arn :: Lens' CancelRotateSecretResponse (Maybe Text)

-- | The friendly name of the secret for which rotation was canceled.
cancelRotateSecretResponse_name :: Lens' CancelRotateSecretResponse (Maybe Text)

-- | The unique identifier of the version of the secret created during the
--   rotation. This version might not be complete, and should be evaluated
--   for possible deletion. At the very least, you should remove the
--   <tt>VersionStage</tt> value <tt>AWSPENDING</tt> to enable this version
--   to be deleted. Failing to clean up a cancelled rotation can block you
--   from successfully starting future rotations.
cancelRotateSecretResponse_versionId :: Lens' CancelRotateSecretResponse (Maybe Text)

-- | The response's http status code.
cancelRotateSecretResponse_httpStatus :: Lens' CancelRotateSecretResponse Int

-- | Specifies the secret that you want to restore from a previously
--   scheduled deletion. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
restoreSecret_secretId :: Lens' RestoreSecret Text

-- | The ARN of the secret that was restored.
restoreSecretResponse_arn :: Lens' RestoreSecretResponse (Maybe Text)

-- | The friendly name of the secret that was restored.
restoreSecretResponse_name :: Lens' RestoreSecretResponse (Maybe Text)

-- | The response's http status code.
restoreSecretResponse_httpStatus :: Lens' RestoreSecretResponse Int

-- | (Optional) If you set the parameter, <tt>BlockPublicPolicy</tt> to
--   true, then you block resource-based policies that allow broad access
--   to the secret.
putResourcePolicy_blockPublicPolicy :: Lens' PutResourcePolicy (Maybe Bool)

-- | Specifies the secret that you want to attach the resource-based
--   policy. You can specify either the ARN or the friendly name of the
--   secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
putResourcePolicy_secretId :: Lens' PutResourcePolicy Text

-- | A JSON-formatted string constructed according to the grammar and
--   syntax for an Amazon Web Services resource-based policy. The policy in
--   the string identifies who can access or manage this secret and its
--   versions. For information on how to format a JSON parameter for the
--   various command line tool environments, see <a>Using JSON for
--   Parameters</a> in the <i>CLI User Guide</i>.
putResourcePolicy_resourcePolicy :: Lens' PutResourcePolicy Text

-- | The ARN of the secret retrieved by the resource-based policy.
putResourcePolicyResponse_arn :: Lens' PutResourcePolicyResponse (Maybe Text)

-- | The friendly name of the secret retrieved by the resource-based
--   policy.
putResourcePolicyResponse_name :: Lens' PutResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
putResourcePolicyResponse_httpStatus :: Lens' PutResourcePolicyResponse Int

-- | The identifier of the secret whose details you want to retrieve. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
describeSecret_secretId :: Lens' DescribeSecret Text

-- | The date you created the secret.
describeSecretResponse_createdDate :: Lens' DescribeSecretResponse (Maybe UTCTime)

-- | Returns the name of the service that created this secret.
describeSecretResponse_owningService :: Lens' DescribeSecretResponse (Maybe Text)

-- | The last date and time that the rotation process for this secret was
--   invoked.
--   
--   The most recent date and time that the Secrets Manager rotation
--   process successfully completed. If the secret doesn't rotate, Secrets
--   Manager returns a null value.
describeSecretResponse_lastRotatedDate :: Lens' DescribeSecretResponse (Maybe UTCTime)

-- | Describes a list of replication status objects as <tt>InProgress</tt>,
--   <tt>Failed</tt> or <tt>InSync</tt>.<tt>P</tt>
describeSecretResponse_replicationStatus :: Lens' DescribeSecretResponse (Maybe [ReplicationStatusType])

-- | The ARN of the secret.
describeSecretResponse_arn :: Lens' DescribeSecretResponse (Maybe Text)

-- | The ARN or alias of the Amazon Web Services KMS customer master key
--   (CMK) that's used to encrypt the <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> fields in each version of the secret. If you
--   don't provide a key, then Secrets Manager defaults to encrypting the
--   secret fields with the default Amazon Web Services KMS CMK (the one
--   named <tt>awssecretsmanager</tt>) for this account.
describeSecretResponse_kmsKeyId :: Lens' DescribeSecretResponse (Maybe Text)

-- | The user-provided friendly name of the secret.
describeSecretResponse_name :: Lens' DescribeSecretResponse (Maybe Text)

-- | Specifies the primary region for secret replication.
describeSecretResponse_primaryRegion :: Lens' DescribeSecretResponse (Maybe Text)

-- | The last date and time that this secret was modified in any way.
describeSecretResponse_lastChangedDate :: Lens' DescribeSecretResponse (Maybe UTCTime)

-- | This value exists if the secret is scheduled for deletion. Some time
--   after the specified date and time, Secrets Manager deletes the secret
--   and all of its versions.
--   
--   If a secret is scheduled for deletion, then its details, including the
--   encrypted secret information, is not accessible. To cancel a scheduled
--   deletion and restore access, use RestoreSecret.
describeSecretResponse_deletedDate :: Lens' DescribeSecretResponse (Maybe UTCTime)

-- | The list of user-defined tags that are associated with the secret. To
--   add tags to a secret, use TagResource. To remove tags, use
--   UntagResource.
describeSecretResponse_tags :: Lens' DescribeSecretResponse (Maybe [Tag])

-- | Specifies whether automatic rotation is enabled for this secret.
--   
--   To enable rotation, use RotateSecret with
--   <tt>AutomaticallyRotateAfterDays</tt> set to a value greater than 0.
--   To disable rotation, use CancelRotateSecret.
describeSecretResponse_rotationEnabled :: Lens' DescribeSecretResponse (Maybe Bool)

-- | A structure with the rotation configuration for this secret.
describeSecretResponse_rotationRules :: Lens' DescribeSecretResponse (Maybe RotationRulesType)

-- | The user-provided description of the secret.
describeSecretResponse_description :: Lens' DescribeSecretResponse (Maybe Text)

-- | The ARN of a Lambda function that's invoked by Secrets Manager to
--   rotate the secret either automatically per the schedule or manually by
--   a call to <tt>RotateSecret</tt>.
describeSecretResponse_rotationLambdaARN :: Lens' DescribeSecretResponse (Maybe Text)

-- | The last date that this secret was accessed. This value is truncated
--   to midnight of the date and therefore shows only the date, not the
--   time.
describeSecretResponse_lastAccessedDate :: Lens' DescribeSecretResponse (Maybe UTCTime)

-- | A list of all of the currently assigned <tt>VersionStage</tt> staging
--   labels and the <tt>VersionId</tt> that each is attached to. Staging
--   labels are used to keep track of the different versions during the
--   rotation process.
--   
--   A version that does not have any staging labels attached is considered
--   deprecated and subject to deletion. Such versions are not included in
--   this list.
describeSecretResponse_versionIdsToStages :: Lens' DescribeSecretResponse (Maybe (HashMap Text (NonEmpty Text)))

-- | The response's http status code.
describeSecretResponse_httpStatus :: Lens' DescribeSecretResponse Int

-- | Specifies the unique identifier of the version of the secret that you
--   want to retrieve. If you specify both this parameter and
--   <tt>VersionStage</tt>, the two parameters must refer to the same
--   secret version. If you don't specify either a <tt>VersionStage</tt> or
--   <tt>VersionId</tt> then the default is to perform the operation on the
--   version with the <tt>VersionStage</tt> value of <tt>AWSCURRENT</tt>.
--   
--   This value is typically a <a>UUID-type</a> value with 32 hexadecimal
--   digits.
getSecretValue_versionId :: Lens' GetSecretValue (Maybe Text)

-- | Specifies the secret version that you want to retrieve by the staging
--   label attached to the version.
--   
--   Staging labels are used to keep track of different versions during the
--   rotation process. If you specify both this parameter and
--   <tt>VersionId</tt>, the two parameters must refer to the same secret
--   version . If you don't specify either a <tt>VersionStage</tt> or
--   <tt>VersionId</tt>, then the default is to perform the operation on
--   the version with the <tt>VersionStage</tt> value of
--   <tt>AWSCURRENT</tt>.
getSecretValue_versionStage :: Lens' GetSecretValue (Maybe Text)

-- | Specifies the secret containing the version that you want to retrieve.
--   You can specify either the Amazon Resource Name (ARN) or the friendly
--   name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
getSecretValue_secretId :: Lens' GetSecretValue Text

-- | The date and time that this version of the secret was created.
getSecretValueResponse_createdDate :: Lens' GetSecretValueResponse (Maybe UTCTime)

-- | The decrypted part of the protected secret information that was
--   originally provided as binary data in the form of a byte array. The
--   response parameter represents the binary data as a
--   <a>base64-encoded</a> string.
--   
--   This parameter is not used if the secret is created by the Secrets
--   Manager console.
--   
--   If you store custom information in this field of the secret, then you
--   must code your Lambda rotation function to parse and interpret
--   whatever you store in the <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> fields.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
getSecretValueResponse_secretBinary :: Lens' GetSecretValueResponse (Maybe ByteString)

-- | A list of all of the staging labels currently attached to this version
--   of the secret.
getSecretValueResponse_versionStages :: Lens' GetSecretValueResponse (Maybe (NonEmpty Text))

-- | The ARN of the secret.
getSecretValueResponse_arn :: Lens' GetSecretValueResponse (Maybe Text)

-- | The friendly name of the secret.
getSecretValueResponse_name :: Lens' GetSecretValueResponse (Maybe Text)

-- | The unique identifier of this version of the secret.
getSecretValueResponse_versionId :: Lens' GetSecretValueResponse (Maybe Text)

-- | The decrypted part of the protected secret information that was
--   originally provided as a string.
--   
--   If you create this secret by using the Secrets Manager console then
--   only the <tt>SecretString</tt> parameter contains data. Secrets
--   Manager stores the information as a JSON structure of key/value pairs
--   that the Lambda rotation function knows how to parse.
--   
--   If you store custom information in the secret by using the
--   CreateSecret, UpdateSecret, or PutSecretValue API operations instead
--   of the Secrets Manager console, or by using the <b>Other secret
--   type</b> in the console, then you must code your Lambda rotation
--   function to parse and interpret those values.
getSecretValueResponse_secretString :: Lens' GetSecretValueResponse (Maybe Text)

-- | The response's http status code.
getSecretValueResponse_httpStatus :: Lens' GetSecretValueResponse Int

-- | The identifier for the secret that you want to remove tags from. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
untagResource_secretId :: Lens' UntagResource Text

-- | A list of tag key names to remove from the secret. You don't specify
--   the value. Both the key and its associated value are removed.
--   
--   This parameter to the API requires a JSON text string argument. For
--   information on how to format a JSON parameter for the various command
--   line tool environments, see <a>Using JSON for Parameters</a> in the
--   <i>CLI User Guide</i>.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The identifier for the secret that you want to attach tags to. You can
--   specify either the Amazon Resource Name (ARN) or the friendly name of
--   the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
tagResource_secretId :: Lens' TagResource Text

-- | The tags to attach to the secret. Each element in the list consists of
--   a <tt>Key</tt> and a <tt>Value</tt>.
--   
--   This parameter to the API requires a JSON text string argument. For
--   information on how to format a JSON parameter for the various command
--   line tool environments, see <a>Using JSON for Parameters</a> in the
--   <i>CLI User Guide</i>. For the CLI, you can also use the syntax:
--   <tt>--Tags Key="Key1",Value="Value1"
--   Key="Key2",Value="Value2"[,…]</tt>
tagResource_tags :: Lens' TagResource [Tag]

-- | (Optional) Specifies binary data that you want to encrypt and store in
--   the new version of the secret. To use this parameter in the
--   command-line tools, we recommend that you store your binary data in a
--   file and then use the appropriate technique for your tool to pass the
--   contents of the file as a parameter.
--   
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   This parameter is not available using the Secrets Manager console. It
--   can be accessed only by using the Amazon Web Services CLI or one of
--   the Amazon Web Services SDKs.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
createSecret_secretBinary :: Lens' CreateSecret (Maybe ByteString)

-- | (Optional) If set, the replication overwrites a secret with the same
--   name in the destination region.
createSecret_forceOverwriteReplicaSecret :: Lens' CreateSecret (Maybe Bool)

-- | (Optional) Specifies the ARN, Key ID, or alias of the Amazon Web
--   Services KMS customer master key (CMK) to be used to encrypt the
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> values in the versions
--   stored in this secret.
--   
--   You can specify any of the supported ways to identify a Amazon Web
--   Services KMS key ID. If you need to reference a CMK in a different
--   account, you can use only the key ARN or the alias ARN.
--   
--   If you don't specify this value, then Secrets Manager defaults to
--   using the Amazon Web Services account's default CMK (the one named
--   <tt>aws/secretsmanager</tt>). If a Amazon Web Services KMS CMK with
--   that name doesn't yet exist, then Secrets Manager creates it for you
--   automatically the first time it needs to encrypt a version's
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> fields.
--   
--   You can use the account default CMK to encrypt and decrypt only if you
--   call this operation using credentials from the same account that owns
--   the secret. If the secret resides in a different account, then you
--   must create a custom CMK and specify the ARN in this field.
createSecret_kmsKeyId :: Lens' CreateSecret (Maybe Text)

-- | (Optional) Specifies a list of user-defined tags that are attached to
--   the secret. Each tag is a "Key" and "Value" pair of strings. This
--   operation only appends tags to the existing list of tags. To remove
--   tags, you must use UntagResource.
--   
--   <ul>
--   <li>Secrets Manager tag key names are case sensitive. A tag with the
--   key "ABC" is a different tag from one with key "abc".</li>
--   <li>If you check tags in IAM policy <tt>Condition</tt> elements as
--   part of your security strategy, then adding or removing a tag can
--   change permissions. If the successful completion of this operation
--   would result in you losing your permissions for this secret, then this
--   operation is blocked and returns an <tt>Access Denied</tt> error.</li>
--   </ul>
--   
--   This parameter requires a JSON text string argument. For information
--   on how to format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   [{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
--   
--   The following basic restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of tags per secret—50</li>
--   <li>Maximum key length—127 Unicode characters in UTF-8</li>
--   <li>Maximum value length—255 Unicode characters in UTF-8</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Do not use the <tt>aws:</tt> prefix in your tag names or values
--   because Amazon Web Services reserves it for Amazon Web Services use.
--   You can't edit or delete tag names or values with this prefix. Tags
--   with this prefix do not count against your tags per secret limit.</li>
--   <li>If you use your tagging schema across multiple services and
--   resources, remember other services might have restrictions on allowed
--   characters. Generally allowed characters: letters, spaces, and numbers
--   representable in UTF-8, plus the following special characters: + - = .
--   _ : / @.</li>
--   </ul>
createSecret_tags :: Lens' CreateSecret (Maybe [Tag])

-- | (Optional) Specifies a user-provided description of the secret.
createSecret_description :: Lens' CreateSecret (Maybe Text)

-- | (Optional) Specifies text data that you want to encrypt and store in
--   this new version of the secret.
--   
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   If you create a secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the Lambda
--   rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   {"username":"bob","password":"abc123xyz456"}
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
createSecret_secretString :: Lens' CreateSecret (Maybe Text)

-- | (Optional) If you include <tt>SecretString</tt> or
--   <tt>SecretBinary</tt>, then an initial version is created as part of
--   the secret, and this parameter specifies a unique identifier for the
--   new version.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes it
--   as the value for this parameter in the request. If you don't use the
--   SDK and instead generate a raw HTTP request to the Secrets Manager
--   service endpoint, then you must generate a <tt>ClientRequestToken</tt>
--   yourself for the new version and include the value in the request.
--   
--   This value helps ensure idempotency. Secrets Manager uses this value
--   to prevent the accidental creation of duplicate versions if there are
--   failures and retries during a rotation. We recommend that you generate
--   a <a>UUID-type</a> value to ensure uniqueness of your versions within
--   the specified secret.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and the version
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are the same as
--   those in the request, then the request is ignored.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from those in the request, then the request fails because you cannot
--   modify an existing version. Instead, use PutSecretValue to create a
--   new version.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
createSecret_clientRequestToken :: Lens' CreateSecret (Maybe Text)

-- | (Optional) Add a list of regions to replicate secrets. Secrets Manager
--   replicates the KMSKeyID objects to the list of regions specified in
--   the parameter.
createSecret_addReplicaRegions :: Lens' CreateSecret (Maybe (NonEmpty ReplicaRegionType))

-- | Specifies the friendly name of the new secret.
--   
--   The secret name must be ASCII letters, digits, or the following
--   characters : /_+=.@-
--   
--   Do not end your secret name with a hyphen followed by six characters.
--   If you do so, you risk confusion and unexpected results when searching
--   for a secret by partial ARN. Secrets Manager automatically adds a
--   hyphen and six random characters at the end of the ARN.
createSecret_name :: Lens' CreateSecret Text

-- | Describes a list of replication status objects as <tt>InProgress</tt>,
--   <tt>Failed</tt> or <tt>InSync</tt>.
createSecretResponse_replicationStatus :: Lens' CreateSecretResponse (Maybe [ReplicationStatusType])

-- | The Amazon Resource Name (ARN) of the secret that you just created.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
createSecretResponse_arn :: Lens' CreateSecretResponse (Maybe Text)

-- | The friendly name of the secret that you just created.
createSecretResponse_name :: Lens' CreateSecretResponse (Maybe Text)

-- | The unique identifier associated with the version of the secret you
--   just created.
createSecretResponse_versionId :: Lens' CreateSecretResponse (Maybe Text)

-- | The response's http status code.
createSecretResponse_httpStatus :: Lens' CreateSecretResponse Int

-- | A string that includes characters that should not be included in the
--   generated password. The default is that all characters from the
--   included sets can be used.
getRandomPassword_excludeCharacters :: Lens' GetRandomPassword (Maybe Text)

-- | Specifies that the generated password should not include lowercase
--   letters. The default if you do not include this switch parameter is
--   that lowercase letters can be included.
getRandomPassword_excludeLowercase :: Lens' GetRandomPassword (Maybe Bool)

-- | Specifies that the generated password can include the space character.
--   The default if you do not include this switch parameter is that the
--   space character is not included.
getRandomPassword_includeSpace :: Lens' GetRandomPassword (Maybe Bool)

-- | A boolean value that specifies whether the generated password must
--   include at least one of every allowed character type. The default
--   value is <tt>True</tt> and the operation requires at least one of
--   every character type.
getRandomPassword_requireEachIncludedType :: Lens' GetRandomPassword (Maybe Bool)

-- | Specifies that the generated password should not include digits. The
--   default if you do not include this switch parameter is that digits can
--   be included.
getRandomPassword_excludeNumbers :: Lens' GetRandomPassword (Maybe Bool)

-- | The desired length of the generated password. The default value if you
--   do not include this parameter is 32 characters.
getRandomPassword_passwordLength :: Lens' GetRandomPassword (Maybe Natural)

-- | Specifies that the generated password should not include uppercase
--   letters. The default if you do not include this switch parameter is
--   that uppercase letters can be included.
getRandomPassword_excludeUppercase :: Lens' GetRandomPassword (Maybe Bool)

-- | Specifies that the generated password should not include punctuation
--   characters. The default if you do not include this switch parameter is
--   that punctuation characters can be included.
--   
--   The following are the punctuation characters that <i>can</i> be
--   included in the generated password if you don't explicitly exclude
--   them with <tt>ExcludeCharacters</tt> or <tt>ExcludePunctuation</tt>:
--   
--   <pre>
--   ! " # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \ ] ^ _ ` { | } ~
--   </pre>
getRandomPassword_excludePunctuation :: Lens' GetRandomPassword (Maybe Bool)

-- | A string with the generated password.
getRandomPasswordResponse_randomPassword :: Lens' GetRandomPasswordResponse (Maybe Text)

-- | The response's http status code.
getRandomPasswordResponse_httpStatus :: Lens' GetRandomPasswordResponse Int

-- | (Optional) If set, Secrets Manager replication overwrites a secret
--   with the same name in the destination region.
replicateSecretToRegions_forceOverwriteReplicaSecret :: Lens' ReplicateSecretToRegions (Maybe Bool)

-- | Use the <tt>Secret Id</tt> to replicate a secret to regions.
replicateSecretToRegions_secretId :: Lens' ReplicateSecretToRegions Text

-- | Add Regions to replicate the secret.
replicateSecretToRegions_addReplicaRegions :: Lens' ReplicateSecretToRegions (NonEmpty ReplicaRegionType)

-- | Describes the secret replication status as <tt>PENDING</tt>,
--   <tt>SUCCESS</tt> or <tt>FAIL</tt>.
replicateSecretToRegionsResponse_replicationStatus :: Lens' ReplicateSecretToRegionsResponse (Maybe [ReplicationStatusType])

-- | Replicate a secret based on the <tt>ReplicaRegionType</tt>&gt;
--   consisting of a Region(required) and a KMSKeyId (optional) which can
--   be the ARN, KeyID, or Alias.
replicateSecretToRegionsResponse_arn :: Lens' ReplicateSecretToRegionsResponse (Maybe Text)

-- | The response's http status code.
replicateSecretToRegionsResponse_httpStatus :: Lens' ReplicateSecretToRegionsResponse Int

-- | Response to <tt>StopReplicationToReplica</tt> of a secret, based on
--   the <tt>SecretId</tt>.
stopReplicationToReplica_secretId :: Lens' StopReplicationToReplica Text

-- | Response <tt>StopReplicationToReplica</tt> of a secret, based on the
--   <tt>ARN,</tt>.
stopReplicationToReplicaResponse_arn :: Lens' StopReplicationToReplicaResponse (Maybe Text)

-- | The response's http status code.
stopReplicationToReplicaResponse_httpStatus :: Lens' StopReplicationToReplicaResponse Int

-- | (Optional) Use this parameter in a request if you receive a
--   <tt>NextToken</tt> response in a previous request indicating there's
--   more output available. In a subsequent call, set it to the value of
--   the previous call <tt>NextToken</tt> response to indicate where the
--   output should continue from.
listSecrets_nextToken :: Lens' ListSecrets (Maybe Text)

-- | Lists secrets in the requested order.
listSecrets_sortOrder :: Lens' ListSecrets (Maybe SortOrderType)

-- | (Optional) Limits the number of results you want to include in the
--   response. If you don't include this parameter, it defaults to a value
--   that's specific to the operation. If additional items exist beyond the
--   maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (isn't null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that Secrets Manager might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
listSecrets_maxResults :: Lens' ListSecrets (Maybe Natural)

-- | Lists the secret request filters.
listSecrets_filters :: Lens' ListSecrets (Maybe [Filter])

-- | If present in the response, this value indicates that there's more
--   output available than included in the current response. This can occur
--   even when the response includes no values at all, such as when you ask
--   for a filtered view of a very long list. Use this value in the
--   <tt>NextToken</tt> request parameter in a subsequent call to the
--   operation to continue processing and get the next part of the output.
--   You should repeat this until the <tt>NextToken</tt> response element
--   comes back empty (as <tt>null</tt>).
listSecretsResponse_nextToken :: Lens' ListSecretsResponse (Maybe Text)

-- | A list of the secrets in the account.
listSecretsResponse_secretList :: Lens' ListSecretsResponse (Maybe [SecretListEntry])

-- | The response's http status code.
listSecretsResponse_httpStatus :: Lens' ListSecretsResponse Int

-- | (Optional) Specifies binary data that you want to encrypt and store in
--   the new version of the secret. To use this parameter in the
--   command-line tools, we recommend that you store your binary data in a
--   file and then use the appropriate technique for your tool to pass the
--   contents of the file as a parameter. Either <tt>SecretBinary</tt> or
--   <tt>SecretString</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   This parameter is not accessible if the secret using the Secrets
--   Manager console.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
putSecretValue_secretBinary :: Lens' PutSecretValue (Maybe ByteString)

-- | (Optional) Specifies a list of staging labels that are attached to
--   this version of the secret. These staging labels are used to track the
--   versions through the rotation process by the Lambda rotation function.
--   
--   A staging label must be unique to a single version of the secret. If
--   you specify a staging label that's already associated with a different
--   version of the same secret then that staging label is automatically
--   removed from the other version and attached to this version.
--   
--   If you do not specify a value for <tt>VersionStages</tt> then Secrets
--   Manager automatically moves the staging label <tt>AWSCURRENT</tt> to
--   this new version.
putSecretValue_versionStages :: Lens' PutSecretValue (Maybe (NonEmpty Text))

-- | (Optional) Specifies text data that you want to encrypt and store in
--   this new version of the secret. Either <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> must have a value, but not both. They cannot
--   both be empty.
--   
--   If you create this secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the
--   default Lambda rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>.
--   
--   For example:
--   
--   <pre>
--   [{"username":"bob"},{"password":"abc123xyz456"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
putSecretValue_secretString :: Lens' PutSecretValue (Maybe Text)

-- | (Optional) Specifies a unique identifier for the new version of the
--   secret.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request. If you don't use the SDK and instead generate a
--   raw HTTP request to the Secrets Manager service endpoint, then you
--   must generate a <tt>ClientRequestToken</tt> yourself for new versions
--   and include that value in the request.
--   
--   This value helps ensure idempotency. Secrets Manager uses this value
--   to prevent the accidental creation of duplicate versions if there are
--   failures and retries during the Lambda rotation function's processing.
--   We recommend that you generate a <a>UUID-type</a> value to ensure
--   uniqueness within the specified secret.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> values are the same as
--   those in the request then the request is ignored (the operation is
--   idempotent).</li>
--   <li>If a version with this value already exists and the version of the
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from those in the request then the request fails because you cannot
--   modify an existing secret version. You can only create new versions to
--   store new secret values.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
putSecretValue_clientRequestToken :: Lens' PutSecretValue (Maybe Text)

-- | Specifies the secret to which you want to add a new version. You can
--   specify either the Amazon Resource Name (ARN) or the friendly name of
--   the secret. The secret must already exist.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
putSecretValue_secretId :: Lens' PutSecretValue Text

-- | The list of staging labels that are currently attached to this version
--   of the secret. Staging labels are used to track a version as it
--   progresses through the secret rotation process.
putSecretValueResponse_versionStages :: Lens' PutSecretValueResponse (Maybe (NonEmpty Text))

-- | The Amazon Resource Name (ARN) for the secret for which you just
--   created a version.
putSecretValueResponse_arn :: Lens' PutSecretValueResponse (Maybe Text)

-- | The friendly name of the secret for which you just created or updated
--   a version.
putSecretValueResponse_name :: Lens' PutSecretValueResponse (Maybe Text)

-- | The unique identifier of the version of the secret you just created or
--   updated.
putSecretValueResponse_versionId :: Lens' PutSecretValueResponse (Maybe Text)

-- | The response's http status code.
putSecretValueResponse_httpStatus :: Lens' PutSecretValueResponse Int

-- | Specifies the secret version ID of the version that the staging label
--   is to be removed from. If the staging label you are trying to attach
--   to one version is already attached to a different version, then you
--   must include this parameter and specify the version that the label is
--   to be removed from. If the label is attached and you either do not
--   specify this parameter, or the version ID does not match, then the
--   operation fails.
updateSecretVersionStage_removeFromVersionId :: Lens' UpdateSecretVersionStage (Maybe Text)

-- | (Optional) The secret version ID that you want to add the staging
--   label. If you want to remove a label from a version, then do not
--   specify this parameter.
--   
--   If the staging label is already attached to a different version of the
--   secret, then you must also specify the <tt>RemoveFromVersionId</tt>
--   parameter.
updateSecretVersionStage_moveToVersionId :: Lens' UpdateSecretVersionStage (Maybe Text)

-- | Specifies the secret with the version with the list of staging labels
--   you want to modify. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
updateSecretVersionStage_secretId :: Lens' UpdateSecretVersionStage Text

-- | The staging label to add to this version.
updateSecretVersionStage_versionStage :: Lens' UpdateSecretVersionStage Text

-- | The ARN of the secret with the modified staging label.
updateSecretVersionStageResponse_arn :: Lens' UpdateSecretVersionStageResponse (Maybe Text)

-- | The friendly name of the secret with the modified staging label.
updateSecretVersionStageResponse_name :: Lens' UpdateSecretVersionStageResponse (Maybe Text)

-- | The response's http status code.
updateSecretVersionStageResponse_httpStatus :: Lens' UpdateSecretVersionStageResponse Int

-- | Specifies the secret that you want to delete the attached
--   resource-based policy for. You can specify either the Amazon Resource
--   Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
deleteResourcePolicy_secretId :: Lens' DeleteResourcePolicy Text

-- | The ARN of the secret that the resource-based policy was deleted for.
deleteResourcePolicyResponse_arn :: Lens' DeleteResourcePolicyResponse (Maybe Text)

-- | The friendly name of the secret that the resource-based policy was
--   deleted for.
deleteResourcePolicyResponse_name :: Lens' DeleteResourcePolicyResponse (Maybe Text)

-- | The response's http status code.
deleteResourcePolicyResponse_httpStatus :: Lens' DeleteResourcePolicyResponse Int

-- | (Optional) Use this parameter in a request if you receive a
--   <tt>NextToken</tt> response in a previous request indicating there's
--   more output available. In a subsequent call, set it to the value of
--   the previous call <tt>NextToken</tt> response to indicate where the
--   output should continue from.
listSecretVersionIds_nextToken :: Lens' ListSecretVersionIds (Maybe Text)

-- | (Optional) Limits the number of results you want to include in the
--   response. If you don't include this parameter, it defaults to a value
--   that's specific to the operation. If additional items exist beyond the
--   maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (isn't null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that Secrets Manager might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
listSecretVersionIds_maxResults :: Lens' ListSecretVersionIds (Maybe Natural)

-- | (Optional) Specifies that you want the results to include versions
--   that do not have any staging labels attached to them. Such versions
--   are considered deprecated and are subject to deletion by Secrets
--   Manager as needed.
listSecretVersionIds_includeDeprecated :: Lens' ListSecretVersionIds (Maybe Bool)

-- | The identifier for the secret containing the versions you want to
--   list. You can specify either the Amazon Resource Name (ARN) or the
--   friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
listSecretVersionIds_secretId :: Lens' ListSecretVersionIds Text

-- | If present in the response, this value indicates that there's more
--   output available than included in the current response. This can occur
--   even when the response includes no values at all, such as when you ask
--   for a filtered view of a very long list. Use this value in the
--   <tt>NextToken</tt> request parameter in a subsequent call to the
--   operation to continue processing and get the next part of the output.
--   You should repeat this until the <tt>NextToken</tt> response element
--   comes back empty (as <tt>null</tt>).
listSecretVersionIdsResponse_nextToken :: Lens' ListSecretVersionIdsResponse (Maybe Text)

-- | The list of the currently available versions of the specified secret.
listSecretVersionIdsResponse_versions :: Lens' ListSecretVersionIdsResponse (Maybe [SecretVersionsListEntry])

-- | The Amazon Resource Name (ARN) for the secret.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
listSecretVersionIdsResponse_arn :: Lens' ListSecretVersionIdsResponse (Maybe Text)

-- | The friendly name of the secret.
listSecretVersionIdsResponse_name :: Lens' ListSecretVersionIdsResponse (Maybe Text)

-- | The response's http status code.
listSecretVersionIdsResponse_httpStatus :: Lens' ListSecretVersionIdsResponse Int

-- | Filters your list of secrets by a specific key.
filter_key :: Lens' Filter (Maybe FilterNameStringType)

-- | Filters your list of secrets by a specific value.
--   
--   You can prefix your search value with an exclamation mark (<tt>!</tt>)
--   in order to perform negation filters.
filter_values :: Lens' Filter (Maybe (NonEmpty Text))

-- | Can be an <tt>ARN</tt>, <tt>Key ID</tt>, or <tt>Alias</tt>.
replicaRegionType_kmsKeyId :: Lens' ReplicaRegionType (Maybe Text)

-- | Describes a single instance of Region objects.
replicaRegionType_region :: Lens' ReplicaRegionType (Maybe Text)

-- | Status message such as "/Secret with this name already exists in this
--   region/".
replicationStatusType_statusMessage :: Lens' ReplicationStatusType (Maybe Text)

-- | The status can be <tt>InProgress</tt>, <tt>Failed</tt>, or
--   <tt>InSync</tt>.
replicationStatusType_status :: Lens' ReplicationStatusType (Maybe StatusType)

-- | Can be an <tt>ARN</tt>, <tt>Key ID</tt>, or <tt>Alias</tt>.
replicationStatusType_kmsKeyId :: Lens' ReplicationStatusType (Maybe Text)

-- | The date that you last accessed the secret in the Region.
replicationStatusType_lastAccessedDate :: Lens' ReplicationStatusType (Maybe UTCTime)

-- | The Region where replication occurs.
replicationStatusType_region :: Lens' ReplicationStatusType (Maybe Text)

-- | Specifies the number of days between automatic scheduled rotations of
--   the secret.
--   
--   Secrets Manager schedules the next rotation when the previous one is
--   complete. Secrets Manager schedules the date by adding the rotation
--   interval (number of days) to the actual date of the last rotation. The
--   service chooses the hour within that 24-hour date window randomly. The
--   minute is also chosen somewhat randomly, but weighted towards the top
--   of the hour and influenced by a variety of factors that help
--   distribute load.
rotationRulesType_automaticallyAfterDays :: Lens' RotationRulesType (Maybe Natural)

-- | The date and time when a secret was created.
secretListEntry_createdDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | Returns the name of the service that created the secret.
secretListEntry_owningService :: Lens' SecretListEntry (Maybe Text)

-- | A list of all of the currently assigned <tt>SecretVersionStage</tt>
--   staging labels and the <tt>SecretVersionId</tt> attached to each one.
--   Staging labels are used to keep track of the different versions during
--   the rotation process.
--   
--   A version that does not have any <tt>SecretVersionStage</tt> is
--   considered deprecated and subject to deletion. Such versions are not
--   included in this list.
secretListEntry_secretVersionsToStages :: Lens' SecretListEntry (Maybe (HashMap Text (NonEmpty Text)))

-- | The most recent date and time that the Secrets Manager rotation
--   process was successfully completed. This value is null if the secret
--   hasn't ever rotated.
secretListEntry_lastRotatedDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the secret.
--   
--   For more information about ARNs in Secrets Manager, see <a>Policy
--   Resources</a> in the <i>Amazon Web Services Secrets Manager User
--   Guide</i>.
secretListEntry_arn :: Lens' SecretListEntry (Maybe Text)

-- | The ARN or alias of the Amazon Web Services KMS customer master key
--   (CMK) used to encrypt the <tt>SecretString</tt> and
--   <tt>SecretBinary</tt> fields in each version of the secret. If you
--   don't provide a key, then Secrets Manager defaults to encrypting the
--   secret fields with the default KMS CMK, the key named
--   <tt>awssecretsmanager</tt>, for this account.
secretListEntry_kmsKeyId :: Lens' SecretListEntry (Maybe Text)

-- | The friendly name of the secret. You can use forward slashes in the
--   name to represent a path hierarchy. For example,
--   <tt>/prod/databases/dbserver1</tt> could represent the secret for a
--   server named <tt>dbserver1</tt> in the folder <tt>databases</tt> in
--   the folder <tt>prod</tt>.
secretListEntry_name :: Lens' SecretListEntry (Maybe Text)

-- | The Region where Secrets Manager originated the secret.
secretListEntry_primaryRegion :: Lens' SecretListEntry (Maybe Text)

-- | The last date and time that this secret was modified in any way.
secretListEntry_lastChangedDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | The date and time the deletion of the secret occurred. Not present on
--   active secrets. The secret can be recovered until the number of days
--   in the recovery window has passed, as specified in the
--   <tt>RecoveryWindowInDays</tt> parameter of the DeleteSecret operation.
secretListEntry_deletedDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | The list of user-defined tags associated with the secret. To add tags
--   to a secret, use TagResource. To remove tags, use UntagResource.
secretListEntry_tags :: Lens' SecretListEntry (Maybe [Tag])

-- | Indicates whether automatic, scheduled rotation is enabled for this
--   secret.
secretListEntry_rotationEnabled :: Lens' SecretListEntry (Maybe Bool)

-- | A structure that defines the rotation configuration for the secret.
secretListEntry_rotationRules :: Lens' SecretListEntry (Maybe RotationRulesType)

-- | The user-provided description of the secret.
secretListEntry_description :: Lens' SecretListEntry (Maybe Text)

-- | The ARN of an Amazon Web Services Lambda function invoked by Secrets
--   Manager to rotate and expire the secret either automatically per the
--   schedule or manually by a call to RotateSecret.
secretListEntry_rotationLambdaARN :: Lens' SecretListEntry (Maybe Text)

-- | The last date that this secret was accessed. This value is truncated
--   to midnight of the date and therefore shows only the date, not the
--   time.
secretListEntry_lastAccessedDate :: Lens' SecretListEntry (Maybe UTCTime)

-- | The date and time this version of the secret was created.
secretVersionsListEntry_createdDate :: Lens' SecretVersionsListEntry (Maybe UTCTime)

-- | The KMS keys used to encrypt the secret version.
secretVersionsListEntry_kmsKeyIds :: Lens' SecretVersionsListEntry (Maybe [Text])

-- | An array of staging labels that are currently associated with this
--   version of the secret.
secretVersionsListEntry_versionStages :: Lens' SecretVersionsListEntry (Maybe (NonEmpty Text))

-- | The unique version identifier of this version of the secret.
secretVersionsListEntry_versionId :: Lens' SecretVersionsListEntry (Maybe Text)

-- | The date that this version of the secret was last accessed. Note that
--   the resolution of this field is at the date level and does not include
--   the time.
secretVersionsListEntry_lastAccessedDate :: Lens' SecretVersionsListEntry (Maybe UTCTime)

-- | The key identifier, or name, of the tag.
tag_key :: Lens' Tag (Maybe Text)

-- | The string value associated with the key of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | Checks the name of the policy.
validationErrorsEntry_checkName :: Lens' ValidationErrorsEntry (Maybe Text)

-- | Displays error messages if validation encounters problems during
--   validation of the resource policy.
validationErrorsEntry_errorMessage :: Lens' ValidationErrorsEntry (Maybe Text)


module Network.AWS.SecretsManager.Waiters


-- | Derived from API version <tt>2017-10-17</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Web Services Secrets Manager
--   
--   Amazon Web Services Secrets Manager provides a service to enable you
--   to store, manage, and retrieve, secrets.
--   
--   This guide provides descriptions of the Secrets Manager API. For more
--   information about using this service, see the <a>Amazon Web Services
--   Secrets Manager User Guide</a>.
--   
--   <b>API Version</b>
--   
--   This version of the Secrets Manager API Reference documents the
--   Secrets Manager API version 2017-10-17.
--   
--   As an alternative to using the API, you can use one of the Amazon Web
--   Services SDKs, which consist of libraries and sample code for various
--   programming languages and platforms such as Java, Ruby, .NET, iOS, and
--   Android. The SDKs provide a convenient way to create programmatic
--   access to Amazon Web Services Secrets Manager. For example, the SDKs
--   provide cryptographically signing requests, managing errors, and
--   retrying requests automatically. For more information about the Amazon
--   Web Services SDKs, including downloading and installing them, see
--   <a>Tools for Amazon Web Services</a>.
--   
--   We recommend you use the Amazon Web Services SDKs to make programmatic
--   API calls to Secrets Manager. However, you also can use the Secrets
--   Manager HTTP Query API to make direct calls to the Secrets Manager web
--   service. To learn more about the Secrets Manager HTTP Query API, see
--   <a>Making Query Requests</a> in the <i>Amazon Web Services Secrets
--   Manager User Guide</i>.
--   
--   Secrets Manager API supports GET and POST requests for all actions,
--   and doesn't require you to use GET for some actions and POST for
--   others. However, GET requests are subject to the limitation size of a
--   URL. Therefore, for operations that require larger sizes, use a POST
--   request.
--   
--   <b>Support and Feedback for Amazon Web Services Secrets Manager</b>
--   
--   We welcome your feedback. Send your comments to
--   <a>awssecretsmanager-feedback@amazon.com</a>, or post your feedback
--   and questions in the <a>Amazon Web Services Secrets Manager Discussion
--   Forum</a>. For more information about the Amazon Web Services
--   Discussion Forums, see <a>Forums Help</a>.
--   
--   <b>How examples are presented</b>
--   
--   The JSON that Amazon Web Services Secrets Manager expects as your
--   request parameters and the service returns as a response to HTTP query
--   requests contain single, long strings without line breaks or white
--   space formatting. The JSON shown in the examples displays the code
--   formatted with both line breaks and white space to improve
--   readability. When example input parameters can also cause long strings
--   extending beyond the screen, you can insert line breaks to enhance
--   readability. You should always submit the input as a single JSON text
--   string.
--   
--   <b>Logging API Requests</b>
--   
--   Amazon Web Services Secrets Manager supports Amazon Web Services
--   CloudTrail, a service that records Amazon Web Services API calls for
--   your Amazon Web Services account and delivers log files to an Amazon
--   S3 bucket. By using information that's collected by Amazon Web
--   Services CloudTrail, you can determine the requests successfully made
--   to Secrets Manager, who made the request, when it was made, and so on.
--   For more about Amazon Web Services Secrets Manager and support for
--   Amazon Web Services CloudTrail, see <a>Logging Amazon Web Services
--   Secrets Manager Events with Amazon Web Services CloudTrail</a> in the
--   <i>Amazon Web Services Secrets Manager User Guide</i>. To learn more
--   about CloudTrail, including enabling it and find your log files, see
--   the <a>Amazon Web Services CloudTrail User Guide</a>.
module Network.AWS.SecretsManager

-- | API version <tt>2017-10-17</tt> of the Amazon Secrets Manager SDK
--   configuration.
defaultService :: Service

-- | Secrets Manager can't encrypt the protected secret text using the
--   provided KMS key. Check that the customer master key (CMK) is
--   available, enabled, and not in an invalid state. For more information,
--   see <a>How Key State Affects Use of a Customer Master Key</a>.
_EncryptionFailure :: AsError a => Getting (First ServiceError) a ServiceError

-- | You provided a resource-based policy with syntax errors.
_MalformedPolicyDocumentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The BlockPublicPolicy parameter is set to true and the resource policy
--   did not prevent broad access to the secret.
_PublicPolicyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Secrets Manager can't decrypt the protected secret text using the
--   provided KMS key.
_DecryptionFailure :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because you did not complete all the prerequisite
--   steps.
_PreconditionNotMetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You provided an invalid <tt>NextToken</tt> value.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You provided an invalid value for a parameter.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You provided a parameter value that is not valid for the current state
--   of the resource.
--   
--   Possible causes:
--   
--   <ul>
--   <li>You tried to perform the operation on a secret that's currently
--   marked deleted.</li>
--   <li>You tried to enable rotation on a secret that doesn't already have
--   a Lambda function ARN configured and you didn't include such an ARN as
--   a parameter in this call.</li>
--   </ul>
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request failed because it would exceed one of the Secrets Manager
--   internal limits.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | We can't find the resource that you asked for.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource with the ID you requested already exists.
_ResourceExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An error occurred on the server side.
_InternalServiceError :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDeleteSecret</a> smart constructor.
data DeleteSecret
DeleteSecret' :: Maybe Integer -> Maybe Bool -> Text -> DeleteSecret

-- | Create a value of <a>DeleteSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recoveryWindowInDays:DeleteSecret'</a>,
--   <a>deleteSecret_recoveryWindowInDays</a> - (Optional) Specifies the
--   number of days that Secrets Manager waits before Secrets Manager can
--   delete the secret. You can't use both this parameter and the
--   <tt>ForceDeleteWithoutRecovery</tt> parameter in the same API call.
--   
--   This value can range from 7 to 30 days with a default value of 30.
--   
--   <a>$sel:forceDeleteWithoutRecovery:DeleteSecret'</a>,
--   <a>deleteSecret_forceDeleteWithoutRecovery</a> - (Optional) Specifies
--   that the secret is to be deleted without any recovery window. You
--   can't use both this parameter and the <tt>RecoveryWindowInDays</tt>
--   parameter in the same API call.
--   
--   An asynchronous background process performs the actual deletion, so
--   there can be a short delay before the operation completes. If you
--   write code to delete and then immediately recreate a secret with the
--   same name, ensure that your code includes appropriate back off and
--   retry logic.
--   
--   Use this parameter with caution. This parameter causes the operation
--   to skip the normal waiting period before the permanent deletion that
--   Amazon Web Services would normally impose with the
--   <tt>RecoveryWindowInDays</tt> parameter. If you delete a secret with
--   the <tt>ForceDeleteWithouRecovery</tt> parameter, then you have no
--   opportunity to recover the secret. You lose the secret permanently.
--   
--   If you use this parameter and include a previously deleted or
--   nonexistent secret, the operation does not return the error
--   <tt>ResourceNotFoundException</tt> in order to correctly handle
--   retries.
--   
--   <a>$sel:secretId:DeleteSecret'</a>, <a>deleteSecret_secretId</a> -
--   Specifies the secret to delete. You can specify either the Amazon
--   Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newDeleteSecret :: Text -> DeleteSecret

-- | <i>See:</i> <a>newDeleteSecretResponse</a> smart constructor.
data DeleteSecretResponse
DeleteSecretResponse' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Int -> DeleteSecretResponse

-- | Create a value of <a>DeleteSecretResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteSecretResponse'</a>, <a>deleteSecretResponse_arn</a>
--   - The ARN of the secret that is now scheduled for deletion.
--   
--   <a>$sel:name:DeleteSecretResponse'</a>,
--   <a>deleteSecretResponse_name</a> - The friendly name of the secret
--   currently scheduled for deletion.
--   
--   <a>$sel:deletionDate:DeleteSecretResponse'</a>,
--   <a>deleteSecretResponse_deletionDate</a> - The date and time after
--   which this secret can be deleted by Secrets Manager and can no longer
--   be restored. This value is the date and time of the delete request
--   plus the number of days specified in <tt>RecoveryWindowInDays</tt>.
--   
--   <a>$sel:httpStatus:DeleteSecretResponse'</a>,
--   <a>deleteSecretResponse_httpStatus</a> - The response's http status
--   code.
newDeleteSecretResponse :: Int -> DeleteSecretResponse

-- | <i>See:</i> <a>newUpdateSecret</a> smart constructor.
data UpdateSecret
UpdateSecret' :: Maybe (Sensitive Base64) -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Text -> Text -> UpdateSecret

-- | Create a value of <a>UpdateSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretBinary:UpdateSecret'</a>,
--   <a>updateSecret_secretBinary</a> - (Optional) Specifies updated binary
--   data that you want to encrypt and store in the new version of the
--   secret. To use this parameter in the command-line tools, we recommend
--   that you store your binary data in a file and then use the appropriate
--   technique for your tool to pass the contents of the file as a
--   parameter. Either <tt>SecretBinary</tt> or <tt>SecretString</tt> must
--   have a value, but not both. They cannot both be empty.
--   
--   This parameter is not accessible using the Secrets Manager console.--
--   -- <i>Note:</i> This <tt>Lens</tt> automatically encodes and decodes
--   Base64 data. -- The underlying isomorphism will encode to Base64
--   representation during -- serialisation, and decode from Base64
--   representation during deserialisation. -- This <tt>Lens</tt> accepts
--   and returns only raw unencoded data.
--   
--   <a>$sel:kmsKeyId:UpdateSecret'</a>, <a>updateSecret_kmsKeyId</a> -
--   (Optional) Specifies an updated ARN or alias of the Amazon Web
--   Services KMS customer master key (CMK) to be used to encrypt the
--   protected text in new versions of this secret.
--   
--   You can only use the account's default CMK to encrypt and decrypt if
--   you call this operation using credentials from the same account that
--   owns the secret. If the secret is in a different account, then you
--   must create a custom CMK and provide the ARN of that CMK in this
--   field. The user making the call must have permissions to both the
--   secret and the CMK in their respective accounts.
--   
--   <a>$sel:description:UpdateSecret'</a>, <a>updateSecret_description</a>
--   - (Optional) Specifies an updated user-provided description of the
--   secret.
--   
--   <a>$sel:secretString:UpdateSecret'</a>,
--   <a>updateSecret_secretString</a> - (Optional) Specifies updated text
--   data that you want to encrypt and store in this new version of the
--   secret. Either <tt>SecretBinary</tt> or <tt>SecretString</tt> must
--   have a value, but not both. They cannot both be empty.
--   
--   If you create this secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the
--   default Lambda rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   [{"username":"bob"},{"password":"abc123xyz456"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text. You can also 'escape' the
--   double quote character in the embedded JSON text by prefacing each
--   with a backslash. For example, the following string is surrounded by
--   double-quotes. All of the embedded double quotes are escaped:
--   
--   <pre>
--   "[{\"username\":\"bob\"},{\"password\":\"abc123xyz456\"}]"
--   </pre>
--   
--   <a>$sel:clientRequestToken:UpdateSecret'</a>,
--   <a>updateSecret_clientRequestToken</a> - (Optional) If you want to add
--   a new version to the secret, this parameter specifies a unique
--   identifier for the new version that helps ensure idempotency.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request. If you don't use the SDK and instead generate a
--   raw HTTP request to the Secrets Manager service endpoint, then you
--   must generate a <tt>ClientRequestToken</tt> yourself for new versions
--   and include that value in the request.
--   
--   You typically only need to interact with this value if you implement
--   your own retry logic and want to ensure that a given secret is not
--   created twice. We recommend that you generate a <a>UUID-type</a> value
--   to ensure uniqueness within the specified secret.
--   
--   Secrets Manager uses this value to prevent the accidental creation of
--   duplicate versions if there are failures and retries during the Lambda
--   rotation function's processing.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are the same as
--   those in the request then the request is ignored (the operation is
--   idempotent).</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from the request then an error occurs because you cannot modify an
--   existing secret value.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
--   
--   <a>$sel:secretId:UpdateSecret'</a>, <a>updateSecret_secretId</a> -
--   Specifies the secret that you want to modify or to which you want to
--   add a new version. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newUpdateSecret :: Text -> UpdateSecret

-- | <i>See:</i> <a>newUpdateSecretResponse</a> smart constructor.
data UpdateSecretResponse
UpdateSecretResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateSecretResponse

-- | Create a value of <a>UpdateSecretResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UpdateSecretResponse'</a>, <a>updateSecretResponse_arn</a>
--   - The ARN of the secret that was updated.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
--   
--   <a>$sel:name:UpdateSecretResponse'</a>,
--   <a>updateSecretResponse_name</a> - The friendly name of the secret
--   that was updated.
--   
--   <a>$sel:versionId:UpdateSecretResponse'</a>,
--   <a>updateSecretResponse_versionId</a> - If a new version of the secret
--   was created by this operation, then <tt>VersionId</tt> contains the
--   unique identifier of the new version.
--   
--   <a>$sel:httpStatus:UpdateSecretResponse'</a>,
--   <a>updateSecretResponse_httpStatus</a> - The response's http status
--   code.
newUpdateSecretResponse :: Int -> UpdateSecretResponse

-- | <i>See:</i> <a>newRotateSecret</a> smart constructor.
data RotateSecret
RotateSecret' :: Maybe RotationRulesType -> Maybe Text -> Maybe Text -> Text -> RotateSecret

-- | Create a value of <a>RotateSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rotationRules:RotateSecret'</a>,
--   <a>rotateSecret_rotationRules</a> - A structure that defines the
--   rotation configuration for this secret.
--   
--   <a>$sel:rotationLambdaARN:RotateSecret'</a>,
--   <a>rotateSecret_rotationLambdaARN</a> - (Optional) Specifies the ARN
--   of the Lambda function that can rotate the secret.
--   
--   <a>$sel:clientRequestToken:RotateSecret'</a>,
--   <a>rotateSecret_clientRequestToken</a> - (Optional) Specifies a unique
--   identifier for the new version of the secret that helps ensure
--   idempotency.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request for this parameter. If you don't use the SDK and
--   instead generate a raw HTTP request to the Secrets Manager service
--   endpoint, then you must generate a <tt>ClientRequestToken</tt>
--   yourself for new versions and include that value in the request.
--   
--   You only need to specify your own value if you implement your own
--   retry logic and want to ensure that a given secret is not created
--   twice. We recommend that you generate a <a>UUID-type</a> value to
--   ensure uniqueness within the specified secret.
--   
--   Secrets Manager uses this value to prevent the accidental creation of
--   duplicate versions if there are failures and retries during the
--   function's processing. This value becomes the <tt>VersionId</tt> of
--   the new version.
--   
--   <a>$sel:secretId:RotateSecret'</a>, <a>rotateSecret_secretId</a> -
--   Specifies the secret that you want to rotate. You can specify either
--   the Amazon Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newRotateSecret :: Text -> RotateSecret

-- | <i>See:</i> <a>newRotateSecretResponse</a> smart constructor.
data RotateSecretResponse
RotateSecretResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> RotateSecretResponse

-- | Create a value of <a>RotateSecretResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RotateSecretResponse'</a>, <a>rotateSecretResponse_arn</a>
--   - The ARN of the secret.
--   
--   <a>$sel:name:RotateSecretResponse'</a>,
--   <a>rotateSecretResponse_name</a> - The friendly name of the secret.
--   
--   <a>$sel:versionId:RotateSecretResponse'</a>,
--   <a>rotateSecretResponse_versionId</a> - The ID of the new version of
--   the secret created by the rotation started by this request.
--   
--   <a>$sel:httpStatus:RotateSecretResponse'</a>,
--   <a>rotateSecretResponse_httpStatus</a> - The response's http status
--   code.
newRotateSecretResponse :: Int -> RotateSecretResponse

-- | <i>See:</i> <a>newRemoveRegionsFromReplication</a> smart constructor.
data RemoveRegionsFromReplication
RemoveRegionsFromReplication' :: Text -> NonEmpty Text -> RemoveRegionsFromReplication

-- | Create a value of <a>RemoveRegionsFromReplication</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:RemoveRegionsFromReplication'</a>,
--   <a>removeRegionsFromReplication_secretId</a> - Remove a secret by
--   <tt>SecretId</tt> from replica Regions.
--   
--   <a>$sel:removeReplicaRegions:RemoveRegionsFromReplication'</a>,
--   <a>removeRegionsFromReplication_removeReplicaRegions</a> - Remove
--   replication from specific Regions.
newRemoveRegionsFromReplication :: Text -> NonEmpty Text -> RemoveRegionsFromReplication

-- | <i>See:</i> <a>newRemoveRegionsFromReplicationResponse</a> smart
--   constructor.
data RemoveRegionsFromReplicationResponse
RemoveRegionsFromReplicationResponse' :: Maybe [ReplicationStatusType] -> Maybe Text -> Int -> RemoveRegionsFromReplicationResponse

-- | Create a value of <a>RemoveRegionsFromReplicationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationStatus:RemoveRegionsFromReplicationResponse'</a>,
--   <a>removeRegionsFromReplicationResponse_replicationStatus</a> -
--   Describes the remaining replication status after you remove regions
--   from the replication list.
--   
--   <a>$sel:arn:RemoveRegionsFromReplicationResponse'</a>,
--   <a>removeRegionsFromReplicationResponse_arn</a> - The secret
--   <tt>ARN</tt> removed from replication regions.
--   
--   <a>$sel:httpStatus:RemoveRegionsFromReplicationResponse'</a>,
--   <a>removeRegionsFromReplicationResponse_httpStatus</a> - The
--   response's http status code.
newRemoveRegionsFromReplicationResponse :: Int -> RemoveRegionsFromReplicationResponse

-- | <i>See:</i> <a>newGetResourcePolicy</a> smart constructor.
data GetResourcePolicy
GetResourcePolicy' :: Text -> GetResourcePolicy

-- | Create a value of <a>GetResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:GetResourcePolicy'</a>,
--   <a>getResourcePolicy_secretId</a> - Specifies the secret that you want
--   to retrieve the attached resource-based policy for. You can specify
--   either the Amazon Resource Name (ARN) or the friendly name of the
--   secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newGetResourcePolicy :: Text -> GetResourcePolicy

-- | <i>See:</i> <a>newGetResourcePolicyResponse</a> smart constructor.
data GetResourcePolicyResponse
GetResourcePolicyResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetResourcePolicyResponse

-- | Create a value of <a>GetResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_arn</a> - The ARN of the secret that the
--   resource-based policy was retrieved for.
--   
--   <a>$sel:resourcePolicy:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_resourcePolicy</a> - A JSON-formatted
--   string that describes the permissions that are associated with the
--   attached secret. These permissions are combined with any permissions
--   that are associated with the user or role that attempts to access this
--   secret. The combined permissions specify who can access the secret and
--   what actions they can perform. For more information, see
--   <a>Authentication and Access Control for Amazon Web Services Secrets
--   Manager</a> in the <i>Amazon Web Services Secrets Manager User
--   Guide</i>.
--   
--   <a>$sel:name:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_name</a> - The friendly name of the
--   secret that the resource-based policy was retrieved for.
--   
--   <a>$sel:httpStatus:GetResourcePolicyResponse'</a>,
--   <a>getResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetResourcePolicyResponse :: Int -> GetResourcePolicyResponse

-- | <i>See:</i> <a>newValidateResourcePolicy</a> smart constructor.
data ValidateResourcePolicy
ValidateResourcePolicy' :: Maybe Text -> Text -> ValidateResourcePolicy

-- | Create a value of <a>ValidateResourcePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:ValidateResourcePolicy'</a>,
--   <a>validateResourcePolicy_secretId</a> - (Optional) The identifier of
--   the secret with the resource-based policy you want to validate. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
--   
--   <a>$sel:resourcePolicy:ValidateResourcePolicy'</a>,
--   <a>validateResourcePolicy_resourcePolicy</a> - A JSON-formatted string
--   constructed according to the grammar and syntax for an Amazon Web
--   Services resource-based policy. The policy in the string identifies
--   who can access or manage this secret and its versions. For information
--   on how to format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>.publi
newValidateResourcePolicy :: Text -> ValidateResourcePolicy

-- | <i>See:</i> <a>newValidateResourcePolicyResponse</a> smart
--   constructor.
data ValidateResourcePolicyResponse
ValidateResourcePolicyResponse' :: Maybe Bool -> Maybe [ValidationErrorsEntry] -> Int -> ValidateResourcePolicyResponse

-- | Create a value of <a>ValidateResourcePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:policyValidationPassed:ValidateResourcePolicyResponse'</a>,
--   <a>validateResourcePolicyResponse_policyValidationPassed</a> - Returns
--   a message stating that your Reource Policy passed validation.
--   
--   <a>$sel:validationErrors:ValidateResourcePolicyResponse'</a>,
--   <a>validateResourcePolicyResponse_validationErrors</a> - Returns an
--   error message if your policy doesn't pass validatation.
--   
--   <a>$sel:httpStatus:ValidateResourcePolicyResponse'</a>,
--   <a>validateResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newValidateResourcePolicyResponse :: Int -> ValidateResourcePolicyResponse

-- | <i>See:</i> <a>newCancelRotateSecret</a> smart constructor.
data CancelRotateSecret
CancelRotateSecret' :: Text -> CancelRotateSecret

-- | Create a value of <a>CancelRotateSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:CancelRotateSecret'</a>,
--   <a>cancelRotateSecret_secretId</a> - Specifies the secret to cancel a
--   rotation request. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newCancelRotateSecret :: Text -> CancelRotateSecret

-- | <i>See:</i> <a>newCancelRotateSecretResponse</a> smart constructor.
data CancelRotateSecretResponse
CancelRotateSecretResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CancelRotateSecretResponse

-- | Create a value of <a>CancelRotateSecretResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:CancelRotateSecretResponse'</a>,
--   <a>cancelRotateSecretResponse_arn</a> - The ARN of the secret for
--   which rotation was canceled.
--   
--   <a>$sel:name:CancelRotateSecretResponse'</a>,
--   <a>cancelRotateSecretResponse_name</a> - The friendly name of the
--   secret for which rotation was canceled.
--   
--   <a>$sel:versionId:CancelRotateSecretResponse'</a>,
--   <a>cancelRotateSecretResponse_versionId</a> - The unique identifier of
--   the version of the secret created during the rotation. This version
--   might not be complete, and should be evaluated for possible deletion.
--   At the very least, you should remove the <tt>VersionStage</tt> value
--   <tt>AWSPENDING</tt> to enable this version to be deleted. Failing to
--   clean up a cancelled rotation can block you from successfully starting
--   future rotations.
--   
--   <a>$sel:httpStatus:CancelRotateSecretResponse'</a>,
--   <a>cancelRotateSecretResponse_httpStatus</a> - The response's http
--   status code.
newCancelRotateSecretResponse :: Int -> CancelRotateSecretResponse

-- | <i>See:</i> <a>newRestoreSecret</a> smart constructor.
data RestoreSecret
RestoreSecret' :: Text -> RestoreSecret

-- | Create a value of <a>RestoreSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:RestoreSecret'</a>, <a>restoreSecret_secretId</a> -
--   Specifies the secret that you want to restore from a previously
--   scheduled deletion. You can specify either the Amazon Resource Name
--   (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newRestoreSecret :: Text -> RestoreSecret

-- | <i>See:</i> <a>newRestoreSecretResponse</a> smart constructor.
data RestoreSecretResponse
RestoreSecretResponse' :: Maybe Text -> Maybe Text -> Int -> RestoreSecretResponse

-- | Create a value of <a>RestoreSecretResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:RestoreSecretResponse'</a>,
--   <a>restoreSecretResponse_arn</a> - The ARN of the secret that was
--   restored.
--   
--   <a>$sel:name:RestoreSecretResponse'</a>,
--   <a>restoreSecretResponse_name</a> - The friendly name of the secret
--   that was restored.
--   
--   <a>$sel:httpStatus:RestoreSecretResponse'</a>,
--   <a>restoreSecretResponse_httpStatus</a> - The response's http status
--   code.
newRestoreSecretResponse :: Int -> RestoreSecretResponse

-- | <i>See:</i> <a>newPutResourcePolicy</a> smart constructor.
data PutResourcePolicy
PutResourcePolicy' :: Maybe Bool -> Text -> Text -> PutResourcePolicy

-- | Create a value of <a>PutResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockPublicPolicy:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_blockPublicPolicy</a> - (Optional) If you set the
--   parameter, <tt>BlockPublicPolicy</tt> to true, then you block
--   resource-based policies that allow broad access to the secret.
--   
--   <a>$sel:secretId:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_secretId</a> - Specifies the secret that you want
--   to attach the resource-based policy. You can specify either the ARN or
--   the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
--   
--   <a>$sel:resourcePolicy:PutResourcePolicy'</a>,
--   <a>putResourcePolicy_resourcePolicy</a> - A JSON-formatted string
--   constructed according to the grammar and syntax for an Amazon Web
--   Services resource-based policy. The policy in the string identifies
--   who can access or manage this secret and its versions. For information
--   on how to format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>.
newPutResourcePolicy :: Text -> Text -> PutResourcePolicy

-- | <i>See:</i> <a>newPutResourcePolicyResponse</a> smart constructor.
data PutResourcePolicyResponse
PutResourcePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> PutResourcePolicyResponse

-- | Create a value of <a>PutResourcePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_arn</a> - The ARN of the secret retrieved
--   by the resource-based policy.
--   
--   <a>$sel:name:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_name</a> - The friendly name of the
--   secret retrieved by the resource-based policy.
--   
--   <a>$sel:httpStatus:PutResourcePolicyResponse'</a>,
--   <a>putResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutResourcePolicyResponse :: Int -> PutResourcePolicyResponse

-- | <i>See:</i> <a>newDescribeSecret</a> smart constructor.
data DescribeSecret
DescribeSecret' :: Text -> DescribeSecret

-- | Create a value of <a>DescribeSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:DescribeSecret'</a>, <a>describeSecret_secretId</a> -
--   The identifier of the secret whose details you want to retrieve. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newDescribeSecret :: Text -> DescribeSecret

-- | <i>See:</i> <a>newDescribeSecretResponse</a> smart constructor.
data DescribeSecretResponse
DescribeSecretResponse' :: Maybe POSIX -> Maybe Text -> Maybe POSIX -> Maybe [ReplicationStatusType] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe [Tag] -> Maybe Bool -> Maybe RotationRulesType -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe (HashMap Text (NonEmpty Text)) -> Int -> DescribeSecretResponse

-- | Create a value of <a>DescribeSecretResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_createdDate</a> - The date you created the
--   secret.
--   
--   <a>$sel:owningService:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_owningService</a> - Returns the name of the
--   service that created this secret.
--   
--   <a>$sel:lastRotatedDate:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_lastRotatedDate</a> - The last date and time
--   that the rotation process for this secret was invoked.
--   
--   The most recent date and time that the Secrets Manager rotation
--   process successfully completed. If the secret doesn't rotate, Secrets
--   Manager returns a null value.
--   
--   <a>$sel:replicationStatus:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_replicationStatus</a> - Describes a list of
--   replication status objects as <tt>InProgress</tt>, <tt>Failed</tt> or
--   <tt>InSync</tt>.<tt>P</tt>
--   
--   <a>$sel:arn:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_arn</a> - The ARN of the secret.
--   
--   <a>$sel:kmsKeyId:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_kmsKeyId</a> - The ARN or alias of the
--   Amazon Web Services KMS customer master key (CMK) that's used to
--   encrypt the <tt>SecretString</tt> or <tt>SecretBinary</tt> fields in
--   each version of the secret. If you don't provide a key, then Secrets
--   Manager defaults to encrypting the secret fields with the default
--   Amazon Web Services KMS CMK (the one named <tt>awssecretsmanager</tt>)
--   for this account.
--   
--   <a>$sel:name:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_name</a> - The user-provided friendly name
--   of the secret.
--   
--   <a>$sel:primaryRegion:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_primaryRegion</a> - Specifies the primary
--   region for secret replication.
--   
--   <a>$sel:lastChangedDate:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_lastChangedDate</a> - The last date and time
--   that this secret was modified in any way.
--   
--   <a>$sel:deletedDate:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_deletedDate</a> - This value exists if the
--   secret is scheduled for deletion. Some time after the specified date
--   and time, Secrets Manager deletes the secret and all of its versions.
--   
--   If a secret is scheduled for deletion, then its details, including the
--   encrypted secret information, is not accessible. To cancel a scheduled
--   deletion and restore access, use RestoreSecret.
--   
--   <a>$sel:tags:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_tags</a> - The list of user-defined tags
--   that are associated with the secret. To add tags to a secret, use
--   TagResource. To remove tags, use UntagResource.
--   
--   <a>$sel:rotationEnabled:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_rotationEnabled</a> - Specifies whether
--   automatic rotation is enabled for this secret.
--   
--   To enable rotation, use RotateSecret with
--   <tt>AutomaticallyRotateAfterDays</tt> set to a value greater than 0.
--   To disable rotation, use CancelRotateSecret.
--   
--   <a>$sel:rotationRules:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_rotationRules</a> - A structure with the
--   rotation configuration for this secret.
--   
--   <a>$sel:description:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_description</a> - The user-provided
--   description of the secret.
--   
--   <a>$sel:rotationLambdaARN:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_rotationLambdaARN</a> - The ARN of a Lambda
--   function that's invoked by Secrets Manager to rotate the secret either
--   automatically per the schedule or manually by a call to
--   <tt>RotateSecret</tt>.
--   
--   <a>$sel:lastAccessedDate:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_lastAccessedDate</a> - The last date that
--   this secret was accessed. This value is truncated to midnight of the
--   date and therefore shows only the date, not the time.
--   
--   <a>$sel:versionIdsToStages:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_versionIdsToStages</a> - A list of all of
--   the currently assigned <tt>VersionStage</tt> staging labels and the
--   <tt>VersionId</tt> that each is attached to. Staging labels are used
--   to keep track of the different versions during the rotation process.
--   
--   A version that does not have any staging labels attached is considered
--   deprecated and subject to deletion. Such versions are not included in
--   this list.
--   
--   <a>$sel:httpStatus:DescribeSecretResponse'</a>,
--   <a>describeSecretResponse_httpStatus</a> - The response's http status
--   code.
newDescribeSecretResponse :: Int -> DescribeSecretResponse

-- | <i>See:</i> <a>newGetSecretValue</a> smart constructor.
data GetSecretValue
GetSecretValue' :: Maybe Text -> Maybe Text -> Text -> GetSecretValue

-- | Create a value of <a>GetSecretValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:GetSecretValue'</a>, <a>getSecretValue_versionId</a>
--   - Specifies the unique identifier of the version of the secret that
--   you want to retrieve. If you specify both this parameter and
--   <tt>VersionStage</tt>, the two parameters must refer to the same
--   secret version. If you don't specify either a <tt>VersionStage</tt> or
--   <tt>VersionId</tt> then the default is to perform the operation on the
--   version with the <tt>VersionStage</tt> value of <tt>AWSCURRENT</tt>.
--   
--   This value is typically a <a>UUID-type</a> value with 32 hexadecimal
--   digits.
--   
--   <a>$sel:versionStage:GetSecretValue'</a>,
--   <a>getSecretValue_versionStage</a> - Specifies the secret version that
--   you want to retrieve by the staging label attached to the version.
--   
--   Staging labels are used to keep track of different versions during the
--   rotation process. If you specify both this parameter and
--   <tt>VersionId</tt>, the two parameters must refer to the same secret
--   version . If you don't specify either a <tt>VersionStage</tt> or
--   <tt>VersionId</tt>, then the default is to perform the operation on
--   the version with the <tt>VersionStage</tt> value of
--   <tt>AWSCURRENT</tt>.
--   
--   <a>$sel:secretId:GetSecretValue'</a>, <a>getSecretValue_secretId</a> -
--   Specifies the secret containing the version that you want to retrieve.
--   You can specify either the Amazon Resource Name (ARN) or the friendly
--   name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newGetSecretValue :: Text -> GetSecretValue

-- | <i>See:</i> <a>newGetSecretValueResponse</a> smart constructor.
data GetSecretValueResponse
GetSecretValueResponse' :: Maybe POSIX -> Maybe (Sensitive Base64) -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (Sensitive Text) -> Int -> GetSecretValueResponse

-- | Create a value of <a>GetSecretValueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_createdDate</a> - The date and time that
--   this version of the secret was created.
--   
--   <a>$sel:secretBinary:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_secretBinary</a> - The decrypted part of the
--   protected secret information that was originally provided as binary
--   data in the form of a byte array. The response parameter represents
--   the binary data as a <a>base64-encoded</a> string.
--   
--   This parameter is not used if the secret is created by the Secrets
--   Manager console.
--   
--   If you store custom information in this field of the secret, then you
--   must code your Lambda rotation function to parse and interpret
--   whatever you store in the <tt>SecretString</tt> or
--   <tt>SecretBinary</tt> fields.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:versionStages:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_versionStages</a> - A list of all of the
--   staging labels currently attached to this version of the secret.
--   
--   <a>$sel:arn:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_arn</a> - The ARN of the secret.
--   
--   <a>$sel:name:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_name</a> - The friendly name of the secret.
--   
--   <a>$sel:versionId:GetSecretValue'</a>,
--   <a>getSecretValueResponse_versionId</a> - The unique identifier of
--   this version of the secret.
--   
--   <a>$sel:secretString:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_secretString</a> - The decrypted part of the
--   protected secret information that was originally provided as a string.
--   
--   If you create this secret by using the Secrets Manager console then
--   only the <tt>SecretString</tt> parameter contains data. Secrets
--   Manager stores the information as a JSON structure of key/value pairs
--   that the Lambda rotation function knows how to parse.
--   
--   If you store custom information in the secret by using the
--   CreateSecret, UpdateSecret, or PutSecretValue API operations instead
--   of the Secrets Manager console, or by using the <b>Other secret
--   type</b> in the console, then you must code your Lambda rotation
--   function to parse and interpret those values.
--   
--   <a>$sel:httpStatus:GetSecretValueResponse'</a>,
--   <a>getSecretValueResponse_httpStatus</a> - The response's http status
--   code.
newGetSecretValueResponse :: Int -> GetSecretValueResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:UntagResource'</a>, <a>untagResource_secretId</a> -
--   The identifier for the secret that you want to remove tags from. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of tag key names to remove from the secret. You don't specify the
--   value. Both the key and its associated value are removed.
--   
--   This parameter to the API requires a JSON text string argument. For
--   information on how to format a JSON parameter for the various command
--   line tool environments, see <a>Using JSON for Parameters</a> in the
--   <i>CLI User Guide</i>.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:TagResource'</a>, <a>tagResource_secretId</a> - The
--   identifier for the secret that you want to attach tags to. You can
--   specify either the Amazon Resource Name (ARN) or the friendly name of
--   the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   attach to the secret. Each element in the list consists of a
--   <tt>Key</tt> and a <tt>Value</tt>.
--   
--   This parameter to the API requires a JSON text string argument. For
--   information on how to format a JSON parameter for the various command
--   line tool environments, see <a>Using JSON for Parameters</a> in the
--   <i>CLI User Guide</i>. For the CLI, you can also use the syntax:
--   <tt>--Tags Key="Key1",Value="Value1"
--   Key="Key2",Value="Value2"[,…]</tt>
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newTagResourceResponse :: TagResourceResponse

-- | <i>See:</i> <a>newCreateSecret</a> smart constructor.
data CreateSecret
CreateSecret' :: Maybe (Sensitive Base64) -> Maybe Bool -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Maybe (Sensitive Text) -> Maybe Text -> Maybe (NonEmpty ReplicaRegionType) -> Text -> CreateSecret

-- | Create a value of <a>CreateSecret</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretBinary:CreateSecret'</a>,
--   <a>createSecret_secretBinary</a> - (Optional) Specifies binary data
--   that you want to encrypt and store in the new version of the secret.
--   To use this parameter in the command-line tools, we recommend that you
--   store your binary data in a file and then use the appropriate
--   technique for your tool to pass the contents of the file as a
--   parameter.
--   
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   This parameter is not available using the Secrets Manager console. It
--   can be accessed only by using the Amazon Web Services CLI or one of
--   the Amazon Web Services SDKs.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:forceOverwriteReplicaSecret:CreateSecret'</a>,
--   <a>createSecret_forceOverwriteReplicaSecret</a> - (Optional) If set,
--   the replication overwrites a secret with the same name in the
--   destination region.
--   
--   <a>$sel:kmsKeyId:CreateSecret'</a>, <a>createSecret_kmsKeyId</a> -
--   (Optional) Specifies the ARN, Key ID, or alias of the Amazon Web
--   Services KMS customer master key (CMK) to be used to encrypt the
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> values in the versions
--   stored in this secret.
--   
--   You can specify any of the supported ways to identify a Amazon Web
--   Services KMS key ID. If you need to reference a CMK in a different
--   account, you can use only the key ARN or the alias ARN.
--   
--   If you don't specify this value, then Secrets Manager defaults to
--   using the Amazon Web Services account's default CMK (the one named
--   <tt>aws/secretsmanager</tt>). If a Amazon Web Services KMS CMK with
--   that name doesn't yet exist, then Secrets Manager creates it for you
--   automatically the first time it needs to encrypt a version's
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> fields.
--   
--   You can use the account default CMK to encrypt and decrypt only if you
--   call this operation using credentials from the same account that owns
--   the secret. If the secret resides in a different account, then you
--   must create a custom CMK and specify the ARN in this field.
--   
--   <a>$sel:tags:CreateSecret'</a>, <a>createSecret_tags</a> - (Optional)
--   Specifies a list of user-defined tags that are attached to the secret.
--   Each tag is a "Key" and "Value" pair of strings. This operation only
--   appends tags to the existing list of tags. To remove tags, you must
--   use UntagResource.
--   
--   <ul>
--   <li>Secrets Manager tag key names are case sensitive. A tag with the
--   key "ABC" is a different tag from one with key "abc".</li>
--   <li>If you check tags in IAM policy <tt>Condition</tt> elements as
--   part of your security strategy, then adding or removing a tag can
--   change permissions. If the successful completion of this operation
--   would result in you losing your permissions for this secret, then this
--   operation is blocked and returns an <tt>Access Denied</tt> error.</li>
--   </ul>
--   
--   This parameter requires a JSON text string argument. For information
--   on how to format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   [{"Key":"CostCenter","Value":"12345"},{"Key":"environment","Value":"production"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
--   
--   The following basic restrictions apply to tags:
--   
--   <ul>
--   <li>Maximum number of tags per secret—50</li>
--   <li>Maximum key length—127 Unicode characters in UTF-8</li>
--   <li>Maximum value length—255 Unicode characters in UTF-8</li>
--   <li>Tag keys and values are case sensitive.</li>
--   <li>Do not use the <tt>aws:</tt> prefix in your tag names or values
--   because Amazon Web Services reserves it for Amazon Web Services use.
--   You can't edit or delete tag names or values with this prefix. Tags
--   with this prefix do not count against your tags per secret limit.</li>
--   <li>If you use your tagging schema across multiple services and
--   resources, remember other services might have restrictions on allowed
--   characters. Generally allowed characters: letters, spaces, and numbers
--   representable in UTF-8, plus the following special characters: + - = .
--   _ : / @.</li>
--   </ul>
--   
--   <a>$sel:description:CreateSecret'</a>, <a>createSecret_description</a>
--   - (Optional) Specifies a user-provided description of the secret.
--   
--   <a>$sel:secretString:CreateSecret'</a>,
--   <a>createSecret_secretString</a> - (Optional) Specifies text data that
--   you want to encrypt and store in this new version of the secret.
--   
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   If you create a secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the Lambda
--   rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>. For example:
--   
--   <pre>
--   {"username":"bob","password":"abc123xyz456"}
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
--   
--   <a>$sel:clientRequestToken:CreateSecret'</a>,
--   <a>createSecret_clientRequestToken</a> - (Optional) If you include
--   <tt>SecretString</tt> or <tt>SecretBinary</tt>, then an initial
--   version is created as part of the secret, and this parameter specifies
--   a unique identifier for the new version.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes it
--   as the value for this parameter in the request. If you don't use the
--   SDK and instead generate a raw HTTP request to the Secrets Manager
--   service endpoint, then you must generate a <tt>ClientRequestToken</tt>
--   yourself for the new version and include the value in the request.
--   
--   This value helps ensure idempotency. Secrets Manager uses this value
--   to prevent the accidental creation of duplicate versions if there are
--   failures and retries during a rotation. We recommend that you generate
--   a <a>UUID-type</a> value to ensure uniqueness of your versions within
--   the specified secret.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and the version
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are the same as
--   those in the request, then the request is ignored.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from those in the request, then the request fails because you cannot
--   modify an existing version. Instead, use PutSecretValue to create a
--   new version.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
--   
--   <a>$sel:addReplicaRegions:CreateSecret'</a>,
--   <a>createSecret_addReplicaRegions</a> - (Optional) Add a list of
--   regions to replicate secrets. Secrets Manager replicates the KMSKeyID
--   objects to the list of regions specified in the parameter.
--   
--   <a>$sel:name:CreateSecret'</a>, <a>createSecret_name</a> - Specifies
--   the friendly name of the new secret.
--   
--   The secret name must be ASCII letters, digits, or the following
--   characters : /_+=.@-
--   
--   Do not end your secret name with a hyphen followed by six characters.
--   If you do so, you risk confusion and unexpected results when searching
--   for a secret by partial ARN. Secrets Manager automatically adds a
--   hyphen and six random characters at the end of the ARN.
newCreateSecret :: Text -> CreateSecret

-- | <i>See:</i> <a>newCreateSecretResponse</a> smart constructor.
data CreateSecretResponse
CreateSecretResponse' :: Maybe [ReplicationStatusType] -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateSecretResponse

-- | Create a value of <a>CreateSecretResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationStatus:CreateSecretResponse'</a>,
--   <a>createSecretResponse_replicationStatus</a> - Describes a list of
--   replication status objects as <tt>InProgress</tt>, <tt>Failed</tt> or
--   <tt>InSync</tt>.
--   
--   <a>$sel:arn:CreateSecretResponse'</a>, <a>createSecretResponse_arn</a>
--   - The Amazon Resource Name (ARN) of the secret that you just created.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
--   
--   <a>$sel:name:CreateSecret'</a>, <a>createSecretResponse_name</a> - The
--   friendly name of the secret that you just created.
--   
--   <a>$sel:versionId:CreateSecretResponse'</a>,
--   <a>createSecretResponse_versionId</a> - The unique identifier
--   associated with the version of the secret you just created.
--   
--   <a>$sel:httpStatus:CreateSecretResponse'</a>,
--   <a>createSecretResponse_httpStatus</a> - The response's http status
--   code.
newCreateSecretResponse :: Int -> CreateSecretResponse

-- | <i>See:</i> <a>newGetRandomPassword</a> smart constructor.
data GetRandomPassword
GetRandomPassword' :: Maybe Text -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Bool -> Maybe Natural -> Maybe Bool -> Maybe Bool -> GetRandomPassword

-- | Create a value of <a>GetRandomPassword</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:excludeCharacters:GetRandomPassword'</a>,
--   <a>getRandomPassword_excludeCharacters</a> - A string that includes
--   characters that should not be included in the generated password. The
--   default is that all characters from the included sets can be used.
--   
--   <a>$sel:excludeLowercase:GetRandomPassword'</a>,
--   <a>getRandomPassword_excludeLowercase</a> - Specifies that the
--   generated password should not include lowercase letters. The default
--   if you do not include this switch parameter is that lowercase letters
--   can be included.
--   
--   <a>$sel:includeSpace:GetRandomPassword'</a>,
--   <a>getRandomPassword_includeSpace</a> - Specifies that the generated
--   password can include the space character. The default if you do not
--   include this switch parameter is that the space character is not
--   included.
--   
--   <a>$sel:requireEachIncludedType:GetRandomPassword'</a>,
--   <a>getRandomPassword_requireEachIncludedType</a> - A boolean value
--   that specifies whether the generated password must include at least
--   one of every allowed character type. The default value is
--   <tt>True</tt> and the operation requires at least one of every
--   character type.
--   
--   <a>$sel:excludeNumbers:GetRandomPassword'</a>,
--   <a>getRandomPassword_excludeNumbers</a> - Specifies that the generated
--   password should not include digits. The default if you do not include
--   this switch parameter is that digits can be included.
--   
--   <a>$sel:passwordLength:GetRandomPassword'</a>,
--   <a>getRandomPassword_passwordLength</a> - The desired length of the
--   generated password. The default value if you do not include this
--   parameter is 32 characters.
--   
--   <a>$sel:excludeUppercase:GetRandomPassword'</a>,
--   <a>getRandomPassword_excludeUppercase</a> - Specifies that the
--   generated password should not include uppercase letters. The default
--   if you do not include this switch parameter is that uppercase letters
--   can be included.
--   
--   <a>$sel:excludePunctuation:GetRandomPassword'</a>,
--   <a>getRandomPassword_excludePunctuation</a> - Specifies that the
--   generated password should not include punctuation characters. The
--   default if you do not include this switch parameter is that
--   punctuation characters can be included.
--   
--   The following are the punctuation characters that <i>can</i> be
--   included in the generated password if you don't explicitly exclude
--   them with <tt>ExcludeCharacters</tt> or <tt>ExcludePunctuation</tt>:
--   
--   <pre>
--   ! " # $ % &amp; ' ( ) * + , - . / : ; &lt; = &gt; ? @ [ \ ] ^ _ ` { | } ~
--   </pre>
newGetRandomPassword :: GetRandomPassword

-- | <i>See:</i> <a>newGetRandomPasswordResponse</a> smart constructor.
data GetRandomPasswordResponse
GetRandomPasswordResponse' :: Maybe (Sensitive Text) -> Int -> GetRandomPasswordResponse

-- | Create a value of <a>GetRandomPasswordResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:randomPassword:GetRandomPasswordResponse'</a>,
--   <a>getRandomPasswordResponse_randomPassword</a> - A string with the
--   generated password.
--   
--   <a>$sel:httpStatus:GetRandomPasswordResponse'</a>,
--   <a>getRandomPasswordResponse_httpStatus</a> - The response's http
--   status code.
newGetRandomPasswordResponse :: Int -> GetRandomPasswordResponse

-- | <i>See:</i> <a>newReplicateSecretToRegions</a> smart constructor.
data ReplicateSecretToRegions
ReplicateSecretToRegions' :: Maybe Bool -> Text -> NonEmpty ReplicaRegionType -> ReplicateSecretToRegions

-- | Create a value of <a>ReplicateSecretToRegions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:forceOverwriteReplicaSecret:ReplicateSecretToRegions'</a>,
--   <a>replicateSecretToRegions_forceOverwriteReplicaSecret</a> -
--   (Optional) If set, Secrets Manager replication overwrites a secret
--   with the same name in the destination region.
--   
--   <a>$sel:secretId:ReplicateSecretToRegions'</a>,
--   <a>replicateSecretToRegions_secretId</a> - Use the <tt>Secret Id</tt>
--   to replicate a secret to regions.
--   
--   <a>$sel:addReplicaRegions:ReplicateSecretToRegions'</a>,
--   <a>replicateSecretToRegions_addReplicaRegions</a> - Add Regions to
--   replicate the secret.
newReplicateSecretToRegions :: Text -> NonEmpty ReplicaRegionType -> ReplicateSecretToRegions

-- | <i>See:</i> <a>newReplicateSecretToRegionsResponse</a> smart
--   constructor.
data ReplicateSecretToRegionsResponse
ReplicateSecretToRegionsResponse' :: Maybe [ReplicationStatusType] -> Maybe Text -> Int -> ReplicateSecretToRegionsResponse

-- | Create a value of <a>ReplicateSecretToRegionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:replicationStatus:ReplicateSecretToRegionsResponse'</a>,
--   <a>replicateSecretToRegionsResponse_replicationStatus</a> - Describes
--   the secret replication status as <tt>PENDING</tt>, <tt>SUCCESS</tt> or
--   <tt>FAIL</tt>.
--   
--   <a>$sel:arn:ReplicateSecretToRegionsResponse'</a>,
--   <a>replicateSecretToRegionsResponse_arn</a> - Replicate a secret based
--   on the <tt>ReplicaRegionType</tt>&gt; consisting of a Region(required)
--   and a KMSKeyId (optional) which can be the ARN, KeyID, or Alias.
--   
--   <a>$sel:httpStatus:ReplicateSecretToRegionsResponse'</a>,
--   <a>replicateSecretToRegionsResponse_httpStatus</a> - The response's
--   http status code.
newReplicateSecretToRegionsResponse :: Int -> ReplicateSecretToRegionsResponse

-- | <i>See:</i> <a>newStopReplicationToReplica</a> smart constructor.
data StopReplicationToReplica
StopReplicationToReplica' :: Text -> StopReplicationToReplica

-- | Create a value of <a>StopReplicationToReplica</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:StopReplicationToReplica'</a>,
--   <a>stopReplicationToReplica_secretId</a> - Response to
--   <tt>StopReplicationToReplica</tt> of a secret, based on the
--   <tt>SecretId</tt>.
newStopReplicationToReplica :: Text -> StopReplicationToReplica

-- | <i>See:</i> <a>newStopReplicationToReplicaResponse</a> smart
--   constructor.
data StopReplicationToReplicaResponse
StopReplicationToReplicaResponse' :: Maybe Text -> Int -> StopReplicationToReplicaResponse

-- | Create a value of <a>StopReplicationToReplicaResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:StopReplicationToReplicaResponse'</a>,
--   <a>stopReplicationToReplicaResponse_arn</a> - Response
--   <tt>StopReplicationToReplica</tt> of a secret, based on the
--   <tt>ARN,</tt>.
--   
--   <a>$sel:httpStatus:StopReplicationToReplicaResponse'</a>,
--   <a>stopReplicationToReplicaResponse_httpStatus</a> - The response's
--   http status code.
newStopReplicationToReplicaResponse :: Int -> StopReplicationToReplicaResponse

-- | <i>See:</i> <a>newListSecrets</a> smart constructor.
data ListSecrets
ListSecrets' :: Maybe Text -> Maybe SortOrderType -> Maybe Natural -> Maybe [Filter] -> ListSecrets

-- | Create a value of <a>ListSecrets</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecrets'</a>, <a>listSecrets_nextToken</a> -
--   (Optional) Use this parameter in a request if you receive a
--   <tt>NextToken</tt> response in a previous request indicating there's
--   more output available. In a subsequent call, set it to the value of
--   the previous call <tt>NextToken</tt> response to indicate where the
--   output should continue from.
--   
--   <a>$sel:sortOrder:ListSecrets'</a>, <a>listSecrets_sortOrder</a> -
--   Lists secrets in the requested order.
--   
--   <a>$sel:maxResults:ListSecrets'</a>, <a>listSecrets_maxResults</a> -
--   (Optional) Limits the number of results you want to include in the
--   response. If you don't include this parameter, it defaults to a value
--   that's specific to the operation. If additional items exist beyond the
--   maximum you specify, the <tt>NextToken</tt> response element is
--   present and has a value (isn't null). Include that value as the
--   <tt>NextToken</tt> request parameter in the next call to the operation
--   to get the next part of the results. Note that Secrets Manager might
--   return fewer results than the maximum even when there are more results
--   available. You should check <tt>NextToken</tt> after every operation
--   to ensure that you receive all of the results.
--   
--   <a>$sel:filters:ListSecrets'</a>, <a>listSecrets_filters</a> - Lists
--   the secret request filters.
newListSecrets :: ListSecrets

-- | <i>See:</i> <a>newListSecretsResponse</a> smart constructor.
data ListSecretsResponse
ListSecretsResponse' :: Maybe Text -> Maybe [SecretListEntry] -> Int -> ListSecretsResponse

-- | Create a value of <a>ListSecretsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecrets'</a>,
--   <a>listSecretsResponse_nextToken</a> - If present in the response,
--   this value indicates that there's more output available than included
--   in the current response. This can occur even when the response
--   includes no values at all, such as when you ask for a filtered view of
--   a very long list. Use this value in the <tt>NextToken</tt> request
--   parameter in a subsequent call to the operation to continue processing
--   and get the next part of the output. You should repeat this until the
--   <tt>NextToken</tt> response element comes back empty (as
--   <tt>null</tt>).
--   
--   <a>$sel:secretList:ListSecretsResponse'</a>,
--   <a>listSecretsResponse_secretList</a> - A list of the secrets in the
--   account.
--   
--   <a>$sel:httpStatus:ListSecretsResponse'</a>,
--   <a>listSecretsResponse_httpStatus</a> - The response's http status
--   code.
newListSecretsResponse :: Int -> ListSecretsResponse

-- | <i>See:</i> <a>newPutSecretValue</a> smart constructor.
data PutSecretValue
PutSecretValue' :: Maybe (Sensitive Base64) -> Maybe (NonEmpty Text) -> Maybe (Sensitive Text) -> Maybe Text -> Text -> PutSecretValue

-- | Create a value of <a>PutSecretValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretBinary:PutSecretValue'</a>,
--   <a>putSecretValue_secretBinary</a> - (Optional) Specifies binary data
--   that you want to encrypt and store in the new version of the secret.
--   To use this parameter in the command-line tools, we recommend that you
--   store your binary data in a file and then use the appropriate
--   technique for your tool to pass the contents of the file as a
--   parameter. Either <tt>SecretBinary</tt> or <tt>SecretString</tt> must
--   have a value, but not both. They cannot both be empty.
--   
--   This parameter is not accessible if the secret using the Secrets
--   Manager console.-- -- <i>Note:</i> This <tt>Lens</tt> automatically
--   encodes and decodes Base64 data. -- The underlying isomorphism will
--   encode to Base64 representation during -- serialisation, and decode
--   from Base64 representation during deserialisation. -- This
--   <tt>Lens</tt> accepts and returns only raw unencoded data.
--   
--   <a>$sel:versionStages:PutSecretValue'</a>,
--   <a>putSecretValue_versionStages</a> - (Optional) Specifies a list of
--   staging labels that are attached to this version of the secret. These
--   staging labels are used to track the versions through the rotation
--   process by the Lambda rotation function.
--   
--   A staging label must be unique to a single version of the secret. If
--   you specify a staging label that's already associated with a different
--   version of the same secret then that staging label is automatically
--   removed from the other version and attached to this version.
--   
--   If you do not specify a value for <tt>VersionStages</tt> then Secrets
--   Manager automatically moves the staging label <tt>AWSCURRENT</tt> to
--   this new version.
--   
--   <a>$sel:secretString:PutSecretValue'</a>,
--   <a>putSecretValue_secretString</a> - (Optional) Specifies text data
--   that you want to encrypt and store in this new version of the secret.
--   Either <tt>SecretString</tt> or <tt>SecretBinary</tt> must have a
--   value, but not both. They cannot both be empty.
--   
--   If you create this secret by using the Secrets Manager console then
--   Secrets Manager puts the protected secret text in only the
--   <tt>SecretString</tt> parameter. The Secrets Manager console stores
--   the information as a JSON structure of key/value pairs that the
--   default Lambda rotation function knows how to parse.
--   
--   For storing multiple values, we recommend that you use a JSON text
--   string argument and specify key/value pairs. For information on how to
--   format a JSON parameter for the various command line tool
--   environments, see <a>Using JSON for Parameters</a> in the <i>CLI User
--   Guide</i>.
--   
--   For example:
--   
--   <pre>
--   [{"username":"bob"},{"password":"abc123xyz456"}]
--   </pre>
--   
--   If your command-line tool or SDK requires quotation marks around the
--   parameter, you should use single quotes to avoid confusion with the
--   double quotes required in the JSON text.
--   
--   <a>$sel:clientRequestToken:PutSecretValue'</a>,
--   <a>putSecretValue_clientRequestToken</a> - (Optional) Specifies a
--   unique identifier for the new version of the secret.
--   
--   If you use the Amazon Web Services CLI or one of the Amazon Web
--   Services SDK to call this operation, then you can leave this parameter
--   empty. The CLI or SDK generates a random UUID for you and includes
--   that in the request. If you don't use the SDK and instead generate a
--   raw HTTP request to the Secrets Manager service endpoint, then you
--   must generate a <tt>ClientRequestToken</tt> yourself for new versions
--   and include that value in the request.
--   
--   This value helps ensure idempotency. Secrets Manager uses this value
--   to prevent the accidental creation of duplicate versions if there are
--   failures and retries during the Lambda rotation function's processing.
--   We recommend that you generate a <a>UUID-type</a> value to ensure
--   uniqueness within the specified secret.
--   
--   <ul>
--   <li>If the <tt>ClientRequestToken</tt> value isn't already associated
--   with a version of the secret then a new version of the secret is
--   created.</li>
--   <li>If a version with this value already exists and that version's
--   <tt>SecretString</tt> or <tt>SecretBinary</tt> values are the same as
--   those in the request then the request is ignored (the operation is
--   idempotent).</li>
--   <li>If a version with this value already exists and the version of the
--   <tt>SecretString</tt> and <tt>SecretBinary</tt> values are different
--   from those in the request then the request fails because you cannot
--   modify an existing secret version. You can only create new versions to
--   store new secret values.</li>
--   </ul>
--   
--   This value becomes the <tt>VersionId</tt> of the new version.
--   
--   <a>$sel:secretId:PutSecretValue'</a>, <a>putSecretValue_secretId</a> -
--   Specifies the secret to which you want to add a new version. You can
--   specify either the Amazon Resource Name (ARN) or the friendly name of
--   the secret. The secret must already exist.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newPutSecretValue :: Text -> PutSecretValue

-- | <i>See:</i> <a>newPutSecretValueResponse</a> smart constructor.
data PutSecretValueResponse
PutSecretValueResponse' :: Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> PutSecretValueResponse

-- | Create a value of <a>PutSecretValueResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionStages:PutSecretValue'</a>,
--   <a>putSecretValueResponse_versionStages</a> - The list of staging
--   labels that are currently attached to this version of the secret.
--   Staging labels are used to track a version as it progresses through
--   the secret rotation process.
--   
--   <a>$sel:arn:PutSecretValueResponse'</a>,
--   <a>putSecretValueResponse_arn</a> - The Amazon Resource Name (ARN) for
--   the secret for which you just created a version.
--   
--   <a>$sel:name:PutSecretValueResponse'</a>,
--   <a>putSecretValueResponse_name</a> - The friendly name of the secret
--   for which you just created or updated a version.
--   
--   <a>$sel:versionId:PutSecretValueResponse'</a>,
--   <a>putSecretValueResponse_versionId</a> - The unique identifier of the
--   version of the secret you just created or updated.
--   
--   <a>$sel:httpStatus:PutSecretValueResponse'</a>,
--   <a>putSecretValueResponse_httpStatus</a> - The response's http status
--   code.
newPutSecretValueResponse :: Int -> PutSecretValueResponse

-- | <i>See:</i> <a>newUpdateSecretVersionStage</a> smart constructor.
data UpdateSecretVersionStage
UpdateSecretVersionStage' :: Maybe Text -> Maybe Text -> Text -> Text -> UpdateSecretVersionStage

-- | Create a value of <a>UpdateSecretVersionStage</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:removeFromVersionId:UpdateSecretVersionStage'</a>,
--   <a>updateSecretVersionStage_removeFromVersionId</a> - Specifies the
--   secret version ID of the version that the staging label is to be
--   removed from. If the staging label you are trying to attach to one
--   version is already attached to a different version, then you must
--   include this parameter and specify the version that the label is to be
--   removed from. If the label is attached and you either do not specify
--   this parameter, or the version ID does not match, then the operation
--   fails.
--   
--   <a>$sel:moveToVersionId:UpdateSecretVersionStage'</a>,
--   <a>updateSecretVersionStage_moveToVersionId</a> - (Optional) The
--   secret version ID that you want to add the staging label. If you want
--   to remove a label from a version, then do not specify this parameter.
--   
--   If the staging label is already attached to a different version of the
--   secret, then you must also specify the <tt>RemoveFromVersionId</tt>
--   parameter.
--   
--   <a>$sel:secretId:UpdateSecretVersionStage'</a>,
--   <a>updateSecretVersionStage_secretId</a> - Specifies the secret with
--   the version with the list of staging labels you want to modify. You
--   can specify either the Amazon Resource Name (ARN) or the friendly name
--   of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
--   
--   <a>$sel:versionStage:UpdateSecretVersionStage'</a>,
--   <a>updateSecretVersionStage_versionStage</a> - The staging label to
--   add to this version.
newUpdateSecretVersionStage :: Text -> Text -> UpdateSecretVersionStage

-- | <i>See:</i> <a>newUpdateSecretVersionStageResponse</a> smart
--   constructor.
data UpdateSecretVersionStageResponse
UpdateSecretVersionStageResponse' :: Maybe Text -> Maybe Text -> Int -> UpdateSecretVersionStageResponse

-- | Create a value of <a>UpdateSecretVersionStageResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:UpdateSecretVersionStageResponse'</a>,
--   <a>updateSecretVersionStageResponse_arn</a> - The ARN of the secret
--   with the modified staging label.
--   
--   <a>$sel:name:UpdateSecretVersionStageResponse'</a>,
--   <a>updateSecretVersionStageResponse_name</a> - The friendly name of
--   the secret with the modified staging label.
--   
--   <a>$sel:httpStatus:UpdateSecretVersionStageResponse'</a>,
--   <a>updateSecretVersionStageResponse_httpStatus</a> - The response's
--   http status code.
newUpdateSecretVersionStageResponse :: Int -> UpdateSecretVersionStageResponse

-- | <i>See:</i> <a>newDeleteResourcePolicy</a> smart constructor.
data DeleteResourcePolicy
DeleteResourcePolicy' :: Text -> DeleteResourcePolicy

-- | Create a value of <a>DeleteResourcePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:secretId:DeleteResourcePolicy'</a>,
--   <a>deleteResourcePolicy_secretId</a> - Specifies the secret that you
--   want to delete the attached resource-based policy for. You can specify
--   either the Amazon Resource Name (ARN) or the friendly name of the
--   secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newDeleteResourcePolicy :: Text -> DeleteResourcePolicy

-- | <i>See:</i> <a>newDeleteResourcePolicyResponse</a> smart constructor.
data DeleteResourcePolicyResponse
DeleteResourcePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteResourcePolicyResponse

-- | Create a value of <a>DeleteResourcePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DeleteResourcePolicyResponse'</a>,
--   <a>deleteResourcePolicyResponse_arn</a> - The ARN of the secret that
--   the resource-based policy was deleted for.
--   
--   <a>$sel:name:DeleteResourcePolicyResponse'</a>,
--   <a>deleteResourcePolicyResponse_name</a> - The friendly name of the
--   secret that the resource-based policy was deleted for.
--   
--   <a>$sel:httpStatus:DeleteResourcePolicyResponse'</a>,
--   <a>deleteResourcePolicyResponse_httpStatus</a> - The response's http
--   status code.
newDeleteResourcePolicyResponse :: Int -> DeleteResourcePolicyResponse

-- | <i>See:</i> <a>newListSecretVersionIds</a> smart constructor.
data ListSecretVersionIds
ListSecretVersionIds' :: Maybe Text -> Maybe Natural -> Maybe Bool -> Text -> ListSecretVersionIds

-- | Create a value of <a>ListSecretVersionIds</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecretVersionIds'</a>,
--   <a>listSecretVersionIds_nextToken</a> - (Optional) Use this parameter
--   in a request if you receive a <tt>NextToken</tt> response in a
--   previous request indicating there's more output available. In a
--   subsequent call, set it to the value of the previous call
--   <tt>NextToken</tt> response to indicate where the output should
--   continue from.
--   
--   <a>$sel:maxResults:ListSecretVersionIds'</a>,
--   <a>listSecretVersionIds_maxResults</a> - (Optional) Limits the number
--   of results you want to include in the response. If you don't include
--   this parameter, it defaults to a value that's specific to the
--   operation. If additional items exist beyond the maximum you specify,
--   the <tt>NextToken</tt> response element is present and has a value
--   (isn't null). Include that value as the <tt>NextToken</tt> request
--   parameter in the next call to the operation to get the next part of
--   the results. Note that Secrets Manager might return fewer results than
--   the maximum even when there are more results available. You should
--   check <tt>NextToken</tt> after every operation to ensure that you
--   receive all of the results.
--   
--   <a>$sel:includeDeprecated:ListSecretVersionIds'</a>,
--   <a>listSecretVersionIds_includeDeprecated</a> - (Optional) Specifies
--   that you want the results to include versions that do not have any
--   staging labels attached to them. Such versions are considered
--   deprecated and are subject to deletion by Secrets Manager as needed.
--   
--   <a>$sel:secretId:ListSecretVersionIds'</a>,
--   <a>listSecretVersionIds_secretId</a> - The identifier for the secret
--   containing the versions you want to list. You can specify either the
--   Amazon Resource Name (ARN) or the friendly name of the secret.
--   
--   If you specify an ARN, we generally recommend that you specify a
--   complete ARN. You can specify a partial ARN too—for example, if you
--   don’t include the final hyphen and six random characters that Secrets
--   Manager adds at the end of the ARN when you created the secret. A
--   partial ARN match can work as long as it uniquely matches only one
--   secret. However, if your secret has a name that ends in a hyphen
--   followed by six characters (before Secrets Manager adds the hyphen and
--   six characters to the ARN) and you try to use that as a partial ARN,
--   then those characters cause Secrets Manager to assume that you’re
--   specifying a complete ARN. This confusion can cause unexpected
--   results. To avoid this situation, we recommend that you don’t create
--   secret names ending with a hyphen followed by six characters.
--   
--   If you specify an incomplete ARN without the random suffix, and
--   instead provide the 'friendly name', you <i>must</i> not include the
--   random suffix. If you do include the random suffix added by Secrets
--   Manager, you receive either a <i>ResourceNotFoundException</i> or an
--   <i>AccessDeniedException</i> error, depending on your permissions.
newListSecretVersionIds :: Text -> ListSecretVersionIds

-- | <i>See:</i> <a>newListSecretVersionIdsResponse</a> smart constructor.
data ListSecretVersionIdsResponse
ListSecretVersionIdsResponse' :: Maybe Text -> Maybe [SecretVersionsListEntry] -> Maybe Text -> Maybe Text -> Int -> ListSecretVersionIdsResponse

-- | Create a value of <a>ListSecretVersionIdsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSecretVersionIds'</a>,
--   <a>listSecretVersionIdsResponse_nextToken</a> - If present in the
--   response, this value indicates that there's more output available than
--   included in the current response. This can occur even when the
--   response includes no values at all, such as when you ask for a
--   filtered view of a very long list. Use this value in the
--   <tt>NextToken</tt> request parameter in a subsequent call to the
--   operation to continue processing and get the next part of the output.
--   You should repeat this until the <tt>NextToken</tt> response element
--   comes back empty (as <tt>null</tt>).
--   
--   <a>$sel:versions:ListSecretVersionIdsResponse'</a>,
--   <a>listSecretVersionIdsResponse_versions</a> - The list of the
--   currently available versions of the specified secret.
--   
--   <a>$sel:arn:ListSecretVersionIdsResponse'</a>,
--   <a>listSecretVersionIdsResponse_arn</a> - The Amazon Resource Name
--   (ARN) for the secret.
--   
--   Secrets Manager automatically adds several random characters to the
--   name at the end of the ARN when you initially create a secret. This
--   affects only the ARN and not the actual friendly name. This ensures
--   that if you create a new secret with the same name as an old secret
--   that you previously deleted, then users with access to the old secret
--   <i>don't</i> automatically get access to the new secret because the
--   ARNs are different.
--   
--   <a>$sel:name:ListSecretVersionIdsResponse'</a>,
--   <a>listSecretVersionIdsResponse_name</a> - The friendly name of the
--   secret.
--   
--   <a>$sel:httpStatus:ListSecretVersionIdsResponse'</a>,
--   <a>listSecretVersionIdsResponse_httpStatus</a> - The response's http
--   status code.
newListSecretVersionIdsResponse :: Int -> ListSecretVersionIdsResponse
newtype FilterNameStringType
FilterNameStringType' :: Text -> FilterNameStringType
[fromFilterNameStringType] :: FilterNameStringType -> Text
pattern FilterNameStringType_All :: FilterNameStringType
pattern FilterNameStringType_Description :: FilterNameStringType
pattern FilterNameStringType_Name :: FilterNameStringType
pattern FilterNameStringType_Primary_region :: FilterNameStringType
pattern FilterNameStringType_Tag_key :: FilterNameStringType
pattern FilterNameStringType_Tag_value :: FilterNameStringType
newtype SortOrderType
SortOrderType' :: Text -> SortOrderType
[fromSortOrderType] :: SortOrderType -> Text
pattern SortOrderType_Asc :: SortOrderType
pattern SortOrderType_Desc :: SortOrderType
newtype StatusType
StatusType' :: Text -> StatusType
[fromStatusType] :: StatusType -> Text
pattern StatusType_Failed :: StatusType
pattern StatusType_InProgress :: StatusType
pattern StatusType_InSync :: StatusType

-- | Allows you to add filters when you use the search function in Secrets
--   Manager.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe FilterNameStringType -> Maybe (NonEmpty Text) -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Filter'</a>, <a>filter_key</a> - Filters your list of
--   secrets by a specific key.
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - Filters your list
--   of secrets by a specific value.
--   
--   You can prefix your search value with an exclamation mark (<tt>!</tt>)
--   in order to perform negation filters.
newFilter :: Filter

-- | (Optional) Custom type consisting of a <tt>Region</tt> (required) and
--   the <tt>KmsKeyId</tt> which can be an <tt>ARN</tt>, <tt>Key ID</tt>,
--   or <tt>Alias</tt>.
--   
--   <i>See:</i> <a>newReplicaRegionType</a> smart constructor.
data ReplicaRegionType
ReplicaRegionType' :: Maybe Text -> Maybe Text -> ReplicaRegionType

-- | Create a value of <a>ReplicaRegionType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyId:ReplicaRegionType'</a>,
--   <a>replicaRegionType_kmsKeyId</a> - Can be an <tt>ARN</tt>, <tt>Key
--   ID</tt>, or <tt>Alias</tt>.
--   
--   <a>$sel:region:ReplicaRegionType'</a>, <a>replicaRegionType_region</a>
--   - Describes a single instance of Region objects.
newReplicaRegionType :: ReplicaRegionType

-- | A replication object consisting of a <tt>RegionReplicationStatus</tt>
--   object and includes a Region, KMSKeyId, status, and status message.
--   
--   <i>See:</i> <a>newReplicationStatusType</a> smart constructor.
data ReplicationStatusType
ReplicationStatusType' :: Maybe Text -> Maybe StatusType -> Maybe Text -> Maybe POSIX -> Maybe Text -> ReplicationStatusType

-- | Create a value of <a>ReplicationStatusType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusMessage:ReplicationStatusType'</a>,
--   <a>replicationStatusType_statusMessage</a> - Status message such as
--   "/Secret with this name already exists in this region/".
--   
--   <a>$sel:status:ReplicationStatusType'</a>,
--   <a>replicationStatusType_status</a> - The status can be
--   <tt>InProgress</tt>, <tt>Failed</tt>, or <tt>InSync</tt>.
--   
--   <a>$sel:kmsKeyId:ReplicationStatusType'</a>,
--   <a>replicationStatusType_kmsKeyId</a> - Can be an <tt>ARN</tt>,
--   <tt>Key ID</tt>, or <tt>Alias</tt>.
--   
--   <a>$sel:lastAccessedDate:ReplicationStatusType'</a>,
--   <a>replicationStatusType_lastAccessedDate</a> - The date that you last
--   accessed the secret in the Region.
--   
--   <a>$sel:region:ReplicationStatusType'</a>,
--   <a>replicationStatusType_region</a> - The Region where replication
--   occurs.
newReplicationStatusType :: ReplicationStatusType

-- | A structure that defines the rotation configuration for the secret.
--   
--   <i>See:</i> <a>newRotationRulesType</a> smart constructor.
data RotationRulesType
RotationRulesType' :: Maybe Natural -> RotationRulesType

-- | Create a value of <a>RotationRulesType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:automaticallyAfterDays:RotationRulesType'</a>,
--   <a>rotationRulesType_automaticallyAfterDays</a> - Specifies the number
--   of days between automatic scheduled rotations of the secret.
--   
--   Secrets Manager schedules the next rotation when the previous one is
--   complete. Secrets Manager schedules the date by adding the rotation
--   interval (number of days) to the actual date of the last rotation. The
--   service chooses the hour within that 24-hour date window randomly. The
--   minute is also chosen somewhat randomly, but weighted towards the top
--   of the hour and influenced by a variety of factors that help
--   distribute load.
newRotationRulesType :: RotationRulesType

-- | A structure that contains the details about a secret. It does not
--   include the encrypted <tt>SecretString</tt> and <tt>SecretBinary</tt>
--   values. To get those values, use the GetSecretValue operation.
--   
--   <i>See:</i> <a>newSecretListEntry</a> smart constructor.
data SecretListEntry
SecretListEntry' :: Maybe POSIX -> Maybe Text -> Maybe (HashMap Text (NonEmpty Text)) -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe [Tag] -> Maybe Bool -> Maybe RotationRulesType -> Maybe Text -> Maybe Text -> Maybe POSIX -> SecretListEntry

-- | Create a value of <a>SecretListEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:SecretListEntry'</a>,
--   <a>secretListEntry_createdDate</a> - The date and time when a secret
--   was created.
--   
--   <a>$sel:owningService:SecretListEntry'</a>,
--   <a>secretListEntry_owningService</a> - Returns the name of the service
--   that created the secret.
--   
--   <a>$sel:secretVersionsToStages:SecretListEntry'</a>,
--   <a>secretListEntry_secretVersionsToStages</a> - A list of all of the
--   currently assigned <tt>SecretVersionStage</tt> staging labels and the
--   <tt>SecretVersionId</tt> attached to each one. Staging labels are used
--   to keep track of the different versions during the rotation process.
--   
--   A version that does not have any <tt>SecretVersionStage</tt> is
--   considered deprecated and subject to deletion. Such versions are not
--   included in this list.
--   
--   <a>$sel:lastRotatedDate:SecretListEntry'</a>,
--   <a>secretListEntry_lastRotatedDate</a> - The most recent date and time
--   that the Secrets Manager rotation process was successfully completed.
--   This value is null if the secret hasn't ever rotated.
--   
--   <a>$sel:arn:SecretListEntry'</a>, <a>secretListEntry_arn</a> - The
--   Amazon Resource Name (ARN) of the secret.
--   
--   For more information about ARNs in Secrets Manager, see <a>Policy
--   Resources</a> in the <i>Amazon Web Services Secrets Manager User
--   Guide</i>.
--   
--   <a>$sel:kmsKeyId:SecretListEntry'</a>, <a>secretListEntry_kmsKeyId</a>
--   - The ARN or alias of the Amazon Web Services KMS customer master key
--   (CMK) used to encrypt the <tt>SecretString</tt> and
--   <tt>SecretBinary</tt> fields in each version of the secret. If you
--   don't provide a key, then Secrets Manager defaults to encrypting the
--   secret fields with the default KMS CMK, the key named
--   <tt>awssecretsmanager</tt>, for this account.
--   
--   <a>$sel:name:SecretListEntry'</a>, <a>secretListEntry_name</a> - The
--   friendly name of the secret. You can use forward slashes in the name
--   to represent a path hierarchy. For example,
--   <tt>/prod/databases/dbserver1</tt> could represent the secret for a
--   server named <tt>dbserver1</tt> in the folder <tt>databases</tt> in
--   the folder <tt>prod</tt>.
--   
--   <a>$sel:primaryRegion:SecretListEntry'</a>,
--   <a>secretListEntry_primaryRegion</a> - The Region where Secrets
--   Manager originated the secret.
--   
--   <a>$sel:lastChangedDate:SecretListEntry'</a>,
--   <a>secretListEntry_lastChangedDate</a> - The last date and time that
--   this secret was modified in any way.
--   
--   <a>$sel:deletedDate:SecretListEntry'</a>,
--   <a>secretListEntry_deletedDate</a> - The date and time the deletion of
--   the secret occurred. Not present on active secrets. The secret can be
--   recovered until the number of days in the recovery window has passed,
--   as specified in the <tt>RecoveryWindowInDays</tt> parameter of the
--   DeleteSecret operation.
--   
--   <a>$sel:tags:SecretListEntry'</a>, <a>secretListEntry_tags</a> - The
--   list of user-defined tags associated with the secret. To add tags to a
--   secret, use TagResource. To remove tags, use UntagResource.
--   
--   <a>$sel:rotationEnabled:SecretListEntry'</a>,
--   <a>secretListEntry_rotationEnabled</a> - Indicates whether automatic,
--   scheduled rotation is enabled for this secret.
--   
--   <a>$sel:rotationRules:SecretListEntry'</a>,
--   <a>secretListEntry_rotationRules</a> - A structure that defines the
--   rotation configuration for the secret.
--   
--   <a>$sel:description:SecretListEntry'</a>,
--   <a>secretListEntry_description</a> - The user-provided description of
--   the secret.
--   
--   <a>$sel:rotationLambdaARN:SecretListEntry'</a>,
--   <a>secretListEntry_rotationLambdaARN</a> - The ARN of an Amazon Web
--   Services Lambda function invoked by Secrets Manager to rotate and
--   expire the secret either automatically per the schedule or manually by
--   a call to RotateSecret.
--   
--   <a>$sel:lastAccessedDate:SecretListEntry'</a>,
--   <a>secretListEntry_lastAccessedDate</a> - The last date that this
--   secret was accessed. This value is truncated to midnight of the date
--   and therefore shows only the date, not the time.
newSecretListEntry :: SecretListEntry

-- | A structure that contains information about one version of a secret.
--   
--   <i>See:</i> <a>newSecretVersionsListEntry</a> smart constructor.
data SecretVersionsListEntry
SecretVersionsListEntry' :: Maybe POSIX -> Maybe [Text] -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe POSIX -> SecretVersionsListEntry

-- | Create a value of <a>SecretVersionsListEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_createdDate</a> - The date and time this
--   version of the secret was created.
--   
--   <a>$sel:kmsKeyIds:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_kmsKeyIds</a> - The KMS keys used to
--   encrypt the secret version.
--   
--   <a>$sel:versionStages:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_versionStages</a> - An array of staging
--   labels that are currently associated with this version of the secret.
--   
--   <a>$sel:versionId:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_versionId</a> - The unique version
--   identifier of this version of the secret.
--   
--   <a>$sel:lastAccessedDate:SecretVersionsListEntry'</a>,
--   <a>secretVersionsListEntry_lastAccessedDate</a> - The date that this
--   version of the secret was last accessed. Note that the resolution of
--   this field is at the date level and does not include the time.
newSecretVersionsListEntry :: SecretVersionsListEntry

-- | A structure that contains information about a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key identifier, or name, of
--   the tag.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The string value associated
--   with the key of the tag.
newTag :: Tag

-- | Displays errors that occurred during validation of the resource
--   policy.
--   
--   <i>See:</i> <a>newValidationErrorsEntry</a> smart constructor.
data ValidationErrorsEntry
ValidationErrorsEntry' :: Maybe Text -> Maybe Text -> ValidationErrorsEntry

-- | Create a value of <a>ValidationErrorsEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checkName:ValidationErrorsEntry'</a>,
--   <a>validationErrorsEntry_checkName</a> - Checks the name of the
--   policy.
--   
--   <a>$sel:errorMessage:ValidationErrorsEntry'</a>,
--   <a>validationErrorsEntry_errorMessage</a> - Displays error messages if
--   validation encounters problems during validation of the resource
--   policy.
newValidationErrorsEntry :: ValidationErrorsEntry
