-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-personalize-runtimeZSamazonka-personalize-runtime
@version 2.0


module Amazonka.PersonalizeRuntime.Types.PredictedItem

-- | An object that identifies an item.
--   
--   The and APIs return a list of <tt>PredictedItem</tt>s.
--   
--   <i>See:</i> <a>newPredictedItem</a> smart constructor.
data PredictedItem
PredictedItem' :: Maybe Double -> Maybe Text -> PredictedItem

-- | A numeric representation of the model's certainty that the item will
--   be the next user selection. For more information on scoring logic, see
--   how-scores-work.
[$sel:score:PredictedItem'] :: PredictedItem -> Maybe Double

-- | The recommended item ID.
[$sel:itemId:PredictedItem'] :: PredictedItem -> Maybe Text

-- | Create a value of <a>PredictedItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:score:PredictedItem'</a>, <a>predictedItem_score</a> - A
--   numeric representation of the model's certainty that the item will be
--   the next user selection. For more information on scoring logic, see
--   how-scores-work.
--   
--   <a>$sel:itemId:PredictedItem'</a>, <a>predictedItem_itemId</a> - The
--   recommended item ID.
newPredictedItem :: PredictedItem

-- | A numeric representation of the model's certainty that the item will
--   be the next user selection. For more information on scoring logic, see
--   how-scores-work.
predictedItem_score :: Lens' PredictedItem (Maybe Double)

-- | The recommended item ID.
predictedItem_itemId :: Lens' PredictedItem (Maybe Text)
instance GHC.Generics.Generic Amazonka.PersonalizeRuntime.Types.PredictedItem.PredictedItem
instance GHC.Show.Show Amazonka.PersonalizeRuntime.Types.PredictedItem.PredictedItem
instance GHC.Read.Read Amazonka.PersonalizeRuntime.Types.PredictedItem.PredictedItem
instance GHC.Classes.Eq Amazonka.PersonalizeRuntime.Types.PredictedItem.PredictedItem
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.PersonalizeRuntime.Types.PredictedItem.PredictedItem
instance Data.Hashable.Class.Hashable Amazonka.PersonalizeRuntime.Types.PredictedItem.PredictedItem
instance Control.DeepSeq.NFData Amazonka.PersonalizeRuntime.Types.PredictedItem.PredictedItem


module Amazonka.PersonalizeRuntime.Types

-- | API version <tt>2018-05-22</tt> of the Amazon Personalize Runtime SDK
--   configuration.
defaultService :: Service

-- | Provide a valid value for the field or parameter.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An object that identifies an item.
--   
--   The and APIs return a list of <tt>PredictedItem</tt>s.
--   
--   <i>See:</i> <a>newPredictedItem</a> smart constructor.
data PredictedItem
PredictedItem' :: Maybe Double -> Maybe Text -> PredictedItem

-- | A numeric representation of the model's certainty that the item will
--   be the next user selection. For more information on scoring logic, see
--   how-scores-work.
[$sel:score:PredictedItem'] :: PredictedItem -> Maybe Double

-- | The recommended item ID.
[$sel:itemId:PredictedItem'] :: PredictedItem -> Maybe Text

-- | Create a value of <a>PredictedItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:score:PredictedItem'</a>, <a>predictedItem_score</a> - A
--   numeric representation of the model's certainty that the item will be
--   the next user selection. For more information on scoring logic, see
--   how-scores-work.
--   
--   <a>$sel:itemId:PredictedItem'</a>, <a>predictedItem_itemId</a> - The
--   recommended item ID.
newPredictedItem :: PredictedItem

-- | A numeric representation of the model's certainty that the item will
--   be the next user selection. For more information on scoring logic, see
--   how-scores-work.
predictedItem_score :: Lens' PredictedItem (Maybe Double)

-- | The recommended item ID.
predictedItem_itemId :: Lens' PredictedItem (Maybe Text)


-- | Returns a list of recommended items. The required input depends on the
--   recipe type used to create the solution backing the campaign, as
--   follows:
--   
--   <ul>
--   <li>RELATED_ITEMS - <tt>itemId</tt> required, <tt>userId</tt> not
--   used</li>
--   <li>USER_PERSONALIZATION - <tt>itemId</tt> optional, <tt>userId</tt>
--   required</li>
--   </ul>
--   
--   Campaigns that are backed by a solution created using a recipe of type
--   PERSONALIZED_RANKING use the API.
module Amazonka.PersonalizeRuntime.GetRecommendations

-- | <i>See:</i> <a>newGetRecommendations</a> smart constructor.
data GetRecommendations
GetRecommendations' :: Maybe (HashMap Text (Sensitive Text)) -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe (HashMap Text (Sensitive Text)) -> Text -> GetRecommendations

-- | The contextual metadata to use when getting recommendations.
--   Contextual metadata includes any interaction information that might be
--   relevant when getting a user's recommendations, such as the user's
--   current location or device type.
[$sel:context:GetRecommendations'] :: GetRecommendations -> Maybe (HashMap Text (Sensitive Text))

-- | The item ID to provide recommendations for.
--   
--   Required for <tt>RELATED_ITEMS</tt> recipe type.
[$sel:itemId:GetRecommendations'] :: GetRecommendations -> Maybe Text

-- | The user ID to provide recommendations for.
--   
--   Required for <tt>USER_PERSONALIZATION</tt> recipe type.
[$sel:userId:GetRecommendations'] :: GetRecommendations -> Maybe Text

-- | The number of results to return. The default is 25. The maximum is
--   500.
[$sel:numResults:GetRecommendations'] :: GetRecommendations -> Maybe Natural

-- | The ARN of the filter to apply to the returned recommendations. For
--   more information, see <a>Filtering Recommendations</a>.
--   
--   When using this parameter, be sure the filter resource is
--   <tt>ACTIVE</tt>.
[$sel:filterArn:GetRecommendations'] :: GetRecommendations -> Maybe Text

-- | The values to use when filtering recommendations. For each placeholder
--   parameter in your filter expression, provide the parameter name (in
--   matching case) as a key and the filter value(s) as the corresponding
--   value. Separate multiple values for one parameter with a comma.
--   
--   For filter expressions that use an <tt>INCLUDE</tt> element to include
--   items, you must provide values for all parameters that are defined in
--   the expression. For filters with expressions that use an
--   <tt>EXCLUDE</tt> element to exclude items, you can omit the
--   <tt>filter-values</tt>.In this case, Amazon Personalize doesn't use
--   that portion of the expression to filter recommendations.
--   
--   For more information, see <a>Filtering Recommendations</a>.
[$sel:filterValues:GetRecommendations'] :: GetRecommendations -> Maybe (HashMap Text (Sensitive Text))

-- | The Amazon Resource Name (ARN) of the campaign to use for getting
--   recommendations.
[$sel:campaignArn:GetRecommendations'] :: GetRecommendations -> Text

-- | Create a value of <a>GetRecommendations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:context:GetRecommendations'</a>,
--   <a>getRecommendations_context</a> - The contextual metadata to use
--   when getting recommendations. Contextual metadata includes any
--   interaction information that might be relevant when getting a user's
--   recommendations, such as the user's current location or device type.
--   
--   <a>$sel:itemId:GetRecommendations'</a>,
--   <a>getRecommendations_itemId</a> - The item ID to provide
--   recommendations for.
--   
--   Required for <tt>RELATED_ITEMS</tt> recipe type.
--   
--   <a>$sel:userId:GetRecommendations'</a>,
--   <a>getRecommendations_userId</a> - The user ID to provide
--   recommendations for.
--   
--   Required for <tt>USER_PERSONALIZATION</tt> recipe type.
--   
--   <a>$sel:numResults:GetRecommendations'</a>,
--   <a>getRecommendations_numResults</a> - The number of results to
--   return. The default is 25. The maximum is 500.
--   
--   <a>$sel:filterArn:GetRecommendations'</a>,
--   <a>getRecommendations_filterArn</a> - The ARN of the filter to apply
--   to the returned recommendations. For more information, see
--   <a>Filtering Recommendations</a>.
--   
--   When using this parameter, be sure the filter resource is
--   <tt>ACTIVE</tt>.
--   
--   <a>$sel:filterValues:GetRecommendations'</a>,
--   <a>getRecommendations_filterValues</a> - The values to use when
--   filtering recommendations. For each placeholder parameter in your
--   filter expression, provide the parameter name (in matching case) as a
--   key and the filter value(s) as the corresponding value. Separate
--   multiple values for one parameter with a comma.
--   
--   For filter expressions that use an <tt>INCLUDE</tt> element to include
--   items, you must provide values for all parameters that are defined in
--   the expression. For filters with expressions that use an
--   <tt>EXCLUDE</tt> element to exclude items, you can omit the
--   <tt>filter-values</tt>.In this case, Amazon Personalize doesn't use
--   that portion of the expression to filter recommendations.
--   
--   For more information, see <a>Filtering Recommendations</a>.
--   
--   <a>$sel:campaignArn:GetRecommendations'</a>,
--   <a>getRecommendations_campaignArn</a> - The Amazon Resource Name (ARN)
--   of the campaign to use for getting recommendations.
newGetRecommendations :: Text -> GetRecommendations

-- | The contextual metadata to use when getting recommendations.
--   Contextual metadata includes any interaction information that might be
--   relevant when getting a user's recommendations, such as the user's
--   current location or device type.
getRecommendations_context :: Lens' GetRecommendations (Maybe (HashMap Text Text))

-- | The item ID to provide recommendations for.
--   
--   Required for <tt>RELATED_ITEMS</tt> recipe type.
getRecommendations_itemId :: Lens' GetRecommendations (Maybe Text)

-- | The user ID to provide recommendations for.
--   
--   Required for <tt>USER_PERSONALIZATION</tt> recipe type.
getRecommendations_userId :: Lens' GetRecommendations (Maybe Text)

-- | The number of results to return. The default is 25. The maximum is
--   500.
getRecommendations_numResults :: Lens' GetRecommendations (Maybe Natural)

-- | The ARN of the filter to apply to the returned recommendations. For
--   more information, see <a>Filtering Recommendations</a>.
--   
--   When using this parameter, be sure the filter resource is
--   <tt>ACTIVE</tt>.
getRecommendations_filterArn :: Lens' GetRecommendations (Maybe Text)

-- | The values to use when filtering recommendations. For each placeholder
--   parameter in your filter expression, provide the parameter name (in
--   matching case) as a key and the filter value(s) as the corresponding
--   value. Separate multiple values for one parameter with a comma.
--   
--   For filter expressions that use an <tt>INCLUDE</tt> element to include
--   items, you must provide values for all parameters that are defined in
--   the expression. For filters with expressions that use an
--   <tt>EXCLUDE</tt> element to exclude items, you can omit the
--   <tt>filter-values</tt>.In this case, Amazon Personalize doesn't use
--   that portion of the expression to filter recommendations.
--   
--   For more information, see <a>Filtering Recommendations</a>.
getRecommendations_filterValues :: Lens' GetRecommendations (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the campaign to use for getting
--   recommendations.
getRecommendations_campaignArn :: Lens' GetRecommendations Text

-- | <i>See:</i> <a>newGetRecommendationsResponse</a> smart constructor.
data GetRecommendationsResponse
GetRecommendationsResponse' :: Maybe Text -> Maybe [PredictedItem] -> Int -> GetRecommendationsResponse

-- | The ID of the recommendation.
[$sel:recommendationId:GetRecommendationsResponse'] :: GetRecommendationsResponse -> Maybe Text

-- | A list of recommendations sorted in ascending order by prediction
--   score. There can be a maximum of 500 items in the list.
[$sel:itemList:GetRecommendationsResponse'] :: GetRecommendationsResponse -> Maybe [PredictedItem]

-- | The response's http status code.
[$sel:httpStatus:GetRecommendationsResponse'] :: GetRecommendationsResponse -> Int

-- | Create a value of <a>GetRecommendationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recommendationId:GetRecommendationsResponse'</a>,
--   <a>getRecommendationsResponse_recommendationId</a> - The ID of the
--   recommendation.
--   
--   <a>$sel:itemList:GetRecommendationsResponse'</a>,
--   <a>getRecommendationsResponse_itemList</a> - A list of recommendations
--   sorted in ascending order by prediction score. There can be a maximum
--   of 500 items in the list.
--   
--   <a>$sel:httpStatus:GetRecommendationsResponse'</a>,
--   <a>getRecommendationsResponse_httpStatus</a> - The response's http
--   status code.
newGetRecommendationsResponse :: Int -> GetRecommendationsResponse

-- | The ID of the recommendation.
getRecommendationsResponse_recommendationId :: Lens' GetRecommendationsResponse (Maybe Text)

-- | A list of recommendations sorted in ascending order by prediction
--   score. There can be a maximum of 500 items in the list.
getRecommendationsResponse_itemList :: Lens' GetRecommendationsResponse (Maybe [PredictedItem])

-- | The response's http status code.
getRecommendationsResponse_httpStatus :: Lens' GetRecommendationsResponse Int
instance GHC.Generics.Generic Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendations
instance GHC.Show.Show Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendations
instance GHC.Classes.Eq Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendations
instance GHC.Generics.Generic Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendationsResponse
instance GHC.Show.Show Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendationsResponse
instance GHC.Read.Read Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendationsResponse
instance GHC.Classes.Eq Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendationsResponse
instance Amazonka.Types.AWSRequest Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendations
instance Control.DeepSeq.NFData Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendationsResponse
instance Data.Hashable.Class.Hashable Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendations
instance Control.DeepSeq.NFData Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendations
instance Amazonka.Data.Headers.ToHeaders Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendations
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendations
instance Amazonka.Data.Path.ToPath Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendations
instance Amazonka.Data.Query.ToQuery Amazonka.PersonalizeRuntime.GetRecommendations.GetRecommendations


-- | Re-ranks a list of recommended items for the given user. The first
--   item in the list is deemed the most likely item to be of interest to
--   the user.
--   
--   The solution backing the campaign must have been created using a
--   recipe of type PERSONALIZED_RANKING.
module Amazonka.PersonalizeRuntime.GetPersonalizedRanking

-- | <i>See:</i> <a>newGetPersonalizedRanking</a> smart constructor.
data GetPersonalizedRanking
GetPersonalizedRanking' :: Maybe (HashMap Text (Sensitive Text)) -> Maybe Text -> Maybe (HashMap Text (Sensitive Text)) -> Text -> [Text] -> Text -> GetPersonalizedRanking

-- | The contextual metadata to use when getting recommendations.
--   Contextual metadata includes any interaction information that might be
--   relevant when getting a user's recommendations, such as the user's
--   current location or device type.
[$sel:context:GetPersonalizedRanking'] :: GetPersonalizedRanking -> Maybe (HashMap Text (Sensitive Text))

-- | The Amazon Resource Name (ARN) of a filter you created to include
--   items or exclude items from recommendations for a given user. For more
--   information, see <a>Filtering Recommendations</a>.
[$sel:filterArn:GetPersonalizedRanking'] :: GetPersonalizedRanking -> Maybe Text

-- | The values to use when filtering recommendations. For each placeholder
--   parameter in your filter expression, provide the parameter name (in
--   matching case) as a key and the filter value(s) as the corresponding
--   value. Separate multiple values for one parameter with a comma.
--   
--   For filter expressions that use an <tt>INCLUDE</tt> element to include
--   items, you must provide values for all parameters that are defined in
--   the expression. For filters with expressions that use an
--   <tt>EXCLUDE</tt> element to exclude items, you can omit the
--   <tt>filter-values</tt>.In this case, Amazon Personalize doesn't use
--   that portion of the expression to filter recommendations.
--   
--   For more information, see <a>Filtering Recommendations</a>.
[$sel:filterValues:GetPersonalizedRanking'] :: GetPersonalizedRanking -> Maybe (HashMap Text (Sensitive Text))

-- | The Amazon Resource Name (ARN) of the campaign to use for generating
--   the personalized ranking.
[$sel:campaignArn:GetPersonalizedRanking'] :: GetPersonalizedRanking -> Text

-- | A list of items (by <tt>itemId</tt>) to rank. If an item was not
--   included in the training dataset, the item is appended to the end of
--   the reranked list. The maximum is 500.
[$sel:inputList:GetPersonalizedRanking'] :: GetPersonalizedRanking -> [Text]

-- | The user for which you want the campaign to provide a personalized
--   ranking.
[$sel:userId:GetPersonalizedRanking'] :: GetPersonalizedRanking -> Text

-- | Create a value of <a>GetPersonalizedRanking</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:context:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_context</a> - The contextual metadata to use
--   when getting recommendations. Contextual metadata includes any
--   interaction information that might be relevant when getting a user's
--   recommendations, such as the user's current location or device type.
--   
--   <a>$sel:filterArn:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_filterArn</a> - The Amazon Resource Name
--   (ARN) of a filter you created to include items or exclude items from
--   recommendations for a given user. For more information, see
--   <a>Filtering Recommendations</a>.
--   
--   <a>$sel:filterValues:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_filterValues</a> - The values to use when
--   filtering recommendations. For each placeholder parameter in your
--   filter expression, provide the parameter name (in matching case) as a
--   key and the filter value(s) as the corresponding value. Separate
--   multiple values for one parameter with a comma.
--   
--   For filter expressions that use an <tt>INCLUDE</tt> element to include
--   items, you must provide values for all parameters that are defined in
--   the expression. For filters with expressions that use an
--   <tt>EXCLUDE</tt> element to exclude items, you can omit the
--   <tt>filter-values</tt>.In this case, Amazon Personalize doesn't use
--   that portion of the expression to filter recommendations.
--   
--   For more information, see <a>Filtering Recommendations</a>.
--   
--   <a>$sel:campaignArn:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_campaignArn</a> - The Amazon Resource Name
--   (ARN) of the campaign to use for generating the personalized ranking.
--   
--   <a>$sel:inputList:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_inputList</a> - A list of items (by
--   <tt>itemId</tt>) to rank. If an item was not included in the training
--   dataset, the item is appended to the end of the reranked list. The
--   maximum is 500.
--   
--   <a>$sel:userId:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_userId</a> - The user for which you want the
--   campaign to provide a personalized ranking.
newGetPersonalizedRanking :: Text -> Text -> GetPersonalizedRanking

-- | The contextual metadata to use when getting recommendations.
--   Contextual metadata includes any interaction information that might be
--   relevant when getting a user's recommendations, such as the user's
--   current location or device type.
getPersonalizedRanking_context :: Lens' GetPersonalizedRanking (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of a filter you created to include
--   items or exclude items from recommendations for a given user. For more
--   information, see <a>Filtering Recommendations</a>.
getPersonalizedRanking_filterArn :: Lens' GetPersonalizedRanking (Maybe Text)

-- | The values to use when filtering recommendations. For each placeholder
--   parameter in your filter expression, provide the parameter name (in
--   matching case) as a key and the filter value(s) as the corresponding
--   value. Separate multiple values for one parameter with a comma.
--   
--   For filter expressions that use an <tt>INCLUDE</tt> element to include
--   items, you must provide values for all parameters that are defined in
--   the expression. For filters with expressions that use an
--   <tt>EXCLUDE</tt> element to exclude items, you can omit the
--   <tt>filter-values</tt>.In this case, Amazon Personalize doesn't use
--   that portion of the expression to filter recommendations.
--   
--   For more information, see <a>Filtering Recommendations</a>.
getPersonalizedRanking_filterValues :: Lens' GetPersonalizedRanking (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the campaign to use for generating
--   the personalized ranking.
getPersonalizedRanking_campaignArn :: Lens' GetPersonalizedRanking Text

-- | A list of items (by <tt>itemId</tt>) to rank. If an item was not
--   included in the training dataset, the item is appended to the end of
--   the reranked list. The maximum is 500.
getPersonalizedRanking_inputList :: Lens' GetPersonalizedRanking [Text]

-- | The user for which you want the campaign to provide a personalized
--   ranking.
getPersonalizedRanking_userId :: Lens' GetPersonalizedRanking Text

-- | <i>See:</i> <a>newGetPersonalizedRankingResponse</a> smart
--   constructor.
data GetPersonalizedRankingResponse
GetPersonalizedRankingResponse' :: Maybe [PredictedItem] -> Maybe Text -> Int -> GetPersonalizedRankingResponse

-- | A list of items in order of most likely interest to the user. The
--   maximum is 500.
[$sel:personalizedRanking:GetPersonalizedRankingResponse'] :: GetPersonalizedRankingResponse -> Maybe [PredictedItem]

-- | The ID of the recommendation.
[$sel:recommendationId:GetPersonalizedRankingResponse'] :: GetPersonalizedRankingResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetPersonalizedRankingResponse'] :: GetPersonalizedRankingResponse -> Int

-- | Create a value of <a>GetPersonalizedRankingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:personalizedRanking:GetPersonalizedRankingResponse'</a>,
--   <a>getPersonalizedRankingResponse_personalizedRanking</a> - A list of
--   items in order of most likely interest to the user. The maximum is
--   500.
--   
--   <a>$sel:recommendationId:GetPersonalizedRankingResponse'</a>,
--   <a>getPersonalizedRankingResponse_recommendationId</a> - The ID of the
--   recommendation.
--   
--   <a>$sel:httpStatus:GetPersonalizedRankingResponse'</a>,
--   <a>getPersonalizedRankingResponse_httpStatus</a> - The response's http
--   status code.
newGetPersonalizedRankingResponse :: Int -> GetPersonalizedRankingResponse

-- | A list of items in order of most likely interest to the user. The
--   maximum is 500.
getPersonalizedRankingResponse_personalizedRanking :: Lens' GetPersonalizedRankingResponse (Maybe [PredictedItem])

-- | The ID of the recommendation.
getPersonalizedRankingResponse_recommendationId :: Lens' GetPersonalizedRankingResponse (Maybe Text)

-- | The response's http status code.
getPersonalizedRankingResponse_httpStatus :: Lens' GetPersonalizedRankingResponse Int
instance GHC.Generics.Generic Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRanking
instance GHC.Show.Show Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRanking
instance GHC.Classes.Eq Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRanking
instance GHC.Generics.Generic Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRankingResponse
instance GHC.Show.Show Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRankingResponse
instance GHC.Read.Read Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRankingResponse
instance GHC.Classes.Eq Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRankingResponse
instance Amazonka.Types.AWSRequest Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRanking
instance Control.DeepSeq.NFData Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRankingResponse
instance Data.Hashable.Class.Hashable Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRanking
instance Control.DeepSeq.NFData Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRanking
instance Amazonka.Data.Headers.ToHeaders Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRanking
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRanking
instance Amazonka.Data.Path.ToPath Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRanking
instance Amazonka.Data.Query.ToQuery Amazonka.PersonalizeRuntime.GetPersonalizedRanking.GetPersonalizedRanking


module Amazonka.PersonalizeRuntime.Lens

-- | The contextual metadata to use when getting recommendations.
--   Contextual metadata includes any interaction information that might be
--   relevant when getting a user's recommendations, such as the user's
--   current location or device type.
getRecommendations_context :: Lens' GetRecommendations (Maybe (HashMap Text Text))

-- | The item ID to provide recommendations for.
--   
--   Required for <tt>RELATED_ITEMS</tt> recipe type.
getRecommendations_itemId :: Lens' GetRecommendations (Maybe Text)

-- | The user ID to provide recommendations for.
--   
--   Required for <tt>USER_PERSONALIZATION</tt> recipe type.
getRecommendations_userId :: Lens' GetRecommendations (Maybe Text)

-- | The number of results to return. The default is 25. The maximum is
--   500.
getRecommendations_numResults :: Lens' GetRecommendations (Maybe Natural)

-- | The ARN of the filter to apply to the returned recommendations. For
--   more information, see <a>Filtering Recommendations</a>.
--   
--   When using this parameter, be sure the filter resource is
--   <tt>ACTIVE</tt>.
getRecommendations_filterArn :: Lens' GetRecommendations (Maybe Text)

-- | The values to use when filtering recommendations. For each placeholder
--   parameter in your filter expression, provide the parameter name (in
--   matching case) as a key and the filter value(s) as the corresponding
--   value. Separate multiple values for one parameter with a comma.
--   
--   For filter expressions that use an <tt>INCLUDE</tt> element to include
--   items, you must provide values for all parameters that are defined in
--   the expression. For filters with expressions that use an
--   <tt>EXCLUDE</tt> element to exclude items, you can omit the
--   <tt>filter-values</tt>.In this case, Amazon Personalize doesn't use
--   that portion of the expression to filter recommendations.
--   
--   For more information, see <a>Filtering Recommendations</a>.
getRecommendations_filterValues :: Lens' GetRecommendations (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the campaign to use for getting
--   recommendations.
getRecommendations_campaignArn :: Lens' GetRecommendations Text

-- | The ID of the recommendation.
getRecommendationsResponse_recommendationId :: Lens' GetRecommendationsResponse (Maybe Text)

-- | A list of recommendations sorted in ascending order by prediction
--   score. There can be a maximum of 500 items in the list.
getRecommendationsResponse_itemList :: Lens' GetRecommendationsResponse (Maybe [PredictedItem])

-- | The response's http status code.
getRecommendationsResponse_httpStatus :: Lens' GetRecommendationsResponse Int

-- | The contextual metadata to use when getting recommendations.
--   Contextual metadata includes any interaction information that might be
--   relevant when getting a user's recommendations, such as the user's
--   current location or device type.
getPersonalizedRanking_context :: Lens' GetPersonalizedRanking (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of a filter you created to include
--   items or exclude items from recommendations for a given user. For more
--   information, see <a>Filtering Recommendations</a>.
getPersonalizedRanking_filterArn :: Lens' GetPersonalizedRanking (Maybe Text)

-- | The values to use when filtering recommendations. For each placeholder
--   parameter in your filter expression, provide the parameter name (in
--   matching case) as a key and the filter value(s) as the corresponding
--   value. Separate multiple values for one parameter with a comma.
--   
--   For filter expressions that use an <tt>INCLUDE</tt> element to include
--   items, you must provide values for all parameters that are defined in
--   the expression. For filters with expressions that use an
--   <tt>EXCLUDE</tt> element to exclude items, you can omit the
--   <tt>filter-values</tt>.In this case, Amazon Personalize doesn't use
--   that portion of the expression to filter recommendations.
--   
--   For more information, see <a>Filtering Recommendations</a>.
getPersonalizedRanking_filterValues :: Lens' GetPersonalizedRanking (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the campaign to use for generating
--   the personalized ranking.
getPersonalizedRanking_campaignArn :: Lens' GetPersonalizedRanking Text

-- | A list of items (by <tt>itemId</tt>) to rank. If an item was not
--   included in the training dataset, the item is appended to the end of
--   the reranked list. The maximum is 500.
getPersonalizedRanking_inputList :: Lens' GetPersonalizedRanking [Text]

-- | The user for which you want the campaign to provide a personalized
--   ranking.
getPersonalizedRanking_userId :: Lens' GetPersonalizedRanking Text

-- | A list of items in order of most likely interest to the user. The
--   maximum is 500.
getPersonalizedRankingResponse_personalizedRanking :: Lens' GetPersonalizedRankingResponse (Maybe [PredictedItem])

-- | The ID of the recommendation.
getPersonalizedRankingResponse_recommendationId :: Lens' GetPersonalizedRankingResponse (Maybe Text)

-- | The response's http status code.
getPersonalizedRankingResponse_httpStatus :: Lens' GetPersonalizedRankingResponse Int

-- | A numeric representation of the model's certainty that the item will
--   be the next user selection. For more information on scoring logic, see
--   how-scores-work.
predictedItem_score :: Lens' PredictedItem (Maybe Double)

-- | The recommended item ID.
predictedItem_itemId :: Lens' PredictedItem (Maybe Text)


module Amazonka.PersonalizeRuntime.Waiters


-- | Derived from API version <tt>2018-05-22</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
module Amazonka.PersonalizeRuntime

-- | API version <tt>2018-05-22</tt> of the Amazon Personalize Runtime SDK
--   configuration.
defaultService :: Service

-- | Provide a valid value for the field or parameter.
_InvalidInputException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetRecommendations</a> smart constructor.
data GetRecommendations
GetRecommendations' :: Maybe (HashMap Text (Sensitive Text)) -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe (HashMap Text (Sensitive Text)) -> Text -> GetRecommendations

-- | Create a value of <a>GetRecommendations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:context:GetRecommendations'</a>,
--   <a>getRecommendations_context</a> - The contextual metadata to use
--   when getting recommendations. Contextual metadata includes any
--   interaction information that might be relevant when getting a user's
--   recommendations, such as the user's current location or device type.
--   
--   <a>$sel:itemId:GetRecommendations'</a>,
--   <a>getRecommendations_itemId</a> - The item ID to provide
--   recommendations for.
--   
--   Required for <tt>RELATED_ITEMS</tt> recipe type.
--   
--   <a>$sel:userId:GetRecommendations'</a>,
--   <a>getRecommendations_userId</a> - The user ID to provide
--   recommendations for.
--   
--   Required for <tt>USER_PERSONALIZATION</tt> recipe type.
--   
--   <a>$sel:numResults:GetRecommendations'</a>,
--   <a>getRecommendations_numResults</a> - The number of results to
--   return. The default is 25. The maximum is 500.
--   
--   <a>$sel:filterArn:GetRecommendations'</a>,
--   <a>getRecommendations_filterArn</a> - The ARN of the filter to apply
--   to the returned recommendations. For more information, see
--   <a>Filtering Recommendations</a>.
--   
--   When using this parameter, be sure the filter resource is
--   <tt>ACTIVE</tt>.
--   
--   <a>$sel:filterValues:GetRecommendations'</a>,
--   <a>getRecommendations_filterValues</a> - The values to use when
--   filtering recommendations. For each placeholder parameter in your
--   filter expression, provide the parameter name (in matching case) as a
--   key and the filter value(s) as the corresponding value. Separate
--   multiple values for one parameter with a comma.
--   
--   For filter expressions that use an <tt>INCLUDE</tt> element to include
--   items, you must provide values for all parameters that are defined in
--   the expression. For filters with expressions that use an
--   <tt>EXCLUDE</tt> element to exclude items, you can omit the
--   <tt>filter-values</tt>.In this case, Amazon Personalize doesn't use
--   that portion of the expression to filter recommendations.
--   
--   For more information, see <a>Filtering Recommendations</a>.
--   
--   <a>$sel:campaignArn:GetRecommendations'</a>,
--   <a>getRecommendations_campaignArn</a> - The Amazon Resource Name (ARN)
--   of the campaign to use for getting recommendations.
newGetRecommendations :: Text -> GetRecommendations

-- | <i>See:</i> <a>newGetRecommendationsResponse</a> smart constructor.
data GetRecommendationsResponse
GetRecommendationsResponse' :: Maybe Text -> Maybe [PredictedItem] -> Int -> GetRecommendationsResponse

-- | Create a value of <a>GetRecommendationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recommendationId:GetRecommendationsResponse'</a>,
--   <a>getRecommendationsResponse_recommendationId</a> - The ID of the
--   recommendation.
--   
--   <a>$sel:itemList:GetRecommendationsResponse'</a>,
--   <a>getRecommendationsResponse_itemList</a> - A list of recommendations
--   sorted in ascending order by prediction score. There can be a maximum
--   of 500 items in the list.
--   
--   <a>$sel:httpStatus:GetRecommendationsResponse'</a>,
--   <a>getRecommendationsResponse_httpStatus</a> - The response's http
--   status code.
newGetRecommendationsResponse :: Int -> GetRecommendationsResponse

-- | <i>See:</i> <a>newGetPersonalizedRanking</a> smart constructor.
data GetPersonalizedRanking
GetPersonalizedRanking' :: Maybe (HashMap Text (Sensitive Text)) -> Maybe Text -> Maybe (HashMap Text (Sensitive Text)) -> Text -> [Text] -> Text -> GetPersonalizedRanking

-- | Create a value of <a>GetPersonalizedRanking</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:context:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_context</a> - The contextual metadata to use
--   when getting recommendations. Contextual metadata includes any
--   interaction information that might be relevant when getting a user's
--   recommendations, such as the user's current location or device type.
--   
--   <a>$sel:filterArn:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_filterArn</a> - The Amazon Resource Name
--   (ARN) of a filter you created to include items or exclude items from
--   recommendations for a given user. For more information, see
--   <a>Filtering Recommendations</a>.
--   
--   <a>$sel:filterValues:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_filterValues</a> - The values to use when
--   filtering recommendations. For each placeholder parameter in your
--   filter expression, provide the parameter name (in matching case) as a
--   key and the filter value(s) as the corresponding value. Separate
--   multiple values for one parameter with a comma.
--   
--   For filter expressions that use an <tt>INCLUDE</tt> element to include
--   items, you must provide values for all parameters that are defined in
--   the expression. For filters with expressions that use an
--   <tt>EXCLUDE</tt> element to exclude items, you can omit the
--   <tt>filter-values</tt>.In this case, Amazon Personalize doesn't use
--   that portion of the expression to filter recommendations.
--   
--   For more information, see <a>Filtering Recommendations</a>.
--   
--   <a>$sel:campaignArn:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_campaignArn</a> - The Amazon Resource Name
--   (ARN) of the campaign to use for generating the personalized ranking.
--   
--   <a>$sel:inputList:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_inputList</a> - A list of items (by
--   <tt>itemId</tt>) to rank. If an item was not included in the training
--   dataset, the item is appended to the end of the reranked list. The
--   maximum is 500.
--   
--   <a>$sel:userId:GetPersonalizedRanking'</a>,
--   <a>getPersonalizedRanking_userId</a> - The user for which you want the
--   campaign to provide a personalized ranking.
newGetPersonalizedRanking :: Text -> Text -> GetPersonalizedRanking

-- | <i>See:</i> <a>newGetPersonalizedRankingResponse</a> smart
--   constructor.
data GetPersonalizedRankingResponse
GetPersonalizedRankingResponse' :: Maybe [PredictedItem] -> Maybe Text -> Int -> GetPersonalizedRankingResponse

-- | Create a value of <a>GetPersonalizedRankingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:personalizedRanking:GetPersonalizedRankingResponse'</a>,
--   <a>getPersonalizedRankingResponse_personalizedRanking</a> - A list of
--   items in order of most likely interest to the user. The maximum is
--   500.
--   
--   <a>$sel:recommendationId:GetPersonalizedRankingResponse'</a>,
--   <a>getPersonalizedRankingResponse_recommendationId</a> - The ID of the
--   recommendation.
--   
--   <a>$sel:httpStatus:GetPersonalizedRankingResponse'</a>,
--   <a>getPersonalizedRankingResponse_httpStatus</a> - The response's http
--   status code.
newGetPersonalizedRankingResponse :: Int -> GetPersonalizedRankingResponse

-- | An object that identifies an item.
--   
--   The and APIs return a list of <tt>PredictedItem</tt>s.
--   
--   <i>See:</i> <a>newPredictedItem</a> smart constructor.
data PredictedItem
PredictedItem' :: Maybe Double -> Maybe Text -> PredictedItem

-- | Create a value of <a>PredictedItem</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:score:PredictedItem'</a>, <a>predictedItem_score</a> - A
--   numeric representation of the model's certainty that the item will be
--   the next user selection. For more information on scoring logic, see
--   how-scores-work.
--   
--   <a>$sel:itemId:PredictedItem'</a>, <a>predictedItem_itemId</a> - The
--   recommended item ID.
newPredictedItem :: PredictedItem
