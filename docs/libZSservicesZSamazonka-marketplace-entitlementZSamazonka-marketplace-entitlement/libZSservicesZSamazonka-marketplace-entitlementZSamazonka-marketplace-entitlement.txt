-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-marketplace-entitlementZSamazonka-marketplace-entitlement
@version 1.6.1


module Network.AWS.MarketplaceEntitlement.Types.EntitlementValue

-- | The EntitlementValue represents the amount of capacity that the
--   customer is entitled to for the product.
--   
--   <i>See:</i> <a>newEntitlementValue</a> smart constructor.
data EntitlementValue
EntitlementValue' :: Maybe Double -> Maybe Text -> Maybe Bool -> Maybe Int -> EntitlementValue

-- | The DoubleValue field will be populated with a double value when the
--   entitlement is a double type. Otherwise, the field will not be set.
[$sel:doubleValue:EntitlementValue'] :: EntitlementValue -> Maybe Double

-- | The StringValue field will be populated with a string value when the
--   entitlement is a string type. Otherwise, the field will not be set.
[$sel:stringValue:EntitlementValue'] :: EntitlementValue -> Maybe Text

-- | The BooleanValue field will be populated with a boolean value when the
--   entitlement is a boolean type. Otherwise, the field will not be set.
[$sel:booleanValue:EntitlementValue'] :: EntitlementValue -> Maybe Bool

-- | The IntegerValue field will be populated with an integer value when
--   the entitlement is an integer type. Otherwise, the field will not be
--   set.
[$sel:integerValue:EntitlementValue'] :: EntitlementValue -> Maybe Int

-- | Create a value of <a>EntitlementValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:doubleValue:EntitlementValue'</a>,
--   <a>entitlementValue_doubleValue</a> - The DoubleValue field will be
--   populated with a double value when the entitlement is a double type.
--   Otherwise, the field will not be set.
--   
--   <a>$sel:stringValue:EntitlementValue'</a>,
--   <a>entitlementValue_stringValue</a> - The StringValue field will be
--   populated with a string value when the entitlement is a string type.
--   Otherwise, the field will not be set.
--   
--   <a>$sel:booleanValue:EntitlementValue'</a>,
--   <a>entitlementValue_booleanValue</a> - The BooleanValue field will be
--   populated with a boolean value when the entitlement is a boolean type.
--   Otherwise, the field will not be set.
--   
--   <a>$sel:integerValue:EntitlementValue'</a>,
--   <a>entitlementValue_integerValue</a> - The IntegerValue field will be
--   populated with an integer value when the entitlement is an integer
--   type. Otherwise, the field will not be set.
newEntitlementValue :: EntitlementValue

-- | The DoubleValue field will be populated with a double value when the
--   entitlement is a double type. Otherwise, the field will not be set.
entitlementValue_doubleValue :: Lens' EntitlementValue (Maybe Double)

-- | The StringValue field will be populated with a string value when the
--   entitlement is a string type. Otherwise, the field will not be set.
entitlementValue_stringValue :: Lens' EntitlementValue (Maybe Text)

-- | The BooleanValue field will be populated with a boolean value when the
--   entitlement is a boolean type. Otherwise, the field will not be set.
entitlementValue_booleanValue :: Lens' EntitlementValue (Maybe Bool)

-- | The IntegerValue field will be populated with an integer value when
--   the entitlement is an integer type. Otherwise, the field will not be
--   set.
entitlementValue_integerValue :: Lens' EntitlementValue (Maybe Int)
instance GHC.Generics.Generic Network.AWS.MarketplaceEntitlement.Types.EntitlementValue.EntitlementValue
instance GHC.Show.Show Network.AWS.MarketplaceEntitlement.Types.EntitlementValue.EntitlementValue
instance GHC.Read.Read Network.AWS.MarketplaceEntitlement.Types.EntitlementValue.EntitlementValue
instance GHC.Classes.Eq Network.AWS.MarketplaceEntitlement.Types.EntitlementValue.EntitlementValue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MarketplaceEntitlement.Types.EntitlementValue.EntitlementValue
instance Data.Hashable.Class.Hashable Network.AWS.MarketplaceEntitlement.Types.EntitlementValue.EntitlementValue
instance Control.DeepSeq.NFData Network.AWS.MarketplaceEntitlement.Types.EntitlementValue.EntitlementValue


module Network.AWS.MarketplaceEntitlement.Types.Entitlement

-- | An entitlement represents capacity in a product owned by the customer.
--   For example, a customer might own some number of users or seats in an
--   SaaS application or some amount of data capacity in a multi-tenant
--   database.
--   
--   <i>See:</i> <a>newEntitlement</a> smart constructor.
data Entitlement
Entitlement' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EntitlementValue -> Maybe Text -> Entitlement

-- | The expiration date represents the minimum date through which this
--   entitlement is expected to remain valid. For contractual products
--   listed on AWS Marketplace, the expiration date is the date at which
--   the customer will renew or cancel their contract. Customers who are
--   opting to renew their contract will still have entitlements with an
--   expiration date.
[$sel:expirationDate:Entitlement'] :: Entitlement -> Maybe POSIX

-- | The customer identifier is a handle to each unique customer in an
--   application. Customer identifiers are obtained through the
--   ResolveCustomer operation in AWS Marketplace Metering Service.
[$sel:customerIdentifier:Entitlement'] :: Entitlement -> Maybe Text

-- | The product code for which the given entitlement applies. Product
--   codes are provided by AWS Marketplace when the product listing is
--   created.
[$sel:productCode:Entitlement'] :: Entitlement -> Maybe Text

-- | The EntitlementValue represents the amount of capacity that the
--   customer is entitled to for the product.
[$sel:value:Entitlement'] :: Entitlement -> Maybe EntitlementValue

-- | The dimension for which the given entitlement applies. Dimensions
--   represent categories of capacity in a product and are specified when
--   the product is listed in AWS Marketplace.
[$sel:dimension:Entitlement'] :: Entitlement -> Maybe Text

-- | Create a value of <a>Entitlement</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expirationDate:Entitlement'</a>,
--   <a>entitlement_expirationDate</a> - The expiration date represents the
--   minimum date through which this entitlement is expected to remain
--   valid. For contractual products listed on AWS Marketplace, the
--   expiration date is the date at which the customer will renew or cancel
--   their contract. Customers who are opting to renew their contract will
--   still have entitlements with an expiration date.
--   
--   <a>$sel:customerIdentifier:Entitlement'</a>,
--   <a>entitlement_customerIdentifier</a> - The customer identifier is a
--   handle to each unique customer in an application. Customer identifiers
--   are obtained through the ResolveCustomer operation in AWS Marketplace
--   Metering Service.
--   
--   <a>$sel:productCode:Entitlement'</a>, <a>entitlement_productCode</a> -
--   The product code for which the given entitlement applies. Product
--   codes are provided by AWS Marketplace when the product listing is
--   created.
--   
--   <a>$sel:value:Entitlement'</a>, <a>entitlement_value</a> - The
--   EntitlementValue represents the amount of capacity that the customer
--   is entitled to for the product.
--   
--   <a>$sel:dimension:Entitlement'</a>, <a>entitlement_dimension</a> - The
--   dimension for which the given entitlement applies. Dimensions
--   represent categories of capacity in a product and are specified when
--   the product is listed in AWS Marketplace.
newEntitlement :: Entitlement

-- | The expiration date represents the minimum date through which this
--   entitlement is expected to remain valid. For contractual products
--   listed on AWS Marketplace, the expiration date is the date at which
--   the customer will renew or cancel their contract. Customers who are
--   opting to renew their contract will still have entitlements with an
--   expiration date.
entitlement_expirationDate :: Lens' Entitlement (Maybe UTCTime)

-- | The customer identifier is a handle to each unique customer in an
--   application. Customer identifiers are obtained through the
--   ResolveCustomer operation in AWS Marketplace Metering Service.
entitlement_customerIdentifier :: Lens' Entitlement (Maybe Text)

-- | The product code for which the given entitlement applies. Product
--   codes are provided by AWS Marketplace when the product listing is
--   created.
entitlement_productCode :: Lens' Entitlement (Maybe Text)

-- | The EntitlementValue represents the amount of capacity that the
--   customer is entitled to for the product.
entitlement_value :: Lens' Entitlement (Maybe EntitlementValue)

-- | The dimension for which the given entitlement applies. Dimensions
--   represent categories of capacity in a product and are specified when
--   the product is listed in AWS Marketplace.
entitlement_dimension :: Lens' Entitlement (Maybe Text)
instance GHC.Generics.Generic Network.AWS.MarketplaceEntitlement.Types.Entitlement.Entitlement
instance GHC.Show.Show Network.AWS.MarketplaceEntitlement.Types.Entitlement.Entitlement
instance GHC.Read.Read Network.AWS.MarketplaceEntitlement.Types.Entitlement.Entitlement
instance GHC.Classes.Eq Network.AWS.MarketplaceEntitlement.Types.Entitlement.Entitlement
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MarketplaceEntitlement.Types.Entitlement.Entitlement
instance Data.Hashable.Class.Hashable Network.AWS.MarketplaceEntitlement.Types.Entitlement.Entitlement
instance Control.DeepSeq.NFData Network.AWS.MarketplaceEntitlement.Types.Entitlement.Entitlement


module Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName
newtype GetEntitlementFilterName
GetEntitlementFilterName' :: Text -> GetEntitlementFilterName
[fromGetEntitlementFilterName] :: GetEntitlementFilterName -> Text
pattern GetEntitlementFilterName_CUSTOMER_IDENTIFIER :: GetEntitlementFilterName
pattern GetEntitlementFilterName_DIMENSION :: GetEntitlementFilterName
instance Network.AWS.Data.XML.ToXML Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Network.AWS.Data.XML.FromXML Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Network.AWS.Data.Query.ToQuery Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Network.AWS.Data.Headers.ToHeader Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Network.AWS.Data.Log.ToLog Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Network.AWS.Data.Text.ToText Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Network.AWS.Data.Text.FromText Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Control.DeepSeq.NFData Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance Data.Hashable.Class.Hashable Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance GHC.Generics.Generic Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance GHC.Classes.Ord Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance GHC.Classes.Eq Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance GHC.Read.Read Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName
instance GHC.Show.Show Network.AWS.MarketplaceEntitlement.Types.GetEntitlementFilterName.GetEntitlementFilterName


module Network.AWS.MarketplaceEntitlement.Types

-- | API version <tt>2017-01-11</tt> of the Amazon Marketplace Entitlement
--   Service SDK configuration.
defaultService :: Service

-- | The calls to the GetEntitlements API are throttled.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters in your request was invalid.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal error has occurred. Retry your request. If the problem
--   persists, post a message with details on the AWS forums.
_InternalServiceErrorException :: AsError a => Getting (First ServiceError) a ServiceError
newtype GetEntitlementFilterName
GetEntitlementFilterName' :: Text -> GetEntitlementFilterName
[fromGetEntitlementFilterName] :: GetEntitlementFilterName -> Text
pattern GetEntitlementFilterName_CUSTOMER_IDENTIFIER :: GetEntitlementFilterName
pattern GetEntitlementFilterName_DIMENSION :: GetEntitlementFilterName

-- | An entitlement represents capacity in a product owned by the customer.
--   For example, a customer might own some number of users or seats in an
--   SaaS application or some amount of data capacity in a multi-tenant
--   database.
--   
--   <i>See:</i> <a>newEntitlement</a> smart constructor.
data Entitlement
Entitlement' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EntitlementValue -> Maybe Text -> Entitlement

-- | The expiration date represents the minimum date through which this
--   entitlement is expected to remain valid. For contractual products
--   listed on AWS Marketplace, the expiration date is the date at which
--   the customer will renew or cancel their contract. Customers who are
--   opting to renew their contract will still have entitlements with an
--   expiration date.
[$sel:expirationDate:Entitlement'] :: Entitlement -> Maybe POSIX

-- | The customer identifier is a handle to each unique customer in an
--   application. Customer identifiers are obtained through the
--   ResolveCustomer operation in AWS Marketplace Metering Service.
[$sel:customerIdentifier:Entitlement'] :: Entitlement -> Maybe Text

-- | The product code for which the given entitlement applies. Product
--   codes are provided by AWS Marketplace when the product listing is
--   created.
[$sel:productCode:Entitlement'] :: Entitlement -> Maybe Text

-- | The EntitlementValue represents the amount of capacity that the
--   customer is entitled to for the product.
[$sel:value:Entitlement'] :: Entitlement -> Maybe EntitlementValue

-- | The dimension for which the given entitlement applies. Dimensions
--   represent categories of capacity in a product and are specified when
--   the product is listed in AWS Marketplace.
[$sel:dimension:Entitlement'] :: Entitlement -> Maybe Text

-- | Create a value of <a>Entitlement</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expirationDate:Entitlement'</a>,
--   <a>entitlement_expirationDate</a> - The expiration date represents the
--   minimum date through which this entitlement is expected to remain
--   valid. For contractual products listed on AWS Marketplace, the
--   expiration date is the date at which the customer will renew or cancel
--   their contract. Customers who are opting to renew their contract will
--   still have entitlements with an expiration date.
--   
--   <a>$sel:customerIdentifier:Entitlement'</a>,
--   <a>entitlement_customerIdentifier</a> - The customer identifier is a
--   handle to each unique customer in an application. Customer identifiers
--   are obtained through the ResolveCustomer operation in AWS Marketplace
--   Metering Service.
--   
--   <a>$sel:productCode:Entitlement'</a>, <a>entitlement_productCode</a> -
--   The product code for which the given entitlement applies. Product
--   codes are provided by AWS Marketplace when the product listing is
--   created.
--   
--   <a>$sel:value:Entitlement'</a>, <a>entitlement_value</a> - The
--   EntitlementValue represents the amount of capacity that the customer
--   is entitled to for the product.
--   
--   <a>$sel:dimension:Entitlement'</a>, <a>entitlement_dimension</a> - The
--   dimension for which the given entitlement applies. Dimensions
--   represent categories of capacity in a product and are specified when
--   the product is listed in AWS Marketplace.
newEntitlement :: Entitlement

-- | The expiration date represents the minimum date through which this
--   entitlement is expected to remain valid. For contractual products
--   listed on AWS Marketplace, the expiration date is the date at which
--   the customer will renew or cancel their contract. Customers who are
--   opting to renew their contract will still have entitlements with an
--   expiration date.
entitlement_expirationDate :: Lens' Entitlement (Maybe UTCTime)

-- | The customer identifier is a handle to each unique customer in an
--   application. Customer identifiers are obtained through the
--   ResolveCustomer operation in AWS Marketplace Metering Service.
entitlement_customerIdentifier :: Lens' Entitlement (Maybe Text)

-- | The product code for which the given entitlement applies. Product
--   codes are provided by AWS Marketplace when the product listing is
--   created.
entitlement_productCode :: Lens' Entitlement (Maybe Text)

-- | The EntitlementValue represents the amount of capacity that the
--   customer is entitled to for the product.
entitlement_value :: Lens' Entitlement (Maybe EntitlementValue)

-- | The dimension for which the given entitlement applies. Dimensions
--   represent categories of capacity in a product and are specified when
--   the product is listed in AWS Marketplace.
entitlement_dimension :: Lens' Entitlement (Maybe Text)

-- | The EntitlementValue represents the amount of capacity that the
--   customer is entitled to for the product.
--   
--   <i>See:</i> <a>newEntitlementValue</a> smart constructor.
data EntitlementValue
EntitlementValue' :: Maybe Double -> Maybe Text -> Maybe Bool -> Maybe Int -> EntitlementValue

-- | The DoubleValue field will be populated with a double value when the
--   entitlement is a double type. Otherwise, the field will not be set.
[$sel:doubleValue:EntitlementValue'] :: EntitlementValue -> Maybe Double

-- | The StringValue field will be populated with a string value when the
--   entitlement is a string type. Otherwise, the field will not be set.
[$sel:stringValue:EntitlementValue'] :: EntitlementValue -> Maybe Text

-- | The BooleanValue field will be populated with a boolean value when the
--   entitlement is a boolean type. Otherwise, the field will not be set.
[$sel:booleanValue:EntitlementValue'] :: EntitlementValue -> Maybe Bool

-- | The IntegerValue field will be populated with an integer value when
--   the entitlement is an integer type. Otherwise, the field will not be
--   set.
[$sel:integerValue:EntitlementValue'] :: EntitlementValue -> Maybe Int

-- | Create a value of <a>EntitlementValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:doubleValue:EntitlementValue'</a>,
--   <a>entitlementValue_doubleValue</a> - The DoubleValue field will be
--   populated with a double value when the entitlement is a double type.
--   Otherwise, the field will not be set.
--   
--   <a>$sel:stringValue:EntitlementValue'</a>,
--   <a>entitlementValue_stringValue</a> - The StringValue field will be
--   populated with a string value when the entitlement is a string type.
--   Otherwise, the field will not be set.
--   
--   <a>$sel:booleanValue:EntitlementValue'</a>,
--   <a>entitlementValue_booleanValue</a> - The BooleanValue field will be
--   populated with a boolean value when the entitlement is a boolean type.
--   Otherwise, the field will not be set.
--   
--   <a>$sel:integerValue:EntitlementValue'</a>,
--   <a>entitlementValue_integerValue</a> - The IntegerValue field will be
--   populated with an integer value when the entitlement is an integer
--   type. Otherwise, the field will not be set.
newEntitlementValue :: EntitlementValue

-- | The DoubleValue field will be populated with a double value when the
--   entitlement is a double type. Otherwise, the field will not be set.
entitlementValue_doubleValue :: Lens' EntitlementValue (Maybe Double)

-- | The StringValue field will be populated with a string value when the
--   entitlement is a string type. Otherwise, the field will not be set.
entitlementValue_stringValue :: Lens' EntitlementValue (Maybe Text)

-- | The BooleanValue field will be populated with a boolean value when the
--   entitlement is a boolean type. Otherwise, the field will not be set.
entitlementValue_booleanValue :: Lens' EntitlementValue (Maybe Bool)

-- | The IntegerValue field will be populated with an integer value when
--   the entitlement is an integer type. Otherwise, the field will not be
--   set.
entitlementValue_integerValue :: Lens' EntitlementValue (Maybe Int)


-- | GetEntitlements retrieves entitlement values for a given product. The
--   results can be filtered based on customer identifier or product
--   dimensions.
--   
--   This operation returns paginated results.
module Network.AWS.MarketplaceEntitlement.GetEntitlements

-- | The GetEntitlementsRequest contains parameters for the GetEntitlements
--   operation.
--   
--   <i>See:</i> <a>newGetEntitlements</a> smart constructor.
data GetEntitlements
GetEntitlements' :: Maybe Text -> Maybe Int -> Maybe (HashMap GetEntitlementFilterName (NonEmpty Text)) -> Text -> GetEntitlements

-- | For paginated calls to GetEntitlements, pass the NextToken from the
--   previous GetEntitlementsResult.
[$sel:nextToken:GetEntitlements'] :: GetEntitlements -> Maybe Text

-- | The maximum number of items to retrieve from the GetEntitlements
--   operation. For pagination, use the NextToken field in subsequent calls
--   to GetEntitlements.
[$sel:maxResults:GetEntitlements'] :: GetEntitlements -> Maybe Int

-- | Filter is used to return entitlements for a specific customer or for a
--   specific dimension. Filters are described as keys mapped to a lists of
--   values. Filtered requests are <i>unioned</i> for each value in the
--   value list, and then <i>intersected</i> for each filter key.
[$sel:filter':GetEntitlements'] :: GetEntitlements -> Maybe (HashMap GetEntitlementFilterName (NonEmpty Text))

-- | Product code is used to uniquely identify a product in AWS
--   Marketplace. The product code will be provided by AWS Marketplace when
--   the product listing is created.
[$sel:productCode:GetEntitlements'] :: GetEntitlements -> Text

-- | Create a value of <a>GetEntitlements</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetEntitlements'</a>,
--   <a>getEntitlements_nextToken</a> - For paginated calls to
--   GetEntitlements, pass the NextToken from the previous
--   GetEntitlementsResult.
--   
--   <a>$sel:maxResults:GetEntitlements'</a>,
--   <a>getEntitlements_maxResults</a> - The maximum number of items to
--   retrieve from the GetEntitlements operation. For pagination, use the
--   NextToken field in subsequent calls to GetEntitlements.
--   
--   <a>$sel:filter':GetEntitlements'</a>, <a>getEntitlements_filter</a> -
--   Filter is used to return entitlements for a specific customer or for a
--   specific dimension. Filters are described as keys mapped to a lists of
--   values. Filtered requests are <i>unioned</i> for each value in the
--   value list, and then <i>intersected</i> for each filter key.
--   
--   <a>$sel:productCode:GetEntitlements'</a>,
--   <a>getEntitlements_productCode</a> - Product code is used to uniquely
--   identify a product in AWS Marketplace. The product code will be
--   provided by AWS Marketplace when the product listing is created.
newGetEntitlements :: Text -> GetEntitlements

-- | For paginated calls to GetEntitlements, pass the NextToken from the
--   previous GetEntitlementsResult.
getEntitlements_nextToken :: Lens' GetEntitlements (Maybe Text)

-- | The maximum number of items to retrieve from the GetEntitlements
--   operation. For pagination, use the NextToken field in subsequent calls
--   to GetEntitlements.
getEntitlements_maxResults :: Lens' GetEntitlements (Maybe Int)

-- | Filter is used to return entitlements for a specific customer or for a
--   specific dimension. Filters are described as keys mapped to a lists of
--   values. Filtered requests are <i>unioned</i> for each value in the
--   value list, and then <i>intersected</i> for each filter key.
getEntitlements_filter :: Lens' GetEntitlements (Maybe (HashMap GetEntitlementFilterName (NonEmpty Text)))

-- | Product code is used to uniquely identify a product in AWS
--   Marketplace. The product code will be provided by AWS Marketplace when
--   the product listing is created.
getEntitlements_productCode :: Lens' GetEntitlements Text

-- | The GetEntitlementsRequest contains results from the GetEntitlements
--   operation.
--   
--   <i>See:</i> <a>newGetEntitlementsResponse</a> smart constructor.
data GetEntitlementsResponse
GetEntitlementsResponse' :: Maybe Text -> Maybe [Entitlement] -> Int -> GetEntitlementsResponse

-- | For paginated results, use NextToken in subsequent calls to
--   GetEntitlements. If the result contains an empty set of entitlements,
--   NextToken might still be present and should be used.
[$sel:nextToken:GetEntitlementsResponse'] :: GetEntitlementsResponse -> Maybe Text

-- | The set of entitlements found through the GetEntitlements operation.
--   If the result contains an empty set of entitlements, NextToken might
--   still be present and should be used.
[$sel:entitlements:GetEntitlementsResponse'] :: GetEntitlementsResponse -> Maybe [Entitlement]

-- | The response's http status code.
[$sel:httpStatus:GetEntitlementsResponse'] :: GetEntitlementsResponse -> Int

-- | Create a value of <a>GetEntitlementsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetEntitlements'</a>,
--   <a>getEntitlementsResponse_nextToken</a> - For paginated results, use
--   NextToken in subsequent calls to GetEntitlements. If the result
--   contains an empty set of entitlements, NextToken might still be
--   present and should be used.
--   
--   <a>$sel:entitlements:GetEntitlementsResponse'</a>,
--   <a>getEntitlementsResponse_entitlements</a> - The set of entitlements
--   found through the GetEntitlements operation. If the result contains an
--   empty set of entitlements, NextToken might still be present and should
--   be used.
--   
--   <a>$sel:httpStatus:GetEntitlementsResponse'</a>,
--   <a>getEntitlementsResponse_httpStatus</a> - The response's http status
--   code.
newGetEntitlementsResponse :: Int -> GetEntitlementsResponse

-- | For paginated results, use NextToken in subsequent calls to
--   GetEntitlements. If the result contains an empty set of entitlements,
--   NextToken might still be present and should be used.
getEntitlementsResponse_nextToken :: Lens' GetEntitlementsResponse (Maybe Text)

-- | The set of entitlements found through the GetEntitlements operation.
--   If the result contains an empty set of entitlements, NextToken might
--   still be present and should be used.
getEntitlementsResponse_entitlements :: Lens' GetEntitlementsResponse (Maybe [Entitlement])

-- | The response's http status code.
getEntitlementsResponse_httpStatus :: Lens' GetEntitlementsResponse Int
instance GHC.Generics.Generic Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements
instance GHC.Show.Show Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements
instance GHC.Read.Read Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements
instance GHC.Classes.Eq Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements
instance GHC.Generics.Generic Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlementsResponse
instance GHC.Show.Show Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlementsResponse
instance GHC.Read.Read Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlementsResponse
instance GHC.Classes.Eq Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlementsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements
instance Control.DeepSeq.NFData Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlementsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements
instance Data.Hashable.Class.Hashable Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements
instance Control.DeepSeq.NFData Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements
instance Network.AWS.Data.Path.ToPath Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements
instance Network.AWS.Data.Query.ToQuery Network.AWS.MarketplaceEntitlement.GetEntitlements.GetEntitlements


module Network.AWS.MarketplaceEntitlement.Lens

-- | For paginated calls to GetEntitlements, pass the NextToken from the
--   previous GetEntitlementsResult.
getEntitlements_nextToken :: Lens' GetEntitlements (Maybe Text)

-- | The maximum number of items to retrieve from the GetEntitlements
--   operation. For pagination, use the NextToken field in subsequent calls
--   to GetEntitlements.
getEntitlements_maxResults :: Lens' GetEntitlements (Maybe Int)

-- | Filter is used to return entitlements for a specific customer or for a
--   specific dimension. Filters are described as keys mapped to a lists of
--   values. Filtered requests are <i>unioned</i> for each value in the
--   value list, and then <i>intersected</i> for each filter key.
getEntitlements_filter :: Lens' GetEntitlements (Maybe (HashMap GetEntitlementFilterName (NonEmpty Text)))

-- | Product code is used to uniquely identify a product in AWS
--   Marketplace. The product code will be provided by AWS Marketplace when
--   the product listing is created.
getEntitlements_productCode :: Lens' GetEntitlements Text

-- | For paginated results, use NextToken in subsequent calls to
--   GetEntitlements. If the result contains an empty set of entitlements,
--   NextToken might still be present and should be used.
getEntitlementsResponse_nextToken :: Lens' GetEntitlementsResponse (Maybe Text)

-- | The set of entitlements found through the GetEntitlements operation.
--   If the result contains an empty set of entitlements, NextToken might
--   still be present and should be used.
getEntitlementsResponse_entitlements :: Lens' GetEntitlementsResponse (Maybe [Entitlement])

-- | The response's http status code.
getEntitlementsResponse_httpStatus :: Lens' GetEntitlementsResponse Int

-- | The expiration date represents the minimum date through which this
--   entitlement is expected to remain valid. For contractual products
--   listed on AWS Marketplace, the expiration date is the date at which
--   the customer will renew or cancel their contract. Customers who are
--   opting to renew their contract will still have entitlements with an
--   expiration date.
entitlement_expirationDate :: Lens' Entitlement (Maybe UTCTime)

-- | The customer identifier is a handle to each unique customer in an
--   application. Customer identifiers are obtained through the
--   ResolveCustomer operation in AWS Marketplace Metering Service.
entitlement_customerIdentifier :: Lens' Entitlement (Maybe Text)

-- | The product code for which the given entitlement applies. Product
--   codes are provided by AWS Marketplace when the product listing is
--   created.
entitlement_productCode :: Lens' Entitlement (Maybe Text)

-- | The EntitlementValue represents the amount of capacity that the
--   customer is entitled to for the product.
entitlement_value :: Lens' Entitlement (Maybe EntitlementValue)

-- | The dimension for which the given entitlement applies. Dimensions
--   represent categories of capacity in a product and are specified when
--   the product is listed in AWS Marketplace.
entitlement_dimension :: Lens' Entitlement (Maybe Text)

-- | The DoubleValue field will be populated with a double value when the
--   entitlement is a double type. Otherwise, the field will not be set.
entitlementValue_doubleValue :: Lens' EntitlementValue (Maybe Double)

-- | The StringValue field will be populated with a string value when the
--   entitlement is a string type. Otherwise, the field will not be set.
entitlementValue_stringValue :: Lens' EntitlementValue (Maybe Text)

-- | The BooleanValue field will be populated with a boolean value when the
--   entitlement is a boolean type. Otherwise, the field will not be set.
entitlementValue_booleanValue :: Lens' EntitlementValue (Maybe Bool)

-- | The IntegerValue field will be populated with an integer value when
--   the entitlement is an integer type. Otherwise, the field will not be
--   set.
entitlementValue_integerValue :: Lens' EntitlementValue (Maybe Int)


module Network.AWS.MarketplaceEntitlement.Waiters


-- | Derived from API version <tt>2017-01-11</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS Marketplace Entitlement Service
--   
--   This reference provides descriptions of the AWS Marketplace
--   Entitlement Service API.
--   
--   AWS Marketplace Entitlement Service is used to determine the
--   entitlement of a customer to a given product. An entitlement
--   represents capacity in a product owned by the customer. For example, a
--   customer might own some number of users or seats in an SaaS
--   application or some amount of data capacity in a multi-tenant
--   database.
--   
--   <b>Getting Entitlement Records</b>
--   
--   <ul>
--   <li><i>GetEntitlements</i>- Gets the entitlements for a Marketplace
--   product.</li>
--   </ul>
module Network.AWS.MarketplaceEntitlement

-- | API version <tt>2017-01-11</tt> of the Amazon Marketplace Entitlement
--   Service SDK configuration.
defaultService :: Service

-- | The calls to the GetEntitlements API are throttled.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | One or more parameters in your request was invalid.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal error has occurred. Retry your request. If the problem
--   persists, post a message with details on the AWS forums.
_InternalServiceErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The GetEntitlementsRequest contains parameters for the GetEntitlements
--   operation.
--   
--   <i>See:</i> <a>newGetEntitlements</a> smart constructor.
data GetEntitlements
GetEntitlements' :: Maybe Text -> Maybe Int -> Maybe (HashMap GetEntitlementFilterName (NonEmpty Text)) -> Text -> GetEntitlements

-- | Create a value of <a>GetEntitlements</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetEntitlements'</a>,
--   <a>getEntitlements_nextToken</a> - For paginated calls to
--   GetEntitlements, pass the NextToken from the previous
--   GetEntitlementsResult.
--   
--   <a>$sel:maxResults:GetEntitlements'</a>,
--   <a>getEntitlements_maxResults</a> - The maximum number of items to
--   retrieve from the GetEntitlements operation. For pagination, use the
--   NextToken field in subsequent calls to GetEntitlements.
--   
--   <a>$sel:filter':GetEntitlements'</a>, <a>getEntitlements_filter</a> -
--   Filter is used to return entitlements for a specific customer or for a
--   specific dimension. Filters are described as keys mapped to a lists of
--   values. Filtered requests are <i>unioned</i> for each value in the
--   value list, and then <i>intersected</i> for each filter key.
--   
--   <a>$sel:productCode:GetEntitlements'</a>,
--   <a>getEntitlements_productCode</a> - Product code is used to uniquely
--   identify a product in AWS Marketplace. The product code will be
--   provided by AWS Marketplace when the product listing is created.
newGetEntitlements :: Text -> GetEntitlements

-- | The GetEntitlementsRequest contains results from the GetEntitlements
--   operation.
--   
--   <i>See:</i> <a>newGetEntitlementsResponse</a> smart constructor.
data GetEntitlementsResponse
GetEntitlementsResponse' :: Maybe Text -> Maybe [Entitlement] -> Int -> GetEntitlementsResponse

-- | Create a value of <a>GetEntitlementsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetEntitlements'</a>,
--   <a>getEntitlementsResponse_nextToken</a> - For paginated results, use
--   NextToken in subsequent calls to GetEntitlements. If the result
--   contains an empty set of entitlements, NextToken might still be
--   present and should be used.
--   
--   <a>$sel:entitlements:GetEntitlementsResponse'</a>,
--   <a>getEntitlementsResponse_entitlements</a> - The set of entitlements
--   found through the GetEntitlements operation. If the result contains an
--   empty set of entitlements, NextToken might still be present and should
--   be used.
--   
--   <a>$sel:httpStatus:GetEntitlementsResponse'</a>,
--   <a>getEntitlementsResponse_httpStatus</a> - The response's http status
--   code.
newGetEntitlementsResponse :: Int -> GetEntitlementsResponse
newtype GetEntitlementFilterName
GetEntitlementFilterName' :: Text -> GetEntitlementFilterName
[fromGetEntitlementFilterName] :: GetEntitlementFilterName -> Text
pattern GetEntitlementFilterName_CUSTOMER_IDENTIFIER :: GetEntitlementFilterName
pattern GetEntitlementFilterName_DIMENSION :: GetEntitlementFilterName

-- | An entitlement represents capacity in a product owned by the customer.
--   For example, a customer might own some number of users or seats in an
--   SaaS application or some amount of data capacity in a multi-tenant
--   database.
--   
--   <i>See:</i> <a>newEntitlement</a> smart constructor.
data Entitlement
Entitlement' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe EntitlementValue -> Maybe Text -> Entitlement

-- | Create a value of <a>Entitlement</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expirationDate:Entitlement'</a>,
--   <a>entitlement_expirationDate</a> - The expiration date represents the
--   minimum date through which this entitlement is expected to remain
--   valid. For contractual products listed on AWS Marketplace, the
--   expiration date is the date at which the customer will renew or cancel
--   their contract. Customers who are opting to renew their contract will
--   still have entitlements with an expiration date.
--   
--   <a>$sel:customerIdentifier:Entitlement'</a>,
--   <a>entitlement_customerIdentifier</a> - The customer identifier is a
--   handle to each unique customer in an application. Customer identifiers
--   are obtained through the ResolveCustomer operation in AWS Marketplace
--   Metering Service.
--   
--   <a>$sel:productCode:Entitlement'</a>, <a>entitlement_productCode</a> -
--   The product code for which the given entitlement applies. Product
--   codes are provided by AWS Marketplace when the product listing is
--   created.
--   
--   <a>$sel:value:Entitlement'</a>, <a>entitlement_value</a> - The
--   EntitlementValue represents the amount of capacity that the customer
--   is entitled to for the product.
--   
--   <a>$sel:dimension:Entitlement'</a>, <a>entitlement_dimension</a> - The
--   dimension for which the given entitlement applies. Dimensions
--   represent categories of capacity in a product and are specified when
--   the product is listed in AWS Marketplace.
newEntitlement :: Entitlement

-- | The EntitlementValue represents the amount of capacity that the
--   customer is entitled to for the product.
--   
--   <i>See:</i> <a>newEntitlementValue</a> smart constructor.
data EntitlementValue
EntitlementValue' :: Maybe Double -> Maybe Text -> Maybe Bool -> Maybe Int -> EntitlementValue

-- | Create a value of <a>EntitlementValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:doubleValue:EntitlementValue'</a>,
--   <a>entitlementValue_doubleValue</a> - The DoubleValue field will be
--   populated with a double value when the entitlement is a double type.
--   Otherwise, the field will not be set.
--   
--   <a>$sel:stringValue:EntitlementValue'</a>,
--   <a>entitlementValue_stringValue</a> - The StringValue field will be
--   populated with a string value when the entitlement is a string type.
--   Otherwise, the field will not be set.
--   
--   <a>$sel:booleanValue:EntitlementValue'</a>,
--   <a>entitlementValue_booleanValue</a> - The BooleanValue field will be
--   populated with a boolean value when the entitlement is a boolean type.
--   Otherwise, the field will not be set.
--   
--   <a>$sel:integerValue:EntitlementValue'</a>,
--   <a>entitlementValue_integerValue</a> - The IntegerValue field will be
--   populated with an integer value when the entitlement is an integer
--   type. Otherwise, the field will not be set.
newEntitlementValue :: EntitlementValue
