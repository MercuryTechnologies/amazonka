-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-iot-analyticsZSamazonka-iot-analytics
@version 2.0


module Amazonka.IoTAnalytics.Types.AddAttributesActivity

-- | An activity that adds other attributes based on existing attributes in
--   the message.
--   
--   <i>See:</i> <a>newAddAttributesActivity</a> smart constructor.
data AddAttributesActivity
AddAttributesActivity' :: Maybe Text -> Text -> HashMap Text Text -> AddAttributesActivity

-- | The next activity in the pipeline.
[$sel:next:AddAttributesActivity'] :: AddAttributesActivity -> Maybe Text

-- | The name of the addAttributes activity.
[$sel:name:AddAttributesActivity'] :: AddAttributesActivity -> Text

-- | A list of 1-50 <tt>AttributeNameMapping</tt> objects that map an
--   existing attribute to a new attribute.
--   
--   The existing attributes remain in the message, so if you want to
--   remove the originals, use <tt>RemoveAttributeActivity</tt>.
[$sel:attributes:AddAttributesActivity'] :: AddAttributesActivity -> HashMap Text Text

-- | Create a value of <a>AddAttributesActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:AddAttributesActivity'</a>,
--   <a>addAttributesActivity_next</a> - The next activity in the pipeline.
--   
--   <a>$sel:name:AddAttributesActivity'</a>,
--   <a>addAttributesActivity_name</a> - The name of the addAttributes
--   activity.
--   
--   <a>$sel:attributes:AddAttributesActivity'</a>,
--   <a>addAttributesActivity_attributes</a> - A list of 1-50
--   <tt>AttributeNameMapping</tt> objects that map an existing attribute
--   to a new attribute.
--   
--   The existing attributes remain in the message, so if you want to
--   remove the originals, use <tt>RemoveAttributeActivity</tt>.
newAddAttributesActivity :: Text -> AddAttributesActivity

-- | The next activity in the pipeline.
addAttributesActivity_next :: Lens' AddAttributesActivity (Maybe Text)

-- | The name of the addAttributes activity.
addAttributesActivity_name :: Lens' AddAttributesActivity Text

-- | A list of 1-50 <tt>AttributeNameMapping</tt> objects that map an
--   existing attribute to a new attribute.
--   
--   The existing attributes remain in the message, so if you want to
--   remove the originals, use <tt>RemoveAttributeActivity</tt>.
addAttributesActivity_attributes :: Lens' AddAttributesActivity (HashMap Text Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.AddAttributesActivity.AddAttributesActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.AddAttributesActivity.AddAttributesActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.AddAttributesActivity.AddAttributesActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.AddAttributesActivity.AddAttributesActivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.AddAttributesActivity.AddAttributesActivity
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.AddAttributesActivity.AddAttributesActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.AddAttributesActivity.AddAttributesActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.AddAttributesActivity.AddAttributesActivity


module Amazonka.IoTAnalytics.Types.BatchPutMessageErrorEntry

-- | Contains informations about errors.
--   
--   <i>See:</i> <a>newBatchPutMessageErrorEntry</a> smart constructor.
data BatchPutMessageErrorEntry
BatchPutMessageErrorEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchPutMessageErrorEntry

-- | The code associated with the error.
[$sel:errorCode:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe Text

-- | The message associated with the error.
[$sel:errorMessage:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe Text

-- | The ID of the message that caused the error. See the value
--   corresponding to the <tt>messageId</tt> key in the message object.
[$sel:messageId:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe Text

-- | Create a value of <a>BatchPutMessageErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorCode</a> - The code associated with
--   the error.
--   
--   <a>$sel:errorMessage:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorMessage</a> - The message associated
--   with the error.
--   
--   <a>$sel:messageId:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_messageId</a> - The ID of the message
--   that caused the error. See the value corresponding to the
--   <tt>messageId</tt> key in the message object.
newBatchPutMessageErrorEntry :: BatchPutMessageErrorEntry

-- | The code associated with the error.
batchPutMessageErrorEntry_errorCode :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | The message associated with the error.
batchPutMessageErrorEntry_errorMessage :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | The ID of the message that caused the error. See the value
--   corresponding to the <tt>messageId</tt> key in the message object.
batchPutMessageErrorEntry_messageId :: Lens' BatchPutMessageErrorEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.BatchPutMessageErrorEntry.BatchPutMessageErrorEntry


module Amazonka.IoTAnalytics.Types.ChannelActivity

-- | The activity that determines the source of the messages to be
--   processed.
--   
--   <i>See:</i> <a>newChannelActivity</a> smart constructor.
data ChannelActivity
ChannelActivity' :: Maybe Text -> Text -> Text -> ChannelActivity

-- | The next activity in the pipeline.
[$sel:next:ChannelActivity'] :: ChannelActivity -> Maybe Text

-- | The name of the channel activity.
[$sel:name:ChannelActivity'] :: ChannelActivity -> Text

-- | The name of the channel from which the messages are processed.
[$sel:channelName:ChannelActivity'] :: ChannelActivity -> Text

-- | Create a value of <a>ChannelActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:ChannelActivity'</a>, <a>channelActivity_next</a> - The
--   next activity in the pipeline.
--   
--   <a>$sel:name:ChannelActivity'</a>, <a>channelActivity_name</a> - The
--   name of the channel activity.
--   
--   <a>$sel:channelName:ChannelActivity'</a>,
--   <a>channelActivity_channelName</a> - The name of the channel from
--   which the messages are processed.
newChannelActivity :: Text -> Text -> ChannelActivity

-- | The next activity in the pipeline.
channelActivity_next :: Lens' ChannelActivity (Maybe Text)

-- | The name of the channel activity.
channelActivity_name :: Lens' ChannelActivity Text

-- | The name of the channel from which the messages are processed.
channelActivity_channelName :: Lens' ChannelActivity Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ChannelActivity.ChannelActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ChannelActivity.ChannelActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ChannelActivity.ChannelActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ChannelActivity.ChannelActivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ChannelActivity.ChannelActivity
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ChannelActivity.ChannelActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ChannelActivity.ChannelActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.ChannelActivity.ChannelActivity


module Amazonka.IoTAnalytics.Types.ChannelMessages

-- | Specifies one or more sets of channel messages.
--   
--   <i>See:</i> <a>newChannelMessages</a> smart constructor.
data ChannelMessages
ChannelMessages' :: Maybe (NonEmpty Text) -> ChannelMessages

-- | Specifies one or more keys that identify the Amazon Simple Storage
--   Service (Amazon S3) objects that save your channel messages.
--   
--   You must use the full path for the key.
--   
--   Example path: <tt>channel/mychannel/__dt=2020-02-29
--   00:00:00/1582940490000_1582940520000_123456789012_mychannel_0_2118.0.json.gz</tt>
[$sel:s3Paths:ChannelMessages'] :: ChannelMessages -> Maybe (NonEmpty Text)

-- | Create a value of <a>ChannelMessages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Paths:ChannelMessages'</a>, <a>channelMessages_s3Paths</a> -
--   Specifies one or more keys that identify the Amazon Simple Storage
--   Service (Amazon S3) objects that save your channel messages.
--   
--   You must use the full path for the key.
--   
--   Example path: <tt>channel/mychannel/__dt=2020-02-29
--   00:00:00/1582940490000_1582940520000_123456789012_mychannel_0_2118.0.json.gz</tt>
newChannelMessages :: ChannelMessages

-- | Specifies one or more keys that identify the Amazon Simple Storage
--   Service (Amazon S3) objects that save your channel messages.
--   
--   You must use the full path for the key.
--   
--   Example path: <tt>channel/mychannel/__dt=2020-02-29
--   00:00:00/1582940490000_1582940520000_123456789012_mychannel_0_2118.0.json.gz</tt>
channelMessages_s3Paths :: Lens' ChannelMessages (Maybe (NonEmpty Text))
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ChannelMessages.ChannelMessages
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ChannelMessages.ChannelMessages
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ChannelMessages.ChannelMessages
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ChannelMessages.ChannelMessages
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ChannelMessages.ChannelMessages
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ChannelMessages.ChannelMessages
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.ChannelMessages.ChannelMessages


module Amazonka.IoTAnalytics.Types.ChannelStatus
newtype ChannelStatus
ChannelStatus' :: Text -> ChannelStatus
[fromChannelStatus] :: ChannelStatus -> Text
pattern ChannelStatus_ACTIVE :: ChannelStatus
pattern ChannelStatus_CREATING :: ChannelStatus
pattern ChannelStatus_DELETING :: ChannelStatus
instance Amazonka.Data.XML.ToXML Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Amazonka.Data.XML.FromXML Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Amazonka.Data.Log.ToLog Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Amazonka.Data.Text.ToText Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Amazonka.Data.Text.FromText Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance GHC.Classes.Ord Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ChannelStatus.ChannelStatus


module Amazonka.IoTAnalytics.Types.Column

-- | Contains information about a column that stores your data.
--   
--   <i>See:</i> <a>newColumn</a> smart constructor.
data Column
Column' :: Text -> Text -> Column

-- | The name of the column.
[$sel:name:Column'] :: Column -> Text

-- | The type of data. For more information about the supported data types,
--   see <a>Common data types</a> in the <i>Glue Developer Guide</i>.
[$sel:type':Column'] :: Column -> Text

-- | Create a value of <a>Column</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Column'</a>, <a>column_name</a> - The name of the column.
--   
--   <a>$sel:type':Column'</a>, <a>column_type</a> - The type of data. For
--   more information about the supported data types, see <a>Common data
--   types</a> in the <i>Glue Developer Guide</i>.
newColumn :: Text -> Text -> Column

-- | The name of the column.
column_name :: Lens' Column Text

-- | The type of data. For more information about the supported data types,
--   see <a>Common data types</a> in the <i>Glue Developer Guide</i>.
column_type :: Lens' Column Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.Column.Column
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.Column.Column
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.Column.Column
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.Column.Column
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.Column.Column
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.Column.Column
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.Column.Column
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.Column.Column


module Amazonka.IoTAnalytics.Types.ComputeType
newtype ComputeType
ComputeType' :: Text -> ComputeType
[fromComputeType] :: ComputeType -> Text
pattern ComputeType_ACU_1 :: ComputeType
pattern ComputeType_ACU_2 :: ComputeType
instance Amazonka.Data.XML.ToXML Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Amazonka.Data.XML.FromXML Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Amazonka.Data.Log.ToLog Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Amazonka.Data.Text.ToText Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Amazonka.Data.Text.FromText Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance GHC.Classes.Ord Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ComputeType.ComputeType
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ComputeType.ComputeType


module Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3Storage

-- | Used to store channel data in an S3 bucket that you manage. If
--   customer-managed storage is selected, the <tt>retentionPeriod</tt>
--   parameter is ignored. You can't change the choice of S3 storage after
--   the data store is created.
--   
--   <i>See:</i> <a>newCustomerManagedChannelS3Storage</a> smart
--   constructor.
data CustomerManagedChannelS3Storage
CustomerManagedChannelS3Storage' :: Maybe Text -> Text -> Text -> CustomerManagedChannelS3Storage

-- | (Optional) The prefix used to create the keys of the channel data
--   objects. Each object in an S3 bucket has a key that is its unique
--   identifier in the bucket. Each object in a bucket has exactly one key.
--   The prefix must end with a forward slash (/).
[$sel:keyPrefix:CustomerManagedChannelS3Storage'] :: CustomerManagedChannelS3Storage -> Maybe Text

-- | The name of the S3 bucket in which channel data is stored.
[$sel:bucket:CustomerManagedChannelS3Storage'] :: CustomerManagedChannelS3Storage -> Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
[$sel:roleArn:CustomerManagedChannelS3Storage'] :: CustomerManagedChannelS3Storage -> Text

-- | Create a value of <a>CustomerManagedChannelS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPrefix:CustomerManagedChannelS3Storage'</a>,
--   <a>customerManagedChannelS3Storage_keyPrefix</a> - (Optional) The
--   prefix used to create the keys of the channel data objects. Each
--   object in an S3 bucket has a key that is its unique identifier in the
--   bucket. Each object in a bucket has exactly one key. The prefix must
--   end with a forward slash (/).
--   
--   <a>$sel:bucket:CustomerManagedChannelS3Storage'</a>,
--   <a>customerManagedChannelS3Storage_bucket</a> - The name of the S3
--   bucket in which channel data is stored.
--   
--   <a>$sel:roleArn:CustomerManagedChannelS3Storage'</a>,
--   <a>customerManagedChannelS3Storage_roleArn</a> - The ARN of the role
--   that grants IoT Analytics permission to interact with your Amazon S3
--   resources.
newCustomerManagedChannelS3Storage :: Text -> Text -> CustomerManagedChannelS3Storage

-- | (Optional) The prefix used to create the keys of the channel data
--   objects. Each object in an S3 bucket has a key that is its unique
--   identifier in the bucket. Each object in a bucket has exactly one key.
--   The prefix must end with a forward slash (/).
customerManagedChannelS3Storage_keyPrefix :: Lens' CustomerManagedChannelS3Storage (Maybe Text)

-- | The name of the S3 bucket in which channel data is stored.
customerManagedChannelS3Storage_bucket :: Lens' CustomerManagedChannelS3Storage Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedChannelS3Storage_roleArn :: Lens' CustomerManagedChannelS3Storage Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3Storage.CustomerManagedChannelS3Storage
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3Storage.CustomerManagedChannelS3Storage
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3Storage.CustomerManagedChannelS3Storage
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3Storage.CustomerManagedChannelS3Storage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3Storage.CustomerManagedChannelS3Storage
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3Storage.CustomerManagedChannelS3Storage
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3Storage.CustomerManagedChannelS3Storage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3Storage.CustomerManagedChannelS3Storage


module Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3StorageSummary

-- | Used to store channel data in an S3 bucket that you manage.
--   
--   <i>See:</i> <a>newCustomerManagedChannelS3StorageSummary</a> smart
--   constructor.
data CustomerManagedChannelS3StorageSummary
CustomerManagedChannelS3StorageSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> CustomerManagedChannelS3StorageSummary

-- | The name of the S3 bucket in which channel data is stored.
[$sel:bucket:CustomerManagedChannelS3StorageSummary'] :: CustomerManagedChannelS3StorageSummary -> Maybe Text

-- | (Optional) The prefix used to create the keys of the channel data
--   objects. Each object in an S3 bucket has a key that is its unique
--   identifier within the bucket (each object in a bucket has exactly one
--   key). The prefix must end with a forward slash (/).
[$sel:keyPrefix:CustomerManagedChannelS3StorageSummary'] :: CustomerManagedChannelS3StorageSummary -> Maybe Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
[$sel:roleArn:CustomerManagedChannelS3StorageSummary'] :: CustomerManagedChannelS3StorageSummary -> Maybe Text

-- | Create a value of <a>CustomerManagedChannelS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:CustomerManagedChannelS3StorageSummary'</a>,
--   <a>customerManagedChannelS3StorageSummary_bucket</a> - The name of the
--   S3 bucket in which channel data is stored.
--   
--   <a>$sel:keyPrefix:CustomerManagedChannelS3StorageSummary'</a>,
--   <a>customerManagedChannelS3StorageSummary_keyPrefix</a> - (Optional)
--   The prefix used to create the keys of the channel data objects. Each
--   object in an S3 bucket has a key that is its unique identifier within
--   the bucket (each object in a bucket has exactly one key). The prefix
--   must end with a forward slash (/).
--   
--   <a>$sel:roleArn:CustomerManagedChannelS3StorageSummary'</a>,
--   <a>customerManagedChannelS3StorageSummary_roleArn</a> - The ARN of the
--   role that grants IoT Analytics permission to interact with your Amazon
--   S3 resources.
newCustomerManagedChannelS3StorageSummary :: CustomerManagedChannelS3StorageSummary

-- | The name of the S3 bucket in which channel data is stored.
customerManagedChannelS3StorageSummary_bucket :: Lens' CustomerManagedChannelS3StorageSummary (Maybe Text)

-- | (Optional) The prefix used to create the keys of the channel data
--   objects. Each object in an S3 bucket has a key that is its unique
--   identifier within the bucket (each object in a bucket has exactly one
--   key). The prefix must end with a forward slash (/).
customerManagedChannelS3StorageSummary_keyPrefix :: Lens' CustomerManagedChannelS3StorageSummary (Maybe Text)

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedChannelS3StorageSummary_roleArn :: Lens' CustomerManagedChannelS3StorageSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3StorageSummary.CustomerManagedChannelS3StorageSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3StorageSummary.CustomerManagedChannelS3StorageSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3StorageSummary.CustomerManagedChannelS3StorageSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3StorageSummary.CustomerManagedChannelS3StorageSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3StorageSummary.CustomerManagedChannelS3StorageSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3StorageSummary.CustomerManagedChannelS3StorageSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.CustomerManagedChannelS3StorageSummary.CustomerManagedChannelS3StorageSummary


module Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3Storage

-- | S3-customer-managed; When you choose customer-managed storage, the
--   <tt>retentionPeriod</tt> parameter is ignored. You can't change the
--   choice of Amazon S3 storage after your data store is created.
--   
--   <i>See:</i> <a>newCustomerManagedDatastoreS3Storage</a> smart
--   constructor.
data CustomerManagedDatastoreS3Storage
CustomerManagedDatastoreS3Storage' :: Maybe Text -> Text -> Text -> CustomerManagedDatastoreS3Storage

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
[$sel:keyPrefix:CustomerManagedDatastoreS3Storage'] :: CustomerManagedDatastoreS3Storage -> Maybe Text

-- | The name of the Amazon S3 bucket where your data is stored.
[$sel:bucket:CustomerManagedDatastoreS3Storage'] :: CustomerManagedDatastoreS3Storage -> Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
[$sel:roleArn:CustomerManagedDatastoreS3Storage'] :: CustomerManagedDatastoreS3Storage -> Text

-- | Create a value of <a>CustomerManagedDatastoreS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPrefix:CustomerManagedDatastoreS3Storage'</a>,
--   <a>customerManagedDatastoreS3Storage_keyPrefix</a> - (Optional) The
--   prefix used to create the keys of the data store data objects. Each
--   object in an Amazon S3 bucket has a key that is its unique identifier
--   in the bucket. Each object in a bucket has exactly one key. The prefix
--   must end with a forward slash (/).
--   
--   <a>$sel:bucket:CustomerManagedDatastoreS3Storage'</a>,
--   <a>customerManagedDatastoreS3Storage_bucket</a> - The name of the
--   Amazon S3 bucket where your data is stored.
--   
--   <a>$sel:roleArn:CustomerManagedDatastoreS3Storage'</a>,
--   <a>customerManagedDatastoreS3Storage_roleArn</a> - The ARN of the role
--   that grants IoT Analytics permission to interact with your Amazon S3
--   resources.
newCustomerManagedDatastoreS3Storage :: Text -> Text -> CustomerManagedDatastoreS3Storage

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
customerManagedDatastoreS3Storage_keyPrefix :: Lens' CustomerManagedDatastoreS3Storage (Maybe Text)

-- | The name of the Amazon S3 bucket where your data is stored.
customerManagedDatastoreS3Storage_bucket :: Lens' CustomerManagedDatastoreS3Storage Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedDatastoreS3Storage_roleArn :: Lens' CustomerManagedDatastoreS3Storage Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3Storage.CustomerManagedDatastoreS3Storage
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3Storage.CustomerManagedDatastoreS3Storage
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3Storage.CustomerManagedDatastoreS3Storage
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3Storage.CustomerManagedDatastoreS3Storage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3Storage.CustomerManagedDatastoreS3Storage
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3Storage.CustomerManagedDatastoreS3Storage
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3Storage.CustomerManagedDatastoreS3Storage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3Storage.CustomerManagedDatastoreS3Storage


module Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3StorageSummary

-- | Contains information about the data store that you manage.
--   
--   <i>See:</i> <a>newCustomerManagedDatastoreS3StorageSummary</a> smart
--   constructor.
data CustomerManagedDatastoreS3StorageSummary
CustomerManagedDatastoreS3StorageSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> CustomerManagedDatastoreS3StorageSummary

-- | The name of the Amazon S3 bucket where your data is stored.
[$sel:bucket:CustomerManagedDatastoreS3StorageSummary'] :: CustomerManagedDatastoreS3StorageSummary -> Maybe Text

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
[$sel:keyPrefix:CustomerManagedDatastoreS3StorageSummary'] :: CustomerManagedDatastoreS3StorageSummary -> Maybe Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
[$sel:roleArn:CustomerManagedDatastoreS3StorageSummary'] :: CustomerManagedDatastoreS3StorageSummary -> Maybe Text

-- | Create a value of <a>CustomerManagedDatastoreS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:CustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>customerManagedDatastoreS3StorageSummary_bucket</a> - The name of
--   the Amazon S3 bucket where your data is stored.
--   
--   <a>$sel:keyPrefix:CustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>customerManagedDatastoreS3StorageSummary_keyPrefix</a> - (Optional)
--   The prefix used to create the keys of the data store data objects.
--   Each object in an Amazon S3 bucket has a key that is its unique
--   identifier in the bucket. Each object in a bucket has exactly one key.
--   The prefix must end with a forward slash (/).
--   
--   <a>$sel:roleArn:CustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>customerManagedDatastoreS3StorageSummary_roleArn</a> - The ARN of
--   the role that grants IoT Analytics permission to interact with your
--   Amazon S3 resources.
newCustomerManagedDatastoreS3StorageSummary :: CustomerManagedDatastoreS3StorageSummary

-- | The name of the Amazon S3 bucket where your data is stored.
customerManagedDatastoreS3StorageSummary_bucket :: Lens' CustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
customerManagedDatastoreS3StorageSummary_keyPrefix :: Lens' CustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedDatastoreS3StorageSummary_roleArn :: Lens' CustomerManagedDatastoreS3StorageSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3StorageSummary.CustomerManagedDatastoreS3StorageSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3StorageSummary.CustomerManagedDatastoreS3StorageSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3StorageSummary.CustomerManagedDatastoreS3StorageSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3StorageSummary.CustomerManagedDatastoreS3StorageSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3StorageSummary.CustomerManagedDatastoreS3StorageSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3StorageSummary.CustomerManagedDatastoreS3StorageSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.CustomerManagedDatastoreS3StorageSummary.CustomerManagedDatastoreS3StorageSummary


module Amazonka.IoTAnalytics.Types.DatasetActionType
newtype DatasetActionType
DatasetActionType' :: Text -> DatasetActionType
[fromDatasetActionType] :: DatasetActionType -> Text
pattern DatasetActionType_CONTAINER :: DatasetActionType
pattern DatasetActionType_QUERY :: DatasetActionType
instance Amazonka.Data.XML.ToXML Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Amazonka.Data.XML.FromXML Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Amazonka.Data.Log.ToLog Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Amazonka.Data.Text.ToText Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Amazonka.Data.Text.FromText Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance GHC.Classes.Ord Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetActionType.DatasetActionType


module Amazonka.IoTAnalytics.Types.DatasetActionSummary

-- | Information about the action that automatically creates the dataset's
--   contents.
--   
--   <i>See:</i> <a>newDatasetActionSummary</a> smart constructor.
data DatasetActionSummary
DatasetActionSummary' :: Maybe Text -> Maybe DatasetActionType -> DatasetActionSummary

-- | The name of the action that automatically creates the dataset's
--   contents.
[$sel:actionName:DatasetActionSummary'] :: DatasetActionSummary -> Maybe Text

-- | The type of action by which the dataset's contents are automatically
--   created.
[$sel:actionType:DatasetActionSummary'] :: DatasetActionSummary -> Maybe DatasetActionType

-- | Create a value of <a>DatasetActionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionName:DatasetActionSummary'</a>,
--   <a>datasetActionSummary_actionName</a> - The name of the action that
--   automatically creates the dataset's contents.
--   
--   <a>$sel:actionType:DatasetActionSummary'</a>,
--   <a>datasetActionSummary_actionType</a> - The type of action by which
--   the dataset's contents are automatically created.
newDatasetActionSummary :: DatasetActionSummary

-- | The name of the action that automatically creates the dataset's
--   contents.
datasetActionSummary_actionName :: Lens' DatasetActionSummary (Maybe Text)

-- | The type of action by which the dataset's contents are automatically
--   created.
datasetActionSummary_actionType :: Lens' DatasetActionSummary (Maybe DatasetActionType)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetActionSummary.DatasetActionSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetActionSummary.DatasetActionSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetActionSummary.DatasetActionSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetActionSummary.DatasetActionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetActionSummary.DatasetActionSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetActionSummary.DatasetActionSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetActionSummary.DatasetActionSummary


module Amazonka.IoTAnalytics.Types.DatasetContentState
newtype DatasetContentState
DatasetContentState' :: Text -> DatasetContentState
[fromDatasetContentState] :: DatasetContentState -> Text
pattern DatasetContentState_CREATING :: DatasetContentState
pattern DatasetContentState_FAILED :: DatasetContentState
pattern DatasetContentState_SUCCEEDED :: DatasetContentState
instance Amazonka.Data.XML.ToXML Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Amazonka.Data.XML.FromXML Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Amazonka.Data.Log.ToLog Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Amazonka.Data.Text.ToText Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Amazonka.Data.Text.FromText Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance GHC.Classes.Ord Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetContentState.DatasetContentState


module Amazonka.IoTAnalytics.Types.DatasetContentStatus

-- | The state of the dataset contents and the reason they are in this
--   state.
--   
--   <i>See:</i> <a>newDatasetContentStatus</a> smart constructor.
data DatasetContentStatus
DatasetContentStatus' :: Maybe DatasetContentState -> Maybe Text -> DatasetContentStatus

-- | The state of the dataset contents. Can be one of READY, CREATING,
--   SUCCEEDED, or FAILED.
[$sel:state:DatasetContentStatus'] :: DatasetContentStatus -> Maybe DatasetContentState

-- | The reason the dataset contents are in this state.
[$sel:reason:DatasetContentStatus'] :: DatasetContentStatus -> Maybe Text

-- | Create a value of <a>DatasetContentStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:DatasetContentStatus'</a>,
--   <a>datasetContentStatus_state</a> - The state of the dataset contents.
--   Can be one of READY, CREATING, SUCCEEDED, or FAILED.
--   
--   <a>$sel:reason:DatasetContentStatus'</a>,
--   <a>datasetContentStatus_reason</a> - The reason the dataset contents
--   are in this state.
newDatasetContentStatus :: DatasetContentStatus

-- | The state of the dataset contents. Can be one of READY, CREATING,
--   SUCCEEDED, or FAILED.
datasetContentStatus_state :: Lens' DatasetContentStatus (Maybe DatasetContentState)

-- | The reason the dataset contents are in this state.
datasetContentStatus_reason :: Lens' DatasetContentStatus (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetContentStatus.DatasetContentStatus
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetContentStatus.DatasetContentStatus
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetContentStatus.DatasetContentStatus
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetContentStatus.DatasetContentStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetContentStatus.DatasetContentStatus
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetContentStatus.DatasetContentStatus
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetContentStatus.DatasetContentStatus


module Amazonka.IoTAnalytics.Types.DatasetContentSummary

-- | Summary information about dataset contents.
--   
--   <i>See:</i> <a>newDatasetContentSummary</a> smart constructor.
data DatasetContentSummary
DatasetContentSummary' :: Maybe POSIX -> Maybe DatasetContentStatus -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> DatasetContentSummary

-- | The actual time the creation of the dataset contents was started.
[$sel:creationTime:DatasetContentSummary'] :: DatasetContentSummary -> Maybe POSIX

-- | The status of the dataset contents.
[$sel:status:DatasetContentSummary'] :: DatasetContentSummary -> Maybe DatasetContentStatus

-- | The time the creation of the dataset contents was scheduled to start.
[$sel:scheduleTime:DatasetContentSummary'] :: DatasetContentSummary -> Maybe POSIX

-- | The time the dataset content status was updated to SUCCEEDED or
--   FAILED.
[$sel:completionTime:DatasetContentSummary'] :: DatasetContentSummary -> Maybe POSIX

-- | The version of the dataset contents.
[$sel:version:DatasetContentSummary'] :: DatasetContentSummary -> Maybe Text

-- | Create a value of <a>DatasetContentSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_creationTime</a> - The actual time the
--   creation of the dataset contents was started.
--   
--   <a>$sel:status:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_status</a> - The status of the dataset
--   contents.
--   
--   <a>$sel:scheduleTime:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_scheduleTime</a> - The time the creation of
--   the dataset contents was scheduled to start.
--   
--   <a>$sel:completionTime:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_completionTime</a> - The time the dataset
--   content status was updated to SUCCEEDED or FAILED.
--   
--   <a>$sel:version:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_version</a> - The version of the dataset
--   contents.
newDatasetContentSummary :: DatasetContentSummary

-- | The actual time the creation of the dataset contents was started.
datasetContentSummary_creationTime :: Lens' DatasetContentSummary (Maybe UTCTime)

-- | The status of the dataset contents.
datasetContentSummary_status :: Lens' DatasetContentSummary (Maybe DatasetContentStatus)

-- | The time the creation of the dataset contents was scheduled to start.
datasetContentSummary_scheduleTime :: Lens' DatasetContentSummary (Maybe UTCTime)

-- | The time the dataset content status was updated to SUCCEEDED or
--   FAILED.
datasetContentSummary_completionTime :: Lens' DatasetContentSummary (Maybe UTCTime)

-- | The version of the dataset contents.
datasetContentSummary_version :: Lens' DatasetContentSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetContentSummary.DatasetContentSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetContentSummary.DatasetContentSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetContentSummary.DatasetContentSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetContentSummary.DatasetContentSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetContentSummary.DatasetContentSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetContentSummary.DatasetContentSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetContentSummary.DatasetContentSummary


module Amazonka.IoTAnalytics.Types.DatasetContentVersionValue

-- | The dataset whose latest contents are used as input to the notebook or
--   application.
--   
--   <i>See:</i> <a>newDatasetContentVersionValue</a> smart constructor.
data DatasetContentVersionValue
DatasetContentVersionValue' :: Text -> DatasetContentVersionValue

-- | The name of the dataset whose latest contents are used as input to the
--   notebook or application.
[$sel:datasetName:DatasetContentVersionValue'] :: DatasetContentVersionValue -> Text

-- | Create a value of <a>DatasetContentVersionValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:DatasetContentVersionValue'</a>,
--   <a>datasetContentVersionValue_datasetName</a> - The name of the
--   dataset whose latest contents are used as input to the notebook or
--   application.
newDatasetContentVersionValue :: Text -> DatasetContentVersionValue

-- | The name of the dataset whose latest contents are used as input to the
--   notebook or application.
datasetContentVersionValue_datasetName :: Lens' DatasetContentVersionValue Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetContentVersionValue.DatasetContentVersionValue
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetContentVersionValue.DatasetContentVersionValue
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetContentVersionValue.DatasetContentVersionValue
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetContentVersionValue.DatasetContentVersionValue
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetContentVersionValue.DatasetContentVersionValue
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetContentVersionValue.DatasetContentVersionValue
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetContentVersionValue.DatasetContentVersionValue
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatasetContentVersionValue.DatasetContentVersionValue


module Amazonka.IoTAnalytics.Types.DatasetEntry

-- | The reference to a dataset entry.
--   
--   <i>See:</i> <a>newDatasetEntry</a> smart constructor.
data DatasetEntry
DatasetEntry' :: Maybe Text -> Maybe Text -> DatasetEntry

-- | The name of the dataset item.
[$sel:entryName:DatasetEntry'] :: DatasetEntry -> Maybe Text

-- | The presigned URI of the dataset item.
[$sel:dataURI:DatasetEntry'] :: DatasetEntry -> Maybe Text

-- | Create a value of <a>DatasetEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entryName:DatasetEntry'</a>, <a>datasetEntry_entryName</a> -
--   The name of the dataset item.
--   
--   <a>$sel:dataURI:DatasetEntry'</a>, <a>datasetEntry_dataURI</a> - The
--   presigned URI of the dataset item.
newDatasetEntry :: DatasetEntry

-- | The name of the dataset item.
datasetEntry_entryName :: Lens' DatasetEntry (Maybe Text)

-- | The presigned URI of the dataset item.
datasetEntry_dataURI :: Lens' DatasetEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetEntry.DatasetEntry
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetEntry.DatasetEntry
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetEntry.DatasetEntry
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetEntry.DatasetEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetEntry.DatasetEntry
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetEntry.DatasetEntry
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetEntry.DatasetEntry


module Amazonka.IoTAnalytics.Types.DatasetStatus
newtype DatasetStatus
DatasetStatus' :: Text -> DatasetStatus
[fromDatasetStatus] :: DatasetStatus -> Text
pattern DatasetStatus_ACTIVE :: DatasetStatus
pattern DatasetStatus_CREATING :: DatasetStatus
pattern DatasetStatus_DELETING :: DatasetStatus
instance Amazonka.Data.XML.ToXML Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Amazonka.Data.XML.FromXML Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Amazonka.Data.Log.ToLog Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Amazonka.Data.Text.ToText Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Amazonka.Data.Text.FromText Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance GHC.Classes.Ord Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetStatus.DatasetStatus


module Amazonka.IoTAnalytics.Types.DatastoreActivity

-- | The datastore activity that specifies where to store the processed
--   data.
--   
--   <i>See:</i> <a>newDatastoreActivity</a> smart constructor.
data DatastoreActivity
DatastoreActivity' :: Text -> Text -> DatastoreActivity

-- | The name of the datastore activity.
[$sel:name:DatastoreActivity'] :: DatastoreActivity -> Text

-- | The name of the data store where processed messages are stored.
[$sel:datastoreName:DatastoreActivity'] :: DatastoreActivity -> Text

-- | Create a value of <a>DatastoreActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DatastoreActivity'</a>, <a>datastoreActivity_name</a> -
--   The name of the datastore activity.
--   
--   <a>$sel:datastoreName:DatastoreActivity'</a>,
--   <a>datastoreActivity_datastoreName</a> - The name of the data store
--   where processed messages are stored.
newDatastoreActivity :: Text -> Text -> DatastoreActivity

-- | The name of the datastore activity.
datastoreActivity_name :: Lens' DatastoreActivity Text

-- | The name of the data store where processed messages are stored.
datastoreActivity_datastoreName :: Lens' DatastoreActivity Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatastoreActivity.DatastoreActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatastoreActivity.DatastoreActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatastoreActivity.DatastoreActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatastoreActivity.DatastoreActivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatastoreActivity.DatastoreActivity
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatastoreActivity.DatastoreActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatastoreActivity.DatastoreActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatastoreActivity.DatastoreActivity


module Amazonka.IoTAnalytics.Types.DatastoreStatus
newtype DatastoreStatus
DatastoreStatus' :: Text -> DatastoreStatus
[fromDatastoreStatus] :: DatastoreStatus -> Text
pattern DatastoreStatus_ACTIVE :: DatastoreStatus
pattern DatastoreStatus_CREATING :: DatastoreStatus
pattern DatastoreStatus_DELETING :: DatastoreStatus
instance Amazonka.Data.XML.ToXML Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Amazonka.Data.XML.FromXML Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Amazonka.Data.Log.ToLog Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Amazonka.Data.Text.ToText Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Amazonka.Data.Text.FromText Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance GHC.Classes.Ord Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatastoreStatus.DatastoreStatus


module Amazonka.IoTAnalytics.Types.DeltaTime

-- | Used to limit data to that which has arrived since the last execution
--   of the action.
--   
--   <i>See:</i> <a>newDeltaTime</a> smart constructor.
data DeltaTime
DeltaTime' :: Int -> Text -> DeltaTime

-- | The number of seconds of estimated in-flight lag time of message data.
--   When you create dataset contents using message data from a specified
--   timeframe, some message data might still be in flight when processing
--   begins, and so do not arrive in time to be processed. Use this field
--   to make allowances for the in flight time of your message data, so
--   that data not processed from a previous timeframe is included with the
--   next timeframe. Otherwise, missed message data would be excluded from
--   processing during the next timeframe too, because its timestamp places
--   it within the previous timeframe.
[$sel:offsetSeconds:DeltaTime'] :: DeltaTime -> Int

-- | An expression by which the time of the message data might be
--   determined. This can be the name of a timestamp field or a SQL
--   expression that is used to derive the time the message data was
--   generated.
[$sel:timeExpression:DeltaTime'] :: DeltaTime -> Text

-- | Create a value of <a>DeltaTime</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offsetSeconds:DeltaTime'</a>, <a>deltaTime_offsetSeconds</a> -
--   The number of seconds of estimated in-flight lag time of message data.
--   When you create dataset contents using message data from a specified
--   timeframe, some message data might still be in flight when processing
--   begins, and so do not arrive in time to be processed. Use this field
--   to make allowances for the in flight time of your message data, so
--   that data not processed from a previous timeframe is included with the
--   next timeframe. Otherwise, missed message data would be excluded from
--   processing during the next timeframe too, because its timestamp places
--   it within the previous timeframe.
--   
--   <a>$sel:timeExpression:DeltaTime'</a>, <a>deltaTime_timeExpression</a>
--   - An expression by which the time of the message data might be
--   determined. This can be the name of a timestamp field or a SQL
--   expression that is used to derive the time the message data was
--   generated.
newDeltaTime :: Int -> Text -> DeltaTime

-- | The number of seconds of estimated in-flight lag time of message data.
--   When you create dataset contents using message data from a specified
--   timeframe, some message data might still be in flight when processing
--   begins, and so do not arrive in time to be processed. Use this field
--   to make allowances for the in flight time of your message data, so
--   that data not processed from a previous timeframe is included with the
--   next timeframe. Otherwise, missed message data would be excluded from
--   processing during the next timeframe too, because its timestamp places
--   it within the previous timeframe.
deltaTime_offsetSeconds :: Lens' DeltaTime Int

-- | An expression by which the time of the message data might be
--   determined. This can be the name of a timestamp field or a SQL
--   expression that is used to derive the time the message data was
--   generated.
deltaTime_timeExpression :: Lens' DeltaTime Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DeltaTime.DeltaTime
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DeltaTime.DeltaTime
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DeltaTime.DeltaTime
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DeltaTime.DeltaTime
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DeltaTime.DeltaTime
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DeltaTime.DeltaTime
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DeltaTime.DeltaTime
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DeltaTime.DeltaTime


module Amazonka.IoTAnalytics.Types.DeltaTimeSessionWindowConfiguration

-- | A structure that contains the configuration information of a delta
--   time session window.
--   
--   <a>DeltaTime</a> specifies a time interval. You can use
--   <tt>DeltaTime</tt> to create dataset contents with data that has
--   arrived in the data store since the last execution. For an example of
--   <tt>DeltaTime</tt>, see <a>Creating a SQL dataset with a delta window
--   (CLI)</a> in the <i>IoT Analytics User Guide</i>.
--   
--   <i>See:</i> <a>newDeltaTimeSessionWindowConfiguration</a> smart
--   constructor.
data DeltaTimeSessionWindowConfiguration
DeltaTimeSessionWindowConfiguration' :: Natural -> DeltaTimeSessionWindowConfiguration

-- | A time interval. You can use <tt>timeoutInMinutes</tt> so that IoT
--   Analytics can batch up late data notifications that have been
--   generated since the last execution. IoT Analytics sends one batch of
--   notifications to Amazon CloudWatch Events at one time.
--   
--   For more information about how to write a timestamp expression, see
--   <a>Date and Time Functions and Operators</a>, in the <i>Presto 0.172
--   Documentation</i>.
[$sel:timeoutInMinutes:DeltaTimeSessionWindowConfiguration'] :: DeltaTimeSessionWindowConfiguration -> Natural

-- | Create a value of <a>DeltaTimeSessionWindowConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInMinutes:DeltaTimeSessionWindowConfiguration'</a>,
--   <a>deltaTimeSessionWindowConfiguration_timeoutInMinutes</a> - A time
--   interval. You can use <tt>timeoutInMinutes</tt> so that IoT Analytics
--   can batch up late data notifications that have been generated since
--   the last execution. IoT Analytics sends one batch of notifications to
--   Amazon CloudWatch Events at one time.
--   
--   For more information about how to write a timestamp expression, see
--   <a>Date and Time Functions and Operators</a>, in the <i>Presto 0.172
--   Documentation</i>.
newDeltaTimeSessionWindowConfiguration :: Natural -> DeltaTimeSessionWindowConfiguration

-- | A time interval. You can use <tt>timeoutInMinutes</tt> so that IoT
--   Analytics can batch up late data notifications that have been
--   generated since the last execution. IoT Analytics sends one batch of
--   notifications to Amazon CloudWatch Events at one time.
--   
--   For more information about how to write a timestamp expression, see
--   <a>Date and Time Functions and Operators</a>, in the <i>Presto 0.172
--   Documentation</i>.
deltaTimeSessionWindowConfiguration_timeoutInMinutes :: Lens' DeltaTimeSessionWindowConfiguration Natural
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DeltaTimeSessionWindowConfiguration.DeltaTimeSessionWindowConfiguration
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DeltaTimeSessionWindowConfiguration.DeltaTimeSessionWindowConfiguration
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DeltaTimeSessionWindowConfiguration.DeltaTimeSessionWindowConfiguration
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DeltaTimeSessionWindowConfiguration.DeltaTimeSessionWindowConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DeltaTimeSessionWindowConfiguration.DeltaTimeSessionWindowConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DeltaTimeSessionWindowConfiguration.DeltaTimeSessionWindowConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DeltaTimeSessionWindowConfiguration.DeltaTimeSessionWindowConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DeltaTimeSessionWindowConfiguration.DeltaTimeSessionWindowConfiguration


module Amazonka.IoTAnalytics.Types.DeviceRegistryEnrichActivity

-- | An activity that adds data from the IoT device registry to your
--   message.
--   
--   <i>See:</i> <a>newDeviceRegistryEnrichActivity</a> smart constructor.
data DeviceRegistryEnrichActivity
DeviceRegistryEnrichActivity' :: Maybe Text -> Text -> Text -> Text -> Text -> DeviceRegistryEnrichActivity

-- | The next activity in the pipeline.
[$sel:next:DeviceRegistryEnrichActivity'] :: DeviceRegistryEnrichActivity -> Maybe Text

-- | The name of the <tt>deviceRegistryEnrich</tt> activity.
[$sel:name:DeviceRegistryEnrichActivity'] :: DeviceRegistryEnrichActivity -> Text

-- | The name of the attribute that is added to the message.
[$sel:attribute:DeviceRegistryEnrichActivity'] :: DeviceRegistryEnrichActivity -> Text

-- | The name of the IoT device whose registry information is added to the
--   message.
[$sel:thingName:DeviceRegistryEnrichActivity'] :: DeviceRegistryEnrichActivity -> Text

-- | The ARN of the role that allows access to the device's registry
--   information.
[$sel:roleArn:DeviceRegistryEnrichActivity'] :: DeviceRegistryEnrichActivity -> Text

-- | Create a value of <a>DeviceRegistryEnrichActivity</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_name</a> - The name of the
--   <tt>deviceRegistryEnrich</tt> activity.
--   
--   <a>$sel:attribute:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_attribute</a> - The name of the
--   attribute that is added to the message.
--   
--   <a>$sel:thingName:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_thingName</a> - The name of the IoT
--   device whose registry information is added to the message.
--   
--   <a>$sel:roleArn:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_roleArn</a> - The ARN of the role that
--   allows access to the device's registry information.
newDeviceRegistryEnrichActivity :: Text -> Text -> Text -> Text -> DeviceRegistryEnrichActivity

-- | The next activity in the pipeline.
deviceRegistryEnrichActivity_next :: Lens' DeviceRegistryEnrichActivity (Maybe Text)

-- | The name of the <tt>deviceRegistryEnrich</tt> activity.
deviceRegistryEnrichActivity_name :: Lens' DeviceRegistryEnrichActivity Text

-- | The name of the attribute that is added to the message.
deviceRegistryEnrichActivity_attribute :: Lens' DeviceRegistryEnrichActivity Text

-- | The name of the IoT device whose registry information is added to the
--   message.
deviceRegistryEnrichActivity_thingName :: Lens' DeviceRegistryEnrichActivity Text

-- | The ARN of the role that allows access to the device's registry
--   information.
deviceRegistryEnrichActivity_roleArn :: Lens' DeviceRegistryEnrichActivity Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DeviceRegistryEnrichActivity.DeviceRegistryEnrichActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DeviceRegistryEnrichActivity.DeviceRegistryEnrichActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DeviceRegistryEnrichActivity.DeviceRegistryEnrichActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DeviceRegistryEnrichActivity.DeviceRegistryEnrichActivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DeviceRegistryEnrichActivity.DeviceRegistryEnrichActivity
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DeviceRegistryEnrichActivity.DeviceRegistryEnrichActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DeviceRegistryEnrichActivity.DeviceRegistryEnrichActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DeviceRegistryEnrichActivity.DeviceRegistryEnrichActivity


module Amazonka.IoTAnalytics.Types.DeviceShadowEnrichActivity

-- | An activity that adds information from the IoT Device Shadow service
--   to a message.
--   
--   <i>See:</i> <a>newDeviceShadowEnrichActivity</a> smart constructor.
data DeviceShadowEnrichActivity
DeviceShadowEnrichActivity' :: Maybe Text -> Text -> Text -> Text -> Text -> DeviceShadowEnrichActivity

-- | The next activity in the pipeline.
[$sel:next:DeviceShadowEnrichActivity'] :: DeviceShadowEnrichActivity -> Maybe Text

-- | The name of the <tt>deviceShadowEnrich</tt> activity.
[$sel:name:DeviceShadowEnrichActivity'] :: DeviceShadowEnrichActivity -> Text

-- | The name of the attribute that is added to the message.
[$sel:attribute:DeviceShadowEnrichActivity'] :: DeviceShadowEnrichActivity -> Text

-- | The name of the IoT device whose shadow information is added to the
--   message.
[$sel:thingName:DeviceShadowEnrichActivity'] :: DeviceShadowEnrichActivity -> Text

-- | The ARN of the role that allows access to the device's shadow.
[$sel:roleArn:DeviceShadowEnrichActivity'] :: DeviceShadowEnrichActivity -> Text

-- | Create a value of <a>DeviceShadowEnrichActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_name</a> - The name of the
--   <tt>deviceShadowEnrich</tt> activity.
--   
--   <a>$sel:attribute:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_attribute</a> - The name of the
--   attribute that is added to the message.
--   
--   <a>$sel:thingName:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_thingName</a> - The name of the IoT
--   device whose shadow information is added to the message.
--   
--   <a>$sel:roleArn:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_roleArn</a> - The ARN of the role that
--   allows access to the device's shadow.
newDeviceShadowEnrichActivity :: Text -> Text -> Text -> Text -> DeviceShadowEnrichActivity

-- | The next activity in the pipeline.
deviceShadowEnrichActivity_next :: Lens' DeviceShadowEnrichActivity (Maybe Text)

-- | The name of the <tt>deviceShadowEnrich</tt> activity.
deviceShadowEnrichActivity_name :: Lens' DeviceShadowEnrichActivity Text

-- | The name of the attribute that is added to the message.
deviceShadowEnrichActivity_attribute :: Lens' DeviceShadowEnrichActivity Text

-- | The name of the IoT device whose shadow information is added to the
--   message.
deviceShadowEnrichActivity_thingName :: Lens' DeviceShadowEnrichActivity Text

-- | The ARN of the role that allows access to the device's shadow.
deviceShadowEnrichActivity_roleArn :: Lens' DeviceShadowEnrichActivity Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DeviceShadowEnrichActivity.DeviceShadowEnrichActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DeviceShadowEnrichActivity.DeviceShadowEnrichActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DeviceShadowEnrichActivity.DeviceShadowEnrichActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DeviceShadowEnrichActivity.DeviceShadowEnrichActivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DeviceShadowEnrichActivity.DeviceShadowEnrichActivity
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DeviceShadowEnrichActivity.DeviceShadowEnrichActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DeviceShadowEnrichActivity.DeviceShadowEnrichActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DeviceShadowEnrichActivity.DeviceShadowEnrichActivity


module Amazonka.IoTAnalytics.Types.EstimatedResourceSize

-- | The estimated size of the resource.
--   
--   <i>See:</i> <a>newEstimatedResourceSize</a> smart constructor.
data EstimatedResourceSize
EstimatedResourceSize' :: Maybe POSIX -> Maybe Double -> EstimatedResourceSize

-- | The time when the estimate of the size of the resource was made.
[$sel:estimatedOn:EstimatedResourceSize'] :: EstimatedResourceSize -> Maybe POSIX

-- | The estimated size of the resource, in bytes.
[$sel:estimatedSizeInBytes:EstimatedResourceSize'] :: EstimatedResourceSize -> Maybe Double

-- | Create a value of <a>EstimatedResourceSize</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:estimatedOn:EstimatedResourceSize'</a>,
--   <a>estimatedResourceSize_estimatedOn</a> - The time when the estimate
--   of the size of the resource was made.
--   
--   <a>$sel:estimatedSizeInBytes:EstimatedResourceSize'</a>,
--   <a>estimatedResourceSize_estimatedSizeInBytes</a> - The estimated size
--   of the resource, in bytes.
newEstimatedResourceSize :: EstimatedResourceSize

-- | The time when the estimate of the size of the resource was made.
estimatedResourceSize_estimatedOn :: Lens' EstimatedResourceSize (Maybe UTCTime)

-- | The estimated size of the resource, in bytes.
estimatedResourceSize_estimatedSizeInBytes :: Lens' EstimatedResourceSize (Maybe Double)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.EstimatedResourceSize.EstimatedResourceSize
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.EstimatedResourceSize.EstimatedResourceSize
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.EstimatedResourceSize.EstimatedResourceSize
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.EstimatedResourceSize.EstimatedResourceSize
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.EstimatedResourceSize.EstimatedResourceSize
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.EstimatedResourceSize.EstimatedResourceSize
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.EstimatedResourceSize.EstimatedResourceSize


module Amazonka.IoTAnalytics.Types.DatastoreStatistics

-- | Statistical information about the data store.
--   
--   <i>See:</i> <a>newDatastoreStatistics</a> smart constructor.
data DatastoreStatistics
DatastoreStatistics' :: Maybe EstimatedResourceSize -> DatastoreStatistics

-- | The estimated size of the data store.
[$sel:size:DatastoreStatistics'] :: DatastoreStatistics -> Maybe EstimatedResourceSize

-- | Create a value of <a>DatastoreStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:DatastoreStatistics'</a>, <a>datastoreStatistics_size</a>
--   - The estimated size of the data store.
newDatastoreStatistics :: DatastoreStatistics

-- | The estimated size of the data store.
datastoreStatistics_size :: Lens' DatastoreStatistics (Maybe EstimatedResourceSize)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatastoreStatistics.DatastoreStatistics
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatastoreStatistics.DatastoreStatistics
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatastoreStatistics.DatastoreStatistics
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatastoreStatistics.DatastoreStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatastoreStatistics.DatastoreStatistics
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatastoreStatistics.DatastoreStatistics
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatastoreStatistics.DatastoreStatistics


module Amazonka.IoTAnalytics.Types.ChannelStatistics

-- | Statistics information about the channel.
--   
--   <i>See:</i> <a>newChannelStatistics</a> smart constructor.
data ChannelStatistics
ChannelStatistics' :: Maybe EstimatedResourceSize -> ChannelStatistics

-- | The estimated size of the channel.
[$sel:size:ChannelStatistics'] :: ChannelStatistics -> Maybe EstimatedResourceSize

-- | Create a value of <a>ChannelStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ChannelStatistics'</a>, <a>channelStatistics_size</a> -
--   The estimated size of the channel.
newChannelStatistics :: ChannelStatistics

-- | The estimated size of the channel.
channelStatistics_size :: Lens' ChannelStatistics (Maybe EstimatedResourceSize)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ChannelStatistics.ChannelStatistics
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ChannelStatistics.ChannelStatistics
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ChannelStatistics.ChannelStatistics
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ChannelStatistics.ChannelStatistics
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ChannelStatistics.ChannelStatistics
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ChannelStatistics.ChannelStatistics
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ChannelStatistics.ChannelStatistics


module Amazonka.IoTAnalytics.Types.FileFormatType
newtype FileFormatType
FileFormatType' :: Text -> FileFormatType
[fromFileFormatType] :: FileFormatType -> Text
pattern FileFormatType_JSON :: FileFormatType
pattern FileFormatType_PARQUET :: FileFormatType
instance Amazonka.Data.XML.ToXML Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Amazonka.Data.XML.FromXML Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Amazonka.Data.Log.ToLog Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Amazonka.Data.Text.ToText Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Amazonka.Data.Text.FromText Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance GHC.Classes.Ord Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.FileFormatType.FileFormatType


module Amazonka.IoTAnalytics.Types.FilterActivity

-- | An activity that filters a message based on its attributes.
--   
--   <i>See:</i> <a>newFilterActivity</a> smart constructor.
data FilterActivity
FilterActivity' :: Maybe Text -> Text -> Text -> FilterActivity

-- | The next activity in the pipeline.
[$sel:next:FilterActivity'] :: FilterActivity -> Maybe Text

-- | The name of the filter activity.
[$sel:name:FilterActivity'] :: FilterActivity -> Text

-- | An expression that looks like a SQL WHERE clause that must return a
--   Boolean value. Messages that satisfy the condition are passed to the
--   next activity.
[$sel:filter':FilterActivity'] :: FilterActivity -> Text

-- | Create a value of <a>FilterActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:FilterActivity'</a>, <a>filterActivity_next</a> - The
--   next activity in the pipeline.
--   
--   <a>$sel:name:FilterActivity'</a>, <a>filterActivity_name</a> - The
--   name of the filter activity.
--   
--   <a>$sel:filter':FilterActivity'</a>, <a>filterActivity_filter</a> - An
--   expression that looks like a SQL WHERE clause that must return a
--   Boolean value. Messages that satisfy the condition are passed to the
--   next activity.
newFilterActivity :: Text -> Text -> FilterActivity

-- | The next activity in the pipeline.
filterActivity_next :: Lens' FilterActivity (Maybe Text)

-- | The name of the filter activity.
filterActivity_name :: Lens' FilterActivity Text

-- | An expression that looks like a SQL WHERE clause that must return a
--   Boolean value. Messages that satisfy the condition are passed to the
--   next activity.
filterActivity_filter :: Lens' FilterActivity Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.FilterActivity.FilterActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.FilterActivity.FilterActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.FilterActivity.FilterActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.FilterActivity.FilterActivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.FilterActivity.FilterActivity
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.FilterActivity.FilterActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.FilterActivity.FilterActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.FilterActivity.FilterActivity


module Amazonka.IoTAnalytics.Types.GlueConfiguration

-- | Configuration information for coordination with Glue, a fully managed
--   extract, transform and load (ETL) service.
--   
--   <i>See:</i> <a>newGlueConfiguration</a> smart constructor.
data GlueConfiguration
GlueConfiguration' :: Text -> Text -> GlueConfiguration

-- | The name of the table in your Glue Data Catalog that is used to
--   perform the ETL operations. An Glue Data Catalog table contains
--   partitioned data and descriptions of data sources and targets.
[$sel:tableName:GlueConfiguration'] :: GlueConfiguration -> Text

-- | The name of the database in your Glue Data Catalog in which the table
--   is located. An Glue Data Catalog database contains metadata tables.
[$sel:databaseName:GlueConfiguration'] :: GlueConfiguration -> Text

-- | Create a value of <a>GlueConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableName:GlueConfiguration'</a>,
--   <a>glueConfiguration_tableName</a> - The name of the table in your
--   Glue Data Catalog that is used to perform the ETL operations. An Glue
--   Data Catalog table contains partitioned data and descriptions of data
--   sources and targets.
--   
--   <a>$sel:databaseName:GlueConfiguration'</a>,
--   <a>glueConfiguration_databaseName</a> - The name of the database in
--   your Glue Data Catalog in which the table is located. An Glue Data
--   Catalog database contains metadata tables.
newGlueConfiguration :: Text -> Text -> GlueConfiguration

-- | The name of the table in your Glue Data Catalog that is used to
--   perform the ETL operations. An Glue Data Catalog table contains
--   partitioned data and descriptions of data sources and targets.
glueConfiguration_tableName :: Lens' GlueConfiguration Text

-- | The name of the database in your Glue Data Catalog in which the table
--   is located. An Glue Data Catalog database contains metadata tables.
glueConfiguration_databaseName :: Lens' GlueConfiguration Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.GlueConfiguration.GlueConfiguration
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.GlueConfiguration.GlueConfiguration
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.GlueConfiguration.GlueConfiguration
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.GlueConfiguration.GlueConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.GlueConfiguration.GlueConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.GlueConfiguration.GlueConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.GlueConfiguration.GlueConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.GlueConfiguration.GlueConfiguration


module Amazonka.IoTAnalytics.Types.IotEventsDestinationConfiguration

-- | Configuration information for delivery of dataset contents to IoT
--   Events.
--   
--   <i>See:</i> <a>newIotEventsDestinationConfiguration</a> smart
--   constructor.
data IotEventsDestinationConfiguration
IotEventsDestinationConfiguration' :: Text -> Text -> IotEventsDestinationConfiguration

-- | The name of the IoT Events input to which dataset contents are
--   delivered.
[$sel:inputName:IotEventsDestinationConfiguration'] :: IotEventsDestinationConfiguration -> Text

-- | The ARN of the role that grants IoT Analytics permission to deliver
--   dataset contents to an IoT Events input.
[$sel:roleArn:IotEventsDestinationConfiguration'] :: IotEventsDestinationConfiguration -> Text

-- | Create a value of <a>IotEventsDestinationConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputName:IotEventsDestinationConfiguration'</a>,
--   <a>iotEventsDestinationConfiguration_inputName</a> - The name of the
--   IoT Events input to which dataset contents are delivered.
--   
--   <a>$sel:roleArn:IotEventsDestinationConfiguration'</a>,
--   <a>iotEventsDestinationConfiguration_roleArn</a> - The ARN of the role
--   that grants IoT Analytics permission to deliver dataset contents to an
--   IoT Events input.
newIotEventsDestinationConfiguration :: Text -> Text -> IotEventsDestinationConfiguration

-- | The name of the IoT Events input to which dataset contents are
--   delivered.
iotEventsDestinationConfiguration_inputName :: Lens' IotEventsDestinationConfiguration Text

-- | The ARN of the role that grants IoT Analytics permission to deliver
--   dataset contents to an IoT Events input.
iotEventsDestinationConfiguration_roleArn :: Lens' IotEventsDestinationConfiguration Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.IotEventsDestinationConfiguration.IotEventsDestinationConfiguration
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.IotEventsDestinationConfiguration.IotEventsDestinationConfiguration
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.IotEventsDestinationConfiguration.IotEventsDestinationConfiguration
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.IotEventsDestinationConfiguration.IotEventsDestinationConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.IotEventsDestinationConfiguration.IotEventsDestinationConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.IotEventsDestinationConfiguration.IotEventsDestinationConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.IotEventsDestinationConfiguration.IotEventsDestinationConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.IotEventsDestinationConfiguration.IotEventsDestinationConfiguration


module Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3Storage

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage. You can't change the choice of Amazon S3 storage after
--   your data store is created.
--   
--   <i>See:</i> <a>newIotSiteWiseCustomerManagedDatastoreS3Storage</a>
--   smart constructor.
data IotSiteWiseCustomerManagedDatastoreS3Storage
IotSiteWiseCustomerManagedDatastoreS3Storage' :: Maybe Text -> Text -> IotSiteWiseCustomerManagedDatastoreS3Storage

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
[$sel:keyPrefix:IotSiteWiseCustomerManagedDatastoreS3Storage'] :: IotSiteWiseCustomerManagedDatastoreS3Storage -> Maybe Text

-- | The name of the Amazon S3 bucket where your data is stored.
[$sel:bucket:IotSiteWiseCustomerManagedDatastoreS3Storage'] :: IotSiteWiseCustomerManagedDatastoreS3Storage -> Text

-- | Create a value of <a>IotSiteWiseCustomerManagedDatastoreS3Storage</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPrefix:IotSiteWiseCustomerManagedDatastoreS3Storage'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3Storage_keyPrefix</a> -
--   (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
--   
--   <a>$sel:bucket:IotSiteWiseCustomerManagedDatastoreS3Storage'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3Storage_bucket</a> - The name
--   of the Amazon S3 bucket where your data is stored.
newIotSiteWiseCustomerManagedDatastoreS3Storage :: Text -> IotSiteWiseCustomerManagedDatastoreS3Storage

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
iotSiteWiseCustomerManagedDatastoreS3Storage_keyPrefix :: Lens' IotSiteWiseCustomerManagedDatastoreS3Storage (Maybe Text)

-- | The name of the Amazon S3 bucket where your data is stored.
iotSiteWiseCustomerManagedDatastoreS3Storage_bucket :: Lens' IotSiteWiseCustomerManagedDatastoreS3Storage Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3Storage.IotSiteWiseCustomerManagedDatastoreS3Storage
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3Storage.IotSiteWiseCustomerManagedDatastoreS3Storage
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3Storage.IotSiteWiseCustomerManagedDatastoreS3Storage
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3Storage.IotSiteWiseCustomerManagedDatastoreS3Storage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3Storage.IotSiteWiseCustomerManagedDatastoreS3Storage
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3Storage.IotSiteWiseCustomerManagedDatastoreS3Storage
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3Storage.IotSiteWiseCustomerManagedDatastoreS3Storage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3Storage.IotSiteWiseCustomerManagedDatastoreS3Storage


module Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorage

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage. You can't change the choice of Amazon S3 storage after
--   your data store is created.
--   
--   <i>See:</i> <a>newDatastoreIotSiteWiseMultiLayerStorage</a> smart
--   constructor.
data DatastoreIotSiteWiseMultiLayerStorage
DatastoreIotSiteWiseMultiLayerStorage' :: IotSiteWiseCustomerManagedDatastoreS3Storage -> DatastoreIotSiteWiseMultiLayerStorage

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
[$sel:customerManagedS3Storage:DatastoreIotSiteWiseMultiLayerStorage'] :: DatastoreIotSiteWiseMultiLayerStorage -> IotSiteWiseCustomerManagedDatastoreS3Storage

-- | Create a value of <a>DatastoreIotSiteWiseMultiLayerStorage</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:customerManagedS3Storage:DatastoreIotSiteWiseMultiLayerStorage'</a>,
--   <a>datastoreIotSiteWiseMultiLayerStorage_customerManagedS3Storage</a>
--   - Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
newDatastoreIotSiteWiseMultiLayerStorage :: IotSiteWiseCustomerManagedDatastoreS3Storage -> DatastoreIotSiteWiseMultiLayerStorage

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
datastoreIotSiteWiseMultiLayerStorage_customerManagedS3Storage :: Lens' DatastoreIotSiteWiseMultiLayerStorage IotSiteWiseCustomerManagedDatastoreS3Storage
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorage.DatastoreIotSiteWiseMultiLayerStorage
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorage.DatastoreIotSiteWiseMultiLayerStorage
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorage.DatastoreIotSiteWiseMultiLayerStorage
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorage.DatastoreIotSiteWiseMultiLayerStorage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorage.DatastoreIotSiteWiseMultiLayerStorage
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorage.DatastoreIotSiteWiseMultiLayerStorage
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorage.DatastoreIotSiteWiseMultiLayerStorage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorage.DatastoreIotSiteWiseMultiLayerStorage


module Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3StorageSummary

-- | Contains information about the data store that you manage, which
--   stores data used by IoT SiteWise.
--   
--   <i>See:</i>
--   <a>newIotSiteWiseCustomerManagedDatastoreS3StorageSummary</a> smart
--   constructor.
data IotSiteWiseCustomerManagedDatastoreS3StorageSummary
IotSiteWiseCustomerManagedDatastoreS3StorageSummary' :: Maybe Text -> Maybe Text -> IotSiteWiseCustomerManagedDatastoreS3StorageSummary

-- | The name of the Amazon S3 bucket where your data is stored.
[$sel:bucket:IotSiteWiseCustomerManagedDatastoreS3StorageSummary'] :: IotSiteWiseCustomerManagedDatastoreS3StorageSummary -> Maybe Text

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
[$sel:keyPrefix:IotSiteWiseCustomerManagedDatastoreS3StorageSummary'] :: IotSiteWiseCustomerManagedDatastoreS3StorageSummary -> Maybe Text

-- | Create a value of
--   <a>IotSiteWiseCustomerManagedDatastoreS3StorageSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:bucket:IotSiteWiseCustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3StorageSummary_bucket</a> -
--   The name of the Amazon S3 bucket where your data is stored.
--   
--   
--   <a>$sel:keyPrefix:IotSiteWiseCustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3StorageSummary_keyPrefix</a> -
--   (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
newIotSiteWiseCustomerManagedDatastoreS3StorageSummary :: IotSiteWiseCustomerManagedDatastoreS3StorageSummary

-- | The name of the Amazon S3 bucket where your data is stored.
iotSiteWiseCustomerManagedDatastoreS3StorageSummary_bucket :: Lens' IotSiteWiseCustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
iotSiteWiseCustomerManagedDatastoreS3StorageSummary_keyPrefix :: Lens' IotSiteWiseCustomerManagedDatastoreS3StorageSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3StorageSummary.IotSiteWiseCustomerManagedDatastoreS3StorageSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3StorageSummary.IotSiteWiseCustomerManagedDatastoreS3StorageSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3StorageSummary.IotSiteWiseCustomerManagedDatastoreS3StorageSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3StorageSummary.IotSiteWiseCustomerManagedDatastoreS3StorageSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3StorageSummary.IotSiteWiseCustomerManagedDatastoreS3StorageSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3StorageSummary.IotSiteWiseCustomerManagedDatastoreS3StorageSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.IotSiteWiseCustomerManagedDatastoreS3StorageSummary.IotSiteWiseCustomerManagedDatastoreS3StorageSummary


module Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorageSummary

-- | Contains information about the data store that you manage, which
--   stores data used by IoT SiteWise.
--   
--   <i>See:</i> <a>newDatastoreIotSiteWiseMultiLayerStorageSummary</a>
--   smart constructor.
data DatastoreIotSiteWiseMultiLayerStorageSummary
DatastoreIotSiteWiseMultiLayerStorageSummary' :: Maybe IotSiteWiseCustomerManagedDatastoreS3StorageSummary -> DatastoreIotSiteWiseMultiLayerStorageSummary

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
[$sel:customerManagedS3Storage:DatastoreIotSiteWiseMultiLayerStorageSummary'] :: DatastoreIotSiteWiseMultiLayerStorageSummary -> Maybe IotSiteWiseCustomerManagedDatastoreS3StorageSummary

-- | Create a value of <a>DatastoreIotSiteWiseMultiLayerStorageSummary</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:customerManagedS3Storage:DatastoreIotSiteWiseMultiLayerStorageSummary'</a>,
--   <a>datastoreIotSiteWiseMultiLayerStorageSummary_customerManagedS3Storage</a>
--   - Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
newDatastoreIotSiteWiseMultiLayerStorageSummary :: DatastoreIotSiteWiseMultiLayerStorageSummary

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
datastoreIotSiteWiseMultiLayerStorageSummary_customerManagedS3Storage :: Lens' DatastoreIotSiteWiseMultiLayerStorageSummary (Maybe IotSiteWiseCustomerManagedDatastoreS3StorageSummary)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorageSummary.DatastoreIotSiteWiseMultiLayerStorageSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorageSummary.DatastoreIotSiteWiseMultiLayerStorageSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorageSummary.DatastoreIotSiteWiseMultiLayerStorageSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorageSummary.DatastoreIotSiteWiseMultiLayerStorageSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorageSummary.DatastoreIotSiteWiseMultiLayerStorageSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorageSummary.DatastoreIotSiteWiseMultiLayerStorageSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatastoreIotSiteWiseMultiLayerStorageSummary.DatastoreIotSiteWiseMultiLayerStorageSummary


module Amazonka.IoTAnalytics.Types.JsonConfiguration

-- | Contains the configuration information of the JSON format.
--   
--   <i>See:</i> <a>newJsonConfiguration</a> smart constructor.
data JsonConfiguration
JsonConfiguration' :: JsonConfiguration

-- | Create a value of <a>JsonConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newJsonConfiguration :: JsonConfiguration
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.JsonConfiguration.JsonConfiguration
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.JsonConfiguration.JsonConfiguration
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.JsonConfiguration.JsonConfiguration
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.JsonConfiguration.JsonConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.JsonConfiguration.JsonConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.JsonConfiguration.JsonConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.JsonConfiguration.JsonConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.JsonConfiguration.JsonConfiguration


module Amazonka.IoTAnalytics.Types.LambdaActivity

-- | An activity that runs a Lambda function to modify the message.
--   
--   <i>See:</i> <a>newLambdaActivity</a> smart constructor.
data LambdaActivity
LambdaActivity' :: Maybe Text -> Text -> Text -> Natural -> LambdaActivity

-- | The next activity in the pipeline.
[$sel:next:LambdaActivity'] :: LambdaActivity -> Maybe Text

-- | The name of the lambda activity.
[$sel:name:LambdaActivity'] :: LambdaActivity -> Text

-- | The name of the Lambda function that is run on the message.
[$sel:lambdaName:LambdaActivity'] :: LambdaActivity -> Text

-- | The number of messages passed to the Lambda function for processing.
--   
--   The Lambda function must be able to process all of these messages
--   within five minutes, which is the maximum timeout duration for Lambda
--   functions.
[$sel:batchSize:LambdaActivity'] :: LambdaActivity -> Natural

-- | Create a value of <a>LambdaActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:LambdaActivity'</a>, <a>lambdaActivity_next</a> - The
--   next activity in the pipeline.
--   
--   <a>$sel:name:LambdaActivity'</a>, <a>lambdaActivity_name</a> - The
--   name of the lambda activity.
--   
--   <a>$sel:lambdaName:LambdaActivity'</a>,
--   <a>lambdaActivity_lambdaName</a> - The name of the Lambda function
--   that is run on the message.
--   
--   <a>$sel:batchSize:LambdaActivity'</a>, <a>lambdaActivity_batchSize</a>
--   - The number of messages passed to the Lambda function for processing.
--   
--   The Lambda function must be able to process all of these messages
--   within five minutes, which is the maximum timeout duration for Lambda
--   functions.
newLambdaActivity :: Text -> Text -> Natural -> LambdaActivity

-- | The next activity in the pipeline.
lambdaActivity_next :: Lens' LambdaActivity (Maybe Text)

-- | The name of the lambda activity.
lambdaActivity_name :: Lens' LambdaActivity Text

-- | The name of the Lambda function that is run on the message.
lambdaActivity_lambdaName :: Lens' LambdaActivity Text

-- | The number of messages passed to the Lambda function for processing.
--   
--   The Lambda function must be able to process all of these messages
--   within five minutes, which is the maximum timeout duration for Lambda
--   functions.
lambdaActivity_batchSize :: Lens' LambdaActivity Natural
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.LambdaActivity.LambdaActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.LambdaActivity.LambdaActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.LambdaActivity.LambdaActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.LambdaActivity.LambdaActivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.LambdaActivity.LambdaActivity
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.LambdaActivity.LambdaActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.LambdaActivity.LambdaActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.LambdaActivity.LambdaActivity


module Amazonka.IoTAnalytics.Types.LateDataRuleConfiguration

-- | The information needed to configure a delta time session window.
--   
--   <i>See:</i> <a>newLateDataRuleConfiguration</a> smart constructor.
data LateDataRuleConfiguration
LateDataRuleConfiguration' :: Maybe DeltaTimeSessionWindowConfiguration -> LateDataRuleConfiguration

-- | The information needed to configure a delta time session window.
[$sel:deltaTimeSessionWindowConfiguration:LateDataRuleConfiguration'] :: LateDataRuleConfiguration -> Maybe DeltaTimeSessionWindowConfiguration

-- | Create a value of <a>LateDataRuleConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:deltaTimeSessionWindowConfiguration:LateDataRuleConfiguration'</a>,
--   <a>lateDataRuleConfiguration_deltaTimeSessionWindowConfiguration</a> -
--   The information needed to configure a delta time session window.
newLateDataRuleConfiguration :: LateDataRuleConfiguration

-- | The information needed to configure a delta time session window.
lateDataRuleConfiguration_deltaTimeSessionWindowConfiguration :: Lens' LateDataRuleConfiguration (Maybe DeltaTimeSessionWindowConfiguration)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.LateDataRuleConfiguration.LateDataRuleConfiguration
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.LateDataRuleConfiguration.LateDataRuleConfiguration
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.LateDataRuleConfiguration.LateDataRuleConfiguration
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.LateDataRuleConfiguration.LateDataRuleConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.LateDataRuleConfiguration.LateDataRuleConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.LateDataRuleConfiguration.LateDataRuleConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.LateDataRuleConfiguration.LateDataRuleConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.LateDataRuleConfiguration.LateDataRuleConfiguration


module Amazonka.IoTAnalytics.Types.LateDataRule

-- | A structure that contains the name and configuration information of a
--   late data rule.
--   
--   <i>See:</i> <a>newLateDataRule</a> smart constructor.
data LateDataRule
LateDataRule' :: Maybe Text -> LateDataRuleConfiguration -> LateDataRule

-- | The name of the late data rule.
[$sel:ruleName:LateDataRule'] :: LateDataRule -> Maybe Text

-- | The information needed to configure the late data rule.
[$sel:ruleConfiguration:LateDataRule'] :: LateDataRule -> LateDataRuleConfiguration

-- | Create a value of <a>LateDataRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleName:LateDataRule'</a>, <a>lateDataRule_ruleName</a> - The
--   name of the late data rule.
--   
--   <a>$sel:ruleConfiguration:LateDataRule'</a>,
--   <a>lateDataRule_ruleConfiguration</a> - The information needed to
--   configure the late data rule.
newLateDataRule :: LateDataRuleConfiguration -> LateDataRule

-- | The name of the late data rule.
lateDataRule_ruleName :: Lens' LateDataRule (Maybe Text)

-- | The information needed to configure the late data rule.
lateDataRule_ruleConfiguration :: Lens' LateDataRule LateDataRuleConfiguration
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.LateDataRule.LateDataRule
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.LateDataRule.LateDataRule
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.LateDataRule.LateDataRule
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.LateDataRule.LateDataRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.LateDataRule.LateDataRule
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.LateDataRule.LateDataRule
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.LateDataRule.LateDataRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.LateDataRule.LateDataRule


module Amazonka.IoTAnalytics.Types.LoggingLevel
newtype LoggingLevel
LoggingLevel' :: Text -> LoggingLevel
[fromLoggingLevel] :: LoggingLevel -> Text
pattern LoggingLevel_ERROR :: LoggingLevel
instance Amazonka.Data.XML.ToXML Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.XML.FromXML Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.Log.ToLog Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.Text.ToText Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Amazonka.Data.Text.FromText Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance GHC.Classes.Ord Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.LoggingLevel.LoggingLevel


module Amazonka.IoTAnalytics.Types.LoggingOptions

-- | Information about logging options.
--   
--   <i>See:</i> <a>newLoggingOptions</a> smart constructor.
data LoggingOptions
LoggingOptions' :: Text -> LoggingLevel -> Bool -> LoggingOptions

-- | The ARN of the role that grants permission to IoT Analytics to perform
--   logging.
[$sel:roleArn:LoggingOptions'] :: LoggingOptions -> Text

-- | The logging level. Currently, only ERROR is supported.
[$sel:level:LoggingOptions'] :: LoggingOptions -> LoggingLevel

-- | If true, logging is enabled for IoT Analytics.
[$sel:enabled:LoggingOptions'] :: LoggingOptions -> Bool

-- | Create a value of <a>LoggingOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:LoggingOptions'</a>, <a>loggingOptions_roleArn</a> -
--   The ARN of the role that grants permission to IoT Analytics to perform
--   logging.
--   
--   <a>$sel:level:LoggingOptions'</a>, <a>loggingOptions_level</a> - The
--   logging level. Currently, only ERROR is supported.
--   
--   <a>$sel:enabled:LoggingOptions'</a>, <a>loggingOptions_enabled</a> -
--   If true, logging is enabled for IoT Analytics.
newLoggingOptions :: Text -> LoggingLevel -> Bool -> LoggingOptions

-- | The ARN of the role that grants permission to IoT Analytics to perform
--   logging.
loggingOptions_roleArn :: Lens' LoggingOptions Text

-- | The logging level. Currently, only ERROR is supported.
loggingOptions_level :: Lens' LoggingOptions LoggingLevel

-- | If true, logging is enabled for IoT Analytics.
loggingOptions_enabled :: Lens' LoggingOptions Bool
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.LoggingOptions.LoggingOptions
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.LoggingOptions.LoggingOptions
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.LoggingOptions.LoggingOptions
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.LoggingOptions.LoggingOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.LoggingOptions.LoggingOptions
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.LoggingOptions.LoggingOptions
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.LoggingOptions.LoggingOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.LoggingOptions.LoggingOptions


module Amazonka.IoTAnalytics.Types.MathActivity

-- | An activity that computes an arithmetic expression using the message's
--   attributes.
--   
--   <i>See:</i> <a>newMathActivity</a> smart constructor.
data MathActivity
MathActivity' :: Maybe Text -> Text -> Text -> Text -> MathActivity

-- | The next activity in the pipeline.
[$sel:next:MathActivity'] :: MathActivity -> Maybe Text

-- | The name of the math activity.
[$sel:name:MathActivity'] :: MathActivity -> Text

-- | The name of the attribute that contains the result of the math
--   operation.
[$sel:attribute:MathActivity'] :: MathActivity -> Text

-- | An expression that uses one or more existing attributes and must
--   return an integer value.
[$sel:math:MathActivity'] :: MathActivity -> Text

-- | Create a value of <a>MathActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:MathActivity'</a>, <a>mathActivity_next</a> - The next
--   activity in the pipeline.
--   
--   <a>$sel:name:MathActivity'</a>, <a>mathActivity_name</a> - The name of
--   the math activity.
--   
--   <a>$sel:attribute:MathActivity'</a>, <a>mathActivity_attribute</a> -
--   The name of the attribute that contains the result of the math
--   operation.
--   
--   <a>$sel:math:MathActivity'</a>, <a>mathActivity_math</a> - An
--   expression that uses one or more existing attributes and must return
--   an integer value.
newMathActivity :: Text -> Text -> Text -> MathActivity

-- | The next activity in the pipeline.
mathActivity_next :: Lens' MathActivity (Maybe Text)

-- | The name of the math activity.
mathActivity_name :: Lens' MathActivity Text

-- | The name of the attribute that contains the result of the math
--   operation.
mathActivity_attribute :: Lens' MathActivity Text

-- | An expression that uses one or more existing attributes and must
--   return an integer value.
mathActivity_math :: Lens' MathActivity Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.MathActivity.MathActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.MathActivity.MathActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.MathActivity.MathActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.MathActivity.MathActivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.MathActivity.MathActivity
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.MathActivity.MathActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.MathActivity.MathActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.MathActivity.MathActivity


module Amazonka.IoTAnalytics.Types.Message

-- | Information about a message.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Text -> Base64 -> Message

-- | The ID you want to assign to the message. Each <tt>messageId</tt> must
--   be unique within each batch sent.
[$sel:messageId:Message'] :: Message -> Text

-- | The payload of the message. This can be a JSON string or a
--   base64-encoded string representing binary data, in which case you must
--   decode it by means of a pipeline activity.
[$sel:payload:Message'] :: Message -> Base64

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageId:Message'</a>, <a>message_messageId</a> - The ID you
--   want to assign to the message. Each <tt>messageId</tt> must be unique
--   within each batch sent.
--   
--   <a>$sel:payload:Message'</a>, <a>message_payload</a> - The payload of
--   the message. This can be a JSON string or a base64-encoded string
--   representing binary data, in which case you must decode it by means of
--   a pipeline activity.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newMessage :: Text -> ByteString -> Message

-- | The ID you want to assign to the message. Each <tt>messageId</tt> must
--   be unique within each batch sent.
message_messageId :: Lens' Message Text

-- | The payload of the message. This can be a JSON string or a
--   base64-encoded string representing binary data, in which case you must
--   decode it by means of a pipeline activity.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
message_payload :: Lens' Message ByteString
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.Message.Message
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.Message.Message
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.Message.Message
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.Message.Message
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.Message.Message
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.Message.Message
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.Message.Message


module Amazonka.IoTAnalytics.Types.OutputFileUriValue

-- | The value of the variable as a structure that specifies an output file
--   URI.
--   
--   <i>See:</i> <a>newOutputFileUriValue</a> smart constructor.
data OutputFileUriValue
OutputFileUriValue' :: Text -> OutputFileUriValue

-- | The URI of the location where dataset contents are stored, usually the
--   URI of a file in an S3 bucket.
[$sel:fileName:OutputFileUriValue'] :: OutputFileUriValue -> Text

-- | Create a value of <a>OutputFileUriValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileName:OutputFileUriValue'</a>,
--   <a>outputFileUriValue_fileName</a> - The URI of the location where
--   dataset contents are stored, usually the URI of a file in an S3
--   bucket.
newOutputFileUriValue :: Text -> OutputFileUriValue

-- | The URI of the location where dataset contents are stored, usually the
--   URI of a file in an S3 bucket.
outputFileUriValue_fileName :: Lens' OutputFileUriValue Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.OutputFileUriValue.OutputFileUriValue
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.OutputFileUriValue.OutputFileUriValue
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.OutputFileUriValue.OutputFileUriValue
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.OutputFileUriValue.OutputFileUriValue
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.OutputFileUriValue.OutputFileUriValue
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.OutputFileUriValue.OutputFileUriValue
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.OutputFileUriValue.OutputFileUriValue
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.OutputFileUriValue.OutputFileUriValue


module Amazonka.IoTAnalytics.Types.Partition

-- | A partition dimension defined by an attribute.
--   
--   <i>See:</i> <a>newPartition</a> smart constructor.
data Partition
Partition' :: Text -> Partition

-- | The name of the attribute that defines a partition dimension.
[$sel:attributeName:Partition'] :: Partition -> Text

-- | Create a value of <a>Partition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeName:Partition'</a>, <a>partition_attributeName</a> -
--   The name of the attribute that defines a partition dimension.
newPartition :: Text -> Partition

-- | The name of the attribute that defines a partition dimension.
partition_attributeName :: Lens' Partition Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.Partition.Partition
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.Partition.Partition
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.Partition.Partition
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.Partition.Partition
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.Partition.Partition
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.Partition.Partition
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.Partition.Partition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.Partition.Partition


module Amazonka.IoTAnalytics.Types.QueryFilter

-- | Information that is used to filter message data, to segregate it
--   according to the timeframe in which it arrives.
--   
--   <i>See:</i> <a>newQueryFilter</a> smart constructor.
data QueryFilter
QueryFilter' :: Maybe DeltaTime -> QueryFilter

-- | Used to limit data to that which has arrived since the last execution
--   of the action.
[$sel:deltaTime:QueryFilter'] :: QueryFilter -> Maybe DeltaTime

-- | Create a value of <a>QueryFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deltaTime:QueryFilter'</a>, <a>queryFilter_deltaTime</a> -
--   Used to limit data to that which has arrived since the last execution
--   of the action.
newQueryFilter :: QueryFilter

-- | Used to limit data to that which has arrived since the last execution
--   of the action.
queryFilter_deltaTime :: Lens' QueryFilter (Maybe DeltaTime)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.QueryFilter.QueryFilter
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.QueryFilter.QueryFilter
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.QueryFilter.QueryFilter
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.QueryFilter.QueryFilter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.QueryFilter.QueryFilter
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.QueryFilter.QueryFilter
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.QueryFilter.QueryFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.QueryFilter.QueryFilter


module Amazonka.IoTAnalytics.Types.RemoveAttributesActivity

-- | An activity that removes attributes from a message.
--   
--   <i>See:</i> <a>newRemoveAttributesActivity</a> smart constructor.
data RemoveAttributesActivity
RemoveAttributesActivity' :: Maybe Text -> Text -> NonEmpty Text -> RemoveAttributesActivity

-- | The next activity in the pipeline.
[$sel:next:RemoveAttributesActivity'] :: RemoveAttributesActivity -> Maybe Text

-- | The name of the <tt>removeAttributes</tt> activity.
[$sel:name:RemoveAttributesActivity'] :: RemoveAttributesActivity -> Text

-- | A list of 1-50 attributes to remove from the message.
[$sel:attributes:RemoveAttributesActivity'] :: RemoveAttributesActivity -> NonEmpty Text

-- | Create a value of <a>RemoveAttributesActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:RemoveAttributesActivity'</a>,
--   <a>removeAttributesActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:RemoveAttributesActivity'</a>,
--   <a>removeAttributesActivity_name</a> - The name of the
--   <tt>removeAttributes</tt> activity.
--   
--   <a>$sel:attributes:RemoveAttributesActivity'</a>,
--   <a>removeAttributesActivity_attributes</a> - A list of 1-50 attributes
--   to remove from the message.
newRemoveAttributesActivity :: Text -> NonEmpty Text -> RemoveAttributesActivity

-- | The next activity in the pipeline.
removeAttributesActivity_next :: Lens' RemoveAttributesActivity (Maybe Text)

-- | The name of the <tt>removeAttributes</tt> activity.
removeAttributesActivity_name :: Lens' RemoveAttributesActivity Text

-- | A list of 1-50 attributes to remove from the message.
removeAttributesActivity_attributes :: Lens' RemoveAttributesActivity (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.RemoveAttributesActivity.RemoveAttributesActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.RemoveAttributesActivity.RemoveAttributesActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.RemoveAttributesActivity.RemoveAttributesActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.RemoveAttributesActivity.RemoveAttributesActivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.RemoveAttributesActivity.RemoveAttributesActivity
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.RemoveAttributesActivity.RemoveAttributesActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.RemoveAttributesActivity.RemoveAttributesActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.RemoveAttributesActivity.RemoveAttributesActivity


module Amazonka.IoTAnalytics.Types.ReprocessingStatus
newtype ReprocessingStatus
ReprocessingStatus' :: Text -> ReprocessingStatus
[fromReprocessingStatus] :: ReprocessingStatus -> Text
pattern ReprocessingStatus_CANCELLED :: ReprocessingStatus
pattern ReprocessingStatus_FAILED :: ReprocessingStatus
pattern ReprocessingStatus_RUNNING :: ReprocessingStatus
pattern ReprocessingStatus_SUCCEEDED :: ReprocessingStatus
instance Amazonka.Data.XML.ToXML Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Amazonka.Data.XML.FromXML Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Amazonka.Data.Log.ToLog Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Amazonka.Data.Text.ToText Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Amazonka.Data.Text.FromText Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance GHC.Classes.Ord Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ReprocessingStatus.ReprocessingStatus


module Amazonka.IoTAnalytics.Types.ReprocessingSummary

-- | Information about pipeline reprocessing.
--   
--   <i>See:</i> <a>newReprocessingSummary</a> smart constructor.
data ReprocessingSummary
ReprocessingSummary' :: Maybe POSIX -> Maybe ReprocessingStatus -> Maybe Text -> ReprocessingSummary

-- | The time the pipeline reprocessing was created.
[$sel:creationTime:ReprocessingSummary'] :: ReprocessingSummary -> Maybe POSIX

-- | The status of the pipeline reprocessing.
[$sel:status:ReprocessingSummary'] :: ReprocessingSummary -> Maybe ReprocessingStatus

-- | The <tt>reprocessingId</tt> returned by
--   <tt>StartPipelineReprocessing</tt>.
[$sel:id:ReprocessingSummary'] :: ReprocessingSummary -> Maybe Text

-- | Create a value of <a>ReprocessingSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ReprocessingSummary'</a>,
--   <a>reprocessingSummary_creationTime</a> - The time the pipeline
--   reprocessing was created.
--   
--   <a>$sel:status:ReprocessingSummary'</a>,
--   <a>reprocessingSummary_status</a> - The status of the pipeline
--   reprocessing.
--   
--   <a>$sel:id:ReprocessingSummary'</a>, <a>reprocessingSummary_id</a> -
--   The <tt>reprocessingId</tt> returned by
--   <tt>StartPipelineReprocessing</tt>.
newReprocessingSummary :: ReprocessingSummary

-- | The time the pipeline reprocessing was created.
reprocessingSummary_creationTime :: Lens' ReprocessingSummary (Maybe UTCTime)

-- | The status of the pipeline reprocessing.
reprocessingSummary_status :: Lens' ReprocessingSummary (Maybe ReprocessingStatus)

-- | The <tt>reprocessingId</tt> returned by
--   <tt>StartPipelineReprocessing</tt>.
reprocessingSummary_id :: Lens' ReprocessingSummary (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ReprocessingSummary.ReprocessingSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ReprocessingSummary.ReprocessingSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ReprocessingSummary.ReprocessingSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ReprocessingSummary.ReprocessingSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ReprocessingSummary.ReprocessingSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ReprocessingSummary.ReprocessingSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ReprocessingSummary.ReprocessingSummary


module Amazonka.IoTAnalytics.Types.PipelineSummary

-- | A summary of information about a pipeline.
--   
--   <i>See:</i> <a>newPipelineSummary</a> smart constructor.
data PipelineSummary
PipelineSummary' :: Maybe POSIX -> Maybe Text -> Maybe [ReprocessingSummary] -> Maybe POSIX -> PipelineSummary

-- | When the pipeline was created.
[$sel:creationTime:PipelineSummary'] :: PipelineSummary -> Maybe POSIX

-- | The name of the pipeline.
[$sel:pipelineName:PipelineSummary'] :: PipelineSummary -> Maybe Text

-- | A summary of information about the pipeline reprocessing.
[$sel:reprocessingSummaries:PipelineSummary'] :: PipelineSummary -> Maybe [ReprocessingSummary]

-- | When the pipeline was last updated.
[$sel:lastUpdateTime:PipelineSummary'] :: PipelineSummary -> Maybe POSIX

-- | Create a value of <a>PipelineSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:PipelineSummary'</a>,
--   <a>pipelineSummary_creationTime</a> - When the pipeline was created.
--   
--   <a>$sel:pipelineName:PipelineSummary'</a>,
--   <a>pipelineSummary_pipelineName</a> - The name of the pipeline.
--   
--   <a>$sel:reprocessingSummaries:PipelineSummary'</a>,
--   <a>pipelineSummary_reprocessingSummaries</a> - A summary of
--   information about the pipeline reprocessing.
--   
--   <a>$sel:lastUpdateTime:PipelineSummary'</a>,
--   <a>pipelineSummary_lastUpdateTime</a> - When the pipeline was last
--   updated.
newPipelineSummary :: PipelineSummary

-- | When the pipeline was created.
pipelineSummary_creationTime :: Lens' PipelineSummary (Maybe UTCTime)

-- | The name of the pipeline.
pipelineSummary_pipelineName :: Lens' PipelineSummary (Maybe Text)

-- | A summary of information about the pipeline reprocessing.
pipelineSummary_reprocessingSummaries :: Lens' PipelineSummary (Maybe [ReprocessingSummary])

-- | When the pipeline was last updated.
pipelineSummary_lastUpdateTime :: Lens' PipelineSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.PipelineSummary.PipelineSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.PipelineSummary.PipelineSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.PipelineSummary.PipelineSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.PipelineSummary.PipelineSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.PipelineSummary.PipelineSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.PipelineSummary.PipelineSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.PipelineSummary.PipelineSummary


module Amazonka.IoTAnalytics.Types.ResourceConfiguration

-- | The configuration of the resource used to execute the
--   <tt>containerAction</tt>.
--   
--   <i>See:</i> <a>newResourceConfiguration</a> smart constructor.
data ResourceConfiguration
ResourceConfiguration' :: ComputeType -> Natural -> ResourceConfiguration

-- | The type of the compute resource used to execute the
--   <tt>containerAction</tt>. Possible values are: <tt>ACU_1</tt> (vCPU=4,
--   memory=16 GiB) or <tt>ACU_2</tt> (vCPU=8, memory=32 GiB).
[$sel:computeType:ResourceConfiguration'] :: ResourceConfiguration -> ComputeType

-- | The size, in GB, of the persistent storage available to the resource
--   instance used to execute the <tt>containerAction</tt> (min: 1, max:
--   50).
[$sel:volumeSizeInGB:ResourceConfiguration'] :: ResourceConfiguration -> Natural

-- | Create a value of <a>ResourceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeType:ResourceConfiguration'</a>,
--   <a>resourceConfiguration_computeType</a> - The type of the compute
--   resource used to execute the <tt>containerAction</tt>. Possible values
--   are: <tt>ACU_1</tt> (vCPU=4, memory=16 GiB) or <tt>ACU_2</tt> (vCPU=8,
--   memory=32 GiB).
--   
--   <a>$sel:volumeSizeInGB:ResourceConfiguration'</a>,
--   <a>resourceConfiguration_volumeSizeInGB</a> - The size, in GB, of the
--   persistent storage available to the resource instance used to execute
--   the <tt>containerAction</tt> (min: 1, max: 50).
newResourceConfiguration :: ComputeType -> Natural -> ResourceConfiguration

-- | The type of the compute resource used to execute the
--   <tt>containerAction</tt>. Possible values are: <tt>ACU_1</tt> (vCPU=4,
--   memory=16 GiB) or <tt>ACU_2</tt> (vCPU=8, memory=32 GiB).
resourceConfiguration_computeType :: Lens' ResourceConfiguration ComputeType

-- | The size, in GB, of the persistent storage available to the resource
--   instance used to execute the <tt>containerAction</tt> (min: 1, max:
--   50).
resourceConfiguration_volumeSizeInGB :: Lens' ResourceConfiguration Natural
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ResourceConfiguration.ResourceConfiguration
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ResourceConfiguration.ResourceConfiguration
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ResourceConfiguration.ResourceConfiguration
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ResourceConfiguration.ResourceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ResourceConfiguration.ResourceConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ResourceConfiguration.ResourceConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ResourceConfiguration.ResourceConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.ResourceConfiguration.ResourceConfiguration


module Amazonka.IoTAnalytics.Types.RetentionPeriod

-- | How long, in days, message data is kept.
--   
--   <i>See:</i> <a>newRetentionPeriod</a> smart constructor.
data RetentionPeriod
RetentionPeriod' :: Maybe Bool -> Maybe Natural -> RetentionPeriod

-- | If true, message data is kept indefinitely.
[$sel:unlimited:RetentionPeriod'] :: RetentionPeriod -> Maybe Bool

-- | The number of days that message data is kept. The <tt>unlimited</tt>
--   parameter must be false.
[$sel:numberOfDays:RetentionPeriod'] :: RetentionPeriod -> Maybe Natural

-- | Create a value of <a>RetentionPeriod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlimited:RetentionPeriod'</a>,
--   <a>retentionPeriod_unlimited</a> - If true, message data is kept
--   indefinitely.
--   
--   <a>$sel:numberOfDays:RetentionPeriod'</a>,
--   <a>retentionPeriod_numberOfDays</a> - The number of days that message
--   data is kept. The <tt>unlimited</tt> parameter must be false.
newRetentionPeriod :: RetentionPeriod

-- | If true, message data is kept indefinitely.
retentionPeriod_unlimited :: Lens' RetentionPeriod (Maybe Bool)

-- | The number of days that message data is kept. The <tt>unlimited</tt>
--   parameter must be false.
retentionPeriod_numberOfDays :: Lens' RetentionPeriod (Maybe Natural)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.RetentionPeriod.RetentionPeriod
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.RetentionPeriod.RetentionPeriod
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.RetentionPeriod.RetentionPeriod
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.RetentionPeriod.RetentionPeriod
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.RetentionPeriod.RetentionPeriod
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.RetentionPeriod.RetentionPeriod
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.RetentionPeriod.RetentionPeriod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.RetentionPeriod.RetentionPeriod


module Amazonka.IoTAnalytics.Types.S3DestinationConfiguration

-- | Configuration information for delivery of dataset contents to Amazon
--   Simple Storage Service (Amazon S3).
--   
--   <i>See:</i> <a>newS3DestinationConfiguration</a> smart constructor.
data S3DestinationConfiguration
S3DestinationConfiguration' :: Maybe GlueConfiguration -> Text -> Text -> Text -> S3DestinationConfiguration

-- | Configuration information for coordination with Glue, a fully managed
--   extract, transform and load (ETL) service.
[$sel:glueConfiguration:S3DestinationConfiguration'] :: S3DestinationConfiguration -> Maybe GlueConfiguration

-- | The name of the S3 bucket to which dataset contents are delivered.
[$sel:bucket:S3DestinationConfiguration'] :: S3DestinationConfiguration -> Text

-- | The key of the dataset contents object in an S3 bucket. Each object
--   has a key that is a unique identifier. Each object has exactly one
--   key.
--   
--   You can create a unique key with the following options:
--   
--   <ul>
--   <li>Use <tt>!{iotanalytics:scheduleTime}</tt> to insert the time of a
--   scheduled SQL query run.</li>
--   <li>Use <tt>!{iotanalytics:versionId}</tt> to insert a unique hash
--   that identifies a dataset content.</li>
--   <li>Use <tt>!{iotanalytics:creationTime}</tt> to insert the creation
--   time of a dataset content.</li>
--   </ul>
--   
--   The following example creates a unique key for a CSV file:
--   <tt>dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv</tt>
--   
--   If you don't use <tt>!{iotanalytics:versionId}</tt> to specify the
--   key, you might get duplicate keys. For example, you might have two
--   dataset contents with the same <tt>scheduleTime</tt> but different
--   <tt>versionId</tt>s. This means that one dataset content overwrites
--   the other.
[$sel:key:S3DestinationConfiguration'] :: S3DestinationConfiguration -> Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 and Glue resources.
[$sel:roleArn:S3DestinationConfiguration'] :: S3DestinationConfiguration -> Text

-- | Create a value of <a>S3DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:glueConfiguration:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_glueConfiguration</a> - Configuration
--   information for coordination with Glue, a fully managed extract,
--   transform and load (ETL) service.
--   
--   <a>$sel:bucket:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_bucket</a> - The name of the S3 bucket
--   to which dataset contents are delivered.
--   
--   <a>$sel:key:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_key</a> - The key of the dataset
--   contents object in an S3 bucket. Each object has a key that is a
--   unique identifier. Each object has exactly one key.
--   
--   You can create a unique key with the following options:
--   
--   <ul>
--   <li>Use <tt>!{iotanalytics:scheduleTime}</tt> to insert the time of a
--   scheduled SQL query run.</li>
--   <li>Use <tt>!{iotanalytics:versionId}</tt> to insert a unique hash
--   that identifies a dataset content.</li>
--   <li>Use <tt>!{iotanalytics:creationTime}</tt> to insert the creation
--   time of a dataset content.</li>
--   </ul>
--   
--   The following example creates a unique key for a CSV file:
--   <tt>dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv</tt>
--   
--   If you don't use <tt>!{iotanalytics:versionId}</tt> to specify the
--   key, you might get duplicate keys. For example, you might have two
--   dataset contents with the same <tt>scheduleTime</tt> but different
--   <tt>versionId</tt>s. This means that one dataset content overwrites
--   the other.
--   
--   <a>$sel:roleArn:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_roleArn</a> - The ARN of the role that
--   grants IoT Analytics permission to interact with your Amazon S3 and
--   Glue resources.
newS3DestinationConfiguration :: Text -> Text -> Text -> S3DestinationConfiguration

-- | Configuration information for coordination with Glue, a fully managed
--   extract, transform and load (ETL) service.
s3DestinationConfiguration_glueConfiguration :: Lens' S3DestinationConfiguration (Maybe GlueConfiguration)

-- | The name of the S3 bucket to which dataset contents are delivered.
s3DestinationConfiguration_bucket :: Lens' S3DestinationConfiguration Text

-- | The key of the dataset contents object in an S3 bucket. Each object
--   has a key that is a unique identifier. Each object has exactly one
--   key.
--   
--   You can create a unique key with the following options:
--   
--   <ul>
--   <li>Use <tt>!{iotanalytics:scheduleTime}</tt> to insert the time of a
--   scheduled SQL query run.</li>
--   <li>Use <tt>!{iotanalytics:versionId}</tt> to insert a unique hash
--   that identifies a dataset content.</li>
--   <li>Use <tt>!{iotanalytics:creationTime}</tt> to insert the creation
--   time of a dataset content.</li>
--   </ul>
--   
--   The following example creates a unique key for a CSV file:
--   <tt>dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv</tt>
--   
--   If you don't use <tt>!{iotanalytics:versionId}</tt> to specify the
--   key, you might get duplicate keys. For example, you might have two
--   dataset contents with the same <tt>scheduleTime</tt> but different
--   <tt>versionId</tt>s. This means that one dataset content overwrites
--   the other.
s3DestinationConfiguration_key :: Lens' S3DestinationConfiguration Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 and Glue resources.
s3DestinationConfiguration_roleArn :: Lens' S3DestinationConfiguration Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.S3DestinationConfiguration.S3DestinationConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.S3DestinationConfiguration.S3DestinationConfiguration


module Amazonka.IoTAnalytics.Types.DatasetContentDeliveryDestination

-- | The destination to which dataset contents are delivered.
--   
--   <i>See:</i> <a>newDatasetContentDeliveryDestination</a> smart
--   constructor.
data DatasetContentDeliveryDestination
DatasetContentDeliveryDestination' :: Maybe S3DestinationConfiguration -> Maybe IotEventsDestinationConfiguration -> DatasetContentDeliveryDestination

-- | Configuration information for delivery of dataset contents to Amazon
--   S3.
[$sel:s3DestinationConfiguration:DatasetContentDeliveryDestination'] :: DatasetContentDeliveryDestination -> Maybe S3DestinationConfiguration

-- | Configuration information for delivery of dataset contents to IoT
--   Events.
[$sel:iotEventsDestinationConfiguration:DatasetContentDeliveryDestination'] :: DatasetContentDeliveryDestination -> Maybe IotEventsDestinationConfiguration

-- | Create a value of <a>DatasetContentDeliveryDestination</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:s3DestinationConfiguration:DatasetContentDeliveryDestination'</a>,
--   <a>datasetContentDeliveryDestination_s3DestinationConfiguration</a> -
--   Configuration information for delivery of dataset contents to Amazon
--   S3.
--   
--   
--   <a>$sel:iotEventsDestinationConfiguration:DatasetContentDeliveryDestination'</a>,
--   <a>datasetContentDeliveryDestination_iotEventsDestinationConfiguration</a>
--   - Configuration information for delivery of dataset contents to IoT
--   Events.
newDatasetContentDeliveryDestination :: DatasetContentDeliveryDestination

-- | Configuration information for delivery of dataset contents to Amazon
--   S3.
datasetContentDeliveryDestination_s3DestinationConfiguration :: Lens' DatasetContentDeliveryDestination (Maybe S3DestinationConfiguration)

-- | Configuration information for delivery of dataset contents to IoT
--   Events.
datasetContentDeliveryDestination_iotEventsDestinationConfiguration :: Lens' DatasetContentDeliveryDestination (Maybe IotEventsDestinationConfiguration)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetContentDeliveryDestination.DatasetContentDeliveryDestination
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetContentDeliveryDestination.DatasetContentDeliveryDestination
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetContentDeliveryDestination.DatasetContentDeliveryDestination
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetContentDeliveryDestination.DatasetContentDeliveryDestination
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetContentDeliveryDestination.DatasetContentDeliveryDestination
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetContentDeliveryDestination.DatasetContentDeliveryDestination
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetContentDeliveryDestination.DatasetContentDeliveryDestination
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatasetContentDeliveryDestination.DatasetContentDeliveryDestination


module Amazonka.IoTAnalytics.Types.DatasetContentDeliveryRule

-- | When dataset contents are created, they are delivered to destination
--   specified here.
--   
--   <i>See:</i> <a>newDatasetContentDeliveryRule</a> smart constructor.
data DatasetContentDeliveryRule
DatasetContentDeliveryRule' :: Maybe Text -> DatasetContentDeliveryDestination -> DatasetContentDeliveryRule

-- | The name of the dataset content delivery rules entry.
[$sel:entryName:DatasetContentDeliveryRule'] :: DatasetContentDeliveryRule -> Maybe Text

-- | The destination to which dataset contents are delivered.
[$sel:destination:DatasetContentDeliveryRule'] :: DatasetContentDeliveryRule -> DatasetContentDeliveryDestination

-- | Create a value of <a>DatasetContentDeliveryRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entryName:DatasetContentDeliveryRule'</a>,
--   <a>datasetContentDeliveryRule_entryName</a> - The name of the dataset
--   content delivery rules entry.
--   
--   <a>$sel:destination:DatasetContentDeliveryRule'</a>,
--   <a>datasetContentDeliveryRule_destination</a> - The destination to
--   which dataset contents are delivered.
newDatasetContentDeliveryRule :: DatasetContentDeliveryDestination -> DatasetContentDeliveryRule

-- | The name of the dataset content delivery rules entry.
datasetContentDeliveryRule_entryName :: Lens' DatasetContentDeliveryRule (Maybe Text)

-- | The destination to which dataset contents are delivered.
datasetContentDeliveryRule_destination :: Lens' DatasetContentDeliveryRule DatasetContentDeliveryDestination
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetContentDeliveryRule.DatasetContentDeliveryRule
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetContentDeliveryRule.DatasetContentDeliveryRule
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetContentDeliveryRule.DatasetContentDeliveryRule
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetContentDeliveryRule.DatasetContentDeliveryRule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetContentDeliveryRule.DatasetContentDeliveryRule
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetContentDeliveryRule.DatasetContentDeliveryRule
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetContentDeliveryRule.DatasetContentDeliveryRule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatasetContentDeliveryRule.DatasetContentDeliveryRule


module Amazonka.IoTAnalytics.Types.Schedule

-- | The schedule for when to trigger an update.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe Text -> Schedule

-- | The expression that defines when to trigger an update. For more
--   information, see <a>Schedule Expressions for Rules</a> in the
--   <i>Amazon CloudWatch Events User Guide</i>.
[$sel:expression:Schedule'] :: Schedule -> Maybe Text

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expression:Schedule'</a>, <a>schedule_expression</a> - The
--   expression that defines when to trigger an update. For more
--   information, see <a>Schedule Expressions for Rules</a> in the
--   <i>Amazon CloudWatch Events User Guide</i>.
newSchedule :: Schedule

-- | The expression that defines when to trigger an update. For more
--   information, see <a>Schedule Expressions for Rules</a> in the
--   <i>Amazon CloudWatch Events User Guide</i>.
schedule_expression :: Lens' Schedule (Maybe Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.Schedule.Schedule
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.Schedule.Schedule
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.Schedule.Schedule
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.Schedule.Schedule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.Schedule.Schedule
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.Schedule.Schedule
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.Schedule.Schedule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.Schedule.Schedule


module Amazonka.IoTAnalytics.Types.SchemaDefinition

-- | Information needed to define a schema.
--   
--   <i>See:</i> <a>newSchemaDefinition</a> smart constructor.
data SchemaDefinition
SchemaDefinition' :: Maybe [Column] -> SchemaDefinition

-- | Specifies one or more columns that store your data.
--   
--   Each schema can have up to 100 columns. Each column can have up to 100
--   nested types.
[$sel:columns:SchemaDefinition'] :: SchemaDefinition -> Maybe [Column]

-- | Create a value of <a>SchemaDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:columns:SchemaDefinition'</a>, <a>schemaDefinition_columns</a>
--   - Specifies one or more columns that store your data.
--   
--   Each schema can have up to 100 columns. Each column can have up to 100
--   nested types.
newSchemaDefinition :: SchemaDefinition

-- | Specifies one or more columns that store your data.
--   
--   Each schema can have up to 100 columns. Each column can have up to 100
--   nested types.
schemaDefinition_columns :: Lens' SchemaDefinition (Maybe [Column])
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.SchemaDefinition.SchemaDefinition
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.SchemaDefinition.SchemaDefinition
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.SchemaDefinition.SchemaDefinition
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.SchemaDefinition.SchemaDefinition
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.SchemaDefinition.SchemaDefinition
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.SchemaDefinition.SchemaDefinition
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.SchemaDefinition.SchemaDefinition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.SchemaDefinition.SchemaDefinition


module Amazonka.IoTAnalytics.Types.ParquetConfiguration

-- | Contains the configuration information of the Parquet format.
--   
--   <i>See:</i> <a>newParquetConfiguration</a> smart constructor.
data ParquetConfiguration
ParquetConfiguration' :: Maybe SchemaDefinition -> ParquetConfiguration

-- | Information needed to define a schema.
[$sel:schemaDefinition:ParquetConfiguration'] :: ParquetConfiguration -> Maybe SchemaDefinition

-- | Create a value of <a>ParquetConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaDefinition:ParquetConfiguration'</a>,
--   <a>parquetConfiguration_schemaDefinition</a> - Information needed to
--   define a schema.
newParquetConfiguration :: ParquetConfiguration

-- | Information needed to define a schema.
parquetConfiguration_schemaDefinition :: Lens' ParquetConfiguration (Maybe SchemaDefinition)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ParquetConfiguration.ParquetConfiguration
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ParquetConfiguration.ParquetConfiguration
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ParquetConfiguration.ParquetConfiguration
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ParquetConfiguration.ParquetConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ParquetConfiguration.ParquetConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ParquetConfiguration.ParquetConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ParquetConfiguration.ParquetConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.ParquetConfiguration.ParquetConfiguration


module Amazonka.IoTAnalytics.Types.FileFormatConfiguration

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
--   
--   <i>See:</i> <a>newFileFormatConfiguration</a> smart constructor.
data FileFormatConfiguration
FileFormatConfiguration' :: Maybe JsonConfiguration -> Maybe ParquetConfiguration -> FileFormatConfiguration

-- | Contains the configuration information of the JSON format.
[$sel:jsonConfiguration:FileFormatConfiguration'] :: FileFormatConfiguration -> Maybe JsonConfiguration

-- | Contains the configuration information of the Parquet format.
[$sel:parquetConfiguration:FileFormatConfiguration'] :: FileFormatConfiguration -> Maybe ParquetConfiguration

-- | Create a value of <a>FileFormatConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonConfiguration:FileFormatConfiguration'</a>,
--   <a>fileFormatConfiguration_jsonConfiguration</a> - Contains the
--   configuration information of the JSON format.
--   
--   <a>$sel:parquetConfiguration:FileFormatConfiguration'</a>,
--   <a>fileFormatConfiguration_parquetConfiguration</a> - Contains the
--   configuration information of the Parquet format.
newFileFormatConfiguration :: FileFormatConfiguration

-- | Contains the configuration information of the JSON format.
fileFormatConfiguration_jsonConfiguration :: Lens' FileFormatConfiguration (Maybe JsonConfiguration)

-- | Contains the configuration information of the Parquet format.
fileFormatConfiguration_parquetConfiguration :: Lens' FileFormatConfiguration (Maybe ParquetConfiguration)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.FileFormatConfiguration.FileFormatConfiguration
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.FileFormatConfiguration.FileFormatConfiguration
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.FileFormatConfiguration.FileFormatConfiguration
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.FileFormatConfiguration.FileFormatConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.FileFormatConfiguration.FileFormatConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.FileFormatConfiguration.FileFormatConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.FileFormatConfiguration.FileFormatConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.FileFormatConfiguration.FileFormatConfiguration


module Amazonka.IoTAnalytics.Types.SelectAttributesActivity

-- | Used to create a new message using only the specified attributes from
--   the original message.
--   
--   <i>See:</i> <a>newSelectAttributesActivity</a> smart constructor.
data SelectAttributesActivity
SelectAttributesActivity' :: Maybe Text -> Text -> NonEmpty Text -> SelectAttributesActivity

-- | The next activity in the pipeline.
[$sel:next:SelectAttributesActivity'] :: SelectAttributesActivity -> Maybe Text

-- | The name of the <tt>selectAttributes</tt> activity.
[$sel:name:SelectAttributesActivity'] :: SelectAttributesActivity -> Text

-- | A list of the attributes to select from the message.
[$sel:attributes:SelectAttributesActivity'] :: SelectAttributesActivity -> NonEmpty Text

-- | Create a value of <a>SelectAttributesActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:SelectAttributesActivity'</a>,
--   <a>selectAttributesActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:SelectAttributesActivity'</a>,
--   <a>selectAttributesActivity_name</a> - The name of the
--   <tt>selectAttributes</tt> activity.
--   
--   <a>$sel:attributes:SelectAttributesActivity'</a>,
--   <a>selectAttributesActivity_attributes</a> - A list of the attributes
--   to select from the message.
newSelectAttributesActivity :: Text -> NonEmpty Text -> SelectAttributesActivity

-- | The next activity in the pipeline.
selectAttributesActivity_next :: Lens' SelectAttributesActivity (Maybe Text)

-- | The name of the <tt>selectAttributes</tt> activity.
selectAttributesActivity_name :: Lens' SelectAttributesActivity Text

-- | A list of the attributes to select from the message.
selectAttributesActivity_attributes :: Lens' SelectAttributesActivity (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.SelectAttributesActivity.SelectAttributesActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.SelectAttributesActivity.SelectAttributesActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.SelectAttributesActivity.SelectAttributesActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.SelectAttributesActivity.SelectAttributesActivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.SelectAttributesActivity.SelectAttributesActivity
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.SelectAttributesActivity.SelectAttributesActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.SelectAttributesActivity.SelectAttributesActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.SelectAttributesActivity.SelectAttributesActivity


module Amazonka.IoTAnalytics.Types.PipelineActivity

-- | An activity that performs a transformation on a message.
--   
--   <i>See:</i> <a>newPipelineActivity</a> smart constructor.
data PipelineActivity
PipelineActivity' :: Maybe SelectAttributesActivity -> Maybe ChannelActivity -> Maybe AddAttributesActivity -> Maybe DeviceRegistryEnrichActivity -> Maybe RemoveAttributesActivity -> Maybe LambdaActivity -> Maybe DatastoreActivity -> Maybe DeviceShadowEnrichActivity -> Maybe FilterActivity -> Maybe MathActivity -> PipelineActivity

-- | Used to create a new message using only the specified attributes from
--   the original message.
[$sel:selectAttributes:PipelineActivity'] :: PipelineActivity -> Maybe SelectAttributesActivity

-- | Determines the source of the messages to be processed.
[$sel:channel:PipelineActivity'] :: PipelineActivity -> Maybe ChannelActivity

-- | Adds other attributes based on existing attributes in the message.
[$sel:addAttributes:PipelineActivity'] :: PipelineActivity -> Maybe AddAttributesActivity

-- | Adds data from the IoT device registry to your message.
[$sel:deviceRegistryEnrich:PipelineActivity'] :: PipelineActivity -> Maybe DeviceRegistryEnrichActivity

-- | Removes attributes from a message.
[$sel:removeAttributes:PipelineActivity'] :: PipelineActivity -> Maybe RemoveAttributesActivity

-- | Runs a Lambda function to modify the message.
[$sel:lambda:PipelineActivity'] :: PipelineActivity -> Maybe LambdaActivity

-- | Specifies where to store the processed message data.
[$sel:datastore:PipelineActivity'] :: PipelineActivity -> Maybe DatastoreActivity

-- | Adds information from the IoT Device Shadow service to a message.
[$sel:deviceShadowEnrich:PipelineActivity'] :: PipelineActivity -> Maybe DeviceShadowEnrichActivity

-- | Filters a message based on its attributes.
[$sel:filter':PipelineActivity'] :: PipelineActivity -> Maybe FilterActivity

-- | Computes an arithmetic expression using the message's attributes and
--   adds it to the message.
[$sel:math:PipelineActivity'] :: PipelineActivity -> Maybe MathActivity

-- | Create a value of <a>PipelineActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectAttributes:PipelineActivity'</a>,
--   <a>pipelineActivity_selectAttributes</a> - Used to create a new
--   message using only the specified attributes from the original message.
--   
--   <a>$sel:channel:PipelineActivity'</a>, <a>pipelineActivity_channel</a>
--   - Determines the source of the messages to be processed.
--   
--   <a>$sel:addAttributes:PipelineActivity'</a>,
--   <a>pipelineActivity_addAttributes</a> - Adds other attributes based on
--   existing attributes in the message.
--   
--   <a>$sel:deviceRegistryEnrich:PipelineActivity'</a>,
--   <a>pipelineActivity_deviceRegistryEnrich</a> - Adds data from the IoT
--   device registry to your message.
--   
--   <a>$sel:removeAttributes:PipelineActivity'</a>,
--   <a>pipelineActivity_removeAttributes</a> - Removes attributes from a
--   message.
--   
--   <a>$sel:lambda:PipelineActivity'</a>, <a>pipelineActivity_lambda</a> -
--   Runs a Lambda function to modify the message.
--   
--   <a>$sel:datastore:PipelineActivity'</a>,
--   <a>pipelineActivity_datastore</a> - Specifies where to store the
--   processed message data.
--   
--   <a>$sel:deviceShadowEnrich:PipelineActivity'</a>,
--   <a>pipelineActivity_deviceShadowEnrich</a> - Adds information from the
--   IoT Device Shadow service to a message.
--   
--   <a>$sel:filter':PipelineActivity'</a>, <a>pipelineActivity_filter</a>
--   - Filters a message based on its attributes.
--   
--   <a>$sel:math:PipelineActivity'</a>, <a>pipelineActivity_math</a> -
--   Computes an arithmetic expression using the message's attributes and
--   adds it to the message.
newPipelineActivity :: PipelineActivity

-- | Used to create a new message using only the specified attributes from
--   the original message.
pipelineActivity_selectAttributes :: Lens' PipelineActivity (Maybe SelectAttributesActivity)

-- | Determines the source of the messages to be processed.
pipelineActivity_channel :: Lens' PipelineActivity (Maybe ChannelActivity)

-- | Adds other attributes based on existing attributes in the message.
pipelineActivity_addAttributes :: Lens' PipelineActivity (Maybe AddAttributesActivity)

-- | Adds data from the IoT device registry to your message.
pipelineActivity_deviceRegistryEnrich :: Lens' PipelineActivity (Maybe DeviceRegistryEnrichActivity)

-- | Removes attributes from a message.
pipelineActivity_removeAttributes :: Lens' PipelineActivity (Maybe RemoveAttributesActivity)

-- | Runs a Lambda function to modify the message.
pipelineActivity_lambda :: Lens' PipelineActivity (Maybe LambdaActivity)

-- | Specifies where to store the processed message data.
pipelineActivity_datastore :: Lens' PipelineActivity (Maybe DatastoreActivity)

-- | Adds information from the IoT Device Shadow service to a message.
pipelineActivity_deviceShadowEnrich :: Lens' PipelineActivity (Maybe DeviceShadowEnrichActivity)

-- | Filters a message based on its attributes.
pipelineActivity_filter :: Lens' PipelineActivity (Maybe FilterActivity)

-- | Computes an arithmetic expression using the message's attributes and
--   adds it to the message.
pipelineActivity_math :: Lens' PipelineActivity (Maybe MathActivity)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.PipelineActivity.PipelineActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.PipelineActivity.PipelineActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.PipelineActivity.PipelineActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.PipelineActivity.PipelineActivity
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.PipelineActivity.PipelineActivity
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.PipelineActivity.PipelineActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.PipelineActivity.PipelineActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.PipelineActivity.PipelineActivity


module Amazonka.IoTAnalytics.Types.Pipeline

-- | Contains information about a pipeline.
--   
--   <i>See:</i> <a>newPipeline</a> smart constructor.
data Pipeline
Pipeline' :: Maybe POSIX -> Maybe Text -> Maybe (NonEmpty PipelineActivity) -> Maybe Text -> Maybe [ReprocessingSummary] -> Maybe POSIX -> Pipeline

-- | When the pipeline was created.
[$sel:creationTime:Pipeline'] :: Pipeline -> Maybe POSIX

-- | The ARN of the pipeline.
[$sel:arn:Pipeline'] :: Pipeline -> Maybe Text

-- | The activities that perform transformations on the messages.
[$sel:activities:Pipeline'] :: Pipeline -> Maybe (NonEmpty PipelineActivity)

-- | The name of the pipeline.
[$sel:name:Pipeline'] :: Pipeline -> Maybe Text

-- | A summary of information about the pipeline reprocessing.
[$sel:reprocessingSummaries:Pipeline'] :: Pipeline -> Maybe [ReprocessingSummary]

-- | The last time the pipeline was updated.
[$sel:lastUpdateTime:Pipeline'] :: Pipeline -> Maybe POSIX

-- | Create a value of <a>Pipeline</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Pipeline'</a>, <a>pipeline_creationTime</a> -
--   When the pipeline was created.
--   
--   <a>$sel:arn:Pipeline'</a>, <a>pipeline_arn</a> - The ARN of the
--   pipeline.
--   
--   <a>$sel:activities:Pipeline'</a>, <a>pipeline_activities</a> - The
--   activities that perform transformations on the messages.
--   
--   <a>$sel:name:Pipeline'</a>, <a>pipeline_name</a> - The name of the
--   pipeline.
--   
--   <a>$sel:reprocessingSummaries:Pipeline'</a>,
--   <a>pipeline_reprocessingSummaries</a> - A summary of information about
--   the pipeline reprocessing.
--   
--   <a>$sel:lastUpdateTime:Pipeline'</a>, <a>pipeline_lastUpdateTime</a> -
--   The last time the pipeline was updated.
newPipeline :: Pipeline

-- | When the pipeline was created.
pipeline_creationTime :: Lens' Pipeline (Maybe UTCTime)

-- | The ARN of the pipeline.
pipeline_arn :: Lens' Pipeline (Maybe Text)

-- | The activities that perform transformations on the messages.
pipeline_activities :: Lens' Pipeline (Maybe (NonEmpty PipelineActivity))

-- | The name of the pipeline.
pipeline_name :: Lens' Pipeline (Maybe Text)

-- | A summary of information about the pipeline reprocessing.
pipeline_reprocessingSummaries :: Lens' Pipeline (Maybe [ReprocessingSummary])

-- | The last time the pipeline was updated.
pipeline_lastUpdateTime :: Lens' Pipeline (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.Pipeline.Pipeline
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.Pipeline.Pipeline
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.Pipeline.Pipeline
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.Pipeline.Pipeline
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.Pipeline.Pipeline
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.Pipeline.Pipeline
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.Pipeline.Pipeline


module Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3Storage

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
--   You can't change the choice of S3 storage after the data store is
--   created.
--   
--   <i>See:</i> <a>newServiceManagedChannelS3Storage</a> smart
--   constructor.
data ServiceManagedChannelS3Storage
ServiceManagedChannelS3Storage' :: ServiceManagedChannelS3Storage

-- | Create a value of <a>ServiceManagedChannelS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedChannelS3Storage :: ServiceManagedChannelS3Storage
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3Storage.ServiceManagedChannelS3Storage
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3Storage.ServiceManagedChannelS3Storage
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3Storage.ServiceManagedChannelS3Storage
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3Storage.ServiceManagedChannelS3Storage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3Storage.ServiceManagedChannelS3Storage
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3Storage.ServiceManagedChannelS3Storage
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3Storage.ServiceManagedChannelS3Storage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3Storage.ServiceManagedChannelS3Storage


module Amazonka.IoTAnalytics.Types.ChannelStorage

-- | Where channel data is stored. You may choose one of
--   <tt>serviceManagedS3</tt>, <tt>customerManagedS3</tt> storage. If not
--   specified, the default is <tt>serviceManagedS3</tt>. This can't be
--   changed after creation of the channel.
--   
--   <i>See:</i> <a>newChannelStorage</a> smart constructor.
data ChannelStorage
ChannelStorage' :: Maybe ServiceManagedChannelS3Storage -> Maybe CustomerManagedChannelS3Storage -> ChannelStorage

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
--   You can't change the choice of S3 storage after the data store is
--   created.
[$sel:serviceManagedS3:ChannelStorage'] :: ChannelStorage -> Maybe ServiceManagedChannelS3Storage

-- | Used to store channel data in an S3 bucket that you manage. If
--   customer managed storage is selected, the <tt>retentionPeriod</tt>
--   parameter is ignored. You can't change the choice of S3 storage after
--   the data store is created.
[$sel:customerManagedS3:ChannelStorage'] :: ChannelStorage -> Maybe CustomerManagedChannelS3Storage

-- | Create a value of <a>ChannelStorage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:ChannelStorage'</a>,
--   <a>channelStorage_serviceManagedS3</a> - Used to store channel data in
--   an S3 bucket managed by IoT Analytics. You can't change the choice of
--   S3 storage after the data store is created.
--   
--   <a>$sel:customerManagedS3:ChannelStorage'</a>,
--   <a>channelStorage_customerManagedS3</a> - Used to store channel data
--   in an S3 bucket that you manage. If customer managed storage is
--   selected, the <tt>retentionPeriod</tt> parameter is ignored. You can't
--   change the choice of S3 storage after the data store is created.
newChannelStorage :: ChannelStorage

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
--   You can't change the choice of S3 storage after the data store is
--   created.
channelStorage_serviceManagedS3 :: Lens' ChannelStorage (Maybe ServiceManagedChannelS3Storage)

-- | Used to store channel data in an S3 bucket that you manage. If
--   customer managed storage is selected, the <tt>retentionPeriod</tt>
--   parameter is ignored. You can't change the choice of S3 storage after
--   the data store is created.
channelStorage_customerManagedS3 :: Lens' ChannelStorage (Maybe CustomerManagedChannelS3Storage)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ChannelStorage.ChannelStorage
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ChannelStorage.ChannelStorage
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ChannelStorage.ChannelStorage
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ChannelStorage.ChannelStorage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ChannelStorage.ChannelStorage
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ChannelStorage.ChannelStorage
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ChannelStorage.ChannelStorage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.ChannelStorage.ChannelStorage


module Amazonka.IoTAnalytics.Types.Channel

-- | A collection of data from an MQTT topic. Channels archive the raw,
--   unprocessed messages before publishing the data to a pipeline.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe POSIX -> Maybe ChannelStatus -> Maybe POSIX -> Maybe Text -> Maybe ChannelStorage -> Maybe RetentionPeriod -> Maybe Text -> Maybe POSIX -> Channel

-- | When the channel was created.
[$sel:creationTime:Channel'] :: Channel -> Maybe POSIX

-- | The status of the channel.
[$sel:status:Channel'] :: Channel -> Maybe ChannelStatus

-- | The last time when a new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
[$sel:lastMessageArrivalTime:Channel'] :: Channel -> Maybe POSIX

-- | The ARN of the channel.
[$sel:arn:Channel'] :: Channel -> Maybe Text

-- | Where channel data is stored. You can choose one of
--   <tt>serviceManagedS3</tt> or <tt>customerManagedS3</tt> storage. If
--   not specified, the default is <tt>serviceManagedS3</tt>. You can't
--   change this storage option after the channel is created.
[$sel:storage:Channel'] :: Channel -> Maybe ChannelStorage

-- | How long, in days, message data is kept for the channel.
[$sel:retentionPeriod:Channel'] :: Channel -> Maybe RetentionPeriod

-- | The name of the channel.
[$sel:name:Channel'] :: Channel -> Maybe Text

-- | When the channel was last updated.
[$sel:lastUpdateTime:Channel'] :: Channel -> Maybe POSIX

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Channel'</a>, <a>channel_creationTime</a> - When
--   the channel was created.
--   
--   <a>$sel:status:Channel'</a>, <a>channel_status</a> - The status of the
--   channel.
--   
--   <a>$sel:lastMessageArrivalTime:Channel'</a>,
--   <a>channel_lastMessageArrivalTime</a> - The last time when a new
--   message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:arn:Channel'</a>, <a>channel_arn</a> - The ARN of the channel.
--   
--   <a>$sel:storage:Channel'</a>, <a>channel_storage</a> - Where channel
--   data is stored. You can choose one of <tt>serviceManagedS3</tt> or
--   <tt>customerManagedS3</tt> storage. If not specified, the default is
--   <tt>serviceManagedS3</tt>. You can't change this storage option after
--   the channel is created.
--   
--   <a>$sel:retentionPeriod:Channel'</a>, <a>channel_retentionPeriod</a> -
--   How long, in days, message data is kept for the channel.
--   
--   <a>$sel:name:Channel'</a>, <a>channel_name</a> - The name of the
--   channel.
--   
--   <a>$sel:lastUpdateTime:Channel'</a>, <a>channel_lastUpdateTime</a> -
--   When the channel was last updated.
newChannel :: Channel

-- | When the channel was created.
channel_creationTime :: Lens' Channel (Maybe UTCTime)

-- | The status of the channel.
channel_status :: Lens' Channel (Maybe ChannelStatus)

-- | The last time when a new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
channel_lastMessageArrivalTime :: Lens' Channel (Maybe UTCTime)

-- | The ARN of the channel.
channel_arn :: Lens' Channel (Maybe Text)

-- | Where channel data is stored. You can choose one of
--   <tt>serviceManagedS3</tt> or <tt>customerManagedS3</tt> storage. If
--   not specified, the default is <tt>serviceManagedS3</tt>. You can't
--   change this storage option after the channel is created.
channel_storage :: Lens' Channel (Maybe ChannelStorage)

-- | How long, in days, message data is kept for the channel.
channel_retentionPeriod :: Lens' Channel (Maybe RetentionPeriod)

-- | The name of the channel.
channel_name :: Lens' Channel (Maybe Text)

-- | When the channel was last updated.
channel_lastUpdateTime :: Lens' Channel (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.Channel.Channel
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.Channel.Channel
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.Channel.Channel
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.Channel.Channel
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.Channel.Channel
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.Channel.Channel
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.Channel.Channel


module Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3StorageSummary

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
--   
--   <i>See:</i> <a>newServiceManagedChannelS3StorageSummary</a> smart
--   constructor.
data ServiceManagedChannelS3StorageSummary
ServiceManagedChannelS3StorageSummary' :: ServiceManagedChannelS3StorageSummary

-- | Create a value of <a>ServiceManagedChannelS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedChannelS3StorageSummary :: ServiceManagedChannelS3StorageSummary
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3StorageSummary.ServiceManagedChannelS3StorageSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3StorageSummary.ServiceManagedChannelS3StorageSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3StorageSummary.ServiceManagedChannelS3StorageSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3StorageSummary.ServiceManagedChannelS3StorageSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3StorageSummary.ServiceManagedChannelS3StorageSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3StorageSummary.ServiceManagedChannelS3StorageSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ServiceManagedChannelS3StorageSummary.ServiceManagedChannelS3StorageSummary


module Amazonka.IoTAnalytics.Types.ChannelStorageSummary

-- | Where channel data is stored.
--   
--   <i>See:</i> <a>newChannelStorageSummary</a> smart constructor.
data ChannelStorageSummary
ChannelStorageSummary' :: Maybe ServiceManagedChannelS3StorageSummary -> Maybe CustomerManagedChannelS3StorageSummary -> ChannelStorageSummary

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
[$sel:serviceManagedS3:ChannelStorageSummary'] :: ChannelStorageSummary -> Maybe ServiceManagedChannelS3StorageSummary

-- | Used to store channel data in an S3 bucket that you manage.
[$sel:customerManagedS3:ChannelStorageSummary'] :: ChannelStorageSummary -> Maybe CustomerManagedChannelS3StorageSummary

-- | Create a value of <a>ChannelStorageSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:ChannelStorageSummary'</a>,
--   <a>channelStorageSummary_serviceManagedS3</a> - Used to store channel
--   data in an S3 bucket managed by IoT Analytics.
--   
--   <a>$sel:customerManagedS3:ChannelStorageSummary'</a>,
--   <a>channelStorageSummary_customerManagedS3</a> - Used to store channel
--   data in an S3 bucket that you manage.
newChannelStorageSummary :: ChannelStorageSummary

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
channelStorageSummary_serviceManagedS3 :: Lens' ChannelStorageSummary (Maybe ServiceManagedChannelS3StorageSummary)

-- | Used to store channel data in an S3 bucket that you manage.
channelStorageSummary_customerManagedS3 :: Lens' ChannelStorageSummary (Maybe CustomerManagedChannelS3StorageSummary)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ChannelStorageSummary.ChannelStorageSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ChannelStorageSummary.ChannelStorageSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ChannelStorageSummary.ChannelStorageSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ChannelStorageSummary.ChannelStorageSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ChannelStorageSummary.ChannelStorageSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ChannelStorageSummary.ChannelStorageSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ChannelStorageSummary.ChannelStorageSummary


module Amazonka.IoTAnalytics.Types.ChannelSummary

-- | A summary of information about a channel.
--   
--   <i>See:</i> <a>newChannelSummary</a> smart constructor.
data ChannelSummary
ChannelSummary' :: Maybe POSIX -> Maybe ChannelStatus -> Maybe POSIX -> Maybe Text -> Maybe ChannelStorageSummary -> Maybe POSIX -> ChannelSummary

-- | When the channel was created.
[$sel:creationTime:ChannelSummary'] :: ChannelSummary -> Maybe POSIX

-- | The status of the channel.
[$sel:status:ChannelSummary'] :: ChannelSummary -> Maybe ChannelStatus

-- | The last time when a new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
[$sel:lastMessageArrivalTime:ChannelSummary'] :: ChannelSummary -> Maybe POSIX

-- | The name of the channel.
[$sel:channelName:ChannelSummary'] :: ChannelSummary -> Maybe Text

-- | Where channel data is stored.
[$sel:channelStorage:ChannelSummary'] :: ChannelSummary -> Maybe ChannelStorageSummary

-- | The last time the channel was updated.
[$sel:lastUpdateTime:ChannelSummary'] :: ChannelSummary -> Maybe POSIX

-- | Create a value of <a>ChannelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ChannelSummary'</a>,
--   <a>channelSummary_creationTime</a> - When the channel was created.
--   
--   <a>$sel:status:ChannelSummary'</a>, <a>channelSummary_status</a> - The
--   status of the channel.
--   
--   <a>$sel:lastMessageArrivalTime:ChannelSummary'</a>,
--   <a>channelSummary_lastMessageArrivalTime</a> - The last time when a
--   new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:channelName:ChannelSummary'</a>,
--   <a>channelSummary_channelName</a> - The name of the channel.
--   
--   <a>$sel:channelStorage:ChannelSummary'</a>,
--   <a>channelSummary_channelStorage</a> - Where channel data is stored.
--   
--   <a>$sel:lastUpdateTime:ChannelSummary'</a>,
--   <a>channelSummary_lastUpdateTime</a> - The last time the channel was
--   updated.
newChannelSummary :: ChannelSummary

-- | When the channel was created.
channelSummary_creationTime :: Lens' ChannelSummary (Maybe UTCTime)

-- | The status of the channel.
channelSummary_status :: Lens' ChannelSummary (Maybe ChannelStatus)

-- | The last time when a new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
channelSummary_lastMessageArrivalTime :: Lens' ChannelSummary (Maybe UTCTime)

-- | The name of the channel.
channelSummary_channelName :: Lens' ChannelSummary (Maybe Text)

-- | Where channel data is stored.
channelSummary_channelStorage :: Lens' ChannelSummary (Maybe ChannelStorageSummary)

-- | The last time the channel was updated.
channelSummary_lastUpdateTime :: Lens' ChannelSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ChannelSummary.ChannelSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ChannelSummary.ChannelSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ChannelSummary.ChannelSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ChannelSummary.ChannelSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ChannelSummary.ChannelSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ChannelSummary.ChannelSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ChannelSummary.ChannelSummary


module Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3Storage

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
--   You can't change the choice of Amazon S3 storage after your data store
--   is created.
--   
--   <i>See:</i> <a>newServiceManagedDatastoreS3Storage</a> smart
--   constructor.
data ServiceManagedDatastoreS3Storage
ServiceManagedDatastoreS3Storage' :: ServiceManagedDatastoreS3Storage

-- | Create a value of <a>ServiceManagedDatastoreS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedDatastoreS3Storage :: ServiceManagedDatastoreS3Storage
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3Storage.ServiceManagedDatastoreS3Storage
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3Storage.ServiceManagedDatastoreS3Storage
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3Storage.ServiceManagedDatastoreS3Storage
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3Storage.ServiceManagedDatastoreS3Storage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3Storage.ServiceManagedDatastoreS3Storage
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3Storage.ServiceManagedDatastoreS3Storage
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3Storage.ServiceManagedDatastoreS3Storage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3Storage.ServiceManagedDatastoreS3Storage


module Amazonka.IoTAnalytics.Types.DatastoreStorage

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
--   
--   <i>See:</i> <a>newDatastoreStorage</a> smart constructor.
data DatastoreStorage
DatastoreStorage' :: Maybe ServiceManagedDatastoreS3Storage -> Maybe CustomerManagedDatastoreS3Storage -> Maybe DatastoreIotSiteWiseMultiLayerStorage -> DatastoreStorage

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
--   You can't change the choice of Amazon S3 storage after your data store
--   is created.
[$sel:serviceManagedS3:DatastoreStorage'] :: DatastoreStorage -> Maybe ServiceManagedDatastoreS3Storage

-- | S3-customer-managed; When you choose customer-managed storage, the
--   <tt>retentionPeriod</tt> parameter is ignored. You can't change the
--   choice of Amazon S3 storage after your data store is created.
[$sel:customerManagedS3:DatastoreStorage'] :: DatastoreStorage -> Maybe CustomerManagedDatastoreS3Storage

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage. You can't change the choice of Amazon S3 storage after
--   your data store is created.
[$sel:iotSiteWiseMultiLayerStorage:DatastoreStorage'] :: DatastoreStorage -> Maybe DatastoreIotSiteWiseMultiLayerStorage

-- | Create a value of <a>DatastoreStorage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:DatastoreStorage'</a>,
--   <a>datastoreStorage_serviceManagedS3</a> - Used to store data in an
--   Amazon S3 bucket managed by IoT Analytics. You can't change the choice
--   of Amazon S3 storage after your data store is created.
--   
--   <a>$sel:customerManagedS3:DatastoreStorage'</a>,
--   <a>datastoreStorage_customerManagedS3</a> - S3-customer-managed; When
--   you choose customer-managed storage, the <tt>retentionPeriod</tt>
--   parameter is ignored. You can't change the choice of Amazon S3 storage
--   after your data store is created.
--   
--   <a>$sel:iotSiteWiseMultiLayerStorage:DatastoreStorage'</a>,
--   <a>datastoreStorage_iotSiteWiseMultiLayerStorage</a> - Used to store
--   data used by IoT SiteWise in an Amazon S3 bucket that you manage. You
--   can't change the choice of Amazon S3 storage after your data store is
--   created.
newDatastoreStorage :: DatastoreStorage

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
--   You can't change the choice of Amazon S3 storage after your data store
--   is created.
datastoreStorage_serviceManagedS3 :: Lens' DatastoreStorage (Maybe ServiceManagedDatastoreS3Storage)

-- | S3-customer-managed; When you choose customer-managed storage, the
--   <tt>retentionPeriod</tt> parameter is ignored. You can't change the
--   choice of Amazon S3 storage after your data store is created.
datastoreStorage_customerManagedS3 :: Lens' DatastoreStorage (Maybe CustomerManagedDatastoreS3Storage)

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage. You can't change the choice of Amazon S3 storage after
--   your data store is created.
datastoreStorage_iotSiteWiseMultiLayerStorage :: Lens' DatastoreStorage (Maybe DatastoreIotSiteWiseMultiLayerStorage)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatastoreStorage.DatastoreStorage
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatastoreStorage.DatastoreStorage
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatastoreStorage.DatastoreStorage
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatastoreStorage.DatastoreStorage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatastoreStorage.DatastoreStorage
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatastoreStorage.DatastoreStorage
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatastoreStorage.DatastoreStorage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatastoreStorage.DatastoreStorage


module Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3StorageSummary

-- | Contains information about the data store that is managed by IoT
--   Analytics.
--   
--   <i>See:</i> <a>newServiceManagedDatastoreS3StorageSummary</a> smart
--   constructor.
data ServiceManagedDatastoreS3StorageSummary
ServiceManagedDatastoreS3StorageSummary' :: ServiceManagedDatastoreS3StorageSummary

-- | Create a value of <a>ServiceManagedDatastoreS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedDatastoreS3StorageSummary :: ServiceManagedDatastoreS3StorageSummary
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3StorageSummary.ServiceManagedDatastoreS3StorageSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3StorageSummary.ServiceManagedDatastoreS3StorageSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3StorageSummary.ServiceManagedDatastoreS3StorageSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3StorageSummary.ServiceManagedDatastoreS3StorageSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3StorageSummary.ServiceManagedDatastoreS3StorageSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3StorageSummary.ServiceManagedDatastoreS3StorageSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ServiceManagedDatastoreS3StorageSummary.ServiceManagedDatastoreS3StorageSummary


module Amazonka.IoTAnalytics.Types.DatastoreStorageSummary

-- | Contains information about your data store.
--   
--   <i>See:</i> <a>newDatastoreStorageSummary</a> smart constructor.
data DatastoreStorageSummary
DatastoreStorageSummary' :: Maybe ServiceManagedDatastoreS3StorageSummary -> Maybe CustomerManagedDatastoreS3StorageSummary -> Maybe DatastoreIotSiteWiseMultiLayerStorageSummary -> DatastoreStorageSummary

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
[$sel:serviceManagedS3:DatastoreStorageSummary'] :: DatastoreStorageSummary -> Maybe ServiceManagedDatastoreS3StorageSummary

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
[$sel:customerManagedS3:DatastoreStorageSummary'] :: DatastoreStorageSummary -> Maybe CustomerManagedDatastoreS3StorageSummary

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
[$sel:iotSiteWiseMultiLayerStorage:DatastoreStorageSummary'] :: DatastoreStorageSummary -> Maybe DatastoreIotSiteWiseMultiLayerStorageSummary

-- | Create a value of <a>DatastoreStorageSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:DatastoreStorageSummary'</a>,
--   <a>datastoreStorageSummary_serviceManagedS3</a> - Used to store data
--   in an Amazon S3 bucket managed by IoT Analytics.
--   
--   <a>$sel:customerManagedS3:DatastoreStorageSummary'</a>,
--   <a>datastoreStorageSummary_customerManagedS3</a> - Used to store data
--   in an Amazon S3 bucket managed by IoT Analytics.
--   
--   <a>$sel:iotSiteWiseMultiLayerStorage:DatastoreStorageSummary'</a>,
--   <a>datastoreStorageSummary_iotSiteWiseMultiLayerStorage</a> - Used to
--   store data used by IoT SiteWise in an Amazon S3 bucket that you
--   manage.
newDatastoreStorageSummary :: DatastoreStorageSummary

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
datastoreStorageSummary_serviceManagedS3 :: Lens' DatastoreStorageSummary (Maybe ServiceManagedDatastoreS3StorageSummary)

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
datastoreStorageSummary_customerManagedS3 :: Lens' DatastoreStorageSummary (Maybe CustomerManagedDatastoreS3StorageSummary)

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
datastoreStorageSummary_iotSiteWiseMultiLayerStorage :: Lens' DatastoreStorageSummary (Maybe DatastoreIotSiteWiseMultiLayerStorageSummary)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatastoreStorageSummary.DatastoreStorageSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatastoreStorageSummary.DatastoreStorageSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatastoreStorageSummary.DatastoreStorageSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatastoreStorageSummary.DatastoreStorageSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatastoreStorageSummary.DatastoreStorageSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatastoreStorageSummary.DatastoreStorageSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatastoreStorageSummary.DatastoreStorageSummary


module Amazonka.IoTAnalytics.Types.SqlQueryDatasetAction

-- | The SQL query to modify the message.
--   
--   <i>See:</i> <a>newSqlQueryDatasetAction</a> smart constructor.
data SqlQueryDatasetAction
SqlQueryDatasetAction' :: Maybe [QueryFilter] -> Text -> SqlQueryDatasetAction

-- | Prefilters applied to message data.
[$sel:filters:SqlQueryDatasetAction'] :: SqlQueryDatasetAction -> Maybe [QueryFilter]

-- | A SQL query string.
[$sel:sqlQuery:SqlQueryDatasetAction'] :: SqlQueryDatasetAction -> Text

-- | Create a value of <a>SqlQueryDatasetAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:SqlQueryDatasetAction'</a>,
--   <a>sqlQueryDatasetAction_filters</a> - Prefilters applied to message
--   data.
--   
--   <a>$sel:sqlQuery:SqlQueryDatasetAction'</a>,
--   <a>sqlQueryDatasetAction_sqlQuery</a> - A SQL query string.
newSqlQueryDatasetAction :: Text -> SqlQueryDatasetAction

-- | Prefilters applied to message data.
sqlQueryDatasetAction_filters :: Lens' SqlQueryDatasetAction (Maybe [QueryFilter])

-- | A SQL query string.
sqlQueryDatasetAction_sqlQuery :: Lens' SqlQueryDatasetAction Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.SqlQueryDatasetAction.SqlQueryDatasetAction
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.SqlQueryDatasetAction.SqlQueryDatasetAction
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.SqlQueryDatasetAction.SqlQueryDatasetAction
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.SqlQueryDatasetAction.SqlQueryDatasetAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.SqlQueryDatasetAction.SqlQueryDatasetAction
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.SqlQueryDatasetAction.SqlQueryDatasetAction
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.SqlQueryDatasetAction.SqlQueryDatasetAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.SqlQueryDatasetAction.SqlQueryDatasetAction


module Amazonka.IoTAnalytics.Types.Tag

-- | A set of key-value pairs that are used to manage the resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.Tag.Tag
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.Tag.Tag
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.Tag.Tag


module Amazonka.IoTAnalytics.Types.TimestampPartition

-- | A partition dimension defined by a timestamp attribute.
--   
--   <i>See:</i> <a>newTimestampPartition</a> smart constructor.
data TimestampPartition
TimestampPartition' :: Maybe Text -> Text -> TimestampPartition

-- | The timestamp format of a partition defined by a timestamp. The
--   default format is seconds since epoch (January 1, 1970 at midnight UTC
--   time).
[$sel:timestampFormat:TimestampPartition'] :: TimestampPartition -> Maybe Text

-- | The attribute name of the partition defined by a timestamp.
[$sel:attributeName:TimestampPartition'] :: TimestampPartition -> Text

-- | Create a value of <a>TimestampPartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestampFormat:TimestampPartition'</a>,
--   <a>timestampPartition_timestampFormat</a> - The timestamp format of a
--   partition defined by a timestamp. The default format is seconds since
--   epoch (January 1, 1970 at midnight UTC time).
--   
--   <a>$sel:attributeName:TimestampPartition'</a>,
--   <a>timestampPartition_attributeName</a> - The attribute name of the
--   partition defined by a timestamp.
newTimestampPartition :: Text -> TimestampPartition

-- | The timestamp format of a partition defined by a timestamp. The
--   default format is seconds since epoch (January 1, 1970 at midnight UTC
--   time).
timestampPartition_timestampFormat :: Lens' TimestampPartition (Maybe Text)

-- | The attribute name of the partition defined by a timestamp.
timestampPartition_attributeName :: Lens' TimestampPartition Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.TimestampPartition.TimestampPartition
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.TimestampPartition.TimestampPartition
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.TimestampPartition.TimestampPartition
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.TimestampPartition.TimestampPartition
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.TimestampPartition.TimestampPartition
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.TimestampPartition.TimestampPartition
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.TimestampPartition.TimestampPartition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.TimestampPartition.TimestampPartition


module Amazonka.IoTAnalytics.Types.DatastorePartition

-- | A single dimension to partition a data store. The dimension must be an
--   <tt>AttributePartition</tt> or a <tt>TimestampPartition</tt>.
--   
--   <i>See:</i> <a>newDatastorePartition</a> smart constructor.
data DatastorePartition
DatastorePartition' :: Maybe Partition -> Maybe TimestampPartition -> DatastorePartition

-- | A partition dimension defined by an <tt>attributeName</tt>.
[$sel:attributePartition:DatastorePartition'] :: DatastorePartition -> Maybe Partition

-- | A partition dimension defined by a timestamp attribute.
[$sel:timestampPartition:DatastorePartition'] :: DatastorePartition -> Maybe TimestampPartition

-- | Create a value of <a>DatastorePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributePartition:DatastorePartition'</a>,
--   <a>datastorePartition_attributePartition</a> - A partition dimension
--   defined by an <tt>attributeName</tt>.
--   
--   <a>$sel:timestampPartition:DatastorePartition'</a>,
--   <a>datastorePartition_timestampPartition</a> - A partition dimension
--   defined by a timestamp attribute.
newDatastorePartition :: DatastorePartition

-- | A partition dimension defined by an <tt>attributeName</tt>.
datastorePartition_attributePartition :: Lens' DatastorePartition (Maybe Partition)

-- | A partition dimension defined by a timestamp attribute.
datastorePartition_timestampPartition :: Lens' DatastorePartition (Maybe TimestampPartition)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatastorePartition.DatastorePartition
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatastorePartition.DatastorePartition
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatastorePartition.DatastorePartition
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatastorePartition.DatastorePartition
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatastorePartition.DatastorePartition
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatastorePartition.DatastorePartition
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatastorePartition.DatastorePartition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatastorePartition.DatastorePartition


module Amazonka.IoTAnalytics.Types.DatastorePartitions

-- | Contains information about the partition dimensions in a data store.
--   
--   <i>See:</i> <a>newDatastorePartitions</a> smart constructor.
data DatastorePartitions
DatastorePartitions' :: Maybe [DatastorePartition] -> DatastorePartitions

-- | A list of partition dimensions in a data store.
[$sel:partitions:DatastorePartitions'] :: DatastorePartitions -> Maybe [DatastorePartition]

-- | Create a value of <a>DatastorePartitions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitions:DatastorePartitions'</a>,
--   <a>datastorePartitions_partitions</a> - A list of partition dimensions
--   in a data store.
newDatastorePartitions :: DatastorePartitions

-- | A list of partition dimensions in a data store.
datastorePartitions_partitions :: Lens' DatastorePartitions (Maybe [DatastorePartition])
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatastorePartitions.DatastorePartitions
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatastorePartitions.DatastorePartitions
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatastorePartitions.DatastorePartitions
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatastorePartitions.DatastorePartitions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatastorePartitions.DatastorePartitions
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatastorePartitions.DatastorePartitions
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatastorePartitions.DatastorePartitions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatastorePartitions.DatastorePartitions


module Amazonka.IoTAnalytics.Types.DatastoreSummary

-- | A summary of information about a data store.
--   
--   <i>See:</i> <a>newDatastoreSummary</a> smart constructor.
data DatastoreSummary
DatastoreSummary' :: Maybe POSIX -> Maybe DatastoreStatus -> Maybe POSIX -> Maybe Text -> Maybe DatastorePartitions -> Maybe FileFormatType -> Maybe POSIX -> Maybe DatastoreStorageSummary -> DatastoreSummary

-- | When the data store was created.
[$sel:creationTime:DatastoreSummary'] :: DatastoreSummary -> Maybe POSIX

-- | The status of the data store.
[$sel:status:DatastoreSummary'] :: DatastoreSummary -> Maybe DatastoreStatus

-- | The last time when a new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
[$sel:lastMessageArrivalTime:DatastoreSummary'] :: DatastoreSummary -> Maybe POSIX

-- | The name of the data store.
[$sel:datastoreName:DatastoreSummary'] :: DatastoreSummary -> Maybe Text

-- | Contains information about the partition dimensions in a data store.
[$sel:datastorePartitions:DatastoreSummary'] :: DatastoreSummary -> Maybe DatastorePartitions

-- | The file format of the data in the data store.
[$sel:fileFormatType:DatastoreSummary'] :: DatastoreSummary -> Maybe FileFormatType

-- | The last time the data store was updated.
[$sel:lastUpdateTime:DatastoreSummary'] :: DatastoreSummary -> Maybe POSIX

-- | Where data in a data store is stored.
[$sel:datastoreStorage:DatastoreSummary'] :: DatastoreSummary -> Maybe DatastoreStorageSummary

-- | Create a value of <a>DatastoreSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DatastoreSummary'</a>,
--   <a>datastoreSummary_creationTime</a> - When the data store was
--   created.
--   
--   <a>$sel:status:DatastoreSummary'</a>, <a>datastoreSummary_status</a> -
--   The status of the data store.
--   
--   <a>$sel:lastMessageArrivalTime:DatastoreSummary'</a>,
--   <a>datastoreSummary_lastMessageArrivalTime</a> - The last time when a
--   new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:datastoreName:DatastoreSummary'</a>,
--   <a>datastoreSummary_datastoreName</a> - The name of the data store.
--   
--   <a>$sel:datastorePartitions:DatastoreSummary'</a>,
--   <a>datastoreSummary_datastorePartitions</a> - Contains information
--   about the partition dimensions in a data store.
--   
--   <a>$sel:fileFormatType:DatastoreSummary'</a>,
--   <a>datastoreSummary_fileFormatType</a> - The file format of the data
--   in the data store.
--   
--   <a>$sel:lastUpdateTime:DatastoreSummary'</a>,
--   <a>datastoreSummary_lastUpdateTime</a> - The last time the data store
--   was updated.
--   
--   <a>$sel:datastoreStorage:DatastoreSummary'</a>,
--   <a>datastoreSummary_datastoreStorage</a> - Where data in a data store
--   is stored.
newDatastoreSummary :: DatastoreSummary

-- | When the data store was created.
datastoreSummary_creationTime :: Lens' DatastoreSummary (Maybe UTCTime)

-- | The status of the data store.
datastoreSummary_status :: Lens' DatastoreSummary (Maybe DatastoreStatus)

-- | The last time when a new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
datastoreSummary_lastMessageArrivalTime :: Lens' DatastoreSummary (Maybe UTCTime)

-- | The name of the data store.
datastoreSummary_datastoreName :: Lens' DatastoreSummary (Maybe Text)

-- | Contains information about the partition dimensions in a data store.
datastoreSummary_datastorePartitions :: Lens' DatastoreSummary (Maybe DatastorePartitions)

-- | The file format of the data in the data store.
datastoreSummary_fileFormatType :: Lens' DatastoreSummary (Maybe FileFormatType)

-- | The last time the data store was updated.
datastoreSummary_lastUpdateTime :: Lens' DatastoreSummary (Maybe UTCTime)

-- | Where data in a data store is stored.
datastoreSummary_datastoreStorage :: Lens' DatastoreSummary (Maybe DatastoreStorageSummary)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatastoreSummary.DatastoreSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatastoreSummary.DatastoreSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatastoreSummary.DatastoreSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatastoreSummary.DatastoreSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatastoreSummary.DatastoreSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatastoreSummary.DatastoreSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatastoreSummary.DatastoreSummary


module Amazonka.IoTAnalytics.Types.Datastore

-- | Information about a data store.
--   
--   <i>See:</i> <a>newDatastore</a> smart constructor.
data Datastore
Datastore' :: Maybe POSIX -> Maybe DatastoreStatus -> Maybe POSIX -> Maybe Text -> Maybe FileFormatConfiguration -> Maybe DatastorePartitions -> Maybe DatastoreStorage -> Maybe RetentionPeriod -> Maybe Text -> Maybe POSIX -> Datastore

-- | When the data store was created.
[$sel:creationTime:Datastore'] :: Datastore -> Maybe POSIX

-- | The status of a data store:
--   
--   <ul>
--   <li><i>CREATING</i> The data store is being created.</li>
--   <li><i>ACTIVE</i> The data store has been created and can be
--   used.</li>
--   <li><i>DELETING</i> The data store is being deleted.</li>
--   </ul>
[$sel:status:Datastore'] :: Datastore -> Maybe DatastoreStatus

-- | The last time when a new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
[$sel:lastMessageArrivalTime:Datastore'] :: Datastore -> Maybe POSIX

-- | The ARN of the data store.
[$sel:arn:Datastore'] :: Datastore -> Maybe Text

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
[$sel:fileFormatConfiguration:Datastore'] :: Datastore -> Maybe FileFormatConfiguration

-- | Contains information about the partition dimensions in a data store.
[$sel:datastorePartitions:Datastore'] :: Datastore -> Maybe DatastorePartitions

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
[$sel:storage:Datastore'] :: Datastore -> Maybe DatastoreStorage

-- | How long, in days, message data is kept for the data store. When
--   <tt>customerManagedS3</tt> storage is selected, this parameter is
--   ignored.
[$sel:retentionPeriod:Datastore'] :: Datastore -> Maybe RetentionPeriod

-- | The name of the data store.
[$sel:name:Datastore'] :: Datastore -> Maybe Text

-- | The last time the data store was updated.
[$sel:lastUpdateTime:Datastore'] :: Datastore -> Maybe POSIX

-- | Create a value of <a>Datastore</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Datastore'</a>, <a>datastore_creationTime</a> -
--   When the data store was created.
--   
--   <a>$sel:status:Datastore'</a>, <a>datastore_status</a> - The status of
--   a data store:
--   
--   <ul>
--   <li><i>CREATING</i> The data store is being created.</li>
--   <li><i>ACTIVE</i> The data store has been created and can be
--   used.</li>
--   <li><i>DELETING</i> The data store is being deleted.</li>
--   </ul>
--   
--   <a>$sel:lastMessageArrivalTime:Datastore'</a>,
--   <a>datastore_lastMessageArrivalTime</a> - The last time when a new
--   message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:arn:Datastore'</a>, <a>datastore_arn</a> - The ARN of the data
--   store.
--   
--   <a>$sel:fileFormatConfiguration:Datastore'</a>,
--   <a>datastore_fileFormatConfiguration</a> - Contains the configuration
--   information of file formats. IoT Analytics data stores support JSON
--   and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
--   
--   <a>$sel:datastorePartitions:Datastore'</a>,
--   <a>datastore_datastorePartitions</a> - Contains information about the
--   partition dimensions in a data store.
--   
--   <a>$sel:storage:Datastore'</a>, <a>datastore_storage</a> - Where data
--   in a data store is stored.. You can choose <tt>serviceManagedS3</tt>
--   storage, <tt>customerManagedS3</tt> storage, or
--   <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
--   
--   <a>$sel:retentionPeriod:Datastore'</a>,
--   <a>datastore_retentionPeriod</a> - How long, in days, message data is
--   kept for the data store. When <tt>customerManagedS3</tt> storage is
--   selected, this parameter is ignored.
--   
--   <a>$sel:name:Datastore'</a>, <a>datastore_name</a> - The name of the
--   data store.
--   
--   <a>$sel:lastUpdateTime:Datastore'</a>, <a>datastore_lastUpdateTime</a>
--   - The last time the data store was updated.
newDatastore :: Datastore

-- | When the data store was created.
datastore_creationTime :: Lens' Datastore (Maybe UTCTime)

-- | The status of a data store:
--   
--   <ul>
--   <li><i>CREATING</i> The data store is being created.</li>
--   <li><i>ACTIVE</i> The data store has been created and can be
--   used.</li>
--   <li><i>DELETING</i> The data store is being deleted.</li>
--   </ul>
datastore_status :: Lens' Datastore (Maybe DatastoreStatus)

-- | The last time when a new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
datastore_lastMessageArrivalTime :: Lens' Datastore (Maybe UTCTime)

-- | The ARN of the data store.
datastore_arn :: Lens' Datastore (Maybe Text)

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
datastore_fileFormatConfiguration :: Lens' Datastore (Maybe FileFormatConfiguration)

-- | Contains information about the partition dimensions in a data store.
datastore_datastorePartitions :: Lens' Datastore (Maybe DatastorePartitions)

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
datastore_storage :: Lens' Datastore (Maybe DatastoreStorage)

-- | How long, in days, message data is kept for the data store. When
--   <tt>customerManagedS3</tt> storage is selected, this parameter is
--   ignored.
datastore_retentionPeriod :: Lens' Datastore (Maybe RetentionPeriod)

-- | The name of the data store.
datastore_name :: Lens' Datastore (Maybe Text)

-- | The last time the data store was updated.
datastore_lastUpdateTime :: Lens' Datastore (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.Datastore.Datastore
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.Datastore.Datastore
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.Datastore.Datastore
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.Datastore.Datastore
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.Datastore.Datastore
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.Datastore.Datastore
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.Datastore.Datastore


module Amazonka.IoTAnalytics.Types.TriggeringDataset

-- | Information about the dataset whose content generation triggers the
--   new dataset content generation.
--   
--   <i>See:</i> <a>newTriggeringDataset</a> smart constructor.
data TriggeringDataset
TriggeringDataset' :: Text -> TriggeringDataset

-- | The name of the dataset whose content generation triggers the new
--   dataset content generation.
[$sel:name:TriggeringDataset'] :: TriggeringDataset -> Text

-- | Create a value of <a>TriggeringDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TriggeringDataset'</a>, <a>triggeringDataset_name</a> -
--   The name of the dataset whose content generation triggers the new
--   dataset content generation.
newTriggeringDataset :: Text -> TriggeringDataset

-- | The name of the dataset whose content generation triggers the new
--   dataset content generation.
triggeringDataset_name :: Lens' TriggeringDataset Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.TriggeringDataset.TriggeringDataset
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.TriggeringDataset.TriggeringDataset
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.TriggeringDataset.TriggeringDataset
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.TriggeringDataset.TriggeringDataset
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.TriggeringDataset.TriggeringDataset
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.TriggeringDataset.TriggeringDataset
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.TriggeringDataset.TriggeringDataset
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.TriggeringDataset.TriggeringDataset


module Amazonka.IoTAnalytics.Types.DatasetTrigger

-- | The <tt>DatasetTrigger</tt> that specifies when the dataset is
--   automatically updated.
--   
--   <i>See:</i> <a>newDatasetTrigger</a> smart constructor.
data DatasetTrigger
DatasetTrigger' :: Maybe TriggeringDataset -> Maybe Schedule -> DatasetTrigger

-- | The dataset whose content creation triggers the creation of this
--   dataset's contents.
[$sel:dataset:DatasetTrigger'] :: DatasetTrigger -> Maybe TriggeringDataset

-- | The Schedule when the trigger is initiated.
[$sel:schedule:DatasetTrigger'] :: DatasetTrigger -> Maybe Schedule

-- | Create a value of <a>DatasetTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataset:DatasetTrigger'</a>, <a>datasetTrigger_dataset</a> -
--   The dataset whose content creation triggers the creation of this
--   dataset's contents.
--   
--   <a>$sel:schedule:DatasetTrigger'</a>, <a>datasetTrigger_schedule</a> -
--   The Schedule when the trigger is initiated.
newDatasetTrigger :: DatasetTrigger

-- | The dataset whose content creation triggers the creation of this
--   dataset's contents.
datasetTrigger_dataset :: Lens' DatasetTrigger (Maybe TriggeringDataset)

-- | The Schedule when the trigger is initiated.
datasetTrigger_schedule :: Lens' DatasetTrigger (Maybe Schedule)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetTrigger.DatasetTrigger
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetTrigger.DatasetTrigger
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetTrigger.DatasetTrigger
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetTrigger.DatasetTrigger
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetTrigger.DatasetTrigger
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetTrigger.DatasetTrigger
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetTrigger.DatasetTrigger
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatasetTrigger.DatasetTrigger


module Amazonka.IoTAnalytics.Types.DatasetSummary

-- | A summary of information about a dataset.
--   
--   <i>See:</i> <a>newDatasetSummary</a> smart constructor.
data DatasetSummary
DatasetSummary' :: Maybe POSIX -> Maybe DatasetStatus -> Maybe (NonEmpty DatasetActionSummary) -> Maybe [DatasetTrigger] -> Maybe Text -> Maybe POSIX -> DatasetSummary

-- | The time the dataset was created.
[$sel:creationTime:DatasetSummary'] :: DatasetSummary -> Maybe POSIX

-- | The status of the dataset.
[$sel:status:DatasetSummary'] :: DatasetSummary -> Maybe DatasetStatus

-- | A list of <tt>DataActionSummary</tt> objects.
[$sel:actions:DatasetSummary'] :: DatasetSummary -> Maybe (NonEmpty DatasetActionSummary)

-- | A list of triggers. A trigger causes dataset content to be populated
--   at a specified time interval or when another dataset is populated. The
--   list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects
[$sel:triggers:DatasetSummary'] :: DatasetSummary -> Maybe [DatasetTrigger]

-- | The name of the dataset.
[$sel:datasetName:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The last time the dataset was updated.
[$sel:lastUpdateTime:DatasetSummary'] :: DatasetSummary -> Maybe POSIX

-- | Create a value of <a>DatasetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DatasetSummary'</a>,
--   <a>datasetSummary_creationTime</a> - The time the dataset was created.
--   
--   <a>$sel:status:DatasetSummary'</a>, <a>datasetSummary_status</a> - The
--   status of the dataset.
--   
--   <a>$sel:actions:DatasetSummary'</a>, <a>datasetSummary_actions</a> - A
--   list of <tt>DataActionSummary</tt> objects.
--   
--   <a>$sel:triggers:DatasetSummary'</a>, <a>datasetSummary_triggers</a> -
--   A list of triggers. A trigger causes dataset content to be populated
--   at a specified time interval or when another dataset is populated. The
--   list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects
--   
--   <a>$sel:datasetName:DatasetSummary'</a>,
--   <a>datasetSummary_datasetName</a> - The name of the dataset.
--   
--   <a>$sel:lastUpdateTime:DatasetSummary'</a>,
--   <a>datasetSummary_lastUpdateTime</a> - The last time the dataset was
--   updated.
newDatasetSummary :: DatasetSummary

-- | The time the dataset was created.
datasetSummary_creationTime :: Lens' DatasetSummary (Maybe UTCTime)

-- | The status of the dataset.
datasetSummary_status :: Lens' DatasetSummary (Maybe DatasetStatus)

-- | A list of <tt>DataActionSummary</tt> objects.
datasetSummary_actions :: Lens' DatasetSummary (Maybe (NonEmpty DatasetActionSummary))

-- | A list of triggers. A trigger causes dataset content to be populated
--   at a specified time interval or when another dataset is populated. The
--   list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects
datasetSummary_triggers :: Lens' DatasetSummary (Maybe [DatasetTrigger])

-- | The name of the dataset.
datasetSummary_datasetName :: Lens' DatasetSummary (Maybe Text)

-- | The last time the dataset was updated.
datasetSummary_lastUpdateTime :: Lens' DatasetSummary (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetSummary.DatasetSummary
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetSummary.DatasetSummary
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetSummary.DatasetSummary
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetSummary.DatasetSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetSummary.DatasetSummary
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetSummary.DatasetSummary
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetSummary.DatasetSummary


module Amazonka.IoTAnalytics.Types.Variable

-- | An instance of a variable to be passed to the <tt>containerAction</tt>
--   execution. Each variable must have a name and a value given by one of
--   <tt>stringValue</tt>, <tt>datasetContentVersionValue</tt>, or
--   <tt>outputFileUriValue</tt>.
--   
--   <i>See:</i> <a>newVariable</a> smart constructor.
data Variable
Variable' :: Maybe OutputFileUriValue -> Maybe Double -> Maybe Text -> Maybe DatasetContentVersionValue -> Text -> Variable

-- | The value of the variable as a structure that specifies an output file
--   URI.
[$sel:outputFileUriValue:Variable'] :: Variable -> Maybe OutputFileUriValue

-- | The value of the variable as a double (numeric).
[$sel:doubleValue:Variable'] :: Variable -> Maybe Double

-- | The value of the variable as a string.
[$sel:stringValue:Variable'] :: Variable -> Maybe Text

-- | The value of the variable as a structure that specifies a dataset
--   content version.
[$sel:datasetContentVersionValue:Variable'] :: Variable -> Maybe DatasetContentVersionValue

-- | The name of the variable.
[$sel:name:Variable'] :: Variable -> Text

-- | Create a value of <a>Variable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputFileUriValue:Variable'</a>,
--   <a>variable_outputFileUriValue</a> - The value of the variable as a
--   structure that specifies an output file URI.
--   
--   <a>$sel:doubleValue:Variable'</a>, <a>variable_doubleValue</a> - The
--   value of the variable as a double (numeric).
--   
--   <a>$sel:stringValue:Variable'</a>, <a>variable_stringValue</a> - The
--   value of the variable as a string.
--   
--   <a>$sel:datasetContentVersionValue:Variable'</a>,
--   <a>variable_datasetContentVersionValue</a> - The value of the variable
--   as a structure that specifies a dataset content version.
--   
--   <a>$sel:name:Variable'</a>, <a>variable_name</a> - The name of the
--   variable.
newVariable :: Text -> Variable

-- | The value of the variable as a structure that specifies an output file
--   URI.
variable_outputFileUriValue :: Lens' Variable (Maybe OutputFileUriValue)

-- | The value of the variable as a double (numeric).
variable_doubleValue :: Lens' Variable (Maybe Double)

-- | The value of the variable as a string.
variable_stringValue :: Lens' Variable (Maybe Text)

-- | The value of the variable as a structure that specifies a dataset
--   content version.
variable_datasetContentVersionValue :: Lens' Variable (Maybe DatasetContentVersionValue)

-- | The name of the variable.
variable_name :: Lens' Variable Text
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.Variable.Variable
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.Variable.Variable
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.Variable.Variable
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.Variable.Variable
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.Variable.Variable
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.Variable.Variable
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.Variable.Variable
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.Variable.Variable


module Amazonka.IoTAnalytics.Types.ContainerDatasetAction

-- | Information required to run the <tt>containerAction</tt> to produce
--   dataset contents.
--   
--   <i>See:</i> <a>newContainerDatasetAction</a> smart constructor.
data ContainerDatasetAction
ContainerDatasetAction' :: Maybe [Variable] -> Text -> Text -> ResourceConfiguration -> ContainerDatasetAction

-- | The values of variables used in the context of the execution of the
--   containerized application (basically, parameters passed to the
--   application). Each variable must have a name and a value given by one
--   of <tt>stringValue</tt>, <tt>datasetContentVersionValue</tt>, or
--   <tt>outputFileUriValue</tt>.
[$sel:variables:ContainerDatasetAction'] :: ContainerDatasetAction -> Maybe [Variable]

-- | The ARN of the Docker container stored in your account. The Docker
--   container contains an application and required support libraries and
--   is used to generate dataset contents.
[$sel:image:ContainerDatasetAction'] :: ContainerDatasetAction -> Text

-- | The ARN of the role that gives permission to the system to access
--   required resources to run the <tt>containerAction</tt>. This includes,
--   at minimum, permission to retrieve the dataset contents that are the
--   input to the containerized application.
[$sel:executionRoleArn:ContainerDatasetAction'] :: ContainerDatasetAction -> Text

-- | Configuration of the resource that executes the
--   <tt>containerAction</tt>.
[$sel:resourceConfiguration:ContainerDatasetAction'] :: ContainerDatasetAction -> ResourceConfiguration

-- | Create a value of <a>ContainerDatasetAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_variables</a> - The values of variables used
--   in the context of the execution of the containerized application
--   (basically, parameters passed to the application). Each variable must
--   have a name and a value given by one of <tt>stringValue</tt>,
--   <tt>datasetContentVersionValue</tt>, or <tt>outputFileUriValue</tt>.
--   
--   <a>$sel:image:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_image</a> - The ARN of the Docker container
--   stored in your account. The Docker container contains an application
--   and required support libraries and is used to generate dataset
--   contents.
--   
--   <a>$sel:executionRoleArn:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_executionRoleArn</a> - The ARN of the role
--   that gives permission to the system to access required resources to
--   run the <tt>containerAction</tt>. This includes, at minimum,
--   permission to retrieve the dataset contents that are the input to the
--   containerized application.
--   
--   <a>$sel:resourceConfiguration:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_resourceConfiguration</a> - Configuration of
--   the resource that executes the <tt>containerAction</tt>.
newContainerDatasetAction :: Text -> Text -> ResourceConfiguration -> ContainerDatasetAction

-- | The values of variables used in the context of the execution of the
--   containerized application (basically, parameters passed to the
--   application). Each variable must have a name and a value given by one
--   of <tt>stringValue</tt>, <tt>datasetContentVersionValue</tt>, or
--   <tt>outputFileUriValue</tt>.
containerDatasetAction_variables :: Lens' ContainerDatasetAction (Maybe [Variable])

-- | The ARN of the Docker container stored in your account. The Docker
--   container contains an application and required support libraries and
--   is used to generate dataset contents.
containerDatasetAction_image :: Lens' ContainerDatasetAction Text

-- | The ARN of the role that gives permission to the system to access
--   required resources to run the <tt>containerAction</tt>. This includes,
--   at minimum, permission to retrieve the dataset contents that are the
--   input to the containerized application.
containerDatasetAction_executionRoleArn :: Lens' ContainerDatasetAction Text

-- | Configuration of the resource that executes the
--   <tt>containerAction</tt>.
containerDatasetAction_resourceConfiguration :: Lens' ContainerDatasetAction ResourceConfiguration
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.ContainerDatasetAction.ContainerDatasetAction
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.ContainerDatasetAction.ContainerDatasetAction
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.ContainerDatasetAction.ContainerDatasetAction
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.ContainerDatasetAction.ContainerDatasetAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.ContainerDatasetAction.ContainerDatasetAction
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.ContainerDatasetAction.ContainerDatasetAction
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.ContainerDatasetAction.ContainerDatasetAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.ContainerDatasetAction.ContainerDatasetAction


module Amazonka.IoTAnalytics.Types.DatasetAction

-- | A <tt>DatasetAction</tt> object that specifies how dataset contents
--   are automatically created.
--   
--   <i>See:</i> <a>newDatasetAction</a> smart constructor.
data DatasetAction
DatasetAction' :: Maybe SqlQueryDatasetAction -> Maybe Text -> Maybe ContainerDatasetAction -> DatasetAction

-- | An <tt>SqlQueryDatasetAction</tt> object that uses an SQL query to
--   automatically create dataset contents.
[$sel:queryAction:DatasetAction'] :: DatasetAction -> Maybe SqlQueryDatasetAction

-- | The name of the dataset action by which dataset contents are
--   automatically created.
[$sel:actionName:DatasetAction'] :: DatasetAction -> Maybe Text

-- | Information that allows the system to run a containerized application
--   to create the dataset contents. The application must be in a Docker
--   container along with any required support libraries.
[$sel:containerAction:DatasetAction'] :: DatasetAction -> Maybe ContainerDatasetAction

-- | Create a value of <a>DatasetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryAction:DatasetAction'</a>,
--   <a>datasetAction_queryAction</a> - An <tt>SqlQueryDatasetAction</tt>
--   object that uses an SQL query to automatically create dataset
--   contents.
--   
--   <a>$sel:actionName:DatasetAction'</a>, <a>datasetAction_actionName</a>
--   - The name of the dataset action by which dataset contents are
--   automatically created.
--   
--   <a>$sel:containerAction:DatasetAction'</a>,
--   <a>datasetAction_containerAction</a> - Information that allows the
--   system to run a containerized application to create the dataset
--   contents. The application must be in a Docker container along with any
--   required support libraries.
newDatasetAction :: DatasetAction

-- | An <tt>SqlQueryDatasetAction</tt> object that uses an SQL query to
--   automatically create dataset contents.
datasetAction_queryAction :: Lens' DatasetAction (Maybe SqlQueryDatasetAction)

-- | The name of the dataset action by which dataset contents are
--   automatically created.
datasetAction_actionName :: Lens' DatasetAction (Maybe Text)

-- | Information that allows the system to run a containerized application
--   to create the dataset contents. The application must be in a Docker
--   container along with any required support libraries.
datasetAction_containerAction :: Lens' DatasetAction (Maybe ContainerDatasetAction)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.DatasetAction.DatasetAction
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.DatasetAction.DatasetAction
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.DatasetAction.DatasetAction
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.DatasetAction.DatasetAction
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.DatasetAction.DatasetAction
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.DatasetAction.DatasetAction
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.DatasetAction.DatasetAction
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.DatasetAction.DatasetAction


module Amazonka.IoTAnalytics.Types.VersioningConfiguration

-- | Information about the versioning of dataset contents.
--   
--   <i>See:</i> <a>newVersioningConfiguration</a> smart constructor.
data VersioningConfiguration
VersioningConfiguration' :: Maybe Bool -> Maybe Natural -> VersioningConfiguration

-- | If true, unlimited versions of dataset contents are kept.
[$sel:unlimited:VersioningConfiguration'] :: VersioningConfiguration -> Maybe Bool

-- | How many versions of dataset contents are kept. The <tt>unlimited</tt>
--   parameter must be <tt>false</tt>.
[$sel:maxVersions:VersioningConfiguration'] :: VersioningConfiguration -> Maybe Natural

-- | Create a value of <a>VersioningConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlimited:VersioningConfiguration'</a>,
--   <a>versioningConfiguration_unlimited</a> - If true, unlimited versions
--   of dataset contents are kept.
--   
--   <a>$sel:maxVersions:VersioningConfiguration'</a>,
--   <a>versioningConfiguration_maxVersions</a> - How many versions of
--   dataset contents are kept. The <tt>unlimited</tt> parameter must be
--   <tt>false</tt>.
newVersioningConfiguration :: VersioningConfiguration

-- | If true, unlimited versions of dataset contents are kept.
versioningConfiguration_unlimited :: Lens' VersioningConfiguration (Maybe Bool)

-- | How many versions of dataset contents are kept. The <tt>unlimited</tt>
--   parameter must be <tt>false</tt>.
versioningConfiguration_maxVersions :: Lens' VersioningConfiguration (Maybe Natural)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.VersioningConfiguration.VersioningConfiguration
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.VersioningConfiguration.VersioningConfiguration
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.VersioningConfiguration.VersioningConfiguration
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.VersioningConfiguration.VersioningConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.VersioningConfiguration.VersioningConfiguration
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.VersioningConfiguration.VersioningConfiguration
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.VersioningConfiguration.VersioningConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.Types.VersioningConfiguration.VersioningConfiguration


module Amazonka.IoTAnalytics.Types.Dataset

-- | Information about a dataset.
--   
--   <i>See:</i> <a>newDataset</a> smart constructor.
data Dataset
Dataset' :: Maybe POSIX -> Maybe DatasetStatus -> Maybe VersioningConfiguration -> Maybe Text -> Maybe (NonEmpty DatasetAction) -> Maybe [DatasetTrigger] -> Maybe RetentionPeriod -> Maybe (NonEmpty LateDataRule) -> Maybe Text -> Maybe [DatasetContentDeliveryRule] -> Maybe POSIX -> Dataset

-- | When the dataset was created.
[$sel:creationTime:Dataset'] :: Dataset -> Maybe POSIX

-- | The status of the dataset.
[$sel:status:Dataset'] :: Dataset -> Maybe DatasetStatus

-- | Optional. How many versions of dataset contents are kept. If not
--   specified or set to null, only the latest version plus the latest
--   succeeded version (if they are different) are kept for the time period
--   specified by the <tt>retentionPeriod</tt> parameter. For more
--   information, see <a>Keeping Multiple Versions of IoT Analytics
--   datasets</a> in the <i>IoT Analytics User Guide</i>.
[$sel:versioningConfiguration:Dataset'] :: Dataset -> Maybe VersioningConfiguration

-- | The ARN of the dataset.
[$sel:arn:Dataset'] :: Dataset -> Maybe Text

-- | The <tt>DatasetAction</tt> objects that automatically create the
--   dataset contents.
[$sel:actions:Dataset'] :: Dataset -> Maybe (NonEmpty DatasetAction)

-- | The <tt>DatasetTrigger</tt> objects that specify when the dataset is
--   automatically updated.
[$sel:triggers:Dataset'] :: Dataset -> Maybe [DatasetTrigger]

-- | Optional. How long, in days, message data is kept for the dataset.
[$sel:retentionPeriod:Dataset'] :: Dataset -> Maybe RetentionPeriod

-- | A list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
[$sel:lateDataRules:Dataset'] :: Dataset -> Maybe (NonEmpty LateDataRule)

-- | The name of the dataset.
[$sel:name:Dataset'] :: Dataset -> Maybe Text

-- | When dataset contents are created they are delivered to destinations
--   specified here.
[$sel:contentDeliveryRules:Dataset'] :: Dataset -> Maybe [DatasetContentDeliveryRule]

-- | The last time the dataset was updated.
[$sel:lastUpdateTime:Dataset'] :: Dataset -> Maybe POSIX

-- | Create a value of <a>Dataset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Dataset'</a>, <a>dataset_creationTime</a> - When
--   the dataset was created.
--   
--   <a>$sel:status:Dataset'</a>, <a>dataset_status</a> - The status of the
--   dataset.
--   
--   <a>$sel:versioningConfiguration:Dataset'</a>,
--   <a>dataset_versioningConfiguration</a> - Optional. How many versions
--   of dataset contents are kept. If not specified or set to null, only
--   the latest version plus the latest succeeded version (if they are
--   different) are kept for the time period specified by the
--   <tt>retentionPeriod</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
--   
--   <a>$sel:arn:Dataset'</a>, <a>dataset_arn</a> - The ARN of the dataset.
--   
--   <a>$sel:actions:Dataset'</a>, <a>dataset_actions</a> - The
--   <tt>DatasetAction</tt> objects that automatically create the dataset
--   contents.
--   
--   <a>$sel:triggers:Dataset'</a>, <a>dataset_triggers</a> - The
--   <tt>DatasetTrigger</tt> objects that specify when the dataset is
--   automatically updated.
--   
--   <a>$sel:retentionPeriod:Dataset'</a>, <a>dataset_retentionPeriod</a> -
--   Optional. How long, in days, message data is kept for the dataset.
--   
--   <a>$sel:lateDataRules:Dataset'</a>, <a>dataset_lateDataRules</a> - A
--   list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
--   
--   <a>$sel:name:Dataset'</a>, <a>dataset_name</a> - The name of the
--   dataset.
--   
--   <a>$sel:contentDeliveryRules:Dataset'</a>,
--   <a>dataset_contentDeliveryRules</a> - When dataset contents are
--   created they are delivered to destinations specified here.
--   
--   <a>$sel:lastUpdateTime:Dataset'</a>, <a>dataset_lastUpdateTime</a> -
--   The last time the dataset was updated.
newDataset :: Dataset

-- | When the dataset was created.
dataset_creationTime :: Lens' Dataset (Maybe UTCTime)

-- | The status of the dataset.
dataset_status :: Lens' Dataset (Maybe DatasetStatus)

-- | Optional. How many versions of dataset contents are kept. If not
--   specified or set to null, only the latest version plus the latest
--   succeeded version (if they are different) are kept for the time period
--   specified by the <tt>retentionPeriod</tt> parameter. For more
--   information, see <a>Keeping Multiple Versions of IoT Analytics
--   datasets</a> in the <i>IoT Analytics User Guide</i>.
dataset_versioningConfiguration :: Lens' Dataset (Maybe VersioningConfiguration)

-- | The ARN of the dataset.
dataset_arn :: Lens' Dataset (Maybe Text)

-- | The <tt>DatasetAction</tt> objects that automatically create the
--   dataset contents.
dataset_actions :: Lens' Dataset (Maybe (NonEmpty DatasetAction))

-- | The <tt>DatasetTrigger</tt> objects that specify when the dataset is
--   automatically updated.
dataset_triggers :: Lens' Dataset (Maybe [DatasetTrigger])

-- | Optional. How long, in days, message data is kept for the dataset.
dataset_retentionPeriod :: Lens' Dataset (Maybe RetentionPeriod)

-- | A list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
dataset_lateDataRules :: Lens' Dataset (Maybe (NonEmpty LateDataRule))

-- | The name of the dataset.
dataset_name :: Lens' Dataset (Maybe Text)

-- | When dataset contents are created they are delivered to destinations
--   specified here.
dataset_contentDeliveryRules :: Lens' Dataset (Maybe [DatasetContentDeliveryRule])

-- | The last time the dataset was updated.
dataset_lastUpdateTime :: Lens' Dataset (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.IoTAnalytics.Types.Dataset.Dataset
instance GHC.Show.Show Amazonka.IoTAnalytics.Types.Dataset.Dataset
instance GHC.Read.Read Amazonka.IoTAnalytics.Types.Dataset.Dataset
instance GHC.Classes.Eq Amazonka.IoTAnalytics.Types.Dataset.Dataset
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.IoTAnalytics.Types.Dataset.Dataset
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.Types.Dataset.Dataset
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.Types.Dataset.Dataset


module Amazonka.IoTAnalytics.Types

-- | API version <tt>2017-11-27</tt> of the Amazon IoT Analytics SDK
--   configuration.
defaultService :: Service

-- | The request was not valid.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource with the same name already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was an internal failure.
_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is temporarily unavailable.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource with the specified name could not be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The command caused an internal limit to be exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ChannelStatus
ChannelStatus' :: Text -> ChannelStatus
[fromChannelStatus] :: ChannelStatus -> Text
pattern ChannelStatus_ACTIVE :: ChannelStatus
pattern ChannelStatus_CREATING :: ChannelStatus
pattern ChannelStatus_DELETING :: ChannelStatus
newtype ComputeType
ComputeType' :: Text -> ComputeType
[fromComputeType] :: ComputeType -> Text
pattern ComputeType_ACU_1 :: ComputeType
pattern ComputeType_ACU_2 :: ComputeType
newtype DatasetActionType
DatasetActionType' :: Text -> DatasetActionType
[fromDatasetActionType] :: DatasetActionType -> Text
pattern DatasetActionType_CONTAINER :: DatasetActionType
pattern DatasetActionType_QUERY :: DatasetActionType
newtype DatasetContentState
DatasetContentState' :: Text -> DatasetContentState
[fromDatasetContentState] :: DatasetContentState -> Text
pattern DatasetContentState_CREATING :: DatasetContentState
pattern DatasetContentState_FAILED :: DatasetContentState
pattern DatasetContentState_SUCCEEDED :: DatasetContentState
newtype DatasetStatus
DatasetStatus' :: Text -> DatasetStatus
[fromDatasetStatus] :: DatasetStatus -> Text
pattern DatasetStatus_ACTIVE :: DatasetStatus
pattern DatasetStatus_CREATING :: DatasetStatus
pattern DatasetStatus_DELETING :: DatasetStatus
newtype DatastoreStatus
DatastoreStatus' :: Text -> DatastoreStatus
[fromDatastoreStatus] :: DatastoreStatus -> Text
pattern DatastoreStatus_ACTIVE :: DatastoreStatus
pattern DatastoreStatus_CREATING :: DatastoreStatus
pattern DatastoreStatus_DELETING :: DatastoreStatus
newtype FileFormatType
FileFormatType' :: Text -> FileFormatType
[fromFileFormatType] :: FileFormatType -> Text
pattern FileFormatType_JSON :: FileFormatType
pattern FileFormatType_PARQUET :: FileFormatType
newtype LoggingLevel
LoggingLevel' :: Text -> LoggingLevel
[fromLoggingLevel] :: LoggingLevel -> Text
pattern LoggingLevel_ERROR :: LoggingLevel
newtype ReprocessingStatus
ReprocessingStatus' :: Text -> ReprocessingStatus
[fromReprocessingStatus] :: ReprocessingStatus -> Text
pattern ReprocessingStatus_CANCELLED :: ReprocessingStatus
pattern ReprocessingStatus_FAILED :: ReprocessingStatus
pattern ReprocessingStatus_RUNNING :: ReprocessingStatus
pattern ReprocessingStatus_SUCCEEDED :: ReprocessingStatus

-- | An activity that adds other attributes based on existing attributes in
--   the message.
--   
--   <i>See:</i> <a>newAddAttributesActivity</a> smart constructor.
data AddAttributesActivity
AddAttributesActivity' :: Maybe Text -> Text -> HashMap Text Text -> AddAttributesActivity

-- | The next activity in the pipeline.
[$sel:next:AddAttributesActivity'] :: AddAttributesActivity -> Maybe Text

-- | The name of the addAttributes activity.
[$sel:name:AddAttributesActivity'] :: AddAttributesActivity -> Text

-- | A list of 1-50 <tt>AttributeNameMapping</tt> objects that map an
--   existing attribute to a new attribute.
--   
--   The existing attributes remain in the message, so if you want to
--   remove the originals, use <tt>RemoveAttributeActivity</tt>.
[$sel:attributes:AddAttributesActivity'] :: AddAttributesActivity -> HashMap Text Text

-- | Create a value of <a>AddAttributesActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:AddAttributesActivity'</a>,
--   <a>addAttributesActivity_next</a> - The next activity in the pipeline.
--   
--   <a>$sel:name:AddAttributesActivity'</a>,
--   <a>addAttributesActivity_name</a> - The name of the addAttributes
--   activity.
--   
--   <a>$sel:attributes:AddAttributesActivity'</a>,
--   <a>addAttributesActivity_attributes</a> - A list of 1-50
--   <tt>AttributeNameMapping</tt> objects that map an existing attribute
--   to a new attribute.
--   
--   The existing attributes remain in the message, so if you want to
--   remove the originals, use <tt>RemoveAttributeActivity</tt>.
newAddAttributesActivity :: Text -> AddAttributesActivity

-- | The next activity in the pipeline.
addAttributesActivity_next :: Lens' AddAttributesActivity (Maybe Text)

-- | The name of the addAttributes activity.
addAttributesActivity_name :: Lens' AddAttributesActivity Text

-- | A list of 1-50 <tt>AttributeNameMapping</tt> objects that map an
--   existing attribute to a new attribute.
--   
--   The existing attributes remain in the message, so if you want to
--   remove the originals, use <tt>RemoveAttributeActivity</tt>.
addAttributesActivity_attributes :: Lens' AddAttributesActivity (HashMap Text Text)

-- | Contains informations about errors.
--   
--   <i>See:</i> <a>newBatchPutMessageErrorEntry</a> smart constructor.
data BatchPutMessageErrorEntry
BatchPutMessageErrorEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchPutMessageErrorEntry

-- | The code associated with the error.
[$sel:errorCode:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe Text

-- | The message associated with the error.
[$sel:errorMessage:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe Text

-- | The ID of the message that caused the error. See the value
--   corresponding to the <tt>messageId</tt> key in the message object.
[$sel:messageId:BatchPutMessageErrorEntry'] :: BatchPutMessageErrorEntry -> Maybe Text

-- | Create a value of <a>BatchPutMessageErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorCode</a> - The code associated with
--   the error.
--   
--   <a>$sel:errorMessage:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorMessage</a> - The message associated
--   with the error.
--   
--   <a>$sel:messageId:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_messageId</a> - The ID of the message
--   that caused the error. See the value corresponding to the
--   <tt>messageId</tt> key in the message object.
newBatchPutMessageErrorEntry :: BatchPutMessageErrorEntry

-- | The code associated with the error.
batchPutMessageErrorEntry_errorCode :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | The message associated with the error.
batchPutMessageErrorEntry_errorMessage :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | The ID of the message that caused the error. See the value
--   corresponding to the <tt>messageId</tt> key in the message object.
batchPutMessageErrorEntry_messageId :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | A collection of data from an MQTT topic. Channels archive the raw,
--   unprocessed messages before publishing the data to a pipeline.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe POSIX -> Maybe ChannelStatus -> Maybe POSIX -> Maybe Text -> Maybe ChannelStorage -> Maybe RetentionPeriod -> Maybe Text -> Maybe POSIX -> Channel

-- | When the channel was created.
[$sel:creationTime:Channel'] :: Channel -> Maybe POSIX

-- | The status of the channel.
[$sel:status:Channel'] :: Channel -> Maybe ChannelStatus

-- | The last time when a new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
[$sel:lastMessageArrivalTime:Channel'] :: Channel -> Maybe POSIX

-- | The ARN of the channel.
[$sel:arn:Channel'] :: Channel -> Maybe Text

-- | Where channel data is stored. You can choose one of
--   <tt>serviceManagedS3</tt> or <tt>customerManagedS3</tt> storage. If
--   not specified, the default is <tt>serviceManagedS3</tt>. You can't
--   change this storage option after the channel is created.
[$sel:storage:Channel'] :: Channel -> Maybe ChannelStorage

-- | How long, in days, message data is kept for the channel.
[$sel:retentionPeriod:Channel'] :: Channel -> Maybe RetentionPeriod

-- | The name of the channel.
[$sel:name:Channel'] :: Channel -> Maybe Text

-- | When the channel was last updated.
[$sel:lastUpdateTime:Channel'] :: Channel -> Maybe POSIX

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Channel'</a>, <a>channel_creationTime</a> - When
--   the channel was created.
--   
--   <a>$sel:status:Channel'</a>, <a>channel_status</a> - The status of the
--   channel.
--   
--   <a>$sel:lastMessageArrivalTime:Channel'</a>,
--   <a>channel_lastMessageArrivalTime</a> - The last time when a new
--   message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:arn:Channel'</a>, <a>channel_arn</a> - The ARN of the channel.
--   
--   <a>$sel:storage:Channel'</a>, <a>channel_storage</a> - Where channel
--   data is stored. You can choose one of <tt>serviceManagedS3</tt> or
--   <tt>customerManagedS3</tt> storage. If not specified, the default is
--   <tt>serviceManagedS3</tt>. You can't change this storage option after
--   the channel is created.
--   
--   <a>$sel:retentionPeriod:Channel'</a>, <a>channel_retentionPeriod</a> -
--   How long, in days, message data is kept for the channel.
--   
--   <a>$sel:name:Channel'</a>, <a>channel_name</a> - The name of the
--   channel.
--   
--   <a>$sel:lastUpdateTime:Channel'</a>, <a>channel_lastUpdateTime</a> -
--   When the channel was last updated.
newChannel :: Channel

-- | When the channel was created.
channel_creationTime :: Lens' Channel (Maybe UTCTime)

-- | The status of the channel.
channel_status :: Lens' Channel (Maybe ChannelStatus)

-- | The last time when a new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
channel_lastMessageArrivalTime :: Lens' Channel (Maybe UTCTime)

-- | The ARN of the channel.
channel_arn :: Lens' Channel (Maybe Text)

-- | Where channel data is stored. You can choose one of
--   <tt>serviceManagedS3</tt> or <tt>customerManagedS3</tt> storage. If
--   not specified, the default is <tt>serviceManagedS3</tt>. You can't
--   change this storage option after the channel is created.
channel_storage :: Lens' Channel (Maybe ChannelStorage)

-- | How long, in days, message data is kept for the channel.
channel_retentionPeriod :: Lens' Channel (Maybe RetentionPeriod)

-- | The name of the channel.
channel_name :: Lens' Channel (Maybe Text)

-- | When the channel was last updated.
channel_lastUpdateTime :: Lens' Channel (Maybe UTCTime)

-- | The activity that determines the source of the messages to be
--   processed.
--   
--   <i>See:</i> <a>newChannelActivity</a> smart constructor.
data ChannelActivity
ChannelActivity' :: Maybe Text -> Text -> Text -> ChannelActivity

-- | The next activity in the pipeline.
[$sel:next:ChannelActivity'] :: ChannelActivity -> Maybe Text

-- | The name of the channel activity.
[$sel:name:ChannelActivity'] :: ChannelActivity -> Text

-- | The name of the channel from which the messages are processed.
[$sel:channelName:ChannelActivity'] :: ChannelActivity -> Text

-- | Create a value of <a>ChannelActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:ChannelActivity'</a>, <a>channelActivity_next</a> - The
--   next activity in the pipeline.
--   
--   <a>$sel:name:ChannelActivity'</a>, <a>channelActivity_name</a> - The
--   name of the channel activity.
--   
--   <a>$sel:channelName:ChannelActivity'</a>,
--   <a>channelActivity_channelName</a> - The name of the channel from
--   which the messages are processed.
newChannelActivity :: Text -> Text -> ChannelActivity

-- | The next activity in the pipeline.
channelActivity_next :: Lens' ChannelActivity (Maybe Text)

-- | The name of the channel activity.
channelActivity_name :: Lens' ChannelActivity Text

-- | The name of the channel from which the messages are processed.
channelActivity_channelName :: Lens' ChannelActivity Text

-- | Specifies one or more sets of channel messages.
--   
--   <i>See:</i> <a>newChannelMessages</a> smart constructor.
data ChannelMessages
ChannelMessages' :: Maybe (NonEmpty Text) -> ChannelMessages

-- | Specifies one or more keys that identify the Amazon Simple Storage
--   Service (Amazon S3) objects that save your channel messages.
--   
--   You must use the full path for the key.
--   
--   Example path: <tt>channel/mychannel/__dt=2020-02-29
--   00:00:00/1582940490000_1582940520000_123456789012_mychannel_0_2118.0.json.gz</tt>
[$sel:s3Paths:ChannelMessages'] :: ChannelMessages -> Maybe (NonEmpty Text)

-- | Create a value of <a>ChannelMessages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Paths:ChannelMessages'</a>, <a>channelMessages_s3Paths</a> -
--   Specifies one or more keys that identify the Amazon Simple Storage
--   Service (Amazon S3) objects that save your channel messages.
--   
--   You must use the full path for the key.
--   
--   Example path: <tt>channel/mychannel/__dt=2020-02-29
--   00:00:00/1582940490000_1582940520000_123456789012_mychannel_0_2118.0.json.gz</tt>
newChannelMessages :: ChannelMessages

-- | Specifies one or more keys that identify the Amazon Simple Storage
--   Service (Amazon S3) objects that save your channel messages.
--   
--   You must use the full path for the key.
--   
--   Example path: <tt>channel/mychannel/__dt=2020-02-29
--   00:00:00/1582940490000_1582940520000_123456789012_mychannel_0_2118.0.json.gz</tt>
channelMessages_s3Paths :: Lens' ChannelMessages (Maybe (NonEmpty Text))

-- | Statistics information about the channel.
--   
--   <i>See:</i> <a>newChannelStatistics</a> smart constructor.
data ChannelStatistics
ChannelStatistics' :: Maybe EstimatedResourceSize -> ChannelStatistics

-- | The estimated size of the channel.
[$sel:size:ChannelStatistics'] :: ChannelStatistics -> Maybe EstimatedResourceSize

-- | Create a value of <a>ChannelStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ChannelStatistics'</a>, <a>channelStatistics_size</a> -
--   The estimated size of the channel.
newChannelStatistics :: ChannelStatistics

-- | The estimated size of the channel.
channelStatistics_size :: Lens' ChannelStatistics (Maybe EstimatedResourceSize)

-- | Where channel data is stored. You may choose one of
--   <tt>serviceManagedS3</tt>, <tt>customerManagedS3</tt> storage. If not
--   specified, the default is <tt>serviceManagedS3</tt>. This can't be
--   changed after creation of the channel.
--   
--   <i>See:</i> <a>newChannelStorage</a> smart constructor.
data ChannelStorage
ChannelStorage' :: Maybe ServiceManagedChannelS3Storage -> Maybe CustomerManagedChannelS3Storage -> ChannelStorage

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
--   You can't change the choice of S3 storage after the data store is
--   created.
[$sel:serviceManagedS3:ChannelStorage'] :: ChannelStorage -> Maybe ServiceManagedChannelS3Storage

-- | Used to store channel data in an S3 bucket that you manage. If
--   customer managed storage is selected, the <tt>retentionPeriod</tt>
--   parameter is ignored. You can't change the choice of S3 storage after
--   the data store is created.
[$sel:customerManagedS3:ChannelStorage'] :: ChannelStorage -> Maybe CustomerManagedChannelS3Storage

-- | Create a value of <a>ChannelStorage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:ChannelStorage'</a>,
--   <a>channelStorage_serviceManagedS3</a> - Used to store channel data in
--   an S3 bucket managed by IoT Analytics. You can't change the choice of
--   S3 storage after the data store is created.
--   
--   <a>$sel:customerManagedS3:ChannelStorage'</a>,
--   <a>channelStorage_customerManagedS3</a> - Used to store channel data
--   in an S3 bucket that you manage. If customer managed storage is
--   selected, the <tt>retentionPeriod</tt> parameter is ignored. You can't
--   change the choice of S3 storage after the data store is created.
newChannelStorage :: ChannelStorage

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
--   You can't change the choice of S3 storage after the data store is
--   created.
channelStorage_serviceManagedS3 :: Lens' ChannelStorage (Maybe ServiceManagedChannelS3Storage)

-- | Used to store channel data in an S3 bucket that you manage. If
--   customer managed storage is selected, the <tt>retentionPeriod</tt>
--   parameter is ignored. You can't change the choice of S3 storage after
--   the data store is created.
channelStorage_customerManagedS3 :: Lens' ChannelStorage (Maybe CustomerManagedChannelS3Storage)

-- | Where channel data is stored.
--   
--   <i>See:</i> <a>newChannelStorageSummary</a> smart constructor.
data ChannelStorageSummary
ChannelStorageSummary' :: Maybe ServiceManagedChannelS3StorageSummary -> Maybe CustomerManagedChannelS3StorageSummary -> ChannelStorageSummary

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
[$sel:serviceManagedS3:ChannelStorageSummary'] :: ChannelStorageSummary -> Maybe ServiceManagedChannelS3StorageSummary

-- | Used to store channel data in an S3 bucket that you manage.
[$sel:customerManagedS3:ChannelStorageSummary'] :: ChannelStorageSummary -> Maybe CustomerManagedChannelS3StorageSummary

-- | Create a value of <a>ChannelStorageSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:ChannelStorageSummary'</a>,
--   <a>channelStorageSummary_serviceManagedS3</a> - Used to store channel
--   data in an S3 bucket managed by IoT Analytics.
--   
--   <a>$sel:customerManagedS3:ChannelStorageSummary'</a>,
--   <a>channelStorageSummary_customerManagedS3</a> - Used to store channel
--   data in an S3 bucket that you manage.
newChannelStorageSummary :: ChannelStorageSummary

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
channelStorageSummary_serviceManagedS3 :: Lens' ChannelStorageSummary (Maybe ServiceManagedChannelS3StorageSummary)

-- | Used to store channel data in an S3 bucket that you manage.
channelStorageSummary_customerManagedS3 :: Lens' ChannelStorageSummary (Maybe CustomerManagedChannelS3StorageSummary)

-- | A summary of information about a channel.
--   
--   <i>See:</i> <a>newChannelSummary</a> smart constructor.
data ChannelSummary
ChannelSummary' :: Maybe POSIX -> Maybe ChannelStatus -> Maybe POSIX -> Maybe Text -> Maybe ChannelStorageSummary -> Maybe POSIX -> ChannelSummary

-- | When the channel was created.
[$sel:creationTime:ChannelSummary'] :: ChannelSummary -> Maybe POSIX

-- | The status of the channel.
[$sel:status:ChannelSummary'] :: ChannelSummary -> Maybe ChannelStatus

-- | The last time when a new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
[$sel:lastMessageArrivalTime:ChannelSummary'] :: ChannelSummary -> Maybe POSIX

-- | The name of the channel.
[$sel:channelName:ChannelSummary'] :: ChannelSummary -> Maybe Text

-- | Where channel data is stored.
[$sel:channelStorage:ChannelSummary'] :: ChannelSummary -> Maybe ChannelStorageSummary

-- | The last time the channel was updated.
[$sel:lastUpdateTime:ChannelSummary'] :: ChannelSummary -> Maybe POSIX

-- | Create a value of <a>ChannelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ChannelSummary'</a>,
--   <a>channelSummary_creationTime</a> - When the channel was created.
--   
--   <a>$sel:status:ChannelSummary'</a>, <a>channelSummary_status</a> - The
--   status of the channel.
--   
--   <a>$sel:lastMessageArrivalTime:ChannelSummary'</a>,
--   <a>channelSummary_lastMessageArrivalTime</a> - The last time when a
--   new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:channelName:ChannelSummary'</a>,
--   <a>channelSummary_channelName</a> - The name of the channel.
--   
--   <a>$sel:channelStorage:ChannelSummary'</a>,
--   <a>channelSummary_channelStorage</a> - Where channel data is stored.
--   
--   <a>$sel:lastUpdateTime:ChannelSummary'</a>,
--   <a>channelSummary_lastUpdateTime</a> - The last time the channel was
--   updated.
newChannelSummary :: ChannelSummary

-- | When the channel was created.
channelSummary_creationTime :: Lens' ChannelSummary (Maybe UTCTime)

-- | The status of the channel.
channelSummary_status :: Lens' ChannelSummary (Maybe ChannelStatus)

-- | The last time when a new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
channelSummary_lastMessageArrivalTime :: Lens' ChannelSummary (Maybe UTCTime)

-- | The name of the channel.
channelSummary_channelName :: Lens' ChannelSummary (Maybe Text)

-- | Where channel data is stored.
channelSummary_channelStorage :: Lens' ChannelSummary (Maybe ChannelStorageSummary)

-- | The last time the channel was updated.
channelSummary_lastUpdateTime :: Lens' ChannelSummary (Maybe UTCTime)

-- | Contains information about a column that stores your data.
--   
--   <i>See:</i> <a>newColumn</a> smart constructor.
data Column
Column' :: Text -> Text -> Column

-- | The name of the column.
[$sel:name:Column'] :: Column -> Text

-- | The type of data. For more information about the supported data types,
--   see <a>Common data types</a> in the <i>Glue Developer Guide</i>.
[$sel:type':Column'] :: Column -> Text

-- | Create a value of <a>Column</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Column'</a>, <a>column_name</a> - The name of the column.
--   
--   <a>$sel:type':Column'</a>, <a>column_type</a> - The type of data. For
--   more information about the supported data types, see <a>Common data
--   types</a> in the <i>Glue Developer Guide</i>.
newColumn :: Text -> Text -> Column

-- | The name of the column.
column_name :: Lens' Column Text

-- | The type of data. For more information about the supported data types,
--   see <a>Common data types</a> in the <i>Glue Developer Guide</i>.
column_type :: Lens' Column Text

-- | Information required to run the <tt>containerAction</tt> to produce
--   dataset contents.
--   
--   <i>See:</i> <a>newContainerDatasetAction</a> smart constructor.
data ContainerDatasetAction
ContainerDatasetAction' :: Maybe [Variable] -> Text -> Text -> ResourceConfiguration -> ContainerDatasetAction

-- | The values of variables used in the context of the execution of the
--   containerized application (basically, parameters passed to the
--   application). Each variable must have a name and a value given by one
--   of <tt>stringValue</tt>, <tt>datasetContentVersionValue</tt>, or
--   <tt>outputFileUriValue</tt>.
[$sel:variables:ContainerDatasetAction'] :: ContainerDatasetAction -> Maybe [Variable]

-- | The ARN of the Docker container stored in your account. The Docker
--   container contains an application and required support libraries and
--   is used to generate dataset contents.
[$sel:image:ContainerDatasetAction'] :: ContainerDatasetAction -> Text

-- | The ARN of the role that gives permission to the system to access
--   required resources to run the <tt>containerAction</tt>. This includes,
--   at minimum, permission to retrieve the dataset contents that are the
--   input to the containerized application.
[$sel:executionRoleArn:ContainerDatasetAction'] :: ContainerDatasetAction -> Text

-- | Configuration of the resource that executes the
--   <tt>containerAction</tt>.
[$sel:resourceConfiguration:ContainerDatasetAction'] :: ContainerDatasetAction -> ResourceConfiguration

-- | Create a value of <a>ContainerDatasetAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_variables</a> - The values of variables used
--   in the context of the execution of the containerized application
--   (basically, parameters passed to the application). Each variable must
--   have a name and a value given by one of <tt>stringValue</tt>,
--   <tt>datasetContentVersionValue</tt>, or <tt>outputFileUriValue</tt>.
--   
--   <a>$sel:image:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_image</a> - The ARN of the Docker container
--   stored in your account. The Docker container contains an application
--   and required support libraries and is used to generate dataset
--   contents.
--   
--   <a>$sel:executionRoleArn:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_executionRoleArn</a> - The ARN of the role
--   that gives permission to the system to access required resources to
--   run the <tt>containerAction</tt>. This includes, at minimum,
--   permission to retrieve the dataset contents that are the input to the
--   containerized application.
--   
--   <a>$sel:resourceConfiguration:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_resourceConfiguration</a> - Configuration of
--   the resource that executes the <tt>containerAction</tt>.
newContainerDatasetAction :: Text -> Text -> ResourceConfiguration -> ContainerDatasetAction

-- | The values of variables used in the context of the execution of the
--   containerized application (basically, parameters passed to the
--   application). Each variable must have a name and a value given by one
--   of <tt>stringValue</tt>, <tt>datasetContentVersionValue</tt>, or
--   <tt>outputFileUriValue</tt>.
containerDatasetAction_variables :: Lens' ContainerDatasetAction (Maybe [Variable])

-- | The ARN of the Docker container stored in your account. The Docker
--   container contains an application and required support libraries and
--   is used to generate dataset contents.
containerDatasetAction_image :: Lens' ContainerDatasetAction Text

-- | The ARN of the role that gives permission to the system to access
--   required resources to run the <tt>containerAction</tt>. This includes,
--   at minimum, permission to retrieve the dataset contents that are the
--   input to the containerized application.
containerDatasetAction_executionRoleArn :: Lens' ContainerDatasetAction Text

-- | Configuration of the resource that executes the
--   <tt>containerAction</tt>.
containerDatasetAction_resourceConfiguration :: Lens' ContainerDatasetAction ResourceConfiguration

-- | Used to store channel data in an S3 bucket that you manage. If
--   customer-managed storage is selected, the <tt>retentionPeriod</tt>
--   parameter is ignored. You can't change the choice of S3 storage after
--   the data store is created.
--   
--   <i>See:</i> <a>newCustomerManagedChannelS3Storage</a> smart
--   constructor.
data CustomerManagedChannelS3Storage
CustomerManagedChannelS3Storage' :: Maybe Text -> Text -> Text -> CustomerManagedChannelS3Storage

-- | (Optional) The prefix used to create the keys of the channel data
--   objects. Each object in an S3 bucket has a key that is its unique
--   identifier in the bucket. Each object in a bucket has exactly one key.
--   The prefix must end with a forward slash (/).
[$sel:keyPrefix:CustomerManagedChannelS3Storage'] :: CustomerManagedChannelS3Storage -> Maybe Text

-- | The name of the S3 bucket in which channel data is stored.
[$sel:bucket:CustomerManagedChannelS3Storage'] :: CustomerManagedChannelS3Storage -> Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
[$sel:roleArn:CustomerManagedChannelS3Storage'] :: CustomerManagedChannelS3Storage -> Text

-- | Create a value of <a>CustomerManagedChannelS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPrefix:CustomerManagedChannelS3Storage'</a>,
--   <a>customerManagedChannelS3Storage_keyPrefix</a> - (Optional) The
--   prefix used to create the keys of the channel data objects. Each
--   object in an S3 bucket has a key that is its unique identifier in the
--   bucket. Each object in a bucket has exactly one key. The prefix must
--   end with a forward slash (/).
--   
--   <a>$sel:bucket:CustomerManagedChannelS3Storage'</a>,
--   <a>customerManagedChannelS3Storage_bucket</a> - The name of the S3
--   bucket in which channel data is stored.
--   
--   <a>$sel:roleArn:CustomerManagedChannelS3Storage'</a>,
--   <a>customerManagedChannelS3Storage_roleArn</a> - The ARN of the role
--   that grants IoT Analytics permission to interact with your Amazon S3
--   resources.
newCustomerManagedChannelS3Storage :: Text -> Text -> CustomerManagedChannelS3Storage

-- | (Optional) The prefix used to create the keys of the channel data
--   objects. Each object in an S3 bucket has a key that is its unique
--   identifier in the bucket. Each object in a bucket has exactly one key.
--   The prefix must end with a forward slash (/).
customerManagedChannelS3Storage_keyPrefix :: Lens' CustomerManagedChannelS3Storage (Maybe Text)

-- | The name of the S3 bucket in which channel data is stored.
customerManagedChannelS3Storage_bucket :: Lens' CustomerManagedChannelS3Storage Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedChannelS3Storage_roleArn :: Lens' CustomerManagedChannelS3Storage Text

-- | Used to store channel data in an S3 bucket that you manage.
--   
--   <i>See:</i> <a>newCustomerManagedChannelS3StorageSummary</a> smart
--   constructor.
data CustomerManagedChannelS3StorageSummary
CustomerManagedChannelS3StorageSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> CustomerManagedChannelS3StorageSummary

-- | The name of the S3 bucket in which channel data is stored.
[$sel:bucket:CustomerManagedChannelS3StorageSummary'] :: CustomerManagedChannelS3StorageSummary -> Maybe Text

-- | (Optional) The prefix used to create the keys of the channel data
--   objects. Each object in an S3 bucket has a key that is its unique
--   identifier within the bucket (each object in a bucket has exactly one
--   key). The prefix must end with a forward slash (/).
[$sel:keyPrefix:CustomerManagedChannelS3StorageSummary'] :: CustomerManagedChannelS3StorageSummary -> Maybe Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
[$sel:roleArn:CustomerManagedChannelS3StorageSummary'] :: CustomerManagedChannelS3StorageSummary -> Maybe Text

-- | Create a value of <a>CustomerManagedChannelS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:CustomerManagedChannelS3StorageSummary'</a>,
--   <a>customerManagedChannelS3StorageSummary_bucket</a> - The name of the
--   S3 bucket in which channel data is stored.
--   
--   <a>$sel:keyPrefix:CustomerManagedChannelS3StorageSummary'</a>,
--   <a>customerManagedChannelS3StorageSummary_keyPrefix</a> - (Optional)
--   The prefix used to create the keys of the channel data objects. Each
--   object in an S3 bucket has a key that is its unique identifier within
--   the bucket (each object in a bucket has exactly one key). The prefix
--   must end with a forward slash (/).
--   
--   <a>$sel:roleArn:CustomerManagedChannelS3StorageSummary'</a>,
--   <a>customerManagedChannelS3StorageSummary_roleArn</a> - The ARN of the
--   role that grants IoT Analytics permission to interact with your Amazon
--   S3 resources.
newCustomerManagedChannelS3StorageSummary :: CustomerManagedChannelS3StorageSummary

-- | The name of the S3 bucket in which channel data is stored.
customerManagedChannelS3StorageSummary_bucket :: Lens' CustomerManagedChannelS3StorageSummary (Maybe Text)

-- | (Optional) The prefix used to create the keys of the channel data
--   objects. Each object in an S3 bucket has a key that is its unique
--   identifier within the bucket (each object in a bucket has exactly one
--   key). The prefix must end with a forward slash (/).
customerManagedChannelS3StorageSummary_keyPrefix :: Lens' CustomerManagedChannelS3StorageSummary (Maybe Text)

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedChannelS3StorageSummary_roleArn :: Lens' CustomerManagedChannelS3StorageSummary (Maybe Text)

-- | S3-customer-managed; When you choose customer-managed storage, the
--   <tt>retentionPeriod</tt> parameter is ignored. You can't change the
--   choice of Amazon S3 storage after your data store is created.
--   
--   <i>See:</i> <a>newCustomerManagedDatastoreS3Storage</a> smart
--   constructor.
data CustomerManagedDatastoreS3Storage
CustomerManagedDatastoreS3Storage' :: Maybe Text -> Text -> Text -> CustomerManagedDatastoreS3Storage

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
[$sel:keyPrefix:CustomerManagedDatastoreS3Storage'] :: CustomerManagedDatastoreS3Storage -> Maybe Text

-- | The name of the Amazon S3 bucket where your data is stored.
[$sel:bucket:CustomerManagedDatastoreS3Storage'] :: CustomerManagedDatastoreS3Storage -> Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
[$sel:roleArn:CustomerManagedDatastoreS3Storage'] :: CustomerManagedDatastoreS3Storage -> Text

-- | Create a value of <a>CustomerManagedDatastoreS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPrefix:CustomerManagedDatastoreS3Storage'</a>,
--   <a>customerManagedDatastoreS3Storage_keyPrefix</a> - (Optional) The
--   prefix used to create the keys of the data store data objects. Each
--   object in an Amazon S3 bucket has a key that is its unique identifier
--   in the bucket. Each object in a bucket has exactly one key. The prefix
--   must end with a forward slash (/).
--   
--   <a>$sel:bucket:CustomerManagedDatastoreS3Storage'</a>,
--   <a>customerManagedDatastoreS3Storage_bucket</a> - The name of the
--   Amazon S3 bucket where your data is stored.
--   
--   <a>$sel:roleArn:CustomerManagedDatastoreS3Storage'</a>,
--   <a>customerManagedDatastoreS3Storage_roleArn</a> - The ARN of the role
--   that grants IoT Analytics permission to interact with your Amazon S3
--   resources.
newCustomerManagedDatastoreS3Storage :: Text -> Text -> CustomerManagedDatastoreS3Storage

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
customerManagedDatastoreS3Storage_keyPrefix :: Lens' CustomerManagedDatastoreS3Storage (Maybe Text)

-- | The name of the Amazon S3 bucket where your data is stored.
customerManagedDatastoreS3Storage_bucket :: Lens' CustomerManagedDatastoreS3Storage Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedDatastoreS3Storage_roleArn :: Lens' CustomerManagedDatastoreS3Storage Text

-- | Contains information about the data store that you manage.
--   
--   <i>See:</i> <a>newCustomerManagedDatastoreS3StorageSummary</a> smart
--   constructor.
data CustomerManagedDatastoreS3StorageSummary
CustomerManagedDatastoreS3StorageSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> CustomerManagedDatastoreS3StorageSummary

-- | The name of the Amazon S3 bucket where your data is stored.
[$sel:bucket:CustomerManagedDatastoreS3StorageSummary'] :: CustomerManagedDatastoreS3StorageSummary -> Maybe Text

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
[$sel:keyPrefix:CustomerManagedDatastoreS3StorageSummary'] :: CustomerManagedDatastoreS3StorageSummary -> Maybe Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
[$sel:roleArn:CustomerManagedDatastoreS3StorageSummary'] :: CustomerManagedDatastoreS3StorageSummary -> Maybe Text

-- | Create a value of <a>CustomerManagedDatastoreS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:CustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>customerManagedDatastoreS3StorageSummary_bucket</a> - The name of
--   the Amazon S3 bucket where your data is stored.
--   
--   <a>$sel:keyPrefix:CustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>customerManagedDatastoreS3StorageSummary_keyPrefix</a> - (Optional)
--   The prefix used to create the keys of the data store data objects.
--   Each object in an Amazon S3 bucket has a key that is its unique
--   identifier in the bucket. Each object in a bucket has exactly one key.
--   The prefix must end with a forward slash (/).
--   
--   <a>$sel:roleArn:CustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>customerManagedDatastoreS3StorageSummary_roleArn</a> - The ARN of
--   the role that grants IoT Analytics permission to interact with your
--   Amazon S3 resources.
newCustomerManagedDatastoreS3StorageSummary :: CustomerManagedDatastoreS3StorageSummary

-- | The name of the Amazon S3 bucket where your data is stored.
customerManagedDatastoreS3StorageSummary_bucket :: Lens' CustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
customerManagedDatastoreS3StorageSummary_keyPrefix :: Lens' CustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedDatastoreS3StorageSummary_roleArn :: Lens' CustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | Information about a dataset.
--   
--   <i>See:</i> <a>newDataset</a> smart constructor.
data Dataset
Dataset' :: Maybe POSIX -> Maybe DatasetStatus -> Maybe VersioningConfiguration -> Maybe Text -> Maybe (NonEmpty DatasetAction) -> Maybe [DatasetTrigger] -> Maybe RetentionPeriod -> Maybe (NonEmpty LateDataRule) -> Maybe Text -> Maybe [DatasetContentDeliveryRule] -> Maybe POSIX -> Dataset

-- | When the dataset was created.
[$sel:creationTime:Dataset'] :: Dataset -> Maybe POSIX

-- | The status of the dataset.
[$sel:status:Dataset'] :: Dataset -> Maybe DatasetStatus

-- | Optional. How many versions of dataset contents are kept. If not
--   specified or set to null, only the latest version plus the latest
--   succeeded version (if they are different) are kept for the time period
--   specified by the <tt>retentionPeriod</tt> parameter. For more
--   information, see <a>Keeping Multiple Versions of IoT Analytics
--   datasets</a> in the <i>IoT Analytics User Guide</i>.
[$sel:versioningConfiguration:Dataset'] :: Dataset -> Maybe VersioningConfiguration

-- | The ARN of the dataset.
[$sel:arn:Dataset'] :: Dataset -> Maybe Text

-- | The <tt>DatasetAction</tt> objects that automatically create the
--   dataset contents.
[$sel:actions:Dataset'] :: Dataset -> Maybe (NonEmpty DatasetAction)

-- | The <tt>DatasetTrigger</tt> objects that specify when the dataset is
--   automatically updated.
[$sel:triggers:Dataset'] :: Dataset -> Maybe [DatasetTrigger]

-- | Optional. How long, in days, message data is kept for the dataset.
[$sel:retentionPeriod:Dataset'] :: Dataset -> Maybe RetentionPeriod

-- | A list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
[$sel:lateDataRules:Dataset'] :: Dataset -> Maybe (NonEmpty LateDataRule)

-- | The name of the dataset.
[$sel:name:Dataset'] :: Dataset -> Maybe Text

-- | When dataset contents are created they are delivered to destinations
--   specified here.
[$sel:contentDeliveryRules:Dataset'] :: Dataset -> Maybe [DatasetContentDeliveryRule]

-- | The last time the dataset was updated.
[$sel:lastUpdateTime:Dataset'] :: Dataset -> Maybe POSIX

-- | Create a value of <a>Dataset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Dataset'</a>, <a>dataset_creationTime</a> - When
--   the dataset was created.
--   
--   <a>$sel:status:Dataset'</a>, <a>dataset_status</a> - The status of the
--   dataset.
--   
--   <a>$sel:versioningConfiguration:Dataset'</a>,
--   <a>dataset_versioningConfiguration</a> - Optional. How many versions
--   of dataset contents are kept. If not specified or set to null, only
--   the latest version plus the latest succeeded version (if they are
--   different) are kept for the time period specified by the
--   <tt>retentionPeriod</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
--   
--   <a>$sel:arn:Dataset'</a>, <a>dataset_arn</a> - The ARN of the dataset.
--   
--   <a>$sel:actions:Dataset'</a>, <a>dataset_actions</a> - The
--   <tt>DatasetAction</tt> objects that automatically create the dataset
--   contents.
--   
--   <a>$sel:triggers:Dataset'</a>, <a>dataset_triggers</a> - The
--   <tt>DatasetTrigger</tt> objects that specify when the dataset is
--   automatically updated.
--   
--   <a>$sel:retentionPeriod:Dataset'</a>, <a>dataset_retentionPeriod</a> -
--   Optional. How long, in days, message data is kept for the dataset.
--   
--   <a>$sel:lateDataRules:Dataset'</a>, <a>dataset_lateDataRules</a> - A
--   list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
--   
--   <a>$sel:name:Dataset'</a>, <a>dataset_name</a> - The name of the
--   dataset.
--   
--   <a>$sel:contentDeliveryRules:Dataset'</a>,
--   <a>dataset_contentDeliveryRules</a> - When dataset contents are
--   created they are delivered to destinations specified here.
--   
--   <a>$sel:lastUpdateTime:Dataset'</a>, <a>dataset_lastUpdateTime</a> -
--   The last time the dataset was updated.
newDataset :: Dataset

-- | When the dataset was created.
dataset_creationTime :: Lens' Dataset (Maybe UTCTime)

-- | The status of the dataset.
dataset_status :: Lens' Dataset (Maybe DatasetStatus)

-- | Optional. How many versions of dataset contents are kept. If not
--   specified or set to null, only the latest version plus the latest
--   succeeded version (if they are different) are kept for the time period
--   specified by the <tt>retentionPeriod</tt> parameter. For more
--   information, see <a>Keeping Multiple Versions of IoT Analytics
--   datasets</a> in the <i>IoT Analytics User Guide</i>.
dataset_versioningConfiguration :: Lens' Dataset (Maybe VersioningConfiguration)

-- | The ARN of the dataset.
dataset_arn :: Lens' Dataset (Maybe Text)

-- | The <tt>DatasetAction</tt> objects that automatically create the
--   dataset contents.
dataset_actions :: Lens' Dataset (Maybe (NonEmpty DatasetAction))

-- | The <tt>DatasetTrigger</tt> objects that specify when the dataset is
--   automatically updated.
dataset_triggers :: Lens' Dataset (Maybe [DatasetTrigger])

-- | Optional. How long, in days, message data is kept for the dataset.
dataset_retentionPeriod :: Lens' Dataset (Maybe RetentionPeriod)

-- | A list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
dataset_lateDataRules :: Lens' Dataset (Maybe (NonEmpty LateDataRule))

-- | The name of the dataset.
dataset_name :: Lens' Dataset (Maybe Text)

-- | When dataset contents are created they are delivered to destinations
--   specified here.
dataset_contentDeliveryRules :: Lens' Dataset (Maybe [DatasetContentDeliveryRule])

-- | The last time the dataset was updated.
dataset_lastUpdateTime :: Lens' Dataset (Maybe UTCTime)

-- | A <tt>DatasetAction</tt> object that specifies how dataset contents
--   are automatically created.
--   
--   <i>See:</i> <a>newDatasetAction</a> smart constructor.
data DatasetAction
DatasetAction' :: Maybe SqlQueryDatasetAction -> Maybe Text -> Maybe ContainerDatasetAction -> DatasetAction

-- | An <tt>SqlQueryDatasetAction</tt> object that uses an SQL query to
--   automatically create dataset contents.
[$sel:queryAction:DatasetAction'] :: DatasetAction -> Maybe SqlQueryDatasetAction

-- | The name of the dataset action by which dataset contents are
--   automatically created.
[$sel:actionName:DatasetAction'] :: DatasetAction -> Maybe Text

-- | Information that allows the system to run a containerized application
--   to create the dataset contents. The application must be in a Docker
--   container along with any required support libraries.
[$sel:containerAction:DatasetAction'] :: DatasetAction -> Maybe ContainerDatasetAction

-- | Create a value of <a>DatasetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryAction:DatasetAction'</a>,
--   <a>datasetAction_queryAction</a> - An <tt>SqlQueryDatasetAction</tt>
--   object that uses an SQL query to automatically create dataset
--   contents.
--   
--   <a>$sel:actionName:DatasetAction'</a>, <a>datasetAction_actionName</a>
--   - The name of the dataset action by which dataset contents are
--   automatically created.
--   
--   <a>$sel:containerAction:DatasetAction'</a>,
--   <a>datasetAction_containerAction</a> - Information that allows the
--   system to run a containerized application to create the dataset
--   contents. The application must be in a Docker container along with any
--   required support libraries.
newDatasetAction :: DatasetAction

-- | An <tt>SqlQueryDatasetAction</tt> object that uses an SQL query to
--   automatically create dataset contents.
datasetAction_queryAction :: Lens' DatasetAction (Maybe SqlQueryDatasetAction)

-- | The name of the dataset action by which dataset contents are
--   automatically created.
datasetAction_actionName :: Lens' DatasetAction (Maybe Text)

-- | Information that allows the system to run a containerized application
--   to create the dataset contents. The application must be in a Docker
--   container along with any required support libraries.
datasetAction_containerAction :: Lens' DatasetAction (Maybe ContainerDatasetAction)

-- | Information about the action that automatically creates the dataset's
--   contents.
--   
--   <i>See:</i> <a>newDatasetActionSummary</a> smart constructor.
data DatasetActionSummary
DatasetActionSummary' :: Maybe Text -> Maybe DatasetActionType -> DatasetActionSummary

-- | The name of the action that automatically creates the dataset's
--   contents.
[$sel:actionName:DatasetActionSummary'] :: DatasetActionSummary -> Maybe Text

-- | The type of action by which the dataset's contents are automatically
--   created.
[$sel:actionType:DatasetActionSummary'] :: DatasetActionSummary -> Maybe DatasetActionType

-- | Create a value of <a>DatasetActionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionName:DatasetActionSummary'</a>,
--   <a>datasetActionSummary_actionName</a> - The name of the action that
--   automatically creates the dataset's contents.
--   
--   <a>$sel:actionType:DatasetActionSummary'</a>,
--   <a>datasetActionSummary_actionType</a> - The type of action by which
--   the dataset's contents are automatically created.
newDatasetActionSummary :: DatasetActionSummary

-- | The name of the action that automatically creates the dataset's
--   contents.
datasetActionSummary_actionName :: Lens' DatasetActionSummary (Maybe Text)

-- | The type of action by which the dataset's contents are automatically
--   created.
datasetActionSummary_actionType :: Lens' DatasetActionSummary (Maybe DatasetActionType)

-- | The destination to which dataset contents are delivered.
--   
--   <i>See:</i> <a>newDatasetContentDeliveryDestination</a> smart
--   constructor.
data DatasetContentDeliveryDestination
DatasetContentDeliveryDestination' :: Maybe S3DestinationConfiguration -> Maybe IotEventsDestinationConfiguration -> DatasetContentDeliveryDestination

-- | Configuration information for delivery of dataset contents to Amazon
--   S3.
[$sel:s3DestinationConfiguration:DatasetContentDeliveryDestination'] :: DatasetContentDeliveryDestination -> Maybe S3DestinationConfiguration

-- | Configuration information for delivery of dataset contents to IoT
--   Events.
[$sel:iotEventsDestinationConfiguration:DatasetContentDeliveryDestination'] :: DatasetContentDeliveryDestination -> Maybe IotEventsDestinationConfiguration

-- | Create a value of <a>DatasetContentDeliveryDestination</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:s3DestinationConfiguration:DatasetContentDeliveryDestination'</a>,
--   <a>datasetContentDeliveryDestination_s3DestinationConfiguration</a> -
--   Configuration information for delivery of dataset contents to Amazon
--   S3.
--   
--   
--   <a>$sel:iotEventsDestinationConfiguration:DatasetContentDeliveryDestination'</a>,
--   <a>datasetContentDeliveryDestination_iotEventsDestinationConfiguration</a>
--   - Configuration information for delivery of dataset contents to IoT
--   Events.
newDatasetContentDeliveryDestination :: DatasetContentDeliveryDestination

-- | Configuration information for delivery of dataset contents to Amazon
--   S3.
datasetContentDeliveryDestination_s3DestinationConfiguration :: Lens' DatasetContentDeliveryDestination (Maybe S3DestinationConfiguration)

-- | Configuration information for delivery of dataset contents to IoT
--   Events.
datasetContentDeliveryDestination_iotEventsDestinationConfiguration :: Lens' DatasetContentDeliveryDestination (Maybe IotEventsDestinationConfiguration)

-- | When dataset contents are created, they are delivered to destination
--   specified here.
--   
--   <i>See:</i> <a>newDatasetContentDeliveryRule</a> smart constructor.
data DatasetContentDeliveryRule
DatasetContentDeliveryRule' :: Maybe Text -> DatasetContentDeliveryDestination -> DatasetContentDeliveryRule

-- | The name of the dataset content delivery rules entry.
[$sel:entryName:DatasetContentDeliveryRule'] :: DatasetContentDeliveryRule -> Maybe Text

-- | The destination to which dataset contents are delivered.
[$sel:destination:DatasetContentDeliveryRule'] :: DatasetContentDeliveryRule -> DatasetContentDeliveryDestination

-- | Create a value of <a>DatasetContentDeliveryRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entryName:DatasetContentDeliveryRule'</a>,
--   <a>datasetContentDeliveryRule_entryName</a> - The name of the dataset
--   content delivery rules entry.
--   
--   <a>$sel:destination:DatasetContentDeliveryRule'</a>,
--   <a>datasetContentDeliveryRule_destination</a> - The destination to
--   which dataset contents are delivered.
newDatasetContentDeliveryRule :: DatasetContentDeliveryDestination -> DatasetContentDeliveryRule

-- | The name of the dataset content delivery rules entry.
datasetContentDeliveryRule_entryName :: Lens' DatasetContentDeliveryRule (Maybe Text)

-- | The destination to which dataset contents are delivered.
datasetContentDeliveryRule_destination :: Lens' DatasetContentDeliveryRule DatasetContentDeliveryDestination

-- | The state of the dataset contents and the reason they are in this
--   state.
--   
--   <i>See:</i> <a>newDatasetContentStatus</a> smart constructor.
data DatasetContentStatus
DatasetContentStatus' :: Maybe DatasetContentState -> Maybe Text -> DatasetContentStatus

-- | The state of the dataset contents. Can be one of READY, CREATING,
--   SUCCEEDED, or FAILED.
[$sel:state:DatasetContentStatus'] :: DatasetContentStatus -> Maybe DatasetContentState

-- | The reason the dataset contents are in this state.
[$sel:reason:DatasetContentStatus'] :: DatasetContentStatus -> Maybe Text

-- | Create a value of <a>DatasetContentStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:DatasetContentStatus'</a>,
--   <a>datasetContentStatus_state</a> - The state of the dataset contents.
--   Can be one of READY, CREATING, SUCCEEDED, or FAILED.
--   
--   <a>$sel:reason:DatasetContentStatus'</a>,
--   <a>datasetContentStatus_reason</a> - The reason the dataset contents
--   are in this state.
newDatasetContentStatus :: DatasetContentStatus

-- | The state of the dataset contents. Can be one of READY, CREATING,
--   SUCCEEDED, or FAILED.
datasetContentStatus_state :: Lens' DatasetContentStatus (Maybe DatasetContentState)

-- | The reason the dataset contents are in this state.
datasetContentStatus_reason :: Lens' DatasetContentStatus (Maybe Text)

-- | Summary information about dataset contents.
--   
--   <i>See:</i> <a>newDatasetContentSummary</a> smart constructor.
data DatasetContentSummary
DatasetContentSummary' :: Maybe POSIX -> Maybe DatasetContentStatus -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> DatasetContentSummary

-- | The actual time the creation of the dataset contents was started.
[$sel:creationTime:DatasetContentSummary'] :: DatasetContentSummary -> Maybe POSIX

-- | The status of the dataset contents.
[$sel:status:DatasetContentSummary'] :: DatasetContentSummary -> Maybe DatasetContentStatus

-- | The time the creation of the dataset contents was scheduled to start.
[$sel:scheduleTime:DatasetContentSummary'] :: DatasetContentSummary -> Maybe POSIX

-- | The time the dataset content status was updated to SUCCEEDED or
--   FAILED.
[$sel:completionTime:DatasetContentSummary'] :: DatasetContentSummary -> Maybe POSIX

-- | The version of the dataset contents.
[$sel:version:DatasetContentSummary'] :: DatasetContentSummary -> Maybe Text

-- | Create a value of <a>DatasetContentSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_creationTime</a> - The actual time the
--   creation of the dataset contents was started.
--   
--   <a>$sel:status:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_status</a> - The status of the dataset
--   contents.
--   
--   <a>$sel:scheduleTime:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_scheduleTime</a> - The time the creation of
--   the dataset contents was scheduled to start.
--   
--   <a>$sel:completionTime:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_completionTime</a> - The time the dataset
--   content status was updated to SUCCEEDED or FAILED.
--   
--   <a>$sel:version:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_version</a> - The version of the dataset
--   contents.
newDatasetContentSummary :: DatasetContentSummary

-- | The actual time the creation of the dataset contents was started.
datasetContentSummary_creationTime :: Lens' DatasetContentSummary (Maybe UTCTime)

-- | The status of the dataset contents.
datasetContentSummary_status :: Lens' DatasetContentSummary (Maybe DatasetContentStatus)

-- | The time the creation of the dataset contents was scheduled to start.
datasetContentSummary_scheduleTime :: Lens' DatasetContentSummary (Maybe UTCTime)

-- | The time the dataset content status was updated to SUCCEEDED or
--   FAILED.
datasetContentSummary_completionTime :: Lens' DatasetContentSummary (Maybe UTCTime)

-- | The version of the dataset contents.
datasetContentSummary_version :: Lens' DatasetContentSummary (Maybe Text)

-- | The dataset whose latest contents are used as input to the notebook or
--   application.
--   
--   <i>See:</i> <a>newDatasetContentVersionValue</a> smart constructor.
data DatasetContentVersionValue
DatasetContentVersionValue' :: Text -> DatasetContentVersionValue

-- | The name of the dataset whose latest contents are used as input to the
--   notebook or application.
[$sel:datasetName:DatasetContentVersionValue'] :: DatasetContentVersionValue -> Text

-- | Create a value of <a>DatasetContentVersionValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:DatasetContentVersionValue'</a>,
--   <a>datasetContentVersionValue_datasetName</a> - The name of the
--   dataset whose latest contents are used as input to the notebook or
--   application.
newDatasetContentVersionValue :: Text -> DatasetContentVersionValue

-- | The name of the dataset whose latest contents are used as input to the
--   notebook or application.
datasetContentVersionValue_datasetName :: Lens' DatasetContentVersionValue Text

-- | The reference to a dataset entry.
--   
--   <i>See:</i> <a>newDatasetEntry</a> smart constructor.
data DatasetEntry
DatasetEntry' :: Maybe Text -> Maybe Text -> DatasetEntry

-- | The name of the dataset item.
[$sel:entryName:DatasetEntry'] :: DatasetEntry -> Maybe Text

-- | The presigned URI of the dataset item.
[$sel:dataURI:DatasetEntry'] :: DatasetEntry -> Maybe Text

-- | Create a value of <a>DatasetEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entryName:DatasetEntry'</a>, <a>datasetEntry_entryName</a> -
--   The name of the dataset item.
--   
--   <a>$sel:dataURI:DatasetEntry'</a>, <a>datasetEntry_dataURI</a> - The
--   presigned URI of the dataset item.
newDatasetEntry :: DatasetEntry

-- | The name of the dataset item.
datasetEntry_entryName :: Lens' DatasetEntry (Maybe Text)

-- | The presigned URI of the dataset item.
datasetEntry_dataURI :: Lens' DatasetEntry (Maybe Text)

-- | A summary of information about a dataset.
--   
--   <i>See:</i> <a>newDatasetSummary</a> smart constructor.
data DatasetSummary
DatasetSummary' :: Maybe POSIX -> Maybe DatasetStatus -> Maybe (NonEmpty DatasetActionSummary) -> Maybe [DatasetTrigger] -> Maybe Text -> Maybe POSIX -> DatasetSummary

-- | The time the dataset was created.
[$sel:creationTime:DatasetSummary'] :: DatasetSummary -> Maybe POSIX

-- | The status of the dataset.
[$sel:status:DatasetSummary'] :: DatasetSummary -> Maybe DatasetStatus

-- | A list of <tt>DataActionSummary</tt> objects.
[$sel:actions:DatasetSummary'] :: DatasetSummary -> Maybe (NonEmpty DatasetActionSummary)

-- | A list of triggers. A trigger causes dataset content to be populated
--   at a specified time interval or when another dataset is populated. The
--   list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects
[$sel:triggers:DatasetSummary'] :: DatasetSummary -> Maybe [DatasetTrigger]

-- | The name of the dataset.
[$sel:datasetName:DatasetSummary'] :: DatasetSummary -> Maybe Text

-- | The last time the dataset was updated.
[$sel:lastUpdateTime:DatasetSummary'] :: DatasetSummary -> Maybe POSIX

-- | Create a value of <a>DatasetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DatasetSummary'</a>,
--   <a>datasetSummary_creationTime</a> - The time the dataset was created.
--   
--   <a>$sel:status:DatasetSummary'</a>, <a>datasetSummary_status</a> - The
--   status of the dataset.
--   
--   <a>$sel:actions:DatasetSummary'</a>, <a>datasetSummary_actions</a> - A
--   list of <tt>DataActionSummary</tt> objects.
--   
--   <a>$sel:triggers:DatasetSummary'</a>, <a>datasetSummary_triggers</a> -
--   A list of triggers. A trigger causes dataset content to be populated
--   at a specified time interval or when another dataset is populated. The
--   list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects
--   
--   <a>$sel:datasetName:DatasetSummary'</a>,
--   <a>datasetSummary_datasetName</a> - The name of the dataset.
--   
--   <a>$sel:lastUpdateTime:DatasetSummary'</a>,
--   <a>datasetSummary_lastUpdateTime</a> - The last time the dataset was
--   updated.
newDatasetSummary :: DatasetSummary

-- | The time the dataset was created.
datasetSummary_creationTime :: Lens' DatasetSummary (Maybe UTCTime)

-- | The status of the dataset.
datasetSummary_status :: Lens' DatasetSummary (Maybe DatasetStatus)

-- | A list of <tt>DataActionSummary</tt> objects.
datasetSummary_actions :: Lens' DatasetSummary (Maybe (NonEmpty DatasetActionSummary))

-- | A list of triggers. A trigger causes dataset content to be populated
--   at a specified time interval or when another dataset is populated. The
--   list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects
datasetSummary_triggers :: Lens' DatasetSummary (Maybe [DatasetTrigger])

-- | The name of the dataset.
datasetSummary_datasetName :: Lens' DatasetSummary (Maybe Text)

-- | The last time the dataset was updated.
datasetSummary_lastUpdateTime :: Lens' DatasetSummary (Maybe UTCTime)

-- | The <tt>DatasetTrigger</tt> that specifies when the dataset is
--   automatically updated.
--   
--   <i>See:</i> <a>newDatasetTrigger</a> smart constructor.
data DatasetTrigger
DatasetTrigger' :: Maybe TriggeringDataset -> Maybe Schedule -> DatasetTrigger

-- | The dataset whose content creation triggers the creation of this
--   dataset's contents.
[$sel:dataset:DatasetTrigger'] :: DatasetTrigger -> Maybe TriggeringDataset

-- | The Schedule when the trigger is initiated.
[$sel:schedule:DatasetTrigger'] :: DatasetTrigger -> Maybe Schedule

-- | Create a value of <a>DatasetTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataset:DatasetTrigger'</a>, <a>datasetTrigger_dataset</a> -
--   The dataset whose content creation triggers the creation of this
--   dataset's contents.
--   
--   <a>$sel:schedule:DatasetTrigger'</a>, <a>datasetTrigger_schedule</a> -
--   The Schedule when the trigger is initiated.
newDatasetTrigger :: DatasetTrigger

-- | The dataset whose content creation triggers the creation of this
--   dataset's contents.
datasetTrigger_dataset :: Lens' DatasetTrigger (Maybe TriggeringDataset)

-- | The Schedule when the trigger is initiated.
datasetTrigger_schedule :: Lens' DatasetTrigger (Maybe Schedule)

-- | Information about a data store.
--   
--   <i>See:</i> <a>newDatastore</a> smart constructor.
data Datastore
Datastore' :: Maybe POSIX -> Maybe DatastoreStatus -> Maybe POSIX -> Maybe Text -> Maybe FileFormatConfiguration -> Maybe DatastorePartitions -> Maybe DatastoreStorage -> Maybe RetentionPeriod -> Maybe Text -> Maybe POSIX -> Datastore

-- | When the data store was created.
[$sel:creationTime:Datastore'] :: Datastore -> Maybe POSIX

-- | The status of a data store:
--   
--   <ul>
--   <li><i>CREATING</i> The data store is being created.</li>
--   <li><i>ACTIVE</i> The data store has been created and can be
--   used.</li>
--   <li><i>DELETING</i> The data store is being deleted.</li>
--   </ul>
[$sel:status:Datastore'] :: Datastore -> Maybe DatastoreStatus

-- | The last time when a new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
[$sel:lastMessageArrivalTime:Datastore'] :: Datastore -> Maybe POSIX

-- | The ARN of the data store.
[$sel:arn:Datastore'] :: Datastore -> Maybe Text

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
[$sel:fileFormatConfiguration:Datastore'] :: Datastore -> Maybe FileFormatConfiguration

-- | Contains information about the partition dimensions in a data store.
[$sel:datastorePartitions:Datastore'] :: Datastore -> Maybe DatastorePartitions

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
[$sel:storage:Datastore'] :: Datastore -> Maybe DatastoreStorage

-- | How long, in days, message data is kept for the data store. When
--   <tt>customerManagedS3</tt> storage is selected, this parameter is
--   ignored.
[$sel:retentionPeriod:Datastore'] :: Datastore -> Maybe RetentionPeriod

-- | The name of the data store.
[$sel:name:Datastore'] :: Datastore -> Maybe Text

-- | The last time the data store was updated.
[$sel:lastUpdateTime:Datastore'] :: Datastore -> Maybe POSIX

-- | Create a value of <a>Datastore</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Datastore'</a>, <a>datastore_creationTime</a> -
--   When the data store was created.
--   
--   <a>$sel:status:Datastore'</a>, <a>datastore_status</a> - The status of
--   a data store:
--   
--   <ul>
--   <li><i>CREATING</i> The data store is being created.</li>
--   <li><i>ACTIVE</i> The data store has been created and can be
--   used.</li>
--   <li><i>DELETING</i> The data store is being deleted.</li>
--   </ul>
--   
--   <a>$sel:lastMessageArrivalTime:Datastore'</a>,
--   <a>datastore_lastMessageArrivalTime</a> - The last time when a new
--   message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:arn:Datastore'</a>, <a>datastore_arn</a> - The ARN of the data
--   store.
--   
--   <a>$sel:fileFormatConfiguration:Datastore'</a>,
--   <a>datastore_fileFormatConfiguration</a> - Contains the configuration
--   information of file formats. IoT Analytics data stores support JSON
--   and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
--   
--   <a>$sel:datastorePartitions:Datastore'</a>,
--   <a>datastore_datastorePartitions</a> - Contains information about the
--   partition dimensions in a data store.
--   
--   <a>$sel:storage:Datastore'</a>, <a>datastore_storage</a> - Where data
--   in a data store is stored.. You can choose <tt>serviceManagedS3</tt>
--   storage, <tt>customerManagedS3</tt> storage, or
--   <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
--   
--   <a>$sel:retentionPeriod:Datastore'</a>,
--   <a>datastore_retentionPeriod</a> - How long, in days, message data is
--   kept for the data store. When <tt>customerManagedS3</tt> storage is
--   selected, this parameter is ignored.
--   
--   <a>$sel:name:Datastore'</a>, <a>datastore_name</a> - The name of the
--   data store.
--   
--   <a>$sel:lastUpdateTime:Datastore'</a>, <a>datastore_lastUpdateTime</a>
--   - The last time the data store was updated.
newDatastore :: Datastore

-- | When the data store was created.
datastore_creationTime :: Lens' Datastore (Maybe UTCTime)

-- | The status of a data store:
--   
--   <ul>
--   <li><i>CREATING</i> The data store is being created.</li>
--   <li><i>ACTIVE</i> The data store has been created and can be
--   used.</li>
--   <li><i>DELETING</i> The data store is being deleted.</li>
--   </ul>
datastore_status :: Lens' Datastore (Maybe DatastoreStatus)

-- | The last time when a new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
datastore_lastMessageArrivalTime :: Lens' Datastore (Maybe UTCTime)

-- | The ARN of the data store.
datastore_arn :: Lens' Datastore (Maybe Text)

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
datastore_fileFormatConfiguration :: Lens' Datastore (Maybe FileFormatConfiguration)

-- | Contains information about the partition dimensions in a data store.
datastore_datastorePartitions :: Lens' Datastore (Maybe DatastorePartitions)

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
datastore_storage :: Lens' Datastore (Maybe DatastoreStorage)

-- | How long, in days, message data is kept for the data store. When
--   <tt>customerManagedS3</tt> storage is selected, this parameter is
--   ignored.
datastore_retentionPeriod :: Lens' Datastore (Maybe RetentionPeriod)

-- | The name of the data store.
datastore_name :: Lens' Datastore (Maybe Text)

-- | The last time the data store was updated.
datastore_lastUpdateTime :: Lens' Datastore (Maybe UTCTime)

-- | The datastore activity that specifies where to store the processed
--   data.
--   
--   <i>See:</i> <a>newDatastoreActivity</a> smart constructor.
data DatastoreActivity
DatastoreActivity' :: Text -> Text -> DatastoreActivity

-- | The name of the datastore activity.
[$sel:name:DatastoreActivity'] :: DatastoreActivity -> Text

-- | The name of the data store where processed messages are stored.
[$sel:datastoreName:DatastoreActivity'] :: DatastoreActivity -> Text

-- | Create a value of <a>DatastoreActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DatastoreActivity'</a>, <a>datastoreActivity_name</a> -
--   The name of the datastore activity.
--   
--   <a>$sel:datastoreName:DatastoreActivity'</a>,
--   <a>datastoreActivity_datastoreName</a> - The name of the data store
--   where processed messages are stored.
newDatastoreActivity :: Text -> Text -> DatastoreActivity

-- | The name of the datastore activity.
datastoreActivity_name :: Lens' DatastoreActivity Text

-- | The name of the data store where processed messages are stored.
datastoreActivity_datastoreName :: Lens' DatastoreActivity Text

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage. You can't change the choice of Amazon S3 storage after
--   your data store is created.
--   
--   <i>See:</i> <a>newDatastoreIotSiteWiseMultiLayerStorage</a> smart
--   constructor.
data DatastoreIotSiteWiseMultiLayerStorage
DatastoreIotSiteWiseMultiLayerStorage' :: IotSiteWiseCustomerManagedDatastoreS3Storage -> DatastoreIotSiteWiseMultiLayerStorage

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
[$sel:customerManagedS3Storage:DatastoreIotSiteWiseMultiLayerStorage'] :: DatastoreIotSiteWiseMultiLayerStorage -> IotSiteWiseCustomerManagedDatastoreS3Storage

-- | Create a value of <a>DatastoreIotSiteWiseMultiLayerStorage</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:customerManagedS3Storage:DatastoreIotSiteWiseMultiLayerStorage'</a>,
--   <a>datastoreIotSiteWiseMultiLayerStorage_customerManagedS3Storage</a>
--   - Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
newDatastoreIotSiteWiseMultiLayerStorage :: IotSiteWiseCustomerManagedDatastoreS3Storage -> DatastoreIotSiteWiseMultiLayerStorage

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
datastoreIotSiteWiseMultiLayerStorage_customerManagedS3Storage :: Lens' DatastoreIotSiteWiseMultiLayerStorage IotSiteWiseCustomerManagedDatastoreS3Storage

-- | Contains information about the data store that you manage, which
--   stores data used by IoT SiteWise.
--   
--   <i>See:</i> <a>newDatastoreIotSiteWiseMultiLayerStorageSummary</a>
--   smart constructor.
data DatastoreIotSiteWiseMultiLayerStorageSummary
DatastoreIotSiteWiseMultiLayerStorageSummary' :: Maybe IotSiteWiseCustomerManagedDatastoreS3StorageSummary -> DatastoreIotSiteWiseMultiLayerStorageSummary

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
[$sel:customerManagedS3Storage:DatastoreIotSiteWiseMultiLayerStorageSummary'] :: DatastoreIotSiteWiseMultiLayerStorageSummary -> Maybe IotSiteWiseCustomerManagedDatastoreS3StorageSummary

-- | Create a value of <a>DatastoreIotSiteWiseMultiLayerStorageSummary</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:customerManagedS3Storage:DatastoreIotSiteWiseMultiLayerStorageSummary'</a>,
--   <a>datastoreIotSiteWiseMultiLayerStorageSummary_customerManagedS3Storage</a>
--   - Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
newDatastoreIotSiteWiseMultiLayerStorageSummary :: DatastoreIotSiteWiseMultiLayerStorageSummary

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
datastoreIotSiteWiseMultiLayerStorageSummary_customerManagedS3Storage :: Lens' DatastoreIotSiteWiseMultiLayerStorageSummary (Maybe IotSiteWiseCustomerManagedDatastoreS3StorageSummary)

-- | A single dimension to partition a data store. The dimension must be an
--   <tt>AttributePartition</tt> or a <tt>TimestampPartition</tt>.
--   
--   <i>See:</i> <a>newDatastorePartition</a> smart constructor.
data DatastorePartition
DatastorePartition' :: Maybe Partition -> Maybe TimestampPartition -> DatastorePartition

-- | A partition dimension defined by an <tt>attributeName</tt>.
[$sel:attributePartition:DatastorePartition'] :: DatastorePartition -> Maybe Partition

-- | A partition dimension defined by a timestamp attribute.
[$sel:timestampPartition:DatastorePartition'] :: DatastorePartition -> Maybe TimestampPartition

-- | Create a value of <a>DatastorePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributePartition:DatastorePartition'</a>,
--   <a>datastorePartition_attributePartition</a> - A partition dimension
--   defined by an <tt>attributeName</tt>.
--   
--   <a>$sel:timestampPartition:DatastorePartition'</a>,
--   <a>datastorePartition_timestampPartition</a> - A partition dimension
--   defined by a timestamp attribute.
newDatastorePartition :: DatastorePartition

-- | A partition dimension defined by an <tt>attributeName</tt>.
datastorePartition_attributePartition :: Lens' DatastorePartition (Maybe Partition)

-- | A partition dimension defined by a timestamp attribute.
datastorePartition_timestampPartition :: Lens' DatastorePartition (Maybe TimestampPartition)

-- | Contains information about the partition dimensions in a data store.
--   
--   <i>See:</i> <a>newDatastorePartitions</a> smart constructor.
data DatastorePartitions
DatastorePartitions' :: Maybe [DatastorePartition] -> DatastorePartitions

-- | A list of partition dimensions in a data store.
[$sel:partitions:DatastorePartitions'] :: DatastorePartitions -> Maybe [DatastorePartition]

-- | Create a value of <a>DatastorePartitions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitions:DatastorePartitions'</a>,
--   <a>datastorePartitions_partitions</a> - A list of partition dimensions
--   in a data store.
newDatastorePartitions :: DatastorePartitions

-- | A list of partition dimensions in a data store.
datastorePartitions_partitions :: Lens' DatastorePartitions (Maybe [DatastorePartition])

-- | Statistical information about the data store.
--   
--   <i>See:</i> <a>newDatastoreStatistics</a> smart constructor.
data DatastoreStatistics
DatastoreStatistics' :: Maybe EstimatedResourceSize -> DatastoreStatistics

-- | The estimated size of the data store.
[$sel:size:DatastoreStatistics'] :: DatastoreStatistics -> Maybe EstimatedResourceSize

-- | Create a value of <a>DatastoreStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:DatastoreStatistics'</a>, <a>datastoreStatistics_size</a>
--   - The estimated size of the data store.
newDatastoreStatistics :: DatastoreStatistics

-- | The estimated size of the data store.
datastoreStatistics_size :: Lens' DatastoreStatistics (Maybe EstimatedResourceSize)

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
--   
--   <i>See:</i> <a>newDatastoreStorage</a> smart constructor.
data DatastoreStorage
DatastoreStorage' :: Maybe ServiceManagedDatastoreS3Storage -> Maybe CustomerManagedDatastoreS3Storage -> Maybe DatastoreIotSiteWiseMultiLayerStorage -> DatastoreStorage

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
--   You can't change the choice of Amazon S3 storage after your data store
--   is created.
[$sel:serviceManagedS3:DatastoreStorage'] :: DatastoreStorage -> Maybe ServiceManagedDatastoreS3Storage

-- | S3-customer-managed; When you choose customer-managed storage, the
--   <tt>retentionPeriod</tt> parameter is ignored. You can't change the
--   choice of Amazon S3 storage after your data store is created.
[$sel:customerManagedS3:DatastoreStorage'] :: DatastoreStorage -> Maybe CustomerManagedDatastoreS3Storage

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage. You can't change the choice of Amazon S3 storage after
--   your data store is created.
[$sel:iotSiteWiseMultiLayerStorage:DatastoreStorage'] :: DatastoreStorage -> Maybe DatastoreIotSiteWiseMultiLayerStorage

-- | Create a value of <a>DatastoreStorage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:DatastoreStorage'</a>,
--   <a>datastoreStorage_serviceManagedS3</a> - Used to store data in an
--   Amazon S3 bucket managed by IoT Analytics. You can't change the choice
--   of Amazon S3 storage after your data store is created.
--   
--   <a>$sel:customerManagedS3:DatastoreStorage'</a>,
--   <a>datastoreStorage_customerManagedS3</a> - S3-customer-managed; When
--   you choose customer-managed storage, the <tt>retentionPeriod</tt>
--   parameter is ignored. You can't change the choice of Amazon S3 storage
--   after your data store is created.
--   
--   <a>$sel:iotSiteWiseMultiLayerStorage:DatastoreStorage'</a>,
--   <a>datastoreStorage_iotSiteWiseMultiLayerStorage</a> - Used to store
--   data used by IoT SiteWise in an Amazon S3 bucket that you manage. You
--   can't change the choice of Amazon S3 storage after your data store is
--   created.
newDatastoreStorage :: DatastoreStorage

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
--   You can't change the choice of Amazon S3 storage after your data store
--   is created.
datastoreStorage_serviceManagedS3 :: Lens' DatastoreStorage (Maybe ServiceManagedDatastoreS3Storage)

-- | S3-customer-managed; When you choose customer-managed storage, the
--   <tt>retentionPeriod</tt> parameter is ignored. You can't change the
--   choice of Amazon S3 storage after your data store is created.
datastoreStorage_customerManagedS3 :: Lens' DatastoreStorage (Maybe CustomerManagedDatastoreS3Storage)

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage. You can't change the choice of Amazon S3 storage after
--   your data store is created.
datastoreStorage_iotSiteWiseMultiLayerStorage :: Lens' DatastoreStorage (Maybe DatastoreIotSiteWiseMultiLayerStorage)

-- | Contains information about your data store.
--   
--   <i>See:</i> <a>newDatastoreStorageSummary</a> smart constructor.
data DatastoreStorageSummary
DatastoreStorageSummary' :: Maybe ServiceManagedDatastoreS3StorageSummary -> Maybe CustomerManagedDatastoreS3StorageSummary -> Maybe DatastoreIotSiteWiseMultiLayerStorageSummary -> DatastoreStorageSummary

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
[$sel:serviceManagedS3:DatastoreStorageSummary'] :: DatastoreStorageSummary -> Maybe ServiceManagedDatastoreS3StorageSummary

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
[$sel:customerManagedS3:DatastoreStorageSummary'] :: DatastoreStorageSummary -> Maybe CustomerManagedDatastoreS3StorageSummary

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
[$sel:iotSiteWiseMultiLayerStorage:DatastoreStorageSummary'] :: DatastoreStorageSummary -> Maybe DatastoreIotSiteWiseMultiLayerStorageSummary

-- | Create a value of <a>DatastoreStorageSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:DatastoreStorageSummary'</a>,
--   <a>datastoreStorageSummary_serviceManagedS3</a> - Used to store data
--   in an Amazon S3 bucket managed by IoT Analytics.
--   
--   <a>$sel:customerManagedS3:DatastoreStorageSummary'</a>,
--   <a>datastoreStorageSummary_customerManagedS3</a> - Used to store data
--   in an Amazon S3 bucket managed by IoT Analytics.
--   
--   <a>$sel:iotSiteWiseMultiLayerStorage:DatastoreStorageSummary'</a>,
--   <a>datastoreStorageSummary_iotSiteWiseMultiLayerStorage</a> - Used to
--   store data used by IoT SiteWise in an Amazon S3 bucket that you
--   manage.
newDatastoreStorageSummary :: DatastoreStorageSummary

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
datastoreStorageSummary_serviceManagedS3 :: Lens' DatastoreStorageSummary (Maybe ServiceManagedDatastoreS3StorageSummary)

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
datastoreStorageSummary_customerManagedS3 :: Lens' DatastoreStorageSummary (Maybe CustomerManagedDatastoreS3StorageSummary)

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
datastoreStorageSummary_iotSiteWiseMultiLayerStorage :: Lens' DatastoreStorageSummary (Maybe DatastoreIotSiteWiseMultiLayerStorageSummary)

-- | A summary of information about a data store.
--   
--   <i>See:</i> <a>newDatastoreSummary</a> smart constructor.
data DatastoreSummary
DatastoreSummary' :: Maybe POSIX -> Maybe DatastoreStatus -> Maybe POSIX -> Maybe Text -> Maybe DatastorePartitions -> Maybe FileFormatType -> Maybe POSIX -> Maybe DatastoreStorageSummary -> DatastoreSummary

-- | When the data store was created.
[$sel:creationTime:DatastoreSummary'] :: DatastoreSummary -> Maybe POSIX

-- | The status of the data store.
[$sel:status:DatastoreSummary'] :: DatastoreSummary -> Maybe DatastoreStatus

-- | The last time when a new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
[$sel:lastMessageArrivalTime:DatastoreSummary'] :: DatastoreSummary -> Maybe POSIX

-- | The name of the data store.
[$sel:datastoreName:DatastoreSummary'] :: DatastoreSummary -> Maybe Text

-- | Contains information about the partition dimensions in a data store.
[$sel:datastorePartitions:DatastoreSummary'] :: DatastoreSummary -> Maybe DatastorePartitions

-- | The file format of the data in the data store.
[$sel:fileFormatType:DatastoreSummary'] :: DatastoreSummary -> Maybe FileFormatType

-- | The last time the data store was updated.
[$sel:lastUpdateTime:DatastoreSummary'] :: DatastoreSummary -> Maybe POSIX

-- | Where data in a data store is stored.
[$sel:datastoreStorage:DatastoreSummary'] :: DatastoreSummary -> Maybe DatastoreStorageSummary

-- | Create a value of <a>DatastoreSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DatastoreSummary'</a>,
--   <a>datastoreSummary_creationTime</a> - When the data store was
--   created.
--   
--   <a>$sel:status:DatastoreSummary'</a>, <a>datastoreSummary_status</a> -
--   The status of the data store.
--   
--   <a>$sel:lastMessageArrivalTime:DatastoreSummary'</a>,
--   <a>datastoreSummary_lastMessageArrivalTime</a> - The last time when a
--   new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:datastoreName:DatastoreSummary'</a>,
--   <a>datastoreSummary_datastoreName</a> - The name of the data store.
--   
--   <a>$sel:datastorePartitions:DatastoreSummary'</a>,
--   <a>datastoreSummary_datastorePartitions</a> - Contains information
--   about the partition dimensions in a data store.
--   
--   <a>$sel:fileFormatType:DatastoreSummary'</a>,
--   <a>datastoreSummary_fileFormatType</a> - The file format of the data
--   in the data store.
--   
--   <a>$sel:lastUpdateTime:DatastoreSummary'</a>,
--   <a>datastoreSummary_lastUpdateTime</a> - The last time the data store
--   was updated.
--   
--   <a>$sel:datastoreStorage:DatastoreSummary'</a>,
--   <a>datastoreSummary_datastoreStorage</a> - Where data in a data store
--   is stored.
newDatastoreSummary :: DatastoreSummary

-- | When the data store was created.
datastoreSummary_creationTime :: Lens' DatastoreSummary (Maybe UTCTime)

-- | The status of the data store.
datastoreSummary_status :: Lens' DatastoreSummary (Maybe DatastoreStatus)

-- | The last time when a new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
datastoreSummary_lastMessageArrivalTime :: Lens' DatastoreSummary (Maybe UTCTime)

-- | The name of the data store.
datastoreSummary_datastoreName :: Lens' DatastoreSummary (Maybe Text)

-- | Contains information about the partition dimensions in a data store.
datastoreSummary_datastorePartitions :: Lens' DatastoreSummary (Maybe DatastorePartitions)

-- | The file format of the data in the data store.
datastoreSummary_fileFormatType :: Lens' DatastoreSummary (Maybe FileFormatType)

-- | The last time the data store was updated.
datastoreSummary_lastUpdateTime :: Lens' DatastoreSummary (Maybe UTCTime)

-- | Where data in a data store is stored.
datastoreSummary_datastoreStorage :: Lens' DatastoreSummary (Maybe DatastoreStorageSummary)

-- | Used to limit data to that which has arrived since the last execution
--   of the action.
--   
--   <i>See:</i> <a>newDeltaTime</a> smart constructor.
data DeltaTime
DeltaTime' :: Int -> Text -> DeltaTime

-- | The number of seconds of estimated in-flight lag time of message data.
--   When you create dataset contents using message data from a specified
--   timeframe, some message data might still be in flight when processing
--   begins, and so do not arrive in time to be processed. Use this field
--   to make allowances for the in flight time of your message data, so
--   that data not processed from a previous timeframe is included with the
--   next timeframe. Otherwise, missed message data would be excluded from
--   processing during the next timeframe too, because its timestamp places
--   it within the previous timeframe.
[$sel:offsetSeconds:DeltaTime'] :: DeltaTime -> Int

-- | An expression by which the time of the message data might be
--   determined. This can be the name of a timestamp field or a SQL
--   expression that is used to derive the time the message data was
--   generated.
[$sel:timeExpression:DeltaTime'] :: DeltaTime -> Text

-- | Create a value of <a>DeltaTime</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offsetSeconds:DeltaTime'</a>, <a>deltaTime_offsetSeconds</a> -
--   The number of seconds of estimated in-flight lag time of message data.
--   When you create dataset contents using message data from a specified
--   timeframe, some message data might still be in flight when processing
--   begins, and so do not arrive in time to be processed. Use this field
--   to make allowances for the in flight time of your message data, so
--   that data not processed from a previous timeframe is included with the
--   next timeframe. Otherwise, missed message data would be excluded from
--   processing during the next timeframe too, because its timestamp places
--   it within the previous timeframe.
--   
--   <a>$sel:timeExpression:DeltaTime'</a>, <a>deltaTime_timeExpression</a>
--   - An expression by which the time of the message data might be
--   determined. This can be the name of a timestamp field or a SQL
--   expression that is used to derive the time the message data was
--   generated.
newDeltaTime :: Int -> Text -> DeltaTime

-- | The number of seconds of estimated in-flight lag time of message data.
--   When you create dataset contents using message data from a specified
--   timeframe, some message data might still be in flight when processing
--   begins, and so do not arrive in time to be processed. Use this field
--   to make allowances for the in flight time of your message data, so
--   that data not processed from a previous timeframe is included with the
--   next timeframe. Otherwise, missed message data would be excluded from
--   processing during the next timeframe too, because its timestamp places
--   it within the previous timeframe.
deltaTime_offsetSeconds :: Lens' DeltaTime Int

-- | An expression by which the time of the message data might be
--   determined. This can be the name of a timestamp field or a SQL
--   expression that is used to derive the time the message data was
--   generated.
deltaTime_timeExpression :: Lens' DeltaTime Text

-- | A structure that contains the configuration information of a delta
--   time session window.
--   
--   <a>DeltaTime</a> specifies a time interval. You can use
--   <tt>DeltaTime</tt> to create dataset contents with data that has
--   arrived in the data store since the last execution. For an example of
--   <tt>DeltaTime</tt>, see <a>Creating a SQL dataset with a delta window
--   (CLI)</a> in the <i>IoT Analytics User Guide</i>.
--   
--   <i>See:</i> <a>newDeltaTimeSessionWindowConfiguration</a> smart
--   constructor.
data DeltaTimeSessionWindowConfiguration
DeltaTimeSessionWindowConfiguration' :: Natural -> DeltaTimeSessionWindowConfiguration

-- | A time interval. You can use <tt>timeoutInMinutes</tt> so that IoT
--   Analytics can batch up late data notifications that have been
--   generated since the last execution. IoT Analytics sends one batch of
--   notifications to Amazon CloudWatch Events at one time.
--   
--   For more information about how to write a timestamp expression, see
--   <a>Date and Time Functions and Operators</a>, in the <i>Presto 0.172
--   Documentation</i>.
[$sel:timeoutInMinutes:DeltaTimeSessionWindowConfiguration'] :: DeltaTimeSessionWindowConfiguration -> Natural

-- | Create a value of <a>DeltaTimeSessionWindowConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInMinutes:DeltaTimeSessionWindowConfiguration'</a>,
--   <a>deltaTimeSessionWindowConfiguration_timeoutInMinutes</a> - A time
--   interval. You can use <tt>timeoutInMinutes</tt> so that IoT Analytics
--   can batch up late data notifications that have been generated since
--   the last execution. IoT Analytics sends one batch of notifications to
--   Amazon CloudWatch Events at one time.
--   
--   For more information about how to write a timestamp expression, see
--   <a>Date and Time Functions and Operators</a>, in the <i>Presto 0.172
--   Documentation</i>.
newDeltaTimeSessionWindowConfiguration :: Natural -> DeltaTimeSessionWindowConfiguration

-- | A time interval. You can use <tt>timeoutInMinutes</tt> so that IoT
--   Analytics can batch up late data notifications that have been
--   generated since the last execution. IoT Analytics sends one batch of
--   notifications to Amazon CloudWatch Events at one time.
--   
--   For more information about how to write a timestamp expression, see
--   <a>Date and Time Functions and Operators</a>, in the <i>Presto 0.172
--   Documentation</i>.
deltaTimeSessionWindowConfiguration_timeoutInMinutes :: Lens' DeltaTimeSessionWindowConfiguration Natural

-- | An activity that adds data from the IoT device registry to your
--   message.
--   
--   <i>See:</i> <a>newDeviceRegistryEnrichActivity</a> smart constructor.
data DeviceRegistryEnrichActivity
DeviceRegistryEnrichActivity' :: Maybe Text -> Text -> Text -> Text -> Text -> DeviceRegistryEnrichActivity

-- | The next activity in the pipeline.
[$sel:next:DeviceRegistryEnrichActivity'] :: DeviceRegistryEnrichActivity -> Maybe Text

-- | The name of the <tt>deviceRegistryEnrich</tt> activity.
[$sel:name:DeviceRegistryEnrichActivity'] :: DeviceRegistryEnrichActivity -> Text

-- | The name of the attribute that is added to the message.
[$sel:attribute:DeviceRegistryEnrichActivity'] :: DeviceRegistryEnrichActivity -> Text

-- | The name of the IoT device whose registry information is added to the
--   message.
[$sel:thingName:DeviceRegistryEnrichActivity'] :: DeviceRegistryEnrichActivity -> Text

-- | The ARN of the role that allows access to the device's registry
--   information.
[$sel:roleArn:DeviceRegistryEnrichActivity'] :: DeviceRegistryEnrichActivity -> Text

-- | Create a value of <a>DeviceRegistryEnrichActivity</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_name</a> - The name of the
--   <tt>deviceRegistryEnrich</tt> activity.
--   
--   <a>$sel:attribute:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_attribute</a> - The name of the
--   attribute that is added to the message.
--   
--   <a>$sel:thingName:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_thingName</a> - The name of the IoT
--   device whose registry information is added to the message.
--   
--   <a>$sel:roleArn:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_roleArn</a> - The ARN of the role that
--   allows access to the device's registry information.
newDeviceRegistryEnrichActivity :: Text -> Text -> Text -> Text -> DeviceRegistryEnrichActivity

-- | The next activity in the pipeline.
deviceRegistryEnrichActivity_next :: Lens' DeviceRegistryEnrichActivity (Maybe Text)

-- | The name of the <tt>deviceRegistryEnrich</tt> activity.
deviceRegistryEnrichActivity_name :: Lens' DeviceRegistryEnrichActivity Text

-- | The name of the attribute that is added to the message.
deviceRegistryEnrichActivity_attribute :: Lens' DeviceRegistryEnrichActivity Text

-- | The name of the IoT device whose registry information is added to the
--   message.
deviceRegistryEnrichActivity_thingName :: Lens' DeviceRegistryEnrichActivity Text

-- | The ARN of the role that allows access to the device's registry
--   information.
deviceRegistryEnrichActivity_roleArn :: Lens' DeviceRegistryEnrichActivity Text

-- | An activity that adds information from the IoT Device Shadow service
--   to a message.
--   
--   <i>See:</i> <a>newDeviceShadowEnrichActivity</a> smart constructor.
data DeviceShadowEnrichActivity
DeviceShadowEnrichActivity' :: Maybe Text -> Text -> Text -> Text -> Text -> DeviceShadowEnrichActivity

-- | The next activity in the pipeline.
[$sel:next:DeviceShadowEnrichActivity'] :: DeviceShadowEnrichActivity -> Maybe Text

-- | The name of the <tt>deviceShadowEnrich</tt> activity.
[$sel:name:DeviceShadowEnrichActivity'] :: DeviceShadowEnrichActivity -> Text

-- | The name of the attribute that is added to the message.
[$sel:attribute:DeviceShadowEnrichActivity'] :: DeviceShadowEnrichActivity -> Text

-- | The name of the IoT device whose shadow information is added to the
--   message.
[$sel:thingName:DeviceShadowEnrichActivity'] :: DeviceShadowEnrichActivity -> Text

-- | The ARN of the role that allows access to the device's shadow.
[$sel:roleArn:DeviceShadowEnrichActivity'] :: DeviceShadowEnrichActivity -> Text

-- | Create a value of <a>DeviceShadowEnrichActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_name</a> - The name of the
--   <tt>deviceShadowEnrich</tt> activity.
--   
--   <a>$sel:attribute:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_attribute</a> - The name of the
--   attribute that is added to the message.
--   
--   <a>$sel:thingName:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_thingName</a> - The name of the IoT
--   device whose shadow information is added to the message.
--   
--   <a>$sel:roleArn:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_roleArn</a> - The ARN of the role that
--   allows access to the device's shadow.
newDeviceShadowEnrichActivity :: Text -> Text -> Text -> Text -> DeviceShadowEnrichActivity

-- | The next activity in the pipeline.
deviceShadowEnrichActivity_next :: Lens' DeviceShadowEnrichActivity (Maybe Text)

-- | The name of the <tt>deviceShadowEnrich</tt> activity.
deviceShadowEnrichActivity_name :: Lens' DeviceShadowEnrichActivity Text

-- | The name of the attribute that is added to the message.
deviceShadowEnrichActivity_attribute :: Lens' DeviceShadowEnrichActivity Text

-- | The name of the IoT device whose shadow information is added to the
--   message.
deviceShadowEnrichActivity_thingName :: Lens' DeviceShadowEnrichActivity Text

-- | The ARN of the role that allows access to the device's shadow.
deviceShadowEnrichActivity_roleArn :: Lens' DeviceShadowEnrichActivity Text

-- | The estimated size of the resource.
--   
--   <i>See:</i> <a>newEstimatedResourceSize</a> smart constructor.
data EstimatedResourceSize
EstimatedResourceSize' :: Maybe POSIX -> Maybe Double -> EstimatedResourceSize

-- | The time when the estimate of the size of the resource was made.
[$sel:estimatedOn:EstimatedResourceSize'] :: EstimatedResourceSize -> Maybe POSIX

-- | The estimated size of the resource, in bytes.
[$sel:estimatedSizeInBytes:EstimatedResourceSize'] :: EstimatedResourceSize -> Maybe Double

-- | Create a value of <a>EstimatedResourceSize</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:estimatedOn:EstimatedResourceSize'</a>,
--   <a>estimatedResourceSize_estimatedOn</a> - The time when the estimate
--   of the size of the resource was made.
--   
--   <a>$sel:estimatedSizeInBytes:EstimatedResourceSize'</a>,
--   <a>estimatedResourceSize_estimatedSizeInBytes</a> - The estimated size
--   of the resource, in bytes.
newEstimatedResourceSize :: EstimatedResourceSize

-- | The time when the estimate of the size of the resource was made.
estimatedResourceSize_estimatedOn :: Lens' EstimatedResourceSize (Maybe UTCTime)

-- | The estimated size of the resource, in bytes.
estimatedResourceSize_estimatedSizeInBytes :: Lens' EstimatedResourceSize (Maybe Double)

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
--   
--   <i>See:</i> <a>newFileFormatConfiguration</a> smart constructor.
data FileFormatConfiguration
FileFormatConfiguration' :: Maybe JsonConfiguration -> Maybe ParquetConfiguration -> FileFormatConfiguration

-- | Contains the configuration information of the JSON format.
[$sel:jsonConfiguration:FileFormatConfiguration'] :: FileFormatConfiguration -> Maybe JsonConfiguration

-- | Contains the configuration information of the Parquet format.
[$sel:parquetConfiguration:FileFormatConfiguration'] :: FileFormatConfiguration -> Maybe ParquetConfiguration

-- | Create a value of <a>FileFormatConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonConfiguration:FileFormatConfiguration'</a>,
--   <a>fileFormatConfiguration_jsonConfiguration</a> - Contains the
--   configuration information of the JSON format.
--   
--   <a>$sel:parquetConfiguration:FileFormatConfiguration'</a>,
--   <a>fileFormatConfiguration_parquetConfiguration</a> - Contains the
--   configuration information of the Parquet format.
newFileFormatConfiguration :: FileFormatConfiguration

-- | Contains the configuration information of the JSON format.
fileFormatConfiguration_jsonConfiguration :: Lens' FileFormatConfiguration (Maybe JsonConfiguration)

-- | Contains the configuration information of the Parquet format.
fileFormatConfiguration_parquetConfiguration :: Lens' FileFormatConfiguration (Maybe ParquetConfiguration)

-- | An activity that filters a message based on its attributes.
--   
--   <i>See:</i> <a>newFilterActivity</a> smart constructor.
data FilterActivity
FilterActivity' :: Maybe Text -> Text -> Text -> FilterActivity

-- | The next activity in the pipeline.
[$sel:next:FilterActivity'] :: FilterActivity -> Maybe Text

-- | The name of the filter activity.
[$sel:name:FilterActivity'] :: FilterActivity -> Text

-- | An expression that looks like a SQL WHERE clause that must return a
--   Boolean value. Messages that satisfy the condition are passed to the
--   next activity.
[$sel:filter':FilterActivity'] :: FilterActivity -> Text

-- | Create a value of <a>FilterActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:FilterActivity'</a>, <a>filterActivity_next</a> - The
--   next activity in the pipeline.
--   
--   <a>$sel:name:FilterActivity'</a>, <a>filterActivity_name</a> - The
--   name of the filter activity.
--   
--   <a>$sel:filter':FilterActivity'</a>, <a>filterActivity_filter</a> - An
--   expression that looks like a SQL WHERE clause that must return a
--   Boolean value. Messages that satisfy the condition are passed to the
--   next activity.
newFilterActivity :: Text -> Text -> FilterActivity

-- | The next activity in the pipeline.
filterActivity_next :: Lens' FilterActivity (Maybe Text)

-- | The name of the filter activity.
filterActivity_name :: Lens' FilterActivity Text

-- | An expression that looks like a SQL WHERE clause that must return a
--   Boolean value. Messages that satisfy the condition are passed to the
--   next activity.
filterActivity_filter :: Lens' FilterActivity Text

-- | Configuration information for coordination with Glue, a fully managed
--   extract, transform and load (ETL) service.
--   
--   <i>See:</i> <a>newGlueConfiguration</a> smart constructor.
data GlueConfiguration
GlueConfiguration' :: Text -> Text -> GlueConfiguration

-- | The name of the table in your Glue Data Catalog that is used to
--   perform the ETL operations. An Glue Data Catalog table contains
--   partitioned data and descriptions of data sources and targets.
[$sel:tableName:GlueConfiguration'] :: GlueConfiguration -> Text

-- | The name of the database in your Glue Data Catalog in which the table
--   is located. An Glue Data Catalog database contains metadata tables.
[$sel:databaseName:GlueConfiguration'] :: GlueConfiguration -> Text

-- | Create a value of <a>GlueConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableName:GlueConfiguration'</a>,
--   <a>glueConfiguration_tableName</a> - The name of the table in your
--   Glue Data Catalog that is used to perform the ETL operations. An Glue
--   Data Catalog table contains partitioned data and descriptions of data
--   sources and targets.
--   
--   <a>$sel:databaseName:GlueConfiguration'</a>,
--   <a>glueConfiguration_databaseName</a> - The name of the database in
--   your Glue Data Catalog in which the table is located. An Glue Data
--   Catalog database contains metadata tables.
newGlueConfiguration :: Text -> Text -> GlueConfiguration

-- | The name of the table in your Glue Data Catalog that is used to
--   perform the ETL operations. An Glue Data Catalog table contains
--   partitioned data and descriptions of data sources and targets.
glueConfiguration_tableName :: Lens' GlueConfiguration Text

-- | The name of the database in your Glue Data Catalog in which the table
--   is located. An Glue Data Catalog database contains metadata tables.
glueConfiguration_databaseName :: Lens' GlueConfiguration Text

-- | Configuration information for delivery of dataset contents to IoT
--   Events.
--   
--   <i>See:</i> <a>newIotEventsDestinationConfiguration</a> smart
--   constructor.
data IotEventsDestinationConfiguration
IotEventsDestinationConfiguration' :: Text -> Text -> IotEventsDestinationConfiguration

-- | The name of the IoT Events input to which dataset contents are
--   delivered.
[$sel:inputName:IotEventsDestinationConfiguration'] :: IotEventsDestinationConfiguration -> Text

-- | The ARN of the role that grants IoT Analytics permission to deliver
--   dataset contents to an IoT Events input.
[$sel:roleArn:IotEventsDestinationConfiguration'] :: IotEventsDestinationConfiguration -> Text

-- | Create a value of <a>IotEventsDestinationConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputName:IotEventsDestinationConfiguration'</a>,
--   <a>iotEventsDestinationConfiguration_inputName</a> - The name of the
--   IoT Events input to which dataset contents are delivered.
--   
--   <a>$sel:roleArn:IotEventsDestinationConfiguration'</a>,
--   <a>iotEventsDestinationConfiguration_roleArn</a> - The ARN of the role
--   that grants IoT Analytics permission to deliver dataset contents to an
--   IoT Events input.
newIotEventsDestinationConfiguration :: Text -> Text -> IotEventsDestinationConfiguration

-- | The name of the IoT Events input to which dataset contents are
--   delivered.
iotEventsDestinationConfiguration_inputName :: Lens' IotEventsDestinationConfiguration Text

-- | The ARN of the role that grants IoT Analytics permission to deliver
--   dataset contents to an IoT Events input.
iotEventsDestinationConfiguration_roleArn :: Lens' IotEventsDestinationConfiguration Text

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage. You can't change the choice of Amazon S3 storage after
--   your data store is created.
--   
--   <i>See:</i> <a>newIotSiteWiseCustomerManagedDatastoreS3Storage</a>
--   smart constructor.
data IotSiteWiseCustomerManagedDatastoreS3Storage
IotSiteWiseCustomerManagedDatastoreS3Storage' :: Maybe Text -> Text -> IotSiteWiseCustomerManagedDatastoreS3Storage

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
[$sel:keyPrefix:IotSiteWiseCustomerManagedDatastoreS3Storage'] :: IotSiteWiseCustomerManagedDatastoreS3Storage -> Maybe Text

-- | The name of the Amazon S3 bucket where your data is stored.
[$sel:bucket:IotSiteWiseCustomerManagedDatastoreS3Storage'] :: IotSiteWiseCustomerManagedDatastoreS3Storage -> Text

-- | Create a value of <a>IotSiteWiseCustomerManagedDatastoreS3Storage</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPrefix:IotSiteWiseCustomerManagedDatastoreS3Storage'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3Storage_keyPrefix</a> -
--   (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
--   
--   <a>$sel:bucket:IotSiteWiseCustomerManagedDatastoreS3Storage'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3Storage_bucket</a> - The name
--   of the Amazon S3 bucket where your data is stored.
newIotSiteWiseCustomerManagedDatastoreS3Storage :: Text -> IotSiteWiseCustomerManagedDatastoreS3Storage

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
iotSiteWiseCustomerManagedDatastoreS3Storage_keyPrefix :: Lens' IotSiteWiseCustomerManagedDatastoreS3Storage (Maybe Text)

-- | The name of the Amazon S3 bucket where your data is stored.
iotSiteWiseCustomerManagedDatastoreS3Storage_bucket :: Lens' IotSiteWiseCustomerManagedDatastoreS3Storage Text

-- | Contains information about the data store that you manage, which
--   stores data used by IoT SiteWise.
--   
--   <i>See:</i>
--   <a>newIotSiteWiseCustomerManagedDatastoreS3StorageSummary</a> smart
--   constructor.
data IotSiteWiseCustomerManagedDatastoreS3StorageSummary
IotSiteWiseCustomerManagedDatastoreS3StorageSummary' :: Maybe Text -> Maybe Text -> IotSiteWiseCustomerManagedDatastoreS3StorageSummary

-- | The name of the Amazon S3 bucket where your data is stored.
[$sel:bucket:IotSiteWiseCustomerManagedDatastoreS3StorageSummary'] :: IotSiteWiseCustomerManagedDatastoreS3StorageSummary -> Maybe Text

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
[$sel:keyPrefix:IotSiteWiseCustomerManagedDatastoreS3StorageSummary'] :: IotSiteWiseCustomerManagedDatastoreS3StorageSummary -> Maybe Text

-- | Create a value of
--   <a>IotSiteWiseCustomerManagedDatastoreS3StorageSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:bucket:IotSiteWiseCustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3StorageSummary_bucket</a> -
--   The name of the Amazon S3 bucket where your data is stored.
--   
--   
--   <a>$sel:keyPrefix:IotSiteWiseCustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3StorageSummary_keyPrefix</a> -
--   (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
newIotSiteWiseCustomerManagedDatastoreS3StorageSummary :: IotSiteWiseCustomerManagedDatastoreS3StorageSummary

-- | The name of the Amazon S3 bucket where your data is stored.
iotSiteWiseCustomerManagedDatastoreS3StorageSummary_bucket :: Lens' IotSiteWiseCustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
iotSiteWiseCustomerManagedDatastoreS3StorageSummary_keyPrefix :: Lens' IotSiteWiseCustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | Contains the configuration information of the JSON format.
--   
--   <i>See:</i> <a>newJsonConfiguration</a> smart constructor.
data JsonConfiguration
JsonConfiguration' :: JsonConfiguration

-- | Create a value of <a>JsonConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newJsonConfiguration :: JsonConfiguration

-- | An activity that runs a Lambda function to modify the message.
--   
--   <i>See:</i> <a>newLambdaActivity</a> smart constructor.
data LambdaActivity
LambdaActivity' :: Maybe Text -> Text -> Text -> Natural -> LambdaActivity

-- | The next activity in the pipeline.
[$sel:next:LambdaActivity'] :: LambdaActivity -> Maybe Text

-- | The name of the lambda activity.
[$sel:name:LambdaActivity'] :: LambdaActivity -> Text

-- | The name of the Lambda function that is run on the message.
[$sel:lambdaName:LambdaActivity'] :: LambdaActivity -> Text

-- | The number of messages passed to the Lambda function for processing.
--   
--   The Lambda function must be able to process all of these messages
--   within five minutes, which is the maximum timeout duration for Lambda
--   functions.
[$sel:batchSize:LambdaActivity'] :: LambdaActivity -> Natural

-- | Create a value of <a>LambdaActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:LambdaActivity'</a>, <a>lambdaActivity_next</a> - The
--   next activity in the pipeline.
--   
--   <a>$sel:name:LambdaActivity'</a>, <a>lambdaActivity_name</a> - The
--   name of the lambda activity.
--   
--   <a>$sel:lambdaName:LambdaActivity'</a>,
--   <a>lambdaActivity_lambdaName</a> - The name of the Lambda function
--   that is run on the message.
--   
--   <a>$sel:batchSize:LambdaActivity'</a>, <a>lambdaActivity_batchSize</a>
--   - The number of messages passed to the Lambda function for processing.
--   
--   The Lambda function must be able to process all of these messages
--   within five minutes, which is the maximum timeout duration for Lambda
--   functions.
newLambdaActivity :: Text -> Text -> Natural -> LambdaActivity

-- | The next activity in the pipeline.
lambdaActivity_next :: Lens' LambdaActivity (Maybe Text)

-- | The name of the lambda activity.
lambdaActivity_name :: Lens' LambdaActivity Text

-- | The name of the Lambda function that is run on the message.
lambdaActivity_lambdaName :: Lens' LambdaActivity Text

-- | The number of messages passed to the Lambda function for processing.
--   
--   The Lambda function must be able to process all of these messages
--   within five minutes, which is the maximum timeout duration for Lambda
--   functions.
lambdaActivity_batchSize :: Lens' LambdaActivity Natural

-- | A structure that contains the name and configuration information of a
--   late data rule.
--   
--   <i>See:</i> <a>newLateDataRule</a> smart constructor.
data LateDataRule
LateDataRule' :: Maybe Text -> LateDataRuleConfiguration -> LateDataRule

-- | The name of the late data rule.
[$sel:ruleName:LateDataRule'] :: LateDataRule -> Maybe Text

-- | The information needed to configure the late data rule.
[$sel:ruleConfiguration:LateDataRule'] :: LateDataRule -> LateDataRuleConfiguration

-- | Create a value of <a>LateDataRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleName:LateDataRule'</a>, <a>lateDataRule_ruleName</a> - The
--   name of the late data rule.
--   
--   <a>$sel:ruleConfiguration:LateDataRule'</a>,
--   <a>lateDataRule_ruleConfiguration</a> - The information needed to
--   configure the late data rule.
newLateDataRule :: LateDataRuleConfiguration -> LateDataRule

-- | The name of the late data rule.
lateDataRule_ruleName :: Lens' LateDataRule (Maybe Text)

-- | The information needed to configure the late data rule.
lateDataRule_ruleConfiguration :: Lens' LateDataRule LateDataRuleConfiguration

-- | The information needed to configure a delta time session window.
--   
--   <i>See:</i> <a>newLateDataRuleConfiguration</a> smart constructor.
data LateDataRuleConfiguration
LateDataRuleConfiguration' :: Maybe DeltaTimeSessionWindowConfiguration -> LateDataRuleConfiguration

-- | The information needed to configure a delta time session window.
[$sel:deltaTimeSessionWindowConfiguration:LateDataRuleConfiguration'] :: LateDataRuleConfiguration -> Maybe DeltaTimeSessionWindowConfiguration

-- | Create a value of <a>LateDataRuleConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:deltaTimeSessionWindowConfiguration:LateDataRuleConfiguration'</a>,
--   <a>lateDataRuleConfiguration_deltaTimeSessionWindowConfiguration</a> -
--   The information needed to configure a delta time session window.
newLateDataRuleConfiguration :: LateDataRuleConfiguration

-- | The information needed to configure a delta time session window.
lateDataRuleConfiguration_deltaTimeSessionWindowConfiguration :: Lens' LateDataRuleConfiguration (Maybe DeltaTimeSessionWindowConfiguration)

-- | Information about logging options.
--   
--   <i>See:</i> <a>newLoggingOptions</a> smart constructor.
data LoggingOptions
LoggingOptions' :: Text -> LoggingLevel -> Bool -> LoggingOptions

-- | The ARN of the role that grants permission to IoT Analytics to perform
--   logging.
[$sel:roleArn:LoggingOptions'] :: LoggingOptions -> Text

-- | The logging level. Currently, only ERROR is supported.
[$sel:level:LoggingOptions'] :: LoggingOptions -> LoggingLevel

-- | If true, logging is enabled for IoT Analytics.
[$sel:enabled:LoggingOptions'] :: LoggingOptions -> Bool

-- | Create a value of <a>LoggingOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:LoggingOptions'</a>, <a>loggingOptions_roleArn</a> -
--   The ARN of the role that grants permission to IoT Analytics to perform
--   logging.
--   
--   <a>$sel:level:LoggingOptions'</a>, <a>loggingOptions_level</a> - The
--   logging level. Currently, only ERROR is supported.
--   
--   <a>$sel:enabled:LoggingOptions'</a>, <a>loggingOptions_enabled</a> -
--   If true, logging is enabled for IoT Analytics.
newLoggingOptions :: Text -> LoggingLevel -> Bool -> LoggingOptions

-- | The ARN of the role that grants permission to IoT Analytics to perform
--   logging.
loggingOptions_roleArn :: Lens' LoggingOptions Text

-- | The logging level. Currently, only ERROR is supported.
loggingOptions_level :: Lens' LoggingOptions LoggingLevel

-- | If true, logging is enabled for IoT Analytics.
loggingOptions_enabled :: Lens' LoggingOptions Bool

-- | An activity that computes an arithmetic expression using the message's
--   attributes.
--   
--   <i>See:</i> <a>newMathActivity</a> smart constructor.
data MathActivity
MathActivity' :: Maybe Text -> Text -> Text -> Text -> MathActivity

-- | The next activity in the pipeline.
[$sel:next:MathActivity'] :: MathActivity -> Maybe Text

-- | The name of the math activity.
[$sel:name:MathActivity'] :: MathActivity -> Text

-- | The name of the attribute that contains the result of the math
--   operation.
[$sel:attribute:MathActivity'] :: MathActivity -> Text

-- | An expression that uses one or more existing attributes and must
--   return an integer value.
[$sel:math:MathActivity'] :: MathActivity -> Text

-- | Create a value of <a>MathActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:MathActivity'</a>, <a>mathActivity_next</a> - The next
--   activity in the pipeline.
--   
--   <a>$sel:name:MathActivity'</a>, <a>mathActivity_name</a> - The name of
--   the math activity.
--   
--   <a>$sel:attribute:MathActivity'</a>, <a>mathActivity_attribute</a> -
--   The name of the attribute that contains the result of the math
--   operation.
--   
--   <a>$sel:math:MathActivity'</a>, <a>mathActivity_math</a> - An
--   expression that uses one or more existing attributes and must return
--   an integer value.
newMathActivity :: Text -> Text -> Text -> MathActivity

-- | The next activity in the pipeline.
mathActivity_next :: Lens' MathActivity (Maybe Text)

-- | The name of the math activity.
mathActivity_name :: Lens' MathActivity Text

-- | The name of the attribute that contains the result of the math
--   operation.
mathActivity_attribute :: Lens' MathActivity Text

-- | An expression that uses one or more existing attributes and must
--   return an integer value.
mathActivity_math :: Lens' MathActivity Text

-- | Information about a message.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Text -> Base64 -> Message

-- | The ID you want to assign to the message. Each <tt>messageId</tt> must
--   be unique within each batch sent.
[$sel:messageId:Message'] :: Message -> Text

-- | The payload of the message. This can be a JSON string or a
--   base64-encoded string representing binary data, in which case you must
--   decode it by means of a pipeline activity.
[$sel:payload:Message'] :: Message -> Base64

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageId:Message'</a>, <a>message_messageId</a> - The ID you
--   want to assign to the message. Each <tt>messageId</tt> must be unique
--   within each batch sent.
--   
--   <a>$sel:payload:Message'</a>, <a>message_payload</a> - The payload of
--   the message. This can be a JSON string or a base64-encoded string
--   representing binary data, in which case you must decode it by means of
--   a pipeline activity.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newMessage :: Text -> ByteString -> Message

-- | The ID you want to assign to the message. Each <tt>messageId</tt> must
--   be unique within each batch sent.
message_messageId :: Lens' Message Text

-- | The payload of the message. This can be a JSON string or a
--   base64-encoded string representing binary data, in which case you must
--   decode it by means of a pipeline activity.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
message_payload :: Lens' Message ByteString

-- | The value of the variable as a structure that specifies an output file
--   URI.
--   
--   <i>See:</i> <a>newOutputFileUriValue</a> smart constructor.
data OutputFileUriValue
OutputFileUriValue' :: Text -> OutputFileUriValue

-- | The URI of the location where dataset contents are stored, usually the
--   URI of a file in an S3 bucket.
[$sel:fileName:OutputFileUriValue'] :: OutputFileUriValue -> Text

-- | Create a value of <a>OutputFileUriValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileName:OutputFileUriValue'</a>,
--   <a>outputFileUriValue_fileName</a> - The URI of the location where
--   dataset contents are stored, usually the URI of a file in an S3
--   bucket.
newOutputFileUriValue :: Text -> OutputFileUriValue

-- | The URI of the location where dataset contents are stored, usually the
--   URI of a file in an S3 bucket.
outputFileUriValue_fileName :: Lens' OutputFileUriValue Text

-- | Contains the configuration information of the Parquet format.
--   
--   <i>See:</i> <a>newParquetConfiguration</a> smart constructor.
data ParquetConfiguration
ParquetConfiguration' :: Maybe SchemaDefinition -> ParquetConfiguration

-- | Information needed to define a schema.
[$sel:schemaDefinition:ParquetConfiguration'] :: ParquetConfiguration -> Maybe SchemaDefinition

-- | Create a value of <a>ParquetConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaDefinition:ParquetConfiguration'</a>,
--   <a>parquetConfiguration_schemaDefinition</a> - Information needed to
--   define a schema.
newParquetConfiguration :: ParquetConfiguration

-- | Information needed to define a schema.
parquetConfiguration_schemaDefinition :: Lens' ParquetConfiguration (Maybe SchemaDefinition)

-- | A partition dimension defined by an attribute.
--   
--   <i>See:</i> <a>newPartition</a> smart constructor.
data Partition
Partition' :: Text -> Partition

-- | The name of the attribute that defines a partition dimension.
[$sel:attributeName:Partition'] :: Partition -> Text

-- | Create a value of <a>Partition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeName:Partition'</a>, <a>partition_attributeName</a> -
--   The name of the attribute that defines a partition dimension.
newPartition :: Text -> Partition

-- | The name of the attribute that defines a partition dimension.
partition_attributeName :: Lens' Partition Text

-- | Contains information about a pipeline.
--   
--   <i>See:</i> <a>newPipeline</a> smart constructor.
data Pipeline
Pipeline' :: Maybe POSIX -> Maybe Text -> Maybe (NonEmpty PipelineActivity) -> Maybe Text -> Maybe [ReprocessingSummary] -> Maybe POSIX -> Pipeline

-- | When the pipeline was created.
[$sel:creationTime:Pipeline'] :: Pipeline -> Maybe POSIX

-- | The ARN of the pipeline.
[$sel:arn:Pipeline'] :: Pipeline -> Maybe Text

-- | The activities that perform transformations on the messages.
[$sel:activities:Pipeline'] :: Pipeline -> Maybe (NonEmpty PipelineActivity)

-- | The name of the pipeline.
[$sel:name:Pipeline'] :: Pipeline -> Maybe Text

-- | A summary of information about the pipeline reprocessing.
[$sel:reprocessingSummaries:Pipeline'] :: Pipeline -> Maybe [ReprocessingSummary]

-- | The last time the pipeline was updated.
[$sel:lastUpdateTime:Pipeline'] :: Pipeline -> Maybe POSIX

-- | Create a value of <a>Pipeline</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Pipeline'</a>, <a>pipeline_creationTime</a> -
--   When the pipeline was created.
--   
--   <a>$sel:arn:Pipeline'</a>, <a>pipeline_arn</a> - The ARN of the
--   pipeline.
--   
--   <a>$sel:activities:Pipeline'</a>, <a>pipeline_activities</a> - The
--   activities that perform transformations on the messages.
--   
--   <a>$sel:name:Pipeline'</a>, <a>pipeline_name</a> - The name of the
--   pipeline.
--   
--   <a>$sel:reprocessingSummaries:Pipeline'</a>,
--   <a>pipeline_reprocessingSummaries</a> - A summary of information about
--   the pipeline reprocessing.
--   
--   <a>$sel:lastUpdateTime:Pipeline'</a>, <a>pipeline_lastUpdateTime</a> -
--   The last time the pipeline was updated.
newPipeline :: Pipeline

-- | When the pipeline was created.
pipeline_creationTime :: Lens' Pipeline (Maybe UTCTime)

-- | The ARN of the pipeline.
pipeline_arn :: Lens' Pipeline (Maybe Text)

-- | The activities that perform transformations on the messages.
pipeline_activities :: Lens' Pipeline (Maybe (NonEmpty PipelineActivity))

-- | The name of the pipeline.
pipeline_name :: Lens' Pipeline (Maybe Text)

-- | A summary of information about the pipeline reprocessing.
pipeline_reprocessingSummaries :: Lens' Pipeline (Maybe [ReprocessingSummary])

-- | The last time the pipeline was updated.
pipeline_lastUpdateTime :: Lens' Pipeline (Maybe UTCTime)

-- | An activity that performs a transformation on a message.
--   
--   <i>See:</i> <a>newPipelineActivity</a> smart constructor.
data PipelineActivity
PipelineActivity' :: Maybe SelectAttributesActivity -> Maybe ChannelActivity -> Maybe AddAttributesActivity -> Maybe DeviceRegistryEnrichActivity -> Maybe RemoveAttributesActivity -> Maybe LambdaActivity -> Maybe DatastoreActivity -> Maybe DeviceShadowEnrichActivity -> Maybe FilterActivity -> Maybe MathActivity -> PipelineActivity

-- | Used to create a new message using only the specified attributes from
--   the original message.
[$sel:selectAttributes:PipelineActivity'] :: PipelineActivity -> Maybe SelectAttributesActivity

-- | Determines the source of the messages to be processed.
[$sel:channel:PipelineActivity'] :: PipelineActivity -> Maybe ChannelActivity

-- | Adds other attributes based on existing attributes in the message.
[$sel:addAttributes:PipelineActivity'] :: PipelineActivity -> Maybe AddAttributesActivity

-- | Adds data from the IoT device registry to your message.
[$sel:deviceRegistryEnrich:PipelineActivity'] :: PipelineActivity -> Maybe DeviceRegistryEnrichActivity

-- | Removes attributes from a message.
[$sel:removeAttributes:PipelineActivity'] :: PipelineActivity -> Maybe RemoveAttributesActivity

-- | Runs a Lambda function to modify the message.
[$sel:lambda:PipelineActivity'] :: PipelineActivity -> Maybe LambdaActivity

-- | Specifies where to store the processed message data.
[$sel:datastore:PipelineActivity'] :: PipelineActivity -> Maybe DatastoreActivity

-- | Adds information from the IoT Device Shadow service to a message.
[$sel:deviceShadowEnrich:PipelineActivity'] :: PipelineActivity -> Maybe DeviceShadowEnrichActivity

-- | Filters a message based on its attributes.
[$sel:filter':PipelineActivity'] :: PipelineActivity -> Maybe FilterActivity

-- | Computes an arithmetic expression using the message's attributes and
--   adds it to the message.
[$sel:math:PipelineActivity'] :: PipelineActivity -> Maybe MathActivity

-- | Create a value of <a>PipelineActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectAttributes:PipelineActivity'</a>,
--   <a>pipelineActivity_selectAttributes</a> - Used to create a new
--   message using only the specified attributes from the original message.
--   
--   <a>$sel:channel:PipelineActivity'</a>, <a>pipelineActivity_channel</a>
--   - Determines the source of the messages to be processed.
--   
--   <a>$sel:addAttributes:PipelineActivity'</a>,
--   <a>pipelineActivity_addAttributes</a> - Adds other attributes based on
--   existing attributes in the message.
--   
--   <a>$sel:deviceRegistryEnrich:PipelineActivity'</a>,
--   <a>pipelineActivity_deviceRegistryEnrich</a> - Adds data from the IoT
--   device registry to your message.
--   
--   <a>$sel:removeAttributes:PipelineActivity'</a>,
--   <a>pipelineActivity_removeAttributes</a> - Removes attributes from a
--   message.
--   
--   <a>$sel:lambda:PipelineActivity'</a>, <a>pipelineActivity_lambda</a> -
--   Runs a Lambda function to modify the message.
--   
--   <a>$sel:datastore:PipelineActivity'</a>,
--   <a>pipelineActivity_datastore</a> - Specifies where to store the
--   processed message data.
--   
--   <a>$sel:deviceShadowEnrich:PipelineActivity'</a>,
--   <a>pipelineActivity_deviceShadowEnrich</a> - Adds information from the
--   IoT Device Shadow service to a message.
--   
--   <a>$sel:filter':PipelineActivity'</a>, <a>pipelineActivity_filter</a>
--   - Filters a message based on its attributes.
--   
--   <a>$sel:math:PipelineActivity'</a>, <a>pipelineActivity_math</a> -
--   Computes an arithmetic expression using the message's attributes and
--   adds it to the message.
newPipelineActivity :: PipelineActivity

-- | Used to create a new message using only the specified attributes from
--   the original message.
pipelineActivity_selectAttributes :: Lens' PipelineActivity (Maybe SelectAttributesActivity)

-- | Determines the source of the messages to be processed.
pipelineActivity_channel :: Lens' PipelineActivity (Maybe ChannelActivity)

-- | Adds other attributes based on existing attributes in the message.
pipelineActivity_addAttributes :: Lens' PipelineActivity (Maybe AddAttributesActivity)

-- | Adds data from the IoT device registry to your message.
pipelineActivity_deviceRegistryEnrich :: Lens' PipelineActivity (Maybe DeviceRegistryEnrichActivity)

-- | Removes attributes from a message.
pipelineActivity_removeAttributes :: Lens' PipelineActivity (Maybe RemoveAttributesActivity)

-- | Runs a Lambda function to modify the message.
pipelineActivity_lambda :: Lens' PipelineActivity (Maybe LambdaActivity)

-- | Specifies where to store the processed message data.
pipelineActivity_datastore :: Lens' PipelineActivity (Maybe DatastoreActivity)

-- | Adds information from the IoT Device Shadow service to a message.
pipelineActivity_deviceShadowEnrich :: Lens' PipelineActivity (Maybe DeviceShadowEnrichActivity)

-- | Filters a message based on its attributes.
pipelineActivity_filter :: Lens' PipelineActivity (Maybe FilterActivity)

-- | Computes an arithmetic expression using the message's attributes and
--   adds it to the message.
pipelineActivity_math :: Lens' PipelineActivity (Maybe MathActivity)

-- | A summary of information about a pipeline.
--   
--   <i>See:</i> <a>newPipelineSummary</a> smart constructor.
data PipelineSummary
PipelineSummary' :: Maybe POSIX -> Maybe Text -> Maybe [ReprocessingSummary] -> Maybe POSIX -> PipelineSummary

-- | When the pipeline was created.
[$sel:creationTime:PipelineSummary'] :: PipelineSummary -> Maybe POSIX

-- | The name of the pipeline.
[$sel:pipelineName:PipelineSummary'] :: PipelineSummary -> Maybe Text

-- | A summary of information about the pipeline reprocessing.
[$sel:reprocessingSummaries:PipelineSummary'] :: PipelineSummary -> Maybe [ReprocessingSummary]

-- | When the pipeline was last updated.
[$sel:lastUpdateTime:PipelineSummary'] :: PipelineSummary -> Maybe POSIX

-- | Create a value of <a>PipelineSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:PipelineSummary'</a>,
--   <a>pipelineSummary_creationTime</a> - When the pipeline was created.
--   
--   <a>$sel:pipelineName:PipelineSummary'</a>,
--   <a>pipelineSummary_pipelineName</a> - The name of the pipeline.
--   
--   <a>$sel:reprocessingSummaries:PipelineSummary'</a>,
--   <a>pipelineSummary_reprocessingSummaries</a> - A summary of
--   information about the pipeline reprocessing.
--   
--   <a>$sel:lastUpdateTime:PipelineSummary'</a>,
--   <a>pipelineSummary_lastUpdateTime</a> - When the pipeline was last
--   updated.
newPipelineSummary :: PipelineSummary

-- | When the pipeline was created.
pipelineSummary_creationTime :: Lens' PipelineSummary (Maybe UTCTime)

-- | The name of the pipeline.
pipelineSummary_pipelineName :: Lens' PipelineSummary (Maybe Text)

-- | A summary of information about the pipeline reprocessing.
pipelineSummary_reprocessingSummaries :: Lens' PipelineSummary (Maybe [ReprocessingSummary])

-- | When the pipeline was last updated.
pipelineSummary_lastUpdateTime :: Lens' PipelineSummary (Maybe UTCTime)

-- | Information that is used to filter message data, to segregate it
--   according to the timeframe in which it arrives.
--   
--   <i>See:</i> <a>newQueryFilter</a> smart constructor.
data QueryFilter
QueryFilter' :: Maybe DeltaTime -> QueryFilter

-- | Used to limit data to that which has arrived since the last execution
--   of the action.
[$sel:deltaTime:QueryFilter'] :: QueryFilter -> Maybe DeltaTime

-- | Create a value of <a>QueryFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deltaTime:QueryFilter'</a>, <a>queryFilter_deltaTime</a> -
--   Used to limit data to that which has arrived since the last execution
--   of the action.
newQueryFilter :: QueryFilter

-- | Used to limit data to that which has arrived since the last execution
--   of the action.
queryFilter_deltaTime :: Lens' QueryFilter (Maybe DeltaTime)

-- | An activity that removes attributes from a message.
--   
--   <i>See:</i> <a>newRemoveAttributesActivity</a> smart constructor.
data RemoveAttributesActivity
RemoveAttributesActivity' :: Maybe Text -> Text -> NonEmpty Text -> RemoveAttributesActivity

-- | The next activity in the pipeline.
[$sel:next:RemoveAttributesActivity'] :: RemoveAttributesActivity -> Maybe Text

-- | The name of the <tt>removeAttributes</tt> activity.
[$sel:name:RemoveAttributesActivity'] :: RemoveAttributesActivity -> Text

-- | A list of 1-50 attributes to remove from the message.
[$sel:attributes:RemoveAttributesActivity'] :: RemoveAttributesActivity -> NonEmpty Text

-- | Create a value of <a>RemoveAttributesActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:RemoveAttributesActivity'</a>,
--   <a>removeAttributesActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:RemoveAttributesActivity'</a>,
--   <a>removeAttributesActivity_name</a> - The name of the
--   <tt>removeAttributes</tt> activity.
--   
--   <a>$sel:attributes:RemoveAttributesActivity'</a>,
--   <a>removeAttributesActivity_attributes</a> - A list of 1-50 attributes
--   to remove from the message.
newRemoveAttributesActivity :: Text -> NonEmpty Text -> RemoveAttributesActivity

-- | The next activity in the pipeline.
removeAttributesActivity_next :: Lens' RemoveAttributesActivity (Maybe Text)

-- | The name of the <tt>removeAttributes</tt> activity.
removeAttributesActivity_name :: Lens' RemoveAttributesActivity Text

-- | A list of 1-50 attributes to remove from the message.
removeAttributesActivity_attributes :: Lens' RemoveAttributesActivity (NonEmpty Text)

-- | Information about pipeline reprocessing.
--   
--   <i>See:</i> <a>newReprocessingSummary</a> smart constructor.
data ReprocessingSummary
ReprocessingSummary' :: Maybe POSIX -> Maybe ReprocessingStatus -> Maybe Text -> ReprocessingSummary

-- | The time the pipeline reprocessing was created.
[$sel:creationTime:ReprocessingSummary'] :: ReprocessingSummary -> Maybe POSIX

-- | The status of the pipeline reprocessing.
[$sel:status:ReprocessingSummary'] :: ReprocessingSummary -> Maybe ReprocessingStatus

-- | The <tt>reprocessingId</tt> returned by
--   <tt>StartPipelineReprocessing</tt>.
[$sel:id:ReprocessingSummary'] :: ReprocessingSummary -> Maybe Text

-- | Create a value of <a>ReprocessingSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ReprocessingSummary'</a>,
--   <a>reprocessingSummary_creationTime</a> - The time the pipeline
--   reprocessing was created.
--   
--   <a>$sel:status:ReprocessingSummary'</a>,
--   <a>reprocessingSummary_status</a> - The status of the pipeline
--   reprocessing.
--   
--   <a>$sel:id:ReprocessingSummary'</a>, <a>reprocessingSummary_id</a> -
--   The <tt>reprocessingId</tt> returned by
--   <tt>StartPipelineReprocessing</tt>.
newReprocessingSummary :: ReprocessingSummary

-- | The time the pipeline reprocessing was created.
reprocessingSummary_creationTime :: Lens' ReprocessingSummary (Maybe UTCTime)

-- | The status of the pipeline reprocessing.
reprocessingSummary_status :: Lens' ReprocessingSummary (Maybe ReprocessingStatus)

-- | The <tt>reprocessingId</tt> returned by
--   <tt>StartPipelineReprocessing</tt>.
reprocessingSummary_id :: Lens' ReprocessingSummary (Maybe Text)

-- | The configuration of the resource used to execute the
--   <tt>containerAction</tt>.
--   
--   <i>See:</i> <a>newResourceConfiguration</a> smart constructor.
data ResourceConfiguration
ResourceConfiguration' :: ComputeType -> Natural -> ResourceConfiguration

-- | The type of the compute resource used to execute the
--   <tt>containerAction</tt>. Possible values are: <tt>ACU_1</tt> (vCPU=4,
--   memory=16 GiB) or <tt>ACU_2</tt> (vCPU=8, memory=32 GiB).
[$sel:computeType:ResourceConfiguration'] :: ResourceConfiguration -> ComputeType

-- | The size, in GB, of the persistent storage available to the resource
--   instance used to execute the <tt>containerAction</tt> (min: 1, max:
--   50).
[$sel:volumeSizeInGB:ResourceConfiguration'] :: ResourceConfiguration -> Natural

-- | Create a value of <a>ResourceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeType:ResourceConfiguration'</a>,
--   <a>resourceConfiguration_computeType</a> - The type of the compute
--   resource used to execute the <tt>containerAction</tt>. Possible values
--   are: <tt>ACU_1</tt> (vCPU=4, memory=16 GiB) or <tt>ACU_2</tt> (vCPU=8,
--   memory=32 GiB).
--   
--   <a>$sel:volumeSizeInGB:ResourceConfiguration'</a>,
--   <a>resourceConfiguration_volumeSizeInGB</a> - The size, in GB, of the
--   persistent storage available to the resource instance used to execute
--   the <tt>containerAction</tt> (min: 1, max: 50).
newResourceConfiguration :: ComputeType -> Natural -> ResourceConfiguration

-- | The type of the compute resource used to execute the
--   <tt>containerAction</tt>. Possible values are: <tt>ACU_1</tt> (vCPU=4,
--   memory=16 GiB) or <tt>ACU_2</tt> (vCPU=8, memory=32 GiB).
resourceConfiguration_computeType :: Lens' ResourceConfiguration ComputeType

-- | The size, in GB, of the persistent storage available to the resource
--   instance used to execute the <tt>containerAction</tt> (min: 1, max:
--   50).
resourceConfiguration_volumeSizeInGB :: Lens' ResourceConfiguration Natural

-- | How long, in days, message data is kept.
--   
--   <i>See:</i> <a>newRetentionPeriod</a> smart constructor.
data RetentionPeriod
RetentionPeriod' :: Maybe Bool -> Maybe Natural -> RetentionPeriod

-- | If true, message data is kept indefinitely.
[$sel:unlimited:RetentionPeriod'] :: RetentionPeriod -> Maybe Bool

-- | The number of days that message data is kept. The <tt>unlimited</tt>
--   parameter must be false.
[$sel:numberOfDays:RetentionPeriod'] :: RetentionPeriod -> Maybe Natural

-- | Create a value of <a>RetentionPeriod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlimited:RetentionPeriod'</a>,
--   <a>retentionPeriod_unlimited</a> - If true, message data is kept
--   indefinitely.
--   
--   <a>$sel:numberOfDays:RetentionPeriod'</a>,
--   <a>retentionPeriod_numberOfDays</a> - The number of days that message
--   data is kept. The <tt>unlimited</tt> parameter must be false.
newRetentionPeriod :: RetentionPeriod

-- | If true, message data is kept indefinitely.
retentionPeriod_unlimited :: Lens' RetentionPeriod (Maybe Bool)

-- | The number of days that message data is kept. The <tt>unlimited</tt>
--   parameter must be false.
retentionPeriod_numberOfDays :: Lens' RetentionPeriod (Maybe Natural)

-- | Configuration information for delivery of dataset contents to Amazon
--   Simple Storage Service (Amazon S3).
--   
--   <i>See:</i> <a>newS3DestinationConfiguration</a> smart constructor.
data S3DestinationConfiguration
S3DestinationConfiguration' :: Maybe GlueConfiguration -> Text -> Text -> Text -> S3DestinationConfiguration

-- | Configuration information for coordination with Glue, a fully managed
--   extract, transform and load (ETL) service.
[$sel:glueConfiguration:S3DestinationConfiguration'] :: S3DestinationConfiguration -> Maybe GlueConfiguration

-- | The name of the S3 bucket to which dataset contents are delivered.
[$sel:bucket:S3DestinationConfiguration'] :: S3DestinationConfiguration -> Text

-- | The key of the dataset contents object in an S3 bucket. Each object
--   has a key that is a unique identifier. Each object has exactly one
--   key.
--   
--   You can create a unique key with the following options:
--   
--   <ul>
--   <li>Use <tt>!{iotanalytics:scheduleTime}</tt> to insert the time of a
--   scheduled SQL query run.</li>
--   <li>Use <tt>!{iotanalytics:versionId}</tt> to insert a unique hash
--   that identifies a dataset content.</li>
--   <li>Use <tt>!{iotanalytics:creationTime}</tt> to insert the creation
--   time of a dataset content.</li>
--   </ul>
--   
--   The following example creates a unique key for a CSV file:
--   <tt>dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv</tt>
--   
--   If you don't use <tt>!{iotanalytics:versionId}</tt> to specify the
--   key, you might get duplicate keys. For example, you might have two
--   dataset contents with the same <tt>scheduleTime</tt> but different
--   <tt>versionId</tt>s. This means that one dataset content overwrites
--   the other.
[$sel:key:S3DestinationConfiguration'] :: S3DestinationConfiguration -> Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 and Glue resources.
[$sel:roleArn:S3DestinationConfiguration'] :: S3DestinationConfiguration -> Text

-- | Create a value of <a>S3DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:glueConfiguration:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_glueConfiguration</a> - Configuration
--   information for coordination with Glue, a fully managed extract,
--   transform and load (ETL) service.
--   
--   <a>$sel:bucket:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_bucket</a> - The name of the S3 bucket
--   to which dataset contents are delivered.
--   
--   <a>$sel:key:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_key</a> - The key of the dataset
--   contents object in an S3 bucket. Each object has a key that is a
--   unique identifier. Each object has exactly one key.
--   
--   You can create a unique key with the following options:
--   
--   <ul>
--   <li>Use <tt>!{iotanalytics:scheduleTime}</tt> to insert the time of a
--   scheduled SQL query run.</li>
--   <li>Use <tt>!{iotanalytics:versionId}</tt> to insert a unique hash
--   that identifies a dataset content.</li>
--   <li>Use <tt>!{iotanalytics:creationTime}</tt> to insert the creation
--   time of a dataset content.</li>
--   </ul>
--   
--   The following example creates a unique key for a CSV file:
--   <tt>dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv</tt>
--   
--   If you don't use <tt>!{iotanalytics:versionId}</tt> to specify the
--   key, you might get duplicate keys. For example, you might have two
--   dataset contents with the same <tt>scheduleTime</tt> but different
--   <tt>versionId</tt>s. This means that one dataset content overwrites
--   the other.
--   
--   <a>$sel:roleArn:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_roleArn</a> - The ARN of the role that
--   grants IoT Analytics permission to interact with your Amazon S3 and
--   Glue resources.
newS3DestinationConfiguration :: Text -> Text -> Text -> S3DestinationConfiguration

-- | Configuration information for coordination with Glue, a fully managed
--   extract, transform and load (ETL) service.
s3DestinationConfiguration_glueConfiguration :: Lens' S3DestinationConfiguration (Maybe GlueConfiguration)

-- | The name of the S3 bucket to which dataset contents are delivered.
s3DestinationConfiguration_bucket :: Lens' S3DestinationConfiguration Text

-- | The key of the dataset contents object in an S3 bucket. Each object
--   has a key that is a unique identifier. Each object has exactly one
--   key.
--   
--   You can create a unique key with the following options:
--   
--   <ul>
--   <li>Use <tt>!{iotanalytics:scheduleTime}</tt> to insert the time of a
--   scheduled SQL query run.</li>
--   <li>Use <tt>!{iotanalytics:versionId}</tt> to insert a unique hash
--   that identifies a dataset content.</li>
--   <li>Use <tt>!{iotanalytics:creationTime}</tt> to insert the creation
--   time of a dataset content.</li>
--   </ul>
--   
--   The following example creates a unique key for a CSV file:
--   <tt>dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv</tt>
--   
--   If you don't use <tt>!{iotanalytics:versionId}</tt> to specify the
--   key, you might get duplicate keys. For example, you might have two
--   dataset contents with the same <tt>scheduleTime</tt> but different
--   <tt>versionId</tt>s. This means that one dataset content overwrites
--   the other.
s3DestinationConfiguration_key :: Lens' S3DestinationConfiguration Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 and Glue resources.
s3DestinationConfiguration_roleArn :: Lens' S3DestinationConfiguration Text

-- | The schedule for when to trigger an update.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe Text -> Schedule

-- | The expression that defines when to trigger an update. For more
--   information, see <a>Schedule Expressions for Rules</a> in the
--   <i>Amazon CloudWatch Events User Guide</i>.
[$sel:expression:Schedule'] :: Schedule -> Maybe Text

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expression:Schedule'</a>, <a>schedule_expression</a> - The
--   expression that defines when to trigger an update. For more
--   information, see <a>Schedule Expressions for Rules</a> in the
--   <i>Amazon CloudWatch Events User Guide</i>.
newSchedule :: Schedule

-- | The expression that defines when to trigger an update. For more
--   information, see <a>Schedule Expressions for Rules</a> in the
--   <i>Amazon CloudWatch Events User Guide</i>.
schedule_expression :: Lens' Schedule (Maybe Text)

-- | Information needed to define a schema.
--   
--   <i>See:</i> <a>newSchemaDefinition</a> smart constructor.
data SchemaDefinition
SchemaDefinition' :: Maybe [Column] -> SchemaDefinition

-- | Specifies one or more columns that store your data.
--   
--   Each schema can have up to 100 columns. Each column can have up to 100
--   nested types.
[$sel:columns:SchemaDefinition'] :: SchemaDefinition -> Maybe [Column]

-- | Create a value of <a>SchemaDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:columns:SchemaDefinition'</a>, <a>schemaDefinition_columns</a>
--   - Specifies one or more columns that store your data.
--   
--   Each schema can have up to 100 columns. Each column can have up to 100
--   nested types.
newSchemaDefinition :: SchemaDefinition

-- | Specifies one or more columns that store your data.
--   
--   Each schema can have up to 100 columns. Each column can have up to 100
--   nested types.
schemaDefinition_columns :: Lens' SchemaDefinition (Maybe [Column])

-- | Used to create a new message using only the specified attributes from
--   the original message.
--   
--   <i>See:</i> <a>newSelectAttributesActivity</a> smart constructor.
data SelectAttributesActivity
SelectAttributesActivity' :: Maybe Text -> Text -> NonEmpty Text -> SelectAttributesActivity

-- | The next activity in the pipeline.
[$sel:next:SelectAttributesActivity'] :: SelectAttributesActivity -> Maybe Text

-- | The name of the <tt>selectAttributes</tt> activity.
[$sel:name:SelectAttributesActivity'] :: SelectAttributesActivity -> Text

-- | A list of the attributes to select from the message.
[$sel:attributes:SelectAttributesActivity'] :: SelectAttributesActivity -> NonEmpty Text

-- | Create a value of <a>SelectAttributesActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:SelectAttributesActivity'</a>,
--   <a>selectAttributesActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:SelectAttributesActivity'</a>,
--   <a>selectAttributesActivity_name</a> - The name of the
--   <tt>selectAttributes</tt> activity.
--   
--   <a>$sel:attributes:SelectAttributesActivity'</a>,
--   <a>selectAttributesActivity_attributes</a> - A list of the attributes
--   to select from the message.
newSelectAttributesActivity :: Text -> NonEmpty Text -> SelectAttributesActivity

-- | The next activity in the pipeline.
selectAttributesActivity_next :: Lens' SelectAttributesActivity (Maybe Text)

-- | The name of the <tt>selectAttributes</tt> activity.
selectAttributesActivity_name :: Lens' SelectAttributesActivity Text

-- | A list of the attributes to select from the message.
selectAttributesActivity_attributes :: Lens' SelectAttributesActivity (NonEmpty Text)

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
--   You can't change the choice of S3 storage after the data store is
--   created.
--   
--   <i>See:</i> <a>newServiceManagedChannelS3Storage</a> smart
--   constructor.
data ServiceManagedChannelS3Storage
ServiceManagedChannelS3Storage' :: ServiceManagedChannelS3Storage

-- | Create a value of <a>ServiceManagedChannelS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedChannelS3Storage :: ServiceManagedChannelS3Storage

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
--   
--   <i>See:</i> <a>newServiceManagedChannelS3StorageSummary</a> smart
--   constructor.
data ServiceManagedChannelS3StorageSummary
ServiceManagedChannelS3StorageSummary' :: ServiceManagedChannelS3StorageSummary

-- | Create a value of <a>ServiceManagedChannelS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedChannelS3StorageSummary :: ServiceManagedChannelS3StorageSummary

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
--   You can't change the choice of Amazon S3 storage after your data store
--   is created.
--   
--   <i>See:</i> <a>newServiceManagedDatastoreS3Storage</a> smart
--   constructor.
data ServiceManagedDatastoreS3Storage
ServiceManagedDatastoreS3Storage' :: ServiceManagedDatastoreS3Storage

-- | Create a value of <a>ServiceManagedDatastoreS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedDatastoreS3Storage :: ServiceManagedDatastoreS3Storage

-- | Contains information about the data store that is managed by IoT
--   Analytics.
--   
--   <i>See:</i> <a>newServiceManagedDatastoreS3StorageSummary</a> smart
--   constructor.
data ServiceManagedDatastoreS3StorageSummary
ServiceManagedDatastoreS3StorageSummary' :: ServiceManagedDatastoreS3StorageSummary

-- | Create a value of <a>ServiceManagedDatastoreS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedDatastoreS3StorageSummary :: ServiceManagedDatastoreS3StorageSummary

-- | The SQL query to modify the message.
--   
--   <i>See:</i> <a>newSqlQueryDatasetAction</a> smart constructor.
data SqlQueryDatasetAction
SqlQueryDatasetAction' :: Maybe [QueryFilter] -> Text -> SqlQueryDatasetAction

-- | Prefilters applied to message data.
[$sel:filters:SqlQueryDatasetAction'] :: SqlQueryDatasetAction -> Maybe [QueryFilter]

-- | A SQL query string.
[$sel:sqlQuery:SqlQueryDatasetAction'] :: SqlQueryDatasetAction -> Text

-- | Create a value of <a>SqlQueryDatasetAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:SqlQueryDatasetAction'</a>,
--   <a>sqlQueryDatasetAction_filters</a> - Prefilters applied to message
--   data.
--   
--   <a>$sel:sqlQuery:SqlQueryDatasetAction'</a>,
--   <a>sqlQueryDatasetAction_sqlQuery</a> - A SQL query string.
newSqlQueryDatasetAction :: Text -> SqlQueryDatasetAction

-- | Prefilters applied to message data.
sqlQueryDatasetAction_filters :: Lens' SqlQueryDatasetAction (Maybe [QueryFilter])

-- | A SQL query string.
sqlQueryDatasetAction_sqlQuery :: Lens' SqlQueryDatasetAction Text

-- | A set of key-value pairs that are used to manage the resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text

-- | A partition dimension defined by a timestamp attribute.
--   
--   <i>See:</i> <a>newTimestampPartition</a> smart constructor.
data TimestampPartition
TimestampPartition' :: Maybe Text -> Text -> TimestampPartition

-- | The timestamp format of a partition defined by a timestamp. The
--   default format is seconds since epoch (January 1, 1970 at midnight UTC
--   time).
[$sel:timestampFormat:TimestampPartition'] :: TimestampPartition -> Maybe Text

-- | The attribute name of the partition defined by a timestamp.
[$sel:attributeName:TimestampPartition'] :: TimestampPartition -> Text

-- | Create a value of <a>TimestampPartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestampFormat:TimestampPartition'</a>,
--   <a>timestampPartition_timestampFormat</a> - The timestamp format of a
--   partition defined by a timestamp. The default format is seconds since
--   epoch (January 1, 1970 at midnight UTC time).
--   
--   <a>$sel:attributeName:TimestampPartition'</a>,
--   <a>timestampPartition_attributeName</a> - The attribute name of the
--   partition defined by a timestamp.
newTimestampPartition :: Text -> TimestampPartition

-- | The timestamp format of a partition defined by a timestamp. The
--   default format is seconds since epoch (January 1, 1970 at midnight UTC
--   time).
timestampPartition_timestampFormat :: Lens' TimestampPartition (Maybe Text)

-- | The attribute name of the partition defined by a timestamp.
timestampPartition_attributeName :: Lens' TimestampPartition Text

-- | Information about the dataset whose content generation triggers the
--   new dataset content generation.
--   
--   <i>See:</i> <a>newTriggeringDataset</a> smart constructor.
data TriggeringDataset
TriggeringDataset' :: Text -> TriggeringDataset

-- | The name of the dataset whose content generation triggers the new
--   dataset content generation.
[$sel:name:TriggeringDataset'] :: TriggeringDataset -> Text

-- | Create a value of <a>TriggeringDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TriggeringDataset'</a>, <a>triggeringDataset_name</a> -
--   The name of the dataset whose content generation triggers the new
--   dataset content generation.
newTriggeringDataset :: Text -> TriggeringDataset

-- | The name of the dataset whose content generation triggers the new
--   dataset content generation.
triggeringDataset_name :: Lens' TriggeringDataset Text

-- | An instance of a variable to be passed to the <tt>containerAction</tt>
--   execution. Each variable must have a name and a value given by one of
--   <tt>stringValue</tt>, <tt>datasetContentVersionValue</tt>, or
--   <tt>outputFileUriValue</tt>.
--   
--   <i>See:</i> <a>newVariable</a> smart constructor.
data Variable
Variable' :: Maybe OutputFileUriValue -> Maybe Double -> Maybe Text -> Maybe DatasetContentVersionValue -> Text -> Variable

-- | The value of the variable as a structure that specifies an output file
--   URI.
[$sel:outputFileUriValue:Variable'] :: Variable -> Maybe OutputFileUriValue

-- | The value of the variable as a double (numeric).
[$sel:doubleValue:Variable'] :: Variable -> Maybe Double

-- | The value of the variable as a string.
[$sel:stringValue:Variable'] :: Variable -> Maybe Text

-- | The value of the variable as a structure that specifies a dataset
--   content version.
[$sel:datasetContentVersionValue:Variable'] :: Variable -> Maybe DatasetContentVersionValue

-- | The name of the variable.
[$sel:name:Variable'] :: Variable -> Text

-- | Create a value of <a>Variable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputFileUriValue:Variable'</a>,
--   <a>variable_outputFileUriValue</a> - The value of the variable as a
--   structure that specifies an output file URI.
--   
--   <a>$sel:doubleValue:Variable'</a>, <a>variable_doubleValue</a> - The
--   value of the variable as a double (numeric).
--   
--   <a>$sel:stringValue:Variable'</a>, <a>variable_stringValue</a> - The
--   value of the variable as a string.
--   
--   <a>$sel:datasetContentVersionValue:Variable'</a>,
--   <a>variable_datasetContentVersionValue</a> - The value of the variable
--   as a structure that specifies a dataset content version.
--   
--   <a>$sel:name:Variable'</a>, <a>variable_name</a> - The name of the
--   variable.
newVariable :: Text -> Variable

-- | The value of the variable as a structure that specifies an output file
--   URI.
variable_outputFileUriValue :: Lens' Variable (Maybe OutputFileUriValue)

-- | The value of the variable as a double (numeric).
variable_doubleValue :: Lens' Variable (Maybe Double)

-- | The value of the variable as a string.
variable_stringValue :: Lens' Variable (Maybe Text)

-- | The value of the variable as a structure that specifies a dataset
--   content version.
variable_datasetContentVersionValue :: Lens' Variable (Maybe DatasetContentVersionValue)

-- | The name of the variable.
variable_name :: Lens' Variable Text

-- | Information about the versioning of dataset contents.
--   
--   <i>See:</i> <a>newVersioningConfiguration</a> smart constructor.
data VersioningConfiguration
VersioningConfiguration' :: Maybe Bool -> Maybe Natural -> VersioningConfiguration

-- | If true, unlimited versions of dataset contents are kept.
[$sel:unlimited:VersioningConfiguration'] :: VersioningConfiguration -> Maybe Bool

-- | How many versions of dataset contents are kept. The <tt>unlimited</tt>
--   parameter must be <tt>false</tt>.
[$sel:maxVersions:VersioningConfiguration'] :: VersioningConfiguration -> Maybe Natural

-- | Create a value of <a>VersioningConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlimited:VersioningConfiguration'</a>,
--   <a>versioningConfiguration_unlimited</a> - If true, unlimited versions
--   of dataset contents are kept.
--   
--   <a>$sel:maxVersions:VersioningConfiguration'</a>,
--   <a>versioningConfiguration_maxVersions</a> - How many versions of
--   dataset contents are kept. The <tt>unlimited</tt> parameter must be
--   <tt>false</tt>.
newVersioningConfiguration :: VersioningConfiguration

-- | If true, unlimited versions of dataset contents are kept.
versioningConfiguration_unlimited :: Lens' VersioningConfiguration (Maybe Bool)

-- | How many versions of dataset contents are kept. The <tt>unlimited</tt>
--   parameter must be <tt>false</tt>.
versioningConfiguration_maxVersions :: Lens' VersioningConfiguration (Maybe Natural)


-- | Adds to or modifies the tags of the given resource. Tags are metadata
--   that can be used to manage a resource.
module Amazonka.IoTAnalytics.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | The ARN of the resource whose tags you want to modify.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The new or modified tags for the resource.
[$sel:tags:TagResource'] :: TagResource -> NonEmpty Tag

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the resource whose tags you want to modify.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The new or
--   modified tags for the resource.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | The ARN of the resource whose tags you want to modify.
tagResource_resourceArn :: Lens' TagResource Text

-- | The new or modified tags for the resource.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.TagResource.TagResource
instance GHC.Show.Show Amazonka.IoTAnalytics.TagResource.TagResource
instance GHC.Read.Read Amazonka.IoTAnalytics.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.IoTAnalytics.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.IoTAnalytics.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.TagResource.TagResource


-- | Starts the reprocessing of raw message data through the pipeline.
module Amazonka.IoTAnalytics.StartPipelineReprocessing

-- | <i>See:</i> <a>newStartPipelineReprocessing</a> smart constructor.
data StartPipelineReprocessing
StartPipelineReprocessing' :: Maybe POSIX -> Maybe POSIX -> Maybe ChannelMessages -> Text -> StartPipelineReprocessing

-- | The start time (inclusive) of raw message data that is reprocessed.
--   
--   If you specify a value for the <tt>startTime</tt> parameter, you must
--   not use the <tt>channelMessages</tt> object.
[$sel:startTime:StartPipelineReprocessing'] :: StartPipelineReprocessing -> Maybe POSIX

-- | The end time (exclusive) of raw message data that is reprocessed.
--   
--   If you specify a value for the <tt>endTime</tt> parameter, you must
--   not use the <tt>channelMessages</tt> object.
[$sel:endTime:StartPipelineReprocessing'] :: StartPipelineReprocessing -> Maybe POSIX

-- | Specifies one or more sets of channel messages that you want to
--   reprocess.
--   
--   If you use the <tt>channelMessages</tt> object, you must not specify a
--   value for <tt>startTime</tt> and <tt>endTime</tt>.
[$sel:channelMessages:StartPipelineReprocessing'] :: StartPipelineReprocessing -> Maybe ChannelMessages

-- | The name of the pipeline on which to start reprocessing.
[$sel:pipelineName:StartPipelineReprocessing'] :: StartPipelineReprocessing -> Text

-- | Create a value of <a>StartPipelineReprocessing</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:StartPipelineReprocessing'</a>,
--   <a>startPipelineReprocessing_startTime</a> - The start time
--   (inclusive) of raw message data that is reprocessed.
--   
--   If you specify a value for the <tt>startTime</tt> parameter, you must
--   not use the <tt>channelMessages</tt> object.
--   
--   <a>$sel:endTime:StartPipelineReprocessing'</a>,
--   <a>startPipelineReprocessing_endTime</a> - The end time (exclusive) of
--   raw message data that is reprocessed.
--   
--   If you specify a value for the <tt>endTime</tt> parameter, you must
--   not use the <tt>channelMessages</tt> object.
--   
--   <a>$sel:channelMessages:StartPipelineReprocessing'</a>,
--   <a>startPipelineReprocessing_channelMessages</a> - Specifies one or
--   more sets of channel messages that you want to reprocess.
--   
--   If you use the <tt>channelMessages</tt> object, you must not specify a
--   value for <tt>startTime</tt> and <tt>endTime</tt>.
--   
--   <a>$sel:pipelineName:StartPipelineReprocessing'</a>,
--   <a>startPipelineReprocessing_pipelineName</a> - The name of the
--   pipeline on which to start reprocessing.
newStartPipelineReprocessing :: Text -> StartPipelineReprocessing

-- | The start time (inclusive) of raw message data that is reprocessed.
--   
--   If you specify a value for the <tt>startTime</tt> parameter, you must
--   not use the <tt>channelMessages</tt> object.
startPipelineReprocessing_startTime :: Lens' StartPipelineReprocessing (Maybe UTCTime)

-- | The end time (exclusive) of raw message data that is reprocessed.
--   
--   If you specify a value for the <tt>endTime</tt> parameter, you must
--   not use the <tt>channelMessages</tt> object.
startPipelineReprocessing_endTime :: Lens' StartPipelineReprocessing (Maybe UTCTime)

-- | Specifies one or more sets of channel messages that you want to
--   reprocess.
--   
--   If you use the <tt>channelMessages</tt> object, you must not specify a
--   value for <tt>startTime</tt> and <tt>endTime</tt>.
startPipelineReprocessing_channelMessages :: Lens' StartPipelineReprocessing (Maybe ChannelMessages)

-- | The name of the pipeline on which to start reprocessing.
startPipelineReprocessing_pipelineName :: Lens' StartPipelineReprocessing Text

-- | <i>See:</i> <a>newStartPipelineReprocessingResponse</a> smart
--   constructor.
data StartPipelineReprocessingResponse
StartPipelineReprocessingResponse' :: Maybe Text -> Int -> StartPipelineReprocessingResponse

-- | The ID of the pipeline reprocessing activity that was started.
[$sel:reprocessingId:StartPipelineReprocessingResponse'] :: StartPipelineReprocessingResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartPipelineReprocessingResponse'] :: StartPipelineReprocessingResponse -> Int

-- | Create a value of <a>StartPipelineReprocessingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reprocessingId:StartPipelineReprocessingResponse'</a>,
--   <a>startPipelineReprocessingResponse_reprocessingId</a> - The ID of
--   the pipeline reprocessing activity that was started.
--   
--   <a>$sel:httpStatus:StartPipelineReprocessingResponse'</a>,
--   <a>startPipelineReprocessingResponse_httpStatus</a> - The response's
--   http status code.
newStartPipelineReprocessingResponse :: Int -> StartPipelineReprocessingResponse

-- | The ID of the pipeline reprocessing activity that was started.
startPipelineReprocessingResponse_reprocessingId :: Lens' StartPipelineReprocessingResponse (Maybe Text)

-- | The response's http status code.
startPipelineReprocessingResponse_httpStatus :: Lens' StartPipelineReprocessingResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessing
instance GHC.Show.Show Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessing
instance GHC.Read.Read Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessing
instance GHC.Classes.Eq Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessing
instance GHC.Generics.Generic Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessingResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessingResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessingResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessingResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessing
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessingResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessing
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessing
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessing
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessing
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessing
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.StartPipelineReprocessing.StartPipelineReprocessing


-- | Retrieves a sample of messages from the specified channel ingested
--   during the specified timeframe. Up to 10 messages can be retrieved.
module Amazonka.IoTAnalytics.SampleChannelData

-- | <i>See:</i> <a>newSampleChannelData</a> smart constructor.
data SampleChannelData
SampleChannelData' :: Maybe POSIX -> Maybe Natural -> Maybe POSIX -> Text -> SampleChannelData

-- | The start of the time window from which sample messages are retrieved.
[$sel:startTime:SampleChannelData'] :: SampleChannelData -> Maybe POSIX

-- | The number of sample messages to be retrieved. The limit is 10. The
--   default is also 10.
[$sel:maxMessages:SampleChannelData'] :: SampleChannelData -> Maybe Natural

-- | The end of the time window from which sample messages are retrieved.
[$sel:endTime:SampleChannelData'] :: SampleChannelData -> Maybe POSIX

-- | The name of the channel whose message samples are retrieved.
[$sel:channelName:SampleChannelData'] :: SampleChannelData -> Text

-- | Create a value of <a>SampleChannelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:SampleChannelData'</a>,
--   <a>sampleChannelData_startTime</a> - The start of the time window from
--   which sample messages are retrieved.
--   
--   <a>$sel:maxMessages:SampleChannelData'</a>,
--   <a>sampleChannelData_maxMessages</a> - The number of sample messages
--   to be retrieved. The limit is 10. The default is also 10.
--   
--   <a>$sel:endTime:SampleChannelData'</a>,
--   <a>sampleChannelData_endTime</a> - The end of the time window from
--   which sample messages are retrieved.
--   
--   <a>$sel:channelName:SampleChannelData'</a>,
--   <a>sampleChannelData_channelName</a> - The name of the channel whose
--   message samples are retrieved.
newSampleChannelData :: Text -> SampleChannelData

-- | The start of the time window from which sample messages are retrieved.
sampleChannelData_startTime :: Lens' SampleChannelData (Maybe UTCTime)

-- | The number of sample messages to be retrieved. The limit is 10. The
--   default is also 10.
sampleChannelData_maxMessages :: Lens' SampleChannelData (Maybe Natural)

-- | The end of the time window from which sample messages are retrieved.
sampleChannelData_endTime :: Lens' SampleChannelData (Maybe UTCTime)

-- | The name of the channel whose message samples are retrieved.
sampleChannelData_channelName :: Lens' SampleChannelData Text

-- | <i>See:</i> <a>newSampleChannelDataResponse</a> smart constructor.
data SampleChannelDataResponse
SampleChannelDataResponse' :: Maybe (NonEmpty Base64) -> Int -> SampleChannelDataResponse

-- | The list of message samples. Each sample message is returned as a
--   base64-encoded string.
[$sel:payloads:SampleChannelDataResponse'] :: SampleChannelDataResponse -> Maybe (NonEmpty Base64)

-- | The response's http status code.
[$sel:httpStatus:SampleChannelDataResponse'] :: SampleChannelDataResponse -> Int

-- | Create a value of <a>SampleChannelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payloads:SampleChannelDataResponse'</a>,
--   <a>sampleChannelDataResponse_payloads</a> - The list of message
--   samples. Each sample message is returned as a base64-encoded string.
--   
--   <a>$sel:httpStatus:SampleChannelDataResponse'</a>,
--   <a>sampleChannelDataResponse_httpStatus</a> - The response's http
--   status code.
newSampleChannelDataResponse :: Int -> SampleChannelDataResponse

-- | The list of message samples. Each sample message is returned as a
--   base64-encoded string.
sampleChannelDataResponse_payloads :: Lens' SampleChannelDataResponse (Maybe (NonEmpty ByteString))

-- | The response's http status code.
sampleChannelDataResponse_httpStatus :: Lens' SampleChannelDataResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.SampleChannelData.SampleChannelData
instance GHC.Show.Show Amazonka.IoTAnalytics.SampleChannelData.SampleChannelData
instance GHC.Read.Read Amazonka.IoTAnalytics.SampleChannelData.SampleChannelData
instance GHC.Classes.Eq Amazonka.IoTAnalytics.SampleChannelData.SampleChannelData
instance GHC.Generics.Generic Amazonka.IoTAnalytics.SampleChannelData.SampleChannelDataResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.SampleChannelData.SampleChannelDataResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.SampleChannelData.SampleChannelDataResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.SampleChannelData.SampleChannelDataResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.SampleChannelData.SampleChannelData
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.SampleChannelData.SampleChannelDataResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.SampleChannelData.SampleChannelData
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.SampleChannelData.SampleChannelData
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.SampleChannelData.SampleChannelData
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.SampleChannelData.SampleChannelData
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.SampleChannelData.SampleChannelData


-- | Simulates the results of running a pipeline activity on a message
--   payload.
module Amazonka.IoTAnalytics.RunPipelineActivity

-- | <i>See:</i> <a>newRunPipelineActivity</a> smart constructor.
data RunPipelineActivity
RunPipelineActivity' :: PipelineActivity -> NonEmpty Base64 -> RunPipelineActivity

-- | The pipeline activity that is run. This must not be a channel activity
--   or a data store activity because these activities are used in a
--   pipeline only to load the original message and to store the (possibly)
--   transformed message. If a Lambda activity is specified, only
--   short-running Lambda functions (those with a timeout of less than 30
--   seconds or less) can be used.
[$sel:pipelineActivity:RunPipelineActivity'] :: RunPipelineActivity -> PipelineActivity

-- | The sample message payloads on which the pipeline activity is run.
[$sel:payloads:RunPipelineActivity'] :: RunPipelineActivity -> NonEmpty Base64

-- | Create a value of <a>RunPipelineActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineActivity:RunPipelineActivity'</a>,
--   <a>runPipelineActivity_pipelineActivity</a> - The pipeline activity
--   that is run. This must not be a channel activity or a data store
--   activity because these activities are used in a pipeline only to load
--   the original message and to store the (possibly) transformed message.
--   If a Lambda activity is specified, only short-running Lambda functions
--   (those with a timeout of less than 30 seconds or less) can be used.
--   
--   <a>$sel:payloads:RunPipelineActivity'</a>,
--   <a>runPipelineActivity_payloads</a> - The sample message payloads on
--   which the pipeline activity is run.
newRunPipelineActivity :: PipelineActivity -> NonEmpty ByteString -> RunPipelineActivity

-- | The pipeline activity that is run. This must not be a channel activity
--   or a data store activity because these activities are used in a
--   pipeline only to load the original message and to store the (possibly)
--   transformed message. If a Lambda activity is specified, only
--   short-running Lambda functions (those with a timeout of less than 30
--   seconds or less) can be used.
runPipelineActivity_pipelineActivity :: Lens' RunPipelineActivity PipelineActivity

-- | The sample message payloads on which the pipeline activity is run.
runPipelineActivity_payloads :: Lens' RunPipelineActivity (NonEmpty ByteString)

-- | <i>See:</i> <a>newRunPipelineActivityResponse</a> smart constructor.
data RunPipelineActivityResponse
RunPipelineActivityResponse' :: Maybe Text -> Maybe (NonEmpty Base64) -> Int -> RunPipelineActivityResponse

-- | In case the pipeline activity fails, the log message that is
--   generated.
[$sel:logResult:RunPipelineActivityResponse'] :: RunPipelineActivityResponse -> Maybe Text

-- | The enriched or transformed sample message payloads as base64-encoded
--   strings. (The results of running the pipeline activity on each input
--   sample message payload, encoded in base64.)
[$sel:payloads:RunPipelineActivityResponse'] :: RunPipelineActivityResponse -> Maybe (NonEmpty Base64)

-- | The response's http status code.
[$sel:httpStatus:RunPipelineActivityResponse'] :: RunPipelineActivityResponse -> Int

-- | Create a value of <a>RunPipelineActivityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logResult:RunPipelineActivityResponse'</a>,
--   <a>runPipelineActivityResponse_logResult</a> - In case the pipeline
--   activity fails, the log message that is generated.
--   
--   <a>$sel:payloads:RunPipelineActivity'</a>,
--   <a>runPipelineActivityResponse_payloads</a> - The enriched or
--   transformed sample message payloads as base64-encoded strings. (The
--   results of running the pipeline activity on each input sample message
--   payload, encoded in base64.)
--   
--   <a>$sel:httpStatus:RunPipelineActivityResponse'</a>,
--   <a>runPipelineActivityResponse_httpStatus</a> - The response's http
--   status code.
newRunPipelineActivityResponse :: Int -> RunPipelineActivityResponse

-- | In case the pipeline activity fails, the log message that is
--   generated.
runPipelineActivityResponse_logResult :: Lens' RunPipelineActivityResponse (Maybe Text)

-- | The enriched or transformed sample message payloads as base64-encoded
--   strings. (The results of running the pipeline activity on each input
--   sample message payload, encoded in base64.)
runPipelineActivityResponse_payloads :: Lens' RunPipelineActivityResponse (Maybe (NonEmpty ByteString))

-- | The response's http status code.
runPipelineActivityResponse_httpStatus :: Lens' RunPipelineActivityResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivity
instance GHC.Show.Show Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivity
instance GHC.Read.Read Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivity
instance GHC.Classes.Eq Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivity
instance GHC.Generics.Generic Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivityResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivityResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivityResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivityResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivityResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivity
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivity
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivity
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivity
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivity
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.RunPipelineActivity.RunPipelineActivity


-- | Sets or updates the IoT Analytics logging options.
--   
--   If you update the value of any <tt>loggingOptions</tt> field, it takes
--   up to one minute for the change to take effect. Also, if you change
--   the policy attached to the role you specified in the <tt>roleArn</tt>
--   field (for example, to correct an invalid policy), it takes up to five
--   minutes for that change to take effect.
module Amazonka.IoTAnalytics.PutLoggingOptions

-- | <i>See:</i> <a>newPutLoggingOptions</a> smart constructor.
data PutLoggingOptions
PutLoggingOptions' :: LoggingOptions -> PutLoggingOptions

-- | The new values of the IoT Analytics logging options.
[$sel:loggingOptions:PutLoggingOptions'] :: PutLoggingOptions -> LoggingOptions

-- | Create a value of <a>PutLoggingOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingOptions:PutLoggingOptions'</a>,
--   <a>putLoggingOptions_loggingOptions</a> - The new values of the IoT
--   Analytics logging options.
newPutLoggingOptions :: LoggingOptions -> PutLoggingOptions

-- | The new values of the IoT Analytics logging options.
putLoggingOptions_loggingOptions :: Lens' PutLoggingOptions LoggingOptions

-- | <i>See:</i> <a>newPutLoggingOptionsResponse</a> smart constructor.
data PutLoggingOptionsResponse
PutLoggingOptionsResponse' :: PutLoggingOptionsResponse

-- | Create a value of <a>PutLoggingOptionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutLoggingOptionsResponse :: PutLoggingOptionsResponse
instance GHC.Generics.Generic Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptions
instance GHC.Show.Show Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptions
instance GHC.Read.Read Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptions
instance GHC.Classes.Eq Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptions
instance GHC.Generics.Generic Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptionsResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptionsResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptionsResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptionsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptions
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptionsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptions
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptions
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptions
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptions
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.PutLoggingOptions.PutLoggingOptions


-- | Lists the tags (metadata) that you have assigned to the resource.
module Amazonka.IoTAnalytics.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the resource whose tags you want to list.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the resource whose
--   tags you want to list.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the resource whose tags you want to list.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (NonEmpty Tag) -> Int -> ListTagsForResourceResponse

-- | The tags (metadata) that you have assigned to the resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (NonEmpty Tag)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags (metadata) that you
--   have assigned to the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags (metadata) that you have assigned to the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.ListTagsForResource.ListTagsForResource


-- | Retrieves a list of pipelines.
--   
--   This operation returns paginated results.
module Amazonka.IoTAnalytics.ListPipelines

-- | <i>See:</i> <a>newListPipelines</a> smart constructor.
data ListPipelines
ListPipelines' :: Maybe Text -> Maybe Natural -> ListPipelines

-- | The token for the next set of results.
[$sel:nextToken:ListPipelines'] :: ListPipelines -> Maybe Text

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
[$sel:maxResults:ListPipelines'] :: ListPipelines -> Maybe Natural

-- | Create a value of <a>ListPipelines</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPipelines'</a>, <a>listPipelines_nextToken</a> -
--   The token for the next set of results.
--   
--   <a>$sel:maxResults:ListPipelines'</a>, <a>listPipelines_maxResults</a>
--   - The maximum number of results to return in this request.
--   
--   The default value is 100.
newListPipelines :: ListPipelines

-- | The token for the next set of results.
listPipelines_nextToken :: Lens' ListPipelines (Maybe Text)

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
listPipelines_maxResults :: Lens' ListPipelines (Maybe Natural)

-- | <i>See:</i> <a>newListPipelinesResponse</a> smart constructor.
data ListPipelinesResponse
ListPipelinesResponse' :: Maybe [PipelineSummary] -> Maybe Text -> Int -> ListPipelinesResponse

-- | A list of <tt>PipelineSummary</tt> objects.
[$sel:pipelineSummaries:ListPipelinesResponse'] :: ListPipelinesResponse -> Maybe [PipelineSummary]

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
[$sel:nextToken:ListPipelinesResponse'] :: ListPipelinesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListPipelinesResponse'] :: ListPipelinesResponse -> Int

-- | Create a value of <a>ListPipelinesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineSummaries:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_pipelineSummaries</a> - A list of
--   <tt>PipelineSummary</tt> objects.
--   
--   <a>$sel:nextToken:ListPipelines'</a>,
--   <a>listPipelinesResponse_nextToken</a> - The token to retrieve the
--   next set of results, or <tt>null</tt> if there are no more results.
--   
--   <a>$sel:httpStatus:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_httpStatus</a> - The response's http status
--   code.
newListPipelinesResponse :: Int -> ListPipelinesResponse

-- | A list of <tt>PipelineSummary</tt> objects.
listPipelinesResponse_pipelineSummaries :: Lens' ListPipelinesResponse (Maybe [PipelineSummary])

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
listPipelinesResponse_nextToken :: Lens' ListPipelinesResponse (Maybe Text)

-- | The response's http status code.
listPipelinesResponse_httpStatus :: Lens' ListPipelinesResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListPipelines.ListPipelines
instance GHC.Show.Show Amazonka.IoTAnalytics.ListPipelines.ListPipelines
instance GHC.Read.Read Amazonka.IoTAnalytics.ListPipelines.ListPipelines
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListPipelines.ListPipelines
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListPipelines.ListPipelinesResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.ListPipelines.ListPipelinesResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.ListPipelines.ListPipelinesResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListPipelines.ListPipelinesResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.ListPipelines.ListPipelines
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListPipelines.ListPipelinesResponse
instance Amazonka.Pager.AWSPager Amazonka.IoTAnalytics.ListPipelines.ListPipelines
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.ListPipelines.ListPipelines
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListPipelines.ListPipelines
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.ListPipelines.ListPipelines
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.ListPipelines.ListPipelines
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.ListPipelines.ListPipelines


-- | Retrieves a list of data stores.
--   
--   This operation returns paginated results.
module Amazonka.IoTAnalytics.ListDatastores

-- | <i>See:</i> <a>newListDatastores</a> smart constructor.
data ListDatastores
ListDatastores' :: Maybe Text -> Maybe Natural -> ListDatastores

-- | The token for the next set of results.
[$sel:nextToken:ListDatastores'] :: ListDatastores -> Maybe Text

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
[$sel:maxResults:ListDatastores'] :: ListDatastores -> Maybe Natural

-- | Create a value of <a>ListDatastores</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatastores'</a>, <a>listDatastores_nextToken</a>
--   - The token for the next set of results.
--   
--   <a>$sel:maxResults:ListDatastores'</a>,
--   <a>listDatastores_maxResults</a> - The maximum number of results to
--   return in this request.
--   
--   The default value is 100.
newListDatastores :: ListDatastores

-- | The token for the next set of results.
listDatastores_nextToken :: Lens' ListDatastores (Maybe Text)

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
listDatastores_maxResults :: Lens' ListDatastores (Maybe Natural)

-- | <i>See:</i> <a>newListDatastoresResponse</a> smart constructor.
data ListDatastoresResponse
ListDatastoresResponse' :: Maybe Text -> Maybe [DatastoreSummary] -> Int -> ListDatastoresResponse

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
[$sel:nextToken:ListDatastoresResponse'] :: ListDatastoresResponse -> Maybe Text

-- | A list of <tt>DatastoreSummary</tt> objects.
[$sel:datastoreSummaries:ListDatastoresResponse'] :: ListDatastoresResponse -> Maybe [DatastoreSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDatastoresResponse'] :: ListDatastoresResponse -> Int

-- | Create a value of <a>ListDatastoresResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatastores'</a>,
--   <a>listDatastoresResponse_nextToken</a> - The token to retrieve the
--   next set of results, or <tt>null</tt> if there are no more results.
--   
--   <a>$sel:datastoreSummaries:ListDatastoresResponse'</a>,
--   <a>listDatastoresResponse_datastoreSummaries</a> - A list of
--   <tt>DatastoreSummary</tt> objects.
--   
--   <a>$sel:httpStatus:ListDatastoresResponse'</a>,
--   <a>listDatastoresResponse_httpStatus</a> - The response's http status
--   code.
newListDatastoresResponse :: Int -> ListDatastoresResponse

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
listDatastoresResponse_nextToken :: Lens' ListDatastoresResponse (Maybe Text)

-- | A list of <tt>DatastoreSummary</tt> objects.
listDatastoresResponse_datastoreSummaries :: Lens' ListDatastoresResponse (Maybe [DatastoreSummary])

-- | The response's http status code.
listDatastoresResponse_httpStatus :: Lens' ListDatastoresResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListDatastores.ListDatastores
instance GHC.Show.Show Amazonka.IoTAnalytics.ListDatastores.ListDatastores
instance GHC.Read.Read Amazonka.IoTAnalytics.ListDatastores.ListDatastores
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListDatastores.ListDatastores
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListDatastores.ListDatastoresResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.ListDatastores.ListDatastoresResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.ListDatastores.ListDatastoresResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListDatastores.ListDatastoresResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.ListDatastores.ListDatastores
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListDatastores.ListDatastoresResponse
instance Amazonka.Pager.AWSPager Amazonka.IoTAnalytics.ListDatastores.ListDatastores
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.ListDatastores.ListDatastores
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListDatastores.ListDatastores
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.ListDatastores.ListDatastores
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.ListDatastores.ListDatastores
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.ListDatastores.ListDatastores


-- | Retrieves information about datasets.
--   
--   This operation returns paginated results.
module Amazonka.IoTAnalytics.ListDatasets

-- | <i>See:</i> <a>newListDatasets</a> smart constructor.
data ListDatasets
ListDatasets' :: Maybe Text -> Maybe Natural -> ListDatasets

-- | The token for the next set of results.
[$sel:nextToken:ListDatasets'] :: ListDatasets -> Maybe Text

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
[$sel:maxResults:ListDatasets'] :: ListDatasets -> Maybe Natural

-- | Create a value of <a>ListDatasets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>, <a>listDatasets_nextToken</a> -
--   The token for the next set of results.
--   
--   <a>$sel:maxResults:ListDatasets'</a>, <a>listDatasets_maxResults</a> -
--   The maximum number of results to return in this request.
--   
--   The default value is 100.
newListDatasets :: ListDatasets

-- | The token for the next set of results.
listDatasets_nextToken :: Lens' ListDatasets (Maybe Text)

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
listDatasets_maxResults :: Lens' ListDatasets (Maybe Natural)

-- | <i>See:</i> <a>newListDatasetsResponse</a> smart constructor.
data ListDatasetsResponse
ListDatasetsResponse' :: Maybe Text -> Maybe [DatasetSummary] -> Int -> ListDatasetsResponse

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
[$sel:nextToken:ListDatasetsResponse'] :: ListDatasetsResponse -> Maybe Text

-- | A list of <tt>DatasetSummary</tt> objects.
[$sel:datasetSummaries:ListDatasetsResponse'] :: ListDatasetsResponse -> Maybe [DatasetSummary]

-- | The response's http status code.
[$sel:httpStatus:ListDatasetsResponse'] :: ListDatasetsResponse -> Int

-- | Create a value of <a>ListDatasetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>,
--   <a>listDatasetsResponse_nextToken</a> - The token to retrieve the next
--   set of results, or <tt>null</tt> if there are no more results.
--   
--   <a>$sel:datasetSummaries:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_datasetSummaries</a> - A list of
--   <tt>DatasetSummary</tt> objects.
--   
--   <a>$sel:httpStatus:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_httpStatus</a> - The response's http status
--   code.
newListDatasetsResponse :: Int -> ListDatasetsResponse

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
listDatasetsResponse_nextToken :: Lens' ListDatasetsResponse (Maybe Text)

-- | A list of <tt>DatasetSummary</tt> objects.
listDatasetsResponse_datasetSummaries :: Lens' ListDatasetsResponse (Maybe [DatasetSummary])

-- | The response's http status code.
listDatasetsResponse_httpStatus :: Lens' ListDatasetsResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListDatasets.ListDatasets
instance GHC.Show.Show Amazonka.IoTAnalytics.ListDatasets.ListDatasets
instance GHC.Read.Read Amazonka.IoTAnalytics.ListDatasets.ListDatasets
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListDatasets.ListDatasets
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListDatasets.ListDatasetsResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.ListDatasets.ListDatasetsResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.ListDatasets.ListDatasetsResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListDatasets.ListDatasetsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.ListDatasets.ListDatasets
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListDatasets.ListDatasetsResponse
instance Amazonka.Pager.AWSPager Amazonka.IoTAnalytics.ListDatasets.ListDatasets
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.ListDatasets.ListDatasets
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListDatasets.ListDatasets
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.ListDatasets.ListDatasets
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.ListDatasets.ListDatasets
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.ListDatasets.ListDatasets


-- | Lists information about dataset contents that have been created.
--   
--   This operation returns paginated results.
module Amazonka.IoTAnalytics.ListDatasetContents

-- | <i>See:</i> <a>newListDatasetContents</a> smart constructor.
data ListDatasetContents
ListDatasetContents' :: Maybe Text -> Maybe POSIX -> Maybe Natural -> Maybe POSIX -> Text -> ListDatasetContents

-- | The token for the next set of results.
[$sel:nextToken:ListDatasetContents'] :: ListDatasetContents -> Maybe Text

-- | A filter to limit results to those dataset contents whose creation is
--   scheduled before the given time. See the field
--   <tt>triggers.schedule</tt> in the <tt>CreateDataset</tt> request.
--   (timestamp)
[$sel:scheduledBefore:ListDatasetContents'] :: ListDatasetContents -> Maybe POSIX

-- | The maximum number of results to return in this request.
[$sel:maxResults:ListDatasetContents'] :: ListDatasetContents -> Maybe Natural

-- | A filter to limit results to those dataset contents whose creation is
--   scheduled on or after the given time. See the field
--   <tt>triggers.schedule</tt> in the <tt>CreateDataset</tt> request.
--   (timestamp)
[$sel:scheduledOnOrAfter:ListDatasetContents'] :: ListDatasetContents -> Maybe POSIX

-- | The name of the dataset whose contents information you want to list.
[$sel:datasetName:ListDatasetContents'] :: ListDatasetContents -> Text

-- | Create a value of <a>ListDatasetContents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasetContents'</a>,
--   <a>listDatasetContents_nextToken</a> - The token for the next set of
--   results.
--   
--   <a>$sel:scheduledBefore:ListDatasetContents'</a>,
--   <a>listDatasetContents_scheduledBefore</a> - A filter to limit results
--   to those dataset contents whose creation is scheduled before the given
--   time. See the field <tt>triggers.schedule</tt> in the
--   <tt>CreateDataset</tt> request. (timestamp)
--   
--   <a>$sel:maxResults:ListDatasetContents'</a>,
--   <a>listDatasetContents_maxResults</a> - The maximum number of results
--   to return in this request.
--   
--   <a>$sel:scheduledOnOrAfter:ListDatasetContents'</a>,
--   <a>listDatasetContents_scheduledOnOrAfter</a> - A filter to limit
--   results to those dataset contents whose creation is scheduled on or
--   after the given time. See the field <tt>triggers.schedule</tt> in the
--   <tt>CreateDataset</tt> request. (timestamp)
--   
--   <a>$sel:datasetName:ListDatasetContents'</a>,
--   <a>listDatasetContents_datasetName</a> - The name of the dataset whose
--   contents information you want to list.
newListDatasetContents :: Text -> ListDatasetContents

-- | The token for the next set of results.
listDatasetContents_nextToken :: Lens' ListDatasetContents (Maybe Text)

-- | A filter to limit results to those dataset contents whose creation is
--   scheduled before the given time. See the field
--   <tt>triggers.schedule</tt> in the <tt>CreateDataset</tt> request.
--   (timestamp)
listDatasetContents_scheduledBefore :: Lens' ListDatasetContents (Maybe UTCTime)

-- | The maximum number of results to return in this request.
listDatasetContents_maxResults :: Lens' ListDatasetContents (Maybe Natural)

-- | A filter to limit results to those dataset contents whose creation is
--   scheduled on or after the given time. See the field
--   <tt>triggers.schedule</tt> in the <tt>CreateDataset</tt> request.
--   (timestamp)
listDatasetContents_scheduledOnOrAfter :: Lens' ListDatasetContents (Maybe UTCTime)

-- | The name of the dataset whose contents information you want to list.
listDatasetContents_datasetName :: Lens' ListDatasetContents Text

-- | <i>See:</i> <a>newListDatasetContentsResponse</a> smart constructor.
data ListDatasetContentsResponse
ListDatasetContentsResponse' :: Maybe [DatasetContentSummary] -> Maybe Text -> Int -> ListDatasetContentsResponse

-- | Summary information about dataset contents that have been created.
[$sel:datasetContentSummaries:ListDatasetContentsResponse'] :: ListDatasetContentsResponse -> Maybe [DatasetContentSummary]

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
[$sel:nextToken:ListDatasetContentsResponse'] :: ListDatasetContentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDatasetContentsResponse'] :: ListDatasetContentsResponse -> Int

-- | Create a value of <a>ListDatasetContentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetContentSummaries:ListDatasetContentsResponse'</a>,
--   <a>listDatasetContentsResponse_datasetContentSummaries</a> - Summary
--   information about dataset contents that have been created.
--   
--   <a>$sel:nextToken:ListDatasetContents'</a>,
--   <a>listDatasetContentsResponse_nextToken</a> - The token to retrieve
--   the next set of results, or <tt>null</tt> if there are no more
--   results.
--   
--   <a>$sel:httpStatus:ListDatasetContentsResponse'</a>,
--   <a>listDatasetContentsResponse_httpStatus</a> - The response's http
--   status code.
newListDatasetContentsResponse :: Int -> ListDatasetContentsResponse

-- | Summary information about dataset contents that have been created.
listDatasetContentsResponse_datasetContentSummaries :: Lens' ListDatasetContentsResponse (Maybe [DatasetContentSummary])

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
listDatasetContentsResponse_nextToken :: Lens' ListDatasetContentsResponse (Maybe Text)

-- | The response's http status code.
listDatasetContentsResponse_httpStatus :: Lens' ListDatasetContentsResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContents
instance GHC.Show.Show Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContents
instance GHC.Read.Read Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContents
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContents
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContentsResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContentsResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContentsResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContentsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContents
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContentsResponse
instance Amazonka.Pager.AWSPager Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContents
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContents
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContents
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContents
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContents
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.ListDatasetContents.ListDatasetContents


-- | Retrieves a list of channels.
--   
--   This operation returns paginated results.
module Amazonka.IoTAnalytics.ListChannels

-- | <i>See:</i> <a>newListChannels</a> smart constructor.
data ListChannels
ListChannels' :: Maybe Text -> Maybe Natural -> ListChannels

-- | The token for the next set of results.
[$sel:nextToken:ListChannels'] :: ListChannels -> Maybe Text

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
[$sel:maxResults:ListChannels'] :: ListChannels -> Maybe Natural

-- | Create a value of <a>ListChannels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannels'</a>, <a>listChannels_nextToken</a> -
--   The token for the next set of results.
--   
--   <a>$sel:maxResults:ListChannels'</a>, <a>listChannels_maxResults</a> -
--   The maximum number of results to return in this request.
--   
--   The default value is 100.
newListChannels :: ListChannels

-- | The token for the next set of results.
listChannels_nextToken :: Lens' ListChannels (Maybe Text)

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
listChannels_maxResults :: Lens' ListChannels (Maybe Natural)

-- | <i>See:</i> <a>newListChannelsResponse</a> smart constructor.
data ListChannelsResponse
ListChannelsResponse' :: Maybe [ChannelSummary] -> Maybe Text -> Int -> ListChannelsResponse

-- | A list of <tt>ChannelSummary</tt> objects.
[$sel:channelSummaries:ListChannelsResponse'] :: ListChannelsResponse -> Maybe [ChannelSummary]

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
[$sel:nextToken:ListChannelsResponse'] :: ListChannelsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListChannelsResponse'] :: ListChannelsResponse -> Int

-- | Create a value of <a>ListChannelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelSummaries:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_channelSummaries</a> - A list of
--   <tt>ChannelSummary</tt> objects.
--   
--   <a>$sel:nextToken:ListChannels'</a>,
--   <a>listChannelsResponse_nextToken</a> - The token to retrieve the next
--   set of results, or <tt>null</tt> if there are no more results.
--   
--   <a>$sel:httpStatus:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_httpStatus</a> - The response's http status
--   code.
newListChannelsResponse :: Int -> ListChannelsResponse

-- | A list of <tt>ChannelSummary</tt> objects.
listChannelsResponse_channelSummaries :: Lens' ListChannelsResponse (Maybe [ChannelSummary])

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
listChannelsResponse_nextToken :: Lens' ListChannelsResponse (Maybe Text)

-- | The response's http status code.
listChannelsResponse_httpStatus :: Lens' ListChannelsResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListChannels.ListChannels
instance GHC.Show.Show Amazonka.IoTAnalytics.ListChannels.ListChannels
instance GHC.Read.Read Amazonka.IoTAnalytics.ListChannels.ListChannels
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListChannels.ListChannels
instance GHC.Generics.Generic Amazonka.IoTAnalytics.ListChannels.ListChannelsResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.ListChannels.ListChannelsResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.ListChannels.ListChannelsResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.ListChannels.ListChannelsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.ListChannels.ListChannels
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListChannels.ListChannelsResponse
instance Amazonka.Pager.AWSPager Amazonka.IoTAnalytics.ListChannels.ListChannels
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.ListChannels.ListChannels
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.ListChannels.ListChannels
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.ListChannels.ListChannels
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.ListChannels.ListChannels
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.ListChannels.ListChannels


-- | Retrieves the contents of a dataset as presigned URIs.
module Amazonka.IoTAnalytics.GetDatasetContent

-- | <i>See:</i> <a>newGetDatasetContent</a> smart constructor.
data GetDatasetContent
GetDatasetContent' :: Maybe Text -> Text -> GetDatasetContent

-- | The version of the dataset whose contents are retrieved. You can also
--   use the strings "$LATEST" or "$LATEST_SUCCEEDED" to retrieve the
--   contents of the latest or latest successfully completed dataset. If
--   not specified, "$LATEST_SUCCEEDED" is the default.
[$sel:versionId:GetDatasetContent'] :: GetDatasetContent -> Maybe Text

-- | The name of the dataset whose contents are retrieved.
[$sel:datasetName:GetDatasetContent'] :: GetDatasetContent -> Text

-- | Create a value of <a>GetDatasetContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:GetDatasetContent'</a>,
--   <a>getDatasetContent_versionId</a> - The version of the dataset whose
--   contents are retrieved. You can also use the strings "$LATEST" or
--   "$LATEST_SUCCEEDED" to retrieve the contents of the latest or latest
--   successfully completed dataset. If not specified, "$LATEST_SUCCEEDED"
--   is the default.
--   
--   <a>$sel:datasetName:GetDatasetContent'</a>,
--   <a>getDatasetContent_datasetName</a> - The name of the dataset whose
--   contents are retrieved.
newGetDatasetContent :: Text -> GetDatasetContent

-- | The version of the dataset whose contents are retrieved. You can also
--   use the strings "$LATEST" or "$LATEST_SUCCEEDED" to retrieve the
--   contents of the latest or latest successfully completed dataset. If
--   not specified, "$LATEST_SUCCEEDED" is the default.
getDatasetContent_versionId :: Lens' GetDatasetContent (Maybe Text)

-- | The name of the dataset whose contents are retrieved.
getDatasetContent_datasetName :: Lens' GetDatasetContent Text

-- | <i>See:</i> <a>newGetDatasetContentResponse</a> smart constructor.
data GetDatasetContentResponse
GetDatasetContentResponse' :: Maybe DatasetContentStatus -> Maybe [DatasetEntry] -> Maybe POSIX -> Int -> GetDatasetContentResponse

-- | The status of the dataset content.
[$sel:status:GetDatasetContentResponse'] :: GetDatasetContentResponse -> Maybe DatasetContentStatus

-- | A list of <tt>DatasetEntry</tt> objects.
[$sel:entries:GetDatasetContentResponse'] :: GetDatasetContentResponse -> Maybe [DatasetEntry]

-- | The time when the request was made.
[$sel:timestamp:GetDatasetContentResponse'] :: GetDatasetContentResponse -> Maybe POSIX

-- | The response's http status code.
[$sel:httpStatus:GetDatasetContentResponse'] :: GetDatasetContentResponse -> Int

-- | Create a value of <a>GetDatasetContentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetDatasetContentResponse'</a>,
--   <a>getDatasetContentResponse_status</a> - The status of the dataset
--   content.
--   
--   <a>$sel:entries:GetDatasetContentResponse'</a>,
--   <a>getDatasetContentResponse_entries</a> - A list of
--   <tt>DatasetEntry</tt> objects.
--   
--   <a>$sel:timestamp:GetDatasetContentResponse'</a>,
--   <a>getDatasetContentResponse_timestamp</a> - The time when the request
--   was made.
--   
--   <a>$sel:httpStatus:GetDatasetContentResponse'</a>,
--   <a>getDatasetContentResponse_httpStatus</a> - The response's http
--   status code.
newGetDatasetContentResponse :: Int -> GetDatasetContentResponse

-- | The status of the dataset content.
getDatasetContentResponse_status :: Lens' GetDatasetContentResponse (Maybe DatasetContentStatus)

-- | A list of <tt>DatasetEntry</tt> objects.
getDatasetContentResponse_entries :: Lens' GetDatasetContentResponse (Maybe [DatasetEntry])

-- | The time when the request was made.
getDatasetContentResponse_timestamp :: Lens' GetDatasetContentResponse (Maybe UTCTime)

-- | The response's http status code.
getDatasetContentResponse_httpStatus :: Lens' GetDatasetContentResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContent
instance GHC.Show.Show Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContent
instance GHC.Read.Read Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContent
instance GHC.Classes.Eq Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContent
instance GHC.Generics.Generic Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContentResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContentResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContentResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContentResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContent
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContentResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContent
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContent
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContent
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContent
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.GetDatasetContent.GetDatasetContent


-- | Retrieves information about a pipeline.
module Amazonka.IoTAnalytics.DescribePipeline

-- | <i>See:</i> <a>newDescribePipeline</a> smart constructor.
data DescribePipeline
DescribePipeline' :: Text -> DescribePipeline

-- | The name of the pipeline whose information is retrieved.
[$sel:pipelineName:DescribePipeline'] :: DescribePipeline -> Text

-- | Create a value of <a>DescribePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:DescribePipeline'</a>,
--   <a>describePipeline_pipelineName</a> - The name of the pipeline whose
--   information is retrieved.
newDescribePipeline :: Text -> DescribePipeline

-- | The name of the pipeline whose information is retrieved.
describePipeline_pipelineName :: Lens' DescribePipeline Text

-- | <i>See:</i> <a>newDescribePipelineResponse</a> smart constructor.
data DescribePipelineResponse
DescribePipelineResponse' :: Maybe Pipeline -> Int -> DescribePipelineResponse

-- | A <tt>Pipeline</tt> object that contains information about the
--   pipeline.
[$sel:pipeline:DescribePipelineResponse'] :: DescribePipelineResponse -> Maybe Pipeline

-- | The response's http status code.
[$sel:httpStatus:DescribePipelineResponse'] :: DescribePipelineResponse -> Int

-- | Create a value of <a>DescribePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipeline:DescribePipelineResponse'</a>,
--   <a>describePipelineResponse_pipeline</a> - A <tt>Pipeline</tt> object
--   that contains information about the pipeline.
--   
--   <a>$sel:httpStatus:DescribePipelineResponse'</a>,
--   <a>describePipelineResponse_httpStatus</a> - The response's http
--   status code.
newDescribePipelineResponse :: Int -> DescribePipelineResponse

-- | A <tt>Pipeline</tt> object that contains information about the
--   pipeline.
describePipelineResponse_pipeline :: Lens' DescribePipelineResponse (Maybe Pipeline)

-- | The response's http status code.
describePipelineResponse_httpStatus :: Lens' DescribePipelineResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DescribePipeline.DescribePipeline
instance GHC.Show.Show Amazonka.IoTAnalytics.DescribePipeline.DescribePipeline
instance GHC.Read.Read Amazonka.IoTAnalytics.DescribePipeline.DescribePipeline
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DescribePipeline.DescribePipeline
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DescribePipeline.DescribePipelineResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.DescribePipeline.DescribePipelineResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.DescribePipeline.DescribePipelineResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DescribePipeline.DescribePipelineResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.DescribePipeline.DescribePipeline
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DescribePipeline.DescribePipelineResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.DescribePipeline.DescribePipeline
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DescribePipeline.DescribePipeline
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.DescribePipeline.DescribePipeline
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.DescribePipeline.DescribePipeline
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.DescribePipeline.DescribePipeline


-- | Retrieves the current settings of the IoT Analytics logging options.
module Amazonka.IoTAnalytics.DescribeLoggingOptions

-- | <i>See:</i> <a>newDescribeLoggingOptions</a> smart constructor.
data DescribeLoggingOptions
DescribeLoggingOptions' :: DescribeLoggingOptions

-- | Create a value of <a>DescribeLoggingOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeLoggingOptions :: DescribeLoggingOptions

-- | <i>See:</i> <a>newDescribeLoggingOptionsResponse</a> smart
--   constructor.
data DescribeLoggingOptionsResponse
DescribeLoggingOptionsResponse' :: Maybe LoggingOptions -> Int -> DescribeLoggingOptionsResponse

-- | The current settings of the IoT Analytics logging options.
[$sel:loggingOptions:DescribeLoggingOptionsResponse'] :: DescribeLoggingOptionsResponse -> Maybe LoggingOptions

-- | The response's http status code.
[$sel:httpStatus:DescribeLoggingOptionsResponse'] :: DescribeLoggingOptionsResponse -> Int

-- | Create a value of <a>DescribeLoggingOptionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingOptions:DescribeLoggingOptionsResponse'</a>,
--   <a>describeLoggingOptionsResponse_loggingOptions</a> - The current
--   settings of the IoT Analytics logging options.
--   
--   <a>$sel:httpStatus:DescribeLoggingOptionsResponse'</a>,
--   <a>describeLoggingOptionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLoggingOptionsResponse :: Int -> DescribeLoggingOptionsResponse

-- | The current settings of the IoT Analytics logging options.
describeLoggingOptionsResponse_loggingOptions :: Lens' DescribeLoggingOptionsResponse (Maybe LoggingOptions)

-- | The response's http status code.
describeLoggingOptionsResponse_httpStatus :: Lens' DescribeLoggingOptionsResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptions
instance GHC.Show.Show Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptions
instance GHC.Read.Read Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptions
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptions
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptionsResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptionsResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptionsResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptionsResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptions
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptionsResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptions
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptions
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptions
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptions
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.DescribeLoggingOptions.DescribeLoggingOptions


-- | Retrieves information about a data store.
module Amazonka.IoTAnalytics.DescribeDatastore

-- | <i>See:</i> <a>newDescribeDatastore</a> smart constructor.
data DescribeDatastore
DescribeDatastore' :: Maybe Bool -> Text -> DescribeDatastore

-- | If true, additional statistical information about the data store is
--   included in the response. This feature can't be used with a data store
--   whose S3 storage is customer-managed.
[$sel:includeStatistics:DescribeDatastore'] :: DescribeDatastore -> Maybe Bool

-- | The name of the data store
[$sel:datastoreName:DescribeDatastore'] :: DescribeDatastore -> Text

-- | Create a value of <a>DescribeDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeStatistics:DescribeDatastore'</a>,
--   <a>describeDatastore_includeStatistics</a> - If true, additional
--   statistical information about the data store is included in the
--   response. This feature can't be used with a data store whose S3
--   storage is customer-managed.
--   
--   <a>$sel:datastoreName:DescribeDatastore'</a>,
--   <a>describeDatastore_datastoreName</a> - The name of the data store
newDescribeDatastore :: Text -> DescribeDatastore

-- | If true, additional statistical information about the data store is
--   included in the response. This feature can't be used with a data store
--   whose S3 storage is customer-managed.
describeDatastore_includeStatistics :: Lens' DescribeDatastore (Maybe Bool)

-- | The name of the data store
describeDatastore_datastoreName :: Lens' DescribeDatastore Text

-- | <i>See:</i> <a>newDescribeDatastoreResponse</a> smart constructor.
data DescribeDatastoreResponse
DescribeDatastoreResponse' :: Maybe Datastore -> Maybe DatastoreStatistics -> Int -> DescribeDatastoreResponse

-- | Information about the data store.
[$sel:datastore:DescribeDatastoreResponse'] :: DescribeDatastoreResponse -> Maybe Datastore

-- | Additional statistical information about the data store. Included if
--   the <tt>includeStatistics</tt> parameter is set to <tt>true</tt> in
--   the request.
[$sel:statistics:DescribeDatastoreResponse'] :: DescribeDatastoreResponse -> Maybe DatastoreStatistics

-- | The response's http status code.
[$sel:httpStatus:DescribeDatastoreResponse'] :: DescribeDatastoreResponse -> Int

-- | Create a value of <a>DescribeDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastore:DescribeDatastoreResponse'</a>,
--   <a>describeDatastoreResponse_datastore</a> - Information about the
--   data store.
--   
--   <a>$sel:statistics:DescribeDatastoreResponse'</a>,
--   <a>describeDatastoreResponse_statistics</a> - Additional statistical
--   information about the data store. Included if the
--   <tt>includeStatistics</tt> parameter is set to <tt>true</tt> in the
--   request.
--   
--   <a>$sel:httpStatus:DescribeDatastoreResponse'</a>,
--   <a>describeDatastoreResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDatastoreResponse :: Int -> DescribeDatastoreResponse

-- | Information about the data store.
describeDatastoreResponse_datastore :: Lens' DescribeDatastoreResponse (Maybe Datastore)

-- | Additional statistical information about the data store. Included if
--   the <tt>includeStatistics</tt> parameter is set to <tt>true</tt> in
--   the request.
describeDatastoreResponse_statistics :: Lens' DescribeDatastoreResponse (Maybe DatastoreStatistics)

-- | The response's http status code.
describeDatastoreResponse_httpStatus :: Lens' DescribeDatastoreResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastore
instance GHC.Show.Show Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastore
instance GHC.Read.Read Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastore
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastore
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastoreResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastoreResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastoreResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastoreResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastore
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastoreResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastore
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastore
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastore
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastore
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.DescribeDatastore.DescribeDatastore


-- | Retrieves information about a dataset.
module Amazonka.IoTAnalytics.DescribeDataset

-- | <i>See:</i> <a>newDescribeDataset</a> smart constructor.
data DescribeDataset
DescribeDataset' :: Text -> DescribeDataset

-- | The name of the dataset whose information is retrieved.
[$sel:datasetName:DescribeDataset'] :: DescribeDataset -> Text

-- | Create a value of <a>DescribeDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:DescribeDataset'</a>,
--   <a>describeDataset_datasetName</a> - The name of the dataset whose
--   information is retrieved.
newDescribeDataset :: Text -> DescribeDataset

-- | The name of the dataset whose information is retrieved.
describeDataset_datasetName :: Lens' DescribeDataset Text

-- | <i>See:</i> <a>newDescribeDatasetResponse</a> smart constructor.
data DescribeDatasetResponse
DescribeDatasetResponse' :: Maybe Dataset -> Int -> DescribeDatasetResponse

-- | An object that contains information about the dataset.
[$sel:dataset:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Maybe Dataset

-- | The response's http status code.
[$sel:httpStatus:DescribeDatasetResponse'] :: DescribeDatasetResponse -> Int

-- | Create a value of <a>DescribeDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataset:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_dataset</a> - An object that contains
--   information about the dataset.
--   
--   <a>$sel:httpStatus:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDatasetResponse :: Int -> DescribeDatasetResponse

-- | An object that contains information about the dataset.
describeDatasetResponse_dataset :: Lens' DescribeDatasetResponse (Maybe Dataset)

-- | The response's http status code.
describeDatasetResponse_httpStatus :: Lens' DescribeDatasetResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DescribeDataset.DescribeDataset
instance GHC.Show.Show Amazonka.IoTAnalytics.DescribeDataset.DescribeDataset
instance GHC.Read.Read Amazonka.IoTAnalytics.DescribeDataset.DescribeDataset
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DescribeDataset.DescribeDataset
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DescribeDataset.DescribeDatasetResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.DescribeDataset.DescribeDatasetResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.DescribeDataset.DescribeDatasetResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DescribeDataset.DescribeDatasetResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.DescribeDataset.DescribeDataset
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DescribeDataset.DescribeDatasetResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.DescribeDataset.DescribeDataset
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DescribeDataset.DescribeDataset
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.DescribeDataset.DescribeDataset
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.DescribeDataset.DescribeDataset
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.DescribeDataset.DescribeDataset


-- | Retrieves information about a channel.
module Amazonka.IoTAnalytics.DescribeChannel

-- | <i>See:</i> <a>newDescribeChannel</a> smart constructor.
data DescribeChannel
DescribeChannel' :: Maybe Bool -> Text -> DescribeChannel

-- | If true, additional statistical information about the channel is
--   included in the response. This feature can't be used with a channel
--   whose S3 storage is customer-managed.
[$sel:includeStatistics:DescribeChannel'] :: DescribeChannel -> Maybe Bool

-- | The name of the channel whose information is retrieved.
[$sel:channelName:DescribeChannel'] :: DescribeChannel -> Text

-- | Create a value of <a>DescribeChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeStatistics:DescribeChannel'</a>,
--   <a>describeChannel_includeStatistics</a> - If true, additional
--   statistical information about the channel is included in the response.
--   This feature can't be used with a channel whose S3 storage is
--   customer-managed.
--   
--   <a>$sel:channelName:DescribeChannel'</a>,
--   <a>describeChannel_channelName</a> - The name of the channel whose
--   information is retrieved.
newDescribeChannel :: Text -> DescribeChannel

-- | If true, additional statistical information about the channel is
--   included in the response. This feature can't be used with a channel
--   whose S3 storage is customer-managed.
describeChannel_includeStatistics :: Lens' DescribeChannel (Maybe Bool)

-- | The name of the channel whose information is retrieved.
describeChannel_channelName :: Lens' DescribeChannel Text

-- | <i>See:</i> <a>newDescribeChannelResponse</a> smart constructor.
data DescribeChannelResponse
DescribeChannelResponse' :: Maybe Channel -> Maybe ChannelStatistics -> Int -> DescribeChannelResponse

-- | An object that contains information about the channel.
[$sel:channel:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe Channel

-- | Statistics about the channel. Included if the
--   <tt>includeStatistics</tt> parameter is set to <tt>true</tt> in the
--   request.
[$sel:statistics:DescribeChannelResponse'] :: DescribeChannelResponse -> Maybe ChannelStatistics

-- | The response's http status code.
[$sel:httpStatus:DescribeChannelResponse'] :: DescribeChannelResponse -> Int

-- | Create a value of <a>DescribeChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channel:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_channel</a> - An object that contains
--   information about the channel.
--   
--   <a>$sel:statistics:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_statistics</a> - Statistics about the
--   channel. Included if the <tt>includeStatistics</tt> parameter is set
--   to <tt>true</tt> in the request.
--   
--   <a>$sel:httpStatus:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_httpStatus</a> - The response's http status
--   code.
newDescribeChannelResponse :: Int -> DescribeChannelResponse

-- | An object that contains information about the channel.
describeChannelResponse_channel :: Lens' DescribeChannelResponse (Maybe Channel)

-- | Statistics about the channel. Included if the
--   <tt>includeStatistics</tt> parameter is set to <tt>true</tt> in the
--   request.
describeChannelResponse_statistics :: Lens' DescribeChannelResponse (Maybe ChannelStatistics)

-- | The response's http status code.
describeChannelResponse_httpStatus :: Lens' DescribeChannelResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DescribeChannel.DescribeChannel
instance GHC.Show.Show Amazonka.IoTAnalytics.DescribeChannel.DescribeChannel
instance GHC.Read.Read Amazonka.IoTAnalytics.DescribeChannel.DescribeChannel
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DescribeChannel.DescribeChannel
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DescribeChannel.DescribeChannelResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.DescribeChannel.DescribeChannelResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.DescribeChannel.DescribeChannelResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DescribeChannel.DescribeChannelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.DescribeChannel.DescribeChannel
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DescribeChannel.DescribeChannelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.DescribeChannel.DescribeChannel
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DescribeChannel.DescribeChannel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.DescribeChannel.DescribeChannel
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.DescribeChannel.DescribeChannel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.DescribeChannel.DescribeChannel


-- | Deletes the specified pipeline.
module Amazonka.IoTAnalytics.DeletePipeline

-- | <i>See:</i> <a>newDeletePipeline</a> smart constructor.
data DeletePipeline
DeletePipeline' :: Text -> DeletePipeline

-- | The name of the pipeline to delete.
[$sel:pipelineName:DeletePipeline'] :: DeletePipeline -> Text

-- | Create a value of <a>DeletePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:DeletePipeline'</a>,
--   <a>deletePipeline_pipelineName</a> - The name of the pipeline to
--   delete.
newDeletePipeline :: Text -> DeletePipeline

-- | The name of the pipeline to delete.
deletePipeline_pipelineName :: Lens' DeletePipeline Text

-- | <i>See:</i> <a>newDeletePipelineResponse</a> smart constructor.
data DeletePipelineResponse
DeletePipelineResponse' :: DeletePipelineResponse

-- | Create a value of <a>DeletePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePipelineResponse :: DeletePipelineResponse
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DeletePipeline.DeletePipeline
instance GHC.Show.Show Amazonka.IoTAnalytics.DeletePipeline.DeletePipeline
instance GHC.Read.Read Amazonka.IoTAnalytics.DeletePipeline.DeletePipeline
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DeletePipeline.DeletePipeline
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DeletePipeline.DeletePipelineResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.DeletePipeline.DeletePipelineResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.DeletePipeline.DeletePipelineResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DeletePipeline.DeletePipelineResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.DeletePipeline.DeletePipeline
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DeletePipeline.DeletePipelineResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.DeletePipeline.DeletePipeline
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DeletePipeline.DeletePipeline
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.DeletePipeline.DeletePipeline
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.DeletePipeline.DeletePipeline
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.DeletePipeline.DeletePipeline


-- | Deletes the specified data store.
module Amazonka.IoTAnalytics.DeleteDatastore

-- | <i>See:</i> <a>newDeleteDatastore</a> smart constructor.
data DeleteDatastore
DeleteDatastore' :: Text -> DeleteDatastore

-- | The name of the data store to delete.
[$sel:datastoreName:DeleteDatastore'] :: DeleteDatastore -> Text

-- | Create a value of <a>DeleteDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreName:DeleteDatastore'</a>,
--   <a>deleteDatastore_datastoreName</a> - The name of the data store to
--   delete.
newDeleteDatastore :: Text -> DeleteDatastore

-- | The name of the data store to delete.
deleteDatastore_datastoreName :: Lens' DeleteDatastore Text

-- | <i>See:</i> <a>newDeleteDatastoreResponse</a> smart constructor.
data DeleteDatastoreResponse
DeleteDatastoreResponse' :: DeleteDatastoreResponse

-- | Create a value of <a>DeleteDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatastoreResponse :: DeleteDatastoreResponse
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastore
instance GHC.Show.Show Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastore
instance GHC.Read.Read Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastore
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastore
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastoreResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastoreResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastoreResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastoreResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastore
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastoreResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastore
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastore
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastore
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastore
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.DeleteDatastore.DeleteDatastore


-- | Deletes the content of the specified dataset.
module Amazonka.IoTAnalytics.DeleteDatasetContent

-- | <i>See:</i> <a>newDeleteDatasetContent</a> smart constructor.
data DeleteDatasetContent
DeleteDatasetContent' :: Maybe Text -> Text -> DeleteDatasetContent

-- | The version of the dataset whose content is deleted. You can also use
--   the strings "$LATEST" or "$LATEST_SUCCEEDED" to delete the latest or
--   latest successfully completed data set. If not specified,
--   "$LATEST_SUCCEEDED" is the default.
[$sel:versionId:DeleteDatasetContent'] :: DeleteDatasetContent -> Maybe Text

-- | The name of the dataset whose content is deleted.
[$sel:datasetName:DeleteDatasetContent'] :: DeleteDatasetContent -> Text

-- | Create a value of <a>DeleteDatasetContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:DeleteDatasetContent'</a>,
--   <a>deleteDatasetContent_versionId</a> - The version of the dataset
--   whose content is deleted. You can also use the strings "$LATEST" or
--   "$LATEST_SUCCEEDED" to delete the latest or latest successfully
--   completed data set. If not specified, "$LATEST_SUCCEEDED" is the
--   default.
--   
--   <a>$sel:datasetName:DeleteDatasetContent'</a>,
--   <a>deleteDatasetContent_datasetName</a> - The name of the dataset
--   whose content is deleted.
newDeleteDatasetContent :: Text -> DeleteDatasetContent

-- | The version of the dataset whose content is deleted. You can also use
--   the strings "$LATEST" or "$LATEST_SUCCEEDED" to delete the latest or
--   latest successfully completed data set. If not specified,
--   "$LATEST_SUCCEEDED" is the default.
deleteDatasetContent_versionId :: Lens' DeleteDatasetContent (Maybe Text)

-- | The name of the dataset whose content is deleted.
deleteDatasetContent_datasetName :: Lens' DeleteDatasetContent Text

-- | <i>See:</i> <a>newDeleteDatasetContentResponse</a> smart constructor.
data DeleteDatasetContentResponse
DeleteDatasetContentResponse' :: DeleteDatasetContentResponse

-- | Create a value of <a>DeleteDatasetContentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatasetContentResponse :: DeleteDatasetContentResponse
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContent
instance GHC.Show.Show Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContent
instance GHC.Read.Read Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContent
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContent
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContentResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContentResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContentResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContentResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContent
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContentResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContent
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContent
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContent
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContent
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.DeleteDatasetContent.DeleteDatasetContent


-- | Deletes the specified dataset.
--   
--   You do not have to delete the content of the dataset before you
--   perform this operation.
module Amazonka.IoTAnalytics.DeleteDataset

-- | <i>See:</i> <a>newDeleteDataset</a> smart constructor.
data DeleteDataset
DeleteDataset' :: Text -> DeleteDataset

-- | The name of the dataset to delete.
[$sel:datasetName:DeleteDataset'] :: DeleteDataset -> Text

-- | Create a value of <a>DeleteDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:DeleteDataset'</a>,
--   <a>deleteDataset_datasetName</a> - The name of the dataset to delete.
newDeleteDataset :: Text -> DeleteDataset

-- | The name of the dataset to delete.
deleteDataset_datasetName :: Lens' DeleteDataset Text

-- | <i>See:</i> <a>newDeleteDatasetResponse</a> smart constructor.
data DeleteDatasetResponse
DeleteDatasetResponse' :: DeleteDatasetResponse

-- | Create a value of <a>DeleteDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatasetResponse :: DeleteDatasetResponse
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DeleteDataset.DeleteDataset
instance GHC.Show.Show Amazonka.IoTAnalytics.DeleteDataset.DeleteDataset
instance GHC.Read.Read Amazonka.IoTAnalytics.DeleteDataset.DeleteDataset
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DeleteDataset.DeleteDataset
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DeleteDataset.DeleteDatasetResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.DeleteDataset.DeleteDatasetResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.DeleteDataset.DeleteDatasetResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DeleteDataset.DeleteDatasetResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.DeleteDataset.DeleteDataset
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DeleteDataset.DeleteDatasetResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.DeleteDataset.DeleteDataset
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DeleteDataset.DeleteDataset
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.DeleteDataset.DeleteDataset
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.DeleteDataset.DeleteDataset
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.DeleteDataset.DeleteDataset


-- | Deletes the specified channel.
module Amazonka.IoTAnalytics.DeleteChannel

-- | <i>See:</i> <a>newDeleteChannel</a> smart constructor.
data DeleteChannel
DeleteChannel' :: Text -> DeleteChannel

-- | The name of the channel to delete.
[$sel:channelName:DeleteChannel'] :: DeleteChannel -> Text

-- | Create a value of <a>DeleteChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DeleteChannel'</a>,
--   <a>deleteChannel_channelName</a> - The name of the channel to delete.
newDeleteChannel :: Text -> DeleteChannel

-- | The name of the channel to delete.
deleteChannel_channelName :: Lens' DeleteChannel Text

-- | <i>See:</i> <a>newDeleteChannelResponse</a> smart constructor.
data DeleteChannelResponse
DeleteChannelResponse' :: DeleteChannelResponse

-- | Create a value of <a>DeleteChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelResponse :: DeleteChannelResponse
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DeleteChannel.DeleteChannel
instance GHC.Show.Show Amazonka.IoTAnalytics.DeleteChannel.DeleteChannel
instance GHC.Read.Read Amazonka.IoTAnalytics.DeleteChannel.DeleteChannel
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DeleteChannel.DeleteChannel
instance GHC.Generics.Generic Amazonka.IoTAnalytics.DeleteChannel.DeleteChannelResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.DeleteChannel.DeleteChannelResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.DeleteChannel.DeleteChannelResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.DeleteChannel.DeleteChannelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.DeleteChannel.DeleteChannel
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DeleteChannel.DeleteChannelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.DeleteChannel.DeleteChannel
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.DeleteChannel.DeleteChannel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.DeleteChannel.DeleteChannel
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.DeleteChannel.DeleteChannel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.DeleteChannel.DeleteChannel


-- | Creates a pipeline. A pipeline consumes messages from a channel and
--   allows you to process the messages before storing them in a data
--   store. You must specify both a <tt>channel</tt> and a
--   <tt>datastore</tt> activity and, optionally, as many as 23 additional
--   activities in the <tt>pipelineActivities</tt> array.
module Amazonka.IoTAnalytics.CreatePipeline

-- | <i>See:</i> <a>newCreatePipeline</a> smart constructor.
data CreatePipeline
CreatePipeline' :: Maybe (NonEmpty Tag) -> Text -> NonEmpty PipelineActivity -> CreatePipeline

-- | Metadata which can be used to manage the pipeline.
[$sel:tags:CreatePipeline'] :: CreatePipeline -> Maybe (NonEmpty Tag)

-- | The name of the pipeline.
[$sel:pipelineName:CreatePipeline'] :: CreatePipeline -> Text

-- | A list of <tt>PipelineActivity</tt> objects. Activities perform
--   transformations on your messages, such as removing, renaming or adding
--   message attributes; filtering messages based on attribute values;
--   invoking your Lambda unctions on messages for advanced processing; or
--   performing mathematical transformations to normalize device data.
--   
--   The list can be 2-25 <tt>PipelineActivity</tt> objects and must
--   contain both a <tt>channel</tt> and a <tt>datastore</tt> activity.
--   Each entry in the list must contain only one activity. For example:
--   
--   <pre>
--   pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]
--   </pre>
[$sel:pipelineActivities:CreatePipeline'] :: CreatePipeline -> NonEmpty PipelineActivity

-- | Create a value of <a>CreatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreatePipeline'</a>, <a>createPipeline_tags</a> -
--   Metadata which can be used to manage the pipeline.
--   
--   <a>$sel:pipelineName:CreatePipeline'</a>,
--   <a>createPipeline_pipelineName</a> - The name of the pipeline.
--   
--   <a>$sel:pipelineActivities:CreatePipeline'</a>,
--   <a>createPipeline_pipelineActivities</a> - A list of
--   <tt>PipelineActivity</tt> objects. Activities perform transformations
--   on your messages, such as removing, renaming or adding message
--   attributes; filtering messages based on attribute values; invoking
--   your Lambda unctions on messages for advanced processing; or
--   performing mathematical transformations to normalize device data.
--   
--   The list can be 2-25 <tt>PipelineActivity</tt> objects and must
--   contain both a <tt>channel</tt> and a <tt>datastore</tt> activity.
--   Each entry in the list must contain only one activity. For example:
--   
--   <pre>
--   pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]
--   </pre>
newCreatePipeline :: Text -> NonEmpty PipelineActivity -> CreatePipeline

-- | Metadata which can be used to manage the pipeline.
createPipeline_tags :: Lens' CreatePipeline (Maybe (NonEmpty Tag))

-- | The name of the pipeline.
createPipeline_pipelineName :: Lens' CreatePipeline Text

-- | A list of <tt>PipelineActivity</tt> objects. Activities perform
--   transformations on your messages, such as removing, renaming or adding
--   message attributes; filtering messages based on attribute values;
--   invoking your Lambda unctions on messages for advanced processing; or
--   performing mathematical transformations to normalize device data.
--   
--   The list can be 2-25 <tt>PipelineActivity</tt> objects and must
--   contain both a <tt>channel</tt> and a <tt>datastore</tt> activity.
--   Each entry in the list must contain only one activity. For example:
--   
--   <pre>
--   pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]
--   </pre>
createPipeline_pipelineActivities :: Lens' CreatePipeline (NonEmpty PipelineActivity)

-- | <i>See:</i> <a>newCreatePipelineResponse</a> smart constructor.
data CreatePipelineResponse
CreatePipelineResponse' :: Maybe Text -> Maybe Text -> Int -> CreatePipelineResponse

-- | The name of the pipeline.
[$sel:pipelineName:CreatePipelineResponse'] :: CreatePipelineResponse -> Maybe Text

-- | The ARN of the pipeline.
[$sel:pipelineArn:CreatePipelineResponse'] :: CreatePipelineResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreatePipelineResponse'] :: CreatePipelineResponse -> Int

-- | Create a value of <a>CreatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:CreatePipeline'</a>,
--   <a>createPipelineResponse_pipelineName</a> - The name of the pipeline.
--   
--   <a>$sel:pipelineArn:CreatePipelineResponse'</a>,
--   <a>createPipelineResponse_pipelineArn</a> - The ARN of the pipeline.
--   
--   <a>$sel:httpStatus:CreatePipelineResponse'</a>,
--   <a>createPipelineResponse_httpStatus</a> - The response's http status
--   code.
newCreatePipelineResponse :: Int -> CreatePipelineResponse

-- | The name of the pipeline.
createPipelineResponse_pipelineName :: Lens' CreatePipelineResponse (Maybe Text)

-- | The ARN of the pipeline.
createPipelineResponse_pipelineArn :: Lens' CreatePipelineResponse (Maybe Text)

-- | The response's http status code.
createPipelineResponse_httpStatus :: Lens' CreatePipelineResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CreatePipeline.CreatePipeline
instance GHC.Show.Show Amazonka.IoTAnalytics.CreatePipeline.CreatePipeline
instance GHC.Read.Read Amazonka.IoTAnalytics.CreatePipeline.CreatePipeline
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CreatePipeline.CreatePipeline
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CreatePipeline.CreatePipelineResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.CreatePipeline.CreatePipelineResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.CreatePipeline.CreatePipelineResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CreatePipeline.CreatePipelineResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.CreatePipeline.CreatePipeline
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CreatePipeline.CreatePipelineResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.CreatePipeline.CreatePipeline
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CreatePipeline.CreatePipeline
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.CreatePipeline.CreatePipeline
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.CreatePipeline.CreatePipeline
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.CreatePipeline.CreatePipeline
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.CreatePipeline.CreatePipeline


-- | Creates a data store, which is a repository for messages.
module Amazonka.IoTAnalytics.CreateDatastore

-- | <i>See:</i> <a>newCreateDatastore</a> smart constructor.
data CreateDatastore
CreateDatastore' :: Maybe FileFormatConfiguration -> Maybe DatastorePartitions -> Maybe RetentionPeriod -> Maybe DatastoreStorage -> Maybe (NonEmpty Tag) -> Text -> CreateDatastore

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
[$sel:fileFormatConfiguration:CreateDatastore'] :: CreateDatastore -> Maybe FileFormatConfiguration

-- | Contains information about the partition dimensions in a data store.
[$sel:datastorePartitions:CreateDatastore'] :: CreateDatastore -> Maybe DatastorePartitions

-- | How long, in days, message data is kept for the data store. When
--   <tt>customerManagedS3</tt> storage is selected, this parameter is
--   ignored.
[$sel:retentionPeriod:CreateDatastore'] :: CreateDatastore -> Maybe RetentionPeriod

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
[$sel:datastoreStorage:CreateDatastore'] :: CreateDatastore -> Maybe DatastoreStorage

-- | Metadata which can be used to manage the data store.
[$sel:tags:CreateDatastore'] :: CreateDatastore -> Maybe (NonEmpty Tag)

-- | The name of the data store.
[$sel:datastoreName:CreateDatastore'] :: CreateDatastore -> Text

-- | Create a value of <a>CreateDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileFormatConfiguration:CreateDatastore'</a>,
--   <a>createDatastore_fileFormatConfiguration</a> - Contains the
--   configuration information of file formats. IoT Analytics data stores
--   support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
--   
--   <a>$sel:datastorePartitions:CreateDatastore'</a>,
--   <a>createDatastore_datastorePartitions</a> - Contains information
--   about the partition dimensions in a data store.
--   
--   <a>$sel:retentionPeriod:CreateDatastore'</a>,
--   <a>createDatastore_retentionPeriod</a> - How long, in days, message
--   data is kept for the data store. When <tt>customerManagedS3</tt>
--   storage is selected, this parameter is ignored.
--   
--   <a>$sel:datastoreStorage:CreateDatastore'</a>,
--   <a>createDatastore_datastoreStorage</a> - Where data in a data store
--   is stored.. You can choose <tt>serviceManagedS3</tt> storage,
--   <tt>customerManagedS3</tt> storage, or
--   <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
--   
--   <a>$sel:tags:CreateDatastore'</a>, <a>createDatastore_tags</a> -
--   Metadata which can be used to manage the data store.
--   
--   <a>$sel:datastoreName:CreateDatastore'</a>,
--   <a>createDatastore_datastoreName</a> - The name of the data store.
newCreateDatastore :: Text -> CreateDatastore

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
createDatastore_fileFormatConfiguration :: Lens' CreateDatastore (Maybe FileFormatConfiguration)

-- | Contains information about the partition dimensions in a data store.
createDatastore_datastorePartitions :: Lens' CreateDatastore (Maybe DatastorePartitions)

-- | How long, in days, message data is kept for the data store. When
--   <tt>customerManagedS3</tt> storage is selected, this parameter is
--   ignored.
createDatastore_retentionPeriod :: Lens' CreateDatastore (Maybe RetentionPeriod)

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
createDatastore_datastoreStorage :: Lens' CreateDatastore (Maybe DatastoreStorage)

-- | Metadata which can be used to manage the data store.
createDatastore_tags :: Lens' CreateDatastore (Maybe (NonEmpty Tag))

-- | The name of the data store.
createDatastore_datastoreName :: Lens' CreateDatastore Text

-- | <i>See:</i> <a>newCreateDatastoreResponse</a> smart constructor.
data CreateDatastoreResponse
CreateDatastoreResponse' :: Maybe Text -> Maybe Text -> Maybe RetentionPeriod -> Int -> CreateDatastoreResponse

-- | The ARN of the data store.
[$sel:datastoreArn:CreateDatastoreResponse'] :: CreateDatastoreResponse -> Maybe Text

-- | The name of the data store.
[$sel:datastoreName:CreateDatastoreResponse'] :: CreateDatastoreResponse -> Maybe Text

-- | How long, in days, message data is kept for the data store.
[$sel:retentionPeriod:CreateDatastoreResponse'] :: CreateDatastoreResponse -> Maybe RetentionPeriod

-- | The response's http status code.
[$sel:httpStatus:CreateDatastoreResponse'] :: CreateDatastoreResponse -> Int

-- | Create a value of <a>CreateDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreArn:CreateDatastoreResponse'</a>,
--   <a>createDatastoreResponse_datastoreArn</a> - The ARN of the data
--   store.
--   
--   <a>$sel:datastoreName:CreateDatastore'</a>,
--   <a>createDatastoreResponse_datastoreName</a> - The name of the data
--   store.
--   
--   <a>$sel:retentionPeriod:CreateDatastore'</a>,
--   <a>createDatastoreResponse_retentionPeriod</a> - How long, in days,
--   message data is kept for the data store.
--   
--   <a>$sel:httpStatus:CreateDatastoreResponse'</a>,
--   <a>createDatastoreResponse_httpStatus</a> - The response's http status
--   code.
newCreateDatastoreResponse :: Int -> CreateDatastoreResponse

-- | The ARN of the data store.
createDatastoreResponse_datastoreArn :: Lens' CreateDatastoreResponse (Maybe Text)

-- | The name of the data store.
createDatastoreResponse_datastoreName :: Lens' CreateDatastoreResponse (Maybe Text)

-- | How long, in days, message data is kept for the data store.
createDatastoreResponse_retentionPeriod :: Lens' CreateDatastoreResponse (Maybe RetentionPeriod)

-- | The response's http status code.
createDatastoreResponse_httpStatus :: Lens' CreateDatastoreResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CreateDatastore.CreateDatastore
instance GHC.Show.Show Amazonka.IoTAnalytics.CreateDatastore.CreateDatastore
instance GHC.Read.Read Amazonka.IoTAnalytics.CreateDatastore.CreateDatastore
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CreateDatastore.CreateDatastore
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CreateDatastore.CreateDatastoreResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.CreateDatastore.CreateDatastoreResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.CreateDatastore.CreateDatastoreResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CreateDatastore.CreateDatastoreResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.CreateDatastore.CreateDatastore
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CreateDatastore.CreateDatastoreResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.CreateDatastore.CreateDatastore
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CreateDatastore.CreateDatastore
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.CreateDatastore.CreateDatastore
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.CreateDatastore.CreateDatastore
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.CreateDatastore.CreateDatastore
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.CreateDatastore.CreateDatastore


-- | Creates the content of a dataset by applying a <tt>queryAction</tt> (a
--   SQL query) or a <tt>containerAction</tt> (executing a containerized
--   application).
module Amazonka.IoTAnalytics.CreateDatasetContent

-- | <i>See:</i> <a>newCreateDatasetContent</a> smart constructor.
data CreateDatasetContent
CreateDatasetContent' :: Maybe Text -> Text -> CreateDatasetContent

-- | The version ID of the dataset content. To specify <tt>versionId</tt>
--   for a dataset content, the dataset must use a <a>DeltaTimer</a>
--   filter.
[$sel:versionId:CreateDatasetContent'] :: CreateDatasetContent -> Maybe Text

-- | The name of the dataset.
[$sel:datasetName:CreateDatasetContent'] :: CreateDatasetContent -> Text

-- | Create a value of <a>CreateDatasetContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:CreateDatasetContent'</a>,
--   <a>createDatasetContent_versionId</a> - The version ID of the dataset
--   content. To specify <tt>versionId</tt> for a dataset content, the
--   dataset must use a <a>DeltaTimer</a> filter.
--   
--   <a>$sel:datasetName:CreateDatasetContent'</a>,
--   <a>createDatasetContent_datasetName</a> - The name of the dataset.
newCreateDatasetContent :: Text -> CreateDatasetContent

-- | The version ID of the dataset content. To specify <tt>versionId</tt>
--   for a dataset content, the dataset must use a <a>DeltaTimer</a>
--   filter.
createDatasetContent_versionId :: Lens' CreateDatasetContent (Maybe Text)

-- | The name of the dataset.
createDatasetContent_datasetName :: Lens' CreateDatasetContent Text

-- | <i>See:</i> <a>newCreateDatasetContentResponse</a> smart constructor.
data CreateDatasetContentResponse
CreateDatasetContentResponse' :: Maybe Text -> Int -> CreateDatasetContentResponse

-- | The version ID of the dataset contents that are being created.
[$sel:versionId:CreateDatasetContentResponse'] :: CreateDatasetContentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDatasetContentResponse'] :: CreateDatasetContentResponse -> Int

-- | Create a value of <a>CreateDatasetContentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:CreateDatasetContent'</a>,
--   <a>createDatasetContentResponse_versionId</a> - The version ID of the
--   dataset contents that are being created.
--   
--   <a>$sel:httpStatus:CreateDatasetContentResponse'</a>,
--   <a>createDatasetContentResponse_httpStatus</a> - The response's http
--   status code.
newCreateDatasetContentResponse :: Int -> CreateDatasetContentResponse

-- | The version ID of the dataset contents that are being created.
createDatasetContentResponse_versionId :: Lens' CreateDatasetContentResponse (Maybe Text)

-- | The response's http status code.
createDatasetContentResponse_httpStatus :: Lens' CreateDatasetContentResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContent
instance GHC.Show.Show Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContent
instance GHC.Read.Read Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContent
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContent
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContentResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContentResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContentResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContentResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContent
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContentResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContent
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContent
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContent
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContent
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.CreateDatasetContent.CreateDatasetContent


-- | Used to create a dataset. A dataset stores data retrieved from a data
--   store by applying a <tt>queryAction</tt> (a SQL query) or a
--   <tt>containerAction</tt> (executing a containerized application). This
--   operation creates the skeleton of a dataset. The dataset can be
--   populated manually by calling <tt>CreateDatasetContent</tt> or
--   automatically according to a trigger you specify.
module Amazonka.IoTAnalytics.CreateDataset

-- | <i>See:</i> <a>newCreateDataset</a> smart constructor.
data CreateDataset
CreateDataset' :: Maybe VersioningConfiguration -> Maybe [DatasetTrigger] -> Maybe RetentionPeriod -> Maybe (NonEmpty LateDataRule) -> Maybe [DatasetContentDeliveryRule] -> Maybe (NonEmpty Tag) -> Text -> NonEmpty DatasetAction -> CreateDataset

-- | Optional. How many versions of dataset contents are kept. If not
--   specified or set to null, only the latest version plus the latest
--   succeeded version (if they are different) are kept for the time period
--   specified by the <tt>retentionPeriod</tt> parameter. For more
--   information, see <a>Keeping Multiple Versions of IoT Analytics
--   datasets</a> in the <i>IoT Analytics User Guide</i>.
[$sel:versioningConfiguration:CreateDataset'] :: CreateDataset -> Maybe VersioningConfiguration

-- | A list of triggers. A trigger causes dataset contents to be populated
--   at a specified time interval or when another dataset's contents are
--   created. The list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects.
[$sel:triggers:CreateDataset'] :: CreateDataset -> Maybe [DatasetTrigger]

-- | Optional. How long, in days, versions of dataset contents are kept for
--   the dataset. If not specified or set to <tt>null</tt>, versions of
--   dataset contents are retained for at most 90 days. The number of
--   versions of dataset contents retained is determined by the
--   <tt>versioningConfiguration</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
[$sel:retentionPeriod:CreateDataset'] :: CreateDataset -> Maybe RetentionPeriod

-- | A list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
[$sel:lateDataRules:CreateDataset'] :: CreateDataset -> Maybe (NonEmpty LateDataRule)

-- | When dataset contents are created, they are delivered to destinations
--   specified here.
[$sel:contentDeliveryRules:CreateDataset'] :: CreateDataset -> Maybe [DatasetContentDeliveryRule]

-- | Metadata which can be used to manage the dataset.
[$sel:tags:CreateDataset'] :: CreateDataset -> Maybe (NonEmpty Tag)

-- | The name of the dataset.
[$sel:datasetName:CreateDataset'] :: CreateDataset -> Text

-- | A list of actions that create the dataset contents.
[$sel:actions:CreateDataset'] :: CreateDataset -> NonEmpty DatasetAction

-- | Create a value of <a>CreateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versioningConfiguration:CreateDataset'</a>,
--   <a>createDataset_versioningConfiguration</a> - Optional. How many
--   versions of dataset contents are kept. If not specified or set to
--   null, only the latest version plus the latest succeeded version (if
--   they are different) are kept for the time period specified by the
--   <tt>retentionPeriod</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
--   
--   <a>$sel:triggers:CreateDataset'</a>, <a>createDataset_triggers</a> - A
--   list of triggers. A trigger causes dataset contents to be populated at
--   a specified time interval or when another dataset's contents are
--   created. The list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects.
--   
--   <a>$sel:retentionPeriod:CreateDataset'</a>,
--   <a>createDataset_retentionPeriod</a> - Optional. How long, in days,
--   versions of dataset contents are kept for the dataset. If not
--   specified or set to <tt>null</tt>, versions of dataset contents are
--   retained for at most 90 days. The number of versions of dataset
--   contents retained is determined by the
--   <tt>versioningConfiguration</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
--   
--   <a>$sel:lateDataRules:CreateDataset'</a>,
--   <a>createDataset_lateDataRules</a> - A list of data rules that send
--   notifications to CloudWatch, when data arrives late. To specify
--   <tt>lateDataRules</tt>, the dataset must use a <a>DeltaTimer</a>
--   filter.
--   
--   <a>$sel:contentDeliveryRules:CreateDataset'</a>,
--   <a>createDataset_contentDeliveryRules</a> - When dataset contents are
--   created, they are delivered to destinations specified here.
--   
--   <a>$sel:tags:CreateDataset'</a>, <a>createDataset_tags</a> - Metadata
--   which can be used to manage the dataset.
--   
--   <a>$sel:datasetName:CreateDataset'</a>,
--   <a>createDataset_datasetName</a> - The name of the dataset.
--   
--   <a>$sel:actions:CreateDataset'</a>, <a>createDataset_actions</a> - A
--   list of actions that create the dataset contents.
newCreateDataset :: Text -> NonEmpty DatasetAction -> CreateDataset

-- | Optional. How many versions of dataset contents are kept. If not
--   specified or set to null, only the latest version plus the latest
--   succeeded version (if they are different) are kept for the time period
--   specified by the <tt>retentionPeriod</tt> parameter. For more
--   information, see <a>Keeping Multiple Versions of IoT Analytics
--   datasets</a> in the <i>IoT Analytics User Guide</i>.
createDataset_versioningConfiguration :: Lens' CreateDataset (Maybe VersioningConfiguration)

-- | A list of triggers. A trigger causes dataset contents to be populated
--   at a specified time interval or when another dataset's contents are
--   created. The list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects.
createDataset_triggers :: Lens' CreateDataset (Maybe [DatasetTrigger])

-- | Optional. How long, in days, versions of dataset contents are kept for
--   the dataset. If not specified or set to <tt>null</tt>, versions of
--   dataset contents are retained for at most 90 days. The number of
--   versions of dataset contents retained is determined by the
--   <tt>versioningConfiguration</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
createDataset_retentionPeriod :: Lens' CreateDataset (Maybe RetentionPeriod)

-- | A list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
createDataset_lateDataRules :: Lens' CreateDataset (Maybe (NonEmpty LateDataRule))

-- | When dataset contents are created, they are delivered to destinations
--   specified here.
createDataset_contentDeliveryRules :: Lens' CreateDataset (Maybe [DatasetContentDeliveryRule])

-- | Metadata which can be used to manage the dataset.
createDataset_tags :: Lens' CreateDataset (Maybe (NonEmpty Tag))

-- | The name of the dataset.
createDataset_datasetName :: Lens' CreateDataset Text

-- | A list of actions that create the dataset contents.
createDataset_actions :: Lens' CreateDataset (NonEmpty DatasetAction)

-- | <i>See:</i> <a>newCreateDatasetResponse</a> smart constructor.
data CreateDatasetResponse
CreateDatasetResponse' :: Maybe Text -> Maybe RetentionPeriod -> Maybe Text -> Int -> CreateDatasetResponse

-- | The ARN of the dataset.
[$sel:datasetArn:CreateDatasetResponse'] :: CreateDatasetResponse -> Maybe Text

-- | How long, in days, dataset contents are kept for the dataset.
[$sel:retentionPeriod:CreateDatasetResponse'] :: CreateDatasetResponse -> Maybe RetentionPeriod

-- | The name of the dataset.
[$sel:datasetName:CreateDatasetResponse'] :: CreateDatasetResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDatasetResponse'] :: CreateDatasetResponse -> Int

-- | Create a value of <a>CreateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_datasetArn</a> - The ARN of the dataset.
--   
--   <a>$sel:retentionPeriod:CreateDataset'</a>,
--   <a>createDatasetResponse_retentionPeriod</a> - How long, in days,
--   dataset contents are kept for the dataset.
--   
--   <a>$sel:datasetName:CreateDataset'</a>,
--   <a>createDatasetResponse_datasetName</a> - The name of the dataset.
--   
--   <a>$sel:httpStatus:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_httpStatus</a> - The response's http status
--   code.
newCreateDatasetResponse :: Int -> CreateDatasetResponse

-- | The ARN of the dataset.
createDatasetResponse_datasetArn :: Lens' CreateDatasetResponse (Maybe Text)

-- | How long, in days, dataset contents are kept for the dataset.
createDatasetResponse_retentionPeriod :: Lens' CreateDatasetResponse (Maybe RetentionPeriod)

-- | The name of the dataset.
createDatasetResponse_datasetName :: Lens' CreateDatasetResponse (Maybe Text)

-- | The response's http status code.
createDatasetResponse_httpStatus :: Lens' CreateDatasetResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CreateDataset.CreateDataset
instance GHC.Show.Show Amazonka.IoTAnalytics.CreateDataset.CreateDataset
instance GHC.Read.Read Amazonka.IoTAnalytics.CreateDataset.CreateDataset
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CreateDataset.CreateDataset
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CreateDataset.CreateDatasetResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.CreateDataset.CreateDatasetResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.CreateDataset.CreateDatasetResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CreateDataset.CreateDatasetResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.CreateDataset.CreateDataset
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CreateDataset.CreateDatasetResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.CreateDataset.CreateDataset
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CreateDataset.CreateDataset
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.CreateDataset.CreateDataset
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.CreateDataset.CreateDataset
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.CreateDataset.CreateDataset
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.CreateDataset.CreateDataset


-- | Used to create a channel. A channel collects data from an MQTT topic
--   and archives the raw, unprocessed messages before publishing the data
--   to a pipeline.
module Amazonka.IoTAnalytics.CreateChannel

-- | <i>See:</i> <a>newCreateChannel</a> smart constructor.
data CreateChannel
CreateChannel' :: Maybe RetentionPeriod -> Maybe ChannelStorage -> Maybe (NonEmpty Tag) -> Text -> CreateChannel

-- | How long, in days, message data is kept for the channel. When
--   <tt>customerManagedS3</tt> storage is selected, this parameter is
--   ignored.
[$sel:retentionPeriod:CreateChannel'] :: CreateChannel -> Maybe RetentionPeriod

-- | Where channel data is stored. You can choose one of
--   <tt>serviceManagedS3</tt> or <tt>customerManagedS3</tt> storage. If
--   not specified, the default is <tt>serviceManagedS3</tt>. You can't
--   change this storage option after the channel is created.
[$sel:channelStorage:CreateChannel'] :: CreateChannel -> Maybe ChannelStorage

-- | Metadata which can be used to manage the channel.
[$sel:tags:CreateChannel'] :: CreateChannel -> Maybe (NonEmpty Tag)

-- | The name of the channel.
[$sel:channelName:CreateChannel'] :: CreateChannel -> Text

-- | Create a value of <a>CreateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retentionPeriod:CreateChannel'</a>,
--   <a>createChannel_retentionPeriod</a> - How long, in days, message data
--   is kept for the channel. When <tt>customerManagedS3</tt> storage is
--   selected, this parameter is ignored.
--   
--   <a>$sel:channelStorage:CreateChannel'</a>,
--   <a>createChannel_channelStorage</a> - Where channel data is stored.
--   You can choose one of <tt>serviceManagedS3</tt> or
--   <tt>customerManagedS3</tt> storage. If not specified, the default is
--   <tt>serviceManagedS3</tt>. You can't change this storage option after
--   the channel is created.
--   
--   <a>$sel:tags:CreateChannel'</a>, <a>createChannel_tags</a> - Metadata
--   which can be used to manage the channel.
--   
--   <a>$sel:channelName:CreateChannel'</a>,
--   <a>createChannel_channelName</a> - The name of the channel.
newCreateChannel :: Text -> CreateChannel

-- | How long, in days, message data is kept for the channel. When
--   <tt>customerManagedS3</tt> storage is selected, this parameter is
--   ignored.
createChannel_retentionPeriod :: Lens' CreateChannel (Maybe RetentionPeriod)

-- | Where channel data is stored. You can choose one of
--   <tt>serviceManagedS3</tt> or <tt>customerManagedS3</tt> storage. If
--   not specified, the default is <tt>serviceManagedS3</tt>. You can't
--   change this storage option after the channel is created.
createChannel_channelStorage :: Lens' CreateChannel (Maybe ChannelStorage)

-- | Metadata which can be used to manage the channel.
createChannel_tags :: Lens' CreateChannel (Maybe (NonEmpty Tag))

-- | The name of the channel.
createChannel_channelName :: Lens' CreateChannel Text

-- | <i>See:</i> <a>newCreateChannelResponse</a> smart constructor.
data CreateChannelResponse
CreateChannelResponse' :: Maybe Text -> Maybe RetentionPeriod -> Maybe Text -> Int -> CreateChannelResponse

-- | The ARN of the channel.
[$sel:channelArn:CreateChannelResponse'] :: CreateChannelResponse -> Maybe Text

-- | How long, in days, message data is kept for the channel.
[$sel:retentionPeriod:CreateChannelResponse'] :: CreateChannelResponse -> Maybe RetentionPeriod

-- | The name of the channel.
[$sel:channelName:CreateChannelResponse'] :: CreateChannelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateChannelResponse'] :: CreateChannelResponse -> Int

-- | Create a value of <a>CreateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelResponse'</a>,
--   <a>createChannelResponse_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:retentionPeriod:CreateChannel'</a>,
--   <a>createChannelResponse_retentionPeriod</a> - How long, in days,
--   message data is kept for the channel.
--   
--   <a>$sel:channelName:CreateChannel'</a>,
--   <a>createChannelResponse_channelName</a> - The name of the channel.
--   
--   <a>$sel:httpStatus:CreateChannelResponse'</a>,
--   <a>createChannelResponse_httpStatus</a> - The response's http status
--   code.
newCreateChannelResponse :: Int -> CreateChannelResponse

-- | The ARN of the channel.
createChannelResponse_channelArn :: Lens' CreateChannelResponse (Maybe Text)

-- | How long, in days, message data is kept for the channel.
createChannelResponse_retentionPeriod :: Lens' CreateChannelResponse (Maybe RetentionPeriod)

-- | The name of the channel.
createChannelResponse_channelName :: Lens' CreateChannelResponse (Maybe Text)

-- | The response's http status code.
createChannelResponse_httpStatus :: Lens' CreateChannelResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CreateChannel.CreateChannel
instance GHC.Show.Show Amazonka.IoTAnalytics.CreateChannel.CreateChannel
instance GHC.Read.Read Amazonka.IoTAnalytics.CreateChannel.CreateChannel
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CreateChannel.CreateChannel
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CreateChannel.CreateChannelResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.CreateChannel.CreateChannelResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.CreateChannel.CreateChannelResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CreateChannel.CreateChannelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.CreateChannel.CreateChannel
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CreateChannel.CreateChannelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.CreateChannel.CreateChannel
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CreateChannel.CreateChannel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.CreateChannel.CreateChannel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.CreateChannel.CreateChannel
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.CreateChannel.CreateChannel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.CreateChannel.CreateChannel


-- | Cancels the reprocessing of data through the pipeline.
module Amazonka.IoTAnalytics.CancelPipelineReprocessing

-- | <i>See:</i> <a>newCancelPipelineReprocessing</a> smart constructor.
data CancelPipelineReprocessing
CancelPipelineReprocessing' :: Text -> Text -> CancelPipelineReprocessing

-- | The name of pipeline for which data reprocessing is canceled.
[$sel:pipelineName:CancelPipelineReprocessing'] :: CancelPipelineReprocessing -> Text

-- | The ID of the reprocessing task (returned by
--   <tt>StartPipelineReprocessing</tt>).
[$sel:reprocessingId:CancelPipelineReprocessing'] :: CancelPipelineReprocessing -> Text

-- | Create a value of <a>CancelPipelineReprocessing</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:CancelPipelineReprocessing'</a>,
--   <a>cancelPipelineReprocessing_pipelineName</a> - The name of pipeline
--   for which data reprocessing is canceled.
--   
--   <a>$sel:reprocessingId:CancelPipelineReprocessing'</a>,
--   <a>cancelPipelineReprocessing_reprocessingId</a> - The ID of the
--   reprocessing task (returned by <tt>StartPipelineReprocessing</tt>).
newCancelPipelineReprocessing :: Text -> Text -> CancelPipelineReprocessing

-- | The name of pipeline for which data reprocessing is canceled.
cancelPipelineReprocessing_pipelineName :: Lens' CancelPipelineReprocessing Text

-- | The ID of the reprocessing task (returned by
--   <tt>StartPipelineReprocessing</tt>).
cancelPipelineReprocessing_reprocessingId :: Lens' CancelPipelineReprocessing Text

-- | <i>See:</i> <a>newCancelPipelineReprocessingResponse</a> smart
--   constructor.
data CancelPipelineReprocessingResponse
CancelPipelineReprocessingResponse' :: Int -> CancelPipelineReprocessingResponse

-- | The response's http status code.
[$sel:httpStatus:CancelPipelineReprocessingResponse'] :: CancelPipelineReprocessingResponse -> Int

-- | Create a value of <a>CancelPipelineReprocessingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelPipelineReprocessingResponse'</a>,
--   <a>cancelPipelineReprocessingResponse_httpStatus</a> - The response's
--   http status code.
newCancelPipelineReprocessingResponse :: Int -> CancelPipelineReprocessingResponse

-- | The response's http status code.
cancelPipelineReprocessingResponse_httpStatus :: Lens' CancelPipelineReprocessingResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessing
instance GHC.Show.Show Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessing
instance GHC.Read.Read Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessing
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessing
instance GHC.Generics.Generic Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessingResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessingResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessingResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessingResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessing
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessingResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessing
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessing
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessing
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessing
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.CancelPipelineReprocessing.CancelPipelineReprocessing


-- | Sends messages to a channel.
module Amazonka.IoTAnalytics.BatchPutMessage

-- | <i>See:</i> <a>newBatchPutMessage</a> smart constructor.
data BatchPutMessage
BatchPutMessage' :: Text -> [Message] -> BatchPutMessage

-- | The name of the channel where the messages are sent.
[$sel:channelName:BatchPutMessage'] :: BatchPutMessage -> Text

-- | The list of messages to be sent. Each message has the format: {
--   "messageId": "string", "payload": "string"}.
--   
--   The field names of message payloads (data) that you send to IoT
--   Analytics:
--   
--   <ul>
--   <li>Must contain only alphanumeric characters and undescores (_). No
--   other special characters are allowed.</li>
--   <li>Must begin with an alphabetic character or single underscore
--   (_).</li>
--   <li>Cannot contain hyphens (-).</li>
--   <li>In regular expression terms:
--   "^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$".</li>
--   <li>Cannot be more than 255 characters.</li>
--   <li>Are case insensitive. (Fields named foo and FOO in the same
--   payload are considered duplicates.)</li>
--   </ul>
--   
--   For example, {"temp_01": 29} or {"_temp_01": 29} are valid, but
--   {"temp-01": 29}, {"01_temp": 29} or {"__temp_01": 29} are invalid in
--   message payloads.
[$sel:messages:BatchPutMessage'] :: BatchPutMessage -> [Message]

-- | Create a value of <a>BatchPutMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:BatchPutMessage'</a>,
--   <a>batchPutMessage_channelName</a> - The name of the channel where the
--   messages are sent.
--   
--   <a>$sel:messages:BatchPutMessage'</a>, <a>batchPutMessage_messages</a>
--   - The list of messages to be sent. Each message has the format: {
--   "messageId": "string", "payload": "string"}.
--   
--   The field names of message payloads (data) that you send to IoT
--   Analytics:
--   
--   <ul>
--   <li>Must contain only alphanumeric characters and undescores (_). No
--   other special characters are allowed.</li>
--   <li>Must begin with an alphabetic character or single underscore
--   (_).</li>
--   <li>Cannot contain hyphens (-).</li>
--   <li>In regular expression terms:
--   "^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$".</li>
--   <li>Cannot be more than 255 characters.</li>
--   <li>Are case insensitive. (Fields named foo and FOO in the same
--   payload are considered duplicates.)</li>
--   </ul>
--   
--   For example, {"temp_01": 29} or {"_temp_01": 29} are valid, but
--   {"temp-01": 29}, {"01_temp": 29} or {"__temp_01": 29} are invalid in
--   message payloads.
newBatchPutMessage :: Text -> BatchPutMessage

-- | The name of the channel where the messages are sent.
batchPutMessage_channelName :: Lens' BatchPutMessage Text

-- | The list of messages to be sent. Each message has the format: {
--   "messageId": "string", "payload": "string"}.
--   
--   The field names of message payloads (data) that you send to IoT
--   Analytics:
--   
--   <ul>
--   <li>Must contain only alphanumeric characters and undescores (_). No
--   other special characters are allowed.</li>
--   <li>Must begin with an alphabetic character or single underscore
--   (_).</li>
--   <li>Cannot contain hyphens (-).</li>
--   <li>In regular expression terms:
--   "^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$".</li>
--   <li>Cannot be more than 255 characters.</li>
--   <li>Are case insensitive. (Fields named foo and FOO in the same
--   payload are considered duplicates.)</li>
--   </ul>
--   
--   For example, {"temp_01": 29} or {"_temp_01": 29} are valid, but
--   {"temp-01": 29}, {"01_temp": 29} or {"__temp_01": 29} are invalid in
--   message payloads.
batchPutMessage_messages :: Lens' BatchPutMessage [Message]

-- | <i>See:</i> <a>newBatchPutMessageResponse</a> smart constructor.
data BatchPutMessageResponse
BatchPutMessageResponse' :: Maybe [BatchPutMessageErrorEntry] -> Int -> BatchPutMessageResponse

-- | A list of any errors encountered when sending the messages to the
--   channel.
[$sel:batchPutMessageErrorEntries:BatchPutMessageResponse'] :: BatchPutMessageResponse -> Maybe [BatchPutMessageErrorEntry]

-- | The response's http status code.
[$sel:httpStatus:BatchPutMessageResponse'] :: BatchPutMessageResponse -> Int

-- | Create a value of <a>BatchPutMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPutMessageErrorEntries:BatchPutMessageResponse'</a>,
--   <a>batchPutMessageResponse_batchPutMessageErrorEntries</a> - A list of
--   any errors encountered when sending the messages to the channel.
--   
--   <a>$sel:httpStatus:BatchPutMessageResponse'</a>,
--   <a>batchPutMessageResponse_httpStatus</a> - The response's http status
--   code.
newBatchPutMessageResponse :: Int -> BatchPutMessageResponse

-- | A list of any errors encountered when sending the messages to the
--   channel.
batchPutMessageResponse_batchPutMessageErrorEntries :: Lens' BatchPutMessageResponse (Maybe [BatchPutMessageErrorEntry])

-- | The response's http status code.
batchPutMessageResponse_httpStatus :: Lens' BatchPutMessageResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessage
instance GHC.Show.Show Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessage
instance GHC.Read.Read Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessage
instance GHC.Classes.Eq Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessage
instance GHC.Generics.Generic Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessageResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessageResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessageResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessageResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessage
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessageResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessage
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessage
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessage
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessage
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.BatchPutMessage.BatchPutMessage


-- | Removes the given tags (metadata) from the resource.
module Amazonka.IoTAnalytics.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The ARN of the resource whose tags you want to remove.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The keys of those tags which you want to remove.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the resource whose tags
--   you want to remove.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of those tags which you want to remove.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The ARN of the resource whose tags you want to remove.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of those tags which you want to remove.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.IoTAnalytics.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.IoTAnalytics.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.IoTAnalytics.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.IoTAnalytics.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.IoTAnalytics.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.UntagResource.UntagResource


-- | Used to update the settings of a channel.
module Amazonka.IoTAnalytics.UpdateChannel

-- | <i>See:</i> <a>newUpdateChannel</a> smart constructor.
data UpdateChannel
UpdateChannel' :: Maybe RetentionPeriod -> Maybe ChannelStorage -> Text -> UpdateChannel

-- | How long, in days, message data is kept for the channel. The retention
--   period can't be updated if the channel's Amazon S3 storage is
--   customer-managed.
[$sel:retentionPeriod:UpdateChannel'] :: UpdateChannel -> Maybe RetentionPeriod

-- | Where channel data is stored. You can choose one of
--   <tt>serviceManagedS3</tt> or <tt>customerManagedS3</tt> storage. If
--   not specified, the default is <tt>serviceManagedS3</tt>. You can't
--   change this storage option after the channel is created.
[$sel:channelStorage:UpdateChannel'] :: UpdateChannel -> Maybe ChannelStorage

-- | The name of the channel to be updated.
[$sel:channelName:UpdateChannel'] :: UpdateChannel -> Text

-- | Create a value of <a>UpdateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retentionPeriod:UpdateChannel'</a>,
--   <a>updateChannel_retentionPeriod</a> - How long, in days, message data
--   is kept for the channel. The retention period can't be updated if the
--   channel's Amazon S3 storage is customer-managed.
--   
--   <a>$sel:channelStorage:UpdateChannel'</a>,
--   <a>updateChannel_channelStorage</a> - Where channel data is stored.
--   You can choose one of <tt>serviceManagedS3</tt> or
--   <tt>customerManagedS3</tt> storage. If not specified, the default is
--   <tt>serviceManagedS3</tt>. You can't change this storage option after
--   the channel is created.
--   
--   <a>$sel:channelName:UpdateChannel'</a>,
--   <a>updateChannel_channelName</a> - The name of the channel to be
--   updated.
newUpdateChannel :: Text -> UpdateChannel

-- | How long, in days, message data is kept for the channel. The retention
--   period can't be updated if the channel's Amazon S3 storage is
--   customer-managed.
updateChannel_retentionPeriod :: Lens' UpdateChannel (Maybe RetentionPeriod)

-- | Where channel data is stored. You can choose one of
--   <tt>serviceManagedS3</tt> or <tt>customerManagedS3</tt> storage. If
--   not specified, the default is <tt>serviceManagedS3</tt>. You can't
--   change this storage option after the channel is created.
updateChannel_channelStorage :: Lens' UpdateChannel (Maybe ChannelStorage)

-- | The name of the channel to be updated.
updateChannel_channelName :: Lens' UpdateChannel Text

-- | <i>See:</i> <a>newUpdateChannelResponse</a> smart constructor.
data UpdateChannelResponse
UpdateChannelResponse' :: UpdateChannelResponse

-- | Create a value of <a>UpdateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateChannelResponse :: UpdateChannelResponse
instance GHC.Generics.Generic Amazonka.IoTAnalytics.UpdateChannel.UpdateChannel
instance GHC.Show.Show Amazonka.IoTAnalytics.UpdateChannel.UpdateChannel
instance GHC.Read.Read Amazonka.IoTAnalytics.UpdateChannel.UpdateChannel
instance GHC.Classes.Eq Amazonka.IoTAnalytics.UpdateChannel.UpdateChannel
instance GHC.Generics.Generic Amazonka.IoTAnalytics.UpdateChannel.UpdateChannelResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.UpdateChannel.UpdateChannelResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.UpdateChannel.UpdateChannelResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.UpdateChannel.UpdateChannelResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.UpdateChannel.UpdateChannel
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.UpdateChannel.UpdateChannelResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.UpdateChannel.UpdateChannel
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.UpdateChannel.UpdateChannel
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.UpdateChannel.UpdateChannel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.UpdateChannel.UpdateChannel
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.UpdateChannel.UpdateChannel
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.UpdateChannel.UpdateChannel


-- | Updates the settings of a dataset.
module Amazonka.IoTAnalytics.UpdateDataset

-- | <i>See:</i> <a>newUpdateDataset</a> smart constructor.
data UpdateDataset
UpdateDataset' :: Maybe VersioningConfiguration -> Maybe [DatasetTrigger] -> Maybe RetentionPeriod -> Maybe (NonEmpty LateDataRule) -> Maybe [DatasetContentDeliveryRule] -> Text -> NonEmpty DatasetAction -> UpdateDataset

-- | Optional. How many versions of dataset contents are kept. If not
--   specified or set to null, only the latest version plus the latest
--   succeeded version (if they are different) are kept for the time period
--   specified by the <tt>retentionPeriod</tt> parameter. For more
--   information, see <a>Keeping Multiple Versions of IoT Analytics
--   datasets</a> in the <i>IoT Analytics User Guide</i>.
[$sel:versioningConfiguration:UpdateDataset'] :: UpdateDataset -> Maybe VersioningConfiguration

-- | A list of <tt>DatasetTrigger</tt> objects. The list can be empty or
--   can contain up to five <tt>DatasetTrigger</tt> objects.
[$sel:triggers:UpdateDataset'] :: UpdateDataset -> Maybe [DatasetTrigger]

-- | How long, in days, dataset contents are kept for the dataset.
[$sel:retentionPeriod:UpdateDataset'] :: UpdateDataset -> Maybe RetentionPeriod

-- | A list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
[$sel:lateDataRules:UpdateDataset'] :: UpdateDataset -> Maybe (NonEmpty LateDataRule)

-- | When dataset contents are created, they are delivered to destinations
--   specified here.
[$sel:contentDeliveryRules:UpdateDataset'] :: UpdateDataset -> Maybe [DatasetContentDeliveryRule]

-- | The name of the dataset to update.
[$sel:datasetName:UpdateDataset'] :: UpdateDataset -> Text

-- | A list of <tt>DatasetAction</tt> objects.
[$sel:actions:UpdateDataset'] :: UpdateDataset -> NonEmpty DatasetAction

-- | Create a value of <a>UpdateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versioningConfiguration:UpdateDataset'</a>,
--   <a>updateDataset_versioningConfiguration</a> - Optional. How many
--   versions of dataset contents are kept. If not specified or set to
--   null, only the latest version plus the latest succeeded version (if
--   they are different) are kept for the time period specified by the
--   <tt>retentionPeriod</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
--   
--   <a>$sel:triggers:UpdateDataset'</a>, <a>updateDataset_triggers</a> - A
--   list of <tt>DatasetTrigger</tt> objects. The list can be empty or can
--   contain up to five <tt>DatasetTrigger</tt> objects.
--   
--   <a>$sel:retentionPeriod:UpdateDataset'</a>,
--   <a>updateDataset_retentionPeriod</a> - How long, in days, dataset
--   contents are kept for the dataset.
--   
--   <a>$sel:lateDataRules:UpdateDataset'</a>,
--   <a>updateDataset_lateDataRules</a> - A list of data rules that send
--   notifications to CloudWatch, when data arrives late. To specify
--   <tt>lateDataRules</tt>, the dataset must use a <a>DeltaTimer</a>
--   filter.
--   
--   <a>$sel:contentDeliveryRules:UpdateDataset'</a>,
--   <a>updateDataset_contentDeliveryRules</a> - When dataset contents are
--   created, they are delivered to destinations specified here.
--   
--   <a>$sel:datasetName:UpdateDataset'</a>,
--   <a>updateDataset_datasetName</a> - The name of the dataset to update.
--   
--   <a>$sel:actions:UpdateDataset'</a>, <a>updateDataset_actions</a> - A
--   list of <tt>DatasetAction</tt> objects.
newUpdateDataset :: Text -> NonEmpty DatasetAction -> UpdateDataset

-- | Optional. How many versions of dataset contents are kept. If not
--   specified or set to null, only the latest version plus the latest
--   succeeded version (if they are different) are kept for the time period
--   specified by the <tt>retentionPeriod</tt> parameter. For more
--   information, see <a>Keeping Multiple Versions of IoT Analytics
--   datasets</a> in the <i>IoT Analytics User Guide</i>.
updateDataset_versioningConfiguration :: Lens' UpdateDataset (Maybe VersioningConfiguration)

-- | A list of <tt>DatasetTrigger</tt> objects. The list can be empty or
--   can contain up to five <tt>DatasetTrigger</tt> objects.
updateDataset_triggers :: Lens' UpdateDataset (Maybe [DatasetTrigger])

-- | How long, in days, dataset contents are kept for the dataset.
updateDataset_retentionPeriod :: Lens' UpdateDataset (Maybe RetentionPeriod)

-- | A list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
updateDataset_lateDataRules :: Lens' UpdateDataset (Maybe (NonEmpty LateDataRule))

-- | When dataset contents are created, they are delivered to destinations
--   specified here.
updateDataset_contentDeliveryRules :: Lens' UpdateDataset (Maybe [DatasetContentDeliveryRule])

-- | The name of the dataset to update.
updateDataset_datasetName :: Lens' UpdateDataset Text

-- | A list of <tt>DatasetAction</tt> objects.
updateDataset_actions :: Lens' UpdateDataset (NonEmpty DatasetAction)

-- | <i>See:</i> <a>newUpdateDatasetResponse</a> smart constructor.
data UpdateDatasetResponse
UpdateDatasetResponse' :: UpdateDatasetResponse

-- | Create a value of <a>UpdateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateDatasetResponse :: UpdateDatasetResponse
instance GHC.Generics.Generic Amazonka.IoTAnalytics.UpdateDataset.UpdateDataset
instance GHC.Show.Show Amazonka.IoTAnalytics.UpdateDataset.UpdateDataset
instance GHC.Read.Read Amazonka.IoTAnalytics.UpdateDataset.UpdateDataset
instance GHC.Classes.Eq Amazonka.IoTAnalytics.UpdateDataset.UpdateDataset
instance GHC.Generics.Generic Amazonka.IoTAnalytics.UpdateDataset.UpdateDatasetResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.UpdateDataset.UpdateDatasetResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.UpdateDataset.UpdateDatasetResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.UpdateDataset.UpdateDatasetResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.UpdateDataset.UpdateDataset
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.UpdateDataset.UpdateDatasetResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.UpdateDataset.UpdateDataset
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.UpdateDataset.UpdateDataset
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.UpdateDataset.UpdateDataset
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.UpdateDataset.UpdateDataset
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.UpdateDataset.UpdateDataset
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.UpdateDataset.UpdateDataset


-- | Used to update the settings of a data store.
module Amazonka.IoTAnalytics.UpdateDatastore

-- | <i>See:</i> <a>newUpdateDatastore</a> smart constructor.
data UpdateDatastore
UpdateDatastore' :: Maybe FileFormatConfiguration -> Maybe RetentionPeriod -> Maybe DatastoreStorage -> Text -> UpdateDatastore

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
[$sel:fileFormatConfiguration:UpdateDatastore'] :: UpdateDatastore -> Maybe FileFormatConfiguration

-- | How long, in days, message data is kept for the data store. The
--   retention period can't be updated if the data store's Amazon S3
--   storage is customer-managed.
[$sel:retentionPeriod:UpdateDatastore'] :: UpdateDatastore -> Maybe RetentionPeriod

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
[$sel:datastoreStorage:UpdateDatastore'] :: UpdateDatastore -> Maybe DatastoreStorage

-- | The name of the data store to be updated.
[$sel:datastoreName:UpdateDatastore'] :: UpdateDatastore -> Text

-- | Create a value of <a>UpdateDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileFormatConfiguration:UpdateDatastore'</a>,
--   <a>updateDatastore_fileFormatConfiguration</a> - Contains the
--   configuration information of file formats. IoT Analytics data stores
--   support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
--   
--   <a>$sel:retentionPeriod:UpdateDatastore'</a>,
--   <a>updateDatastore_retentionPeriod</a> - How long, in days, message
--   data is kept for the data store. The retention period can't be updated
--   if the data store's Amazon S3 storage is customer-managed.
--   
--   <a>$sel:datastoreStorage:UpdateDatastore'</a>,
--   <a>updateDatastore_datastoreStorage</a> - Where data in a data store
--   is stored.. You can choose <tt>serviceManagedS3</tt> storage,
--   <tt>customerManagedS3</tt> storage, or
--   <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
--   
--   <a>$sel:datastoreName:UpdateDatastore'</a>,
--   <a>updateDatastore_datastoreName</a> - The name of the data store to
--   be updated.
newUpdateDatastore :: Text -> UpdateDatastore

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
updateDatastore_fileFormatConfiguration :: Lens' UpdateDatastore (Maybe FileFormatConfiguration)

-- | How long, in days, message data is kept for the data store. The
--   retention period can't be updated if the data store's Amazon S3
--   storage is customer-managed.
updateDatastore_retentionPeriod :: Lens' UpdateDatastore (Maybe RetentionPeriod)

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
updateDatastore_datastoreStorage :: Lens' UpdateDatastore (Maybe DatastoreStorage)

-- | The name of the data store to be updated.
updateDatastore_datastoreName :: Lens' UpdateDatastore Text

-- | <i>See:</i> <a>newUpdateDatastoreResponse</a> smart constructor.
data UpdateDatastoreResponse
UpdateDatastoreResponse' :: UpdateDatastoreResponse

-- | Create a value of <a>UpdateDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateDatastoreResponse :: UpdateDatastoreResponse
instance GHC.Generics.Generic Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastore
instance GHC.Show.Show Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastore
instance GHC.Read.Read Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastore
instance GHC.Classes.Eq Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastore
instance GHC.Generics.Generic Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastoreResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastoreResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastoreResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastoreResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastore
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastoreResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastore
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastore
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastore
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastore
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastore
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.UpdateDatastore.UpdateDatastore


-- | Updates the settings of a pipeline. You must specify both a
--   <tt>channel</tt> and a <tt>datastore</tt> activity and, optionally, as
--   many as 23 additional activities in the <tt>pipelineActivities</tt>
--   array.
module Amazonka.IoTAnalytics.UpdatePipeline

-- | <i>See:</i> <a>newUpdatePipeline</a> smart constructor.
data UpdatePipeline
UpdatePipeline' :: Text -> NonEmpty PipelineActivity -> UpdatePipeline

-- | The name of the pipeline to update.
[$sel:pipelineName:UpdatePipeline'] :: UpdatePipeline -> Text

-- | A list of <tt>PipelineActivity</tt> objects. Activities perform
--   transformations on your messages, such as removing, renaming or adding
--   message attributes; filtering messages based on attribute values;
--   invoking your Lambda functions on messages for advanced processing; or
--   performing mathematical transformations to normalize device data.
--   
--   The list can be 2-25 <tt>PipelineActivity</tt> objects and must
--   contain both a <tt>channel</tt> and a <tt>datastore</tt> activity.
--   Each entry in the list must contain only one activity. For example:
--   
--   <pre>
--   pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]
--   </pre>
[$sel:pipelineActivities:UpdatePipeline'] :: UpdatePipeline -> NonEmpty PipelineActivity

-- | Create a value of <a>UpdatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:UpdatePipeline'</a>,
--   <a>updatePipeline_pipelineName</a> - The name of the pipeline to
--   update.
--   
--   <a>$sel:pipelineActivities:UpdatePipeline'</a>,
--   <a>updatePipeline_pipelineActivities</a> - A list of
--   <tt>PipelineActivity</tt> objects. Activities perform transformations
--   on your messages, such as removing, renaming or adding message
--   attributes; filtering messages based on attribute values; invoking
--   your Lambda functions on messages for advanced processing; or
--   performing mathematical transformations to normalize device data.
--   
--   The list can be 2-25 <tt>PipelineActivity</tt> objects and must
--   contain both a <tt>channel</tt> and a <tt>datastore</tt> activity.
--   Each entry in the list must contain only one activity. For example:
--   
--   <pre>
--   pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]
--   </pre>
newUpdatePipeline :: Text -> NonEmpty PipelineActivity -> UpdatePipeline

-- | The name of the pipeline to update.
updatePipeline_pipelineName :: Lens' UpdatePipeline Text

-- | A list of <tt>PipelineActivity</tt> objects. Activities perform
--   transformations on your messages, such as removing, renaming or adding
--   message attributes; filtering messages based on attribute values;
--   invoking your Lambda functions on messages for advanced processing; or
--   performing mathematical transformations to normalize device data.
--   
--   The list can be 2-25 <tt>PipelineActivity</tt> objects and must
--   contain both a <tt>channel</tt> and a <tt>datastore</tt> activity.
--   Each entry in the list must contain only one activity. For example:
--   
--   <pre>
--   pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]
--   </pre>
updatePipeline_pipelineActivities :: Lens' UpdatePipeline (NonEmpty PipelineActivity)

-- | <i>See:</i> <a>newUpdatePipelineResponse</a> smart constructor.
data UpdatePipelineResponse
UpdatePipelineResponse' :: UpdatePipelineResponse

-- | Create a value of <a>UpdatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdatePipelineResponse :: UpdatePipelineResponse
instance GHC.Generics.Generic Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipeline
instance GHC.Show.Show Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipeline
instance GHC.Read.Read Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipeline
instance GHC.Classes.Eq Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipeline
instance GHC.Generics.Generic Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipelineResponse
instance GHC.Show.Show Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipelineResponse
instance GHC.Read.Read Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipelineResponse
instance GHC.Classes.Eq Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipelineResponse
instance Amazonka.Types.AWSRequest Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipeline
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipelineResponse
instance Data.Hashable.Class.Hashable Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipeline
instance Control.DeepSeq.NFData Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipeline
instance Amazonka.Data.Headers.ToHeaders Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipeline
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipeline
instance Amazonka.Data.Path.ToPath Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipeline
instance Amazonka.Data.Query.ToQuery Amazonka.IoTAnalytics.UpdatePipeline.UpdatePipeline


module Amazonka.IoTAnalytics.Lens

-- | The name of the pipeline whose information is retrieved.
describePipeline_pipelineName :: Lens' DescribePipeline Text

-- | A <tt>Pipeline</tt> object that contains information about the
--   pipeline.
describePipelineResponse_pipeline :: Lens' DescribePipelineResponse (Maybe Pipeline)

-- | The response's http status code.
describePipelineResponse_httpStatus :: Lens' DescribePipelineResponse Int

-- | The name of the dataset whose information is retrieved.
describeDataset_datasetName :: Lens' DescribeDataset Text

-- | An object that contains information about the dataset.
describeDatasetResponse_dataset :: Lens' DescribeDatasetResponse (Maybe Dataset)

-- | The response's http status code.
describeDatasetResponse_httpStatus :: Lens' DescribeDatasetResponse Int

-- | The token for the next set of results.
listChannels_nextToken :: Lens' ListChannels (Maybe Text)

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
listChannels_maxResults :: Lens' ListChannels (Maybe Natural)

-- | A list of <tt>ChannelSummary</tt> objects.
listChannelsResponse_channelSummaries :: Lens' ListChannelsResponse (Maybe [ChannelSummary])

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
listChannelsResponse_nextToken :: Lens' ListChannelsResponse (Maybe Text)

-- | The response's http status code.
listChannelsResponse_httpStatus :: Lens' ListChannelsResponse Int

-- | The token for the next set of results.
listDatasetContents_nextToken :: Lens' ListDatasetContents (Maybe Text)

-- | A filter to limit results to those dataset contents whose creation is
--   scheduled before the given time. See the field
--   <tt>triggers.schedule</tt> in the <tt>CreateDataset</tt> request.
--   (timestamp)
listDatasetContents_scheduledBefore :: Lens' ListDatasetContents (Maybe UTCTime)

-- | The maximum number of results to return in this request.
listDatasetContents_maxResults :: Lens' ListDatasetContents (Maybe Natural)

-- | A filter to limit results to those dataset contents whose creation is
--   scheduled on or after the given time. See the field
--   <tt>triggers.schedule</tt> in the <tt>CreateDataset</tt> request.
--   (timestamp)
listDatasetContents_scheduledOnOrAfter :: Lens' ListDatasetContents (Maybe UTCTime)

-- | The name of the dataset whose contents information you want to list.
listDatasetContents_datasetName :: Lens' ListDatasetContents Text

-- | Summary information about dataset contents that have been created.
listDatasetContentsResponse_datasetContentSummaries :: Lens' ListDatasetContentsResponse (Maybe [DatasetContentSummary])

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
listDatasetContentsResponse_nextToken :: Lens' ListDatasetContentsResponse (Maybe Text)

-- | The response's http status code.
listDatasetContentsResponse_httpStatus :: Lens' ListDatasetContentsResponse Int

-- | The new values of the IoT Analytics logging options.
putLoggingOptions_loggingOptions :: Lens' PutLoggingOptions LoggingOptions

-- | The ARN of the resource whose tags you want to list.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags (metadata) that you have assigned to the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The name of the channel to delete.
deleteChannel_channelName :: Lens' DeleteChannel Text

-- | How long, in days, message data is kept for the channel. The retention
--   period can't be updated if the channel's Amazon S3 storage is
--   customer-managed.
updateChannel_retentionPeriod :: Lens' UpdateChannel (Maybe RetentionPeriod)

-- | Where channel data is stored. You can choose one of
--   <tt>serviceManagedS3</tt> or <tt>customerManagedS3</tt> storage. If
--   not specified, the default is <tt>serviceManagedS3</tt>. You can't
--   change this storage option after the channel is created.
updateChannel_channelStorage :: Lens' UpdateChannel (Maybe ChannelStorage)

-- | The name of the channel to be updated.
updateChannel_channelName :: Lens' UpdateChannel Text

-- | The start of the time window from which sample messages are retrieved.
sampleChannelData_startTime :: Lens' SampleChannelData (Maybe UTCTime)

-- | The number of sample messages to be retrieved. The limit is 10. The
--   default is also 10.
sampleChannelData_maxMessages :: Lens' SampleChannelData (Maybe Natural)

-- | The end of the time window from which sample messages are retrieved.
sampleChannelData_endTime :: Lens' SampleChannelData (Maybe UTCTime)

-- | The name of the channel whose message samples are retrieved.
sampleChannelData_channelName :: Lens' SampleChannelData Text

-- | The list of message samples. Each sample message is returned as a
--   base64-encoded string.
sampleChannelDataResponse_payloads :: Lens' SampleChannelDataResponse (Maybe (NonEmpty ByteString))

-- | The response's http status code.
sampleChannelDataResponse_httpStatus :: Lens' SampleChannelDataResponse Int

-- | The name of pipeline for which data reprocessing is canceled.
cancelPipelineReprocessing_pipelineName :: Lens' CancelPipelineReprocessing Text

-- | The ID of the reprocessing task (returned by
--   <tt>StartPipelineReprocessing</tt>).
cancelPipelineReprocessing_reprocessingId :: Lens' CancelPipelineReprocessing Text

-- | The response's http status code.
cancelPipelineReprocessingResponse_httpStatus :: Lens' CancelPipelineReprocessingResponse Int

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
createDatastore_fileFormatConfiguration :: Lens' CreateDatastore (Maybe FileFormatConfiguration)

-- | Contains information about the partition dimensions in a data store.
createDatastore_datastorePartitions :: Lens' CreateDatastore (Maybe DatastorePartitions)

-- | How long, in days, message data is kept for the data store. When
--   <tt>customerManagedS3</tt> storage is selected, this parameter is
--   ignored.
createDatastore_retentionPeriod :: Lens' CreateDatastore (Maybe RetentionPeriod)

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
createDatastore_datastoreStorage :: Lens' CreateDatastore (Maybe DatastoreStorage)

-- | Metadata which can be used to manage the data store.
createDatastore_tags :: Lens' CreateDatastore (Maybe (NonEmpty Tag))

-- | The name of the data store.
createDatastore_datastoreName :: Lens' CreateDatastore Text

-- | The ARN of the data store.
createDatastoreResponse_datastoreArn :: Lens' CreateDatastoreResponse (Maybe Text)

-- | The name of the data store.
createDatastoreResponse_datastoreName :: Lens' CreateDatastoreResponse (Maybe Text)

-- | How long, in days, message data is kept for the data store.
createDatastoreResponse_retentionPeriod :: Lens' CreateDatastoreResponse (Maybe RetentionPeriod)

-- | The response's http status code.
createDatastoreResponse_httpStatus :: Lens' CreateDatastoreResponse Int

-- | The name of the pipeline to update.
updatePipeline_pipelineName :: Lens' UpdatePipeline Text

-- | A list of <tt>PipelineActivity</tt> objects. Activities perform
--   transformations on your messages, such as removing, renaming or adding
--   message attributes; filtering messages based on attribute values;
--   invoking your Lambda functions on messages for advanced processing; or
--   performing mathematical transformations to normalize device data.
--   
--   The list can be 2-25 <tt>PipelineActivity</tt> objects and must
--   contain both a <tt>channel</tt> and a <tt>datastore</tt> activity.
--   Each entry in the list must contain only one activity. For example:
--   
--   <pre>
--   pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]
--   </pre>
updatePipeline_pipelineActivities :: Lens' UpdatePipeline (NonEmpty PipelineActivity)

-- | The name of the pipeline to delete.
deletePipeline_pipelineName :: Lens' DeletePipeline Text

-- | The name of the dataset to delete.
deleteDataset_datasetName :: Lens' DeleteDataset Text

-- | Optional. How many versions of dataset contents are kept. If not
--   specified or set to null, only the latest version plus the latest
--   succeeded version (if they are different) are kept for the time period
--   specified by the <tt>retentionPeriod</tt> parameter. For more
--   information, see <a>Keeping Multiple Versions of IoT Analytics
--   datasets</a> in the <i>IoT Analytics User Guide</i>.
updateDataset_versioningConfiguration :: Lens' UpdateDataset (Maybe VersioningConfiguration)

-- | A list of <tt>DatasetTrigger</tt> objects. The list can be empty or
--   can contain up to five <tt>DatasetTrigger</tt> objects.
updateDataset_triggers :: Lens' UpdateDataset (Maybe [DatasetTrigger])

-- | How long, in days, dataset contents are kept for the dataset.
updateDataset_retentionPeriod :: Lens' UpdateDataset (Maybe RetentionPeriod)

-- | A list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
updateDataset_lateDataRules :: Lens' UpdateDataset (Maybe (NonEmpty LateDataRule))

-- | When dataset contents are created, they are delivered to destinations
--   specified here.
updateDataset_contentDeliveryRules :: Lens' UpdateDataset (Maybe [DatasetContentDeliveryRule])

-- | The name of the dataset to update.
updateDataset_datasetName :: Lens' UpdateDataset Text

-- | A list of <tt>DatasetAction</tt> objects.
updateDataset_actions :: Lens' UpdateDataset (NonEmpty DatasetAction)

-- | The token for the next set of results.
listPipelines_nextToken :: Lens' ListPipelines (Maybe Text)

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
listPipelines_maxResults :: Lens' ListPipelines (Maybe Natural)

-- | A list of <tt>PipelineSummary</tt> objects.
listPipelinesResponse_pipelineSummaries :: Lens' ListPipelinesResponse (Maybe [PipelineSummary])

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
listPipelinesResponse_nextToken :: Lens' ListPipelinesResponse (Maybe Text)

-- | The response's http status code.
listPipelinesResponse_httpStatus :: Lens' ListPipelinesResponse Int

-- | The name of the data store to delete.
deleteDatastore_datastoreName :: Lens' DeleteDatastore Text

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
updateDatastore_fileFormatConfiguration :: Lens' UpdateDatastore (Maybe FileFormatConfiguration)

-- | How long, in days, message data is kept for the data store. The
--   retention period can't be updated if the data store's Amazon S3
--   storage is customer-managed.
updateDatastore_retentionPeriod :: Lens' UpdateDatastore (Maybe RetentionPeriod)

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
updateDatastore_datastoreStorage :: Lens' UpdateDatastore (Maybe DatastoreStorage)

-- | The name of the data store to be updated.
updateDatastore_datastoreName :: Lens' UpdateDatastore Text

-- | Optional. How many versions of dataset contents are kept. If not
--   specified or set to null, only the latest version plus the latest
--   succeeded version (if they are different) are kept for the time period
--   specified by the <tt>retentionPeriod</tt> parameter. For more
--   information, see <a>Keeping Multiple Versions of IoT Analytics
--   datasets</a> in the <i>IoT Analytics User Guide</i>.
createDataset_versioningConfiguration :: Lens' CreateDataset (Maybe VersioningConfiguration)

-- | A list of triggers. A trigger causes dataset contents to be populated
--   at a specified time interval or when another dataset's contents are
--   created. The list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects.
createDataset_triggers :: Lens' CreateDataset (Maybe [DatasetTrigger])

-- | Optional. How long, in days, versions of dataset contents are kept for
--   the dataset. If not specified or set to <tt>null</tt>, versions of
--   dataset contents are retained for at most 90 days. The number of
--   versions of dataset contents retained is determined by the
--   <tt>versioningConfiguration</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
createDataset_retentionPeriod :: Lens' CreateDataset (Maybe RetentionPeriod)

-- | A list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
createDataset_lateDataRules :: Lens' CreateDataset (Maybe (NonEmpty LateDataRule))

-- | When dataset contents are created, they are delivered to destinations
--   specified here.
createDataset_contentDeliveryRules :: Lens' CreateDataset (Maybe [DatasetContentDeliveryRule])

-- | Metadata which can be used to manage the dataset.
createDataset_tags :: Lens' CreateDataset (Maybe (NonEmpty Tag))

-- | The name of the dataset.
createDataset_datasetName :: Lens' CreateDataset Text

-- | A list of actions that create the dataset contents.
createDataset_actions :: Lens' CreateDataset (NonEmpty DatasetAction)

-- | The ARN of the dataset.
createDatasetResponse_datasetArn :: Lens' CreateDatasetResponse (Maybe Text)

-- | How long, in days, dataset contents are kept for the dataset.
createDatasetResponse_retentionPeriod :: Lens' CreateDatasetResponse (Maybe RetentionPeriod)

-- | The name of the dataset.
createDatasetResponse_datasetName :: Lens' CreateDatasetResponse (Maybe Text)

-- | The response's http status code.
createDatasetResponse_httpStatus :: Lens' CreateDatasetResponse Int

-- | The name of the channel where the messages are sent.
batchPutMessage_channelName :: Lens' BatchPutMessage Text

-- | The list of messages to be sent. Each message has the format: {
--   "messageId": "string", "payload": "string"}.
--   
--   The field names of message payloads (data) that you send to IoT
--   Analytics:
--   
--   <ul>
--   <li>Must contain only alphanumeric characters and undescores (_). No
--   other special characters are allowed.</li>
--   <li>Must begin with an alphabetic character or single underscore
--   (_).</li>
--   <li>Cannot contain hyphens (-).</li>
--   <li>In regular expression terms:
--   "^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$".</li>
--   <li>Cannot be more than 255 characters.</li>
--   <li>Are case insensitive. (Fields named foo and FOO in the same
--   payload are considered duplicates.)</li>
--   </ul>
--   
--   For example, {"temp_01": 29} or {"_temp_01": 29} are valid, but
--   {"temp-01": 29}, {"01_temp": 29} or {"__temp_01": 29} are invalid in
--   message payloads.
batchPutMessage_messages :: Lens' BatchPutMessage [Message]

-- | A list of any errors encountered when sending the messages to the
--   channel.
batchPutMessageResponse_batchPutMessageErrorEntries :: Lens' BatchPutMessageResponse (Maybe [BatchPutMessageErrorEntry])

-- | The response's http status code.
batchPutMessageResponse_httpStatus :: Lens' BatchPutMessageResponse Int

-- | The token for the next set of results.
listDatastores_nextToken :: Lens' ListDatastores (Maybe Text)

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
listDatastores_maxResults :: Lens' ListDatastores (Maybe Natural)

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
listDatastoresResponse_nextToken :: Lens' ListDatastoresResponse (Maybe Text)

-- | A list of <tt>DatastoreSummary</tt> objects.
listDatastoresResponse_datastoreSummaries :: Lens' ListDatastoresResponse (Maybe [DatastoreSummary])

-- | The response's http status code.
listDatastoresResponse_httpStatus :: Lens' ListDatastoresResponse Int

-- | The version ID of the dataset content. To specify <tt>versionId</tt>
--   for a dataset content, the dataset must use a <a>DeltaTimer</a>
--   filter.
createDatasetContent_versionId :: Lens' CreateDatasetContent (Maybe Text)

-- | The name of the dataset.
createDatasetContent_datasetName :: Lens' CreateDatasetContent Text

-- | The version ID of the dataset contents that are being created.
createDatasetContentResponse_versionId :: Lens' CreateDatasetContentResponse (Maybe Text)

-- | The response's http status code.
createDatasetContentResponse_httpStatus :: Lens' CreateDatasetContentResponse Int

-- | How long, in days, message data is kept for the channel. When
--   <tt>customerManagedS3</tt> storage is selected, this parameter is
--   ignored.
createChannel_retentionPeriod :: Lens' CreateChannel (Maybe RetentionPeriod)

-- | Where channel data is stored. You can choose one of
--   <tt>serviceManagedS3</tt> or <tt>customerManagedS3</tt> storage. If
--   not specified, the default is <tt>serviceManagedS3</tt>. You can't
--   change this storage option after the channel is created.
createChannel_channelStorage :: Lens' CreateChannel (Maybe ChannelStorage)

-- | Metadata which can be used to manage the channel.
createChannel_tags :: Lens' CreateChannel (Maybe (NonEmpty Tag))

-- | The name of the channel.
createChannel_channelName :: Lens' CreateChannel Text

-- | The ARN of the channel.
createChannelResponse_channelArn :: Lens' CreateChannelResponse (Maybe Text)

-- | How long, in days, message data is kept for the channel.
createChannelResponse_retentionPeriod :: Lens' CreateChannelResponse (Maybe RetentionPeriod)

-- | The name of the channel.
createChannelResponse_channelName :: Lens' CreateChannelResponse (Maybe Text)

-- | The response's http status code.
createChannelResponse_httpStatus :: Lens' CreateChannelResponse Int

-- | The version of the dataset whose content is deleted. You can also use
--   the strings "$LATEST" or "$LATEST_SUCCEEDED" to delete the latest or
--   latest successfully completed data set. If not specified,
--   "$LATEST_SUCCEEDED" is the default.
deleteDatasetContent_versionId :: Lens' DeleteDatasetContent (Maybe Text)

-- | The name of the dataset whose content is deleted.
deleteDatasetContent_datasetName :: Lens' DeleteDatasetContent Text

-- | If true, additional statistical information about the data store is
--   included in the response. This feature can't be used with a data store
--   whose S3 storage is customer-managed.
describeDatastore_includeStatistics :: Lens' DescribeDatastore (Maybe Bool)

-- | The name of the data store
describeDatastore_datastoreName :: Lens' DescribeDatastore Text

-- | Information about the data store.
describeDatastoreResponse_datastore :: Lens' DescribeDatastoreResponse (Maybe Datastore)

-- | Additional statistical information about the data store. Included if
--   the <tt>includeStatistics</tt> parameter is set to <tt>true</tt> in
--   the request.
describeDatastoreResponse_statistics :: Lens' DescribeDatastoreResponse (Maybe DatastoreStatistics)

-- | The response's http status code.
describeDatastoreResponse_httpStatus :: Lens' DescribeDatastoreResponse Int

-- | The version of the dataset whose contents are retrieved. You can also
--   use the strings "$LATEST" or "$LATEST_SUCCEEDED" to retrieve the
--   contents of the latest or latest successfully completed dataset. If
--   not specified, "$LATEST_SUCCEEDED" is the default.
getDatasetContent_versionId :: Lens' GetDatasetContent (Maybe Text)

-- | The name of the dataset whose contents are retrieved.
getDatasetContent_datasetName :: Lens' GetDatasetContent Text

-- | The status of the dataset content.
getDatasetContentResponse_status :: Lens' GetDatasetContentResponse (Maybe DatasetContentStatus)

-- | A list of <tt>DatasetEntry</tt> objects.
getDatasetContentResponse_entries :: Lens' GetDatasetContentResponse (Maybe [DatasetEntry])

-- | The time when the request was made.
getDatasetContentResponse_timestamp :: Lens' GetDatasetContentResponse (Maybe UTCTime)

-- | The response's http status code.
getDatasetContentResponse_httpStatus :: Lens' GetDatasetContentResponse Int

-- | The ARN of the resource whose tags you want to modify.
tagResource_resourceArn :: Lens' TagResource Text

-- | The new or modified tags for the resource.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The token for the next set of results.
listDatasets_nextToken :: Lens' ListDatasets (Maybe Text)

-- | The maximum number of results to return in this request.
--   
--   The default value is 100.
listDatasets_maxResults :: Lens' ListDatasets (Maybe Natural)

-- | The token to retrieve the next set of results, or <tt>null</tt> if
--   there are no more results.
listDatasetsResponse_nextToken :: Lens' ListDatasetsResponse (Maybe Text)

-- | A list of <tt>DatasetSummary</tt> objects.
listDatasetsResponse_datasetSummaries :: Lens' ListDatasetsResponse (Maybe [DatasetSummary])

-- | The response's http status code.
listDatasetsResponse_httpStatus :: Lens' ListDatasetsResponse Int

-- | The ARN of the resource whose tags you want to remove.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of those tags which you want to remove.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The pipeline activity that is run. This must not be a channel activity
--   or a data store activity because these activities are used in a
--   pipeline only to load the original message and to store the (possibly)
--   transformed message. If a Lambda activity is specified, only
--   short-running Lambda functions (those with a timeout of less than 30
--   seconds or less) can be used.
runPipelineActivity_pipelineActivity :: Lens' RunPipelineActivity PipelineActivity

-- | The sample message payloads on which the pipeline activity is run.
runPipelineActivity_payloads :: Lens' RunPipelineActivity (NonEmpty ByteString)

-- | In case the pipeline activity fails, the log message that is
--   generated.
runPipelineActivityResponse_logResult :: Lens' RunPipelineActivityResponse (Maybe Text)

-- | The enriched or transformed sample message payloads as base64-encoded
--   strings. (The results of running the pipeline activity on each input
--   sample message payload, encoded in base64.)
runPipelineActivityResponse_payloads :: Lens' RunPipelineActivityResponse (Maybe (NonEmpty ByteString))

-- | The response's http status code.
runPipelineActivityResponse_httpStatus :: Lens' RunPipelineActivityResponse Int

-- | If true, additional statistical information about the channel is
--   included in the response. This feature can't be used with a channel
--   whose S3 storage is customer-managed.
describeChannel_includeStatistics :: Lens' DescribeChannel (Maybe Bool)

-- | The name of the channel whose information is retrieved.
describeChannel_channelName :: Lens' DescribeChannel Text

-- | An object that contains information about the channel.
describeChannelResponse_channel :: Lens' DescribeChannelResponse (Maybe Channel)

-- | Statistics about the channel. Included if the
--   <tt>includeStatistics</tt> parameter is set to <tt>true</tt> in the
--   request.
describeChannelResponse_statistics :: Lens' DescribeChannelResponse (Maybe ChannelStatistics)

-- | The response's http status code.
describeChannelResponse_httpStatus :: Lens' DescribeChannelResponse Int

-- | Metadata which can be used to manage the pipeline.
createPipeline_tags :: Lens' CreatePipeline (Maybe (NonEmpty Tag))

-- | The name of the pipeline.
createPipeline_pipelineName :: Lens' CreatePipeline Text

-- | A list of <tt>PipelineActivity</tt> objects. Activities perform
--   transformations on your messages, such as removing, renaming or adding
--   message attributes; filtering messages based on attribute values;
--   invoking your Lambda unctions on messages for advanced processing; or
--   performing mathematical transformations to normalize device data.
--   
--   The list can be 2-25 <tt>PipelineActivity</tt> objects and must
--   contain both a <tt>channel</tt> and a <tt>datastore</tt> activity.
--   Each entry in the list must contain only one activity. For example:
--   
--   <pre>
--   pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]
--   </pre>
createPipeline_pipelineActivities :: Lens' CreatePipeline (NonEmpty PipelineActivity)

-- | The name of the pipeline.
createPipelineResponse_pipelineName :: Lens' CreatePipelineResponse (Maybe Text)

-- | The ARN of the pipeline.
createPipelineResponse_pipelineArn :: Lens' CreatePipelineResponse (Maybe Text)

-- | The response's http status code.
createPipelineResponse_httpStatus :: Lens' CreatePipelineResponse Int

-- | The start time (inclusive) of raw message data that is reprocessed.
--   
--   If you specify a value for the <tt>startTime</tt> parameter, you must
--   not use the <tt>channelMessages</tt> object.
startPipelineReprocessing_startTime :: Lens' StartPipelineReprocessing (Maybe UTCTime)

-- | The end time (exclusive) of raw message data that is reprocessed.
--   
--   If you specify a value for the <tt>endTime</tt> parameter, you must
--   not use the <tt>channelMessages</tt> object.
startPipelineReprocessing_endTime :: Lens' StartPipelineReprocessing (Maybe UTCTime)

-- | Specifies one or more sets of channel messages that you want to
--   reprocess.
--   
--   If you use the <tt>channelMessages</tt> object, you must not specify a
--   value for <tt>startTime</tt> and <tt>endTime</tt>.
startPipelineReprocessing_channelMessages :: Lens' StartPipelineReprocessing (Maybe ChannelMessages)

-- | The name of the pipeline on which to start reprocessing.
startPipelineReprocessing_pipelineName :: Lens' StartPipelineReprocessing Text

-- | The ID of the pipeline reprocessing activity that was started.
startPipelineReprocessingResponse_reprocessingId :: Lens' StartPipelineReprocessingResponse (Maybe Text)

-- | The response's http status code.
startPipelineReprocessingResponse_httpStatus :: Lens' StartPipelineReprocessingResponse Int

-- | The current settings of the IoT Analytics logging options.
describeLoggingOptionsResponse_loggingOptions :: Lens' DescribeLoggingOptionsResponse (Maybe LoggingOptions)

-- | The response's http status code.
describeLoggingOptionsResponse_httpStatus :: Lens' DescribeLoggingOptionsResponse Int

-- | The next activity in the pipeline.
addAttributesActivity_next :: Lens' AddAttributesActivity (Maybe Text)

-- | The name of the addAttributes activity.
addAttributesActivity_name :: Lens' AddAttributesActivity Text

-- | A list of 1-50 <tt>AttributeNameMapping</tt> objects that map an
--   existing attribute to a new attribute.
--   
--   The existing attributes remain in the message, so if you want to
--   remove the originals, use <tt>RemoveAttributeActivity</tt>.
addAttributesActivity_attributes :: Lens' AddAttributesActivity (HashMap Text Text)

-- | The code associated with the error.
batchPutMessageErrorEntry_errorCode :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | The message associated with the error.
batchPutMessageErrorEntry_errorMessage :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | The ID of the message that caused the error. See the value
--   corresponding to the <tt>messageId</tt> key in the message object.
batchPutMessageErrorEntry_messageId :: Lens' BatchPutMessageErrorEntry (Maybe Text)

-- | When the channel was created.
channel_creationTime :: Lens' Channel (Maybe UTCTime)

-- | The status of the channel.
channel_status :: Lens' Channel (Maybe ChannelStatus)

-- | The last time when a new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
channel_lastMessageArrivalTime :: Lens' Channel (Maybe UTCTime)

-- | The ARN of the channel.
channel_arn :: Lens' Channel (Maybe Text)

-- | Where channel data is stored. You can choose one of
--   <tt>serviceManagedS3</tt> or <tt>customerManagedS3</tt> storage. If
--   not specified, the default is <tt>serviceManagedS3</tt>. You can't
--   change this storage option after the channel is created.
channel_storage :: Lens' Channel (Maybe ChannelStorage)

-- | How long, in days, message data is kept for the channel.
channel_retentionPeriod :: Lens' Channel (Maybe RetentionPeriod)

-- | The name of the channel.
channel_name :: Lens' Channel (Maybe Text)

-- | When the channel was last updated.
channel_lastUpdateTime :: Lens' Channel (Maybe UTCTime)

-- | The next activity in the pipeline.
channelActivity_next :: Lens' ChannelActivity (Maybe Text)

-- | The name of the channel activity.
channelActivity_name :: Lens' ChannelActivity Text

-- | The name of the channel from which the messages are processed.
channelActivity_channelName :: Lens' ChannelActivity Text

-- | Specifies one or more keys that identify the Amazon Simple Storage
--   Service (Amazon S3) objects that save your channel messages.
--   
--   You must use the full path for the key.
--   
--   Example path: <tt>channel/mychannel/__dt=2020-02-29
--   00:00:00/1582940490000_1582940520000_123456789012_mychannel_0_2118.0.json.gz</tt>
channelMessages_s3Paths :: Lens' ChannelMessages (Maybe (NonEmpty Text))

-- | The estimated size of the channel.
channelStatistics_size :: Lens' ChannelStatistics (Maybe EstimatedResourceSize)

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
--   You can't change the choice of S3 storage after the data store is
--   created.
channelStorage_serviceManagedS3 :: Lens' ChannelStorage (Maybe ServiceManagedChannelS3Storage)

-- | Used to store channel data in an S3 bucket that you manage. If
--   customer managed storage is selected, the <tt>retentionPeriod</tt>
--   parameter is ignored. You can't change the choice of S3 storage after
--   the data store is created.
channelStorage_customerManagedS3 :: Lens' ChannelStorage (Maybe CustomerManagedChannelS3Storage)

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
channelStorageSummary_serviceManagedS3 :: Lens' ChannelStorageSummary (Maybe ServiceManagedChannelS3StorageSummary)

-- | Used to store channel data in an S3 bucket that you manage.
channelStorageSummary_customerManagedS3 :: Lens' ChannelStorageSummary (Maybe CustomerManagedChannelS3StorageSummary)

-- | When the channel was created.
channelSummary_creationTime :: Lens' ChannelSummary (Maybe UTCTime)

-- | The status of the channel.
channelSummary_status :: Lens' ChannelSummary (Maybe ChannelStatus)

-- | The last time when a new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
channelSummary_lastMessageArrivalTime :: Lens' ChannelSummary (Maybe UTCTime)

-- | The name of the channel.
channelSummary_channelName :: Lens' ChannelSummary (Maybe Text)

-- | Where channel data is stored.
channelSummary_channelStorage :: Lens' ChannelSummary (Maybe ChannelStorageSummary)

-- | The last time the channel was updated.
channelSummary_lastUpdateTime :: Lens' ChannelSummary (Maybe UTCTime)

-- | The name of the column.
column_name :: Lens' Column Text

-- | The type of data. For more information about the supported data types,
--   see <a>Common data types</a> in the <i>Glue Developer Guide</i>.
column_type :: Lens' Column Text

-- | The values of variables used in the context of the execution of the
--   containerized application (basically, parameters passed to the
--   application). Each variable must have a name and a value given by one
--   of <tt>stringValue</tt>, <tt>datasetContentVersionValue</tt>, or
--   <tt>outputFileUriValue</tt>.
containerDatasetAction_variables :: Lens' ContainerDatasetAction (Maybe [Variable])

-- | The ARN of the Docker container stored in your account. The Docker
--   container contains an application and required support libraries and
--   is used to generate dataset contents.
containerDatasetAction_image :: Lens' ContainerDatasetAction Text

-- | The ARN of the role that gives permission to the system to access
--   required resources to run the <tt>containerAction</tt>. This includes,
--   at minimum, permission to retrieve the dataset contents that are the
--   input to the containerized application.
containerDatasetAction_executionRoleArn :: Lens' ContainerDatasetAction Text

-- | Configuration of the resource that executes the
--   <tt>containerAction</tt>.
containerDatasetAction_resourceConfiguration :: Lens' ContainerDatasetAction ResourceConfiguration

-- | (Optional) The prefix used to create the keys of the channel data
--   objects. Each object in an S3 bucket has a key that is its unique
--   identifier in the bucket. Each object in a bucket has exactly one key.
--   The prefix must end with a forward slash (/).
customerManagedChannelS3Storage_keyPrefix :: Lens' CustomerManagedChannelS3Storage (Maybe Text)

-- | The name of the S3 bucket in which channel data is stored.
customerManagedChannelS3Storage_bucket :: Lens' CustomerManagedChannelS3Storage Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedChannelS3Storage_roleArn :: Lens' CustomerManagedChannelS3Storage Text

-- | The name of the S3 bucket in which channel data is stored.
customerManagedChannelS3StorageSummary_bucket :: Lens' CustomerManagedChannelS3StorageSummary (Maybe Text)

-- | (Optional) The prefix used to create the keys of the channel data
--   objects. Each object in an S3 bucket has a key that is its unique
--   identifier within the bucket (each object in a bucket has exactly one
--   key). The prefix must end with a forward slash (/).
customerManagedChannelS3StorageSummary_keyPrefix :: Lens' CustomerManagedChannelS3StorageSummary (Maybe Text)

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedChannelS3StorageSummary_roleArn :: Lens' CustomerManagedChannelS3StorageSummary (Maybe Text)

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
customerManagedDatastoreS3Storage_keyPrefix :: Lens' CustomerManagedDatastoreS3Storage (Maybe Text)

-- | The name of the Amazon S3 bucket where your data is stored.
customerManagedDatastoreS3Storage_bucket :: Lens' CustomerManagedDatastoreS3Storage Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedDatastoreS3Storage_roleArn :: Lens' CustomerManagedDatastoreS3Storage Text

-- | The name of the Amazon S3 bucket where your data is stored.
customerManagedDatastoreS3StorageSummary_bucket :: Lens' CustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
customerManagedDatastoreS3StorageSummary_keyPrefix :: Lens' CustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 resources.
customerManagedDatastoreS3StorageSummary_roleArn :: Lens' CustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | When the dataset was created.
dataset_creationTime :: Lens' Dataset (Maybe UTCTime)

-- | The status of the dataset.
dataset_status :: Lens' Dataset (Maybe DatasetStatus)

-- | Optional. How many versions of dataset contents are kept. If not
--   specified or set to null, only the latest version plus the latest
--   succeeded version (if they are different) are kept for the time period
--   specified by the <tt>retentionPeriod</tt> parameter. For more
--   information, see <a>Keeping Multiple Versions of IoT Analytics
--   datasets</a> in the <i>IoT Analytics User Guide</i>.
dataset_versioningConfiguration :: Lens' Dataset (Maybe VersioningConfiguration)

-- | The ARN of the dataset.
dataset_arn :: Lens' Dataset (Maybe Text)

-- | The <tt>DatasetAction</tt> objects that automatically create the
--   dataset contents.
dataset_actions :: Lens' Dataset (Maybe (NonEmpty DatasetAction))

-- | The <tt>DatasetTrigger</tt> objects that specify when the dataset is
--   automatically updated.
dataset_triggers :: Lens' Dataset (Maybe [DatasetTrigger])

-- | Optional. How long, in days, message data is kept for the dataset.
dataset_retentionPeriod :: Lens' Dataset (Maybe RetentionPeriod)

-- | A list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
dataset_lateDataRules :: Lens' Dataset (Maybe (NonEmpty LateDataRule))

-- | The name of the dataset.
dataset_name :: Lens' Dataset (Maybe Text)

-- | When dataset contents are created they are delivered to destinations
--   specified here.
dataset_contentDeliveryRules :: Lens' Dataset (Maybe [DatasetContentDeliveryRule])

-- | The last time the dataset was updated.
dataset_lastUpdateTime :: Lens' Dataset (Maybe UTCTime)

-- | An <tt>SqlQueryDatasetAction</tt> object that uses an SQL query to
--   automatically create dataset contents.
datasetAction_queryAction :: Lens' DatasetAction (Maybe SqlQueryDatasetAction)

-- | The name of the dataset action by which dataset contents are
--   automatically created.
datasetAction_actionName :: Lens' DatasetAction (Maybe Text)

-- | Information that allows the system to run a containerized application
--   to create the dataset contents. The application must be in a Docker
--   container along with any required support libraries.
datasetAction_containerAction :: Lens' DatasetAction (Maybe ContainerDatasetAction)

-- | The name of the action that automatically creates the dataset's
--   contents.
datasetActionSummary_actionName :: Lens' DatasetActionSummary (Maybe Text)

-- | The type of action by which the dataset's contents are automatically
--   created.
datasetActionSummary_actionType :: Lens' DatasetActionSummary (Maybe DatasetActionType)

-- | Configuration information for delivery of dataset contents to Amazon
--   S3.
datasetContentDeliveryDestination_s3DestinationConfiguration :: Lens' DatasetContentDeliveryDestination (Maybe S3DestinationConfiguration)

-- | Configuration information for delivery of dataset contents to IoT
--   Events.
datasetContentDeliveryDestination_iotEventsDestinationConfiguration :: Lens' DatasetContentDeliveryDestination (Maybe IotEventsDestinationConfiguration)

-- | The name of the dataset content delivery rules entry.
datasetContentDeliveryRule_entryName :: Lens' DatasetContentDeliveryRule (Maybe Text)

-- | The destination to which dataset contents are delivered.
datasetContentDeliveryRule_destination :: Lens' DatasetContentDeliveryRule DatasetContentDeliveryDestination

-- | The state of the dataset contents. Can be one of READY, CREATING,
--   SUCCEEDED, or FAILED.
datasetContentStatus_state :: Lens' DatasetContentStatus (Maybe DatasetContentState)

-- | The reason the dataset contents are in this state.
datasetContentStatus_reason :: Lens' DatasetContentStatus (Maybe Text)

-- | The actual time the creation of the dataset contents was started.
datasetContentSummary_creationTime :: Lens' DatasetContentSummary (Maybe UTCTime)

-- | The status of the dataset contents.
datasetContentSummary_status :: Lens' DatasetContentSummary (Maybe DatasetContentStatus)

-- | The time the creation of the dataset contents was scheduled to start.
datasetContentSummary_scheduleTime :: Lens' DatasetContentSummary (Maybe UTCTime)

-- | The time the dataset content status was updated to SUCCEEDED or
--   FAILED.
datasetContentSummary_completionTime :: Lens' DatasetContentSummary (Maybe UTCTime)

-- | The version of the dataset contents.
datasetContentSummary_version :: Lens' DatasetContentSummary (Maybe Text)

-- | The name of the dataset whose latest contents are used as input to the
--   notebook or application.
datasetContentVersionValue_datasetName :: Lens' DatasetContentVersionValue Text

-- | The name of the dataset item.
datasetEntry_entryName :: Lens' DatasetEntry (Maybe Text)

-- | The presigned URI of the dataset item.
datasetEntry_dataURI :: Lens' DatasetEntry (Maybe Text)

-- | The time the dataset was created.
datasetSummary_creationTime :: Lens' DatasetSummary (Maybe UTCTime)

-- | The status of the dataset.
datasetSummary_status :: Lens' DatasetSummary (Maybe DatasetStatus)

-- | A list of <tt>DataActionSummary</tt> objects.
datasetSummary_actions :: Lens' DatasetSummary (Maybe (NonEmpty DatasetActionSummary))

-- | A list of triggers. A trigger causes dataset content to be populated
--   at a specified time interval or when another dataset is populated. The
--   list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects
datasetSummary_triggers :: Lens' DatasetSummary (Maybe [DatasetTrigger])

-- | The name of the dataset.
datasetSummary_datasetName :: Lens' DatasetSummary (Maybe Text)

-- | The last time the dataset was updated.
datasetSummary_lastUpdateTime :: Lens' DatasetSummary (Maybe UTCTime)

-- | The dataset whose content creation triggers the creation of this
--   dataset's contents.
datasetTrigger_dataset :: Lens' DatasetTrigger (Maybe TriggeringDataset)

-- | The Schedule when the trigger is initiated.
datasetTrigger_schedule :: Lens' DatasetTrigger (Maybe Schedule)

-- | When the data store was created.
datastore_creationTime :: Lens' Datastore (Maybe UTCTime)

-- | The status of a data store:
--   
--   <ul>
--   <li><i>CREATING</i> The data store is being created.</li>
--   <li><i>ACTIVE</i> The data store has been created and can be
--   used.</li>
--   <li><i>DELETING</i> The data store is being deleted.</li>
--   </ul>
datastore_status :: Lens' Datastore (Maybe DatastoreStatus)

-- | The last time when a new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
datastore_lastMessageArrivalTime :: Lens' Datastore (Maybe UTCTime)

-- | The ARN of the data store.
datastore_arn :: Lens' Datastore (Maybe Text)

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
datastore_fileFormatConfiguration :: Lens' Datastore (Maybe FileFormatConfiguration)

-- | Contains information about the partition dimensions in a data store.
datastore_datastorePartitions :: Lens' Datastore (Maybe DatastorePartitions)

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
datastore_storage :: Lens' Datastore (Maybe DatastoreStorage)

-- | How long, in days, message data is kept for the data store. When
--   <tt>customerManagedS3</tt> storage is selected, this parameter is
--   ignored.
datastore_retentionPeriod :: Lens' Datastore (Maybe RetentionPeriod)

-- | The name of the data store.
datastore_name :: Lens' Datastore (Maybe Text)

-- | The last time the data store was updated.
datastore_lastUpdateTime :: Lens' Datastore (Maybe UTCTime)

-- | The name of the datastore activity.
datastoreActivity_name :: Lens' DatastoreActivity Text

-- | The name of the data store where processed messages are stored.
datastoreActivity_datastoreName :: Lens' DatastoreActivity Text

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
datastoreIotSiteWiseMultiLayerStorage_customerManagedS3Storage :: Lens' DatastoreIotSiteWiseMultiLayerStorage IotSiteWiseCustomerManagedDatastoreS3Storage

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
datastoreIotSiteWiseMultiLayerStorageSummary_customerManagedS3Storage :: Lens' DatastoreIotSiteWiseMultiLayerStorageSummary (Maybe IotSiteWiseCustomerManagedDatastoreS3StorageSummary)

-- | A partition dimension defined by an <tt>attributeName</tt>.
datastorePartition_attributePartition :: Lens' DatastorePartition (Maybe Partition)

-- | A partition dimension defined by a timestamp attribute.
datastorePartition_timestampPartition :: Lens' DatastorePartition (Maybe TimestampPartition)

-- | A list of partition dimensions in a data store.
datastorePartitions_partitions :: Lens' DatastorePartitions (Maybe [DatastorePartition])

-- | The estimated size of the data store.
datastoreStatistics_size :: Lens' DatastoreStatistics (Maybe EstimatedResourceSize)

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
--   You can't change the choice of Amazon S3 storage after your data store
--   is created.
datastoreStorage_serviceManagedS3 :: Lens' DatastoreStorage (Maybe ServiceManagedDatastoreS3Storage)

-- | S3-customer-managed; When you choose customer-managed storage, the
--   <tt>retentionPeriod</tt> parameter is ignored. You can't change the
--   choice of Amazon S3 storage after your data store is created.
datastoreStorage_customerManagedS3 :: Lens' DatastoreStorage (Maybe CustomerManagedDatastoreS3Storage)

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage. You can't change the choice of Amazon S3 storage after
--   your data store is created.
datastoreStorage_iotSiteWiseMultiLayerStorage :: Lens' DatastoreStorage (Maybe DatastoreIotSiteWiseMultiLayerStorage)

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
datastoreStorageSummary_serviceManagedS3 :: Lens' DatastoreStorageSummary (Maybe ServiceManagedDatastoreS3StorageSummary)

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
datastoreStorageSummary_customerManagedS3 :: Lens' DatastoreStorageSummary (Maybe CustomerManagedDatastoreS3StorageSummary)

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
datastoreStorageSummary_iotSiteWiseMultiLayerStorage :: Lens' DatastoreStorageSummary (Maybe DatastoreIotSiteWiseMultiLayerStorageSummary)

-- | When the data store was created.
datastoreSummary_creationTime :: Lens' DatastoreSummary (Maybe UTCTime)

-- | The status of the data store.
datastoreSummary_status :: Lens' DatastoreSummary (Maybe DatastoreStatus)

-- | The last time when a new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
datastoreSummary_lastMessageArrivalTime :: Lens' DatastoreSummary (Maybe UTCTime)

-- | The name of the data store.
datastoreSummary_datastoreName :: Lens' DatastoreSummary (Maybe Text)

-- | Contains information about the partition dimensions in a data store.
datastoreSummary_datastorePartitions :: Lens' DatastoreSummary (Maybe DatastorePartitions)

-- | The file format of the data in the data store.
datastoreSummary_fileFormatType :: Lens' DatastoreSummary (Maybe FileFormatType)

-- | The last time the data store was updated.
datastoreSummary_lastUpdateTime :: Lens' DatastoreSummary (Maybe UTCTime)

-- | Where data in a data store is stored.
datastoreSummary_datastoreStorage :: Lens' DatastoreSummary (Maybe DatastoreStorageSummary)

-- | The number of seconds of estimated in-flight lag time of message data.
--   When you create dataset contents using message data from a specified
--   timeframe, some message data might still be in flight when processing
--   begins, and so do not arrive in time to be processed. Use this field
--   to make allowances for the in flight time of your message data, so
--   that data not processed from a previous timeframe is included with the
--   next timeframe. Otherwise, missed message data would be excluded from
--   processing during the next timeframe too, because its timestamp places
--   it within the previous timeframe.
deltaTime_offsetSeconds :: Lens' DeltaTime Int

-- | An expression by which the time of the message data might be
--   determined. This can be the name of a timestamp field or a SQL
--   expression that is used to derive the time the message data was
--   generated.
deltaTime_timeExpression :: Lens' DeltaTime Text

-- | A time interval. You can use <tt>timeoutInMinutes</tt> so that IoT
--   Analytics can batch up late data notifications that have been
--   generated since the last execution. IoT Analytics sends one batch of
--   notifications to Amazon CloudWatch Events at one time.
--   
--   For more information about how to write a timestamp expression, see
--   <a>Date and Time Functions and Operators</a>, in the <i>Presto 0.172
--   Documentation</i>.
deltaTimeSessionWindowConfiguration_timeoutInMinutes :: Lens' DeltaTimeSessionWindowConfiguration Natural

-- | The next activity in the pipeline.
deviceRegistryEnrichActivity_next :: Lens' DeviceRegistryEnrichActivity (Maybe Text)

-- | The name of the <tt>deviceRegistryEnrich</tt> activity.
deviceRegistryEnrichActivity_name :: Lens' DeviceRegistryEnrichActivity Text

-- | The name of the attribute that is added to the message.
deviceRegistryEnrichActivity_attribute :: Lens' DeviceRegistryEnrichActivity Text

-- | The name of the IoT device whose registry information is added to the
--   message.
deviceRegistryEnrichActivity_thingName :: Lens' DeviceRegistryEnrichActivity Text

-- | The ARN of the role that allows access to the device's registry
--   information.
deviceRegistryEnrichActivity_roleArn :: Lens' DeviceRegistryEnrichActivity Text

-- | The next activity in the pipeline.
deviceShadowEnrichActivity_next :: Lens' DeviceShadowEnrichActivity (Maybe Text)

-- | The name of the <tt>deviceShadowEnrich</tt> activity.
deviceShadowEnrichActivity_name :: Lens' DeviceShadowEnrichActivity Text

-- | The name of the attribute that is added to the message.
deviceShadowEnrichActivity_attribute :: Lens' DeviceShadowEnrichActivity Text

-- | The name of the IoT device whose shadow information is added to the
--   message.
deviceShadowEnrichActivity_thingName :: Lens' DeviceShadowEnrichActivity Text

-- | The ARN of the role that allows access to the device's shadow.
deviceShadowEnrichActivity_roleArn :: Lens' DeviceShadowEnrichActivity Text

-- | The time when the estimate of the size of the resource was made.
estimatedResourceSize_estimatedOn :: Lens' EstimatedResourceSize (Maybe UTCTime)

-- | The estimated size of the resource, in bytes.
estimatedResourceSize_estimatedSizeInBytes :: Lens' EstimatedResourceSize (Maybe Double)

-- | Contains the configuration information of the JSON format.
fileFormatConfiguration_jsonConfiguration :: Lens' FileFormatConfiguration (Maybe JsonConfiguration)

-- | Contains the configuration information of the Parquet format.
fileFormatConfiguration_parquetConfiguration :: Lens' FileFormatConfiguration (Maybe ParquetConfiguration)

-- | The next activity in the pipeline.
filterActivity_next :: Lens' FilterActivity (Maybe Text)

-- | The name of the filter activity.
filterActivity_name :: Lens' FilterActivity Text

-- | An expression that looks like a SQL WHERE clause that must return a
--   Boolean value. Messages that satisfy the condition are passed to the
--   next activity.
filterActivity_filter :: Lens' FilterActivity Text

-- | The name of the table in your Glue Data Catalog that is used to
--   perform the ETL operations. An Glue Data Catalog table contains
--   partitioned data and descriptions of data sources and targets.
glueConfiguration_tableName :: Lens' GlueConfiguration Text

-- | The name of the database in your Glue Data Catalog in which the table
--   is located. An Glue Data Catalog database contains metadata tables.
glueConfiguration_databaseName :: Lens' GlueConfiguration Text

-- | The name of the IoT Events input to which dataset contents are
--   delivered.
iotEventsDestinationConfiguration_inputName :: Lens' IotEventsDestinationConfiguration Text

-- | The ARN of the role that grants IoT Analytics permission to deliver
--   dataset contents to an IoT Events input.
iotEventsDestinationConfiguration_roleArn :: Lens' IotEventsDestinationConfiguration Text

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
iotSiteWiseCustomerManagedDatastoreS3Storage_keyPrefix :: Lens' IotSiteWiseCustomerManagedDatastoreS3Storage (Maybe Text)

-- | The name of the Amazon S3 bucket where your data is stored.
iotSiteWiseCustomerManagedDatastoreS3Storage_bucket :: Lens' IotSiteWiseCustomerManagedDatastoreS3Storage Text

-- | The name of the Amazon S3 bucket where your data is stored.
iotSiteWiseCustomerManagedDatastoreS3StorageSummary_bucket :: Lens' IotSiteWiseCustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
iotSiteWiseCustomerManagedDatastoreS3StorageSummary_keyPrefix :: Lens' IotSiteWiseCustomerManagedDatastoreS3StorageSummary (Maybe Text)

-- | The next activity in the pipeline.
lambdaActivity_next :: Lens' LambdaActivity (Maybe Text)

-- | The name of the lambda activity.
lambdaActivity_name :: Lens' LambdaActivity Text

-- | The name of the Lambda function that is run on the message.
lambdaActivity_lambdaName :: Lens' LambdaActivity Text

-- | The number of messages passed to the Lambda function for processing.
--   
--   The Lambda function must be able to process all of these messages
--   within five minutes, which is the maximum timeout duration for Lambda
--   functions.
lambdaActivity_batchSize :: Lens' LambdaActivity Natural

-- | The name of the late data rule.
lateDataRule_ruleName :: Lens' LateDataRule (Maybe Text)

-- | The information needed to configure the late data rule.
lateDataRule_ruleConfiguration :: Lens' LateDataRule LateDataRuleConfiguration

-- | The information needed to configure a delta time session window.
lateDataRuleConfiguration_deltaTimeSessionWindowConfiguration :: Lens' LateDataRuleConfiguration (Maybe DeltaTimeSessionWindowConfiguration)

-- | The ARN of the role that grants permission to IoT Analytics to perform
--   logging.
loggingOptions_roleArn :: Lens' LoggingOptions Text

-- | The logging level. Currently, only ERROR is supported.
loggingOptions_level :: Lens' LoggingOptions LoggingLevel

-- | If true, logging is enabled for IoT Analytics.
loggingOptions_enabled :: Lens' LoggingOptions Bool

-- | The next activity in the pipeline.
mathActivity_next :: Lens' MathActivity (Maybe Text)

-- | The name of the math activity.
mathActivity_name :: Lens' MathActivity Text

-- | The name of the attribute that contains the result of the math
--   operation.
mathActivity_attribute :: Lens' MathActivity Text

-- | An expression that uses one or more existing attributes and must
--   return an integer value.
mathActivity_math :: Lens' MathActivity Text

-- | The ID you want to assign to the message. Each <tt>messageId</tt> must
--   be unique within each batch sent.
message_messageId :: Lens' Message Text

-- | The payload of the message. This can be a JSON string or a
--   base64-encoded string representing binary data, in which case you must
--   decode it by means of a pipeline activity.-- -- <i>Note:</i> This
--   <tt>Lens</tt> automatically encodes and decodes Base64 data. -- The
--   underlying isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
message_payload :: Lens' Message ByteString

-- | The URI of the location where dataset contents are stored, usually the
--   URI of a file in an S3 bucket.
outputFileUriValue_fileName :: Lens' OutputFileUriValue Text

-- | Information needed to define a schema.
parquetConfiguration_schemaDefinition :: Lens' ParquetConfiguration (Maybe SchemaDefinition)

-- | The name of the attribute that defines a partition dimension.
partition_attributeName :: Lens' Partition Text

-- | When the pipeline was created.
pipeline_creationTime :: Lens' Pipeline (Maybe UTCTime)

-- | The ARN of the pipeline.
pipeline_arn :: Lens' Pipeline (Maybe Text)

-- | The activities that perform transformations on the messages.
pipeline_activities :: Lens' Pipeline (Maybe (NonEmpty PipelineActivity))

-- | The name of the pipeline.
pipeline_name :: Lens' Pipeline (Maybe Text)

-- | A summary of information about the pipeline reprocessing.
pipeline_reprocessingSummaries :: Lens' Pipeline (Maybe [ReprocessingSummary])

-- | The last time the pipeline was updated.
pipeline_lastUpdateTime :: Lens' Pipeline (Maybe UTCTime)

-- | Used to create a new message using only the specified attributes from
--   the original message.
pipelineActivity_selectAttributes :: Lens' PipelineActivity (Maybe SelectAttributesActivity)

-- | Determines the source of the messages to be processed.
pipelineActivity_channel :: Lens' PipelineActivity (Maybe ChannelActivity)

-- | Adds other attributes based on existing attributes in the message.
pipelineActivity_addAttributes :: Lens' PipelineActivity (Maybe AddAttributesActivity)

-- | Adds data from the IoT device registry to your message.
pipelineActivity_deviceRegistryEnrich :: Lens' PipelineActivity (Maybe DeviceRegistryEnrichActivity)

-- | Removes attributes from a message.
pipelineActivity_removeAttributes :: Lens' PipelineActivity (Maybe RemoveAttributesActivity)

-- | Runs a Lambda function to modify the message.
pipelineActivity_lambda :: Lens' PipelineActivity (Maybe LambdaActivity)

-- | Specifies where to store the processed message data.
pipelineActivity_datastore :: Lens' PipelineActivity (Maybe DatastoreActivity)

-- | Adds information from the IoT Device Shadow service to a message.
pipelineActivity_deviceShadowEnrich :: Lens' PipelineActivity (Maybe DeviceShadowEnrichActivity)

-- | Filters a message based on its attributes.
pipelineActivity_filter :: Lens' PipelineActivity (Maybe FilterActivity)

-- | Computes an arithmetic expression using the message's attributes and
--   adds it to the message.
pipelineActivity_math :: Lens' PipelineActivity (Maybe MathActivity)

-- | When the pipeline was created.
pipelineSummary_creationTime :: Lens' PipelineSummary (Maybe UTCTime)

-- | The name of the pipeline.
pipelineSummary_pipelineName :: Lens' PipelineSummary (Maybe Text)

-- | A summary of information about the pipeline reprocessing.
pipelineSummary_reprocessingSummaries :: Lens' PipelineSummary (Maybe [ReprocessingSummary])

-- | When the pipeline was last updated.
pipelineSummary_lastUpdateTime :: Lens' PipelineSummary (Maybe UTCTime)

-- | Used to limit data to that which has arrived since the last execution
--   of the action.
queryFilter_deltaTime :: Lens' QueryFilter (Maybe DeltaTime)

-- | The next activity in the pipeline.
removeAttributesActivity_next :: Lens' RemoveAttributesActivity (Maybe Text)

-- | The name of the <tt>removeAttributes</tt> activity.
removeAttributesActivity_name :: Lens' RemoveAttributesActivity Text

-- | A list of 1-50 attributes to remove from the message.
removeAttributesActivity_attributes :: Lens' RemoveAttributesActivity (NonEmpty Text)

-- | The time the pipeline reprocessing was created.
reprocessingSummary_creationTime :: Lens' ReprocessingSummary (Maybe UTCTime)

-- | The status of the pipeline reprocessing.
reprocessingSummary_status :: Lens' ReprocessingSummary (Maybe ReprocessingStatus)

-- | The <tt>reprocessingId</tt> returned by
--   <tt>StartPipelineReprocessing</tt>.
reprocessingSummary_id :: Lens' ReprocessingSummary (Maybe Text)

-- | The type of the compute resource used to execute the
--   <tt>containerAction</tt>. Possible values are: <tt>ACU_1</tt> (vCPU=4,
--   memory=16 GiB) or <tt>ACU_2</tt> (vCPU=8, memory=32 GiB).
resourceConfiguration_computeType :: Lens' ResourceConfiguration ComputeType

-- | The size, in GB, of the persistent storage available to the resource
--   instance used to execute the <tt>containerAction</tt> (min: 1, max:
--   50).
resourceConfiguration_volumeSizeInGB :: Lens' ResourceConfiguration Natural

-- | If true, message data is kept indefinitely.
retentionPeriod_unlimited :: Lens' RetentionPeriod (Maybe Bool)

-- | The number of days that message data is kept. The <tt>unlimited</tt>
--   parameter must be false.
retentionPeriod_numberOfDays :: Lens' RetentionPeriod (Maybe Natural)

-- | Configuration information for coordination with Glue, a fully managed
--   extract, transform and load (ETL) service.
s3DestinationConfiguration_glueConfiguration :: Lens' S3DestinationConfiguration (Maybe GlueConfiguration)

-- | The name of the S3 bucket to which dataset contents are delivered.
s3DestinationConfiguration_bucket :: Lens' S3DestinationConfiguration Text

-- | The key of the dataset contents object in an S3 bucket. Each object
--   has a key that is a unique identifier. Each object has exactly one
--   key.
--   
--   You can create a unique key with the following options:
--   
--   <ul>
--   <li>Use <tt>!{iotanalytics:scheduleTime}</tt> to insert the time of a
--   scheduled SQL query run.</li>
--   <li>Use <tt>!{iotanalytics:versionId}</tt> to insert a unique hash
--   that identifies a dataset content.</li>
--   <li>Use <tt>!{iotanalytics:creationTime}</tt> to insert the creation
--   time of a dataset content.</li>
--   </ul>
--   
--   The following example creates a unique key for a CSV file:
--   <tt>dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv</tt>
--   
--   If you don't use <tt>!{iotanalytics:versionId}</tt> to specify the
--   key, you might get duplicate keys. For example, you might have two
--   dataset contents with the same <tt>scheduleTime</tt> but different
--   <tt>versionId</tt>s. This means that one dataset content overwrites
--   the other.
s3DestinationConfiguration_key :: Lens' S3DestinationConfiguration Text

-- | The ARN of the role that grants IoT Analytics permission to interact
--   with your Amazon S3 and Glue resources.
s3DestinationConfiguration_roleArn :: Lens' S3DestinationConfiguration Text

-- | The expression that defines when to trigger an update. For more
--   information, see <a>Schedule Expressions for Rules</a> in the
--   <i>Amazon CloudWatch Events User Guide</i>.
schedule_expression :: Lens' Schedule (Maybe Text)

-- | Specifies one or more columns that store your data.
--   
--   Each schema can have up to 100 columns. Each column can have up to 100
--   nested types.
schemaDefinition_columns :: Lens' SchemaDefinition (Maybe [Column])

-- | The next activity in the pipeline.
selectAttributesActivity_next :: Lens' SelectAttributesActivity (Maybe Text)

-- | The name of the <tt>selectAttributes</tt> activity.
selectAttributesActivity_name :: Lens' SelectAttributesActivity Text

-- | A list of the attributes to select from the message.
selectAttributesActivity_attributes :: Lens' SelectAttributesActivity (NonEmpty Text)

-- | Prefilters applied to message data.
sqlQueryDatasetAction_filters :: Lens' SqlQueryDatasetAction (Maybe [QueryFilter])

-- | A SQL query string.
sqlQueryDatasetAction_sqlQuery :: Lens' SqlQueryDatasetAction Text

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text

-- | The timestamp format of a partition defined by a timestamp. The
--   default format is seconds since epoch (January 1, 1970 at midnight UTC
--   time).
timestampPartition_timestampFormat :: Lens' TimestampPartition (Maybe Text)

-- | The attribute name of the partition defined by a timestamp.
timestampPartition_attributeName :: Lens' TimestampPartition Text

-- | The name of the dataset whose content generation triggers the new
--   dataset content generation.
triggeringDataset_name :: Lens' TriggeringDataset Text

-- | The value of the variable as a structure that specifies an output file
--   URI.
variable_outputFileUriValue :: Lens' Variable (Maybe OutputFileUriValue)

-- | The value of the variable as a double (numeric).
variable_doubleValue :: Lens' Variable (Maybe Double)

-- | The value of the variable as a string.
variable_stringValue :: Lens' Variable (Maybe Text)

-- | The value of the variable as a structure that specifies a dataset
--   content version.
variable_datasetContentVersionValue :: Lens' Variable (Maybe DatasetContentVersionValue)

-- | The name of the variable.
variable_name :: Lens' Variable Text

-- | If true, unlimited versions of dataset contents are kept.
versioningConfiguration_unlimited :: Lens' VersioningConfiguration (Maybe Bool)

-- | How many versions of dataset contents are kept. The <tt>unlimited</tt>
--   parameter must be <tt>false</tt>.
versioningConfiguration_maxVersions :: Lens' VersioningConfiguration (Maybe Natural)


module Amazonka.IoTAnalytics.Waiters


-- | Derived from API version <tt>2017-11-27</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   IoT Analytics allows you to collect large amounts of device data,
--   process messages, and store them. You can then query the data and run
--   sophisticated analytics on it. IoT Analytics enables advanced data
--   exploration through integration with Jupyter Notebooks and data
--   visualization through integration with Amazon QuickSight.
--   
--   Traditional analytics and business intelligence tools are designed to
--   process structured data. IoT data often comes from devices that record
--   noisy processes (such as temperature, motion, or sound). As a result
--   the data from these devices can have significant gaps, corrupted
--   messages, and false readings that must be cleaned up before analysis
--   can occur. Also, IoT data is often only meaningful in the context of
--   other data from external sources.
--   
--   IoT Analytics automates the steps required to analyze data from IoT
--   devices. IoT Analytics filters, transforms, and enriches IoT data
--   before storing it in a time-series data store for analysis. You can
--   set up the service to collect only the data you need from your
--   devices, apply mathematical transforms to process the data, and enrich
--   the data with device-specific metadata such as device type and
--   location before storing it. Then, you can analyze your data by running
--   queries using the built-in SQL query engine, or perform more complex
--   analytics and machine learning inference. IoT Analytics includes
--   pre-built models for common IoT use cases so you can answer questions
--   like which devices are about to fail or which customers are at risk of
--   abandoning their wearable devices.
module Amazonka.IoTAnalytics

-- | API version <tt>2017-11-27</tt> of the Amazon IoT Analytics SDK
--   configuration.
defaultService :: Service

-- | The request was not valid.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource with the same name already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was denied due to request throttling.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was an internal failure.
_InternalFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is temporarily unavailable.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A resource with the specified name could not be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The command caused an internal limit to be exceeded.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribePipeline</a> smart constructor.
data DescribePipeline
DescribePipeline' :: Text -> DescribePipeline

-- | Create a value of <a>DescribePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:DescribePipeline'</a>,
--   <a>describePipeline_pipelineName</a> - The name of the pipeline whose
--   information is retrieved.
newDescribePipeline :: Text -> DescribePipeline

-- | <i>See:</i> <a>newDescribePipelineResponse</a> smart constructor.
data DescribePipelineResponse
DescribePipelineResponse' :: Maybe Pipeline -> Int -> DescribePipelineResponse

-- | Create a value of <a>DescribePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipeline:DescribePipelineResponse'</a>,
--   <a>describePipelineResponse_pipeline</a> - A <tt>Pipeline</tt> object
--   that contains information about the pipeline.
--   
--   <a>$sel:httpStatus:DescribePipelineResponse'</a>,
--   <a>describePipelineResponse_httpStatus</a> - The response's http
--   status code.
newDescribePipelineResponse :: Int -> DescribePipelineResponse

-- | <i>See:</i> <a>newDescribeDataset</a> smart constructor.
data DescribeDataset
DescribeDataset' :: Text -> DescribeDataset

-- | Create a value of <a>DescribeDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:DescribeDataset'</a>,
--   <a>describeDataset_datasetName</a> - The name of the dataset whose
--   information is retrieved.
newDescribeDataset :: Text -> DescribeDataset

-- | <i>See:</i> <a>newDescribeDatasetResponse</a> smart constructor.
data DescribeDatasetResponse
DescribeDatasetResponse' :: Maybe Dataset -> Int -> DescribeDatasetResponse

-- | Create a value of <a>DescribeDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataset:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_dataset</a> - An object that contains
--   information about the dataset.
--   
--   <a>$sel:httpStatus:DescribeDatasetResponse'</a>,
--   <a>describeDatasetResponse_httpStatus</a> - The response's http status
--   code.
newDescribeDatasetResponse :: Int -> DescribeDatasetResponse

-- | <i>See:</i> <a>newListChannels</a> smart constructor.
data ListChannels
ListChannels' :: Maybe Text -> Maybe Natural -> ListChannels

-- | Create a value of <a>ListChannels</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChannels'</a>, <a>listChannels_nextToken</a> -
--   The token for the next set of results.
--   
--   <a>$sel:maxResults:ListChannels'</a>, <a>listChannels_maxResults</a> -
--   The maximum number of results to return in this request.
--   
--   The default value is 100.
newListChannels :: ListChannels

-- | <i>See:</i> <a>newListChannelsResponse</a> smart constructor.
data ListChannelsResponse
ListChannelsResponse' :: Maybe [ChannelSummary] -> Maybe Text -> Int -> ListChannelsResponse

-- | Create a value of <a>ListChannelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelSummaries:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_channelSummaries</a> - A list of
--   <tt>ChannelSummary</tt> objects.
--   
--   <a>$sel:nextToken:ListChannels'</a>,
--   <a>listChannelsResponse_nextToken</a> - The token to retrieve the next
--   set of results, or <tt>null</tt> if there are no more results.
--   
--   <a>$sel:httpStatus:ListChannelsResponse'</a>,
--   <a>listChannelsResponse_httpStatus</a> - The response's http status
--   code.
newListChannelsResponse :: Int -> ListChannelsResponse

-- | <i>See:</i> <a>newListDatasetContents</a> smart constructor.
data ListDatasetContents
ListDatasetContents' :: Maybe Text -> Maybe POSIX -> Maybe Natural -> Maybe POSIX -> Text -> ListDatasetContents

-- | Create a value of <a>ListDatasetContents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasetContents'</a>,
--   <a>listDatasetContents_nextToken</a> - The token for the next set of
--   results.
--   
--   <a>$sel:scheduledBefore:ListDatasetContents'</a>,
--   <a>listDatasetContents_scheduledBefore</a> - A filter to limit results
--   to those dataset contents whose creation is scheduled before the given
--   time. See the field <tt>triggers.schedule</tt> in the
--   <tt>CreateDataset</tt> request. (timestamp)
--   
--   <a>$sel:maxResults:ListDatasetContents'</a>,
--   <a>listDatasetContents_maxResults</a> - The maximum number of results
--   to return in this request.
--   
--   <a>$sel:scheduledOnOrAfter:ListDatasetContents'</a>,
--   <a>listDatasetContents_scheduledOnOrAfter</a> - A filter to limit
--   results to those dataset contents whose creation is scheduled on or
--   after the given time. See the field <tt>triggers.schedule</tt> in the
--   <tt>CreateDataset</tt> request. (timestamp)
--   
--   <a>$sel:datasetName:ListDatasetContents'</a>,
--   <a>listDatasetContents_datasetName</a> - The name of the dataset whose
--   contents information you want to list.
newListDatasetContents :: Text -> ListDatasetContents

-- | <i>See:</i> <a>newListDatasetContentsResponse</a> smart constructor.
data ListDatasetContentsResponse
ListDatasetContentsResponse' :: Maybe [DatasetContentSummary] -> Maybe Text -> Int -> ListDatasetContentsResponse

-- | Create a value of <a>ListDatasetContentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetContentSummaries:ListDatasetContentsResponse'</a>,
--   <a>listDatasetContentsResponse_datasetContentSummaries</a> - Summary
--   information about dataset contents that have been created.
--   
--   <a>$sel:nextToken:ListDatasetContents'</a>,
--   <a>listDatasetContentsResponse_nextToken</a> - The token to retrieve
--   the next set of results, or <tt>null</tt> if there are no more
--   results.
--   
--   <a>$sel:httpStatus:ListDatasetContentsResponse'</a>,
--   <a>listDatasetContentsResponse_httpStatus</a> - The response's http
--   status code.
newListDatasetContentsResponse :: Int -> ListDatasetContentsResponse

-- | <i>See:</i> <a>newPutLoggingOptions</a> smart constructor.
data PutLoggingOptions
PutLoggingOptions' :: LoggingOptions -> PutLoggingOptions

-- | Create a value of <a>PutLoggingOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingOptions:PutLoggingOptions'</a>,
--   <a>putLoggingOptions_loggingOptions</a> - The new values of the IoT
--   Analytics logging options.
newPutLoggingOptions :: LoggingOptions -> PutLoggingOptions

-- | <i>See:</i> <a>newPutLoggingOptionsResponse</a> smart constructor.
data PutLoggingOptionsResponse
PutLoggingOptionsResponse' :: PutLoggingOptionsResponse

-- | Create a value of <a>PutLoggingOptionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newPutLoggingOptionsResponse :: PutLoggingOptionsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The ARN of the resource whose
--   tags you want to list.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (NonEmpty Tag) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags (metadata) that you
--   have assigned to the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDeleteChannel</a> smart constructor.
data DeleteChannel
DeleteChannel' :: Text -> DeleteChannel

-- | Create a value of <a>DeleteChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:DeleteChannel'</a>,
--   <a>deleteChannel_channelName</a> - The name of the channel to delete.
newDeleteChannel :: Text -> DeleteChannel

-- | <i>See:</i> <a>newDeleteChannelResponse</a> smart constructor.
data DeleteChannelResponse
DeleteChannelResponse' :: DeleteChannelResponse

-- | Create a value of <a>DeleteChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteChannelResponse :: DeleteChannelResponse

-- | <i>See:</i> <a>newUpdateChannel</a> smart constructor.
data UpdateChannel
UpdateChannel' :: Maybe RetentionPeriod -> Maybe ChannelStorage -> Text -> UpdateChannel

-- | Create a value of <a>UpdateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retentionPeriod:UpdateChannel'</a>,
--   <a>updateChannel_retentionPeriod</a> - How long, in days, message data
--   is kept for the channel. The retention period can't be updated if the
--   channel's Amazon S3 storage is customer-managed.
--   
--   <a>$sel:channelStorage:UpdateChannel'</a>,
--   <a>updateChannel_channelStorage</a> - Where channel data is stored.
--   You can choose one of <tt>serviceManagedS3</tt> or
--   <tt>customerManagedS3</tt> storage. If not specified, the default is
--   <tt>serviceManagedS3</tt>. You can't change this storage option after
--   the channel is created.
--   
--   <a>$sel:channelName:UpdateChannel'</a>,
--   <a>updateChannel_channelName</a> - The name of the channel to be
--   updated.
newUpdateChannel :: Text -> UpdateChannel

-- | <i>See:</i> <a>newUpdateChannelResponse</a> smart constructor.
data UpdateChannelResponse
UpdateChannelResponse' :: UpdateChannelResponse

-- | Create a value of <a>UpdateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateChannelResponse :: UpdateChannelResponse

-- | <i>See:</i> <a>newSampleChannelData</a> smart constructor.
data SampleChannelData
SampleChannelData' :: Maybe POSIX -> Maybe Natural -> Maybe POSIX -> Text -> SampleChannelData

-- | Create a value of <a>SampleChannelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:SampleChannelData'</a>,
--   <a>sampleChannelData_startTime</a> - The start of the time window from
--   which sample messages are retrieved.
--   
--   <a>$sel:maxMessages:SampleChannelData'</a>,
--   <a>sampleChannelData_maxMessages</a> - The number of sample messages
--   to be retrieved. The limit is 10. The default is also 10.
--   
--   <a>$sel:endTime:SampleChannelData'</a>,
--   <a>sampleChannelData_endTime</a> - The end of the time window from
--   which sample messages are retrieved.
--   
--   <a>$sel:channelName:SampleChannelData'</a>,
--   <a>sampleChannelData_channelName</a> - The name of the channel whose
--   message samples are retrieved.
newSampleChannelData :: Text -> SampleChannelData

-- | <i>See:</i> <a>newSampleChannelDataResponse</a> smart constructor.
data SampleChannelDataResponse
SampleChannelDataResponse' :: Maybe (NonEmpty Base64) -> Int -> SampleChannelDataResponse

-- | Create a value of <a>SampleChannelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:payloads:SampleChannelDataResponse'</a>,
--   <a>sampleChannelDataResponse_payloads</a> - The list of message
--   samples. Each sample message is returned as a base64-encoded string.
--   
--   <a>$sel:httpStatus:SampleChannelDataResponse'</a>,
--   <a>sampleChannelDataResponse_httpStatus</a> - The response's http
--   status code.
newSampleChannelDataResponse :: Int -> SampleChannelDataResponse

-- | <i>See:</i> <a>newCancelPipelineReprocessing</a> smart constructor.
data CancelPipelineReprocessing
CancelPipelineReprocessing' :: Text -> Text -> CancelPipelineReprocessing

-- | Create a value of <a>CancelPipelineReprocessing</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:CancelPipelineReprocessing'</a>,
--   <a>cancelPipelineReprocessing_pipelineName</a> - The name of pipeline
--   for which data reprocessing is canceled.
--   
--   <a>$sel:reprocessingId:CancelPipelineReprocessing'</a>,
--   <a>cancelPipelineReprocessing_reprocessingId</a> - The ID of the
--   reprocessing task (returned by <tt>StartPipelineReprocessing</tt>).
newCancelPipelineReprocessing :: Text -> Text -> CancelPipelineReprocessing

-- | <i>See:</i> <a>newCancelPipelineReprocessingResponse</a> smart
--   constructor.
data CancelPipelineReprocessingResponse
CancelPipelineReprocessingResponse' :: Int -> CancelPipelineReprocessingResponse

-- | Create a value of <a>CancelPipelineReprocessingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CancelPipelineReprocessingResponse'</a>,
--   <a>cancelPipelineReprocessingResponse_httpStatus</a> - The response's
--   http status code.
newCancelPipelineReprocessingResponse :: Int -> CancelPipelineReprocessingResponse

-- | <i>See:</i> <a>newCreateDatastore</a> smart constructor.
data CreateDatastore
CreateDatastore' :: Maybe FileFormatConfiguration -> Maybe DatastorePartitions -> Maybe RetentionPeriod -> Maybe DatastoreStorage -> Maybe (NonEmpty Tag) -> Text -> CreateDatastore

-- | Create a value of <a>CreateDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileFormatConfiguration:CreateDatastore'</a>,
--   <a>createDatastore_fileFormatConfiguration</a> - Contains the
--   configuration information of file formats. IoT Analytics data stores
--   support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
--   
--   <a>$sel:datastorePartitions:CreateDatastore'</a>,
--   <a>createDatastore_datastorePartitions</a> - Contains information
--   about the partition dimensions in a data store.
--   
--   <a>$sel:retentionPeriod:CreateDatastore'</a>,
--   <a>createDatastore_retentionPeriod</a> - How long, in days, message
--   data is kept for the data store. When <tt>customerManagedS3</tt>
--   storage is selected, this parameter is ignored.
--   
--   <a>$sel:datastoreStorage:CreateDatastore'</a>,
--   <a>createDatastore_datastoreStorage</a> - Where data in a data store
--   is stored.. You can choose <tt>serviceManagedS3</tt> storage,
--   <tt>customerManagedS3</tt> storage, or
--   <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
--   
--   <a>$sel:tags:CreateDatastore'</a>, <a>createDatastore_tags</a> -
--   Metadata which can be used to manage the data store.
--   
--   <a>$sel:datastoreName:CreateDatastore'</a>,
--   <a>createDatastore_datastoreName</a> - The name of the data store.
newCreateDatastore :: Text -> CreateDatastore

-- | <i>See:</i> <a>newCreateDatastoreResponse</a> smart constructor.
data CreateDatastoreResponse
CreateDatastoreResponse' :: Maybe Text -> Maybe Text -> Maybe RetentionPeriod -> Int -> CreateDatastoreResponse

-- | Create a value of <a>CreateDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreArn:CreateDatastoreResponse'</a>,
--   <a>createDatastoreResponse_datastoreArn</a> - The ARN of the data
--   store.
--   
--   <a>$sel:datastoreName:CreateDatastore'</a>,
--   <a>createDatastoreResponse_datastoreName</a> - The name of the data
--   store.
--   
--   <a>$sel:retentionPeriod:CreateDatastore'</a>,
--   <a>createDatastoreResponse_retentionPeriod</a> - How long, in days,
--   message data is kept for the data store.
--   
--   <a>$sel:httpStatus:CreateDatastoreResponse'</a>,
--   <a>createDatastoreResponse_httpStatus</a> - The response's http status
--   code.
newCreateDatastoreResponse :: Int -> CreateDatastoreResponse

-- | <i>See:</i> <a>newUpdatePipeline</a> smart constructor.
data UpdatePipeline
UpdatePipeline' :: Text -> NonEmpty PipelineActivity -> UpdatePipeline

-- | Create a value of <a>UpdatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:UpdatePipeline'</a>,
--   <a>updatePipeline_pipelineName</a> - The name of the pipeline to
--   update.
--   
--   <a>$sel:pipelineActivities:UpdatePipeline'</a>,
--   <a>updatePipeline_pipelineActivities</a> - A list of
--   <tt>PipelineActivity</tt> objects. Activities perform transformations
--   on your messages, such as removing, renaming or adding message
--   attributes; filtering messages based on attribute values; invoking
--   your Lambda functions on messages for advanced processing; or
--   performing mathematical transformations to normalize device data.
--   
--   The list can be 2-25 <tt>PipelineActivity</tt> objects and must
--   contain both a <tt>channel</tt> and a <tt>datastore</tt> activity.
--   Each entry in the list must contain only one activity. For example:
--   
--   <pre>
--   pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]
--   </pre>
newUpdatePipeline :: Text -> NonEmpty PipelineActivity -> UpdatePipeline

-- | <i>See:</i> <a>newUpdatePipelineResponse</a> smart constructor.
data UpdatePipelineResponse
UpdatePipelineResponse' :: UpdatePipelineResponse

-- | Create a value of <a>UpdatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdatePipelineResponse :: UpdatePipelineResponse

-- | <i>See:</i> <a>newDeletePipeline</a> smart constructor.
data DeletePipeline
DeletePipeline' :: Text -> DeletePipeline

-- | Create a value of <a>DeletePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:DeletePipeline'</a>,
--   <a>deletePipeline_pipelineName</a> - The name of the pipeline to
--   delete.
newDeletePipeline :: Text -> DeletePipeline

-- | <i>See:</i> <a>newDeletePipelineResponse</a> smart constructor.
data DeletePipelineResponse
DeletePipelineResponse' :: DeletePipelineResponse

-- | Create a value of <a>DeletePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeletePipelineResponse :: DeletePipelineResponse

-- | <i>See:</i> <a>newDeleteDataset</a> smart constructor.
data DeleteDataset
DeleteDataset' :: Text -> DeleteDataset

-- | Create a value of <a>DeleteDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:DeleteDataset'</a>,
--   <a>deleteDataset_datasetName</a> - The name of the dataset to delete.
newDeleteDataset :: Text -> DeleteDataset

-- | <i>See:</i> <a>newDeleteDatasetResponse</a> smart constructor.
data DeleteDatasetResponse
DeleteDatasetResponse' :: DeleteDatasetResponse

-- | Create a value of <a>DeleteDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatasetResponse :: DeleteDatasetResponse

-- | <i>See:</i> <a>newUpdateDataset</a> smart constructor.
data UpdateDataset
UpdateDataset' :: Maybe VersioningConfiguration -> Maybe [DatasetTrigger] -> Maybe RetentionPeriod -> Maybe (NonEmpty LateDataRule) -> Maybe [DatasetContentDeliveryRule] -> Text -> NonEmpty DatasetAction -> UpdateDataset

-- | Create a value of <a>UpdateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versioningConfiguration:UpdateDataset'</a>,
--   <a>updateDataset_versioningConfiguration</a> - Optional. How many
--   versions of dataset contents are kept. If not specified or set to
--   null, only the latest version plus the latest succeeded version (if
--   they are different) are kept for the time period specified by the
--   <tt>retentionPeriod</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
--   
--   <a>$sel:triggers:UpdateDataset'</a>, <a>updateDataset_triggers</a> - A
--   list of <tt>DatasetTrigger</tt> objects. The list can be empty or can
--   contain up to five <tt>DatasetTrigger</tt> objects.
--   
--   <a>$sel:retentionPeriod:UpdateDataset'</a>,
--   <a>updateDataset_retentionPeriod</a> - How long, in days, dataset
--   contents are kept for the dataset.
--   
--   <a>$sel:lateDataRules:UpdateDataset'</a>,
--   <a>updateDataset_lateDataRules</a> - A list of data rules that send
--   notifications to CloudWatch, when data arrives late. To specify
--   <tt>lateDataRules</tt>, the dataset must use a <a>DeltaTimer</a>
--   filter.
--   
--   <a>$sel:contentDeliveryRules:UpdateDataset'</a>,
--   <a>updateDataset_contentDeliveryRules</a> - When dataset contents are
--   created, they are delivered to destinations specified here.
--   
--   <a>$sel:datasetName:UpdateDataset'</a>,
--   <a>updateDataset_datasetName</a> - The name of the dataset to update.
--   
--   <a>$sel:actions:UpdateDataset'</a>, <a>updateDataset_actions</a> - A
--   list of <tt>DatasetAction</tt> objects.
newUpdateDataset :: Text -> NonEmpty DatasetAction -> UpdateDataset

-- | <i>See:</i> <a>newUpdateDatasetResponse</a> smart constructor.
data UpdateDatasetResponse
UpdateDatasetResponse' :: UpdateDatasetResponse

-- | Create a value of <a>UpdateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateDatasetResponse :: UpdateDatasetResponse

-- | <i>See:</i> <a>newListPipelines</a> smart constructor.
data ListPipelines
ListPipelines' :: Maybe Text -> Maybe Natural -> ListPipelines

-- | Create a value of <a>ListPipelines</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListPipelines'</a>, <a>listPipelines_nextToken</a> -
--   The token for the next set of results.
--   
--   <a>$sel:maxResults:ListPipelines'</a>, <a>listPipelines_maxResults</a>
--   - The maximum number of results to return in this request.
--   
--   The default value is 100.
newListPipelines :: ListPipelines

-- | <i>See:</i> <a>newListPipelinesResponse</a> smart constructor.
data ListPipelinesResponse
ListPipelinesResponse' :: Maybe [PipelineSummary] -> Maybe Text -> Int -> ListPipelinesResponse

-- | Create a value of <a>ListPipelinesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineSummaries:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_pipelineSummaries</a> - A list of
--   <tt>PipelineSummary</tt> objects.
--   
--   <a>$sel:nextToken:ListPipelines'</a>,
--   <a>listPipelinesResponse_nextToken</a> - The token to retrieve the
--   next set of results, or <tt>null</tt> if there are no more results.
--   
--   <a>$sel:httpStatus:ListPipelinesResponse'</a>,
--   <a>listPipelinesResponse_httpStatus</a> - The response's http status
--   code.
newListPipelinesResponse :: Int -> ListPipelinesResponse

-- | <i>See:</i> <a>newDeleteDatastore</a> smart constructor.
data DeleteDatastore
DeleteDatastore' :: Text -> DeleteDatastore

-- | Create a value of <a>DeleteDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastoreName:DeleteDatastore'</a>,
--   <a>deleteDatastore_datastoreName</a> - The name of the data store to
--   delete.
newDeleteDatastore :: Text -> DeleteDatastore

-- | <i>See:</i> <a>newDeleteDatastoreResponse</a> smart constructor.
data DeleteDatastoreResponse
DeleteDatastoreResponse' :: DeleteDatastoreResponse

-- | Create a value of <a>DeleteDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatastoreResponse :: DeleteDatastoreResponse

-- | <i>See:</i> <a>newUpdateDatastore</a> smart constructor.
data UpdateDatastore
UpdateDatastore' :: Maybe FileFormatConfiguration -> Maybe RetentionPeriod -> Maybe DatastoreStorage -> Text -> UpdateDatastore

-- | Create a value of <a>UpdateDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileFormatConfiguration:UpdateDatastore'</a>,
--   <a>updateDatastore_fileFormatConfiguration</a> - Contains the
--   configuration information of file formats. IoT Analytics data stores
--   support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
--   
--   <a>$sel:retentionPeriod:UpdateDatastore'</a>,
--   <a>updateDatastore_retentionPeriod</a> - How long, in days, message
--   data is kept for the data store. The retention period can't be updated
--   if the data store's Amazon S3 storage is customer-managed.
--   
--   <a>$sel:datastoreStorage:UpdateDatastore'</a>,
--   <a>updateDatastore_datastoreStorage</a> - Where data in a data store
--   is stored.. You can choose <tt>serviceManagedS3</tt> storage,
--   <tt>customerManagedS3</tt> storage, or
--   <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
--   
--   <a>$sel:datastoreName:UpdateDatastore'</a>,
--   <a>updateDatastore_datastoreName</a> - The name of the data store to
--   be updated.
newUpdateDatastore :: Text -> UpdateDatastore

-- | <i>See:</i> <a>newUpdateDatastoreResponse</a> smart constructor.
data UpdateDatastoreResponse
UpdateDatastoreResponse' :: UpdateDatastoreResponse

-- | Create a value of <a>UpdateDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUpdateDatastoreResponse :: UpdateDatastoreResponse

-- | <i>See:</i> <a>newCreateDataset</a> smart constructor.
data CreateDataset
CreateDataset' :: Maybe VersioningConfiguration -> Maybe [DatasetTrigger] -> Maybe RetentionPeriod -> Maybe (NonEmpty LateDataRule) -> Maybe [DatasetContentDeliveryRule] -> Maybe (NonEmpty Tag) -> Text -> NonEmpty DatasetAction -> CreateDataset

-- | Create a value of <a>CreateDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versioningConfiguration:CreateDataset'</a>,
--   <a>createDataset_versioningConfiguration</a> - Optional. How many
--   versions of dataset contents are kept. If not specified or set to
--   null, only the latest version plus the latest succeeded version (if
--   they are different) are kept for the time period specified by the
--   <tt>retentionPeriod</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
--   
--   <a>$sel:triggers:CreateDataset'</a>, <a>createDataset_triggers</a> - A
--   list of triggers. A trigger causes dataset contents to be populated at
--   a specified time interval or when another dataset's contents are
--   created. The list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects.
--   
--   <a>$sel:retentionPeriod:CreateDataset'</a>,
--   <a>createDataset_retentionPeriod</a> - Optional. How long, in days,
--   versions of dataset contents are kept for the dataset. If not
--   specified or set to <tt>null</tt>, versions of dataset contents are
--   retained for at most 90 days. The number of versions of dataset
--   contents retained is determined by the
--   <tt>versioningConfiguration</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
--   
--   <a>$sel:lateDataRules:CreateDataset'</a>,
--   <a>createDataset_lateDataRules</a> - A list of data rules that send
--   notifications to CloudWatch, when data arrives late. To specify
--   <tt>lateDataRules</tt>, the dataset must use a <a>DeltaTimer</a>
--   filter.
--   
--   <a>$sel:contentDeliveryRules:CreateDataset'</a>,
--   <a>createDataset_contentDeliveryRules</a> - When dataset contents are
--   created, they are delivered to destinations specified here.
--   
--   <a>$sel:tags:CreateDataset'</a>, <a>createDataset_tags</a> - Metadata
--   which can be used to manage the dataset.
--   
--   <a>$sel:datasetName:CreateDataset'</a>,
--   <a>createDataset_datasetName</a> - The name of the dataset.
--   
--   <a>$sel:actions:CreateDataset'</a>, <a>createDataset_actions</a> - A
--   list of actions that create the dataset contents.
newCreateDataset :: Text -> NonEmpty DatasetAction -> CreateDataset

-- | <i>See:</i> <a>newCreateDatasetResponse</a> smart constructor.
data CreateDatasetResponse
CreateDatasetResponse' :: Maybe Text -> Maybe RetentionPeriod -> Maybe Text -> Int -> CreateDatasetResponse

-- | Create a value of <a>CreateDatasetResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetArn:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_datasetArn</a> - The ARN of the dataset.
--   
--   <a>$sel:retentionPeriod:CreateDataset'</a>,
--   <a>createDatasetResponse_retentionPeriod</a> - How long, in days,
--   dataset contents are kept for the dataset.
--   
--   <a>$sel:datasetName:CreateDataset'</a>,
--   <a>createDatasetResponse_datasetName</a> - The name of the dataset.
--   
--   <a>$sel:httpStatus:CreateDatasetResponse'</a>,
--   <a>createDatasetResponse_httpStatus</a> - The response's http status
--   code.
newCreateDatasetResponse :: Int -> CreateDatasetResponse

-- | <i>See:</i> <a>newBatchPutMessage</a> smart constructor.
data BatchPutMessage
BatchPutMessage' :: Text -> [Message] -> BatchPutMessage

-- | Create a value of <a>BatchPutMessage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelName:BatchPutMessage'</a>,
--   <a>batchPutMessage_channelName</a> - The name of the channel where the
--   messages are sent.
--   
--   <a>$sel:messages:BatchPutMessage'</a>, <a>batchPutMessage_messages</a>
--   - The list of messages to be sent. Each message has the format: {
--   "messageId": "string", "payload": "string"}.
--   
--   The field names of message payloads (data) that you send to IoT
--   Analytics:
--   
--   <ul>
--   <li>Must contain only alphanumeric characters and undescores (_). No
--   other special characters are allowed.</li>
--   <li>Must begin with an alphabetic character or single underscore
--   (_).</li>
--   <li>Cannot contain hyphens (-).</li>
--   <li>In regular expression terms:
--   "^[A-Za-z_]([A-Za-z0-9]*|[A-Za-z0-9][A-Za-z0-9_]*)$".</li>
--   <li>Cannot be more than 255 characters.</li>
--   <li>Are case insensitive. (Fields named foo and FOO in the same
--   payload are considered duplicates.)</li>
--   </ul>
--   
--   For example, {"temp_01": 29} or {"_temp_01": 29} are valid, but
--   {"temp-01": 29}, {"01_temp": 29} or {"__temp_01": 29} are invalid in
--   message payloads.
newBatchPutMessage :: Text -> BatchPutMessage

-- | <i>See:</i> <a>newBatchPutMessageResponse</a> smart constructor.
data BatchPutMessageResponse
BatchPutMessageResponse' :: Maybe [BatchPutMessageErrorEntry] -> Int -> BatchPutMessageResponse

-- | Create a value of <a>BatchPutMessageResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:batchPutMessageErrorEntries:BatchPutMessageResponse'</a>,
--   <a>batchPutMessageResponse_batchPutMessageErrorEntries</a> - A list of
--   any errors encountered when sending the messages to the channel.
--   
--   <a>$sel:httpStatus:BatchPutMessageResponse'</a>,
--   <a>batchPutMessageResponse_httpStatus</a> - The response's http status
--   code.
newBatchPutMessageResponse :: Int -> BatchPutMessageResponse

-- | <i>See:</i> <a>newListDatastores</a> smart constructor.
data ListDatastores
ListDatastores' :: Maybe Text -> Maybe Natural -> ListDatastores

-- | Create a value of <a>ListDatastores</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatastores'</a>, <a>listDatastores_nextToken</a>
--   - The token for the next set of results.
--   
--   <a>$sel:maxResults:ListDatastores'</a>,
--   <a>listDatastores_maxResults</a> - The maximum number of results to
--   return in this request.
--   
--   The default value is 100.
newListDatastores :: ListDatastores

-- | <i>See:</i> <a>newListDatastoresResponse</a> smart constructor.
data ListDatastoresResponse
ListDatastoresResponse' :: Maybe Text -> Maybe [DatastoreSummary] -> Int -> ListDatastoresResponse

-- | Create a value of <a>ListDatastoresResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatastores'</a>,
--   <a>listDatastoresResponse_nextToken</a> - The token to retrieve the
--   next set of results, or <tt>null</tt> if there are no more results.
--   
--   <a>$sel:datastoreSummaries:ListDatastoresResponse'</a>,
--   <a>listDatastoresResponse_datastoreSummaries</a> - A list of
--   <tt>DatastoreSummary</tt> objects.
--   
--   <a>$sel:httpStatus:ListDatastoresResponse'</a>,
--   <a>listDatastoresResponse_httpStatus</a> - The response's http status
--   code.
newListDatastoresResponse :: Int -> ListDatastoresResponse

-- | <i>See:</i> <a>newCreateDatasetContent</a> smart constructor.
data CreateDatasetContent
CreateDatasetContent' :: Maybe Text -> Text -> CreateDatasetContent

-- | Create a value of <a>CreateDatasetContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:CreateDatasetContent'</a>,
--   <a>createDatasetContent_versionId</a> - The version ID of the dataset
--   content. To specify <tt>versionId</tt> for a dataset content, the
--   dataset must use a <a>DeltaTimer</a> filter.
--   
--   <a>$sel:datasetName:CreateDatasetContent'</a>,
--   <a>createDatasetContent_datasetName</a> - The name of the dataset.
newCreateDatasetContent :: Text -> CreateDatasetContent

-- | <i>See:</i> <a>newCreateDatasetContentResponse</a> smart constructor.
data CreateDatasetContentResponse
CreateDatasetContentResponse' :: Maybe Text -> Int -> CreateDatasetContentResponse

-- | Create a value of <a>CreateDatasetContentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:CreateDatasetContent'</a>,
--   <a>createDatasetContentResponse_versionId</a> - The version ID of the
--   dataset contents that are being created.
--   
--   <a>$sel:httpStatus:CreateDatasetContentResponse'</a>,
--   <a>createDatasetContentResponse_httpStatus</a> - The response's http
--   status code.
newCreateDatasetContentResponse :: Int -> CreateDatasetContentResponse

-- | <i>See:</i> <a>newCreateChannel</a> smart constructor.
data CreateChannel
CreateChannel' :: Maybe RetentionPeriod -> Maybe ChannelStorage -> Maybe (NonEmpty Tag) -> Text -> CreateChannel

-- | Create a value of <a>CreateChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retentionPeriod:CreateChannel'</a>,
--   <a>createChannel_retentionPeriod</a> - How long, in days, message data
--   is kept for the channel. When <tt>customerManagedS3</tt> storage is
--   selected, this parameter is ignored.
--   
--   <a>$sel:channelStorage:CreateChannel'</a>,
--   <a>createChannel_channelStorage</a> - Where channel data is stored.
--   You can choose one of <tt>serviceManagedS3</tt> or
--   <tt>customerManagedS3</tt> storage. If not specified, the default is
--   <tt>serviceManagedS3</tt>. You can't change this storage option after
--   the channel is created.
--   
--   <a>$sel:tags:CreateChannel'</a>, <a>createChannel_tags</a> - Metadata
--   which can be used to manage the channel.
--   
--   <a>$sel:channelName:CreateChannel'</a>,
--   <a>createChannel_channelName</a> - The name of the channel.
newCreateChannel :: Text -> CreateChannel

-- | <i>See:</i> <a>newCreateChannelResponse</a> smart constructor.
data CreateChannelResponse
CreateChannelResponse' :: Maybe Text -> Maybe RetentionPeriod -> Maybe Text -> Int -> CreateChannelResponse

-- | Create a value of <a>CreateChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channelArn:CreateChannelResponse'</a>,
--   <a>createChannelResponse_channelArn</a> - The ARN of the channel.
--   
--   <a>$sel:retentionPeriod:CreateChannel'</a>,
--   <a>createChannelResponse_retentionPeriod</a> - How long, in days,
--   message data is kept for the channel.
--   
--   <a>$sel:channelName:CreateChannel'</a>,
--   <a>createChannelResponse_channelName</a> - The name of the channel.
--   
--   <a>$sel:httpStatus:CreateChannelResponse'</a>,
--   <a>createChannelResponse_httpStatus</a> - The response's http status
--   code.
newCreateChannelResponse :: Int -> CreateChannelResponse

-- | <i>See:</i> <a>newDeleteDatasetContent</a> smart constructor.
data DeleteDatasetContent
DeleteDatasetContent' :: Maybe Text -> Text -> DeleteDatasetContent

-- | Create a value of <a>DeleteDatasetContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:DeleteDatasetContent'</a>,
--   <a>deleteDatasetContent_versionId</a> - The version of the dataset
--   whose content is deleted. You can also use the strings "$LATEST" or
--   "$LATEST_SUCCEEDED" to delete the latest or latest successfully
--   completed data set. If not specified, "$LATEST_SUCCEEDED" is the
--   default.
--   
--   <a>$sel:datasetName:DeleteDatasetContent'</a>,
--   <a>deleteDatasetContent_datasetName</a> - The name of the dataset
--   whose content is deleted.
newDeleteDatasetContent :: Text -> DeleteDatasetContent

-- | <i>See:</i> <a>newDeleteDatasetContentResponse</a> smart constructor.
data DeleteDatasetContentResponse
DeleteDatasetContentResponse' :: DeleteDatasetContentResponse

-- | Create a value of <a>DeleteDatasetContentResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDatasetContentResponse :: DeleteDatasetContentResponse

-- | <i>See:</i> <a>newDescribeDatastore</a> smart constructor.
data DescribeDatastore
DescribeDatastore' :: Maybe Bool -> Text -> DescribeDatastore

-- | Create a value of <a>DescribeDatastore</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeStatistics:DescribeDatastore'</a>,
--   <a>describeDatastore_includeStatistics</a> - If true, additional
--   statistical information about the data store is included in the
--   response. This feature can't be used with a data store whose S3
--   storage is customer-managed.
--   
--   <a>$sel:datastoreName:DescribeDatastore'</a>,
--   <a>describeDatastore_datastoreName</a> - The name of the data store
newDescribeDatastore :: Text -> DescribeDatastore

-- | <i>See:</i> <a>newDescribeDatastoreResponse</a> smart constructor.
data DescribeDatastoreResponse
DescribeDatastoreResponse' :: Maybe Datastore -> Maybe DatastoreStatistics -> Int -> DescribeDatastoreResponse

-- | Create a value of <a>DescribeDatastoreResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datastore:DescribeDatastoreResponse'</a>,
--   <a>describeDatastoreResponse_datastore</a> - Information about the
--   data store.
--   
--   <a>$sel:statistics:DescribeDatastoreResponse'</a>,
--   <a>describeDatastoreResponse_statistics</a> - Additional statistical
--   information about the data store. Included if the
--   <tt>includeStatistics</tt> parameter is set to <tt>true</tt> in the
--   request.
--   
--   <a>$sel:httpStatus:DescribeDatastoreResponse'</a>,
--   <a>describeDatastoreResponse_httpStatus</a> - The response's http
--   status code.
newDescribeDatastoreResponse :: Int -> DescribeDatastoreResponse

-- | <i>See:</i> <a>newGetDatasetContent</a> smart constructor.
data GetDatasetContent
GetDatasetContent' :: Maybe Text -> Text -> GetDatasetContent

-- | Create a value of <a>GetDatasetContent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:versionId:GetDatasetContent'</a>,
--   <a>getDatasetContent_versionId</a> - The version of the dataset whose
--   contents are retrieved. You can also use the strings "$LATEST" or
--   "$LATEST_SUCCEEDED" to retrieve the contents of the latest or latest
--   successfully completed dataset. If not specified, "$LATEST_SUCCEEDED"
--   is the default.
--   
--   <a>$sel:datasetName:GetDatasetContent'</a>,
--   <a>getDatasetContent_datasetName</a> - The name of the dataset whose
--   contents are retrieved.
newGetDatasetContent :: Text -> GetDatasetContent

-- | <i>See:</i> <a>newGetDatasetContentResponse</a> smart constructor.
data GetDatasetContentResponse
GetDatasetContentResponse' :: Maybe DatasetContentStatus -> Maybe [DatasetEntry] -> Maybe POSIX -> Int -> GetDatasetContentResponse

-- | Create a value of <a>GetDatasetContentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetDatasetContentResponse'</a>,
--   <a>getDatasetContentResponse_status</a> - The status of the dataset
--   content.
--   
--   <a>$sel:entries:GetDatasetContentResponse'</a>,
--   <a>getDatasetContentResponse_entries</a> - A list of
--   <tt>DatasetEntry</tt> objects.
--   
--   <a>$sel:timestamp:GetDatasetContentResponse'</a>,
--   <a>getDatasetContentResponse_timestamp</a> - The time when the request
--   was made.
--   
--   <a>$sel:httpStatus:GetDatasetContentResponse'</a>,
--   <a>getDatasetContentResponse_httpStatus</a> - The response's http
--   status code.
newGetDatasetContentResponse :: Int -> GetDatasetContentResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The ARN of the resource whose tags you want to modify.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The new or
--   modified tags for the resource.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListDatasets</a> smart constructor.
data ListDatasets
ListDatasets' :: Maybe Text -> Maybe Natural -> ListDatasets

-- | Create a value of <a>ListDatasets</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>, <a>listDatasets_nextToken</a> -
--   The token for the next set of results.
--   
--   <a>$sel:maxResults:ListDatasets'</a>, <a>listDatasets_maxResults</a> -
--   The maximum number of results to return in this request.
--   
--   The default value is 100.
newListDatasets :: ListDatasets

-- | <i>See:</i> <a>newListDatasetsResponse</a> smart constructor.
data ListDatasetsResponse
ListDatasetsResponse' :: Maybe Text -> Maybe [DatasetSummary] -> Int -> ListDatasetsResponse

-- | Create a value of <a>ListDatasetsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListDatasets'</a>,
--   <a>listDatasetsResponse_nextToken</a> - The token to retrieve the next
--   set of results, or <tt>null</tt> if there are no more results.
--   
--   <a>$sel:datasetSummaries:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_datasetSummaries</a> - A list of
--   <tt>DatasetSummary</tt> objects.
--   
--   <a>$sel:httpStatus:ListDatasetsResponse'</a>,
--   <a>listDatasetsResponse_httpStatus</a> - The response's http status
--   code.
newListDatasetsResponse :: Int -> ListDatasetsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The ARN of the resource whose tags
--   you want to remove.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of those tags which you want to remove.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newRunPipelineActivity</a> smart constructor.
data RunPipelineActivity
RunPipelineActivity' :: PipelineActivity -> NonEmpty Base64 -> RunPipelineActivity

-- | Create a value of <a>RunPipelineActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineActivity:RunPipelineActivity'</a>,
--   <a>runPipelineActivity_pipelineActivity</a> - The pipeline activity
--   that is run. This must not be a channel activity or a data store
--   activity because these activities are used in a pipeline only to load
--   the original message and to store the (possibly) transformed message.
--   If a Lambda activity is specified, only short-running Lambda functions
--   (those with a timeout of less than 30 seconds or less) can be used.
--   
--   <a>$sel:payloads:RunPipelineActivity'</a>,
--   <a>runPipelineActivity_payloads</a> - The sample message payloads on
--   which the pipeline activity is run.
newRunPipelineActivity :: PipelineActivity -> NonEmpty ByteString -> RunPipelineActivity

-- | <i>See:</i> <a>newRunPipelineActivityResponse</a> smart constructor.
data RunPipelineActivityResponse
RunPipelineActivityResponse' :: Maybe Text -> Maybe (NonEmpty Base64) -> Int -> RunPipelineActivityResponse

-- | Create a value of <a>RunPipelineActivityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logResult:RunPipelineActivityResponse'</a>,
--   <a>runPipelineActivityResponse_logResult</a> - In case the pipeline
--   activity fails, the log message that is generated.
--   
--   <a>$sel:payloads:RunPipelineActivity'</a>,
--   <a>runPipelineActivityResponse_payloads</a> - The enriched or
--   transformed sample message payloads as base64-encoded strings. (The
--   results of running the pipeline activity on each input sample message
--   payload, encoded in base64.)
--   
--   <a>$sel:httpStatus:RunPipelineActivityResponse'</a>,
--   <a>runPipelineActivityResponse_httpStatus</a> - The response's http
--   status code.
newRunPipelineActivityResponse :: Int -> RunPipelineActivityResponse

-- | <i>See:</i> <a>newDescribeChannel</a> smart constructor.
data DescribeChannel
DescribeChannel' :: Maybe Bool -> Text -> DescribeChannel

-- | Create a value of <a>DescribeChannel</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeStatistics:DescribeChannel'</a>,
--   <a>describeChannel_includeStatistics</a> - If true, additional
--   statistical information about the channel is included in the response.
--   This feature can't be used with a channel whose S3 storage is
--   customer-managed.
--   
--   <a>$sel:channelName:DescribeChannel'</a>,
--   <a>describeChannel_channelName</a> - The name of the channel whose
--   information is retrieved.
newDescribeChannel :: Text -> DescribeChannel

-- | <i>See:</i> <a>newDescribeChannelResponse</a> smart constructor.
data DescribeChannelResponse
DescribeChannelResponse' :: Maybe Channel -> Maybe ChannelStatistics -> Int -> DescribeChannelResponse

-- | Create a value of <a>DescribeChannelResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:channel:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_channel</a> - An object that contains
--   information about the channel.
--   
--   <a>$sel:statistics:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_statistics</a> - Statistics about the
--   channel. Included if the <tt>includeStatistics</tt> parameter is set
--   to <tt>true</tt> in the request.
--   
--   <a>$sel:httpStatus:DescribeChannelResponse'</a>,
--   <a>describeChannelResponse_httpStatus</a> - The response's http status
--   code.
newDescribeChannelResponse :: Int -> DescribeChannelResponse

-- | <i>See:</i> <a>newCreatePipeline</a> smart constructor.
data CreatePipeline
CreatePipeline' :: Maybe (NonEmpty Tag) -> Text -> NonEmpty PipelineActivity -> CreatePipeline

-- | Create a value of <a>CreatePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreatePipeline'</a>, <a>createPipeline_tags</a> -
--   Metadata which can be used to manage the pipeline.
--   
--   <a>$sel:pipelineName:CreatePipeline'</a>,
--   <a>createPipeline_pipelineName</a> - The name of the pipeline.
--   
--   <a>$sel:pipelineActivities:CreatePipeline'</a>,
--   <a>createPipeline_pipelineActivities</a> - A list of
--   <tt>PipelineActivity</tt> objects. Activities perform transformations
--   on your messages, such as removing, renaming or adding message
--   attributes; filtering messages based on attribute values; invoking
--   your Lambda unctions on messages for advanced processing; or
--   performing mathematical transformations to normalize device data.
--   
--   The list can be 2-25 <tt>PipelineActivity</tt> objects and must
--   contain both a <tt>channel</tt> and a <tt>datastore</tt> activity.
--   Each entry in the list must contain only one activity. For example:
--   
--   <pre>
--   pipelineActivities = [ { "channel": { ... } }, { "lambda": { ... } }, ... ]
--   </pre>
newCreatePipeline :: Text -> NonEmpty PipelineActivity -> CreatePipeline

-- | <i>See:</i> <a>newCreatePipelineResponse</a> smart constructor.
data CreatePipelineResponse
CreatePipelineResponse' :: Maybe Text -> Maybe Text -> Int -> CreatePipelineResponse

-- | Create a value of <a>CreatePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:pipelineName:CreatePipeline'</a>,
--   <a>createPipelineResponse_pipelineName</a> - The name of the pipeline.
--   
--   <a>$sel:pipelineArn:CreatePipelineResponse'</a>,
--   <a>createPipelineResponse_pipelineArn</a> - The ARN of the pipeline.
--   
--   <a>$sel:httpStatus:CreatePipelineResponse'</a>,
--   <a>createPipelineResponse_httpStatus</a> - The response's http status
--   code.
newCreatePipelineResponse :: Int -> CreatePipelineResponse

-- | <i>See:</i> <a>newStartPipelineReprocessing</a> smart constructor.
data StartPipelineReprocessing
StartPipelineReprocessing' :: Maybe POSIX -> Maybe POSIX -> Maybe ChannelMessages -> Text -> StartPipelineReprocessing

-- | Create a value of <a>StartPipelineReprocessing</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startTime:StartPipelineReprocessing'</a>,
--   <a>startPipelineReprocessing_startTime</a> - The start time
--   (inclusive) of raw message data that is reprocessed.
--   
--   If you specify a value for the <tt>startTime</tt> parameter, you must
--   not use the <tt>channelMessages</tt> object.
--   
--   <a>$sel:endTime:StartPipelineReprocessing'</a>,
--   <a>startPipelineReprocessing_endTime</a> - The end time (exclusive) of
--   raw message data that is reprocessed.
--   
--   If you specify a value for the <tt>endTime</tt> parameter, you must
--   not use the <tt>channelMessages</tt> object.
--   
--   <a>$sel:channelMessages:StartPipelineReprocessing'</a>,
--   <a>startPipelineReprocessing_channelMessages</a> - Specifies one or
--   more sets of channel messages that you want to reprocess.
--   
--   If you use the <tt>channelMessages</tt> object, you must not specify a
--   value for <tt>startTime</tt> and <tt>endTime</tt>.
--   
--   <a>$sel:pipelineName:StartPipelineReprocessing'</a>,
--   <a>startPipelineReprocessing_pipelineName</a> - The name of the
--   pipeline on which to start reprocessing.
newStartPipelineReprocessing :: Text -> StartPipelineReprocessing

-- | <i>See:</i> <a>newStartPipelineReprocessingResponse</a> smart
--   constructor.
data StartPipelineReprocessingResponse
StartPipelineReprocessingResponse' :: Maybe Text -> Int -> StartPipelineReprocessingResponse

-- | Create a value of <a>StartPipelineReprocessingResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reprocessingId:StartPipelineReprocessingResponse'</a>,
--   <a>startPipelineReprocessingResponse_reprocessingId</a> - The ID of
--   the pipeline reprocessing activity that was started.
--   
--   <a>$sel:httpStatus:StartPipelineReprocessingResponse'</a>,
--   <a>startPipelineReprocessingResponse_httpStatus</a> - The response's
--   http status code.
newStartPipelineReprocessingResponse :: Int -> StartPipelineReprocessingResponse

-- | <i>See:</i> <a>newDescribeLoggingOptions</a> smart constructor.
data DescribeLoggingOptions
DescribeLoggingOptions' :: DescribeLoggingOptions

-- | Create a value of <a>DescribeLoggingOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDescribeLoggingOptions :: DescribeLoggingOptions

-- | <i>See:</i> <a>newDescribeLoggingOptionsResponse</a> smart
--   constructor.
data DescribeLoggingOptionsResponse
DescribeLoggingOptionsResponse' :: Maybe LoggingOptions -> Int -> DescribeLoggingOptionsResponse

-- | Create a value of <a>DescribeLoggingOptionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:loggingOptions:DescribeLoggingOptionsResponse'</a>,
--   <a>describeLoggingOptionsResponse_loggingOptions</a> - The current
--   settings of the IoT Analytics logging options.
--   
--   <a>$sel:httpStatus:DescribeLoggingOptionsResponse'</a>,
--   <a>describeLoggingOptionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeLoggingOptionsResponse :: Int -> DescribeLoggingOptionsResponse
newtype ChannelStatus
ChannelStatus' :: Text -> ChannelStatus
[fromChannelStatus] :: ChannelStatus -> Text
pattern ChannelStatus_ACTIVE :: ChannelStatus
pattern ChannelStatus_CREATING :: ChannelStatus
pattern ChannelStatus_DELETING :: ChannelStatus
newtype ComputeType
ComputeType' :: Text -> ComputeType
[fromComputeType] :: ComputeType -> Text
pattern ComputeType_ACU_1 :: ComputeType
pattern ComputeType_ACU_2 :: ComputeType
newtype DatasetActionType
DatasetActionType' :: Text -> DatasetActionType
[fromDatasetActionType] :: DatasetActionType -> Text
pattern DatasetActionType_CONTAINER :: DatasetActionType
pattern DatasetActionType_QUERY :: DatasetActionType
newtype DatasetContentState
DatasetContentState' :: Text -> DatasetContentState
[fromDatasetContentState] :: DatasetContentState -> Text
pattern DatasetContentState_CREATING :: DatasetContentState
pattern DatasetContentState_FAILED :: DatasetContentState
pattern DatasetContentState_SUCCEEDED :: DatasetContentState
newtype DatasetStatus
DatasetStatus' :: Text -> DatasetStatus
[fromDatasetStatus] :: DatasetStatus -> Text
pattern DatasetStatus_ACTIVE :: DatasetStatus
pattern DatasetStatus_CREATING :: DatasetStatus
pattern DatasetStatus_DELETING :: DatasetStatus
newtype DatastoreStatus
DatastoreStatus' :: Text -> DatastoreStatus
[fromDatastoreStatus] :: DatastoreStatus -> Text
pattern DatastoreStatus_ACTIVE :: DatastoreStatus
pattern DatastoreStatus_CREATING :: DatastoreStatus
pattern DatastoreStatus_DELETING :: DatastoreStatus
newtype FileFormatType
FileFormatType' :: Text -> FileFormatType
[fromFileFormatType] :: FileFormatType -> Text
pattern FileFormatType_JSON :: FileFormatType
pattern FileFormatType_PARQUET :: FileFormatType
newtype LoggingLevel
LoggingLevel' :: Text -> LoggingLevel
[fromLoggingLevel] :: LoggingLevel -> Text
pattern LoggingLevel_ERROR :: LoggingLevel
newtype ReprocessingStatus
ReprocessingStatus' :: Text -> ReprocessingStatus
[fromReprocessingStatus] :: ReprocessingStatus -> Text
pattern ReprocessingStatus_CANCELLED :: ReprocessingStatus
pattern ReprocessingStatus_FAILED :: ReprocessingStatus
pattern ReprocessingStatus_RUNNING :: ReprocessingStatus
pattern ReprocessingStatus_SUCCEEDED :: ReprocessingStatus

-- | An activity that adds other attributes based on existing attributes in
--   the message.
--   
--   <i>See:</i> <a>newAddAttributesActivity</a> smart constructor.
data AddAttributesActivity
AddAttributesActivity' :: Maybe Text -> Text -> HashMap Text Text -> AddAttributesActivity

-- | Create a value of <a>AddAttributesActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:AddAttributesActivity'</a>,
--   <a>addAttributesActivity_next</a> - The next activity in the pipeline.
--   
--   <a>$sel:name:AddAttributesActivity'</a>,
--   <a>addAttributesActivity_name</a> - The name of the addAttributes
--   activity.
--   
--   <a>$sel:attributes:AddAttributesActivity'</a>,
--   <a>addAttributesActivity_attributes</a> - A list of 1-50
--   <tt>AttributeNameMapping</tt> objects that map an existing attribute
--   to a new attribute.
--   
--   The existing attributes remain in the message, so if you want to
--   remove the originals, use <tt>RemoveAttributeActivity</tt>.
newAddAttributesActivity :: Text -> AddAttributesActivity

-- | Contains informations about errors.
--   
--   <i>See:</i> <a>newBatchPutMessageErrorEntry</a> smart constructor.
data BatchPutMessageErrorEntry
BatchPutMessageErrorEntry' :: Maybe Text -> Maybe Text -> Maybe Text -> BatchPutMessageErrorEntry

-- | Create a value of <a>BatchPutMessageErrorEntry</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:errorCode:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorCode</a> - The code associated with
--   the error.
--   
--   <a>$sel:errorMessage:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_errorMessage</a> - The message associated
--   with the error.
--   
--   <a>$sel:messageId:BatchPutMessageErrorEntry'</a>,
--   <a>batchPutMessageErrorEntry_messageId</a> - The ID of the message
--   that caused the error. See the value corresponding to the
--   <tt>messageId</tt> key in the message object.
newBatchPutMessageErrorEntry :: BatchPutMessageErrorEntry

-- | A collection of data from an MQTT topic. Channels archive the raw,
--   unprocessed messages before publishing the data to a pipeline.
--   
--   <i>See:</i> <a>newChannel</a> smart constructor.
data Channel
Channel' :: Maybe POSIX -> Maybe ChannelStatus -> Maybe POSIX -> Maybe Text -> Maybe ChannelStorage -> Maybe RetentionPeriod -> Maybe Text -> Maybe POSIX -> Channel

-- | Create a value of <a>Channel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Channel'</a>, <a>channel_creationTime</a> - When
--   the channel was created.
--   
--   <a>$sel:status:Channel'</a>, <a>channel_status</a> - The status of the
--   channel.
--   
--   <a>$sel:lastMessageArrivalTime:Channel'</a>,
--   <a>channel_lastMessageArrivalTime</a> - The last time when a new
--   message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:arn:Channel'</a>, <a>channel_arn</a> - The ARN of the channel.
--   
--   <a>$sel:storage:Channel'</a>, <a>channel_storage</a> - Where channel
--   data is stored. You can choose one of <tt>serviceManagedS3</tt> or
--   <tt>customerManagedS3</tt> storage. If not specified, the default is
--   <tt>serviceManagedS3</tt>. You can't change this storage option after
--   the channel is created.
--   
--   <a>$sel:retentionPeriod:Channel'</a>, <a>channel_retentionPeriod</a> -
--   How long, in days, message data is kept for the channel.
--   
--   <a>$sel:name:Channel'</a>, <a>channel_name</a> - The name of the
--   channel.
--   
--   <a>$sel:lastUpdateTime:Channel'</a>, <a>channel_lastUpdateTime</a> -
--   When the channel was last updated.
newChannel :: Channel

-- | The activity that determines the source of the messages to be
--   processed.
--   
--   <i>See:</i> <a>newChannelActivity</a> smart constructor.
data ChannelActivity
ChannelActivity' :: Maybe Text -> Text -> Text -> ChannelActivity

-- | Create a value of <a>ChannelActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:ChannelActivity'</a>, <a>channelActivity_next</a> - The
--   next activity in the pipeline.
--   
--   <a>$sel:name:ChannelActivity'</a>, <a>channelActivity_name</a> - The
--   name of the channel activity.
--   
--   <a>$sel:channelName:ChannelActivity'</a>,
--   <a>channelActivity_channelName</a> - The name of the channel from
--   which the messages are processed.
newChannelActivity :: Text -> Text -> ChannelActivity

-- | Specifies one or more sets of channel messages.
--   
--   <i>See:</i> <a>newChannelMessages</a> smart constructor.
data ChannelMessages
ChannelMessages' :: Maybe (NonEmpty Text) -> ChannelMessages

-- | Create a value of <a>ChannelMessages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Paths:ChannelMessages'</a>, <a>channelMessages_s3Paths</a> -
--   Specifies one or more keys that identify the Amazon Simple Storage
--   Service (Amazon S3) objects that save your channel messages.
--   
--   You must use the full path for the key.
--   
--   Example path: <tt>channel/mychannel/__dt=2020-02-29
--   00:00:00/1582940490000_1582940520000_123456789012_mychannel_0_2118.0.json.gz</tt>
newChannelMessages :: ChannelMessages

-- | Statistics information about the channel.
--   
--   <i>See:</i> <a>newChannelStatistics</a> smart constructor.
data ChannelStatistics
ChannelStatistics' :: Maybe EstimatedResourceSize -> ChannelStatistics

-- | Create a value of <a>ChannelStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:ChannelStatistics'</a>, <a>channelStatistics_size</a> -
--   The estimated size of the channel.
newChannelStatistics :: ChannelStatistics

-- | Where channel data is stored. You may choose one of
--   <tt>serviceManagedS3</tt>, <tt>customerManagedS3</tt> storage. If not
--   specified, the default is <tt>serviceManagedS3</tt>. This can't be
--   changed after creation of the channel.
--   
--   <i>See:</i> <a>newChannelStorage</a> smart constructor.
data ChannelStorage
ChannelStorage' :: Maybe ServiceManagedChannelS3Storage -> Maybe CustomerManagedChannelS3Storage -> ChannelStorage

-- | Create a value of <a>ChannelStorage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:ChannelStorage'</a>,
--   <a>channelStorage_serviceManagedS3</a> - Used to store channel data in
--   an S3 bucket managed by IoT Analytics. You can't change the choice of
--   S3 storage after the data store is created.
--   
--   <a>$sel:customerManagedS3:ChannelStorage'</a>,
--   <a>channelStorage_customerManagedS3</a> - Used to store channel data
--   in an S3 bucket that you manage. If customer managed storage is
--   selected, the <tt>retentionPeriod</tt> parameter is ignored. You can't
--   change the choice of S3 storage after the data store is created.
newChannelStorage :: ChannelStorage

-- | Where channel data is stored.
--   
--   <i>See:</i> <a>newChannelStorageSummary</a> smart constructor.
data ChannelStorageSummary
ChannelStorageSummary' :: Maybe ServiceManagedChannelS3StorageSummary -> Maybe CustomerManagedChannelS3StorageSummary -> ChannelStorageSummary

-- | Create a value of <a>ChannelStorageSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:ChannelStorageSummary'</a>,
--   <a>channelStorageSummary_serviceManagedS3</a> - Used to store channel
--   data in an S3 bucket managed by IoT Analytics.
--   
--   <a>$sel:customerManagedS3:ChannelStorageSummary'</a>,
--   <a>channelStorageSummary_customerManagedS3</a> - Used to store channel
--   data in an S3 bucket that you manage.
newChannelStorageSummary :: ChannelStorageSummary

-- | A summary of information about a channel.
--   
--   <i>See:</i> <a>newChannelSummary</a> smart constructor.
data ChannelSummary
ChannelSummary' :: Maybe POSIX -> Maybe ChannelStatus -> Maybe POSIX -> Maybe Text -> Maybe ChannelStorageSummary -> Maybe POSIX -> ChannelSummary

-- | Create a value of <a>ChannelSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ChannelSummary'</a>,
--   <a>channelSummary_creationTime</a> - When the channel was created.
--   
--   <a>$sel:status:ChannelSummary'</a>, <a>channelSummary_status</a> - The
--   status of the channel.
--   
--   <a>$sel:lastMessageArrivalTime:ChannelSummary'</a>,
--   <a>channelSummary_lastMessageArrivalTime</a> - The last time when a
--   new message arrived in the channel.
--   
--   IoT Analytics updates this value at most once per minute for one
--   channel. Hence, the <tt>lastMessageArrivalTime</tt> value is an
--   approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:channelName:ChannelSummary'</a>,
--   <a>channelSummary_channelName</a> - The name of the channel.
--   
--   <a>$sel:channelStorage:ChannelSummary'</a>,
--   <a>channelSummary_channelStorage</a> - Where channel data is stored.
--   
--   <a>$sel:lastUpdateTime:ChannelSummary'</a>,
--   <a>channelSummary_lastUpdateTime</a> - The last time the channel was
--   updated.
newChannelSummary :: ChannelSummary

-- | Contains information about a column that stores your data.
--   
--   <i>See:</i> <a>newColumn</a> smart constructor.
data Column
Column' :: Text -> Text -> Column

-- | Create a value of <a>Column</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Column'</a>, <a>column_name</a> - The name of the column.
--   
--   <a>$sel:type':Column'</a>, <a>column_type</a> - The type of data. For
--   more information about the supported data types, see <a>Common data
--   types</a> in the <i>Glue Developer Guide</i>.
newColumn :: Text -> Text -> Column

-- | Information required to run the <tt>containerAction</tt> to produce
--   dataset contents.
--   
--   <i>See:</i> <a>newContainerDatasetAction</a> smart constructor.
data ContainerDatasetAction
ContainerDatasetAction' :: Maybe [Variable] -> Text -> Text -> ResourceConfiguration -> ContainerDatasetAction

-- | Create a value of <a>ContainerDatasetAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:variables:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_variables</a> - The values of variables used
--   in the context of the execution of the containerized application
--   (basically, parameters passed to the application). Each variable must
--   have a name and a value given by one of <tt>stringValue</tt>,
--   <tt>datasetContentVersionValue</tt>, or <tt>outputFileUriValue</tt>.
--   
--   <a>$sel:image:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_image</a> - The ARN of the Docker container
--   stored in your account. The Docker container contains an application
--   and required support libraries and is used to generate dataset
--   contents.
--   
--   <a>$sel:executionRoleArn:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_executionRoleArn</a> - The ARN of the role
--   that gives permission to the system to access required resources to
--   run the <tt>containerAction</tt>. This includes, at minimum,
--   permission to retrieve the dataset contents that are the input to the
--   containerized application.
--   
--   <a>$sel:resourceConfiguration:ContainerDatasetAction'</a>,
--   <a>containerDatasetAction_resourceConfiguration</a> - Configuration of
--   the resource that executes the <tt>containerAction</tt>.
newContainerDatasetAction :: Text -> Text -> ResourceConfiguration -> ContainerDatasetAction

-- | Used to store channel data in an S3 bucket that you manage. If
--   customer-managed storage is selected, the <tt>retentionPeriod</tt>
--   parameter is ignored. You can't change the choice of S3 storage after
--   the data store is created.
--   
--   <i>See:</i> <a>newCustomerManagedChannelS3Storage</a> smart
--   constructor.
data CustomerManagedChannelS3Storage
CustomerManagedChannelS3Storage' :: Maybe Text -> Text -> Text -> CustomerManagedChannelS3Storage

-- | Create a value of <a>CustomerManagedChannelS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPrefix:CustomerManagedChannelS3Storage'</a>,
--   <a>customerManagedChannelS3Storage_keyPrefix</a> - (Optional) The
--   prefix used to create the keys of the channel data objects. Each
--   object in an S3 bucket has a key that is its unique identifier in the
--   bucket. Each object in a bucket has exactly one key. The prefix must
--   end with a forward slash (/).
--   
--   <a>$sel:bucket:CustomerManagedChannelS3Storage'</a>,
--   <a>customerManagedChannelS3Storage_bucket</a> - The name of the S3
--   bucket in which channel data is stored.
--   
--   <a>$sel:roleArn:CustomerManagedChannelS3Storage'</a>,
--   <a>customerManagedChannelS3Storage_roleArn</a> - The ARN of the role
--   that grants IoT Analytics permission to interact with your Amazon S3
--   resources.
newCustomerManagedChannelS3Storage :: Text -> Text -> CustomerManagedChannelS3Storage

-- | Used to store channel data in an S3 bucket that you manage.
--   
--   <i>See:</i> <a>newCustomerManagedChannelS3StorageSummary</a> smart
--   constructor.
data CustomerManagedChannelS3StorageSummary
CustomerManagedChannelS3StorageSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> CustomerManagedChannelS3StorageSummary

-- | Create a value of <a>CustomerManagedChannelS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:CustomerManagedChannelS3StorageSummary'</a>,
--   <a>customerManagedChannelS3StorageSummary_bucket</a> - The name of the
--   S3 bucket in which channel data is stored.
--   
--   <a>$sel:keyPrefix:CustomerManagedChannelS3StorageSummary'</a>,
--   <a>customerManagedChannelS3StorageSummary_keyPrefix</a> - (Optional)
--   The prefix used to create the keys of the channel data objects. Each
--   object in an S3 bucket has a key that is its unique identifier within
--   the bucket (each object in a bucket has exactly one key). The prefix
--   must end with a forward slash (/).
--   
--   <a>$sel:roleArn:CustomerManagedChannelS3StorageSummary'</a>,
--   <a>customerManagedChannelS3StorageSummary_roleArn</a> - The ARN of the
--   role that grants IoT Analytics permission to interact with your Amazon
--   S3 resources.
newCustomerManagedChannelS3StorageSummary :: CustomerManagedChannelS3StorageSummary

-- | S3-customer-managed; When you choose customer-managed storage, the
--   <tt>retentionPeriod</tt> parameter is ignored. You can't change the
--   choice of Amazon S3 storage after your data store is created.
--   
--   <i>See:</i> <a>newCustomerManagedDatastoreS3Storage</a> smart
--   constructor.
data CustomerManagedDatastoreS3Storage
CustomerManagedDatastoreS3Storage' :: Maybe Text -> Text -> Text -> CustomerManagedDatastoreS3Storage

-- | Create a value of <a>CustomerManagedDatastoreS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPrefix:CustomerManagedDatastoreS3Storage'</a>,
--   <a>customerManagedDatastoreS3Storage_keyPrefix</a> - (Optional) The
--   prefix used to create the keys of the data store data objects. Each
--   object in an Amazon S3 bucket has a key that is its unique identifier
--   in the bucket. Each object in a bucket has exactly one key. The prefix
--   must end with a forward slash (/).
--   
--   <a>$sel:bucket:CustomerManagedDatastoreS3Storage'</a>,
--   <a>customerManagedDatastoreS3Storage_bucket</a> - The name of the
--   Amazon S3 bucket where your data is stored.
--   
--   <a>$sel:roleArn:CustomerManagedDatastoreS3Storage'</a>,
--   <a>customerManagedDatastoreS3Storage_roleArn</a> - The ARN of the role
--   that grants IoT Analytics permission to interact with your Amazon S3
--   resources.
newCustomerManagedDatastoreS3Storage :: Text -> Text -> CustomerManagedDatastoreS3Storage

-- | Contains information about the data store that you manage.
--   
--   <i>See:</i> <a>newCustomerManagedDatastoreS3StorageSummary</a> smart
--   constructor.
data CustomerManagedDatastoreS3StorageSummary
CustomerManagedDatastoreS3StorageSummary' :: Maybe Text -> Maybe Text -> Maybe Text -> CustomerManagedDatastoreS3StorageSummary

-- | Create a value of <a>CustomerManagedDatastoreS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucket:CustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>customerManagedDatastoreS3StorageSummary_bucket</a> - The name of
--   the Amazon S3 bucket where your data is stored.
--   
--   <a>$sel:keyPrefix:CustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>customerManagedDatastoreS3StorageSummary_keyPrefix</a> - (Optional)
--   The prefix used to create the keys of the data store data objects.
--   Each object in an Amazon S3 bucket has a key that is its unique
--   identifier in the bucket. Each object in a bucket has exactly one key.
--   The prefix must end with a forward slash (/).
--   
--   <a>$sel:roleArn:CustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>customerManagedDatastoreS3StorageSummary_roleArn</a> - The ARN of
--   the role that grants IoT Analytics permission to interact with your
--   Amazon S3 resources.
newCustomerManagedDatastoreS3StorageSummary :: CustomerManagedDatastoreS3StorageSummary

-- | Information about a dataset.
--   
--   <i>See:</i> <a>newDataset</a> smart constructor.
data Dataset
Dataset' :: Maybe POSIX -> Maybe DatasetStatus -> Maybe VersioningConfiguration -> Maybe Text -> Maybe (NonEmpty DatasetAction) -> Maybe [DatasetTrigger] -> Maybe RetentionPeriod -> Maybe (NonEmpty LateDataRule) -> Maybe Text -> Maybe [DatasetContentDeliveryRule] -> Maybe POSIX -> Dataset

-- | Create a value of <a>Dataset</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Dataset'</a>, <a>dataset_creationTime</a> - When
--   the dataset was created.
--   
--   <a>$sel:status:Dataset'</a>, <a>dataset_status</a> - The status of the
--   dataset.
--   
--   <a>$sel:versioningConfiguration:Dataset'</a>,
--   <a>dataset_versioningConfiguration</a> - Optional. How many versions
--   of dataset contents are kept. If not specified or set to null, only
--   the latest version plus the latest succeeded version (if they are
--   different) are kept for the time period specified by the
--   <tt>retentionPeriod</tt> parameter. For more information, see
--   <a>Keeping Multiple Versions of IoT Analytics datasets</a> in the
--   <i>IoT Analytics User Guide</i>.
--   
--   <a>$sel:arn:Dataset'</a>, <a>dataset_arn</a> - The ARN of the dataset.
--   
--   <a>$sel:actions:Dataset'</a>, <a>dataset_actions</a> - The
--   <tt>DatasetAction</tt> objects that automatically create the dataset
--   contents.
--   
--   <a>$sel:triggers:Dataset'</a>, <a>dataset_triggers</a> - The
--   <tt>DatasetTrigger</tt> objects that specify when the dataset is
--   automatically updated.
--   
--   <a>$sel:retentionPeriod:Dataset'</a>, <a>dataset_retentionPeriod</a> -
--   Optional. How long, in days, message data is kept for the dataset.
--   
--   <a>$sel:lateDataRules:Dataset'</a>, <a>dataset_lateDataRules</a> - A
--   list of data rules that send notifications to CloudWatch, when data
--   arrives late. To specify <tt>lateDataRules</tt>, the dataset must use
--   a <a>DeltaTimer</a> filter.
--   
--   <a>$sel:name:Dataset'</a>, <a>dataset_name</a> - The name of the
--   dataset.
--   
--   <a>$sel:contentDeliveryRules:Dataset'</a>,
--   <a>dataset_contentDeliveryRules</a> - When dataset contents are
--   created they are delivered to destinations specified here.
--   
--   <a>$sel:lastUpdateTime:Dataset'</a>, <a>dataset_lastUpdateTime</a> -
--   The last time the dataset was updated.
newDataset :: Dataset

-- | A <tt>DatasetAction</tt> object that specifies how dataset contents
--   are automatically created.
--   
--   <i>See:</i> <a>newDatasetAction</a> smart constructor.
data DatasetAction
DatasetAction' :: Maybe SqlQueryDatasetAction -> Maybe Text -> Maybe ContainerDatasetAction -> DatasetAction

-- | Create a value of <a>DatasetAction</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:queryAction:DatasetAction'</a>,
--   <a>datasetAction_queryAction</a> - An <tt>SqlQueryDatasetAction</tt>
--   object that uses an SQL query to automatically create dataset
--   contents.
--   
--   <a>$sel:actionName:DatasetAction'</a>, <a>datasetAction_actionName</a>
--   - The name of the dataset action by which dataset contents are
--   automatically created.
--   
--   <a>$sel:containerAction:DatasetAction'</a>,
--   <a>datasetAction_containerAction</a> - Information that allows the
--   system to run a containerized application to create the dataset
--   contents. The application must be in a Docker container along with any
--   required support libraries.
newDatasetAction :: DatasetAction

-- | Information about the action that automatically creates the dataset's
--   contents.
--   
--   <i>See:</i> <a>newDatasetActionSummary</a> smart constructor.
data DatasetActionSummary
DatasetActionSummary' :: Maybe Text -> Maybe DatasetActionType -> DatasetActionSummary

-- | Create a value of <a>DatasetActionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:actionName:DatasetActionSummary'</a>,
--   <a>datasetActionSummary_actionName</a> - The name of the action that
--   automatically creates the dataset's contents.
--   
--   <a>$sel:actionType:DatasetActionSummary'</a>,
--   <a>datasetActionSummary_actionType</a> - The type of action by which
--   the dataset's contents are automatically created.
newDatasetActionSummary :: DatasetActionSummary

-- | The destination to which dataset contents are delivered.
--   
--   <i>See:</i> <a>newDatasetContentDeliveryDestination</a> smart
--   constructor.
data DatasetContentDeliveryDestination
DatasetContentDeliveryDestination' :: Maybe S3DestinationConfiguration -> Maybe IotEventsDestinationConfiguration -> DatasetContentDeliveryDestination

-- | Create a value of <a>DatasetContentDeliveryDestination</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:s3DestinationConfiguration:DatasetContentDeliveryDestination'</a>,
--   <a>datasetContentDeliveryDestination_s3DestinationConfiguration</a> -
--   Configuration information for delivery of dataset contents to Amazon
--   S3.
--   
--   
--   <a>$sel:iotEventsDestinationConfiguration:DatasetContentDeliveryDestination'</a>,
--   <a>datasetContentDeliveryDestination_iotEventsDestinationConfiguration</a>
--   - Configuration information for delivery of dataset contents to IoT
--   Events.
newDatasetContentDeliveryDestination :: DatasetContentDeliveryDestination

-- | When dataset contents are created, they are delivered to destination
--   specified here.
--   
--   <i>See:</i> <a>newDatasetContentDeliveryRule</a> smart constructor.
data DatasetContentDeliveryRule
DatasetContentDeliveryRule' :: Maybe Text -> DatasetContentDeliveryDestination -> DatasetContentDeliveryRule

-- | Create a value of <a>DatasetContentDeliveryRule</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entryName:DatasetContentDeliveryRule'</a>,
--   <a>datasetContentDeliveryRule_entryName</a> - The name of the dataset
--   content delivery rules entry.
--   
--   <a>$sel:destination:DatasetContentDeliveryRule'</a>,
--   <a>datasetContentDeliveryRule_destination</a> - The destination to
--   which dataset contents are delivered.
newDatasetContentDeliveryRule :: DatasetContentDeliveryDestination -> DatasetContentDeliveryRule

-- | The state of the dataset contents and the reason they are in this
--   state.
--   
--   <i>See:</i> <a>newDatasetContentStatus</a> smart constructor.
data DatasetContentStatus
DatasetContentStatus' :: Maybe DatasetContentState -> Maybe Text -> DatasetContentStatus

-- | Create a value of <a>DatasetContentStatus</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:DatasetContentStatus'</a>,
--   <a>datasetContentStatus_state</a> - The state of the dataset contents.
--   Can be one of READY, CREATING, SUCCEEDED, or FAILED.
--   
--   <a>$sel:reason:DatasetContentStatus'</a>,
--   <a>datasetContentStatus_reason</a> - The reason the dataset contents
--   are in this state.
newDatasetContentStatus :: DatasetContentStatus

-- | Summary information about dataset contents.
--   
--   <i>See:</i> <a>newDatasetContentSummary</a> smart constructor.
data DatasetContentSummary
DatasetContentSummary' :: Maybe POSIX -> Maybe DatasetContentStatus -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> DatasetContentSummary

-- | Create a value of <a>DatasetContentSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_creationTime</a> - The actual time the
--   creation of the dataset contents was started.
--   
--   <a>$sel:status:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_status</a> - The status of the dataset
--   contents.
--   
--   <a>$sel:scheduleTime:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_scheduleTime</a> - The time the creation of
--   the dataset contents was scheduled to start.
--   
--   <a>$sel:completionTime:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_completionTime</a> - The time the dataset
--   content status was updated to SUCCEEDED or FAILED.
--   
--   <a>$sel:version:DatasetContentSummary'</a>,
--   <a>datasetContentSummary_version</a> - The version of the dataset
--   contents.
newDatasetContentSummary :: DatasetContentSummary

-- | The dataset whose latest contents are used as input to the notebook or
--   application.
--   
--   <i>See:</i> <a>newDatasetContentVersionValue</a> smart constructor.
data DatasetContentVersionValue
DatasetContentVersionValue' :: Text -> DatasetContentVersionValue

-- | Create a value of <a>DatasetContentVersionValue</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:datasetName:DatasetContentVersionValue'</a>,
--   <a>datasetContentVersionValue_datasetName</a> - The name of the
--   dataset whose latest contents are used as input to the notebook or
--   application.
newDatasetContentVersionValue :: Text -> DatasetContentVersionValue

-- | The reference to a dataset entry.
--   
--   <i>See:</i> <a>newDatasetEntry</a> smart constructor.
data DatasetEntry
DatasetEntry' :: Maybe Text -> Maybe Text -> DatasetEntry

-- | Create a value of <a>DatasetEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:entryName:DatasetEntry'</a>, <a>datasetEntry_entryName</a> -
--   The name of the dataset item.
--   
--   <a>$sel:dataURI:DatasetEntry'</a>, <a>datasetEntry_dataURI</a> - The
--   presigned URI of the dataset item.
newDatasetEntry :: DatasetEntry

-- | A summary of information about a dataset.
--   
--   <i>See:</i> <a>newDatasetSummary</a> smart constructor.
data DatasetSummary
DatasetSummary' :: Maybe POSIX -> Maybe DatasetStatus -> Maybe (NonEmpty DatasetActionSummary) -> Maybe [DatasetTrigger] -> Maybe Text -> Maybe POSIX -> DatasetSummary

-- | Create a value of <a>DatasetSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DatasetSummary'</a>,
--   <a>datasetSummary_creationTime</a> - The time the dataset was created.
--   
--   <a>$sel:status:DatasetSummary'</a>, <a>datasetSummary_status</a> - The
--   status of the dataset.
--   
--   <a>$sel:actions:DatasetSummary'</a>, <a>datasetSummary_actions</a> - A
--   list of <tt>DataActionSummary</tt> objects.
--   
--   <a>$sel:triggers:DatasetSummary'</a>, <a>datasetSummary_triggers</a> -
--   A list of triggers. A trigger causes dataset content to be populated
--   at a specified time interval or when another dataset is populated. The
--   list of triggers can be empty or contain up to five
--   <tt>DataSetTrigger</tt> objects
--   
--   <a>$sel:datasetName:DatasetSummary'</a>,
--   <a>datasetSummary_datasetName</a> - The name of the dataset.
--   
--   <a>$sel:lastUpdateTime:DatasetSummary'</a>,
--   <a>datasetSummary_lastUpdateTime</a> - The last time the dataset was
--   updated.
newDatasetSummary :: DatasetSummary

-- | The <tt>DatasetTrigger</tt> that specifies when the dataset is
--   automatically updated.
--   
--   <i>See:</i> <a>newDatasetTrigger</a> smart constructor.
data DatasetTrigger
DatasetTrigger' :: Maybe TriggeringDataset -> Maybe Schedule -> DatasetTrigger

-- | Create a value of <a>DatasetTrigger</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataset:DatasetTrigger'</a>, <a>datasetTrigger_dataset</a> -
--   The dataset whose content creation triggers the creation of this
--   dataset's contents.
--   
--   <a>$sel:schedule:DatasetTrigger'</a>, <a>datasetTrigger_schedule</a> -
--   The Schedule when the trigger is initiated.
newDatasetTrigger :: DatasetTrigger

-- | Information about a data store.
--   
--   <i>See:</i> <a>newDatastore</a> smart constructor.
data Datastore
Datastore' :: Maybe POSIX -> Maybe DatastoreStatus -> Maybe POSIX -> Maybe Text -> Maybe FileFormatConfiguration -> Maybe DatastorePartitions -> Maybe DatastoreStorage -> Maybe RetentionPeriod -> Maybe Text -> Maybe POSIX -> Datastore

-- | Create a value of <a>Datastore</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Datastore'</a>, <a>datastore_creationTime</a> -
--   When the data store was created.
--   
--   <a>$sel:status:Datastore'</a>, <a>datastore_status</a> - The status of
--   a data store:
--   
--   <ul>
--   <li><i>CREATING</i> The data store is being created.</li>
--   <li><i>ACTIVE</i> The data store has been created and can be
--   used.</li>
--   <li><i>DELETING</i> The data store is being deleted.</li>
--   </ul>
--   
--   <a>$sel:lastMessageArrivalTime:Datastore'</a>,
--   <a>datastore_lastMessageArrivalTime</a> - The last time when a new
--   message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:arn:Datastore'</a>, <a>datastore_arn</a> - The ARN of the data
--   store.
--   
--   <a>$sel:fileFormatConfiguration:Datastore'</a>,
--   <a>datastore_fileFormatConfiguration</a> - Contains the configuration
--   information of file formats. IoT Analytics data stores support JSON
--   and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
--   
--   <a>$sel:datastorePartitions:Datastore'</a>,
--   <a>datastore_datastorePartitions</a> - Contains information about the
--   partition dimensions in a data store.
--   
--   <a>$sel:storage:Datastore'</a>, <a>datastore_storage</a> - Where data
--   in a data store is stored.. You can choose <tt>serviceManagedS3</tt>
--   storage, <tt>customerManagedS3</tt> storage, or
--   <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
--   
--   <a>$sel:retentionPeriod:Datastore'</a>,
--   <a>datastore_retentionPeriod</a> - How long, in days, message data is
--   kept for the data store. When <tt>customerManagedS3</tt> storage is
--   selected, this parameter is ignored.
--   
--   <a>$sel:name:Datastore'</a>, <a>datastore_name</a> - The name of the
--   data store.
--   
--   <a>$sel:lastUpdateTime:Datastore'</a>, <a>datastore_lastUpdateTime</a>
--   - The last time the data store was updated.
newDatastore :: Datastore

-- | The datastore activity that specifies where to store the processed
--   data.
--   
--   <i>See:</i> <a>newDatastoreActivity</a> smart constructor.
data DatastoreActivity
DatastoreActivity' :: Text -> Text -> DatastoreActivity

-- | Create a value of <a>DatastoreActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DatastoreActivity'</a>, <a>datastoreActivity_name</a> -
--   The name of the datastore activity.
--   
--   <a>$sel:datastoreName:DatastoreActivity'</a>,
--   <a>datastoreActivity_datastoreName</a> - The name of the data store
--   where processed messages are stored.
newDatastoreActivity :: Text -> Text -> DatastoreActivity

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage. You can't change the choice of Amazon S3 storage after
--   your data store is created.
--   
--   <i>See:</i> <a>newDatastoreIotSiteWiseMultiLayerStorage</a> smart
--   constructor.
data DatastoreIotSiteWiseMultiLayerStorage
DatastoreIotSiteWiseMultiLayerStorage' :: IotSiteWiseCustomerManagedDatastoreS3Storage -> DatastoreIotSiteWiseMultiLayerStorage

-- | Create a value of <a>DatastoreIotSiteWiseMultiLayerStorage</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:customerManagedS3Storage:DatastoreIotSiteWiseMultiLayerStorage'</a>,
--   <a>datastoreIotSiteWiseMultiLayerStorage_customerManagedS3Storage</a>
--   - Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
newDatastoreIotSiteWiseMultiLayerStorage :: IotSiteWiseCustomerManagedDatastoreS3Storage -> DatastoreIotSiteWiseMultiLayerStorage

-- | Contains information about the data store that you manage, which
--   stores data used by IoT SiteWise.
--   
--   <i>See:</i> <a>newDatastoreIotSiteWiseMultiLayerStorageSummary</a>
--   smart constructor.
data DatastoreIotSiteWiseMultiLayerStorageSummary
DatastoreIotSiteWiseMultiLayerStorageSummary' :: Maybe IotSiteWiseCustomerManagedDatastoreS3StorageSummary -> DatastoreIotSiteWiseMultiLayerStorageSummary

-- | Create a value of <a>DatastoreIotSiteWiseMultiLayerStorageSummary</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:customerManagedS3Storage:DatastoreIotSiteWiseMultiLayerStorageSummary'</a>,
--   <a>datastoreIotSiteWiseMultiLayerStorageSummary_customerManagedS3Storage</a>
--   - Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage.
newDatastoreIotSiteWiseMultiLayerStorageSummary :: DatastoreIotSiteWiseMultiLayerStorageSummary

-- | A single dimension to partition a data store. The dimension must be an
--   <tt>AttributePartition</tt> or a <tt>TimestampPartition</tt>.
--   
--   <i>See:</i> <a>newDatastorePartition</a> smart constructor.
data DatastorePartition
DatastorePartition' :: Maybe Partition -> Maybe TimestampPartition -> DatastorePartition

-- | Create a value of <a>DatastorePartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributePartition:DatastorePartition'</a>,
--   <a>datastorePartition_attributePartition</a> - A partition dimension
--   defined by an <tt>attributeName</tt>.
--   
--   <a>$sel:timestampPartition:DatastorePartition'</a>,
--   <a>datastorePartition_timestampPartition</a> - A partition dimension
--   defined by a timestamp attribute.
newDatastorePartition :: DatastorePartition

-- | Contains information about the partition dimensions in a data store.
--   
--   <i>See:</i> <a>newDatastorePartitions</a> smart constructor.
data DatastorePartitions
DatastorePartitions' :: Maybe [DatastorePartition] -> DatastorePartitions

-- | Create a value of <a>DatastorePartitions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:partitions:DatastorePartitions'</a>,
--   <a>datastorePartitions_partitions</a> - A list of partition dimensions
--   in a data store.
newDatastorePartitions :: DatastorePartitions

-- | Statistical information about the data store.
--   
--   <i>See:</i> <a>newDatastoreStatistics</a> smart constructor.
data DatastoreStatistics
DatastoreStatistics' :: Maybe EstimatedResourceSize -> DatastoreStatistics

-- | Create a value of <a>DatastoreStatistics</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:size:DatastoreStatistics'</a>, <a>datastoreStatistics_size</a>
--   - The estimated size of the data store.
newDatastoreStatistics :: DatastoreStatistics

-- | Where data in a data store is stored.. You can choose
--   <tt>serviceManagedS3</tt> storage, <tt>customerManagedS3</tt> storage,
--   or <tt>iotSiteWiseMultiLayerStorage</tt> storage. The default is
--   <tt>serviceManagedS3</tt>. You can't change the choice of Amazon S3
--   storage after your data store is created.
--   
--   <i>See:</i> <a>newDatastoreStorage</a> smart constructor.
data DatastoreStorage
DatastoreStorage' :: Maybe ServiceManagedDatastoreS3Storage -> Maybe CustomerManagedDatastoreS3Storage -> Maybe DatastoreIotSiteWiseMultiLayerStorage -> DatastoreStorage

-- | Create a value of <a>DatastoreStorage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:DatastoreStorage'</a>,
--   <a>datastoreStorage_serviceManagedS3</a> - Used to store data in an
--   Amazon S3 bucket managed by IoT Analytics. You can't change the choice
--   of Amazon S3 storage after your data store is created.
--   
--   <a>$sel:customerManagedS3:DatastoreStorage'</a>,
--   <a>datastoreStorage_customerManagedS3</a> - S3-customer-managed; When
--   you choose customer-managed storage, the <tt>retentionPeriod</tt>
--   parameter is ignored. You can't change the choice of Amazon S3 storage
--   after your data store is created.
--   
--   <a>$sel:iotSiteWiseMultiLayerStorage:DatastoreStorage'</a>,
--   <a>datastoreStorage_iotSiteWiseMultiLayerStorage</a> - Used to store
--   data used by IoT SiteWise in an Amazon S3 bucket that you manage. You
--   can't change the choice of Amazon S3 storage after your data store is
--   created.
newDatastoreStorage :: DatastoreStorage

-- | Contains information about your data store.
--   
--   <i>See:</i> <a>newDatastoreStorageSummary</a> smart constructor.
data DatastoreStorageSummary
DatastoreStorageSummary' :: Maybe ServiceManagedDatastoreS3StorageSummary -> Maybe CustomerManagedDatastoreS3StorageSummary -> Maybe DatastoreIotSiteWiseMultiLayerStorageSummary -> DatastoreStorageSummary

-- | Create a value of <a>DatastoreStorageSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceManagedS3:DatastoreStorageSummary'</a>,
--   <a>datastoreStorageSummary_serviceManagedS3</a> - Used to store data
--   in an Amazon S3 bucket managed by IoT Analytics.
--   
--   <a>$sel:customerManagedS3:DatastoreStorageSummary'</a>,
--   <a>datastoreStorageSummary_customerManagedS3</a> - Used to store data
--   in an Amazon S3 bucket managed by IoT Analytics.
--   
--   <a>$sel:iotSiteWiseMultiLayerStorage:DatastoreStorageSummary'</a>,
--   <a>datastoreStorageSummary_iotSiteWiseMultiLayerStorage</a> - Used to
--   store data used by IoT SiteWise in an Amazon S3 bucket that you
--   manage.
newDatastoreStorageSummary :: DatastoreStorageSummary

-- | A summary of information about a data store.
--   
--   <i>See:</i> <a>newDatastoreSummary</a> smart constructor.
data DatastoreSummary
DatastoreSummary' :: Maybe POSIX -> Maybe DatastoreStatus -> Maybe POSIX -> Maybe Text -> Maybe DatastorePartitions -> Maybe FileFormatType -> Maybe POSIX -> Maybe DatastoreStorageSummary -> DatastoreSummary

-- | Create a value of <a>DatastoreSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:DatastoreSummary'</a>,
--   <a>datastoreSummary_creationTime</a> - When the data store was
--   created.
--   
--   <a>$sel:status:DatastoreSummary'</a>, <a>datastoreSummary_status</a> -
--   The status of the data store.
--   
--   <a>$sel:lastMessageArrivalTime:DatastoreSummary'</a>,
--   <a>datastoreSummary_lastMessageArrivalTime</a> - The last time when a
--   new message arrived in the data store.
--   
--   IoT Analytics updates this value at most once per minute for Amazon
--   Simple Storage Service one data store. Hence, the
--   <tt>lastMessageArrivalTime</tt> value is an approximation.
--   
--   This feature only applies to messages that arrived in the data store
--   after October 23, 2020.
--   
--   <a>$sel:datastoreName:DatastoreSummary'</a>,
--   <a>datastoreSummary_datastoreName</a> - The name of the data store.
--   
--   <a>$sel:datastorePartitions:DatastoreSummary'</a>,
--   <a>datastoreSummary_datastorePartitions</a> - Contains information
--   about the partition dimensions in a data store.
--   
--   <a>$sel:fileFormatType:DatastoreSummary'</a>,
--   <a>datastoreSummary_fileFormatType</a> - The file format of the data
--   in the data store.
--   
--   <a>$sel:lastUpdateTime:DatastoreSummary'</a>,
--   <a>datastoreSummary_lastUpdateTime</a> - The last time the data store
--   was updated.
--   
--   <a>$sel:datastoreStorage:DatastoreSummary'</a>,
--   <a>datastoreSummary_datastoreStorage</a> - Where data in a data store
--   is stored.
newDatastoreSummary :: DatastoreSummary

-- | Used to limit data to that which has arrived since the last execution
--   of the action.
--   
--   <i>See:</i> <a>newDeltaTime</a> smart constructor.
data DeltaTime
DeltaTime' :: Int -> Text -> DeltaTime

-- | Create a value of <a>DeltaTime</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:offsetSeconds:DeltaTime'</a>, <a>deltaTime_offsetSeconds</a> -
--   The number of seconds of estimated in-flight lag time of message data.
--   When you create dataset contents using message data from a specified
--   timeframe, some message data might still be in flight when processing
--   begins, and so do not arrive in time to be processed. Use this field
--   to make allowances for the in flight time of your message data, so
--   that data not processed from a previous timeframe is included with the
--   next timeframe. Otherwise, missed message data would be excluded from
--   processing during the next timeframe too, because its timestamp places
--   it within the previous timeframe.
--   
--   <a>$sel:timeExpression:DeltaTime'</a>, <a>deltaTime_timeExpression</a>
--   - An expression by which the time of the message data might be
--   determined. This can be the name of a timestamp field or a SQL
--   expression that is used to derive the time the message data was
--   generated.
newDeltaTime :: Int -> Text -> DeltaTime

-- | A structure that contains the configuration information of a delta
--   time session window.
--   
--   <a>DeltaTime</a> specifies a time interval. You can use
--   <tt>DeltaTime</tt> to create dataset contents with data that has
--   arrived in the data store since the last execution. For an example of
--   <tt>DeltaTime</tt>, see <a>Creating a SQL dataset with a delta window
--   (CLI)</a> in the <i>IoT Analytics User Guide</i>.
--   
--   <i>See:</i> <a>newDeltaTimeSessionWindowConfiguration</a> smart
--   constructor.
data DeltaTimeSessionWindowConfiguration
DeltaTimeSessionWindowConfiguration' :: Natural -> DeltaTimeSessionWindowConfiguration

-- | Create a value of <a>DeltaTimeSessionWindowConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutInMinutes:DeltaTimeSessionWindowConfiguration'</a>,
--   <a>deltaTimeSessionWindowConfiguration_timeoutInMinutes</a> - A time
--   interval. You can use <tt>timeoutInMinutes</tt> so that IoT Analytics
--   can batch up late data notifications that have been generated since
--   the last execution. IoT Analytics sends one batch of notifications to
--   Amazon CloudWatch Events at one time.
--   
--   For more information about how to write a timestamp expression, see
--   <a>Date and Time Functions and Operators</a>, in the <i>Presto 0.172
--   Documentation</i>.
newDeltaTimeSessionWindowConfiguration :: Natural -> DeltaTimeSessionWindowConfiguration

-- | An activity that adds data from the IoT device registry to your
--   message.
--   
--   <i>See:</i> <a>newDeviceRegistryEnrichActivity</a> smart constructor.
data DeviceRegistryEnrichActivity
DeviceRegistryEnrichActivity' :: Maybe Text -> Text -> Text -> Text -> Text -> DeviceRegistryEnrichActivity

-- | Create a value of <a>DeviceRegistryEnrichActivity</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_name</a> - The name of the
--   <tt>deviceRegistryEnrich</tt> activity.
--   
--   <a>$sel:attribute:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_attribute</a> - The name of the
--   attribute that is added to the message.
--   
--   <a>$sel:thingName:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_thingName</a> - The name of the IoT
--   device whose registry information is added to the message.
--   
--   <a>$sel:roleArn:DeviceRegistryEnrichActivity'</a>,
--   <a>deviceRegistryEnrichActivity_roleArn</a> - The ARN of the role that
--   allows access to the device's registry information.
newDeviceRegistryEnrichActivity :: Text -> Text -> Text -> Text -> DeviceRegistryEnrichActivity

-- | An activity that adds information from the IoT Device Shadow service
--   to a message.
--   
--   <i>See:</i> <a>newDeviceShadowEnrichActivity</a> smart constructor.
data DeviceShadowEnrichActivity
DeviceShadowEnrichActivity' :: Maybe Text -> Text -> Text -> Text -> Text -> DeviceShadowEnrichActivity

-- | Create a value of <a>DeviceShadowEnrichActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_name</a> - The name of the
--   <tt>deviceShadowEnrich</tt> activity.
--   
--   <a>$sel:attribute:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_attribute</a> - The name of the
--   attribute that is added to the message.
--   
--   <a>$sel:thingName:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_thingName</a> - The name of the IoT
--   device whose shadow information is added to the message.
--   
--   <a>$sel:roleArn:DeviceShadowEnrichActivity'</a>,
--   <a>deviceShadowEnrichActivity_roleArn</a> - The ARN of the role that
--   allows access to the device's shadow.
newDeviceShadowEnrichActivity :: Text -> Text -> Text -> Text -> DeviceShadowEnrichActivity

-- | The estimated size of the resource.
--   
--   <i>See:</i> <a>newEstimatedResourceSize</a> smart constructor.
data EstimatedResourceSize
EstimatedResourceSize' :: Maybe POSIX -> Maybe Double -> EstimatedResourceSize

-- | Create a value of <a>EstimatedResourceSize</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:estimatedOn:EstimatedResourceSize'</a>,
--   <a>estimatedResourceSize_estimatedOn</a> - The time when the estimate
--   of the size of the resource was made.
--   
--   <a>$sel:estimatedSizeInBytes:EstimatedResourceSize'</a>,
--   <a>estimatedResourceSize_estimatedSizeInBytes</a> - The estimated size
--   of the resource, in bytes.
newEstimatedResourceSize :: EstimatedResourceSize

-- | Contains the configuration information of file formats. IoT Analytics
--   data stores support JSON and <a>Parquet</a>.
--   
--   The default file format is JSON. You can specify only one format.
--   
--   You can't change the file format after you create the data store.
--   
--   <i>See:</i> <a>newFileFormatConfiguration</a> smart constructor.
data FileFormatConfiguration
FileFormatConfiguration' :: Maybe JsonConfiguration -> Maybe ParquetConfiguration -> FileFormatConfiguration

-- | Create a value of <a>FileFormatConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jsonConfiguration:FileFormatConfiguration'</a>,
--   <a>fileFormatConfiguration_jsonConfiguration</a> - Contains the
--   configuration information of the JSON format.
--   
--   <a>$sel:parquetConfiguration:FileFormatConfiguration'</a>,
--   <a>fileFormatConfiguration_parquetConfiguration</a> - Contains the
--   configuration information of the Parquet format.
newFileFormatConfiguration :: FileFormatConfiguration

-- | An activity that filters a message based on its attributes.
--   
--   <i>See:</i> <a>newFilterActivity</a> smart constructor.
data FilterActivity
FilterActivity' :: Maybe Text -> Text -> Text -> FilterActivity

-- | Create a value of <a>FilterActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:FilterActivity'</a>, <a>filterActivity_next</a> - The
--   next activity in the pipeline.
--   
--   <a>$sel:name:FilterActivity'</a>, <a>filterActivity_name</a> - The
--   name of the filter activity.
--   
--   <a>$sel:filter':FilterActivity'</a>, <a>filterActivity_filter</a> - An
--   expression that looks like a SQL WHERE clause that must return a
--   Boolean value. Messages that satisfy the condition are passed to the
--   next activity.
newFilterActivity :: Text -> Text -> FilterActivity

-- | Configuration information for coordination with Glue, a fully managed
--   extract, transform and load (ETL) service.
--   
--   <i>See:</i> <a>newGlueConfiguration</a> smart constructor.
data GlueConfiguration
GlueConfiguration' :: Text -> Text -> GlueConfiguration

-- | Create a value of <a>GlueConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableName:GlueConfiguration'</a>,
--   <a>glueConfiguration_tableName</a> - The name of the table in your
--   Glue Data Catalog that is used to perform the ETL operations. An Glue
--   Data Catalog table contains partitioned data and descriptions of data
--   sources and targets.
--   
--   <a>$sel:databaseName:GlueConfiguration'</a>,
--   <a>glueConfiguration_databaseName</a> - The name of the database in
--   your Glue Data Catalog in which the table is located. An Glue Data
--   Catalog database contains metadata tables.
newGlueConfiguration :: Text -> Text -> GlueConfiguration

-- | Configuration information for delivery of dataset contents to IoT
--   Events.
--   
--   <i>See:</i> <a>newIotEventsDestinationConfiguration</a> smart
--   constructor.
data IotEventsDestinationConfiguration
IotEventsDestinationConfiguration' :: Text -> Text -> IotEventsDestinationConfiguration

-- | Create a value of <a>IotEventsDestinationConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputName:IotEventsDestinationConfiguration'</a>,
--   <a>iotEventsDestinationConfiguration_inputName</a> - The name of the
--   IoT Events input to which dataset contents are delivered.
--   
--   <a>$sel:roleArn:IotEventsDestinationConfiguration'</a>,
--   <a>iotEventsDestinationConfiguration_roleArn</a> - The ARN of the role
--   that grants IoT Analytics permission to deliver dataset contents to an
--   IoT Events input.
newIotEventsDestinationConfiguration :: Text -> Text -> IotEventsDestinationConfiguration

-- | Used to store data used by IoT SiteWise in an Amazon S3 bucket that
--   you manage. You can't change the choice of Amazon S3 storage after
--   your data store is created.
--   
--   <i>See:</i> <a>newIotSiteWiseCustomerManagedDatastoreS3Storage</a>
--   smart constructor.
data IotSiteWiseCustomerManagedDatastoreS3Storage
IotSiteWiseCustomerManagedDatastoreS3Storage' :: Maybe Text -> Text -> IotSiteWiseCustomerManagedDatastoreS3Storage

-- | Create a value of <a>IotSiteWiseCustomerManagedDatastoreS3Storage</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyPrefix:IotSiteWiseCustomerManagedDatastoreS3Storage'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3Storage_keyPrefix</a> -
--   (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
--   
--   <a>$sel:bucket:IotSiteWiseCustomerManagedDatastoreS3Storage'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3Storage_bucket</a> - The name
--   of the Amazon S3 bucket where your data is stored.
newIotSiteWiseCustomerManagedDatastoreS3Storage :: Text -> IotSiteWiseCustomerManagedDatastoreS3Storage

-- | Contains information about the data store that you manage, which
--   stores data used by IoT SiteWise.
--   
--   <i>See:</i>
--   <a>newIotSiteWiseCustomerManagedDatastoreS3StorageSummary</a> smart
--   constructor.
data IotSiteWiseCustomerManagedDatastoreS3StorageSummary
IotSiteWiseCustomerManagedDatastoreS3StorageSummary' :: Maybe Text -> Maybe Text -> IotSiteWiseCustomerManagedDatastoreS3StorageSummary

-- | Create a value of
--   <a>IotSiteWiseCustomerManagedDatastoreS3StorageSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:bucket:IotSiteWiseCustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3StorageSummary_bucket</a> -
--   The name of the Amazon S3 bucket where your data is stored.
--   
--   
--   <a>$sel:keyPrefix:IotSiteWiseCustomerManagedDatastoreS3StorageSummary'</a>,
--   <a>iotSiteWiseCustomerManagedDatastoreS3StorageSummary_keyPrefix</a> -
--   (Optional) The prefix used to create the keys of the data store data
--   objects. Each object in an Amazon S3 bucket has a key that is its
--   unique identifier in the bucket. Each object in a bucket has exactly
--   one key. The prefix must end with a forward slash (/).
newIotSiteWiseCustomerManagedDatastoreS3StorageSummary :: IotSiteWiseCustomerManagedDatastoreS3StorageSummary

-- | Contains the configuration information of the JSON format.
--   
--   <i>See:</i> <a>newJsonConfiguration</a> smart constructor.
data JsonConfiguration
JsonConfiguration' :: JsonConfiguration

-- | Create a value of <a>JsonConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newJsonConfiguration :: JsonConfiguration

-- | An activity that runs a Lambda function to modify the message.
--   
--   <i>See:</i> <a>newLambdaActivity</a> smart constructor.
data LambdaActivity
LambdaActivity' :: Maybe Text -> Text -> Text -> Natural -> LambdaActivity

-- | Create a value of <a>LambdaActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:LambdaActivity'</a>, <a>lambdaActivity_next</a> - The
--   next activity in the pipeline.
--   
--   <a>$sel:name:LambdaActivity'</a>, <a>lambdaActivity_name</a> - The
--   name of the lambda activity.
--   
--   <a>$sel:lambdaName:LambdaActivity'</a>,
--   <a>lambdaActivity_lambdaName</a> - The name of the Lambda function
--   that is run on the message.
--   
--   <a>$sel:batchSize:LambdaActivity'</a>, <a>lambdaActivity_batchSize</a>
--   - The number of messages passed to the Lambda function for processing.
--   
--   The Lambda function must be able to process all of these messages
--   within five minutes, which is the maximum timeout duration for Lambda
--   functions.
newLambdaActivity :: Text -> Text -> Natural -> LambdaActivity

-- | A structure that contains the name and configuration information of a
--   late data rule.
--   
--   <i>See:</i> <a>newLateDataRule</a> smart constructor.
data LateDataRule
LateDataRule' :: Maybe Text -> LateDataRuleConfiguration -> LateDataRule

-- | Create a value of <a>LateDataRule</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ruleName:LateDataRule'</a>, <a>lateDataRule_ruleName</a> - The
--   name of the late data rule.
--   
--   <a>$sel:ruleConfiguration:LateDataRule'</a>,
--   <a>lateDataRule_ruleConfiguration</a> - The information needed to
--   configure the late data rule.
newLateDataRule :: LateDataRuleConfiguration -> LateDataRule

-- | The information needed to configure a delta time session window.
--   
--   <i>See:</i> <a>newLateDataRuleConfiguration</a> smart constructor.
data LateDataRuleConfiguration
LateDataRuleConfiguration' :: Maybe DeltaTimeSessionWindowConfiguration -> LateDataRuleConfiguration

-- | Create a value of <a>LateDataRuleConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:deltaTimeSessionWindowConfiguration:LateDataRuleConfiguration'</a>,
--   <a>lateDataRuleConfiguration_deltaTimeSessionWindowConfiguration</a> -
--   The information needed to configure a delta time session window.
newLateDataRuleConfiguration :: LateDataRuleConfiguration

-- | Information about logging options.
--   
--   <i>See:</i> <a>newLoggingOptions</a> smart constructor.
data LoggingOptions
LoggingOptions' :: Text -> LoggingLevel -> Bool -> LoggingOptions

-- | Create a value of <a>LoggingOptions</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:LoggingOptions'</a>, <a>loggingOptions_roleArn</a> -
--   The ARN of the role that grants permission to IoT Analytics to perform
--   logging.
--   
--   <a>$sel:level:LoggingOptions'</a>, <a>loggingOptions_level</a> - The
--   logging level. Currently, only ERROR is supported.
--   
--   <a>$sel:enabled:LoggingOptions'</a>, <a>loggingOptions_enabled</a> -
--   If true, logging is enabled for IoT Analytics.
newLoggingOptions :: Text -> LoggingLevel -> Bool -> LoggingOptions

-- | An activity that computes an arithmetic expression using the message's
--   attributes.
--   
--   <i>See:</i> <a>newMathActivity</a> smart constructor.
data MathActivity
MathActivity' :: Maybe Text -> Text -> Text -> Text -> MathActivity

-- | Create a value of <a>MathActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:MathActivity'</a>, <a>mathActivity_next</a> - The next
--   activity in the pipeline.
--   
--   <a>$sel:name:MathActivity'</a>, <a>mathActivity_name</a> - The name of
--   the math activity.
--   
--   <a>$sel:attribute:MathActivity'</a>, <a>mathActivity_attribute</a> -
--   The name of the attribute that contains the result of the math
--   operation.
--   
--   <a>$sel:math:MathActivity'</a>, <a>mathActivity_math</a> - An
--   expression that uses one or more existing attributes and must return
--   an integer value.
newMathActivity :: Text -> Text -> Text -> MathActivity

-- | Information about a message.
--   
--   <i>See:</i> <a>newMessage</a> smart constructor.
data Message
Message' :: Text -> Base64 -> Message

-- | Create a value of <a>Message</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:messageId:Message'</a>, <a>message_messageId</a> - The ID you
--   want to assign to the message. Each <tt>messageId</tt> must be unique
--   within each batch sent.
--   
--   <a>$sel:payload:Message'</a>, <a>message_payload</a> - The payload of
--   the message. This can be a JSON string or a base64-encoded string
--   representing binary data, in which case you must decode it by means of
--   a pipeline activity.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
newMessage :: Text -> ByteString -> Message

-- | The value of the variable as a structure that specifies an output file
--   URI.
--   
--   <i>See:</i> <a>newOutputFileUriValue</a> smart constructor.
data OutputFileUriValue
OutputFileUriValue' :: Text -> OutputFileUriValue

-- | Create a value of <a>OutputFileUriValue</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileName:OutputFileUriValue'</a>,
--   <a>outputFileUriValue_fileName</a> - The URI of the location where
--   dataset contents are stored, usually the URI of a file in an S3
--   bucket.
newOutputFileUriValue :: Text -> OutputFileUriValue

-- | Contains the configuration information of the Parquet format.
--   
--   <i>See:</i> <a>newParquetConfiguration</a> smart constructor.
data ParquetConfiguration
ParquetConfiguration' :: Maybe SchemaDefinition -> ParquetConfiguration

-- | Create a value of <a>ParquetConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schemaDefinition:ParquetConfiguration'</a>,
--   <a>parquetConfiguration_schemaDefinition</a> - Information needed to
--   define a schema.
newParquetConfiguration :: ParquetConfiguration

-- | A partition dimension defined by an attribute.
--   
--   <i>See:</i> <a>newPartition</a> smart constructor.
data Partition
Partition' :: Text -> Partition

-- | Create a value of <a>Partition</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:attributeName:Partition'</a>, <a>partition_attributeName</a> -
--   The name of the attribute that defines a partition dimension.
newPartition :: Text -> Partition

-- | Contains information about a pipeline.
--   
--   <i>See:</i> <a>newPipeline</a> smart constructor.
data Pipeline
Pipeline' :: Maybe POSIX -> Maybe Text -> Maybe (NonEmpty PipelineActivity) -> Maybe Text -> Maybe [ReprocessingSummary] -> Maybe POSIX -> Pipeline

-- | Create a value of <a>Pipeline</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:Pipeline'</a>, <a>pipeline_creationTime</a> -
--   When the pipeline was created.
--   
--   <a>$sel:arn:Pipeline'</a>, <a>pipeline_arn</a> - The ARN of the
--   pipeline.
--   
--   <a>$sel:activities:Pipeline'</a>, <a>pipeline_activities</a> - The
--   activities that perform transformations on the messages.
--   
--   <a>$sel:name:Pipeline'</a>, <a>pipeline_name</a> - The name of the
--   pipeline.
--   
--   <a>$sel:reprocessingSummaries:Pipeline'</a>,
--   <a>pipeline_reprocessingSummaries</a> - A summary of information about
--   the pipeline reprocessing.
--   
--   <a>$sel:lastUpdateTime:Pipeline'</a>, <a>pipeline_lastUpdateTime</a> -
--   The last time the pipeline was updated.
newPipeline :: Pipeline

-- | An activity that performs a transformation on a message.
--   
--   <i>See:</i> <a>newPipelineActivity</a> smart constructor.
data PipelineActivity
PipelineActivity' :: Maybe SelectAttributesActivity -> Maybe ChannelActivity -> Maybe AddAttributesActivity -> Maybe DeviceRegistryEnrichActivity -> Maybe RemoveAttributesActivity -> Maybe LambdaActivity -> Maybe DatastoreActivity -> Maybe DeviceShadowEnrichActivity -> Maybe FilterActivity -> Maybe MathActivity -> PipelineActivity

-- | Create a value of <a>PipelineActivity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:selectAttributes:PipelineActivity'</a>,
--   <a>pipelineActivity_selectAttributes</a> - Used to create a new
--   message using only the specified attributes from the original message.
--   
--   <a>$sel:channel:PipelineActivity'</a>, <a>pipelineActivity_channel</a>
--   - Determines the source of the messages to be processed.
--   
--   <a>$sel:addAttributes:PipelineActivity'</a>,
--   <a>pipelineActivity_addAttributes</a> - Adds other attributes based on
--   existing attributes in the message.
--   
--   <a>$sel:deviceRegistryEnrich:PipelineActivity'</a>,
--   <a>pipelineActivity_deviceRegistryEnrich</a> - Adds data from the IoT
--   device registry to your message.
--   
--   <a>$sel:removeAttributes:PipelineActivity'</a>,
--   <a>pipelineActivity_removeAttributes</a> - Removes attributes from a
--   message.
--   
--   <a>$sel:lambda:PipelineActivity'</a>, <a>pipelineActivity_lambda</a> -
--   Runs a Lambda function to modify the message.
--   
--   <a>$sel:datastore:PipelineActivity'</a>,
--   <a>pipelineActivity_datastore</a> - Specifies where to store the
--   processed message data.
--   
--   <a>$sel:deviceShadowEnrich:PipelineActivity'</a>,
--   <a>pipelineActivity_deviceShadowEnrich</a> - Adds information from the
--   IoT Device Shadow service to a message.
--   
--   <a>$sel:filter':PipelineActivity'</a>, <a>pipelineActivity_filter</a>
--   - Filters a message based on its attributes.
--   
--   <a>$sel:math:PipelineActivity'</a>, <a>pipelineActivity_math</a> -
--   Computes an arithmetic expression using the message's attributes and
--   adds it to the message.
newPipelineActivity :: PipelineActivity

-- | A summary of information about a pipeline.
--   
--   <i>See:</i> <a>newPipelineSummary</a> smart constructor.
data PipelineSummary
PipelineSummary' :: Maybe POSIX -> Maybe Text -> Maybe [ReprocessingSummary] -> Maybe POSIX -> PipelineSummary

-- | Create a value of <a>PipelineSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:PipelineSummary'</a>,
--   <a>pipelineSummary_creationTime</a> - When the pipeline was created.
--   
--   <a>$sel:pipelineName:PipelineSummary'</a>,
--   <a>pipelineSummary_pipelineName</a> - The name of the pipeline.
--   
--   <a>$sel:reprocessingSummaries:PipelineSummary'</a>,
--   <a>pipelineSummary_reprocessingSummaries</a> - A summary of
--   information about the pipeline reprocessing.
--   
--   <a>$sel:lastUpdateTime:PipelineSummary'</a>,
--   <a>pipelineSummary_lastUpdateTime</a> - When the pipeline was last
--   updated.
newPipelineSummary :: PipelineSummary

-- | Information that is used to filter message data, to segregate it
--   according to the timeframe in which it arrives.
--   
--   <i>See:</i> <a>newQueryFilter</a> smart constructor.
data QueryFilter
QueryFilter' :: Maybe DeltaTime -> QueryFilter

-- | Create a value of <a>QueryFilter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deltaTime:QueryFilter'</a>, <a>queryFilter_deltaTime</a> -
--   Used to limit data to that which has arrived since the last execution
--   of the action.
newQueryFilter :: QueryFilter

-- | An activity that removes attributes from a message.
--   
--   <i>See:</i> <a>newRemoveAttributesActivity</a> smart constructor.
data RemoveAttributesActivity
RemoveAttributesActivity' :: Maybe Text -> Text -> NonEmpty Text -> RemoveAttributesActivity

-- | Create a value of <a>RemoveAttributesActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:RemoveAttributesActivity'</a>,
--   <a>removeAttributesActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:RemoveAttributesActivity'</a>,
--   <a>removeAttributesActivity_name</a> - The name of the
--   <tt>removeAttributes</tt> activity.
--   
--   <a>$sel:attributes:RemoveAttributesActivity'</a>,
--   <a>removeAttributesActivity_attributes</a> - A list of 1-50 attributes
--   to remove from the message.
newRemoveAttributesActivity :: Text -> NonEmpty Text -> RemoveAttributesActivity

-- | Information about pipeline reprocessing.
--   
--   <i>See:</i> <a>newReprocessingSummary</a> smart constructor.
data ReprocessingSummary
ReprocessingSummary' :: Maybe POSIX -> Maybe ReprocessingStatus -> Maybe Text -> ReprocessingSummary

-- | Create a value of <a>ReprocessingSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:ReprocessingSummary'</a>,
--   <a>reprocessingSummary_creationTime</a> - The time the pipeline
--   reprocessing was created.
--   
--   <a>$sel:status:ReprocessingSummary'</a>,
--   <a>reprocessingSummary_status</a> - The status of the pipeline
--   reprocessing.
--   
--   <a>$sel:id:ReprocessingSummary'</a>, <a>reprocessingSummary_id</a> -
--   The <tt>reprocessingId</tt> returned by
--   <tt>StartPipelineReprocessing</tt>.
newReprocessingSummary :: ReprocessingSummary

-- | The configuration of the resource used to execute the
--   <tt>containerAction</tt>.
--   
--   <i>See:</i> <a>newResourceConfiguration</a> smart constructor.
data ResourceConfiguration
ResourceConfiguration' :: ComputeType -> Natural -> ResourceConfiguration

-- | Create a value of <a>ResourceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:computeType:ResourceConfiguration'</a>,
--   <a>resourceConfiguration_computeType</a> - The type of the compute
--   resource used to execute the <tt>containerAction</tt>. Possible values
--   are: <tt>ACU_1</tt> (vCPU=4, memory=16 GiB) or <tt>ACU_2</tt> (vCPU=8,
--   memory=32 GiB).
--   
--   <a>$sel:volumeSizeInGB:ResourceConfiguration'</a>,
--   <a>resourceConfiguration_volumeSizeInGB</a> - The size, in GB, of the
--   persistent storage available to the resource instance used to execute
--   the <tt>containerAction</tt> (min: 1, max: 50).
newResourceConfiguration :: ComputeType -> Natural -> ResourceConfiguration

-- | How long, in days, message data is kept.
--   
--   <i>See:</i> <a>newRetentionPeriod</a> smart constructor.
data RetentionPeriod
RetentionPeriod' :: Maybe Bool -> Maybe Natural -> RetentionPeriod

-- | Create a value of <a>RetentionPeriod</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlimited:RetentionPeriod'</a>,
--   <a>retentionPeriod_unlimited</a> - If true, message data is kept
--   indefinitely.
--   
--   <a>$sel:numberOfDays:RetentionPeriod'</a>,
--   <a>retentionPeriod_numberOfDays</a> - The number of days that message
--   data is kept. The <tt>unlimited</tt> parameter must be false.
newRetentionPeriod :: RetentionPeriod

-- | Configuration information for delivery of dataset contents to Amazon
--   Simple Storage Service (Amazon S3).
--   
--   <i>See:</i> <a>newS3DestinationConfiguration</a> smart constructor.
data S3DestinationConfiguration
S3DestinationConfiguration' :: Maybe GlueConfiguration -> Text -> Text -> Text -> S3DestinationConfiguration

-- | Create a value of <a>S3DestinationConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:glueConfiguration:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_glueConfiguration</a> - Configuration
--   information for coordination with Glue, a fully managed extract,
--   transform and load (ETL) service.
--   
--   <a>$sel:bucket:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_bucket</a> - The name of the S3 bucket
--   to which dataset contents are delivered.
--   
--   <a>$sel:key:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_key</a> - The key of the dataset
--   contents object in an S3 bucket. Each object has a key that is a
--   unique identifier. Each object has exactly one key.
--   
--   You can create a unique key with the following options:
--   
--   <ul>
--   <li>Use <tt>!{iotanalytics:scheduleTime}</tt> to insert the time of a
--   scheduled SQL query run.</li>
--   <li>Use <tt>!{iotanalytics:versionId}</tt> to insert a unique hash
--   that identifies a dataset content.</li>
--   <li>Use <tt>!{iotanalytics:creationTime}</tt> to insert the creation
--   time of a dataset content.</li>
--   </ul>
--   
--   The following example creates a unique key for a CSV file:
--   <tt>dataset/mydataset/!{iotanalytics:scheduleTime}/!{iotanalytics:versionId}.csv</tt>
--   
--   If you don't use <tt>!{iotanalytics:versionId}</tt> to specify the
--   key, you might get duplicate keys. For example, you might have two
--   dataset contents with the same <tt>scheduleTime</tt> but different
--   <tt>versionId</tt>s. This means that one dataset content overwrites
--   the other.
--   
--   <a>$sel:roleArn:S3DestinationConfiguration'</a>,
--   <a>s3DestinationConfiguration_roleArn</a> - The ARN of the role that
--   grants IoT Analytics permission to interact with your Amazon S3 and
--   Glue resources.
newS3DestinationConfiguration :: Text -> Text -> Text -> S3DestinationConfiguration

-- | The schedule for when to trigger an update.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe Text -> Schedule

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expression:Schedule'</a>, <a>schedule_expression</a> - The
--   expression that defines when to trigger an update. For more
--   information, see <a>Schedule Expressions for Rules</a> in the
--   <i>Amazon CloudWatch Events User Guide</i>.
newSchedule :: Schedule

-- | Information needed to define a schema.
--   
--   <i>See:</i> <a>newSchemaDefinition</a> smart constructor.
data SchemaDefinition
SchemaDefinition' :: Maybe [Column] -> SchemaDefinition

-- | Create a value of <a>SchemaDefinition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:columns:SchemaDefinition'</a>, <a>schemaDefinition_columns</a>
--   - Specifies one or more columns that store your data.
--   
--   Each schema can have up to 100 columns. Each column can have up to 100
--   nested types.
newSchemaDefinition :: SchemaDefinition

-- | Used to create a new message using only the specified attributes from
--   the original message.
--   
--   <i>See:</i> <a>newSelectAttributesActivity</a> smart constructor.
data SelectAttributesActivity
SelectAttributesActivity' :: Maybe Text -> Text -> NonEmpty Text -> SelectAttributesActivity

-- | Create a value of <a>SelectAttributesActivity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:next:SelectAttributesActivity'</a>,
--   <a>selectAttributesActivity_next</a> - The next activity in the
--   pipeline.
--   
--   <a>$sel:name:SelectAttributesActivity'</a>,
--   <a>selectAttributesActivity_name</a> - The name of the
--   <tt>selectAttributes</tt> activity.
--   
--   <a>$sel:attributes:SelectAttributesActivity'</a>,
--   <a>selectAttributesActivity_attributes</a> - A list of the attributes
--   to select from the message.
newSelectAttributesActivity :: Text -> NonEmpty Text -> SelectAttributesActivity

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
--   You can't change the choice of S3 storage after the data store is
--   created.
--   
--   <i>See:</i> <a>newServiceManagedChannelS3Storage</a> smart
--   constructor.
data ServiceManagedChannelS3Storage
ServiceManagedChannelS3Storage' :: ServiceManagedChannelS3Storage

-- | Create a value of <a>ServiceManagedChannelS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedChannelS3Storage :: ServiceManagedChannelS3Storage

-- | Used to store channel data in an S3 bucket managed by IoT Analytics.
--   
--   <i>See:</i> <a>newServiceManagedChannelS3StorageSummary</a> smart
--   constructor.
data ServiceManagedChannelS3StorageSummary
ServiceManagedChannelS3StorageSummary' :: ServiceManagedChannelS3StorageSummary

-- | Create a value of <a>ServiceManagedChannelS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedChannelS3StorageSummary :: ServiceManagedChannelS3StorageSummary

-- | Used to store data in an Amazon S3 bucket managed by IoT Analytics.
--   You can't change the choice of Amazon S3 storage after your data store
--   is created.
--   
--   <i>See:</i> <a>newServiceManagedDatastoreS3Storage</a> smart
--   constructor.
data ServiceManagedDatastoreS3Storage
ServiceManagedDatastoreS3Storage' :: ServiceManagedDatastoreS3Storage

-- | Create a value of <a>ServiceManagedDatastoreS3Storage</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedDatastoreS3Storage :: ServiceManagedDatastoreS3Storage

-- | Contains information about the data store that is managed by IoT
--   Analytics.
--   
--   <i>See:</i> <a>newServiceManagedDatastoreS3StorageSummary</a> smart
--   constructor.
data ServiceManagedDatastoreS3StorageSummary
ServiceManagedDatastoreS3StorageSummary' :: ServiceManagedDatastoreS3StorageSummary

-- | Create a value of <a>ServiceManagedDatastoreS3StorageSummary</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newServiceManagedDatastoreS3StorageSummary :: ServiceManagedDatastoreS3StorageSummary

-- | The SQL query to modify the message.
--   
--   <i>See:</i> <a>newSqlQueryDatasetAction</a> smart constructor.
data SqlQueryDatasetAction
SqlQueryDatasetAction' :: Maybe [QueryFilter] -> Text -> SqlQueryDatasetAction

-- | Create a value of <a>SqlQueryDatasetAction</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:SqlQueryDatasetAction'</a>,
--   <a>sqlQueryDatasetAction_filters</a> - Prefilters applied to message
--   data.
--   
--   <a>$sel:sqlQuery:SqlQueryDatasetAction'</a>,
--   <a>sqlQueryDatasetAction_sqlQuery</a> - A SQL query string.
newSqlQueryDatasetAction :: Text -> SqlQueryDatasetAction

-- | A set of key-value pairs that are used to manage the resource.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | A partition dimension defined by a timestamp attribute.
--   
--   <i>See:</i> <a>newTimestampPartition</a> smart constructor.
data TimestampPartition
TimestampPartition' :: Maybe Text -> Text -> TimestampPartition

-- | Create a value of <a>TimestampPartition</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timestampFormat:TimestampPartition'</a>,
--   <a>timestampPartition_timestampFormat</a> - The timestamp format of a
--   partition defined by a timestamp. The default format is seconds since
--   epoch (January 1, 1970 at midnight UTC time).
--   
--   <a>$sel:attributeName:TimestampPartition'</a>,
--   <a>timestampPartition_attributeName</a> - The attribute name of the
--   partition defined by a timestamp.
newTimestampPartition :: Text -> TimestampPartition

-- | Information about the dataset whose content generation triggers the
--   new dataset content generation.
--   
--   <i>See:</i> <a>newTriggeringDataset</a> smart constructor.
data TriggeringDataset
TriggeringDataset' :: Text -> TriggeringDataset

-- | Create a value of <a>TriggeringDataset</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:TriggeringDataset'</a>, <a>triggeringDataset_name</a> -
--   The name of the dataset whose content generation triggers the new
--   dataset content generation.
newTriggeringDataset :: Text -> TriggeringDataset

-- | An instance of a variable to be passed to the <tt>containerAction</tt>
--   execution. Each variable must have a name and a value given by one of
--   <tt>stringValue</tt>, <tt>datasetContentVersionValue</tt>, or
--   <tt>outputFileUriValue</tt>.
--   
--   <i>See:</i> <a>newVariable</a> smart constructor.
data Variable
Variable' :: Maybe OutputFileUriValue -> Maybe Double -> Maybe Text -> Maybe DatasetContentVersionValue -> Text -> Variable

-- | Create a value of <a>Variable</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputFileUriValue:Variable'</a>,
--   <a>variable_outputFileUriValue</a> - The value of the variable as a
--   structure that specifies an output file URI.
--   
--   <a>$sel:doubleValue:Variable'</a>, <a>variable_doubleValue</a> - The
--   value of the variable as a double (numeric).
--   
--   <a>$sel:stringValue:Variable'</a>, <a>variable_stringValue</a> - The
--   value of the variable as a string.
--   
--   <a>$sel:datasetContentVersionValue:Variable'</a>,
--   <a>variable_datasetContentVersionValue</a> - The value of the variable
--   as a structure that specifies a dataset content version.
--   
--   <a>$sel:name:Variable'</a>, <a>variable_name</a> - The name of the
--   variable.
newVariable :: Text -> Variable

-- | Information about the versioning of dataset contents.
--   
--   <i>See:</i> <a>newVersioningConfiguration</a> smart constructor.
data VersioningConfiguration
VersioningConfiguration' :: Maybe Bool -> Maybe Natural -> VersioningConfiguration

-- | Create a value of <a>VersioningConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unlimited:VersioningConfiguration'</a>,
--   <a>versioningConfiguration_unlimited</a> - If true, unlimited versions
--   of dataset contents are kept.
--   
--   <a>$sel:maxVersions:VersioningConfiguration'</a>,
--   <a>versioningConfiguration_maxVersions</a> - How many versions of
--   dataset contents are kept. The <tt>unlimited</tt> parameter must be
--   <tt>false</tt>.
newVersioningConfiguration :: VersioningConfiguration
