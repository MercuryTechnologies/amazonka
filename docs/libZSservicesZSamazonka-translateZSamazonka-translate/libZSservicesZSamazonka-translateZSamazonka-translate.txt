-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-translateZSamazonka-translate
@version 2.0


module Amazonka.Translate.Types.EncryptionKeyType
newtype EncryptionKeyType
EncryptionKeyType' :: Text -> EncryptionKeyType
[fromEncryptionKeyType] :: EncryptionKeyType -> Text
pattern EncryptionKeyType_KMS :: EncryptionKeyType
instance Amazonka.Data.XML.ToXML Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Amazonka.Data.XML.FromXML Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Amazonka.Data.Headers.ToHeader Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Amazonka.Data.Log.ToLog Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Amazonka.Data.ByteString.ToByteString Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Amazonka.Data.Text.ToText Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Amazonka.Data.Text.FromText Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Control.DeepSeq.NFData Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance GHC.Generics.Generic Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance GHC.Classes.Ord Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance GHC.Classes.Eq Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance GHC.Read.Read Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType
instance GHC.Show.Show Amazonka.Translate.Types.EncryptionKeyType.EncryptionKeyType


module Amazonka.Translate.Types.EncryptionKey

-- | The encryption key used to encrypt this object.
--   
--   <i>See:</i> <a>newEncryptionKey</a> smart constructor.
data EncryptionKey
EncryptionKey' :: EncryptionKeyType -> Text -> EncryptionKey

-- | The type of encryption key used by Amazon Translate to encrypt custom
--   terminologies.
[$sel:type':EncryptionKey'] :: EncryptionKey -> EncryptionKeyType

-- | The Amazon Resource Name (ARN) of the encryption key being used to
--   encrypt the custom terminology.
[$sel:id:EncryptionKey'] :: EncryptionKey -> Text

-- | Create a value of <a>EncryptionKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':EncryptionKey'</a>, <a>encryptionKey_type</a> - The type
--   of encryption key used by Amazon Translate to encrypt custom
--   terminologies.
--   
--   <a>$sel:id:EncryptionKey'</a>, <a>encryptionKey_id</a> - The Amazon
--   Resource Name (ARN) of the encryption key being used to encrypt the
--   custom terminology.
newEncryptionKey :: EncryptionKeyType -> Text -> EncryptionKey

-- | The type of encryption key used by Amazon Translate to encrypt custom
--   terminologies.
encryptionKey_type :: Lens' EncryptionKey EncryptionKeyType

-- | The Amazon Resource Name (ARN) of the encryption key being used to
--   encrypt the custom terminology.
encryptionKey_id :: Lens' EncryptionKey Text
instance GHC.Generics.Generic Amazonka.Translate.Types.EncryptionKey.EncryptionKey
instance GHC.Show.Show Amazonka.Translate.Types.EncryptionKey.EncryptionKey
instance GHC.Read.Read Amazonka.Translate.Types.EncryptionKey.EncryptionKey
instance GHC.Classes.Eq Amazonka.Translate.Types.EncryptionKey.EncryptionKey
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.EncryptionKey.EncryptionKey
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.EncryptionKey.EncryptionKey
instance Control.DeepSeq.NFData Amazonka.Translate.Types.EncryptionKey.EncryptionKey
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.EncryptionKey.EncryptionKey


module Amazonka.Translate.Types.InputDataConfig

-- | The input configuration properties for requesting a batch translation
--   job.
--   
--   <i>See:</i> <a>newInputDataConfig</a> smart constructor.
data InputDataConfig
InputDataConfig' :: Text -> Text -> InputDataConfig

-- | The URI of the AWS S3 folder that contains the input file. The folder
--   must be in the same Region as the API endpoint you are calling.
[$sel:s3Uri:InputDataConfig'] :: InputDataConfig -> Text

-- | Describes the format of the data that you submit to Amazon Translate
--   as input. You can specify one of the following multipurpose internet
--   mail extension (MIME) types:
--   
--   <ul>
--   <li><tt>text/html</tt>: The input data consists of one or more HTML
--   files. Amazon Translate translates only the text that resides in the
--   <tt>html</tt> element in each file.</li>
--   <li><tt>text/plain</tt>: The input data consists of one or more
--   unformatted text files. Amazon Translate translates every character in
--   this type of input.</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.wordprocessingml.document</tt>:
--   The input data consists of one or more Word documents (.docx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.presentationml.presentation</tt>:
--   The input data consists of one or more PowerPoint Presentation files
--   (.pptx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</tt>:
--   The input data consists of one or more Excel Workbook files
--   (.xlsx).</li>
--   </ul>
--   
--   If you structure your input data as HTML, ensure that you set this
--   parameter to <tt>text/html</tt>. By doing so, you cut costs by
--   limiting the translation to the contents of the <tt>html</tt> element
--   in each file. Otherwise, if you set this parameter to
--   <tt>text/plain</tt>, your costs will cover the translation of every
--   character.
[$sel:contentType:InputDataConfig'] :: InputDataConfig -> Text

-- | Create a value of <a>InputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:InputDataConfig'</a>, <a>inputDataConfig_s3Uri</a> - The
--   URI of the AWS S3 folder that contains the input file. The folder must
--   be in the same Region as the API endpoint you are calling.
--   
--   <a>$sel:contentType:InputDataConfig'</a>,
--   <a>inputDataConfig_contentType</a> - Describes the format of the data
--   that you submit to Amazon Translate as input. You can specify one of
--   the following multipurpose internet mail extension (MIME) types:
--   
--   <ul>
--   <li><tt>text/html</tt>: The input data consists of one or more HTML
--   files. Amazon Translate translates only the text that resides in the
--   <tt>html</tt> element in each file.</li>
--   <li><tt>text/plain</tt>: The input data consists of one or more
--   unformatted text files. Amazon Translate translates every character in
--   this type of input.</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.wordprocessingml.document</tt>:
--   The input data consists of one or more Word documents (.docx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.presentationml.presentation</tt>:
--   The input data consists of one or more PowerPoint Presentation files
--   (.pptx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</tt>:
--   The input data consists of one or more Excel Workbook files
--   (.xlsx).</li>
--   </ul>
--   
--   If you structure your input data as HTML, ensure that you set this
--   parameter to <tt>text/html</tt>. By doing so, you cut costs by
--   limiting the translation to the contents of the <tt>html</tt> element
--   in each file. Otherwise, if you set this parameter to
--   <tt>text/plain</tt>, your costs will cover the translation of every
--   character.
newInputDataConfig :: Text -> Text -> InputDataConfig

-- | The URI of the AWS S3 folder that contains the input file. The folder
--   must be in the same Region as the API endpoint you are calling.
inputDataConfig_s3Uri :: Lens' InputDataConfig Text

-- | Describes the format of the data that you submit to Amazon Translate
--   as input. You can specify one of the following multipurpose internet
--   mail extension (MIME) types:
--   
--   <ul>
--   <li><tt>text/html</tt>: The input data consists of one or more HTML
--   files. Amazon Translate translates only the text that resides in the
--   <tt>html</tt> element in each file.</li>
--   <li><tt>text/plain</tt>: The input data consists of one or more
--   unformatted text files. Amazon Translate translates every character in
--   this type of input.</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.wordprocessingml.document</tt>:
--   The input data consists of one or more Word documents (.docx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.presentationml.presentation</tt>:
--   The input data consists of one or more PowerPoint Presentation files
--   (.pptx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</tt>:
--   The input data consists of one or more Excel Workbook files
--   (.xlsx).</li>
--   </ul>
--   
--   If you structure your input data as HTML, ensure that you set this
--   parameter to <tt>text/html</tt>. By doing so, you cut costs by
--   limiting the translation to the contents of the <tt>html</tt> element
--   in each file. Otherwise, if you set this parameter to
--   <tt>text/plain</tt>, your costs will cover the translation of every
--   character.
inputDataConfig_contentType :: Lens' InputDataConfig Text
instance GHC.Generics.Generic Amazonka.Translate.Types.InputDataConfig.InputDataConfig
instance GHC.Show.Show Amazonka.Translate.Types.InputDataConfig.InputDataConfig
instance GHC.Read.Read Amazonka.Translate.Types.InputDataConfig.InputDataConfig
instance GHC.Classes.Eq Amazonka.Translate.Types.InputDataConfig.InputDataConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.InputDataConfig.InputDataConfig
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.InputDataConfig.InputDataConfig
instance Control.DeepSeq.NFData Amazonka.Translate.Types.InputDataConfig.InputDataConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.InputDataConfig.InputDataConfig


module Amazonka.Translate.Types.JobDetails

-- | The number of documents successfully and unsuccessfully processed
--   during a translation job.
--   
--   <i>See:</i> <a>newJobDetails</a> smart constructor.
data JobDetails
JobDetails' :: Maybe Int -> Maybe Int -> Maybe Int -> JobDetails

-- | The number of documents successfully processed during a translation
--   job.
[$sel:translatedDocumentsCount:JobDetails'] :: JobDetails -> Maybe Int

-- | The number of documents that could not be processed during a
--   translation job.
[$sel:documentsWithErrorsCount:JobDetails'] :: JobDetails -> Maybe Int

-- | The number of documents used as input in a translation job.
[$sel:inputDocumentsCount:JobDetails'] :: JobDetails -> Maybe Int

-- | Create a value of <a>JobDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:translatedDocumentsCount:JobDetails'</a>,
--   <a>jobDetails_translatedDocumentsCount</a> - The number of documents
--   successfully processed during a translation job.
--   
--   <a>$sel:documentsWithErrorsCount:JobDetails'</a>,
--   <a>jobDetails_documentsWithErrorsCount</a> - The number of documents
--   that could not be processed during a translation job.
--   
--   <a>$sel:inputDocumentsCount:JobDetails'</a>,
--   <a>jobDetails_inputDocumentsCount</a> - The number of documents used
--   as input in a translation job.
newJobDetails :: JobDetails

-- | The number of documents successfully processed during a translation
--   job.
jobDetails_translatedDocumentsCount :: Lens' JobDetails (Maybe Int)

-- | The number of documents that could not be processed during a
--   translation job.
jobDetails_documentsWithErrorsCount :: Lens' JobDetails (Maybe Int)

-- | The number of documents used as input in a translation job.
jobDetails_inputDocumentsCount :: Lens' JobDetails (Maybe Int)
instance GHC.Generics.Generic Amazonka.Translate.Types.JobDetails.JobDetails
instance GHC.Show.Show Amazonka.Translate.Types.JobDetails.JobDetails
instance GHC.Read.Read Amazonka.Translate.Types.JobDetails.JobDetails
instance GHC.Classes.Eq Amazonka.Translate.Types.JobDetails.JobDetails
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.JobDetails.JobDetails
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.JobDetails.JobDetails
instance Control.DeepSeq.NFData Amazonka.Translate.Types.JobDetails.JobDetails


module Amazonka.Translate.Types.JobStatus
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_COMPLETED :: JobStatus
pattern JobStatus_COMPLETED_WITH_ERROR :: JobStatus
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_IN_PROGRESS :: JobStatus
pattern JobStatus_STOPPED :: JobStatus
pattern JobStatus_STOP_REQUESTED :: JobStatus
pattern JobStatus_SUBMITTED :: JobStatus
instance Amazonka.Data.XML.ToXML Amazonka.Translate.Types.JobStatus.JobStatus
instance Amazonka.Data.XML.FromXML Amazonka.Translate.Types.JobStatus.JobStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Translate.Types.JobStatus.JobStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.JobStatus.JobStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Translate.Types.JobStatus.JobStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.JobStatus.JobStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.Types.JobStatus.JobStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Translate.Types.JobStatus.JobStatus
instance Amazonka.Data.Log.ToLog Amazonka.Translate.Types.JobStatus.JobStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Translate.Types.JobStatus.JobStatus
instance Amazonka.Data.Text.ToText Amazonka.Translate.Types.JobStatus.JobStatus
instance Amazonka.Data.Text.FromText Amazonka.Translate.Types.JobStatus.JobStatus
instance Control.DeepSeq.NFData Amazonka.Translate.Types.JobStatus.JobStatus
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.JobStatus.JobStatus
instance GHC.Generics.Generic Amazonka.Translate.Types.JobStatus.JobStatus
instance GHC.Classes.Ord Amazonka.Translate.Types.JobStatus.JobStatus
instance GHC.Classes.Eq Amazonka.Translate.Types.JobStatus.JobStatus
instance GHC.Read.Read Amazonka.Translate.Types.JobStatus.JobStatus
instance GHC.Show.Show Amazonka.Translate.Types.JobStatus.JobStatus


module Amazonka.Translate.Types.MergeStrategy
newtype MergeStrategy
MergeStrategy' :: Text -> MergeStrategy
[fromMergeStrategy] :: MergeStrategy -> Text
pattern MergeStrategy_OVERWRITE :: MergeStrategy
instance Amazonka.Data.XML.ToXML Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Amazonka.Data.XML.FromXML Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Amazonka.Data.Headers.ToHeader Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Amazonka.Data.Log.ToLog Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Amazonka.Data.ByteString.ToByteString Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Amazonka.Data.Text.ToText Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Amazonka.Data.Text.FromText Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Control.DeepSeq.NFData Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance GHC.Generics.Generic Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance GHC.Classes.Ord Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance GHC.Classes.Eq Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance GHC.Read.Read Amazonka.Translate.Types.MergeStrategy.MergeStrategy
instance GHC.Show.Show Amazonka.Translate.Types.MergeStrategy.MergeStrategy


module Amazonka.Translate.Types.OutputDataConfig

-- | The output configuration properties for a batch translation job.
--   
--   <i>See:</i> <a>newOutputDataConfig</a> smart constructor.
data OutputDataConfig
OutputDataConfig' :: Text -> OutputDataConfig

-- | The URI of the S3 folder that contains a translation job's output
--   file. The folder must be in the same Region as the API endpoint that
--   you are calling.
[$sel:s3Uri:OutputDataConfig'] :: OutputDataConfig -> Text

-- | Create a value of <a>OutputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:OutputDataConfig'</a>, <a>outputDataConfig_s3Uri</a> -
--   The URI of the S3 folder that contains a translation job's output
--   file. The folder must be in the same Region as the API endpoint that
--   you are calling.
newOutputDataConfig :: Text -> OutputDataConfig

-- | The URI of the S3 folder that contains a translation job's output
--   file. The folder must be in the same Region as the API endpoint that
--   you are calling.
outputDataConfig_s3Uri :: Lens' OutputDataConfig Text
instance GHC.Generics.Generic Amazonka.Translate.Types.OutputDataConfig.OutputDataConfig
instance GHC.Show.Show Amazonka.Translate.Types.OutputDataConfig.OutputDataConfig
instance GHC.Read.Read Amazonka.Translate.Types.OutputDataConfig.OutputDataConfig
instance GHC.Classes.Eq Amazonka.Translate.Types.OutputDataConfig.OutputDataConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.OutputDataConfig.OutputDataConfig
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.OutputDataConfig.OutputDataConfig
instance Control.DeepSeq.NFData Amazonka.Translate.Types.OutputDataConfig.OutputDataConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.OutputDataConfig.OutputDataConfig


module Amazonka.Translate.Types.ParallelDataDataLocation

-- | The location of the most recent parallel data input file that was
--   successfully imported into Amazon Translate.
--   
--   <i>See:</i> <a>newParallelDataDataLocation</a> smart constructor.
data ParallelDataDataLocation
ParallelDataDataLocation' :: Text -> Text -> ParallelDataDataLocation

-- | Describes the repository that contains the parallel data input file.
[$sel:repositoryType:ParallelDataDataLocation'] :: ParallelDataDataLocation -> Text

-- | The Amazon S3 location of the parallel data input file. The location
--   is returned as a presigned URL to that has a 30 minute expiration.
[$sel:location:ParallelDataDataLocation'] :: ParallelDataDataLocation -> Text

-- | Create a value of <a>ParallelDataDataLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryType:ParallelDataDataLocation'</a>,
--   <a>parallelDataDataLocation_repositoryType</a> - Describes the
--   repository that contains the parallel data input file.
--   
--   <a>$sel:location:ParallelDataDataLocation'</a>,
--   <a>parallelDataDataLocation_location</a> - The Amazon S3 location of
--   the parallel data input file. The location is returned as a presigned
--   URL to that has a 30 minute expiration.
newParallelDataDataLocation :: Text -> Text -> ParallelDataDataLocation

-- | Describes the repository that contains the parallel data input file.
parallelDataDataLocation_repositoryType :: Lens' ParallelDataDataLocation Text

-- | The Amazon S3 location of the parallel data input file. The location
--   is returned as a presigned URL to that has a 30 minute expiration.
parallelDataDataLocation_location :: Lens' ParallelDataDataLocation Text
instance GHC.Generics.Generic Amazonka.Translate.Types.ParallelDataDataLocation.ParallelDataDataLocation
instance GHC.Show.Show Amazonka.Translate.Types.ParallelDataDataLocation.ParallelDataDataLocation
instance GHC.Read.Read Amazonka.Translate.Types.ParallelDataDataLocation.ParallelDataDataLocation
instance GHC.Classes.Eq Amazonka.Translate.Types.ParallelDataDataLocation.ParallelDataDataLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.ParallelDataDataLocation.ParallelDataDataLocation
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.ParallelDataDataLocation.ParallelDataDataLocation
instance Control.DeepSeq.NFData Amazonka.Translate.Types.ParallelDataDataLocation.ParallelDataDataLocation


module Amazonka.Translate.Types.ParallelDataFormat
newtype ParallelDataFormat
ParallelDataFormat' :: Text -> ParallelDataFormat
[fromParallelDataFormat] :: ParallelDataFormat -> Text
pattern ParallelDataFormat_CSV :: ParallelDataFormat
pattern ParallelDataFormat_TMX :: ParallelDataFormat
pattern ParallelDataFormat_TSV :: ParallelDataFormat
instance Amazonka.Data.XML.ToXML Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Amazonka.Data.XML.FromXML Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Amazonka.Data.Headers.ToHeader Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Amazonka.Data.Log.ToLog Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Amazonka.Data.ByteString.ToByteString Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Amazonka.Data.Text.ToText Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Amazonka.Data.Text.FromText Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Control.DeepSeq.NFData Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance GHC.Generics.Generic Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance GHC.Classes.Ord Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance GHC.Classes.Eq Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance GHC.Read.Read Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat
instance GHC.Show.Show Amazonka.Translate.Types.ParallelDataFormat.ParallelDataFormat


module Amazonka.Translate.Types.ParallelDataConfig

-- | Specifies the format and S3 location of the parallel data input file.
--   
--   <i>See:</i> <a>newParallelDataConfig</a> smart constructor.
data ParallelDataConfig
ParallelDataConfig' :: Text -> ParallelDataFormat -> ParallelDataConfig

-- | The URI of the Amazon S3 folder that contains the parallel data input
--   file. The folder must be in the same Region as the API endpoint you
--   are calling.
[$sel:s3Uri:ParallelDataConfig'] :: ParallelDataConfig -> Text

-- | The format of the parallel data input file.
[$sel:format:ParallelDataConfig'] :: ParallelDataConfig -> ParallelDataFormat

-- | Create a value of <a>ParallelDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:ParallelDataConfig'</a>, <a>parallelDataConfig_s3Uri</a>
--   - The URI of the Amazon S3 folder that contains the parallel data
--   input file. The folder must be in the same Region as the API endpoint
--   you are calling.
--   
--   <a>$sel:format:ParallelDataConfig'</a>,
--   <a>parallelDataConfig_format</a> - The format of the parallel data
--   input file.
newParallelDataConfig :: Text -> ParallelDataFormat -> ParallelDataConfig

-- | The URI of the Amazon S3 folder that contains the parallel data input
--   file. The folder must be in the same Region as the API endpoint you
--   are calling.
parallelDataConfig_s3Uri :: Lens' ParallelDataConfig Text

-- | The format of the parallel data input file.
parallelDataConfig_format :: Lens' ParallelDataConfig ParallelDataFormat
instance GHC.Generics.Generic Amazonka.Translate.Types.ParallelDataConfig.ParallelDataConfig
instance GHC.Show.Show Amazonka.Translate.Types.ParallelDataConfig.ParallelDataConfig
instance GHC.Read.Read Amazonka.Translate.Types.ParallelDataConfig.ParallelDataConfig
instance GHC.Classes.Eq Amazonka.Translate.Types.ParallelDataConfig.ParallelDataConfig
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.ParallelDataConfig.ParallelDataConfig
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.ParallelDataConfig.ParallelDataConfig
instance Control.DeepSeq.NFData Amazonka.Translate.Types.ParallelDataConfig.ParallelDataConfig
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.ParallelDataConfig.ParallelDataConfig


module Amazonka.Translate.Types.ParallelDataStatus
newtype ParallelDataStatus
ParallelDataStatus' :: Text -> ParallelDataStatus
[fromParallelDataStatus] :: ParallelDataStatus -> Text
pattern ParallelDataStatus_ACTIVE :: ParallelDataStatus
pattern ParallelDataStatus_CREATING :: ParallelDataStatus
pattern ParallelDataStatus_DELETING :: ParallelDataStatus
pattern ParallelDataStatus_FAILED :: ParallelDataStatus
pattern ParallelDataStatus_UPDATING :: ParallelDataStatus
instance Amazonka.Data.XML.ToXML Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Amazonka.Data.XML.FromXML Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Amazonka.Data.Log.ToLog Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Amazonka.Data.Text.ToText Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Amazonka.Data.Text.FromText Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Control.DeepSeq.NFData Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance GHC.Generics.Generic Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance GHC.Classes.Ord Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance GHC.Classes.Eq Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance GHC.Read.Read Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus
instance GHC.Show.Show Amazonka.Translate.Types.ParallelDataStatus.ParallelDataStatus


module Amazonka.Translate.Types.ParallelDataProperties

-- | The properties of a parallel data resource.
--   
--   <i>See:</i> <a>newParallelDataProperties</a> smart constructor.
data ParallelDataProperties
ParallelDataProperties' :: Maybe ParallelDataStatus -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe EncryptionKey -> Maybe ParallelDataStatus -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe ParallelDataConfig -> ParallelDataProperties

-- | The status of the parallel data resource. When the parallel data is
--   ready for you to use, the status is <tt>ACTIVE</tt>.
[$sel:status:ParallelDataProperties'] :: ParallelDataProperties -> Maybe ParallelDataStatus

-- | The time at which the parallel data resource was last updated.
[$sel:lastUpdatedAt:ParallelDataProperties'] :: ParallelDataProperties -> Maybe POSIX

-- | The number of records successfully imported from the parallel data
--   input file.
[$sel:importedRecordCount:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Integer

-- | The Amazon Resource Name (ARN) of the parallel data resource.
[$sel:arn:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Text

-- | The language codes for the target languages available in the parallel
--   data file. All possible target languages are returned as an array.
[$sel:targetLanguageCodes:ParallelDataProperties'] :: ParallelDataProperties -> Maybe [Text]

-- | The time at which the parallel data resource was created.
[$sel:createdAt:ParallelDataProperties'] :: ParallelDataProperties -> Maybe POSIX

-- | The number of records unsuccessfully imported from the parallel data
--   input file.
[$sel:failedRecordCount:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Integer

-- | The number of UTF-8 characters that Amazon Translate imported from the
--   parallel data input file. This number includes only the characters in
--   your translation examples. It does not include characters that are
--   used to format your file. For example, if you provided a Translation
--   Memory Exchange (.tmx) file, this number does not include the tags.
[$sel:importedDataSize:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Integer

-- | The custom name assigned to the parallel data resource.
[$sel:name:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Text

-- | The source language of the translations in the parallel data file.
[$sel:sourceLanguageCode:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Text

-- | The time that the most recent update was attempted.
[$sel:latestUpdateAttemptAt:ParallelDataProperties'] :: ParallelDataProperties -> Maybe POSIX
[$sel:encryptionKey:ParallelDataProperties'] :: ParallelDataProperties -> Maybe EncryptionKey

-- | The status of the most recent update attempt for the parallel data
--   resource.
[$sel:latestUpdateAttemptStatus:ParallelDataProperties'] :: ParallelDataProperties -> Maybe ParallelDataStatus

-- | Additional information from Amazon Translate about the parallel data
--   resource.
[$sel:message:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Text

-- | The description assigned to the parallel data resource.
[$sel:description:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Text

-- | The number of items in the input file that Amazon Translate skipped
--   when you created or updated the parallel data resource. For example,
--   Amazon Translate skips empty records, empty target texts, and empty
--   lines.
[$sel:skippedRecordCount:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Integer

-- | Specifies the format and S3 location of the parallel data input file.
[$sel:parallelDataConfig:ParallelDataProperties'] :: ParallelDataProperties -> Maybe ParallelDataConfig

-- | Create a value of <a>ParallelDataProperties</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_status</a> - The status of the parallel data
--   resource. When the parallel data is ready for you to use, the status
--   is <tt>ACTIVE</tt>.
--   
--   <a>$sel:lastUpdatedAt:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_lastUpdatedAt</a> - The time at which the
--   parallel data resource was last updated.
--   
--   <a>$sel:importedRecordCount:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_importedRecordCount</a> - The number of
--   records successfully imported from the parallel data input file.
--   
--   <a>$sel:arn:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_arn</a> - The Amazon Resource Name (ARN) of
--   the parallel data resource.
--   
--   <a>$sel:targetLanguageCodes:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_targetLanguageCodes</a> - The language codes
--   for the target languages available in the parallel data file. All
--   possible target languages are returned as an array.
--   
--   <a>$sel:createdAt:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_createdAt</a> - The time at which the
--   parallel data resource was created.
--   
--   <a>$sel:failedRecordCount:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_failedRecordCount</a> - The number of
--   records unsuccessfully imported from the parallel data input file.
--   
--   <a>$sel:importedDataSize:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_importedDataSize</a> - The number of UTF-8
--   characters that Amazon Translate imported from the parallel data input
--   file. This number includes only the characters in your translation
--   examples. It does not include characters that are used to format your
--   file. For example, if you provided a Translation Memory Exchange
--   (.tmx) file, this number does not include the tags.
--   
--   <a>$sel:name:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_name</a> - The custom name assigned to the
--   parallel data resource.
--   
--   <a>$sel:sourceLanguageCode:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_sourceLanguageCode</a> - The source language
--   of the translations in the parallel data file.
--   
--   <a>$sel:latestUpdateAttemptAt:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_latestUpdateAttemptAt</a> - The time that
--   the most recent update was attempted.
--   
--   <a>$sel:encryptionKey:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_encryptionKey</a> - Undocumented member.
--   
--   <a>$sel:latestUpdateAttemptStatus:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_latestUpdateAttemptStatus</a> - The status
--   of the most recent update attempt for the parallel data resource.
--   
--   <a>$sel:message:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_message</a> - Additional information from
--   Amazon Translate about the parallel data resource.
--   
--   <a>$sel:description:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_description</a> - The description assigned
--   to the parallel data resource.
--   
--   <a>$sel:skippedRecordCount:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_skippedRecordCount</a> - The number of items
--   in the input file that Amazon Translate skipped when you created or
--   updated the parallel data resource. For example, Amazon Translate
--   skips empty records, empty target texts, and empty lines.
--   
--   <a>$sel:parallelDataConfig:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_parallelDataConfig</a> - Specifies the
--   format and S3 location of the parallel data input file.
newParallelDataProperties :: ParallelDataProperties

-- | The status of the parallel data resource. When the parallel data is
--   ready for you to use, the status is <tt>ACTIVE</tt>.
parallelDataProperties_status :: Lens' ParallelDataProperties (Maybe ParallelDataStatus)

-- | The time at which the parallel data resource was last updated.
parallelDataProperties_lastUpdatedAt :: Lens' ParallelDataProperties (Maybe UTCTime)

-- | The number of records successfully imported from the parallel data
--   input file.
parallelDataProperties_importedRecordCount :: Lens' ParallelDataProperties (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the parallel data resource.
parallelDataProperties_arn :: Lens' ParallelDataProperties (Maybe Text)

-- | The language codes for the target languages available in the parallel
--   data file. All possible target languages are returned as an array.
parallelDataProperties_targetLanguageCodes :: Lens' ParallelDataProperties (Maybe [Text])

-- | The time at which the parallel data resource was created.
parallelDataProperties_createdAt :: Lens' ParallelDataProperties (Maybe UTCTime)

-- | The number of records unsuccessfully imported from the parallel data
--   input file.
parallelDataProperties_failedRecordCount :: Lens' ParallelDataProperties (Maybe Integer)

-- | The number of UTF-8 characters that Amazon Translate imported from the
--   parallel data input file. This number includes only the characters in
--   your translation examples. It does not include characters that are
--   used to format your file. For example, if you provided a Translation
--   Memory Exchange (.tmx) file, this number does not include the tags.
parallelDataProperties_importedDataSize :: Lens' ParallelDataProperties (Maybe Integer)

-- | The custom name assigned to the parallel data resource.
parallelDataProperties_name :: Lens' ParallelDataProperties (Maybe Text)

-- | The source language of the translations in the parallel data file.
parallelDataProperties_sourceLanguageCode :: Lens' ParallelDataProperties (Maybe Text)

-- | The time that the most recent update was attempted.
parallelDataProperties_latestUpdateAttemptAt :: Lens' ParallelDataProperties (Maybe UTCTime)

-- | Undocumented member.
parallelDataProperties_encryptionKey :: Lens' ParallelDataProperties (Maybe EncryptionKey)

-- | The status of the most recent update attempt for the parallel data
--   resource.
parallelDataProperties_latestUpdateAttemptStatus :: Lens' ParallelDataProperties (Maybe ParallelDataStatus)

-- | Additional information from Amazon Translate about the parallel data
--   resource.
parallelDataProperties_message :: Lens' ParallelDataProperties (Maybe Text)

-- | The description assigned to the parallel data resource.
parallelDataProperties_description :: Lens' ParallelDataProperties (Maybe Text)

-- | The number of items in the input file that Amazon Translate skipped
--   when you created or updated the parallel data resource. For example,
--   Amazon Translate skips empty records, empty target texts, and empty
--   lines.
parallelDataProperties_skippedRecordCount :: Lens' ParallelDataProperties (Maybe Integer)

-- | Specifies the format and S3 location of the parallel data input file.
parallelDataProperties_parallelDataConfig :: Lens' ParallelDataProperties (Maybe ParallelDataConfig)
instance GHC.Generics.Generic Amazonka.Translate.Types.ParallelDataProperties.ParallelDataProperties
instance GHC.Show.Show Amazonka.Translate.Types.ParallelDataProperties.ParallelDataProperties
instance GHC.Read.Read Amazonka.Translate.Types.ParallelDataProperties.ParallelDataProperties
instance GHC.Classes.Eq Amazonka.Translate.Types.ParallelDataProperties.ParallelDataProperties
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.ParallelDataProperties.ParallelDataProperties
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.ParallelDataProperties.ParallelDataProperties
instance Control.DeepSeq.NFData Amazonka.Translate.Types.ParallelDataProperties.ParallelDataProperties


module Amazonka.Translate.Types.Term

-- | The term being translated by the custom terminology.
--   
--   <i>See:</i> <a>newTerm</a> smart constructor.
data Term
Term' :: Maybe Text -> Maybe Text -> Term

-- | The target text of the term being translated by the custom
--   terminology.
[$sel:targetText:Term'] :: Term -> Maybe Text

-- | The source text of the term being translated by the custom
--   terminology.
[$sel:sourceText:Term'] :: Term -> Maybe Text

-- | Create a value of <a>Term</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetText:Term'</a>, <a>term_targetText</a> - The target text
--   of the term being translated by the custom terminology.
--   
--   <a>$sel:sourceText:Term'</a>, <a>term_sourceText</a> - The source text
--   of the term being translated by the custom terminology.
newTerm :: Term

-- | The target text of the term being translated by the custom
--   terminology.
term_targetText :: Lens' Term (Maybe Text)

-- | The source text of the term being translated by the custom
--   terminology.
term_sourceText :: Lens' Term (Maybe Text)
instance GHC.Generics.Generic Amazonka.Translate.Types.Term.Term
instance GHC.Show.Show Amazonka.Translate.Types.Term.Term
instance GHC.Read.Read Amazonka.Translate.Types.Term.Term
instance GHC.Classes.Eq Amazonka.Translate.Types.Term.Term
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.Term.Term
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.Term.Term
instance Control.DeepSeq.NFData Amazonka.Translate.Types.Term.Term


module Amazonka.Translate.Types.AppliedTerminology

-- | The custom terminology applied to the input text by Amazon Translate
--   for the translated text response. This is optional in the response and
--   will only be present if you specified terminology input in the
--   request. Currently, only one terminology can be applied per
--   TranslateText request.
--   
--   <i>See:</i> <a>newAppliedTerminology</a> smart constructor.
data AppliedTerminology
AppliedTerminology' :: Maybe [Term] -> Maybe Text -> AppliedTerminology

-- | The specific terms of the custom terminology applied to the input text
--   by Amazon Translate for the translated text response. A maximum of 250
--   terms will be returned, and the specific terms applied will be the
--   first 250 terms in the source text.
[$sel:terms:AppliedTerminology'] :: AppliedTerminology -> Maybe [Term]

-- | The name of the custom terminology applied to the input text by Amazon
--   Translate for the translated text response.
[$sel:name:AppliedTerminology'] :: AppliedTerminology -> Maybe Text

-- | Create a value of <a>AppliedTerminology</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:terms:AppliedTerminology'</a>, <a>appliedTerminology_terms</a>
--   - The specific terms of the custom terminology applied to the input
--   text by Amazon Translate for the translated text response. A maximum
--   of 250 terms will be returned, and the specific terms applied will be
--   the first 250 terms in the source text.
--   
--   <a>$sel:name:AppliedTerminology'</a>, <a>appliedTerminology_name</a> -
--   The name of the custom terminology applied to the input text by Amazon
--   Translate for the translated text response.
newAppliedTerminology :: AppliedTerminology

-- | The specific terms of the custom terminology applied to the input text
--   by Amazon Translate for the translated text response. A maximum of 250
--   terms will be returned, and the specific terms applied will be the
--   first 250 terms in the source text.
appliedTerminology_terms :: Lens' AppliedTerminology (Maybe [Term])

-- | The name of the custom terminology applied to the input text by Amazon
--   Translate for the translated text response.
appliedTerminology_name :: Lens' AppliedTerminology (Maybe Text)
instance GHC.Generics.Generic Amazonka.Translate.Types.AppliedTerminology.AppliedTerminology
instance GHC.Show.Show Amazonka.Translate.Types.AppliedTerminology.AppliedTerminology
instance GHC.Read.Read Amazonka.Translate.Types.AppliedTerminology.AppliedTerminology
instance GHC.Classes.Eq Amazonka.Translate.Types.AppliedTerminology.AppliedTerminology
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.AppliedTerminology.AppliedTerminology
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.AppliedTerminology.AppliedTerminology
instance Control.DeepSeq.NFData Amazonka.Translate.Types.AppliedTerminology.AppliedTerminology


module Amazonka.Translate.Types.TerminologyDataFormat
newtype TerminologyDataFormat
TerminologyDataFormat' :: Text -> TerminologyDataFormat
[fromTerminologyDataFormat] :: TerminologyDataFormat -> Text
pattern TerminologyDataFormat_CSV :: TerminologyDataFormat
pattern TerminologyDataFormat_TMX :: TerminologyDataFormat
instance Amazonka.Data.XML.ToXML Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Amazonka.Data.XML.FromXML Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Amazonka.Data.Headers.ToHeader Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Amazonka.Data.Log.ToLog Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Amazonka.Data.ByteString.ToByteString Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Amazonka.Data.Text.ToText Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Amazonka.Data.Text.FromText Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Control.DeepSeq.NFData Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance GHC.Generics.Generic Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance GHC.Classes.Ord Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance GHC.Classes.Eq Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance GHC.Read.Read Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat
instance GHC.Show.Show Amazonka.Translate.Types.TerminologyDataFormat.TerminologyDataFormat


module Amazonka.Translate.Types.TerminologyData

-- | The data associated with the custom terminology.
--   
--   <i>See:</i> <a>newTerminologyData</a> smart constructor.
data TerminologyData
TerminologyData' :: Sensitive Base64 -> TerminologyDataFormat -> TerminologyData

-- | The file containing the custom terminology data. Your version of the
--   AWS SDK performs a Base64-encoding on this field before sending a
--   request to the AWS service. Users of the SDK should not perform
--   Base64-encoding themselves.
[$sel:file:TerminologyData'] :: TerminologyData -> Sensitive Base64

-- | The data format of the custom terminology. Either CSV or TMX.
[$sel:format:TerminologyData'] :: TerminologyData -> TerminologyDataFormat

-- | Create a value of <a>TerminologyData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:file:TerminologyData'</a>, <a>terminologyData_file</a> - The
--   file containing the custom terminology data. Your version of the AWS
--   SDK performs a Base64-encoding on this field before sending a request
--   to the AWS service. Users of the SDK should not perform
--   Base64-encoding themselves.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:format:TerminologyData'</a>, <a>terminologyData_format</a> -
--   The data format of the custom terminology. Either CSV or TMX.
newTerminologyData :: ByteString -> TerminologyDataFormat -> TerminologyData

-- | The file containing the custom terminology data. Your version of the
--   AWS SDK performs a Base64-encoding on this field before sending a
--   request to the AWS service. Users of the SDK should not perform
--   Base64-encoding themselves.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
terminologyData_file :: Lens' TerminologyData ByteString

-- | The data format of the custom terminology. Either CSV or TMX.
terminologyData_format :: Lens' TerminologyData TerminologyDataFormat
instance GHC.Generics.Generic Amazonka.Translate.Types.TerminologyData.TerminologyData
instance GHC.Show.Show Amazonka.Translate.Types.TerminologyData.TerminologyData
instance GHC.Classes.Eq Amazonka.Translate.Types.TerminologyData.TerminologyData
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.TerminologyData.TerminologyData
instance Control.DeepSeq.NFData Amazonka.Translate.Types.TerminologyData.TerminologyData
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.TerminologyData.TerminologyData


module Amazonka.Translate.Types.TerminologyDataLocation

-- | The location of the custom terminology data.
--   
--   <i>See:</i> <a>newTerminologyDataLocation</a> smart constructor.
data TerminologyDataLocation
TerminologyDataLocation' :: Text -> Text -> TerminologyDataLocation

-- | The repository type for the custom terminology data.
[$sel:repositoryType:TerminologyDataLocation'] :: TerminologyDataLocation -> Text

-- | The location of the custom terminology data.
[$sel:location:TerminologyDataLocation'] :: TerminologyDataLocation -> Text

-- | Create a value of <a>TerminologyDataLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryType:TerminologyDataLocation'</a>,
--   <a>terminologyDataLocation_repositoryType</a> - The repository type
--   for the custom terminology data.
--   
--   <a>$sel:location:TerminologyDataLocation'</a>,
--   <a>terminologyDataLocation_location</a> - The location of the custom
--   terminology data.
newTerminologyDataLocation :: Text -> Text -> TerminologyDataLocation

-- | The repository type for the custom terminology data.
terminologyDataLocation_repositoryType :: Lens' TerminologyDataLocation Text

-- | The location of the custom terminology data.
terminologyDataLocation_location :: Lens' TerminologyDataLocation Text
instance GHC.Generics.Generic Amazonka.Translate.Types.TerminologyDataLocation.TerminologyDataLocation
instance GHC.Show.Show Amazonka.Translate.Types.TerminologyDataLocation.TerminologyDataLocation
instance GHC.Read.Read Amazonka.Translate.Types.TerminologyDataLocation.TerminologyDataLocation
instance GHC.Classes.Eq Amazonka.Translate.Types.TerminologyDataLocation.TerminologyDataLocation
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.TerminologyDataLocation.TerminologyDataLocation
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.TerminologyDataLocation.TerminologyDataLocation
instance Control.DeepSeq.NFData Amazonka.Translate.Types.TerminologyDataLocation.TerminologyDataLocation


module Amazonka.Translate.Types.TerminologyProperties

-- | The properties of the custom terminology.
--   
--   <i>See:</i> <a>newTerminologyProperties</a> smart constructor.
data TerminologyProperties
TerminologyProperties' :: Maybe Int -> Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe EncryptionKey -> Maybe Text -> TerminologyProperties

-- | The size of the file used when importing a custom terminology.
[$sel:sizeBytes:TerminologyProperties'] :: TerminologyProperties -> Maybe Int

-- | The time at which the custom terminology was last update, based on the
--   timestamp.
[$sel:lastUpdatedAt:TerminologyProperties'] :: TerminologyProperties -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the custom terminology.
[$sel:arn:TerminologyProperties'] :: TerminologyProperties -> Maybe Text

-- | The language codes for the target languages available with the custom
--   terminology file. All possible target languages are returned in array.
[$sel:targetLanguageCodes:TerminologyProperties'] :: TerminologyProperties -> Maybe [Text]

-- | The time at which the custom terminology was created, based on the
--   timestamp.
[$sel:createdAt:TerminologyProperties'] :: TerminologyProperties -> Maybe POSIX

-- | The name of the custom terminology.
[$sel:name:TerminologyProperties'] :: TerminologyProperties -> Maybe Text

-- | The language code for the source text of the translation request for
--   which the custom terminology is being used.
[$sel:sourceLanguageCode:TerminologyProperties'] :: TerminologyProperties -> Maybe Text

-- | The number of terms included in the custom terminology.
[$sel:termCount:TerminologyProperties'] :: TerminologyProperties -> Maybe Int

-- | The encryption key for the custom terminology.
[$sel:encryptionKey:TerminologyProperties'] :: TerminologyProperties -> Maybe EncryptionKey

-- | The description of the custom terminology properties.
[$sel:description:TerminologyProperties'] :: TerminologyProperties -> Maybe Text

-- | Create a value of <a>TerminologyProperties</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sizeBytes:TerminologyProperties'</a>,
--   <a>terminologyProperties_sizeBytes</a> - The size of the file used
--   when importing a custom terminology.
--   
--   <a>$sel:lastUpdatedAt:TerminologyProperties'</a>,
--   <a>terminologyProperties_lastUpdatedAt</a> - The time at which the
--   custom terminology was last update, based on the timestamp.
--   
--   <a>$sel:arn:TerminologyProperties'</a>,
--   <a>terminologyProperties_arn</a> - The Amazon Resource Name (ARN) of
--   the custom terminology.
--   
--   <a>$sel:targetLanguageCodes:TerminologyProperties'</a>,
--   <a>terminologyProperties_targetLanguageCodes</a> - The language codes
--   for the target languages available with the custom terminology file.
--   All possible target languages are returned in array.
--   
--   <a>$sel:createdAt:TerminologyProperties'</a>,
--   <a>terminologyProperties_createdAt</a> - The time at which the custom
--   terminology was created, based on the timestamp.
--   
--   <a>$sel:name:TerminologyProperties'</a>,
--   <a>terminologyProperties_name</a> - The name of the custom
--   terminology.
--   
--   <a>$sel:sourceLanguageCode:TerminologyProperties'</a>,
--   <a>terminologyProperties_sourceLanguageCode</a> - The language code
--   for the source text of the translation request for which the custom
--   terminology is being used.
--   
--   <a>$sel:termCount:TerminologyProperties'</a>,
--   <a>terminologyProperties_termCount</a> - The number of terms included
--   in the custom terminology.
--   
--   <a>$sel:encryptionKey:TerminologyProperties'</a>,
--   <a>terminologyProperties_encryptionKey</a> - The encryption key for
--   the custom terminology.
--   
--   <a>$sel:description:TerminologyProperties'</a>,
--   <a>terminologyProperties_description</a> - The description of the
--   custom terminology properties.
newTerminologyProperties :: TerminologyProperties

-- | The size of the file used when importing a custom terminology.
terminologyProperties_sizeBytes :: Lens' TerminologyProperties (Maybe Int)

-- | The time at which the custom terminology was last update, based on the
--   timestamp.
terminologyProperties_lastUpdatedAt :: Lens' TerminologyProperties (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the custom terminology.
terminologyProperties_arn :: Lens' TerminologyProperties (Maybe Text)

-- | The language codes for the target languages available with the custom
--   terminology file. All possible target languages are returned in array.
terminologyProperties_targetLanguageCodes :: Lens' TerminologyProperties (Maybe [Text])

-- | The time at which the custom terminology was created, based on the
--   timestamp.
terminologyProperties_createdAt :: Lens' TerminologyProperties (Maybe UTCTime)

-- | The name of the custom terminology.
terminologyProperties_name :: Lens' TerminologyProperties (Maybe Text)

-- | The language code for the source text of the translation request for
--   which the custom terminology is being used.
terminologyProperties_sourceLanguageCode :: Lens' TerminologyProperties (Maybe Text)

-- | The number of terms included in the custom terminology.
terminologyProperties_termCount :: Lens' TerminologyProperties (Maybe Int)

-- | The encryption key for the custom terminology.
terminologyProperties_encryptionKey :: Lens' TerminologyProperties (Maybe EncryptionKey)

-- | The description of the custom terminology properties.
terminologyProperties_description :: Lens' TerminologyProperties (Maybe Text)
instance GHC.Generics.Generic Amazonka.Translate.Types.TerminologyProperties.TerminologyProperties
instance GHC.Show.Show Amazonka.Translate.Types.TerminologyProperties.TerminologyProperties
instance GHC.Read.Read Amazonka.Translate.Types.TerminologyProperties.TerminologyProperties
instance GHC.Classes.Eq Amazonka.Translate.Types.TerminologyProperties.TerminologyProperties
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.TerminologyProperties.TerminologyProperties
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.TerminologyProperties.TerminologyProperties
instance Control.DeepSeq.NFData Amazonka.Translate.Types.TerminologyProperties.TerminologyProperties


module Amazonka.Translate.Types.TextTranslationJobFilter

-- | Provides information for filtering a list of translation jobs. For
--   more information, see ListTextTranslationJobs.
--   
--   <i>See:</i> <a>newTextTranslationJobFilter</a> smart constructor.
data TextTranslationJobFilter
TextTranslationJobFilter' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe JobStatus -> TextTranslationJobFilter

-- | Filters the list of jobs based on the time that the job was submitted
--   for processing and returns only the jobs submitted before the
--   specified time. Jobs are returned in ascending order, oldest to
--   newest.
[$sel:submittedBeforeTime:TextTranslationJobFilter'] :: TextTranslationJobFilter -> Maybe POSIX

-- | Filters the list of jobs based on the time that the job was submitted
--   for processing and returns only the jobs submitted after the specified
--   time. Jobs are returned in descending order, newest to oldest.
[$sel:submittedAfterTime:TextTranslationJobFilter'] :: TextTranslationJobFilter -> Maybe POSIX

-- | Filters the list of jobs by name.
[$sel:jobName:TextTranslationJobFilter'] :: TextTranslationJobFilter -> Maybe Text

-- | Filters the list of jobs based by job status.
[$sel:jobStatus:TextTranslationJobFilter'] :: TextTranslationJobFilter -> Maybe JobStatus

-- | Create a value of <a>TextTranslationJobFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:submittedBeforeTime:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_submittedBeforeTime</a> - Filters the list
--   of jobs based on the time that the job was submitted for processing
--   and returns only the jobs submitted before the specified time. Jobs
--   are returned in ascending order, oldest to newest.
--   
--   <a>$sel:submittedAfterTime:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_submittedAfterTime</a> - Filters the list
--   of jobs based on the time that the job was submitted for processing
--   and returns only the jobs submitted after the specified time. Jobs are
--   returned in descending order, newest to oldest.
--   
--   <a>$sel:jobName:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_jobName</a> - Filters the list of jobs by
--   name.
--   
--   <a>$sel:jobStatus:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_jobStatus</a> - Filters the list of jobs
--   based by job status.
newTextTranslationJobFilter :: TextTranslationJobFilter

-- | Filters the list of jobs based on the time that the job was submitted
--   for processing and returns only the jobs submitted before the
--   specified time. Jobs are returned in ascending order, oldest to
--   newest.
textTranslationJobFilter_submittedBeforeTime :: Lens' TextTranslationJobFilter (Maybe UTCTime)

-- | Filters the list of jobs based on the time that the job was submitted
--   for processing and returns only the jobs submitted after the specified
--   time. Jobs are returned in descending order, newest to oldest.
textTranslationJobFilter_submittedAfterTime :: Lens' TextTranslationJobFilter (Maybe UTCTime)

-- | Filters the list of jobs by name.
textTranslationJobFilter_jobName :: Lens' TextTranslationJobFilter (Maybe Text)

-- | Filters the list of jobs based by job status.
textTranslationJobFilter_jobStatus :: Lens' TextTranslationJobFilter (Maybe JobStatus)
instance GHC.Generics.Generic Amazonka.Translate.Types.TextTranslationJobFilter.TextTranslationJobFilter
instance GHC.Show.Show Amazonka.Translate.Types.TextTranslationJobFilter.TextTranslationJobFilter
instance GHC.Read.Read Amazonka.Translate.Types.TextTranslationJobFilter.TextTranslationJobFilter
instance GHC.Classes.Eq Amazonka.Translate.Types.TextTranslationJobFilter.TextTranslationJobFilter
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.TextTranslationJobFilter.TextTranslationJobFilter
instance Control.DeepSeq.NFData Amazonka.Translate.Types.TextTranslationJobFilter.TextTranslationJobFilter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.Types.TextTranslationJobFilter.TextTranslationJobFilter


module Amazonka.Translate.Types.TextTranslationJobProperties

-- | Provides information about a translation job.
--   
--   <i>See:</i> <a>newTextTranslationJobProperties</a> smart constructor.
data TextTranslationJobProperties
TextTranslationJobProperties' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe POSIX -> Maybe InputDataConfig -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe OutputDataConfig -> Maybe JobDetails -> Maybe Text -> Maybe JobStatus -> Maybe Text -> TextTranslationJobProperties

-- | The ID of the translation job.
[$sel:jobId:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe Text

-- | The language code of the language of the target text. The language
--   must be a language supported by Amazon Translate.
[$sel:targetLanguageCodes:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe (NonEmpty Text)

-- | The user-defined name of the translation job.
[$sel:jobName:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe Text

-- | The time at which the translation job was submitted.
[$sel:submittedTime:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe POSIX

-- | The input configuration properties that were specified when the job
--   was requested.
[$sel:inputDataConfig:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe InputDataConfig

-- | A list containing the names of the parallel data resources applied to
--   the translation job.
[$sel:parallelDataNames:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe [Text]

-- | A list containing the names of the terminologies applied to a
--   translation job. Only one terminology can be applied per
--   StartTextTranslationJob request at this time.
[$sel:terminologyNames:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe [Text]

-- | The language code of the language of the source text. The language
--   must be a language supported by Amazon Translate.
[$sel:sourceLanguageCode:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe Text

-- | The time at which the translation job ended.
[$sel:endTime:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe POSIX

-- | The output configuration properties that were specified when the job
--   was requested.
[$sel:outputDataConfig:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe OutputDataConfig

-- | The number of documents successfully and unsuccessfully processed
--   during the translation job.
[$sel:jobDetails:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe JobDetails

-- | The Amazon Resource Name (ARN) of an AWS Identity Access and
--   Management (IAM) role that granted Amazon Translate read access to the
--   job's input data.
[$sel:dataAccessRoleArn:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe Text

-- | The status of the translation job.
[$sel:jobStatus:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe JobStatus

-- | An explanation of any errors that may have occured during the
--   translation job.
[$sel:message:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe Text

-- | Create a value of <a>TextTranslationJobProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobId</a> - The ID of the translation
--   job.
--   
--   <a>$sel:targetLanguageCodes:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_targetLanguageCodes</a> - The language
--   code of the language of the target text. The language must be a
--   language supported by Amazon Translate.
--   
--   <a>$sel:jobName:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobName</a> - The user-defined name of
--   the translation job.
--   
--   <a>$sel:submittedTime:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_submittedTime</a> - The time at which
--   the translation job was submitted.
--   
--   <a>$sel:inputDataConfig:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_inputDataConfig</a> - The input
--   configuration properties that were specified when the job was
--   requested.
--   
--   <a>$sel:parallelDataNames:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_parallelDataNames</a> - A list
--   containing the names of the parallel data resources applied to the
--   translation job.
--   
--   <a>$sel:terminologyNames:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_terminologyNames</a> - A list
--   containing the names of the terminologies applied to a translation
--   job. Only one terminology can be applied per StartTextTranslationJob
--   request at this time.
--   
--   <a>$sel:sourceLanguageCode:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_sourceLanguageCode</a> - The language
--   code of the language of the source text. The language must be a
--   language supported by Amazon Translate.
--   
--   <a>$sel:endTime:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_endTime</a> - The time at which the
--   translation job ended.
--   
--   <a>$sel:outputDataConfig:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_outputDataConfig</a> - The output
--   configuration properties that were specified when the job was
--   requested.
--   
--   <a>$sel:jobDetails:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobDetails</a> - The number of
--   documents successfully and unsuccessfully processed during the
--   translation job.
--   
--   <a>$sel:dataAccessRoleArn:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_dataAccessRoleArn</a> - The Amazon
--   Resource Name (ARN) of an AWS Identity Access and Management (IAM)
--   role that granted Amazon Translate read access to the job's input
--   data.
--   
--   <a>$sel:jobStatus:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobStatus</a> - The status of the
--   translation job.
--   
--   <a>$sel:message:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_message</a> - An explanation of any
--   errors that may have occured during the translation job.
newTextTranslationJobProperties :: TextTranslationJobProperties

-- | The ID of the translation job.
textTranslationJobProperties_jobId :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The language code of the language of the target text. The language
--   must be a language supported by Amazon Translate.
textTranslationJobProperties_targetLanguageCodes :: Lens' TextTranslationJobProperties (Maybe (NonEmpty Text))

-- | The user-defined name of the translation job.
textTranslationJobProperties_jobName :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The time at which the translation job was submitted.
textTranslationJobProperties_submittedTime :: Lens' TextTranslationJobProperties (Maybe UTCTime)

-- | The input configuration properties that were specified when the job
--   was requested.
textTranslationJobProperties_inputDataConfig :: Lens' TextTranslationJobProperties (Maybe InputDataConfig)

-- | A list containing the names of the parallel data resources applied to
--   the translation job.
textTranslationJobProperties_parallelDataNames :: Lens' TextTranslationJobProperties (Maybe [Text])

-- | A list containing the names of the terminologies applied to a
--   translation job. Only one terminology can be applied per
--   StartTextTranslationJob request at this time.
textTranslationJobProperties_terminologyNames :: Lens' TextTranslationJobProperties (Maybe [Text])

-- | The language code of the language of the source text. The language
--   must be a language supported by Amazon Translate.
textTranslationJobProperties_sourceLanguageCode :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The time at which the translation job ended.
textTranslationJobProperties_endTime :: Lens' TextTranslationJobProperties (Maybe UTCTime)

-- | The output configuration properties that were specified when the job
--   was requested.
textTranslationJobProperties_outputDataConfig :: Lens' TextTranslationJobProperties (Maybe OutputDataConfig)

-- | The number of documents successfully and unsuccessfully processed
--   during the translation job.
textTranslationJobProperties_jobDetails :: Lens' TextTranslationJobProperties (Maybe JobDetails)

-- | The Amazon Resource Name (ARN) of an AWS Identity Access and
--   Management (IAM) role that granted Amazon Translate read access to the
--   job's input data.
textTranslationJobProperties_dataAccessRoleArn :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The status of the translation job.
textTranslationJobProperties_jobStatus :: Lens' TextTranslationJobProperties (Maybe JobStatus)

-- | An explanation of any errors that may have occured during the
--   translation job.
textTranslationJobProperties_message :: Lens' TextTranslationJobProperties (Maybe Text)
instance GHC.Generics.Generic Amazonka.Translate.Types.TextTranslationJobProperties.TextTranslationJobProperties
instance GHC.Show.Show Amazonka.Translate.Types.TextTranslationJobProperties.TextTranslationJobProperties
instance GHC.Read.Read Amazonka.Translate.Types.TextTranslationJobProperties.TextTranslationJobProperties
instance GHC.Classes.Eq Amazonka.Translate.Types.TextTranslationJobProperties.TextTranslationJobProperties
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.Translate.Types.TextTranslationJobProperties.TextTranslationJobProperties
instance Data.Hashable.Class.Hashable Amazonka.Translate.Types.TextTranslationJobProperties.TextTranslationJobProperties
instance Control.DeepSeq.NFData Amazonka.Translate.Types.TextTranslationJobProperties.TextTranslationJobProperties


module Amazonka.Translate.Types

-- | API version <tt>2017-07-01</tt> of the Amazon Translate SDK
--   configuration.
defaultService :: Service

-- | The request that you made is invalid. Check your request to determine
--   why it's invalid and then retry the request.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Translate does not support translation from the language of the
--   source text into the requested target language. For more information,
--   see how-to-error-msg.
_UnsupportedLanguagePairException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The confidence that Amazon Comprehend accurately detected the source
--   language is low. If a low confidence level is acceptable for your
--   application, you can use the language in the exception to call Amazon
--   Translate again. For more information, see the
--   <a>DetectDominantLanguage</a> operation in the <i>Amazon Comprehend
--   Developer Guide</i>.
_DetectedLanguageLowConfidenceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was a conflict processing the request. Try your request again.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value of the parameter is invalid. Review the value of the
--   parameter you are using to correct it, and then retry your operation.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have made too many requests within a short period of time. Wait
--   for a short time and then try your request again.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Another modification is being made. That modification must complete
--   before you can make your change.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal server error occurred. Retry your request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Translate service is temporarily unavailable. Please wait a
--   bit and then retry your request.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The filter specified for the operation is invalid. Specify a different
--   filter.
_InvalidFilterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource you are looking for has not been found. Review the
--   resource you're looking for and see if a different resource will
--   accomplish your needs before retrying the revised request.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The size of the text you submitted exceeds the size limit. Reduce the
--   size of the text or use a smaller document and then retry your
--   request.
_TextSizeLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified limit has been exceeded. Review your request and retry
--   it with a quantity below the stated limit.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype EncryptionKeyType
EncryptionKeyType' :: Text -> EncryptionKeyType
[fromEncryptionKeyType] :: EncryptionKeyType -> Text
pattern EncryptionKeyType_KMS :: EncryptionKeyType
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_COMPLETED :: JobStatus
pattern JobStatus_COMPLETED_WITH_ERROR :: JobStatus
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_IN_PROGRESS :: JobStatus
pattern JobStatus_STOPPED :: JobStatus
pattern JobStatus_STOP_REQUESTED :: JobStatus
pattern JobStatus_SUBMITTED :: JobStatus
newtype MergeStrategy
MergeStrategy' :: Text -> MergeStrategy
[fromMergeStrategy] :: MergeStrategy -> Text
pattern MergeStrategy_OVERWRITE :: MergeStrategy
newtype ParallelDataFormat
ParallelDataFormat' :: Text -> ParallelDataFormat
[fromParallelDataFormat] :: ParallelDataFormat -> Text
pattern ParallelDataFormat_CSV :: ParallelDataFormat
pattern ParallelDataFormat_TMX :: ParallelDataFormat
pattern ParallelDataFormat_TSV :: ParallelDataFormat
newtype ParallelDataStatus
ParallelDataStatus' :: Text -> ParallelDataStatus
[fromParallelDataStatus] :: ParallelDataStatus -> Text
pattern ParallelDataStatus_ACTIVE :: ParallelDataStatus
pattern ParallelDataStatus_CREATING :: ParallelDataStatus
pattern ParallelDataStatus_DELETING :: ParallelDataStatus
pattern ParallelDataStatus_FAILED :: ParallelDataStatus
pattern ParallelDataStatus_UPDATING :: ParallelDataStatus
newtype TerminologyDataFormat
TerminologyDataFormat' :: Text -> TerminologyDataFormat
[fromTerminologyDataFormat] :: TerminologyDataFormat -> Text
pattern TerminologyDataFormat_CSV :: TerminologyDataFormat
pattern TerminologyDataFormat_TMX :: TerminologyDataFormat

-- | The custom terminology applied to the input text by Amazon Translate
--   for the translated text response. This is optional in the response and
--   will only be present if you specified terminology input in the
--   request. Currently, only one terminology can be applied per
--   TranslateText request.
--   
--   <i>See:</i> <a>newAppliedTerminology</a> smart constructor.
data AppliedTerminology
AppliedTerminology' :: Maybe [Term] -> Maybe Text -> AppliedTerminology

-- | The specific terms of the custom terminology applied to the input text
--   by Amazon Translate for the translated text response. A maximum of 250
--   terms will be returned, and the specific terms applied will be the
--   first 250 terms in the source text.
[$sel:terms:AppliedTerminology'] :: AppliedTerminology -> Maybe [Term]

-- | The name of the custom terminology applied to the input text by Amazon
--   Translate for the translated text response.
[$sel:name:AppliedTerminology'] :: AppliedTerminology -> Maybe Text

-- | Create a value of <a>AppliedTerminology</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:terms:AppliedTerminology'</a>, <a>appliedTerminology_terms</a>
--   - The specific terms of the custom terminology applied to the input
--   text by Amazon Translate for the translated text response. A maximum
--   of 250 terms will be returned, and the specific terms applied will be
--   the first 250 terms in the source text.
--   
--   <a>$sel:name:AppliedTerminology'</a>, <a>appliedTerminology_name</a> -
--   The name of the custom terminology applied to the input text by Amazon
--   Translate for the translated text response.
newAppliedTerminology :: AppliedTerminology

-- | The specific terms of the custom terminology applied to the input text
--   by Amazon Translate for the translated text response. A maximum of 250
--   terms will be returned, and the specific terms applied will be the
--   first 250 terms in the source text.
appliedTerminology_terms :: Lens' AppliedTerminology (Maybe [Term])

-- | The name of the custom terminology applied to the input text by Amazon
--   Translate for the translated text response.
appliedTerminology_name :: Lens' AppliedTerminology (Maybe Text)

-- | The encryption key used to encrypt this object.
--   
--   <i>See:</i> <a>newEncryptionKey</a> smart constructor.
data EncryptionKey
EncryptionKey' :: EncryptionKeyType -> Text -> EncryptionKey

-- | The type of encryption key used by Amazon Translate to encrypt custom
--   terminologies.
[$sel:type':EncryptionKey'] :: EncryptionKey -> EncryptionKeyType

-- | The Amazon Resource Name (ARN) of the encryption key being used to
--   encrypt the custom terminology.
[$sel:id:EncryptionKey'] :: EncryptionKey -> Text

-- | Create a value of <a>EncryptionKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':EncryptionKey'</a>, <a>encryptionKey_type</a> - The type
--   of encryption key used by Amazon Translate to encrypt custom
--   terminologies.
--   
--   <a>$sel:id:EncryptionKey'</a>, <a>encryptionKey_id</a> - The Amazon
--   Resource Name (ARN) of the encryption key being used to encrypt the
--   custom terminology.
newEncryptionKey :: EncryptionKeyType -> Text -> EncryptionKey

-- | The type of encryption key used by Amazon Translate to encrypt custom
--   terminologies.
encryptionKey_type :: Lens' EncryptionKey EncryptionKeyType

-- | The Amazon Resource Name (ARN) of the encryption key being used to
--   encrypt the custom terminology.
encryptionKey_id :: Lens' EncryptionKey Text

-- | The input configuration properties for requesting a batch translation
--   job.
--   
--   <i>See:</i> <a>newInputDataConfig</a> smart constructor.
data InputDataConfig
InputDataConfig' :: Text -> Text -> InputDataConfig

-- | The URI of the AWS S3 folder that contains the input file. The folder
--   must be in the same Region as the API endpoint you are calling.
[$sel:s3Uri:InputDataConfig'] :: InputDataConfig -> Text

-- | Describes the format of the data that you submit to Amazon Translate
--   as input. You can specify one of the following multipurpose internet
--   mail extension (MIME) types:
--   
--   <ul>
--   <li><tt>text/html</tt>: The input data consists of one or more HTML
--   files. Amazon Translate translates only the text that resides in the
--   <tt>html</tt> element in each file.</li>
--   <li><tt>text/plain</tt>: The input data consists of one or more
--   unformatted text files. Amazon Translate translates every character in
--   this type of input.</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.wordprocessingml.document</tt>:
--   The input data consists of one or more Word documents (.docx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.presentationml.presentation</tt>:
--   The input data consists of one or more PowerPoint Presentation files
--   (.pptx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</tt>:
--   The input data consists of one or more Excel Workbook files
--   (.xlsx).</li>
--   </ul>
--   
--   If you structure your input data as HTML, ensure that you set this
--   parameter to <tt>text/html</tt>. By doing so, you cut costs by
--   limiting the translation to the contents of the <tt>html</tt> element
--   in each file. Otherwise, if you set this parameter to
--   <tt>text/plain</tt>, your costs will cover the translation of every
--   character.
[$sel:contentType:InputDataConfig'] :: InputDataConfig -> Text

-- | Create a value of <a>InputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:InputDataConfig'</a>, <a>inputDataConfig_s3Uri</a> - The
--   URI of the AWS S3 folder that contains the input file. The folder must
--   be in the same Region as the API endpoint you are calling.
--   
--   <a>$sel:contentType:InputDataConfig'</a>,
--   <a>inputDataConfig_contentType</a> - Describes the format of the data
--   that you submit to Amazon Translate as input. You can specify one of
--   the following multipurpose internet mail extension (MIME) types:
--   
--   <ul>
--   <li><tt>text/html</tt>: The input data consists of one or more HTML
--   files. Amazon Translate translates only the text that resides in the
--   <tt>html</tt> element in each file.</li>
--   <li><tt>text/plain</tt>: The input data consists of one or more
--   unformatted text files. Amazon Translate translates every character in
--   this type of input.</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.wordprocessingml.document</tt>:
--   The input data consists of one or more Word documents (.docx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.presentationml.presentation</tt>:
--   The input data consists of one or more PowerPoint Presentation files
--   (.pptx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</tt>:
--   The input data consists of one or more Excel Workbook files
--   (.xlsx).</li>
--   </ul>
--   
--   If you structure your input data as HTML, ensure that you set this
--   parameter to <tt>text/html</tt>. By doing so, you cut costs by
--   limiting the translation to the contents of the <tt>html</tt> element
--   in each file. Otherwise, if you set this parameter to
--   <tt>text/plain</tt>, your costs will cover the translation of every
--   character.
newInputDataConfig :: Text -> Text -> InputDataConfig

-- | The URI of the AWS S3 folder that contains the input file. The folder
--   must be in the same Region as the API endpoint you are calling.
inputDataConfig_s3Uri :: Lens' InputDataConfig Text

-- | Describes the format of the data that you submit to Amazon Translate
--   as input. You can specify one of the following multipurpose internet
--   mail extension (MIME) types:
--   
--   <ul>
--   <li><tt>text/html</tt>: The input data consists of one or more HTML
--   files. Amazon Translate translates only the text that resides in the
--   <tt>html</tt> element in each file.</li>
--   <li><tt>text/plain</tt>: The input data consists of one or more
--   unformatted text files. Amazon Translate translates every character in
--   this type of input.</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.wordprocessingml.document</tt>:
--   The input data consists of one or more Word documents (.docx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.presentationml.presentation</tt>:
--   The input data consists of one or more PowerPoint Presentation files
--   (.pptx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</tt>:
--   The input data consists of one or more Excel Workbook files
--   (.xlsx).</li>
--   </ul>
--   
--   If you structure your input data as HTML, ensure that you set this
--   parameter to <tt>text/html</tt>. By doing so, you cut costs by
--   limiting the translation to the contents of the <tt>html</tt> element
--   in each file. Otherwise, if you set this parameter to
--   <tt>text/plain</tt>, your costs will cover the translation of every
--   character.
inputDataConfig_contentType :: Lens' InputDataConfig Text

-- | The number of documents successfully and unsuccessfully processed
--   during a translation job.
--   
--   <i>See:</i> <a>newJobDetails</a> smart constructor.
data JobDetails
JobDetails' :: Maybe Int -> Maybe Int -> Maybe Int -> JobDetails

-- | The number of documents successfully processed during a translation
--   job.
[$sel:translatedDocumentsCount:JobDetails'] :: JobDetails -> Maybe Int

-- | The number of documents that could not be processed during a
--   translation job.
[$sel:documentsWithErrorsCount:JobDetails'] :: JobDetails -> Maybe Int

-- | The number of documents used as input in a translation job.
[$sel:inputDocumentsCount:JobDetails'] :: JobDetails -> Maybe Int

-- | Create a value of <a>JobDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:translatedDocumentsCount:JobDetails'</a>,
--   <a>jobDetails_translatedDocumentsCount</a> - The number of documents
--   successfully processed during a translation job.
--   
--   <a>$sel:documentsWithErrorsCount:JobDetails'</a>,
--   <a>jobDetails_documentsWithErrorsCount</a> - The number of documents
--   that could not be processed during a translation job.
--   
--   <a>$sel:inputDocumentsCount:JobDetails'</a>,
--   <a>jobDetails_inputDocumentsCount</a> - The number of documents used
--   as input in a translation job.
newJobDetails :: JobDetails

-- | The number of documents successfully processed during a translation
--   job.
jobDetails_translatedDocumentsCount :: Lens' JobDetails (Maybe Int)

-- | The number of documents that could not be processed during a
--   translation job.
jobDetails_documentsWithErrorsCount :: Lens' JobDetails (Maybe Int)

-- | The number of documents used as input in a translation job.
jobDetails_inputDocumentsCount :: Lens' JobDetails (Maybe Int)

-- | The output configuration properties for a batch translation job.
--   
--   <i>See:</i> <a>newOutputDataConfig</a> smart constructor.
data OutputDataConfig
OutputDataConfig' :: Text -> OutputDataConfig

-- | The URI of the S3 folder that contains a translation job's output
--   file. The folder must be in the same Region as the API endpoint that
--   you are calling.
[$sel:s3Uri:OutputDataConfig'] :: OutputDataConfig -> Text

-- | Create a value of <a>OutputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:OutputDataConfig'</a>, <a>outputDataConfig_s3Uri</a> -
--   The URI of the S3 folder that contains a translation job's output
--   file. The folder must be in the same Region as the API endpoint that
--   you are calling.
newOutputDataConfig :: Text -> OutputDataConfig

-- | The URI of the S3 folder that contains a translation job's output
--   file. The folder must be in the same Region as the API endpoint that
--   you are calling.
outputDataConfig_s3Uri :: Lens' OutputDataConfig Text

-- | Specifies the format and S3 location of the parallel data input file.
--   
--   <i>See:</i> <a>newParallelDataConfig</a> smart constructor.
data ParallelDataConfig
ParallelDataConfig' :: Text -> ParallelDataFormat -> ParallelDataConfig

-- | The URI of the Amazon S3 folder that contains the parallel data input
--   file. The folder must be in the same Region as the API endpoint you
--   are calling.
[$sel:s3Uri:ParallelDataConfig'] :: ParallelDataConfig -> Text

-- | The format of the parallel data input file.
[$sel:format:ParallelDataConfig'] :: ParallelDataConfig -> ParallelDataFormat

-- | Create a value of <a>ParallelDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:ParallelDataConfig'</a>, <a>parallelDataConfig_s3Uri</a>
--   - The URI of the Amazon S3 folder that contains the parallel data
--   input file. The folder must be in the same Region as the API endpoint
--   you are calling.
--   
--   <a>$sel:format:ParallelDataConfig'</a>,
--   <a>parallelDataConfig_format</a> - The format of the parallel data
--   input file.
newParallelDataConfig :: Text -> ParallelDataFormat -> ParallelDataConfig

-- | The URI of the Amazon S3 folder that contains the parallel data input
--   file. The folder must be in the same Region as the API endpoint you
--   are calling.
parallelDataConfig_s3Uri :: Lens' ParallelDataConfig Text

-- | The format of the parallel data input file.
parallelDataConfig_format :: Lens' ParallelDataConfig ParallelDataFormat

-- | The location of the most recent parallel data input file that was
--   successfully imported into Amazon Translate.
--   
--   <i>See:</i> <a>newParallelDataDataLocation</a> smart constructor.
data ParallelDataDataLocation
ParallelDataDataLocation' :: Text -> Text -> ParallelDataDataLocation

-- | Describes the repository that contains the parallel data input file.
[$sel:repositoryType:ParallelDataDataLocation'] :: ParallelDataDataLocation -> Text

-- | The Amazon S3 location of the parallel data input file. The location
--   is returned as a presigned URL to that has a 30 minute expiration.
[$sel:location:ParallelDataDataLocation'] :: ParallelDataDataLocation -> Text

-- | Create a value of <a>ParallelDataDataLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryType:ParallelDataDataLocation'</a>,
--   <a>parallelDataDataLocation_repositoryType</a> - Describes the
--   repository that contains the parallel data input file.
--   
--   <a>$sel:location:ParallelDataDataLocation'</a>,
--   <a>parallelDataDataLocation_location</a> - The Amazon S3 location of
--   the parallel data input file. The location is returned as a presigned
--   URL to that has a 30 minute expiration.
newParallelDataDataLocation :: Text -> Text -> ParallelDataDataLocation

-- | Describes the repository that contains the parallel data input file.
parallelDataDataLocation_repositoryType :: Lens' ParallelDataDataLocation Text

-- | The Amazon S3 location of the parallel data input file. The location
--   is returned as a presigned URL to that has a 30 minute expiration.
parallelDataDataLocation_location :: Lens' ParallelDataDataLocation Text

-- | The properties of a parallel data resource.
--   
--   <i>See:</i> <a>newParallelDataProperties</a> smart constructor.
data ParallelDataProperties
ParallelDataProperties' :: Maybe ParallelDataStatus -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe EncryptionKey -> Maybe ParallelDataStatus -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe ParallelDataConfig -> ParallelDataProperties

-- | The status of the parallel data resource. When the parallel data is
--   ready for you to use, the status is <tt>ACTIVE</tt>.
[$sel:status:ParallelDataProperties'] :: ParallelDataProperties -> Maybe ParallelDataStatus

-- | The time at which the parallel data resource was last updated.
[$sel:lastUpdatedAt:ParallelDataProperties'] :: ParallelDataProperties -> Maybe POSIX

-- | The number of records successfully imported from the parallel data
--   input file.
[$sel:importedRecordCount:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Integer

-- | The Amazon Resource Name (ARN) of the parallel data resource.
[$sel:arn:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Text

-- | The language codes for the target languages available in the parallel
--   data file. All possible target languages are returned as an array.
[$sel:targetLanguageCodes:ParallelDataProperties'] :: ParallelDataProperties -> Maybe [Text]

-- | The time at which the parallel data resource was created.
[$sel:createdAt:ParallelDataProperties'] :: ParallelDataProperties -> Maybe POSIX

-- | The number of records unsuccessfully imported from the parallel data
--   input file.
[$sel:failedRecordCount:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Integer

-- | The number of UTF-8 characters that Amazon Translate imported from the
--   parallel data input file. This number includes only the characters in
--   your translation examples. It does not include characters that are
--   used to format your file. For example, if you provided a Translation
--   Memory Exchange (.tmx) file, this number does not include the tags.
[$sel:importedDataSize:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Integer

-- | The custom name assigned to the parallel data resource.
[$sel:name:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Text

-- | The source language of the translations in the parallel data file.
[$sel:sourceLanguageCode:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Text

-- | The time that the most recent update was attempted.
[$sel:latestUpdateAttemptAt:ParallelDataProperties'] :: ParallelDataProperties -> Maybe POSIX
[$sel:encryptionKey:ParallelDataProperties'] :: ParallelDataProperties -> Maybe EncryptionKey

-- | The status of the most recent update attempt for the parallel data
--   resource.
[$sel:latestUpdateAttemptStatus:ParallelDataProperties'] :: ParallelDataProperties -> Maybe ParallelDataStatus

-- | Additional information from Amazon Translate about the parallel data
--   resource.
[$sel:message:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Text

-- | The description assigned to the parallel data resource.
[$sel:description:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Text

-- | The number of items in the input file that Amazon Translate skipped
--   when you created or updated the parallel data resource. For example,
--   Amazon Translate skips empty records, empty target texts, and empty
--   lines.
[$sel:skippedRecordCount:ParallelDataProperties'] :: ParallelDataProperties -> Maybe Integer

-- | Specifies the format and S3 location of the parallel data input file.
[$sel:parallelDataConfig:ParallelDataProperties'] :: ParallelDataProperties -> Maybe ParallelDataConfig

-- | Create a value of <a>ParallelDataProperties</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_status</a> - The status of the parallel data
--   resource. When the parallel data is ready for you to use, the status
--   is <tt>ACTIVE</tt>.
--   
--   <a>$sel:lastUpdatedAt:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_lastUpdatedAt</a> - The time at which the
--   parallel data resource was last updated.
--   
--   <a>$sel:importedRecordCount:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_importedRecordCount</a> - The number of
--   records successfully imported from the parallel data input file.
--   
--   <a>$sel:arn:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_arn</a> - The Amazon Resource Name (ARN) of
--   the parallel data resource.
--   
--   <a>$sel:targetLanguageCodes:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_targetLanguageCodes</a> - The language codes
--   for the target languages available in the parallel data file. All
--   possible target languages are returned as an array.
--   
--   <a>$sel:createdAt:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_createdAt</a> - The time at which the
--   parallel data resource was created.
--   
--   <a>$sel:failedRecordCount:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_failedRecordCount</a> - The number of
--   records unsuccessfully imported from the parallel data input file.
--   
--   <a>$sel:importedDataSize:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_importedDataSize</a> - The number of UTF-8
--   characters that Amazon Translate imported from the parallel data input
--   file. This number includes only the characters in your translation
--   examples. It does not include characters that are used to format your
--   file. For example, if you provided a Translation Memory Exchange
--   (.tmx) file, this number does not include the tags.
--   
--   <a>$sel:name:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_name</a> - The custom name assigned to the
--   parallel data resource.
--   
--   <a>$sel:sourceLanguageCode:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_sourceLanguageCode</a> - The source language
--   of the translations in the parallel data file.
--   
--   <a>$sel:latestUpdateAttemptAt:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_latestUpdateAttemptAt</a> - The time that
--   the most recent update was attempted.
--   
--   <a>$sel:encryptionKey:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_encryptionKey</a> - Undocumented member.
--   
--   <a>$sel:latestUpdateAttemptStatus:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_latestUpdateAttemptStatus</a> - The status
--   of the most recent update attempt for the parallel data resource.
--   
--   <a>$sel:message:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_message</a> - Additional information from
--   Amazon Translate about the parallel data resource.
--   
--   <a>$sel:description:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_description</a> - The description assigned
--   to the parallel data resource.
--   
--   <a>$sel:skippedRecordCount:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_skippedRecordCount</a> - The number of items
--   in the input file that Amazon Translate skipped when you created or
--   updated the parallel data resource. For example, Amazon Translate
--   skips empty records, empty target texts, and empty lines.
--   
--   <a>$sel:parallelDataConfig:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_parallelDataConfig</a> - Specifies the
--   format and S3 location of the parallel data input file.
newParallelDataProperties :: ParallelDataProperties

-- | The status of the parallel data resource. When the parallel data is
--   ready for you to use, the status is <tt>ACTIVE</tt>.
parallelDataProperties_status :: Lens' ParallelDataProperties (Maybe ParallelDataStatus)

-- | The time at which the parallel data resource was last updated.
parallelDataProperties_lastUpdatedAt :: Lens' ParallelDataProperties (Maybe UTCTime)

-- | The number of records successfully imported from the parallel data
--   input file.
parallelDataProperties_importedRecordCount :: Lens' ParallelDataProperties (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the parallel data resource.
parallelDataProperties_arn :: Lens' ParallelDataProperties (Maybe Text)

-- | The language codes for the target languages available in the parallel
--   data file. All possible target languages are returned as an array.
parallelDataProperties_targetLanguageCodes :: Lens' ParallelDataProperties (Maybe [Text])

-- | The time at which the parallel data resource was created.
parallelDataProperties_createdAt :: Lens' ParallelDataProperties (Maybe UTCTime)

-- | The number of records unsuccessfully imported from the parallel data
--   input file.
parallelDataProperties_failedRecordCount :: Lens' ParallelDataProperties (Maybe Integer)

-- | The number of UTF-8 characters that Amazon Translate imported from the
--   parallel data input file. This number includes only the characters in
--   your translation examples. It does not include characters that are
--   used to format your file. For example, if you provided a Translation
--   Memory Exchange (.tmx) file, this number does not include the tags.
parallelDataProperties_importedDataSize :: Lens' ParallelDataProperties (Maybe Integer)

-- | The custom name assigned to the parallel data resource.
parallelDataProperties_name :: Lens' ParallelDataProperties (Maybe Text)

-- | The source language of the translations in the parallel data file.
parallelDataProperties_sourceLanguageCode :: Lens' ParallelDataProperties (Maybe Text)

-- | The time that the most recent update was attempted.
parallelDataProperties_latestUpdateAttemptAt :: Lens' ParallelDataProperties (Maybe UTCTime)

-- | Undocumented member.
parallelDataProperties_encryptionKey :: Lens' ParallelDataProperties (Maybe EncryptionKey)

-- | The status of the most recent update attempt for the parallel data
--   resource.
parallelDataProperties_latestUpdateAttemptStatus :: Lens' ParallelDataProperties (Maybe ParallelDataStatus)

-- | Additional information from Amazon Translate about the parallel data
--   resource.
parallelDataProperties_message :: Lens' ParallelDataProperties (Maybe Text)

-- | The description assigned to the parallel data resource.
parallelDataProperties_description :: Lens' ParallelDataProperties (Maybe Text)

-- | The number of items in the input file that Amazon Translate skipped
--   when you created or updated the parallel data resource. For example,
--   Amazon Translate skips empty records, empty target texts, and empty
--   lines.
parallelDataProperties_skippedRecordCount :: Lens' ParallelDataProperties (Maybe Integer)

-- | Specifies the format and S3 location of the parallel data input file.
parallelDataProperties_parallelDataConfig :: Lens' ParallelDataProperties (Maybe ParallelDataConfig)

-- | The term being translated by the custom terminology.
--   
--   <i>See:</i> <a>newTerm</a> smart constructor.
data Term
Term' :: Maybe Text -> Maybe Text -> Term

-- | The target text of the term being translated by the custom
--   terminology.
[$sel:targetText:Term'] :: Term -> Maybe Text

-- | The source text of the term being translated by the custom
--   terminology.
[$sel:sourceText:Term'] :: Term -> Maybe Text

-- | Create a value of <a>Term</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetText:Term'</a>, <a>term_targetText</a> - The target text
--   of the term being translated by the custom terminology.
--   
--   <a>$sel:sourceText:Term'</a>, <a>term_sourceText</a> - The source text
--   of the term being translated by the custom terminology.
newTerm :: Term

-- | The target text of the term being translated by the custom
--   terminology.
term_targetText :: Lens' Term (Maybe Text)

-- | The source text of the term being translated by the custom
--   terminology.
term_sourceText :: Lens' Term (Maybe Text)

-- | The data associated with the custom terminology.
--   
--   <i>See:</i> <a>newTerminologyData</a> smart constructor.
data TerminologyData
TerminologyData' :: Sensitive Base64 -> TerminologyDataFormat -> TerminologyData

-- | The file containing the custom terminology data. Your version of the
--   AWS SDK performs a Base64-encoding on this field before sending a
--   request to the AWS service. Users of the SDK should not perform
--   Base64-encoding themselves.
[$sel:file:TerminologyData'] :: TerminologyData -> Sensitive Base64

-- | The data format of the custom terminology. Either CSV or TMX.
[$sel:format:TerminologyData'] :: TerminologyData -> TerminologyDataFormat

-- | Create a value of <a>TerminologyData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:file:TerminologyData'</a>, <a>terminologyData_file</a> - The
--   file containing the custom terminology data. Your version of the AWS
--   SDK performs a Base64-encoding on this field before sending a request
--   to the AWS service. Users of the SDK should not perform
--   Base64-encoding themselves.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:format:TerminologyData'</a>, <a>terminologyData_format</a> -
--   The data format of the custom terminology. Either CSV or TMX.
newTerminologyData :: ByteString -> TerminologyDataFormat -> TerminologyData

-- | The file containing the custom terminology data. Your version of the
--   AWS SDK performs a Base64-encoding on this field before sending a
--   request to the AWS service. Users of the SDK should not perform
--   Base64-encoding themselves.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
terminologyData_file :: Lens' TerminologyData ByteString

-- | The data format of the custom terminology. Either CSV or TMX.
terminologyData_format :: Lens' TerminologyData TerminologyDataFormat

-- | The location of the custom terminology data.
--   
--   <i>See:</i> <a>newTerminologyDataLocation</a> smart constructor.
data TerminologyDataLocation
TerminologyDataLocation' :: Text -> Text -> TerminologyDataLocation

-- | The repository type for the custom terminology data.
[$sel:repositoryType:TerminologyDataLocation'] :: TerminologyDataLocation -> Text

-- | The location of the custom terminology data.
[$sel:location:TerminologyDataLocation'] :: TerminologyDataLocation -> Text

-- | Create a value of <a>TerminologyDataLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryType:TerminologyDataLocation'</a>,
--   <a>terminologyDataLocation_repositoryType</a> - The repository type
--   for the custom terminology data.
--   
--   <a>$sel:location:TerminologyDataLocation'</a>,
--   <a>terminologyDataLocation_location</a> - The location of the custom
--   terminology data.
newTerminologyDataLocation :: Text -> Text -> TerminologyDataLocation

-- | The repository type for the custom terminology data.
terminologyDataLocation_repositoryType :: Lens' TerminologyDataLocation Text

-- | The location of the custom terminology data.
terminologyDataLocation_location :: Lens' TerminologyDataLocation Text

-- | The properties of the custom terminology.
--   
--   <i>See:</i> <a>newTerminologyProperties</a> smart constructor.
data TerminologyProperties
TerminologyProperties' :: Maybe Int -> Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe EncryptionKey -> Maybe Text -> TerminologyProperties

-- | The size of the file used when importing a custom terminology.
[$sel:sizeBytes:TerminologyProperties'] :: TerminologyProperties -> Maybe Int

-- | The time at which the custom terminology was last update, based on the
--   timestamp.
[$sel:lastUpdatedAt:TerminologyProperties'] :: TerminologyProperties -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the custom terminology.
[$sel:arn:TerminologyProperties'] :: TerminologyProperties -> Maybe Text

-- | The language codes for the target languages available with the custom
--   terminology file. All possible target languages are returned in array.
[$sel:targetLanguageCodes:TerminologyProperties'] :: TerminologyProperties -> Maybe [Text]

-- | The time at which the custom terminology was created, based on the
--   timestamp.
[$sel:createdAt:TerminologyProperties'] :: TerminologyProperties -> Maybe POSIX

-- | The name of the custom terminology.
[$sel:name:TerminologyProperties'] :: TerminologyProperties -> Maybe Text

-- | The language code for the source text of the translation request for
--   which the custom terminology is being used.
[$sel:sourceLanguageCode:TerminologyProperties'] :: TerminologyProperties -> Maybe Text

-- | The number of terms included in the custom terminology.
[$sel:termCount:TerminologyProperties'] :: TerminologyProperties -> Maybe Int

-- | The encryption key for the custom terminology.
[$sel:encryptionKey:TerminologyProperties'] :: TerminologyProperties -> Maybe EncryptionKey

-- | The description of the custom terminology properties.
[$sel:description:TerminologyProperties'] :: TerminologyProperties -> Maybe Text

-- | Create a value of <a>TerminologyProperties</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sizeBytes:TerminologyProperties'</a>,
--   <a>terminologyProperties_sizeBytes</a> - The size of the file used
--   when importing a custom terminology.
--   
--   <a>$sel:lastUpdatedAt:TerminologyProperties'</a>,
--   <a>terminologyProperties_lastUpdatedAt</a> - The time at which the
--   custom terminology was last update, based on the timestamp.
--   
--   <a>$sel:arn:TerminologyProperties'</a>,
--   <a>terminologyProperties_arn</a> - The Amazon Resource Name (ARN) of
--   the custom terminology.
--   
--   <a>$sel:targetLanguageCodes:TerminologyProperties'</a>,
--   <a>terminologyProperties_targetLanguageCodes</a> - The language codes
--   for the target languages available with the custom terminology file.
--   All possible target languages are returned in array.
--   
--   <a>$sel:createdAt:TerminologyProperties'</a>,
--   <a>terminologyProperties_createdAt</a> - The time at which the custom
--   terminology was created, based on the timestamp.
--   
--   <a>$sel:name:TerminologyProperties'</a>,
--   <a>terminologyProperties_name</a> - The name of the custom
--   terminology.
--   
--   <a>$sel:sourceLanguageCode:TerminologyProperties'</a>,
--   <a>terminologyProperties_sourceLanguageCode</a> - The language code
--   for the source text of the translation request for which the custom
--   terminology is being used.
--   
--   <a>$sel:termCount:TerminologyProperties'</a>,
--   <a>terminologyProperties_termCount</a> - The number of terms included
--   in the custom terminology.
--   
--   <a>$sel:encryptionKey:TerminologyProperties'</a>,
--   <a>terminologyProperties_encryptionKey</a> - The encryption key for
--   the custom terminology.
--   
--   <a>$sel:description:TerminologyProperties'</a>,
--   <a>terminologyProperties_description</a> - The description of the
--   custom terminology properties.
newTerminologyProperties :: TerminologyProperties

-- | The size of the file used when importing a custom terminology.
terminologyProperties_sizeBytes :: Lens' TerminologyProperties (Maybe Int)

-- | The time at which the custom terminology was last update, based on the
--   timestamp.
terminologyProperties_lastUpdatedAt :: Lens' TerminologyProperties (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the custom terminology.
terminologyProperties_arn :: Lens' TerminologyProperties (Maybe Text)

-- | The language codes for the target languages available with the custom
--   terminology file. All possible target languages are returned in array.
terminologyProperties_targetLanguageCodes :: Lens' TerminologyProperties (Maybe [Text])

-- | The time at which the custom terminology was created, based on the
--   timestamp.
terminologyProperties_createdAt :: Lens' TerminologyProperties (Maybe UTCTime)

-- | The name of the custom terminology.
terminologyProperties_name :: Lens' TerminologyProperties (Maybe Text)

-- | The language code for the source text of the translation request for
--   which the custom terminology is being used.
terminologyProperties_sourceLanguageCode :: Lens' TerminologyProperties (Maybe Text)

-- | The number of terms included in the custom terminology.
terminologyProperties_termCount :: Lens' TerminologyProperties (Maybe Int)

-- | The encryption key for the custom terminology.
terminologyProperties_encryptionKey :: Lens' TerminologyProperties (Maybe EncryptionKey)

-- | The description of the custom terminology properties.
terminologyProperties_description :: Lens' TerminologyProperties (Maybe Text)

-- | Provides information for filtering a list of translation jobs. For
--   more information, see ListTextTranslationJobs.
--   
--   <i>See:</i> <a>newTextTranslationJobFilter</a> smart constructor.
data TextTranslationJobFilter
TextTranslationJobFilter' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe JobStatus -> TextTranslationJobFilter

-- | Filters the list of jobs based on the time that the job was submitted
--   for processing and returns only the jobs submitted before the
--   specified time. Jobs are returned in ascending order, oldest to
--   newest.
[$sel:submittedBeforeTime:TextTranslationJobFilter'] :: TextTranslationJobFilter -> Maybe POSIX

-- | Filters the list of jobs based on the time that the job was submitted
--   for processing and returns only the jobs submitted after the specified
--   time. Jobs are returned in descending order, newest to oldest.
[$sel:submittedAfterTime:TextTranslationJobFilter'] :: TextTranslationJobFilter -> Maybe POSIX

-- | Filters the list of jobs by name.
[$sel:jobName:TextTranslationJobFilter'] :: TextTranslationJobFilter -> Maybe Text

-- | Filters the list of jobs based by job status.
[$sel:jobStatus:TextTranslationJobFilter'] :: TextTranslationJobFilter -> Maybe JobStatus

-- | Create a value of <a>TextTranslationJobFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:submittedBeforeTime:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_submittedBeforeTime</a> - Filters the list
--   of jobs based on the time that the job was submitted for processing
--   and returns only the jobs submitted before the specified time. Jobs
--   are returned in ascending order, oldest to newest.
--   
--   <a>$sel:submittedAfterTime:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_submittedAfterTime</a> - Filters the list
--   of jobs based on the time that the job was submitted for processing
--   and returns only the jobs submitted after the specified time. Jobs are
--   returned in descending order, newest to oldest.
--   
--   <a>$sel:jobName:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_jobName</a> - Filters the list of jobs by
--   name.
--   
--   <a>$sel:jobStatus:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_jobStatus</a> - Filters the list of jobs
--   based by job status.
newTextTranslationJobFilter :: TextTranslationJobFilter

-- | Filters the list of jobs based on the time that the job was submitted
--   for processing and returns only the jobs submitted before the
--   specified time. Jobs are returned in ascending order, oldest to
--   newest.
textTranslationJobFilter_submittedBeforeTime :: Lens' TextTranslationJobFilter (Maybe UTCTime)

-- | Filters the list of jobs based on the time that the job was submitted
--   for processing and returns only the jobs submitted after the specified
--   time. Jobs are returned in descending order, newest to oldest.
textTranslationJobFilter_submittedAfterTime :: Lens' TextTranslationJobFilter (Maybe UTCTime)

-- | Filters the list of jobs by name.
textTranslationJobFilter_jobName :: Lens' TextTranslationJobFilter (Maybe Text)

-- | Filters the list of jobs based by job status.
textTranslationJobFilter_jobStatus :: Lens' TextTranslationJobFilter (Maybe JobStatus)

-- | Provides information about a translation job.
--   
--   <i>See:</i> <a>newTextTranslationJobProperties</a> smart constructor.
data TextTranslationJobProperties
TextTranslationJobProperties' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe POSIX -> Maybe InputDataConfig -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe OutputDataConfig -> Maybe JobDetails -> Maybe Text -> Maybe JobStatus -> Maybe Text -> TextTranslationJobProperties

-- | The ID of the translation job.
[$sel:jobId:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe Text

-- | The language code of the language of the target text. The language
--   must be a language supported by Amazon Translate.
[$sel:targetLanguageCodes:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe (NonEmpty Text)

-- | The user-defined name of the translation job.
[$sel:jobName:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe Text

-- | The time at which the translation job was submitted.
[$sel:submittedTime:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe POSIX

-- | The input configuration properties that were specified when the job
--   was requested.
[$sel:inputDataConfig:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe InputDataConfig

-- | A list containing the names of the parallel data resources applied to
--   the translation job.
[$sel:parallelDataNames:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe [Text]

-- | A list containing the names of the terminologies applied to a
--   translation job. Only one terminology can be applied per
--   StartTextTranslationJob request at this time.
[$sel:terminologyNames:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe [Text]

-- | The language code of the language of the source text. The language
--   must be a language supported by Amazon Translate.
[$sel:sourceLanguageCode:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe Text

-- | The time at which the translation job ended.
[$sel:endTime:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe POSIX

-- | The output configuration properties that were specified when the job
--   was requested.
[$sel:outputDataConfig:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe OutputDataConfig

-- | The number of documents successfully and unsuccessfully processed
--   during the translation job.
[$sel:jobDetails:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe JobDetails

-- | The Amazon Resource Name (ARN) of an AWS Identity Access and
--   Management (IAM) role that granted Amazon Translate read access to the
--   job's input data.
[$sel:dataAccessRoleArn:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe Text

-- | The status of the translation job.
[$sel:jobStatus:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe JobStatus

-- | An explanation of any errors that may have occured during the
--   translation job.
[$sel:message:TextTranslationJobProperties'] :: TextTranslationJobProperties -> Maybe Text

-- | Create a value of <a>TextTranslationJobProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobId</a> - The ID of the translation
--   job.
--   
--   <a>$sel:targetLanguageCodes:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_targetLanguageCodes</a> - The language
--   code of the language of the target text. The language must be a
--   language supported by Amazon Translate.
--   
--   <a>$sel:jobName:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobName</a> - The user-defined name of
--   the translation job.
--   
--   <a>$sel:submittedTime:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_submittedTime</a> - The time at which
--   the translation job was submitted.
--   
--   <a>$sel:inputDataConfig:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_inputDataConfig</a> - The input
--   configuration properties that were specified when the job was
--   requested.
--   
--   <a>$sel:parallelDataNames:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_parallelDataNames</a> - A list
--   containing the names of the parallel data resources applied to the
--   translation job.
--   
--   <a>$sel:terminologyNames:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_terminologyNames</a> - A list
--   containing the names of the terminologies applied to a translation
--   job. Only one terminology can be applied per StartTextTranslationJob
--   request at this time.
--   
--   <a>$sel:sourceLanguageCode:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_sourceLanguageCode</a> - The language
--   code of the language of the source text. The language must be a
--   language supported by Amazon Translate.
--   
--   <a>$sel:endTime:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_endTime</a> - The time at which the
--   translation job ended.
--   
--   <a>$sel:outputDataConfig:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_outputDataConfig</a> - The output
--   configuration properties that were specified when the job was
--   requested.
--   
--   <a>$sel:jobDetails:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobDetails</a> - The number of
--   documents successfully and unsuccessfully processed during the
--   translation job.
--   
--   <a>$sel:dataAccessRoleArn:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_dataAccessRoleArn</a> - The Amazon
--   Resource Name (ARN) of an AWS Identity Access and Management (IAM)
--   role that granted Amazon Translate read access to the job's input
--   data.
--   
--   <a>$sel:jobStatus:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobStatus</a> - The status of the
--   translation job.
--   
--   <a>$sel:message:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_message</a> - An explanation of any
--   errors that may have occured during the translation job.
newTextTranslationJobProperties :: TextTranslationJobProperties

-- | The ID of the translation job.
textTranslationJobProperties_jobId :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The language code of the language of the target text. The language
--   must be a language supported by Amazon Translate.
textTranslationJobProperties_targetLanguageCodes :: Lens' TextTranslationJobProperties (Maybe (NonEmpty Text))

-- | The user-defined name of the translation job.
textTranslationJobProperties_jobName :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The time at which the translation job was submitted.
textTranslationJobProperties_submittedTime :: Lens' TextTranslationJobProperties (Maybe UTCTime)

-- | The input configuration properties that were specified when the job
--   was requested.
textTranslationJobProperties_inputDataConfig :: Lens' TextTranslationJobProperties (Maybe InputDataConfig)

-- | A list containing the names of the parallel data resources applied to
--   the translation job.
textTranslationJobProperties_parallelDataNames :: Lens' TextTranslationJobProperties (Maybe [Text])

-- | A list containing the names of the terminologies applied to a
--   translation job. Only one terminology can be applied per
--   StartTextTranslationJob request at this time.
textTranslationJobProperties_terminologyNames :: Lens' TextTranslationJobProperties (Maybe [Text])

-- | The language code of the language of the source text. The language
--   must be a language supported by Amazon Translate.
textTranslationJobProperties_sourceLanguageCode :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The time at which the translation job ended.
textTranslationJobProperties_endTime :: Lens' TextTranslationJobProperties (Maybe UTCTime)

-- | The output configuration properties that were specified when the job
--   was requested.
textTranslationJobProperties_outputDataConfig :: Lens' TextTranslationJobProperties (Maybe OutputDataConfig)

-- | The number of documents successfully and unsuccessfully processed
--   during the translation job.
textTranslationJobProperties_jobDetails :: Lens' TextTranslationJobProperties (Maybe JobDetails)

-- | The Amazon Resource Name (ARN) of an AWS Identity Access and
--   Management (IAM) role that granted Amazon Translate read access to the
--   job's input data.
textTranslationJobProperties_dataAccessRoleArn :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The status of the translation job.
textTranslationJobProperties_jobStatus :: Lens' TextTranslationJobProperties (Maybe JobStatus)

-- | An explanation of any errors that may have occured during the
--   translation job.
textTranslationJobProperties_message :: Lens' TextTranslationJobProperties (Maybe Text)


-- | Translates input text from the source language to the target language.
--   For a list of available languages and language codes, see
--   what-is-languages.
module Amazonka.Translate.TranslateText

-- | <i>See:</i> <a>newTranslateText</a> smart constructor.
data TranslateText
TranslateText' :: Maybe [Text] -> Text -> Text -> Text -> TranslateText

-- | The name of the terminology list file to be used in the TranslateText
--   request. You can use 1 terminology list at most in a
--   <tt>TranslateText</tt> request. Terminology lists can contain a
--   maximum of 256 terms.
[$sel:terminologyNames:TranslateText'] :: TranslateText -> Maybe [Text]

-- | The text to translate. The text string can be a maximum of 5,000 bytes
--   long. Depending on your character set, this may be fewer than 5,000
--   characters.
[$sel:text:TranslateText'] :: TranslateText -> Text

-- | The language code for the language of the source text. The language
--   must be a language supported by Amazon Translate. For a list of
--   language codes, see what-is-languages.
--   
--   To have Amazon Translate determine the source language of your text,
--   you can specify <tt>auto</tt> in the <tt>SourceLanguageCode</tt>
--   field. If you specify <tt>auto</tt>, Amazon Translate will call
--   <a>Amazon Comprehend</a> to determine the source language.
[$sel:sourceLanguageCode:TranslateText'] :: TranslateText -> Text

-- | The language code requested for the language of the target text. The
--   language must be a language supported by Amazon Translate.
[$sel:targetLanguageCode:TranslateText'] :: TranslateText -> Text

-- | Create a value of <a>TranslateText</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:terminologyNames:TranslateText'</a>,
--   <a>translateText_terminologyNames</a> - The name of the terminology
--   list file to be used in the TranslateText request. You can use 1
--   terminology list at most in a <tt>TranslateText</tt> request.
--   Terminology lists can contain a maximum of 256 terms.
--   
--   <a>$sel:text:TranslateText'</a>, <a>translateText_text</a> - The text
--   to translate. The text string can be a maximum of 5,000 bytes long.
--   Depending on your character set, this may be fewer than 5,000
--   characters.
--   
--   <a>$sel:sourceLanguageCode:TranslateText'</a>,
--   <a>translateText_sourceLanguageCode</a> - The language code for the
--   language of the source text. The language must be a language supported
--   by Amazon Translate. For a list of language codes, see
--   what-is-languages.
--   
--   To have Amazon Translate determine the source language of your text,
--   you can specify <tt>auto</tt> in the <tt>SourceLanguageCode</tt>
--   field. If you specify <tt>auto</tt>, Amazon Translate will call
--   <a>Amazon Comprehend</a> to determine the source language.
--   
--   <a>$sel:targetLanguageCode:TranslateText'</a>,
--   <a>translateText_targetLanguageCode</a> - The language code requested
--   for the language of the target text. The language must be a language
--   supported by Amazon Translate.
newTranslateText :: Text -> Text -> Text -> TranslateText

-- | The name of the terminology list file to be used in the TranslateText
--   request. You can use 1 terminology list at most in a
--   <tt>TranslateText</tt> request. Terminology lists can contain a
--   maximum of 256 terms.
translateText_terminologyNames :: Lens' TranslateText (Maybe [Text])

-- | The text to translate. The text string can be a maximum of 5,000 bytes
--   long. Depending on your character set, this may be fewer than 5,000
--   characters.
translateText_text :: Lens' TranslateText Text

-- | The language code for the language of the source text. The language
--   must be a language supported by Amazon Translate. For a list of
--   language codes, see what-is-languages.
--   
--   To have Amazon Translate determine the source language of your text,
--   you can specify <tt>auto</tt> in the <tt>SourceLanguageCode</tt>
--   field. If you specify <tt>auto</tt>, Amazon Translate will call
--   <a>Amazon Comprehend</a> to determine the source language.
translateText_sourceLanguageCode :: Lens' TranslateText Text

-- | The language code requested for the language of the target text. The
--   language must be a language supported by Amazon Translate.
translateText_targetLanguageCode :: Lens' TranslateText Text

-- | <i>See:</i> <a>newTranslateTextResponse</a> smart constructor.
data TranslateTextResponse
TranslateTextResponse' :: Maybe [AppliedTerminology] -> Int -> Text -> Text -> Text -> TranslateTextResponse

-- | The names of the custom terminologies applied to the input text by
--   Amazon Translate for the translated text response.
[$sel:appliedTerminologies:TranslateTextResponse'] :: TranslateTextResponse -> Maybe [AppliedTerminology]

-- | The response's http status code.
[$sel:httpStatus:TranslateTextResponse'] :: TranslateTextResponse -> Int

-- | The translated text.
[$sel:translatedText:TranslateTextResponse'] :: TranslateTextResponse -> Text

-- | The language code for the language of the source text.
[$sel:sourceLanguageCode:TranslateTextResponse'] :: TranslateTextResponse -> Text

-- | The language code for the language of the target text.
[$sel:targetLanguageCode:TranslateTextResponse'] :: TranslateTextResponse -> Text

-- | Create a value of <a>TranslateTextResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appliedTerminologies:TranslateTextResponse'</a>,
--   <a>translateTextResponse_appliedTerminologies</a> - The names of the
--   custom terminologies applied to the input text by Amazon Translate for
--   the translated text response.
--   
--   <a>$sel:httpStatus:TranslateTextResponse'</a>,
--   <a>translateTextResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:translatedText:TranslateTextResponse'</a>,
--   <a>translateTextResponse_translatedText</a> - The translated text.
--   
--   <a>$sel:sourceLanguageCode:TranslateText'</a>,
--   <a>translateTextResponse_sourceLanguageCode</a> - The language code
--   for the language of the source text.
--   
--   <a>$sel:targetLanguageCode:TranslateText'</a>,
--   <a>translateTextResponse_targetLanguageCode</a> - The language code
--   for the language of the target text.
newTranslateTextResponse :: Int -> Text -> Text -> Text -> TranslateTextResponse

-- | The names of the custom terminologies applied to the input text by
--   Amazon Translate for the translated text response.
translateTextResponse_appliedTerminologies :: Lens' TranslateTextResponse (Maybe [AppliedTerminology])

-- | The response's http status code.
translateTextResponse_httpStatus :: Lens' TranslateTextResponse Int

-- | The translated text.
translateTextResponse_translatedText :: Lens' TranslateTextResponse Text

-- | The language code for the language of the source text.
translateTextResponse_sourceLanguageCode :: Lens' TranslateTextResponse Text

-- | The language code for the language of the target text.
translateTextResponse_targetLanguageCode :: Lens' TranslateTextResponse Text
instance GHC.Generics.Generic Amazonka.Translate.TranslateText.TranslateText
instance GHC.Show.Show Amazonka.Translate.TranslateText.TranslateText
instance GHC.Read.Read Amazonka.Translate.TranslateText.TranslateText
instance GHC.Classes.Eq Amazonka.Translate.TranslateText.TranslateText
instance GHC.Generics.Generic Amazonka.Translate.TranslateText.TranslateTextResponse
instance GHC.Show.Show Amazonka.Translate.TranslateText.TranslateTextResponse
instance GHC.Read.Read Amazonka.Translate.TranslateText.TranslateTextResponse
instance GHC.Classes.Eq Amazonka.Translate.TranslateText.TranslateTextResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.TranslateText.TranslateText
instance Control.DeepSeq.NFData Amazonka.Translate.TranslateText.TranslateTextResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.TranslateText.TranslateText
instance Control.DeepSeq.NFData Amazonka.Translate.TranslateText.TranslateText
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.TranslateText.TranslateText
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.TranslateText.TranslateText
instance Amazonka.Data.Path.ToPath Amazonka.Translate.TranslateText.TranslateText
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.TranslateText.TranslateText


-- | Stops an asynchronous batch translation job that is in progress.
--   
--   If the job's state is <tt>IN_PROGRESS</tt>, the job will be marked for
--   termination and put into the <tt>STOP_REQUESTED</tt> state. If the job
--   completes before it can be stopped, it is put into the
--   <tt>COMPLETED</tt> state. Otherwise, the job is put into the
--   <tt>STOPPED</tt> state.
--   
--   Asynchronous batch translation jobs are started with the
--   StartTextTranslationJob operation. You can use the
--   DescribeTextTranslationJob or ListTextTranslationJobs operations to
--   get a batch translation job's <tt>JobId</tt>.
module Amazonka.Translate.StopTextTranslationJob

-- | <i>See:</i> <a>newStopTextTranslationJob</a> smart constructor.
data StopTextTranslationJob
StopTextTranslationJob' :: Text -> StopTextTranslationJob

-- | The job ID of the job to be stopped.
[$sel:jobId:StopTextTranslationJob'] :: StopTextTranslationJob -> Text

-- | Create a value of <a>StopTextTranslationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StopTextTranslationJob'</a>,
--   <a>stopTextTranslationJob_jobId</a> - The job ID of the job to be
--   stopped.
newStopTextTranslationJob :: Text -> StopTextTranslationJob

-- | The job ID of the job to be stopped.
stopTextTranslationJob_jobId :: Lens' StopTextTranslationJob Text

-- | <i>See:</i> <a>newStopTextTranslationJobResponse</a> smart
--   constructor.
data StopTextTranslationJobResponse
StopTextTranslationJobResponse' :: Maybe Text -> Maybe JobStatus -> Int -> StopTextTranslationJobResponse

-- | The job ID of the stopped batch translation job.
[$sel:jobId:StopTextTranslationJobResponse'] :: StopTextTranslationJobResponse -> Maybe Text

-- | The status of the designated job. Upon successful completion, the
--   job's status will be <tt>STOPPED</tt>.
[$sel:jobStatus:StopTextTranslationJobResponse'] :: StopTextTranslationJobResponse -> Maybe JobStatus

-- | The response's http status code.
[$sel:httpStatus:StopTextTranslationJobResponse'] :: StopTextTranslationJobResponse -> Int

-- | Create a value of <a>StopTextTranslationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StopTextTranslationJob'</a>,
--   <a>stopTextTranslationJobResponse_jobId</a> - The job ID of the
--   stopped batch translation job.
--   
--   <a>$sel:jobStatus:StopTextTranslationJobResponse'</a>,
--   <a>stopTextTranslationJobResponse_jobStatus</a> - The status of the
--   designated job. Upon successful completion, the job's status will be
--   <tt>STOPPED</tt>.
--   
--   <a>$sel:httpStatus:StopTextTranslationJobResponse'</a>,
--   <a>stopTextTranslationJobResponse_httpStatus</a> - The response's http
--   status code.
newStopTextTranslationJobResponse :: Int -> StopTextTranslationJobResponse

-- | The job ID of the stopped batch translation job.
stopTextTranslationJobResponse_jobId :: Lens' StopTextTranslationJobResponse (Maybe Text)

-- | The status of the designated job. Upon successful completion, the
--   job's status will be <tt>STOPPED</tt>.
stopTextTranslationJobResponse_jobStatus :: Lens' StopTextTranslationJobResponse (Maybe JobStatus)

-- | The response's http status code.
stopTextTranslationJobResponse_httpStatus :: Lens' StopTextTranslationJobResponse Int
instance GHC.Generics.Generic Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJob
instance GHC.Show.Show Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJob
instance GHC.Read.Read Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJob
instance GHC.Classes.Eq Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJob
instance GHC.Generics.Generic Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJobResponse
instance GHC.Show.Show Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJobResponse
instance GHC.Read.Read Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJobResponse
instance GHC.Classes.Eq Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJob
instance Control.DeepSeq.NFData Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJob
instance Control.DeepSeq.NFData Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJob
instance Amazonka.Data.Path.ToPath Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJob
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.StopTextTranslationJob.StopTextTranslationJob


-- | Starts an asynchronous batch translation job. Batch translation jobs
--   can be used to translate large volumes of text across multiple
--   documents at once. For more information, see async.
--   
--   Batch translation jobs can be described with the
--   DescribeTextTranslationJob operation, listed with the
--   ListTextTranslationJobs operation, and stopped with the
--   StopTextTranslationJob operation.
--   
--   Amazon Translate does not support batch translation of multiple source
--   languages at once.
module Amazonka.Translate.StartTextTranslationJob

-- | <i>See:</i> <a>newStartTextTranslationJob</a> smart constructor.
data StartTextTranslationJob
StartTextTranslationJob' :: Maybe Text -> Maybe [Text] -> Maybe [Text] -> InputDataConfig -> OutputDataConfig -> Text -> Text -> NonEmpty Text -> Text -> StartTextTranslationJob

-- | The name of the batch translation job to be performed.
[$sel:jobName:StartTextTranslationJob'] :: StartTextTranslationJob -> Maybe Text

-- | The names of the parallel data resources to use in the batch
--   translation job. For a list of available parallel data resources, use
--   the ListParallelData operation.
[$sel:parallelDataNames:StartTextTranslationJob'] :: StartTextTranslationJob -> Maybe [Text]

-- | The name of the terminology to use in the batch translation job. For a
--   list of available terminologies, use the ListTerminologies operation.
[$sel:terminologyNames:StartTextTranslationJob'] :: StartTextTranslationJob -> Maybe [Text]

-- | Specifies the format and S3 location of the input documents for the
--   translation job.
[$sel:inputDataConfig:StartTextTranslationJob'] :: StartTextTranslationJob -> InputDataConfig

-- | Specifies the S3 folder to which your job output will be saved.
[$sel:outputDataConfig:StartTextTranslationJob'] :: StartTextTranslationJob -> OutputDataConfig

-- | The Amazon Resource Name (ARN) of an AWS Identity Access and
--   Management (IAM) role that grants Amazon Translate read access to your
--   input data. For more nformation, see identity-and-access-management.
[$sel:dataAccessRoleArn:StartTextTranslationJob'] :: StartTextTranslationJob -> Text

-- | The language code of the input language. For a list of language codes,
--   see what-is-languages.
--   
--   Amazon Translate does not automatically detect a source language
--   during batch translation jobs.
[$sel:sourceLanguageCode:StartTextTranslationJob'] :: StartTextTranslationJob -> Text

-- | The language code of the output language.
[$sel:targetLanguageCodes:StartTextTranslationJob'] :: StartTextTranslationJob -> NonEmpty Text

-- | A unique identifier for the request. This token is auto-generated when
--   using the Amazon Translate SDK.
[$sel:clientToken:StartTextTranslationJob'] :: StartTextTranslationJob -> Text

-- | Create a value of <a>StartTextTranslationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_jobName</a> - The name of the batch
--   translation job to be performed.
--   
--   <a>$sel:parallelDataNames:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_parallelDataNames</a> - The names of the
--   parallel data resources to use in the batch translation job. For a
--   list of available parallel data resources, use the ListParallelData
--   operation.
--   
--   <a>$sel:terminologyNames:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_terminologyNames</a> - The name of the
--   terminology to use in the batch translation job. For a list of
--   available terminologies, use the ListTerminologies operation.
--   
--   <a>$sel:inputDataConfig:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_inputDataConfig</a> - Specifies the format
--   and S3 location of the input documents for the translation job.
--   
--   <a>$sel:outputDataConfig:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_outputDataConfig</a> - Specifies the S3
--   folder to which your job output will be saved.
--   
--   <a>$sel:dataAccessRoleArn:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_dataAccessRoleArn</a> - The Amazon Resource
--   Name (ARN) of an AWS Identity Access and Management (IAM) role that
--   grants Amazon Translate read access to your input data. For more
--   nformation, see identity-and-access-management.
--   
--   <a>$sel:sourceLanguageCode:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_sourceLanguageCode</a> - The language code
--   of the input language. For a list of language codes, see
--   what-is-languages.
--   
--   Amazon Translate does not automatically detect a source language
--   during batch translation jobs.
--   
--   <a>$sel:targetLanguageCodes:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_targetLanguageCodes</a> - The language code
--   of the output language.
--   
--   <a>$sel:clientToken:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_clientToken</a> - A unique identifier for
--   the request. This token is auto-generated when using the Amazon
--   Translate SDK.
newStartTextTranslationJob :: InputDataConfig -> OutputDataConfig -> Text -> Text -> NonEmpty Text -> Text -> StartTextTranslationJob

-- | The name of the batch translation job to be performed.
startTextTranslationJob_jobName :: Lens' StartTextTranslationJob (Maybe Text)

-- | The names of the parallel data resources to use in the batch
--   translation job. For a list of available parallel data resources, use
--   the ListParallelData operation.
startTextTranslationJob_parallelDataNames :: Lens' StartTextTranslationJob (Maybe [Text])

-- | The name of the terminology to use in the batch translation job. For a
--   list of available terminologies, use the ListTerminologies operation.
startTextTranslationJob_terminologyNames :: Lens' StartTextTranslationJob (Maybe [Text])

-- | Specifies the format and S3 location of the input documents for the
--   translation job.
startTextTranslationJob_inputDataConfig :: Lens' StartTextTranslationJob InputDataConfig

-- | Specifies the S3 folder to which your job output will be saved.
startTextTranslationJob_outputDataConfig :: Lens' StartTextTranslationJob OutputDataConfig

-- | The Amazon Resource Name (ARN) of an AWS Identity Access and
--   Management (IAM) role that grants Amazon Translate read access to your
--   input data. For more nformation, see identity-and-access-management.
startTextTranslationJob_dataAccessRoleArn :: Lens' StartTextTranslationJob Text

-- | The language code of the input language. For a list of language codes,
--   see what-is-languages.
--   
--   Amazon Translate does not automatically detect a source language
--   during batch translation jobs.
startTextTranslationJob_sourceLanguageCode :: Lens' StartTextTranslationJob Text

-- | The language code of the output language.
startTextTranslationJob_targetLanguageCodes :: Lens' StartTextTranslationJob (NonEmpty Text)

-- | A unique identifier for the request. This token is auto-generated when
--   using the Amazon Translate SDK.
startTextTranslationJob_clientToken :: Lens' StartTextTranslationJob Text

-- | <i>See:</i> <a>newStartTextTranslationJobResponse</a> smart
--   constructor.
data StartTextTranslationJobResponse
StartTextTranslationJobResponse' :: Maybe Text -> Maybe JobStatus -> Int -> StartTextTranslationJobResponse

-- | The identifier generated for the job. To get the status of a job, use
--   this ID with the DescribeTextTranslationJob operation.
[$sel:jobId:StartTextTranslationJobResponse'] :: StartTextTranslationJobResponse -> Maybe Text

-- | The status of the job. Possible values include:
--   
--   <ul>
--   <li><tt>SUBMITTED</tt> - The job has been received and is queued for
--   processing.</li>
--   <li><tt>IN_PROGRESS</tt> - Amazon Translate is processing the
--   job.</li>
--   <li><tt>COMPLETED</tt> - The job was successfully completed and the
--   output is available.</li>
--   <li><tt>COMPLETED_WITH_ERROR</tt> - The job was completed with errors.
--   The errors can be analyzed in the job's output.</li>
--   <li><tt>FAILED</tt> - The job did not complete. To get details, use
--   the DescribeTextTranslationJob operation.</li>
--   <li><tt>STOP_REQUESTED</tt> - The user who started the job has
--   requested that it be stopped.</li>
--   <li><tt>STOPPED</tt> - The job has been stopped.</li>
--   </ul>
[$sel:jobStatus:StartTextTranslationJobResponse'] :: StartTextTranslationJobResponse -> Maybe JobStatus

-- | The response's http status code.
[$sel:httpStatus:StartTextTranslationJobResponse'] :: StartTextTranslationJobResponse -> Int

-- | Create a value of <a>StartTextTranslationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StartTextTranslationJobResponse'</a>,
--   <a>startTextTranslationJobResponse_jobId</a> - The identifier
--   generated for the job. To get the status of a job, use this ID with
--   the DescribeTextTranslationJob operation.
--   
--   <a>$sel:jobStatus:StartTextTranslationJobResponse'</a>,
--   <a>startTextTranslationJobResponse_jobStatus</a> - The status of the
--   job. Possible values include:
--   
--   <ul>
--   <li><tt>SUBMITTED</tt> - The job has been received and is queued for
--   processing.</li>
--   <li><tt>IN_PROGRESS</tt> - Amazon Translate is processing the
--   job.</li>
--   <li><tt>COMPLETED</tt> - The job was successfully completed and the
--   output is available.</li>
--   <li><tt>COMPLETED_WITH_ERROR</tt> - The job was completed with errors.
--   The errors can be analyzed in the job's output.</li>
--   <li><tt>FAILED</tt> - The job did not complete. To get details, use
--   the DescribeTextTranslationJob operation.</li>
--   <li><tt>STOP_REQUESTED</tt> - The user who started the job has
--   requested that it be stopped.</li>
--   <li><tt>STOPPED</tt> - The job has been stopped.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:StartTextTranslationJobResponse'</a>,
--   <a>startTextTranslationJobResponse_httpStatus</a> - The response's
--   http status code.
newStartTextTranslationJobResponse :: Int -> StartTextTranslationJobResponse

-- | The identifier generated for the job. To get the status of a job, use
--   this ID with the DescribeTextTranslationJob operation.
startTextTranslationJobResponse_jobId :: Lens' StartTextTranslationJobResponse (Maybe Text)

-- | The status of the job. Possible values include:
--   
--   <ul>
--   <li><tt>SUBMITTED</tt> - The job has been received and is queued for
--   processing.</li>
--   <li><tt>IN_PROGRESS</tt> - Amazon Translate is processing the
--   job.</li>
--   <li><tt>COMPLETED</tt> - The job was successfully completed and the
--   output is available.</li>
--   <li><tt>COMPLETED_WITH_ERROR</tt> - The job was completed with errors.
--   The errors can be analyzed in the job's output.</li>
--   <li><tt>FAILED</tt> - The job did not complete. To get details, use
--   the DescribeTextTranslationJob operation.</li>
--   <li><tt>STOP_REQUESTED</tt> - The user who started the job has
--   requested that it be stopped.</li>
--   <li><tt>STOPPED</tt> - The job has been stopped.</li>
--   </ul>
startTextTranslationJobResponse_jobStatus :: Lens' StartTextTranslationJobResponse (Maybe JobStatus)

-- | The response's http status code.
startTextTranslationJobResponse_httpStatus :: Lens' StartTextTranslationJobResponse Int
instance GHC.Generics.Generic Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJob
instance GHC.Show.Show Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJob
instance GHC.Read.Read Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJob
instance GHC.Classes.Eq Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJob
instance GHC.Generics.Generic Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJobResponse
instance GHC.Show.Show Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJobResponse
instance GHC.Read.Read Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJobResponse
instance GHC.Classes.Eq Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJob
instance Control.DeepSeq.NFData Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJob
instance Control.DeepSeq.NFData Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJob
instance Amazonka.Data.Path.ToPath Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJob
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.StartTextTranslationJob.StartTextTranslationJob


-- | Gets a list of the batch translation jobs that you have submitted.
module Amazonka.Translate.ListTextTranslationJobs

-- | <i>See:</i> <a>newListTextTranslationJobs</a> smart constructor.
data ListTextTranslationJobs
ListTextTranslationJobs' :: Maybe Text -> Maybe TextTranslationJobFilter -> Maybe Natural -> ListTextTranslationJobs

-- | The token to request the next page of results.
[$sel:nextToken:ListTextTranslationJobs'] :: ListTextTranslationJobs -> Maybe Text

-- | The parameters that specify which batch translation jobs to retrieve.
--   Filters include job name, job status, and submission time. You can
--   only set one filter at a time.
[$sel:filter':ListTextTranslationJobs'] :: ListTextTranslationJobs -> Maybe TextTranslationJobFilter

-- | The maximum number of results to return in each page. The default
--   value is 100.
[$sel:maxResults:ListTextTranslationJobs'] :: ListTextTranslationJobs -> Maybe Natural

-- | Create a value of <a>ListTextTranslationJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTextTranslationJobs'</a>,
--   <a>listTextTranslationJobs_nextToken</a> - The token to request the
--   next page of results.
--   
--   <a>$sel:filter':ListTextTranslationJobs'</a>,
--   <a>listTextTranslationJobs_filter</a> - The parameters that specify
--   which batch translation jobs to retrieve. Filters include job name,
--   job status, and submission time. You can only set one filter at a
--   time.
--   
--   <a>$sel:maxResults:ListTextTranslationJobs'</a>,
--   <a>listTextTranslationJobs_maxResults</a> - The maximum number of
--   results to return in each page. The default value is 100.
newListTextTranslationJobs :: ListTextTranslationJobs

-- | The token to request the next page of results.
listTextTranslationJobs_nextToken :: Lens' ListTextTranslationJobs (Maybe Text)

-- | The parameters that specify which batch translation jobs to retrieve.
--   Filters include job name, job status, and submission time. You can
--   only set one filter at a time.
listTextTranslationJobs_filter :: Lens' ListTextTranslationJobs (Maybe TextTranslationJobFilter)

-- | The maximum number of results to return in each page. The default
--   value is 100.
listTextTranslationJobs_maxResults :: Lens' ListTextTranslationJobs (Maybe Natural)

-- | <i>See:</i> <a>newListTextTranslationJobsResponse</a> smart
--   constructor.
data ListTextTranslationJobsResponse
ListTextTranslationJobsResponse' :: Maybe [TextTranslationJobProperties] -> Maybe Text -> Int -> ListTextTranslationJobsResponse

-- | A list containing the properties of each job that is returned.
[$sel:textTranslationJobPropertiesList:ListTextTranslationJobsResponse'] :: ListTextTranslationJobsResponse -> Maybe [TextTranslationJobProperties]

-- | The token to use to retreive the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListTextTranslationJobsResponse'] :: ListTextTranslationJobsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListTextTranslationJobsResponse'] :: ListTextTranslationJobsResponse -> Int

-- | Create a value of <a>ListTextTranslationJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:textTranslationJobPropertiesList:ListTextTranslationJobsResponse'</a>,
--   <a>listTextTranslationJobsResponse_textTranslationJobPropertiesList</a>
--   - A list containing the properties of each job that is returned.
--   
--   <a>$sel:nextToken:ListTextTranslationJobs'</a>,
--   <a>listTextTranslationJobsResponse_nextToken</a> - The token to use to
--   retreive the next page of results. This value is <tt>null</tt> when
--   there are no more results to return.
--   
--   <a>$sel:httpStatus:ListTextTranslationJobsResponse'</a>,
--   <a>listTextTranslationJobsResponse_httpStatus</a> - The response's
--   http status code.
newListTextTranslationJobsResponse :: Int -> ListTextTranslationJobsResponse

-- | A list containing the properties of each job that is returned.
listTextTranslationJobsResponse_textTranslationJobPropertiesList :: Lens' ListTextTranslationJobsResponse (Maybe [TextTranslationJobProperties])

-- | The token to use to retreive the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listTextTranslationJobsResponse_nextToken :: Lens' ListTextTranslationJobsResponse (Maybe Text)

-- | The response's http status code.
listTextTranslationJobsResponse_httpStatus :: Lens' ListTextTranslationJobsResponse Int
instance GHC.Generics.Generic Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobs
instance GHC.Show.Show Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobs
instance GHC.Read.Read Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobs
instance GHC.Classes.Eq Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobs
instance GHC.Generics.Generic Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobsResponse
instance GHC.Show.Show Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobsResponse
instance GHC.Read.Read Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobsResponse
instance GHC.Classes.Eq Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobsResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobs
instance Control.DeepSeq.NFData Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobsResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobs
instance Control.DeepSeq.NFData Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobs
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobs
instance Amazonka.Data.Path.ToPath Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobs
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.ListTextTranslationJobs.ListTextTranslationJobs


-- | Provides a list of custom terminologies associated with your account.
--   
--   This operation returns paginated results.
module Amazonka.Translate.ListTerminologies

-- | <i>See:</i> <a>newListTerminologies</a> smart constructor.
data ListTerminologies
ListTerminologies' :: Maybe Text -> Maybe Natural -> ListTerminologies

-- | If the result of the request to ListTerminologies was truncated,
--   include the NextToken to fetch the next group of custom terminologies.
[$sel:nextToken:ListTerminologies'] :: ListTerminologies -> Maybe Text

-- | The maximum number of custom terminologies returned per list request.
[$sel:maxResults:ListTerminologies'] :: ListTerminologies -> Maybe Natural

-- | Create a value of <a>ListTerminologies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTerminologies'</a>,
--   <a>listTerminologies_nextToken</a> - If the result of the request to
--   ListTerminologies was truncated, include the NextToken to fetch the
--   next group of custom terminologies.
--   
--   <a>$sel:maxResults:ListTerminologies'</a>,
--   <a>listTerminologies_maxResults</a> - The maximum number of custom
--   terminologies returned per list request.
newListTerminologies :: ListTerminologies

-- | If the result of the request to ListTerminologies was truncated,
--   include the NextToken to fetch the next group of custom terminologies.
listTerminologies_nextToken :: Lens' ListTerminologies (Maybe Text)

-- | The maximum number of custom terminologies returned per list request.
listTerminologies_maxResults :: Lens' ListTerminologies (Maybe Natural)

-- | <i>See:</i> <a>newListTerminologiesResponse</a> smart constructor.
data ListTerminologiesResponse
ListTerminologiesResponse' :: Maybe [TerminologyProperties] -> Maybe Text -> Int -> ListTerminologiesResponse

-- | The properties list of the custom terminologies returned on the list
--   request.
[$sel:terminologyPropertiesList:ListTerminologiesResponse'] :: ListTerminologiesResponse -> Maybe [TerminologyProperties]

-- | If the response to the ListTerminologies was truncated, the NextToken
--   fetches the next group of custom terminologies.
[$sel:nextToken:ListTerminologiesResponse'] :: ListTerminologiesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListTerminologiesResponse'] :: ListTerminologiesResponse -> Int

-- | Create a value of <a>ListTerminologiesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:terminologyPropertiesList:ListTerminologiesResponse'</a>,
--   <a>listTerminologiesResponse_terminologyPropertiesList</a> - The
--   properties list of the custom terminologies returned on the list
--   request.
--   
--   <a>$sel:nextToken:ListTerminologies'</a>,
--   <a>listTerminologiesResponse_nextToken</a> - If the response to the
--   ListTerminologies was truncated, the NextToken fetches the next group
--   of custom terminologies.
--   
--   <a>$sel:httpStatus:ListTerminologiesResponse'</a>,
--   <a>listTerminologiesResponse_httpStatus</a> - The response's http
--   status code.
newListTerminologiesResponse :: Int -> ListTerminologiesResponse

-- | The properties list of the custom terminologies returned on the list
--   request.
listTerminologiesResponse_terminologyPropertiesList :: Lens' ListTerminologiesResponse (Maybe [TerminologyProperties])

-- | If the response to the ListTerminologies was truncated, the NextToken
--   fetches the next group of custom terminologies.
listTerminologiesResponse_nextToken :: Lens' ListTerminologiesResponse (Maybe Text)

-- | The response's http status code.
listTerminologiesResponse_httpStatus :: Lens' ListTerminologiesResponse Int
instance GHC.Generics.Generic Amazonka.Translate.ListTerminologies.ListTerminologies
instance GHC.Show.Show Amazonka.Translate.ListTerminologies.ListTerminologies
instance GHC.Read.Read Amazonka.Translate.ListTerminologies.ListTerminologies
instance GHC.Classes.Eq Amazonka.Translate.ListTerminologies.ListTerminologies
instance GHC.Generics.Generic Amazonka.Translate.ListTerminologies.ListTerminologiesResponse
instance GHC.Show.Show Amazonka.Translate.ListTerminologies.ListTerminologiesResponse
instance GHC.Read.Read Amazonka.Translate.ListTerminologies.ListTerminologiesResponse
instance GHC.Classes.Eq Amazonka.Translate.ListTerminologies.ListTerminologiesResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.ListTerminologies.ListTerminologies
instance Control.DeepSeq.NFData Amazonka.Translate.ListTerminologies.ListTerminologiesResponse
instance Amazonka.Pager.AWSPager Amazonka.Translate.ListTerminologies.ListTerminologies
instance Data.Hashable.Class.Hashable Amazonka.Translate.ListTerminologies.ListTerminologies
instance Control.DeepSeq.NFData Amazonka.Translate.ListTerminologies.ListTerminologies
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.ListTerminologies.ListTerminologies
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.ListTerminologies.ListTerminologies
instance Amazonka.Data.Path.ToPath Amazonka.Translate.ListTerminologies.ListTerminologies
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.ListTerminologies.ListTerminologies


-- | Provides a list of your parallel data resources in Amazon Translate.
module Amazonka.Translate.ListParallelData

-- | <i>See:</i> <a>newListParallelData</a> smart constructor.
data ListParallelData
ListParallelData' :: Maybe Text -> Maybe Natural -> ListParallelData

-- | A string that specifies the next page of results to return in a
--   paginated response.
[$sel:nextToken:ListParallelData'] :: ListParallelData -> Maybe Text

-- | The maximum number of parallel data resources returned for each
--   request.
[$sel:maxResults:ListParallelData'] :: ListParallelData -> Maybe Natural

-- | Create a value of <a>ListParallelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListParallelData'</a>,
--   <a>listParallelData_nextToken</a> - A string that specifies the next
--   page of results to return in a paginated response.
--   
--   <a>$sel:maxResults:ListParallelData'</a>,
--   <a>listParallelData_maxResults</a> - The maximum number of parallel
--   data resources returned for each request.
newListParallelData :: ListParallelData

-- | A string that specifies the next page of results to return in a
--   paginated response.
listParallelData_nextToken :: Lens' ListParallelData (Maybe Text)

-- | The maximum number of parallel data resources returned for each
--   request.
listParallelData_maxResults :: Lens' ListParallelData (Maybe Natural)

-- | <i>See:</i> <a>newListParallelDataResponse</a> smart constructor.
data ListParallelDataResponse
ListParallelDataResponse' :: Maybe [ParallelDataProperties] -> Maybe Text -> Int -> ListParallelDataResponse

-- | The properties of the parallel data resources returned by this
--   request.
[$sel:parallelDataPropertiesList:ListParallelDataResponse'] :: ListParallelDataResponse -> Maybe [ParallelDataProperties]

-- | The string to use in a subsequent request to get the next page of
--   results in a paginated response. This value is null if there are no
--   additional pages.
[$sel:nextToken:ListParallelDataResponse'] :: ListParallelDataResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListParallelDataResponse'] :: ListParallelDataResponse -> Int

-- | Create a value of <a>ListParallelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parallelDataPropertiesList:ListParallelDataResponse'</a>,
--   <a>listParallelDataResponse_parallelDataPropertiesList</a> - The
--   properties of the parallel data resources returned by this request.
--   
--   <a>$sel:nextToken:ListParallelData'</a>,
--   <a>listParallelDataResponse_nextToken</a> - The string to use in a
--   subsequent request to get the next page of results in a paginated
--   response. This value is null if there are no additional pages.
--   
--   <a>$sel:httpStatus:ListParallelDataResponse'</a>,
--   <a>listParallelDataResponse_httpStatus</a> - The response's http
--   status code.
newListParallelDataResponse :: Int -> ListParallelDataResponse

-- | The properties of the parallel data resources returned by this
--   request.
listParallelDataResponse_parallelDataPropertiesList :: Lens' ListParallelDataResponse (Maybe [ParallelDataProperties])

-- | The string to use in a subsequent request to get the next page of
--   results in a paginated response. This value is null if there are no
--   additional pages.
listParallelDataResponse_nextToken :: Lens' ListParallelDataResponse (Maybe Text)

-- | The response's http status code.
listParallelDataResponse_httpStatus :: Lens' ListParallelDataResponse Int
instance GHC.Generics.Generic Amazonka.Translate.ListParallelData.ListParallelData
instance GHC.Show.Show Amazonka.Translate.ListParallelData.ListParallelData
instance GHC.Read.Read Amazonka.Translate.ListParallelData.ListParallelData
instance GHC.Classes.Eq Amazonka.Translate.ListParallelData.ListParallelData
instance GHC.Generics.Generic Amazonka.Translate.ListParallelData.ListParallelDataResponse
instance GHC.Show.Show Amazonka.Translate.ListParallelData.ListParallelDataResponse
instance GHC.Read.Read Amazonka.Translate.ListParallelData.ListParallelDataResponse
instance GHC.Classes.Eq Amazonka.Translate.ListParallelData.ListParallelDataResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.ListParallelData.ListParallelData
instance Control.DeepSeq.NFData Amazonka.Translate.ListParallelData.ListParallelDataResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.ListParallelData.ListParallelData
instance Control.DeepSeq.NFData Amazonka.Translate.ListParallelData.ListParallelData
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.ListParallelData.ListParallelData
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.ListParallelData.ListParallelData
instance Amazonka.Data.Path.ToPath Amazonka.Translate.ListParallelData.ListParallelData
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.ListParallelData.ListParallelData


-- | Creates or updates a custom terminology, depending on whether or not
--   one already exists for the given terminology name. Importing a
--   terminology with the same name as an existing one will merge the
--   terminologies based on the chosen merge strategy. Currently, the only
--   supported merge strategy is OVERWRITE, and so the imported terminology
--   will overwrite an existing terminology of the same name.
--   
--   If you import a terminology that overwrites an existing one, the new
--   terminology take up to 10 minutes to fully propagate and be available
--   for use in a translation due to cache policies with the DataPlane
--   service that performs the translations.
module Amazonka.Translate.ImportTerminology

-- | <i>See:</i> <a>newImportTerminology</a> smart constructor.
data ImportTerminology
ImportTerminology' :: Maybe EncryptionKey -> Maybe Text -> Text -> MergeStrategy -> TerminologyData -> ImportTerminology

-- | The encryption key for the custom terminology being imported.
[$sel:encryptionKey:ImportTerminology'] :: ImportTerminology -> Maybe EncryptionKey

-- | The description of the custom terminology being imported.
[$sel:description:ImportTerminology'] :: ImportTerminology -> Maybe Text

-- | The name of the custom terminology being imported.
[$sel:name:ImportTerminology'] :: ImportTerminology -> Text

-- | The merge strategy of the custom terminology being imported.
--   Currently, only the OVERWRITE merge strategy is supported. In this
--   case, the imported terminology will overwrite an existing terminology
--   of the same name.
[$sel:mergeStrategy:ImportTerminology'] :: ImportTerminology -> MergeStrategy

-- | The terminology data for the custom terminology being imported.
[$sel:terminologyData:ImportTerminology'] :: ImportTerminology -> TerminologyData

-- | Create a value of <a>ImportTerminology</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKey:ImportTerminology'</a>,
--   <a>importTerminology_encryptionKey</a> - The encryption key for the
--   custom terminology being imported.
--   
--   <a>$sel:description:ImportTerminology'</a>,
--   <a>importTerminology_description</a> - The description of the custom
--   terminology being imported.
--   
--   <a>$sel:name:ImportTerminology'</a>, <a>importTerminology_name</a> -
--   The name of the custom terminology being imported.
--   
--   <a>$sel:mergeStrategy:ImportTerminology'</a>,
--   <a>importTerminology_mergeStrategy</a> - The merge strategy of the
--   custom terminology being imported. Currently, only the OVERWRITE merge
--   strategy is supported. In this case, the imported terminology will
--   overwrite an existing terminology of the same name.
--   
--   <a>$sel:terminologyData:ImportTerminology'</a>,
--   <a>importTerminology_terminologyData</a> - The terminology data for
--   the custom terminology being imported.
newImportTerminology :: Text -> MergeStrategy -> TerminologyData -> ImportTerminology

-- | The encryption key for the custom terminology being imported.
importTerminology_encryptionKey :: Lens' ImportTerminology (Maybe EncryptionKey)

-- | The description of the custom terminology being imported.
importTerminology_description :: Lens' ImportTerminology (Maybe Text)

-- | The name of the custom terminology being imported.
importTerminology_name :: Lens' ImportTerminology Text

-- | The merge strategy of the custom terminology being imported.
--   Currently, only the OVERWRITE merge strategy is supported. In this
--   case, the imported terminology will overwrite an existing terminology
--   of the same name.
importTerminology_mergeStrategy :: Lens' ImportTerminology MergeStrategy

-- | The terminology data for the custom terminology being imported.
importTerminology_terminologyData :: Lens' ImportTerminology TerminologyData

-- | <i>See:</i> <a>newImportTerminologyResponse</a> smart constructor.
data ImportTerminologyResponse
ImportTerminologyResponse' :: Maybe TerminologyProperties -> Int -> ImportTerminologyResponse

-- | The properties of the custom terminology being imported.
[$sel:terminologyProperties:ImportTerminologyResponse'] :: ImportTerminologyResponse -> Maybe TerminologyProperties

-- | The response's http status code.
[$sel:httpStatus:ImportTerminologyResponse'] :: ImportTerminologyResponse -> Int

-- | Create a value of <a>ImportTerminologyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:terminologyProperties:ImportTerminologyResponse'</a>,
--   <a>importTerminologyResponse_terminologyProperties</a> - The
--   properties of the custom terminology being imported.
--   
--   <a>$sel:httpStatus:ImportTerminologyResponse'</a>,
--   <a>importTerminologyResponse_httpStatus</a> - The response's http
--   status code.
newImportTerminologyResponse :: Int -> ImportTerminologyResponse

-- | The properties of the custom terminology being imported.
importTerminologyResponse_terminologyProperties :: Lens' ImportTerminologyResponse (Maybe TerminologyProperties)

-- | The response's http status code.
importTerminologyResponse_httpStatus :: Lens' ImportTerminologyResponse Int
instance GHC.Generics.Generic Amazonka.Translate.ImportTerminology.ImportTerminology
instance GHC.Show.Show Amazonka.Translate.ImportTerminology.ImportTerminology
instance GHC.Classes.Eq Amazonka.Translate.ImportTerminology.ImportTerminology
instance GHC.Generics.Generic Amazonka.Translate.ImportTerminology.ImportTerminologyResponse
instance GHC.Show.Show Amazonka.Translate.ImportTerminology.ImportTerminologyResponse
instance GHC.Read.Read Amazonka.Translate.ImportTerminology.ImportTerminologyResponse
instance GHC.Classes.Eq Amazonka.Translate.ImportTerminology.ImportTerminologyResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.ImportTerminology.ImportTerminology
instance Control.DeepSeq.NFData Amazonka.Translate.ImportTerminology.ImportTerminologyResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.ImportTerminology.ImportTerminology
instance Control.DeepSeq.NFData Amazonka.Translate.ImportTerminology.ImportTerminology
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.ImportTerminology.ImportTerminology
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.ImportTerminology.ImportTerminology
instance Amazonka.Data.Path.ToPath Amazonka.Translate.ImportTerminology.ImportTerminology
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.ImportTerminology.ImportTerminology


-- | Retrieves a custom terminology.
module Amazonka.Translate.GetTerminology

-- | <i>See:</i> <a>newGetTerminology</a> smart constructor.
data GetTerminology
GetTerminology' :: Text -> TerminologyDataFormat -> GetTerminology

-- | The name of the custom terminology being retrieved.
[$sel:name:GetTerminology'] :: GetTerminology -> Text

-- | The data format of the custom terminology being retrieved, either CSV
--   or TMX.
[$sel:terminologyDataFormat:GetTerminology'] :: GetTerminology -> TerminologyDataFormat

-- | Create a value of <a>GetTerminology</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetTerminology'</a>, <a>getTerminology_name</a> - The
--   name of the custom terminology being retrieved.
--   
--   <a>$sel:terminologyDataFormat:GetTerminology'</a>,
--   <a>getTerminology_terminologyDataFormat</a> - The data format of the
--   custom terminology being retrieved, either CSV or TMX.
newGetTerminology :: Text -> TerminologyDataFormat -> GetTerminology

-- | The name of the custom terminology being retrieved.
getTerminology_name :: Lens' GetTerminology Text

-- | The data format of the custom terminology being retrieved, either CSV
--   or TMX.
getTerminology_terminologyDataFormat :: Lens' GetTerminology TerminologyDataFormat

-- | <i>See:</i> <a>newGetTerminologyResponse</a> smart constructor.
data GetTerminologyResponse
GetTerminologyResponse' :: Maybe TerminologyProperties -> Maybe TerminologyDataLocation -> Int -> GetTerminologyResponse

-- | The properties of the custom terminology being retrieved.
[$sel:terminologyProperties:GetTerminologyResponse'] :: GetTerminologyResponse -> Maybe TerminologyProperties

-- | The data location of the custom terminology being retrieved. The
--   custom terminology file is returned in a presigned url that has a 30
--   minute expiration.
[$sel:terminologyDataLocation:GetTerminologyResponse'] :: GetTerminologyResponse -> Maybe TerminologyDataLocation

-- | The response's http status code.
[$sel:httpStatus:GetTerminologyResponse'] :: GetTerminologyResponse -> Int

-- | Create a value of <a>GetTerminologyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:terminologyProperties:GetTerminologyResponse'</a>,
--   <a>getTerminologyResponse_terminologyProperties</a> - The properties
--   of the custom terminology being retrieved.
--   
--   <a>$sel:terminologyDataLocation:GetTerminologyResponse'</a>,
--   <a>getTerminologyResponse_terminologyDataLocation</a> - The data
--   location of the custom terminology being retrieved. The custom
--   terminology file is returned in a presigned url that has a 30 minute
--   expiration.
--   
--   <a>$sel:httpStatus:GetTerminologyResponse'</a>,
--   <a>getTerminologyResponse_httpStatus</a> - The response's http status
--   code.
newGetTerminologyResponse :: Int -> GetTerminologyResponse

-- | The properties of the custom terminology being retrieved.
getTerminologyResponse_terminologyProperties :: Lens' GetTerminologyResponse (Maybe TerminologyProperties)

-- | The data location of the custom terminology being retrieved. The
--   custom terminology file is returned in a presigned url that has a 30
--   minute expiration.
getTerminologyResponse_terminologyDataLocation :: Lens' GetTerminologyResponse (Maybe TerminologyDataLocation)

-- | The response's http status code.
getTerminologyResponse_httpStatus :: Lens' GetTerminologyResponse Int
instance GHC.Generics.Generic Amazonka.Translate.GetTerminology.GetTerminology
instance GHC.Show.Show Amazonka.Translate.GetTerminology.GetTerminology
instance GHC.Read.Read Amazonka.Translate.GetTerminology.GetTerminology
instance GHC.Classes.Eq Amazonka.Translate.GetTerminology.GetTerminology
instance GHC.Generics.Generic Amazonka.Translate.GetTerminology.GetTerminologyResponse
instance GHC.Show.Show Amazonka.Translate.GetTerminology.GetTerminologyResponse
instance GHC.Read.Read Amazonka.Translate.GetTerminology.GetTerminologyResponse
instance GHC.Classes.Eq Amazonka.Translate.GetTerminology.GetTerminologyResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.GetTerminology.GetTerminology
instance Control.DeepSeq.NFData Amazonka.Translate.GetTerminology.GetTerminologyResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.GetTerminology.GetTerminology
instance Control.DeepSeq.NFData Amazonka.Translate.GetTerminology.GetTerminology
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.GetTerminology.GetTerminology
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.GetTerminology.GetTerminology
instance Amazonka.Data.Path.ToPath Amazonka.Translate.GetTerminology.GetTerminology
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.GetTerminology.GetTerminology


-- | Provides information about a parallel data resource.
module Amazonka.Translate.GetParallelData

-- | <i>See:</i> <a>newGetParallelData</a> smart constructor.
data GetParallelData
GetParallelData' :: Text -> GetParallelData

-- | The name of the parallel data resource that is being retrieved.
[$sel:name:GetParallelData'] :: GetParallelData -> Text

-- | Create a value of <a>GetParallelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetParallelData'</a>, <a>getParallelData_name</a> - The
--   name of the parallel data resource that is being retrieved.
newGetParallelData :: Text -> GetParallelData

-- | The name of the parallel data resource that is being retrieved.
getParallelData_name :: Lens' GetParallelData Text

-- | <i>See:</i> <a>newGetParallelDataResponse</a> smart constructor.
data GetParallelDataResponse
GetParallelDataResponse' :: Maybe ParallelDataProperties -> Maybe ParallelDataDataLocation -> Maybe ParallelDataDataLocation -> Maybe ParallelDataDataLocation -> Int -> GetParallelDataResponse

-- | The properties of the parallel data resource that is being retrieved.
[$sel:parallelDataProperties:GetParallelDataResponse'] :: GetParallelDataResponse -> Maybe ParallelDataProperties

-- | The location of the most recent parallel data input file that was
--   successfully imported into Amazon Translate. The location is returned
--   as a presigned URL that has a 30 minute expiration.
[$sel:dataLocation:GetParallelDataResponse'] :: GetParallelDataResponse -> Maybe ParallelDataDataLocation

-- | The Amazon S3 location of a file that provides any errors or warnings
--   that were produced by your input file. This file was created when
--   Amazon Translate attempted to create a parallel data resource. The
--   location is returned as a presigned URL to that has a 30 minute
--   expiration.
[$sel:auxiliaryDataLocation:GetParallelDataResponse'] :: GetParallelDataResponse -> Maybe ParallelDataDataLocation

-- | The Amazon S3 location of a file that provides any errors or warnings
--   that were produced by your input file. This file was created when
--   Amazon Translate attempted to update a parallel data resource. The
--   location is returned as a presigned URL to that has a 30 minute
--   expiration.
[$sel:latestUpdateAttemptAuxiliaryDataLocation:GetParallelDataResponse'] :: GetParallelDataResponse -> Maybe ParallelDataDataLocation

-- | The response's http status code.
[$sel:httpStatus:GetParallelDataResponse'] :: GetParallelDataResponse -> Int

-- | Create a value of <a>GetParallelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parallelDataProperties:GetParallelDataResponse'</a>,
--   <a>getParallelDataResponse_parallelDataProperties</a> - The properties
--   of the parallel data resource that is being retrieved.
--   
--   <a>$sel:dataLocation:GetParallelDataResponse'</a>,
--   <a>getParallelDataResponse_dataLocation</a> - The location of the most
--   recent parallel data input file that was successfully imported into
--   Amazon Translate. The location is returned as a presigned URL that has
--   a 30 minute expiration.
--   
--   <a>$sel:auxiliaryDataLocation:GetParallelDataResponse'</a>,
--   <a>getParallelDataResponse_auxiliaryDataLocation</a> - The Amazon S3
--   location of a file that provides any errors or warnings that were
--   produced by your input file. This file was created when Amazon
--   Translate attempted to create a parallel data resource. The location
--   is returned as a presigned URL to that has a 30 minute expiration.
--   
--   
--   <a>$sel:latestUpdateAttemptAuxiliaryDataLocation:GetParallelDataResponse'</a>,
--   <a>getParallelDataResponse_latestUpdateAttemptAuxiliaryDataLocation</a>
--   - The Amazon S3 location of a file that provides any errors or
--   warnings that were produced by your input file. This file was created
--   when Amazon Translate attempted to update a parallel data resource.
--   The location is returned as a presigned URL to that has a 30 minute
--   expiration.
--   
--   <a>$sel:httpStatus:GetParallelDataResponse'</a>,
--   <a>getParallelDataResponse_httpStatus</a> - The response's http status
--   code.
newGetParallelDataResponse :: Int -> GetParallelDataResponse

-- | The properties of the parallel data resource that is being retrieved.
getParallelDataResponse_parallelDataProperties :: Lens' GetParallelDataResponse (Maybe ParallelDataProperties)

-- | The location of the most recent parallel data input file that was
--   successfully imported into Amazon Translate. The location is returned
--   as a presigned URL that has a 30 minute expiration.
getParallelDataResponse_dataLocation :: Lens' GetParallelDataResponse (Maybe ParallelDataDataLocation)

-- | The Amazon S3 location of a file that provides any errors or warnings
--   that were produced by your input file. This file was created when
--   Amazon Translate attempted to create a parallel data resource. The
--   location is returned as a presigned URL to that has a 30 minute
--   expiration.
getParallelDataResponse_auxiliaryDataLocation :: Lens' GetParallelDataResponse (Maybe ParallelDataDataLocation)

-- | The Amazon S3 location of a file that provides any errors or warnings
--   that were produced by your input file. This file was created when
--   Amazon Translate attempted to update a parallel data resource. The
--   location is returned as a presigned URL to that has a 30 minute
--   expiration.
getParallelDataResponse_latestUpdateAttemptAuxiliaryDataLocation :: Lens' GetParallelDataResponse (Maybe ParallelDataDataLocation)

-- | The response's http status code.
getParallelDataResponse_httpStatus :: Lens' GetParallelDataResponse Int
instance GHC.Generics.Generic Amazonka.Translate.GetParallelData.GetParallelData
instance GHC.Show.Show Amazonka.Translate.GetParallelData.GetParallelData
instance GHC.Read.Read Amazonka.Translate.GetParallelData.GetParallelData
instance GHC.Classes.Eq Amazonka.Translate.GetParallelData.GetParallelData
instance GHC.Generics.Generic Amazonka.Translate.GetParallelData.GetParallelDataResponse
instance GHC.Show.Show Amazonka.Translate.GetParallelData.GetParallelDataResponse
instance GHC.Read.Read Amazonka.Translate.GetParallelData.GetParallelDataResponse
instance GHC.Classes.Eq Amazonka.Translate.GetParallelData.GetParallelDataResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.GetParallelData.GetParallelData
instance Control.DeepSeq.NFData Amazonka.Translate.GetParallelData.GetParallelDataResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.GetParallelData.GetParallelData
instance Control.DeepSeq.NFData Amazonka.Translate.GetParallelData.GetParallelData
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.GetParallelData.GetParallelData
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.GetParallelData.GetParallelData
instance Amazonka.Data.Path.ToPath Amazonka.Translate.GetParallelData.GetParallelData
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.GetParallelData.GetParallelData


-- | Gets the properties associated with an asycnhronous batch translation
--   job including name, ID, status, source and target languages,
--   input/output S3 buckets, and so on.
module Amazonka.Translate.DescribeTextTranslationJob

-- | <i>See:</i> <a>newDescribeTextTranslationJob</a> smart constructor.
data DescribeTextTranslationJob
DescribeTextTranslationJob' :: Text -> DescribeTextTranslationJob

-- | The identifier that Amazon Translate generated for the job. The
--   StartTextTranslationJob operation returns this identifier in its
--   response.
[$sel:jobId:DescribeTextTranslationJob'] :: DescribeTextTranslationJob -> Text

-- | Create a value of <a>DescribeTextTranslationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeTextTranslationJob'</a>,
--   <a>describeTextTranslationJob_jobId</a> - The identifier that Amazon
--   Translate generated for the job. The StartTextTranslationJob operation
--   returns this identifier in its response.
newDescribeTextTranslationJob :: Text -> DescribeTextTranslationJob

-- | The identifier that Amazon Translate generated for the job. The
--   StartTextTranslationJob operation returns this identifier in its
--   response.
describeTextTranslationJob_jobId :: Lens' DescribeTextTranslationJob Text

-- | <i>See:</i> <a>newDescribeTextTranslationJobResponse</a> smart
--   constructor.
data DescribeTextTranslationJobResponse
DescribeTextTranslationJobResponse' :: Maybe TextTranslationJobProperties -> Int -> DescribeTextTranslationJobResponse

-- | An object that contains the properties associated with an asynchronous
--   batch translation job.
[$sel:textTranslationJobProperties:DescribeTextTranslationJobResponse'] :: DescribeTextTranslationJobResponse -> Maybe TextTranslationJobProperties

-- | The response's http status code.
[$sel:httpStatus:DescribeTextTranslationJobResponse'] :: DescribeTextTranslationJobResponse -> Int

-- | Create a value of <a>DescribeTextTranslationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:textTranslationJobProperties:DescribeTextTranslationJobResponse'</a>,
--   <a>describeTextTranslationJobResponse_textTranslationJobProperties</a>
--   - An object that contains the properties associated with an
--   asynchronous batch translation job.
--   
--   <a>$sel:httpStatus:DescribeTextTranslationJobResponse'</a>,
--   <a>describeTextTranslationJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeTextTranslationJobResponse :: Int -> DescribeTextTranslationJobResponse

-- | An object that contains the properties associated with an asynchronous
--   batch translation job.
describeTextTranslationJobResponse_textTranslationJobProperties :: Lens' DescribeTextTranslationJobResponse (Maybe TextTranslationJobProperties)

-- | The response's http status code.
describeTextTranslationJobResponse_httpStatus :: Lens' DescribeTextTranslationJobResponse Int
instance GHC.Generics.Generic Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJob
instance GHC.Show.Show Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJob
instance GHC.Read.Read Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJob
instance GHC.Classes.Eq Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJob
instance GHC.Generics.Generic Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJobResponse
instance GHC.Show.Show Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJobResponse
instance GHC.Read.Read Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJobResponse
instance GHC.Classes.Eq Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJobResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJob
instance Control.DeepSeq.NFData Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJobResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJob
instance Control.DeepSeq.NFData Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJob
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJob
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJob
instance Amazonka.Data.Path.ToPath Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJob
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.DescribeTextTranslationJob.DescribeTextTranslationJob


-- | A synchronous action that deletes a custom terminology.
module Amazonka.Translate.DeleteTerminology

-- | <i>See:</i> <a>newDeleteTerminology</a> smart constructor.
data DeleteTerminology
DeleteTerminology' :: Text -> DeleteTerminology

-- | The name of the custom terminology being deleted.
[$sel:name:DeleteTerminology'] :: DeleteTerminology -> Text

-- | Create a value of <a>DeleteTerminology</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteTerminology'</a>, <a>deleteTerminology_name</a> -
--   The name of the custom terminology being deleted.
newDeleteTerminology :: Text -> DeleteTerminology

-- | The name of the custom terminology being deleted.
deleteTerminology_name :: Lens' DeleteTerminology Text

-- | <i>See:</i> <a>newDeleteTerminologyResponse</a> smart constructor.
data DeleteTerminologyResponse
DeleteTerminologyResponse' :: DeleteTerminologyResponse

-- | Create a value of <a>DeleteTerminologyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteTerminologyResponse :: DeleteTerminologyResponse
instance GHC.Generics.Generic Amazonka.Translate.DeleteTerminology.DeleteTerminology
instance GHC.Show.Show Amazonka.Translate.DeleteTerminology.DeleteTerminology
instance GHC.Read.Read Amazonka.Translate.DeleteTerminology.DeleteTerminology
instance GHC.Classes.Eq Amazonka.Translate.DeleteTerminology.DeleteTerminology
instance GHC.Generics.Generic Amazonka.Translate.DeleteTerminology.DeleteTerminologyResponse
instance GHC.Show.Show Amazonka.Translate.DeleteTerminology.DeleteTerminologyResponse
instance GHC.Read.Read Amazonka.Translate.DeleteTerminology.DeleteTerminologyResponse
instance GHC.Classes.Eq Amazonka.Translate.DeleteTerminology.DeleteTerminologyResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.DeleteTerminology.DeleteTerminology
instance Control.DeepSeq.NFData Amazonka.Translate.DeleteTerminology.DeleteTerminologyResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.DeleteTerminology.DeleteTerminology
instance Control.DeepSeq.NFData Amazonka.Translate.DeleteTerminology.DeleteTerminology
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.DeleteTerminology.DeleteTerminology
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.DeleteTerminology.DeleteTerminology
instance Amazonka.Data.Path.ToPath Amazonka.Translate.DeleteTerminology.DeleteTerminology
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.DeleteTerminology.DeleteTerminology


-- | Deletes a parallel data resource in Amazon Translate.
module Amazonka.Translate.DeleteParallelData

-- | <i>See:</i> <a>newDeleteParallelData</a> smart constructor.
data DeleteParallelData
DeleteParallelData' :: Text -> DeleteParallelData

-- | The name of the parallel data resource that is being deleted.
[$sel:name:DeleteParallelData'] :: DeleteParallelData -> Text

-- | Create a value of <a>DeleteParallelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteParallelData'</a>, <a>deleteParallelData_name</a> -
--   The name of the parallel data resource that is being deleted.
newDeleteParallelData :: Text -> DeleteParallelData

-- | The name of the parallel data resource that is being deleted.
deleteParallelData_name :: Lens' DeleteParallelData Text

-- | <i>See:</i> <a>newDeleteParallelDataResponse</a> smart constructor.
data DeleteParallelDataResponse
DeleteParallelDataResponse' :: Maybe ParallelDataStatus -> Maybe Text -> Int -> DeleteParallelDataResponse

-- | The status of the parallel data deletion.
[$sel:status:DeleteParallelDataResponse'] :: DeleteParallelDataResponse -> Maybe ParallelDataStatus

-- | The name of the parallel data resource that is being deleted.
[$sel:name:DeleteParallelDataResponse'] :: DeleteParallelDataResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteParallelDataResponse'] :: DeleteParallelDataResponse -> Int

-- | Create a value of <a>DeleteParallelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DeleteParallelDataResponse'</a>,
--   <a>deleteParallelDataResponse_status</a> - The status of the parallel
--   data deletion.
--   
--   <a>$sel:name:DeleteParallelData'</a>,
--   <a>deleteParallelDataResponse_name</a> - The name of the parallel data
--   resource that is being deleted.
--   
--   <a>$sel:httpStatus:DeleteParallelDataResponse'</a>,
--   <a>deleteParallelDataResponse_httpStatus</a> - The response's http
--   status code.
newDeleteParallelDataResponse :: Int -> DeleteParallelDataResponse

-- | The status of the parallel data deletion.
deleteParallelDataResponse_status :: Lens' DeleteParallelDataResponse (Maybe ParallelDataStatus)

-- | The name of the parallel data resource that is being deleted.
deleteParallelDataResponse_name :: Lens' DeleteParallelDataResponse (Maybe Text)

-- | The response's http status code.
deleteParallelDataResponse_httpStatus :: Lens' DeleteParallelDataResponse Int
instance GHC.Generics.Generic Amazonka.Translate.DeleteParallelData.DeleteParallelData
instance GHC.Show.Show Amazonka.Translate.DeleteParallelData.DeleteParallelData
instance GHC.Read.Read Amazonka.Translate.DeleteParallelData.DeleteParallelData
instance GHC.Classes.Eq Amazonka.Translate.DeleteParallelData.DeleteParallelData
instance GHC.Generics.Generic Amazonka.Translate.DeleteParallelData.DeleteParallelDataResponse
instance GHC.Show.Show Amazonka.Translate.DeleteParallelData.DeleteParallelDataResponse
instance GHC.Read.Read Amazonka.Translate.DeleteParallelData.DeleteParallelDataResponse
instance GHC.Classes.Eq Amazonka.Translate.DeleteParallelData.DeleteParallelDataResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.DeleteParallelData.DeleteParallelData
instance Control.DeepSeq.NFData Amazonka.Translate.DeleteParallelData.DeleteParallelDataResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.DeleteParallelData.DeleteParallelData
instance Control.DeepSeq.NFData Amazonka.Translate.DeleteParallelData.DeleteParallelData
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.DeleteParallelData.DeleteParallelData
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.DeleteParallelData.DeleteParallelData
instance Amazonka.Data.Path.ToPath Amazonka.Translate.DeleteParallelData.DeleteParallelData
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.DeleteParallelData.DeleteParallelData


-- | Creates a parallel data resource in Amazon Translate by importing an
--   input file from Amazon S3. Parallel data files contain examples of
--   source phrases and their translations from your translation memory. By
--   adding parallel data, you can influence the style, tone, and word
--   choice in your translation output.
module Amazonka.Translate.CreateParallelData

-- | <i>See:</i> <a>newCreateParallelData</a> smart constructor.
data CreateParallelData
CreateParallelData' :: Maybe EncryptionKey -> Maybe Text -> Text -> ParallelDataConfig -> Text -> CreateParallelData
[$sel:encryptionKey:CreateParallelData'] :: CreateParallelData -> Maybe EncryptionKey

-- | A custom description for the parallel data resource in Amazon
--   Translate.
[$sel:description:CreateParallelData'] :: CreateParallelData -> Maybe Text

-- | A custom name for the parallel data resource in Amazon Translate. You
--   must assign a name that is unique in the account and region.
[$sel:name:CreateParallelData'] :: CreateParallelData -> Text

-- | Specifies the format and S3 location of the parallel data input file.
[$sel:parallelDataConfig:CreateParallelData'] :: CreateParallelData -> ParallelDataConfig

-- | A unique identifier for the request. This token is automatically
--   generated when you use Amazon Translate through an AWS SDK.
[$sel:clientToken:CreateParallelData'] :: CreateParallelData -> Text

-- | Create a value of <a>CreateParallelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKey:CreateParallelData'</a>,
--   <a>createParallelData_encryptionKey</a> - Undocumented member.
--   
--   <a>$sel:description:CreateParallelData'</a>,
--   <a>createParallelData_description</a> - A custom description for the
--   parallel data resource in Amazon Translate.
--   
--   <a>$sel:name:CreateParallelData'</a>, <a>createParallelData_name</a> -
--   A custom name for the parallel data resource in Amazon Translate. You
--   must assign a name that is unique in the account and region.
--   
--   <a>$sel:parallelDataConfig:CreateParallelData'</a>,
--   <a>createParallelData_parallelDataConfig</a> - Specifies the format
--   and S3 location of the parallel data input file.
--   
--   <a>$sel:clientToken:CreateParallelData'</a>,
--   <a>createParallelData_clientToken</a> - A unique identifier for the
--   request. This token is automatically generated when you use Amazon
--   Translate through an AWS SDK.
newCreateParallelData :: Text -> ParallelDataConfig -> Text -> CreateParallelData

-- | Undocumented member.
createParallelData_encryptionKey :: Lens' CreateParallelData (Maybe EncryptionKey)

-- | A custom description for the parallel data resource in Amazon
--   Translate.
createParallelData_description :: Lens' CreateParallelData (Maybe Text)

-- | A custom name for the parallel data resource in Amazon Translate. You
--   must assign a name that is unique in the account and region.
createParallelData_name :: Lens' CreateParallelData Text

-- | Specifies the format and S3 location of the parallel data input file.
createParallelData_parallelDataConfig :: Lens' CreateParallelData ParallelDataConfig

-- | A unique identifier for the request. This token is automatically
--   generated when you use Amazon Translate through an AWS SDK.
createParallelData_clientToken :: Lens' CreateParallelData Text

-- | <i>See:</i> <a>newCreateParallelDataResponse</a> smart constructor.
data CreateParallelDataResponse
CreateParallelDataResponse' :: Maybe ParallelDataStatus -> Maybe Text -> Int -> CreateParallelDataResponse

-- | The status of the parallel data resource. When the resource is ready
--   for you to use, the status is <tt>ACTIVE</tt>.
[$sel:status:CreateParallelDataResponse'] :: CreateParallelDataResponse -> Maybe ParallelDataStatus

-- | The custom name that you assigned to the parallel data resource.
[$sel:name:CreateParallelDataResponse'] :: CreateParallelDataResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateParallelDataResponse'] :: CreateParallelDataResponse -> Int

-- | Create a value of <a>CreateParallelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateParallelDataResponse'</a>,
--   <a>createParallelDataResponse_status</a> - The status of the parallel
--   data resource. When the resource is ready for you to use, the status
--   is <tt>ACTIVE</tt>.
--   
--   <a>$sel:name:CreateParallelData'</a>,
--   <a>createParallelDataResponse_name</a> - The custom name that you
--   assigned to the parallel data resource.
--   
--   <a>$sel:httpStatus:CreateParallelDataResponse'</a>,
--   <a>createParallelDataResponse_httpStatus</a> - The response's http
--   status code.
newCreateParallelDataResponse :: Int -> CreateParallelDataResponse

-- | The status of the parallel data resource. When the resource is ready
--   for you to use, the status is <tt>ACTIVE</tt>.
createParallelDataResponse_status :: Lens' CreateParallelDataResponse (Maybe ParallelDataStatus)

-- | The custom name that you assigned to the parallel data resource.
createParallelDataResponse_name :: Lens' CreateParallelDataResponse (Maybe Text)

-- | The response's http status code.
createParallelDataResponse_httpStatus :: Lens' CreateParallelDataResponse Int
instance GHC.Generics.Generic Amazonka.Translate.CreateParallelData.CreateParallelData
instance GHC.Show.Show Amazonka.Translate.CreateParallelData.CreateParallelData
instance GHC.Read.Read Amazonka.Translate.CreateParallelData.CreateParallelData
instance GHC.Classes.Eq Amazonka.Translate.CreateParallelData.CreateParallelData
instance GHC.Generics.Generic Amazonka.Translate.CreateParallelData.CreateParallelDataResponse
instance GHC.Show.Show Amazonka.Translate.CreateParallelData.CreateParallelDataResponse
instance GHC.Read.Read Amazonka.Translate.CreateParallelData.CreateParallelDataResponse
instance GHC.Classes.Eq Amazonka.Translate.CreateParallelData.CreateParallelDataResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.CreateParallelData.CreateParallelData
instance Control.DeepSeq.NFData Amazonka.Translate.CreateParallelData.CreateParallelDataResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.CreateParallelData.CreateParallelData
instance Control.DeepSeq.NFData Amazonka.Translate.CreateParallelData.CreateParallelData
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.CreateParallelData.CreateParallelData
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.CreateParallelData.CreateParallelData
instance Amazonka.Data.Path.ToPath Amazonka.Translate.CreateParallelData.CreateParallelData
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.CreateParallelData.CreateParallelData


-- | Updates a previously created parallel data resource by importing a new
--   input file from Amazon S3.
module Amazonka.Translate.UpdateParallelData

-- | <i>See:</i> <a>newUpdateParallelData</a> smart constructor.
data UpdateParallelData
UpdateParallelData' :: Maybe Text -> Text -> ParallelDataConfig -> Text -> UpdateParallelData

-- | A custom description for the parallel data resource in Amazon
--   Translate.
[$sel:description:UpdateParallelData'] :: UpdateParallelData -> Maybe Text

-- | The name of the parallel data resource being updated.
[$sel:name:UpdateParallelData'] :: UpdateParallelData -> Text

-- | Specifies the format and S3 location of the parallel data input file.
[$sel:parallelDataConfig:UpdateParallelData'] :: UpdateParallelData -> ParallelDataConfig

-- | A unique identifier for the request. This token is automatically
--   generated when you use Amazon Translate through an AWS SDK.
[$sel:clientToken:UpdateParallelData'] :: UpdateParallelData -> Text

-- | Create a value of <a>UpdateParallelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateParallelData'</a>,
--   <a>updateParallelData_description</a> - A custom description for the
--   parallel data resource in Amazon Translate.
--   
--   <a>$sel:name:UpdateParallelData'</a>, <a>updateParallelData_name</a> -
--   The name of the parallel data resource being updated.
--   
--   <a>$sel:parallelDataConfig:UpdateParallelData'</a>,
--   <a>updateParallelData_parallelDataConfig</a> - Specifies the format
--   and S3 location of the parallel data input file.
--   
--   <a>$sel:clientToken:UpdateParallelData'</a>,
--   <a>updateParallelData_clientToken</a> - A unique identifier for the
--   request. This token is automatically generated when you use Amazon
--   Translate through an AWS SDK.
newUpdateParallelData :: Text -> ParallelDataConfig -> Text -> UpdateParallelData

-- | A custom description for the parallel data resource in Amazon
--   Translate.
updateParallelData_description :: Lens' UpdateParallelData (Maybe Text)

-- | The name of the parallel data resource being updated.
updateParallelData_name :: Lens' UpdateParallelData Text

-- | Specifies the format and S3 location of the parallel data input file.
updateParallelData_parallelDataConfig :: Lens' UpdateParallelData ParallelDataConfig

-- | A unique identifier for the request. This token is automatically
--   generated when you use Amazon Translate through an AWS SDK.
updateParallelData_clientToken :: Lens' UpdateParallelData Text

-- | <i>See:</i> <a>newUpdateParallelDataResponse</a> smart constructor.
data UpdateParallelDataResponse
UpdateParallelDataResponse' :: Maybe ParallelDataStatus -> Maybe Text -> Maybe POSIX -> Maybe ParallelDataStatus -> Int -> UpdateParallelDataResponse

-- | The status of the parallel data resource that you are attempting to
--   update. Your update request is accepted only if this status is either
--   <tt>ACTIVE</tt> or <tt>FAILED</tt>.
[$sel:status:UpdateParallelDataResponse'] :: UpdateParallelDataResponse -> Maybe ParallelDataStatus

-- | The name of the parallel data resource being updated.
[$sel:name:UpdateParallelDataResponse'] :: UpdateParallelDataResponse -> Maybe Text

-- | The time that the most recent update was attempted.
[$sel:latestUpdateAttemptAt:UpdateParallelDataResponse'] :: UpdateParallelDataResponse -> Maybe POSIX

-- | The status of the parallel data update attempt. When the updated
--   parallel data resource is ready for you to use, the status is
--   <tt>ACTIVE</tt>.
[$sel:latestUpdateAttemptStatus:UpdateParallelDataResponse'] :: UpdateParallelDataResponse -> Maybe ParallelDataStatus

-- | The response's http status code.
[$sel:httpStatus:UpdateParallelDataResponse'] :: UpdateParallelDataResponse -> Int

-- | Create a value of <a>UpdateParallelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateParallelDataResponse'</a>,
--   <a>updateParallelDataResponse_status</a> - The status of the parallel
--   data resource that you are attempting to update. Your update request
--   is accepted only if this status is either <tt>ACTIVE</tt> or
--   <tt>FAILED</tt>.
--   
--   <a>$sel:name:UpdateParallelData'</a>,
--   <a>updateParallelDataResponse_name</a> - The name of the parallel data
--   resource being updated.
--   
--   <a>$sel:latestUpdateAttemptAt:UpdateParallelDataResponse'</a>,
--   <a>updateParallelDataResponse_latestUpdateAttemptAt</a> - The time
--   that the most recent update was attempted.
--   
--   <a>$sel:latestUpdateAttemptStatus:UpdateParallelDataResponse'</a>,
--   <a>updateParallelDataResponse_latestUpdateAttemptStatus</a> - The
--   status of the parallel data update attempt. When the updated parallel
--   data resource is ready for you to use, the status is <tt>ACTIVE</tt>.
--   
--   <a>$sel:httpStatus:UpdateParallelDataResponse'</a>,
--   <a>updateParallelDataResponse_httpStatus</a> - The response's http
--   status code.
newUpdateParallelDataResponse :: Int -> UpdateParallelDataResponse

-- | The status of the parallel data resource that you are attempting to
--   update. Your update request is accepted only if this status is either
--   <tt>ACTIVE</tt> or <tt>FAILED</tt>.
updateParallelDataResponse_status :: Lens' UpdateParallelDataResponse (Maybe ParallelDataStatus)

-- | The name of the parallel data resource being updated.
updateParallelDataResponse_name :: Lens' UpdateParallelDataResponse (Maybe Text)

-- | The time that the most recent update was attempted.
updateParallelDataResponse_latestUpdateAttemptAt :: Lens' UpdateParallelDataResponse (Maybe UTCTime)

-- | The status of the parallel data update attempt. When the updated
--   parallel data resource is ready for you to use, the status is
--   <tt>ACTIVE</tt>.
updateParallelDataResponse_latestUpdateAttemptStatus :: Lens' UpdateParallelDataResponse (Maybe ParallelDataStatus)

-- | The response's http status code.
updateParallelDataResponse_httpStatus :: Lens' UpdateParallelDataResponse Int
instance GHC.Generics.Generic Amazonka.Translate.UpdateParallelData.UpdateParallelData
instance GHC.Show.Show Amazonka.Translate.UpdateParallelData.UpdateParallelData
instance GHC.Read.Read Amazonka.Translate.UpdateParallelData.UpdateParallelData
instance GHC.Classes.Eq Amazonka.Translate.UpdateParallelData.UpdateParallelData
instance GHC.Generics.Generic Amazonka.Translate.UpdateParallelData.UpdateParallelDataResponse
instance GHC.Show.Show Amazonka.Translate.UpdateParallelData.UpdateParallelDataResponse
instance GHC.Read.Read Amazonka.Translate.UpdateParallelData.UpdateParallelDataResponse
instance GHC.Classes.Eq Amazonka.Translate.UpdateParallelData.UpdateParallelDataResponse
instance Amazonka.Types.AWSRequest Amazonka.Translate.UpdateParallelData.UpdateParallelData
instance Control.DeepSeq.NFData Amazonka.Translate.UpdateParallelData.UpdateParallelDataResponse
instance Data.Hashable.Class.Hashable Amazonka.Translate.UpdateParallelData.UpdateParallelData
instance Control.DeepSeq.NFData Amazonka.Translate.UpdateParallelData.UpdateParallelData
instance Amazonka.Data.Headers.ToHeaders Amazonka.Translate.UpdateParallelData.UpdateParallelData
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.Translate.UpdateParallelData.UpdateParallelData
instance Amazonka.Data.Path.ToPath Amazonka.Translate.UpdateParallelData.UpdateParallelData
instance Amazonka.Data.Query.ToQuery Amazonka.Translate.UpdateParallelData.UpdateParallelData


module Amazonka.Translate.Lens

-- | The identifier that Amazon Translate generated for the job. The
--   StartTextTranslationJob operation returns this identifier in its
--   response.
describeTextTranslationJob_jobId :: Lens' DescribeTextTranslationJob Text

-- | An object that contains the properties associated with an asynchronous
--   batch translation job.
describeTextTranslationJobResponse_textTranslationJobProperties :: Lens' DescribeTextTranslationJobResponse (Maybe TextTranslationJobProperties)

-- | The response's http status code.
describeTextTranslationJobResponse_httpStatus :: Lens' DescribeTextTranslationJobResponse Int

-- | If the result of the request to ListTerminologies was truncated,
--   include the NextToken to fetch the next group of custom terminologies.
listTerminologies_nextToken :: Lens' ListTerminologies (Maybe Text)

-- | The maximum number of custom terminologies returned per list request.
listTerminologies_maxResults :: Lens' ListTerminologies (Maybe Natural)

-- | The properties list of the custom terminologies returned on the list
--   request.
listTerminologiesResponse_terminologyPropertiesList :: Lens' ListTerminologiesResponse (Maybe [TerminologyProperties])

-- | If the response to the ListTerminologies was truncated, the NextToken
--   fetches the next group of custom terminologies.
listTerminologiesResponse_nextToken :: Lens' ListTerminologiesResponse (Maybe Text)

-- | The response's http status code.
listTerminologiesResponse_httpStatus :: Lens' ListTerminologiesResponse Int

-- | Undocumented member.
createParallelData_encryptionKey :: Lens' CreateParallelData (Maybe EncryptionKey)

-- | A custom description for the parallel data resource in Amazon
--   Translate.
createParallelData_description :: Lens' CreateParallelData (Maybe Text)

-- | A custom name for the parallel data resource in Amazon Translate. You
--   must assign a name that is unique in the account and region.
createParallelData_name :: Lens' CreateParallelData Text

-- | Specifies the format and S3 location of the parallel data input file.
createParallelData_parallelDataConfig :: Lens' CreateParallelData ParallelDataConfig

-- | A unique identifier for the request. This token is automatically
--   generated when you use Amazon Translate through an AWS SDK.
createParallelData_clientToken :: Lens' CreateParallelData Text

-- | The status of the parallel data resource. When the resource is ready
--   for you to use, the status is <tt>ACTIVE</tt>.
createParallelDataResponse_status :: Lens' CreateParallelDataResponse (Maybe ParallelDataStatus)

-- | The custom name that you assigned to the parallel data resource.
createParallelDataResponse_name :: Lens' CreateParallelDataResponse (Maybe Text)

-- | The response's http status code.
createParallelDataResponse_httpStatus :: Lens' CreateParallelDataResponse Int

-- | A custom description for the parallel data resource in Amazon
--   Translate.
updateParallelData_description :: Lens' UpdateParallelData (Maybe Text)

-- | The name of the parallel data resource being updated.
updateParallelData_name :: Lens' UpdateParallelData Text

-- | Specifies the format and S3 location of the parallel data input file.
updateParallelData_parallelDataConfig :: Lens' UpdateParallelData ParallelDataConfig

-- | A unique identifier for the request. This token is automatically
--   generated when you use Amazon Translate through an AWS SDK.
updateParallelData_clientToken :: Lens' UpdateParallelData Text

-- | The status of the parallel data resource that you are attempting to
--   update. Your update request is accepted only if this status is either
--   <tt>ACTIVE</tt> or <tt>FAILED</tt>.
updateParallelDataResponse_status :: Lens' UpdateParallelDataResponse (Maybe ParallelDataStatus)

-- | The name of the parallel data resource being updated.
updateParallelDataResponse_name :: Lens' UpdateParallelDataResponse (Maybe Text)

-- | The time that the most recent update was attempted.
updateParallelDataResponse_latestUpdateAttemptAt :: Lens' UpdateParallelDataResponse (Maybe UTCTime)

-- | The status of the parallel data update attempt. When the updated
--   parallel data resource is ready for you to use, the status is
--   <tt>ACTIVE</tt>.
updateParallelDataResponse_latestUpdateAttemptStatus :: Lens' UpdateParallelDataResponse (Maybe ParallelDataStatus)

-- | The response's http status code.
updateParallelDataResponse_httpStatus :: Lens' UpdateParallelDataResponse Int

-- | The name of the parallel data resource that is being deleted.
deleteParallelData_name :: Lens' DeleteParallelData Text

-- | The status of the parallel data deletion.
deleteParallelDataResponse_status :: Lens' DeleteParallelDataResponse (Maybe ParallelDataStatus)

-- | The name of the parallel data resource that is being deleted.
deleteParallelDataResponse_name :: Lens' DeleteParallelDataResponse (Maybe Text)

-- | The response's http status code.
deleteParallelDataResponse_httpStatus :: Lens' DeleteParallelDataResponse Int

-- | The name of the parallel data resource that is being retrieved.
getParallelData_name :: Lens' GetParallelData Text

-- | The properties of the parallel data resource that is being retrieved.
getParallelDataResponse_parallelDataProperties :: Lens' GetParallelDataResponse (Maybe ParallelDataProperties)

-- | The location of the most recent parallel data input file that was
--   successfully imported into Amazon Translate. The location is returned
--   as a presigned URL that has a 30 minute expiration.
getParallelDataResponse_dataLocation :: Lens' GetParallelDataResponse (Maybe ParallelDataDataLocation)

-- | The Amazon S3 location of a file that provides any errors or warnings
--   that were produced by your input file. This file was created when
--   Amazon Translate attempted to create a parallel data resource. The
--   location is returned as a presigned URL to that has a 30 minute
--   expiration.
getParallelDataResponse_auxiliaryDataLocation :: Lens' GetParallelDataResponse (Maybe ParallelDataDataLocation)

-- | The Amazon S3 location of a file that provides any errors or warnings
--   that were produced by your input file. This file was created when
--   Amazon Translate attempted to update a parallel data resource. The
--   location is returned as a presigned URL to that has a 30 minute
--   expiration.
getParallelDataResponse_latestUpdateAttemptAuxiliaryDataLocation :: Lens' GetParallelDataResponse (Maybe ParallelDataDataLocation)

-- | The response's http status code.
getParallelDataResponse_httpStatus :: Lens' GetParallelDataResponse Int

-- | The name of the custom terminology being retrieved.
getTerminology_name :: Lens' GetTerminology Text

-- | The data format of the custom terminology being retrieved, either CSV
--   or TMX.
getTerminology_terminologyDataFormat :: Lens' GetTerminology TerminologyDataFormat

-- | The properties of the custom terminology being retrieved.
getTerminologyResponse_terminologyProperties :: Lens' GetTerminologyResponse (Maybe TerminologyProperties)

-- | The data location of the custom terminology being retrieved. The
--   custom terminology file is returned in a presigned url that has a 30
--   minute expiration.
getTerminologyResponse_terminologyDataLocation :: Lens' GetTerminologyResponse (Maybe TerminologyDataLocation)

-- | The response's http status code.
getTerminologyResponse_httpStatus :: Lens' GetTerminologyResponse Int

-- | The name of the terminology list file to be used in the TranslateText
--   request. You can use 1 terminology list at most in a
--   <tt>TranslateText</tt> request. Terminology lists can contain a
--   maximum of 256 terms.
translateText_terminologyNames :: Lens' TranslateText (Maybe [Text])

-- | The text to translate. The text string can be a maximum of 5,000 bytes
--   long. Depending on your character set, this may be fewer than 5,000
--   characters.
translateText_text :: Lens' TranslateText Text

-- | The language code for the language of the source text. The language
--   must be a language supported by Amazon Translate. For a list of
--   language codes, see what-is-languages.
--   
--   To have Amazon Translate determine the source language of your text,
--   you can specify <tt>auto</tt> in the <tt>SourceLanguageCode</tt>
--   field. If you specify <tt>auto</tt>, Amazon Translate will call
--   <a>Amazon Comprehend</a> to determine the source language.
translateText_sourceLanguageCode :: Lens' TranslateText Text

-- | The language code requested for the language of the target text. The
--   language must be a language supported by Amazon Translate.
translateText_targetLanguageCode :: Lens' TranslateText Text

-- | The names of the custom terminologies applied to the input text by
--   Amazon Translate for the translated text response.
translateTextResponse_appliedTerminologies :: Lens' TranslateTextResponse (Maybe [AppliedTerminology])

-- | The response's http status code.
translateTextResponse_httpStatus :: Lens' TranslateTextResponse Int

-- | The translated text.
translateTextResponse_translatedText :: Lens' TranslateTextResponse Text

-- | The language code for the language of the source text.
translateTextResponse_sourceLanguageCode :: Lens' TranslateTextResponse Text

-- | The language code for the language of the target text.
translateTextResponse_targetLanguageCode :: Lens' TranslateTextResponse Text

-- | The encryption key for the custom terminology being imported.
importTerminology_encryptionKey :: Lens' ImportTerminology (Maybe EncryptionKey)

-- | The description of the custom terminology being imported.
importTerminology_description :: Lens' ImportTerminology (Maybe Text)

-- | The name of the custom terminology being imported.
importTerminology_name :: Lens' ImportTerminology Text

-- | The merge strategy of the custom terminology being imported.
--   Currently, only the OVERWRITE merge strategy is supported. In this
--   case, the imported terminology will overwrite an existing terminology
--   of the same name.
importTerminology_mergeStrategy :: Lens' ImportTerminology MergeStrategy

-- | The terminology data for the custom terminology being imported.
importTerminology_terminologyData :: Lens' ImportTerminology TerminologyData

-- | The properties of the custom terminology being imported.
importTerminologyResponse_terminologyProperties :: Lens' ImportTerminologyResponse (Maybe TerminologyProperties)

-- | The response's http status code.
importTerminologyResponse_httpStatus :: Lens' ImportTerminologyResponse Int

-- | The job ID of the job to be stopped.
stopTextTranslationJob_jobId :: Lens' StopTextTranslationJob Text

-- | The job ID of the stopped batch translation job.
stopTextTranslationJobResponse_jobId :: Lens' StopTextTranslationJobResponse (Maybe Text)

-- | The status of the designated job. Upon successful completion, the
--   job's status will be <tt>STOPPED</tt>.
stopTextTranslationJobResponse_jobStatus :: Lens' StopTextTranslationJobResponse (Maybe JobStatus)

-- | The response's http status code.
stopTextTranslationJobResponse_httpStatus :: Lens' StopTextTranslationJobResponse Int

-- | The name of the custom terminology being deleted.
deleteTerminology_name :: Lens' DeleteTerminology Text

-- | The token to request the next page of results.
listTextTranslationJobs_nextToken :: Lens' ListTextTranslationJobs (Maybe Text)

-- | The parameters that specify which batch translation jobs to retrieve.
--   Filters include job name, job status, and submission time. You can
--   only set one filter at a time.
listTextTranslationJobs_filter :: Lens' ListTextTranslationJobs (Maybe TextTranslationJobFilter)

-- | The maximum number of results to return in each page. The default
--   value is 100.
listTextTranslationJobs_maxResults :: Lens' ListTextTranslationJobs (Maybe Natural)

-- | A list containing the properties of each job that is returned.
listTextTranslationJobsResponse_textTranslationJobPropertiesList :: Lens' ListTextTranslationJobsResponse (Maybe [TextTranslationJobProperties])

-- | The token to use to retreive the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listTextTranslationJobsResponse_nextToken :: Lens' ListTextTranslationJobsResponse (Maybe Text)

-- | The response's http status code.
listTextTranslationJobsResponse_httpStatus :: Lens' ListTextTranslationJobsResponse Int

-- | The name of the batch translation job to be performed.
startTextTranslationJob_jobName :: Lens' StartTextTranslationJob (Maybe Text)

-- | The names of the parallel data resources to use in the batch
--   translation job. For a list of available parallel data resources, use
--   the ListParallelData operation.
startTextTranslationJob_parallelDataNames :: Lens' StartTextTranslationJob (Maybe [Text])

-- | The name of the terminology to use in the batch translation job. For a
--   list of available terminologies, use the ListTerminologies operation.
startTextTranslationJob_terminologyNames :: Lens' StartTextTranslationJob (Maybe [Text])

-- | Specifies the format and S3 location of the input documents for the
--   translation job.
startTextTranslationJob_inputDataConfig :: Lens' StartTextTranslationJob InputDataConfig

-- | Specifies the S3 folder to which your job output will be saved.
startTextTranslationJob_outputDataConfig :: Lens' StartTextTranslationJob OutputDataConfig

-- | The Amazon Resource Name (ARN) of an AWS Identity Access and
--   Management (IAM) role that grants Amazon Translate read access to your
--   input data. For more nformation, see identity-and-access-management.
startTextTranslationJob_dataAccessRoleArn :: Lens' StartTextTranslationJob Text

-- | The language code of the input language. For a list of language codes,
--   see what-is-languages.
--   
--   Amazon Translate does not automatically detect a source language
--   during batch translation jobs.
startTextTranslationJob_sourceLanguageCode :: Lens' StartTextTranslationJob Text

-- | The language code of the output language.
startTextTranslationJob_targetLanguageCodes :: Lens' StartTextTranslationJob (NonEmpty Text)

-- | A unique identifier for the request. This token is auto-generated when
--   using the Amazon Translate SDK.
startTextTranslationJob_clientToken :: Lens' StartTextTranslationJob Text

-- | The identifier generated for the job. To get the status of a job, use
--   this ID with the DescribeTextTranslationJob operation.
startTextTranslationJobResponse_jobId :: Lens' StartTextTranslationJobResponse (Maybe Text)

-- | The status of the job. Possible values include:
--   
--   <ul>
--   <li><tt>SUBMITTED</tt> - The job has been received and is queued for
--   processing.</li>
--   <li><tt>IN_PROGRESS</tt> - Amazon Translate is processing the
--   job.</li>
--   <li><tt>COMPLETED</tt> - The job was successfully completed and the
--   output is available.</li>
--   <li><tt>COMPLETED_WITH_ERROR</tt> - The job was completed with errors.
--   The errors can be analyzed in the job's output.</li>
--   <li><tt>FAILED</tt> - The job did not complete. To get details, use
--   the DescribeTextTranslationJob operation.</li>
--   <li><tt>STOP_REQUESTED</tt> - The user who started the job has
--   requested that it be stopped.</li>
--   <li><tt>STOPPED</tt> - The job has been stopped.</li>
--   </ul>
startTextTranslationJobResponse_jobStatus :: Lens' StartTextTranslationJobResponse (Maybe JobStatus)

-- | The response's http status code.
startTextTranslationJobResponse_httpStatus :: Lens' StartTextTranslationJobResponse Int

-- | A string that specifies the next page of results to return in a
--   paginated response.
listParallelData_nextToken :: Lens' ListParallelData (Maybe Text)

-- | The maximum number of parallel data resources returned for each
--   request.
listParallelData_maxResults :: Lens' ListParallelData (Maybe Natural)

-- | The properties of the parallel data resources returned by this
--   request.
listParallelDataResponse_parallelDataPropertiesList :: Lens' ListParallelDataResponse (Maybe [ParallelDataProperties])

-- | The string to use in a subsequent request to get the next page of
--   results in a paginated response. This value is null if there are no
--   additional pages.
listParallelDataResponse_nextToken :: Lens' ListParallelDataResponse (Maybe Text)

-- | The response's http status code.
listParallelDataResponse_httpStatus :: Lens' ListParallelDataResponse Int

-- | The specific terms of the custom terminology applied to the input text
--   by Amazon Translate for the translated text response. A maximum of 250
--   terms will be returned, and the specific terms applied will be the
--   first 250 terms in the source text.
appliedTerminology_terms :: Lens' AppliedTerminology (Maybe [Term])

-- | The name of the custom terminology applied to the input text by Amazon
--   Translate for the translated text response.
appliedTerminology_name :: Lens' AppliedTerminology (Maybe Text)

-- | The type of encryption key used by Amazon Translate to encrypt custom
--   terminologies.
encryptionKey_type :: Lens' EncryptionKey EncryptionKeyType

-- | The Amazon Resource Name (ARN) of the encryption key being used to
--   encrypt the custom terminology.
encryptionKey_id :: Lens' EncryptionKey Text

-- | The URI of the AWS S3 folder that contains the input file. The folder
--   must be in the same Region as the API endpoint you are calling.
inputDataConfig_s3Uri :: Lens' InputDataConfig Text

-- | Describes the format of the data that you submit to Amazon Translate
--   as input. You can specify one of the following multipurpose internet
--   mail extension (MIME) types:
--   
--   <ul>
--   <li><tt>text/html</tt>: The input data consists of one or more HTML
--   files. Amazon Translate translates only the text that resides in the
--   <tt>html</tt> element in each file.</li>
--   <li><tt>text/plain</tt>: The input data consists of one or more
--   unformatted text files. Amazon Translate translates every character in
--   this type of input.</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.wordprocessingml.document</tt>:
--   The input data consists of one or more Word documents (.docx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.presentationml.presentation</tt>:
--   The input data consists of one or more PowerPoint Presentation files
--   (.pptx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</tt>:
--   The input data consists of one or more Excel Workbook files
--   (.xlsx).</li>
--   </ul>
--   
--   If you structure your input data as HTML, ensure that you set this
--   parameter to <tt>text/html</tt>. By doing so, you cut costs by
--   limiting the translation to the contents of the <tt>html</tt> element
--   in each file. Otherwise, if you set this parameter to
--   <tt>text/plain</tt>, your costs will cover the translation of every
--   character.
inputDataConfig_contentType :: Lens' InputDataConfig Text

-- | The number of documents successfully processed during a translation
--   job.
jobDetails_translatedDocumentsCount :: Lens' JobDetails (Maybe Int)

-- | The number of documents that could not be processed during a
--   translation job.
jobDetails_documentsWithErrorsCount :: Lens' JobDetails (Maybe Int)

-- | The number of documents used as input in a translation job.
jobDetails_inputDocumentsCount :: Lens' JobDetails (Maybe Int)

-- | The URI of the S3 folder that contains a translation job's output
--   file. The folder must be in the same Region as the API endpoint that
--   you are calling.
outputDataConfig_s3Uri :: Lens' OutputDataConfig Text

-- | The URI of the Amazon S3 folder that contains the parallel data input
--   file. The folder must be in the same Region as the API endpoint you
--   are calling.
parallelDataConfig_s3Uri :: Lens' ParallelDataConfig Text

-- | The format of the parallel data input file.
parallelDataConfig_format :: Lens' ParallelDataConfig ParallelDataFormat

-- | Describes the repository that contains the parallel data input file.
parallelDataDataLocation_repositoryType :: Lens' ParallelDataDataLocation Text

-- | The Amazon S3 location of the parallel data input file. The location
--   is returned as a presigned URL to that has a 30 minute expiration.
parallelDataDataLocation_location :: Lens' ParallelDataDataLocation Text

-- | The status of the parallel data resource. When the parallel data is
--   ready for you to use, the status is <tt>ACTIVE</tt>.
parallelDataProperties_status :: Lens' ParallelDataProperties (Maybe ParallelDataStatus)

-- | The time at which the parallel data resource was last updated.
parallelDataProperties_lastUpdatedAt :: Lens' ParallelDataProperties (Maybe UTCTime)

-- | The number of records successfully imported from the parallel data
--   input file.
parallelDataProperties_importedRecordCount :: Lens' ParallelDataProperties (Maybe Integer)

-- | The Amazon Resource Name (ARN) of the parallel data resource.
parallelDataProperties_arn :: Lens' ParallelDataProperties (Maybe Text)

-- | The language codes for the target languages available in the parallel
--   data file. All possible target languages are returned as an array.
parallelDataProperties_targetLanguageCodes :: Lens' ParallelDataProperties (Maybe [Text])

-- | The time at which the parallel data resource was created.
parallelDataProperties_createdAt :: Lens' ParallelDataProperties (Maybe UTCTime)

-- | The number of records unsuccessfully imported from the parallel data
--   input file.
parallelDataProperties_failedRecordCount :: Lens' ParallelDataProperties (Maybe Integer)

-- | The number of UTF-8 characters that Amazon Translate imported from the
--   parallel data input file. This number includes only the characters in
--   your translation examples. It does not include characters that are
--   used to format your file. For example, if you provided a Translation
--   Memory Exchange (.tmx) file, this number does not include the tags.
parallelDataProperties_importedDataSize :: Lens' ParallelDataProperties (Maybe Integer)

-- | The custom name assigned to the parallel data resource.
parallelDataProperties_name :: Lens' ParallelDataProperties (Maybe Text)

-- | The source language of the translations in the parallel data file.
parallelDataProperties_sourceLanguageCode :: Lens' ParallelDataProperties (Maybe Text)

-- | The time that the most recent update was attempted.
parallelDataProperties_latestUpdateAttemptAt :: Lens' ParallelDataProperties (Maybe UTCTime)

-- | Undocumented member.
parallelDataProperties_encryptionKey :: Lens' ParallelDataProperties (Maybe EncryptionKey)

-- | The status of the most recent update attempt for the parallel data
--   resource.
parallelDataProperties_latestUpdateAttemptStatus :: Lens' ParallelDataProperties (Maybe ParallelDataStatus)

-- | Additional information from Amazon Translate about the parallel data
--   resource.
parallelDataProperties_message :: Lens' ParallelDataProperties (Maybe Text)

-- | The description assigned to the parallel data resource.
parallelDataProperties_description :: Lens' ParallelDataProperties (Maybe Text)

-- | The number of items in the input file that Amazon Translate skipped
--   when you created or updated the parallel data resource. For example,
--   Amazon Translate skips empty records, empty target texts, and empty
--   lines.
parallelDataProperties_skippedRecordCount :: Lens' ParallelDataProperties (Maybe Integer)

-- | Specifies the format and S3 location of the parallel data input file.
parallelDataProperties_parallelDataConfig :: Lens' ParallelDataProperties (Maybe ParallelDataConfig)

-- | The target text of the term being translated by the custom
--   terminology.
term_targetText :: Lens' Term (Maybe Text)

-- | The source text of the term being translated by the custom
--   terminology.
term_sourceText :: Lens' Term (Maybe Text)

-- | The file containing the custom terminology data. Your version of the
--   AWS SDK performs a Base64-encoding on this field before sending a
--   request to the AWS service. Users of the SDK should not perform
--   Base64-encoding themselves.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
terminologyData_file :: Lens' TerminologyData ByteString

-- | The data format of the custom terminology. Either CSV or TMX.
terminologyData_format :: Lens' TerminologyData TerminologyDataFormat

-- | The repository type for the custom terminology data.
terminologyDataLocation_repositoryType :: Lens' TerminologyDataLocation Text

-- | The location of the custom terminology data.
terminologyDataLocation_location :: Lens' TerminologyDataLocation Text

-- | The size of the file used when importing a custom terminology.
terminologyProperties_sizeBytes :: Lens' TerminologyProperties (Maybe Int)

-- | The time at which the custom terminology was last update, based on the
--   timestamp.
terminologyProperties_lastUpdatedAt :: Lens' TerminologyProperties (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the custom terminology.
terminologyProperties_arn :: Lens' TerminologyProperties (Maybe Text)

-- | The language codes for the target languages available with the custom
--   terminology file. All possible target languages are returned in array.
terminologyProperties_targetLanguageCodes :: Lens' TerminologyProperties (Maybe [Text])

-- | The time at which the custom terminology was created, based on the
--   timestamp.
terminologyProperties_createdAt :: Lens' TerminologyProperties (Maybe UTCTime)

-- | The name of the custom terminology.
terminologyProperties_name :: Lens' TerminologyProperties (Maybe Text)

-- | The language code for the source text of the translation request for
--   which the custom terminology is being used.
terminologyProperties_sourceLanguageCode :: Lens' TerminologyProperties (Maybe Text)

-- | The number of terms included in the custom terminology.
terminologyProperties_termCount :: Lens' TerminologyProperties (Maybe Int)

-- | The encryption key for the custom terminology.
terminologyProperties_encryptionKey :: Lens' TerminologyProperties (Maybe EncryptionKey)

-- | The description of the custom terminology properties.
terminologyProperties_description :: Lens' TerminologyProperties (Maybe Text)

-- | Filters the list of jobs based on the time that the job was submitted
--   for processing and returns only the jobs submitted before the
--   specified time. Jobs are returned in ascending order, oldest to
--   newest.
textTranslationJobFilter_submittedBeforeTime :: Lens' TextTranslationJobFilter (Maybe UTCTime)

-- | Filters the list of jobs based on the time that the job was submitted
--   for processing and returns only the jobs submitted after the specified
--   time. Jobs are returned in descending order, newest to oldest.
textTranslationJobFilter_submittedAfterTime :: Lens' TextTranslationJobFilter (Maybe UTCTime)

-- | Filters the list of jobs by name.
textTranslationJobFilter_jobName :: Lens' TextTranslationJobFilter (Maybe Text)

-- | Filters the list of jobs based by job status.
textTranslationJobFilter_jobStatus :: Lens' TextTranslationJobFilter (Maybe JobStatus)

-- | The ID of the translation job.
textTranslationJobProperties_jobId :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The language code of the language of the target text. The language
--   must be a language supported by Amazon Translate.
textTranslationJobProperties_targetLanguageCodes :: Lens' TextTranslationJobProperties (Maybe (NonEmpty Text))

-- | The user-defined name of the translation job.
textTranslationJobProperties_jobName :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The time at which the translation job was submitted.
textTranslationJobProperties_submittedTime :: Lens' TextTranslationJobProperties (Maybe UTCTime)

-- | The input configuration properties that were specified when the job
--   was requested.
textTranslationJobProperties_inputDataConfig :: Lens' TextTranslationJobProperties (Maybe InputDataConfig)

-- | A list containing the names of the parallel data resources applied to
--   the translation job.
textTranslationJobProperties_parallelDataNames :: Lens' TextTranslationJobProperties (Maybe [Text])

-- | A list containing the names of the terminologies applied to a
--   translation job. Only one terminology can be applied per
--   StartTextTranslationJob request at this time.
textTranslationJobProperties_terminologyNames :: Lens' TextTranslationJobProperties (Maybe [Text])

-- | The language code of the language of the source text. The language
--   must be a language supported by Amazon Translate.
textTranslationJobProperties_sourceLanguageCode :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The time at which the translation job ended.
textTranslationJobProperties_endTime :: Lens' TextTranslationJobProperties (Maybe UTCTime)

-- | The output configuration properties that were specified when the job
--   was requested.
textTranslationJobProperties_outputDataConfig :: Lens' TextTranslationJobProperties (Maybe OutputDataConfig)

-- | The number of documents successfully and unsuccessfully processed
--   during the translation job.
textTranslationJobProperties_jobDetails :: Lens' TextTranslationJobProperties (Maybe JobDetails)

-- | The Amazon Resource Name (ARN) of an AWS Identity Access and
--   Management (IAM) role that granted Amazon Translate read access to the
--   job's input data.
textTranslationJobProperties_dataAccessRoleArn :: Lens' TextTranslationJobProperties (Maybe Text)

-- | The status of the translation job.
textTranslationJobProperties_jobStatus :: Lens' TextTranslationJobProperties (Maybe JobStatus)

-- | An explanation of any errors that may have occured during the
--   translation job.
textTranslationJobProperties_message :: Lens' TextTranslationJobProperties (Maybe Text)


module Amazonka.Translate.Waiters


-- | Derived from API version <tt>2017-07-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Provides translation between one source language and another of the
--   same set of languages.
module Amazonka.Translate

-- | API version <tt>2017-07-01</tt> of the Amazon Translate SDK
--   configuration.
defaultService :: Service

-- | The request that you made is invalid. Check your request to determine
--   why it's invalid and then retry the request.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Translate does not support translation from the language of the
--   source text into the requested target language. For more information,
--   see how-to-error-msg.
_UnsupportedLanguagePairException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The confidence that Amazon Comprehend accurately detected the source
--   language is low. If a low confidence level is acceptable for your
--   application, you can use the language in the exception to call Amazon
--   Translate again. For more information, see the
--   <a>DetectDominantLanguage</a> operation in the <i>Amazon Comprehend
--   Developer Guide</i>.
_DetectedLanguageLowConfidenceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | There was a conflict processing the request. Try your request again.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value of the parameter is invalid. Review the value of the
--   parameter you are using to correct it, and then retry your operation.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have made too many requests within a short period of time. Wait
--   for a short time and then try your request again.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Another modification is being made. That modification must complete
--   before you can make your change.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal server error occurred. Retry your request.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Amazon Translate service is temporarily unavailable. Please wait a
--   bit and then retry your request.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The filter specified for the operation is invalid. Specify a different
--   filter.
_InvalidFilterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource you are looking for has not been found. Review the
--   resource you're looking for and see if a different resource will
--   accomplish your needs before retrying the revised request.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The size of the text you submitted exceeds the size limit. Reduce the
--   size of the text or use a smaller document and then retry your
--   request.
_TextSizeLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified limit has been exceeded. Review your request and retry
--   it with a quantity below the stated limit.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newDescribeTextTranslationJob</a> smart constructor.
data DescribeTextTranslationJob
DescribeTextTranslationJob' :: Text -> DescribeTextTranslationJob

-- | Create a value of <a>DescribeTextTranslationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:DescribeTextTranslationJob'</a>,
--   <a>describeTextTranslationJob_jobId</a> - The identifier that Amazon
--   Translate generated for the job. The StartTextTranslationJob operation
--   returns this identifier in its response.
newDescribeTextTranslationJob :: Text -> DescribeTextTranslationJob

-- | <i>See:</i> <a>newDescribeTextTranslationJobResponse</a> smart
--   constructor.
data DescribeTextTranslationJobResponse
DescribeTextTranslationJobResponse' :: Maybe TextTranslationJobProperties -> Int -> DescribeTextTranslationJobResponse

-- | Create a value of <a>DescribeTextTranslationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:textTranslationJobProperties:DescribeTextTranslationJobResponse'</a>,
--   <a>describeTextTranslationJobResponse_textTranslationJobProperties</a>
--   - An object that contains the properties associated with an
--   asynchronous batch translation job.
--   
--   <a>$sel:httpStatus:DescribeTextTranslationJobResponse'</a>,
--   <a>describeTextTranslationJobResponse_httpStatus</a> - The response's
--   http status code.
newDescribeTextTranslationJobResponse :: Int -> DescribeTextTranslationJobResponse

-- | <i>See:</i> <a>newListTerminologies</a> smart constructor.
data ListTerminologies
ListTerminologies' :: Maybe Text -> Maybe Natural -> ListTerminologies

-- | Create a value of <a>ListTerminologies</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTerminologies'</a>,
--   <a>listTerminologies_nextToken</a> - If the result of the request to
--   ListTerminologies was truncated, include the NextToken to fetch the
--   next group of custom terminologies.
--   
--   <a>$sel:maxResults:ListTerminologies'</a>,
--   <a>listTerminologies_maxResults</a> - The maximum number of custom
--   terminologies returned per list request.
newListTerminologies :: ListTerminologies

-- | <i>See:</i> <a>newListTerminologiesResponse</a> smart constructor.
data ListTerminologiesResponse
ListTerminologiesResponse' :: Maybe [TerminologyProperties] -> Maybe Text -> Int -> ListTerminologiesResponse

-- | Create a value of <a>ListTerminologiesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:terminologyPropertiesList:ListTerminologiesResponse'</a>,
--   <a>listTerminologiesResponse_terminologyPropertiesList</a> - The
--   properties list of the custom terminologies returned on the list
--   request.
--   
--   <a>$sel:nextToken:ListTerminologies'</a>,
--   <a>listTerminologiesResponse_nextToken</a> - If the response to the
--   ListTerminologies was truncated, the NextToken fetches the next group
--   of custom terminologies.
--   
--   <a>$sel:httpStatus:ListTerminologiesResponse'</a>,
--   <a>listTerminologiesResponse_httpStatus</a> - The response's http
--   status code.
newListTerminologiesResponse :: Int -> ListTerminologiesResponse

-- | <i>See:</i> <a>newCreateParallelData</a> smart constructor.
data CreateParallelData
CreateParallelData' :: Maybe EncryptionKey -> Maybe Text -> Text -> ParallelDataConfig -> Text -> CreateParallelData

-- | Create a value of <a>CreateParallelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKey:CreateParallelData'</a>,
--   <a>createParallelData_encryptionKey</a> - Undocumented member.
--   
--   <a>$sel:description:CreateParallelData'</a>,
--   <a>createParallelData_description</a> - A custom description for the
--   parallel data resource in Amazon Translate.
--   
--   <a>$sel:name:CreateParallelData'</a>, <a>createParallelData_name</a> -
--   A custom name for the parallel data resource in Amazon Translate. You
--   must assign a name that is unique in the account and region.
--   
--   <a>$sel:parallelDataConfig:CreateParallelData'</a>,
--   <a>createParallelData_parallelDataConfig</a> - Specifies the format
--   and S3 location of the parallel data input file.
--   
--   <a>$sel:clientToken:CreateParallelData'</a>,
--   <a>createParallelData_clientToken</a> - A unique identifier for the
--   request. This token is automatically generated when you use Amazon
--   Translate through an AWS SDK.
newCreateParallelData :: Text -> ParallelDataConfig -> Text -> CreateParallelData

-- | <i>See:</i> <a>newCreateParallelDataResponse</a> smart constructor.
data CreateParallelDataResponse
CreateParallelDataResponse' :: Maybe ParallelDataStatus -> Maybe Text -> Int -> CreateParallelDataResponse

-- | Create a value of <a>CreateParallelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateParallelDataResponse'</a>,
--   <a>createParallelDataResponse_status</a> - The status of the parallel
--   data resource. When the resource is ready for you to use, the status
--   is <tt>ACTIVE</tt>.
--   
--   <a>$sel:name:CreateParallelData'</a>,
--   <a>createParallelDataResponse_name</a> - The custom name that you
--   assigned to the parallel data resource.
--   
--   <a>$sel:httpStatus:CreateParallelDataResponse'</a>,
--   <a>createParallelDataResponse_httpStatus</a> - The response's http
--   status code.
newCreateParallelDataResponse :: Int -> CreateParallelDataResponse

-- | <i>See:</i> <a>newUpdateParallelData</a> smart constructor.
data UpdateParallelData
UpdateParallelData' :: Maybe Text -> Text -> ParallelDataConfig -> Text -> UpdateParallelData

-- | Create a value of <a>UpdateParallelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateParallelData'</a>,
--   <a>updateParallelData_description</a> - A custom description for the
--   parallel data resource in Amazon Translate.
--   
--   <a>$sel:name:UpdateParallelData'</a>, <a>updateParallelData_name</a> -
--   The name of the parallel data resource being updated.
--   
--   <a>$sel:parallelDataConfig:UpdateParallelData'</a>,
--   <a>updateParallelData_parallelDataConfig</a> - Specifies the format
--   and S3 location of the parallel data input file.
--   
--   <a>$sel:clientToken:UpdateParallelData'</a>,
--   <a>updateParallelData_clientToken</a> - A unique identifier for the
--   request. This token is automatically generated when you use Amazon
--   Translate through an AWS SDK.
newUpdateParallelData :: Text -> ParallelDataConfig -> Text -> UpdateParallelData

-- | <i>See:</i> <a>newUpdateParallelDataResponse</a> smart constructor.
data UpdateParallelDataResponse
UpdateParallelDataResponse' :: Maybe ParallelDataStatus -> Maybe Text -> Maybe POSIX -> Maybe ParallelDataStatus -> Int -> UpdateParallelDataResponse

-- | Create a value of <a>UpdateParallelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateParallelDataResponse'</a>,
--   <a>updateParallelDataResponse_status</a> - The status of the parallel
--   data resource that you are attempting to update. Your update request
--   is accepted only if this status is either <tt>ACTIVE</tt> or
--   <tt>FAILED</tt>.
--   
--   <a>$sel:name:UpdateParallelData'</a>,
--   <a>updateParallelDataResponse_name</a> - The name of the parallel data
--   resource being updated.
--   
--   <a>$sel:latestUpdateAttemptAt:UpdateParallelDataResponse'</a>,
--   <a>updateParallelDataResponse_latestUpdateAttemptAt</a> - The time
--   that the most recent update was attempted.
--   
--   <a>$sel:latestUpdateAttemptStatus:UpdateParallelDataResponse'</a>,
--   <a>updateParallelDataResponse_latestUpdateAttemptStatus</a> - The
--   status of the parallel data update attempt. When the updated parallel
--   data resource is ready for you to use, the status is <tt>ACTIVE</tt>.
--   
--   <a>$sel:httpStatus:UpdateParallelDataResponse'</a>,
--   <a>updateParallelDataResponse_httpStatus</a> - The response's http
--   status code.
newUpdateParallelDataResponse :: Int -> UpdateParallelDataResponse

-- | <i>See:</i> <a>newDeleteParallelData</a> smart constructor.
data DeleteParallelData
DeleteParallelData' :: Text -> DeleteParallelData

-- | Create a value of <a>DeleteParallelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteParallelData'</a>, <a>deleteParallelData_name</a> -
--   The name of the parallel data resource that is being deleted.
newDeleteParallelData :: Text -> DeleteParallelData

-- | <i>See:</i> <a>newDeleteParallelDataResponse</a> smart constructor.
data DeleteParallelDataResponse
DeleteParallelDataResponse' :: Maybe ParallelDataStatus -> Maybe Text -> Int -> DeleteParallelDataResponse

-- | Create a value of <a>DeleteParallelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:DeleteParallelDataResponse'</a>,
--   <a>deleteParallelDataResponse_status</a> - The status of the parallel
--   data deletion.
--   
--   <a>$sel:name:DeleteParallelData'</a>,
--   <a>deleteParallelDataResponse_name</a> - The name of the parallel data
--   resource that is being deleted.
--   
--   <a>$sel:httpStatus:DeleteParallelDataResponse'</a>,
--   <a>deleteParallelDataResponse_httpStatus</a> - The response's http
--   status code.
newDeleteParallelDataResponse :: Int -> DeleteParallelDataResponse

-- | <i>See:</i> <a>newGetParallelData</a> smart constructor.
data GetParallelData
GetParallelData' :: Text -> GetParallelData

-- | Create a value of <a>GetParallelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetParallelData'</a>, <a>getParallelData_name</a> - The
--   name of the parallel data resource that is being retrieved.
newGetParallelData :: Text -> GetParallelData

-- | <i>See:</i> <a>newGetParallelDataResponse</a> smart constructor.
data GetParallelDataResponse
GetParallelDataResponse' :: Maybe ParallelDataProperties -> Maybe ParallelDataDataLocation -> Maybe ParallelDataDataLocation -> Maybe ParallelDataDataLocation -> Int -> GetParallelDataResponse

-- | Create a value of <a>GetParallelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parallelDataProperties:GetParallelDataResponse'</a>,
--   <a>getParallelDataResponse_parallelDataProperties</a> - The properties
--   of the parallel data resource that is being retrieved.
--   
--   <a>$sel:dataLocation:GetParallelDataResponse'</a>,
--   <a>getParallelDataResponse_dataLocation</a> - The location of the most
--   recent parallel data input file that was successfully imported into
--   Amazon Translate. The location is returned as a presigned URL that has
--   a 30 minute expiration.
--   
--   <a>$sel:auxiliaryDataLocation:GetParallelDataResponse'</a>,
--   <a>getParallelDataResponse_auxiliaryDataLocation</a> - The Amazon S3
--   location of a file that provides any errors or warnings that were
--   produced by your input file. This file was created when Amazon
--   Translate attempted to create a parallel data resource. The location
--   is returned as a presigned URL to that has a 30 minute expiration.
--   
--   
--   <a>$sel:latestUpdateAttemptAuxiliaryDataLocation:GetParallelDataResponse'</a>,
--   <a>getParallelDataResponse_latestUpdateAttemptAuxiliaryDataLocation</a>
--   - The Amazon S3 location of a file that provides any errors or
--   warnings that were produced by your input file. This file was created
--   when Amazon Translate attempted to update a parallel data resource.
--   The location is returned as a presigned URL to that has a 30 minute
--   expiration.
--   
--   <a>$sel:httpStatus:GetParallelDataResponse'</a>,
--   <a>getParallelDataResponse_httpStatus</a> - The response's http status
--   code.
newGetParallelDataResponse :: Int -> GetParallelDataResponse

-- | <i>See:</i> <a>newGetTerminology</a> smart constructor.
data GetTerminology
GetTerminology' :: Text -> TerminologyDataFormat -> GetTerminology

-- | Create a value of <a>GetTerminology</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetTerminology'</a>, <a>getTerminology_name</a> - The
--   name of the custom terminology being retrieved.
--   
--   <a>$sel:terminologyDataFormat:GetTerminology'</a>,
--   <a>getTerminology_terminologyDataFormat</a> - The data format of the
--   custom terminology being retrieved, either CSV or TMX.
newGetTerminology :: Text -> TerminologyDataFormat -> GetTerminology

-- | <i>See:</i> <a>newGetTerminologyResponse</a> smart constructor.
data GetTerminologyResponse
GetTerminologyResponse' :: Maybe TerminologyProperties -> Maybe TerminologyDataLocation -> Int -> GetTerminologyResponse

-- | Create a value of <a>GetTerminologyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:terminologyProperties:GetTerminologyResponse'</a>,
--   <a>getTerminologyResponse_terminologyProperties</a> - The properties
--   of the custom terminology being retrieved.
--   
--   <a>$sel:terminologyDataLocation:GetTerminologyResponse'</a>,
--   <a>getTerminologyResponse_terminologyDataLocation</a> - The data
--   location of the custom terminology being retrieved. The custom
--   terminology file is returned in a presigned url that has a 30 minute
--   expiration.
--   
--   <a>$sel:httpStatus:GetTerminologyResponse'</a>,
--   <a>getTerminologyResponse_httpStatus</a> - The response's http status
--   code.
newGetTerminologyResponse :: Int -> GetTerminologyResponse

-- | <i>See:</i> <a>newTranslateText</a> smart constructor.
data TranslateText
TranslateText' :: Maybe [Text] -> Text -> Text -> Text -> TranslateText

-- | Create a value of <a>TranslateText</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:terminologyNames:TranslateText'</a>,
--   <a>translateText_terminologyNames</a> - The name of the terminology
--   list file to be used in the TranslateText request. You can use 1
--   terminology list at most in a <tt>TranslateText</tt> request.
--   Terminology lists can contain a maximum of 256 terms.
--   
--   <a>$sel:text:TranslateText'</a>, <a>translateText_text</a> - The text
--   to translate. The text string can be a maximum of 5,000 bytes long.
--   Depending on your character set, this may be fewer than 5,000
--   characters.
--   
--   <a>$sel:sourceLanguageCode:TranslateText'</a>,
--   <a>translateText_sourceLanguageCode</a> - The language code for the
--   language of the source text. The language must be a language supported
--   by Amazon Translate. For a list of language codes, see
--   what-is-languages.
--   
--   To have Amazon Translate determine the source language of your text,
--   you can specify <tt>auto</tt> in the <tt>SourceLanguageCode</tt>
--   field. If you specify <tt>auto</tt>, Amazon Translate will call
--   <a>Amazon Comprehend</a> to determine the source language.
--   
--   <a>$sel:targetLanguageCode:TranslateText'</a>,
--   <a>translateText_targetLanguageCode</a> - The language code requested
--   for the language of the target text. The language must be a language
--   supported by Amazon Translate.
newTranslateText :: Text -> Text -> Text -> TranslateText

-- | <i>See:</i> <a>newTranslateTextResponse</a> smart constructor.
data TranslateTextResponse
TranslateTextResponse' :: Maybe [AppliedTerminology] -> Int -> Text -> Text -> Text -> TranslateTextResponse

-- | Create a value of <a>TranslateTextResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:appliedTerminologies:TranslateTextResponse'</a>,
--   <a>translateTextResponse_appliedTerminologies</a> - The names of the
--   custom terminologies applied to the input text by Amazon Translate for
--   the translated text response.
--   
--   <a>$sel:httpStatus:TranslateTextResponse'</a>,
--   <a>translateTextResponse_httpStatus</a> - The response's http status
--   code.
--   
--   <a>$sel:translatedText:TranslateTextResponse'</a>,
--   <a>translateTextResponse_translatedText</a> - The translated text.
--   
--   <a>$sel:sourceLanguageCode:TranslateText'</a>,
--   <a>translateTextResponse_sourceLanguageCode</a> - The language code
--   for the language of the source text.
--   
--   <a>$sel:targetLanguageCode:TranslateText'</a>,
--   <a>translateTextResponse_targetLanguageCode</a> - The language code
--   for the language of the target text.
newTranslateTextResponse :: Int -> Text -> Text -> Text -> TranslateTextResponse

-- | <i>See:</i> <a>newImportTerminology</a> smart constructor.
data ImportTerminology
ImportTerminology' :: Maybe EncryptionKey -> Maybe Text -> Text -> MergeStrategy -> TerminologyData -> ImportTerminology

-- | Create a value of <a>ImportTerminology</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:encryptionKey:ImportTerminology'</a>,
--   <a>importTerminology_encryptionKey</a> - The encryption key for the
--   custom terminology being imported.
--   
--   <a>$sel:description:ImportTerminology'</a>,
--   <a>importTerminology_description</a> - The description of the custom
--   terminology being imported.
--   
--   <a>$sel:name:ImportTerminology'</a>, <a>importTerminology_name</a> -
--   The name of the custom terminology being imported.
--   
--   <a>$sel:mergeStrategy:ImportTerminology'</a>,
--   <a>importTerminology_mergeStrategy</a> - The merge strategy of the
--   custom terminology being imported. Currently, only the OVERWRITE merge
--   strategy is supported. In this case, the imported terminology will
--   overwrite an existing terminology of the same name.
--   
--   <a>$sel:terminologyData:ImportTerminology'</a>,
--   <a>importTerminology_terminologyData</a> - The terminology data for
--   the custom terminology being imported.
newImportTerminology :: Text -> MergeStrategy -> TerminologyData -> ImportTerminology

-- | <i>See:</i> <a>newImportTerminologyResponse</a> smart constructor.
data ImportTerminologyResponse
ImportTerminologyResponse' :: Maybe TerminologyProperties -> Int -> ImportTerminologyResponse

-- | Create a value of <a>ImportTerminologyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:terminologyProperties:ImportTerminologyResponse'</a>,
--   <a>importTerminologyResponse_terminologyProperties</a> - The
--   properties of the custom terminology being imported.
--   
--   <a>$sel:httpStatus:ImportTerminologyResponse'</a>,
--   <a>importTerminologyResponse_httpStatus</a> - The response's http
--   status code.
newImportTerminologyResponse :: Int -> ImportTerminologyResponse

-- | <i>See:</i> <a>newStopTextTranslationJob</a> smart constructor.
data StopTextTranslationJob
StopTextTranslationJob' :: Text -> StopTextTranslationJob

-- | Create a value of <a>StopTextTranslationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StopTextTranslationJob'</a>,
--   <a>stopTextTranslationJob_jobId</a> - The job ID of the job to be
--   stopped.
newStopTextTranslationJob :: Text -> StopTextTranslationJob

-- | <i>See:</i> <a>newStopTextTranslationJobResponse</a> smart
--   constructor.
data StopTextTranslationJobResponse
StopTextTranslationJobResponse' :: Maybe Text -> Maybe JobStatus -> Int -> StopTextTranslationJobResponse

-- | Create a value of <a>StopTextTranslationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StopTextTranslationJob'</a>,
--   <a>stopTextTranslationJobResponse_jobId</a> - The job ID of the
--   stopped batch translation job.
--   
--   <a>$sel:jobStatus:StopTextTranslationJobResponse'</a>,
--   <a>stopTextTranslationJobResponse_jobStatus</a> - The status of the
--   designated job. Upon successful completion, the job's status will be
--   <tt>STOPPED</tt>.
--   
--   <a>$sel:httpStatus:StopTextTranslationJobResponse'</a>,
--   <a>stopTextTranslationJobResponse_httpStatus</a> - The response's http
--   status code.
newStopTextTranslationJobResponse :: Int -> StopTextTranslationJobResponse

-- | <i>See:</i> <a>newDeleteTerminology</a> smart constructor.
data DeleteTerminology
DeleteTerminology' :: Text -> DeleteTerminology

-- | Create a value of <a>DeleteTerminology</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteTerminology'</a>, <a>deleteTerminology_name</a> -
--   The name of the custom terminology being deleted.
newDeleteTerminology :: Text -> DeleteTerminology

-- | <i>See:</i> <a>newDeleteTerminologyResponse</a> smart constructor.
data DeleteTerminologyResponse
DeleteTerminologyResponse' :: DeleteTerminologyResponse

-- | Create a value of <a>DeleteTerminologyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteTerminologyResponse :: DeleteTerminologyResponse

-- | <i>See:</i> <a>newListTextTranslationJobs</a> smart constructor.
data ListTextTranslationJobs
ListTextTranslationJobs' :: Maybe Text -> Maybe TextTranslationJobFilter -> Maybe Natural -> ListTextTranslationJobs

-- | Create a value of <a>ListTextTranslationJobs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListTextTranslationJobs'</a>,
--   <a>listTextTranslationJobs_nextToken</a> - The token to request the
--   next page of results.
--   
--   <a>$sel:filter':ListTextTranslationJobs'</a>,
--   <a>listTextTranslationJobs_filter</a> - The parameters that specify
--   which batch translation jobs to retrieve. Filters include job name,
--   job status, and submission time. You can only set one filter at a
--   time.
--   
--   <a>$sel:maxResults:ListTextTranslationJobs'</a>,
--   <a>listTextTranslationJobs_maxResults</a> - The maximum number of
--   results to return in each page. The default value is 100.
newListTextTranslationJobs :: ListTextTranslationJobs

-- | <i>See:</i> <a>newListTextTranslationJobsResponse</a> smart
--   constructor.
data ListTextTranslationJobsResponse
ListTextTranslationJobsResponse' :: Maybe [TextTranslationJobProperties] -> Maybe Text -> Int -> ListTextTranslationJobsResponse

-- | Create a value of <a>ListTextTranslationJobsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:textTranslationJobPropertiesList:ListTextTranslationJobsResponse'</a>,
--   <a>listTextTranslationJobsResponse_textTranslationJobPropertiesList</a>
--   - A list containing the properties of each job that is returned.
--   
--   <a>$sel:nextToken:ListTextTranslationJobs'</a>,
--   <a>listTextTranslationJobsResponse_nextToken</a> - The token to use to
--   retreive the next page of results. This value is <tt>null</tt> when
--   there are no more results to return.
--   
--   <a>$sel:httpStatus:ListTextTranslationJobsResponse'</a>,
--   <a>listTextTranslationJobsResponse_httpStatus</a> - The response's
--   http status code.
newListTextTranslationJobsResponse :: Int -> ListTextTranslationJobsResponse

-- | <i>See:</i> <a>newStartTextTranslationJob</a> smart constructor.
data StartTextTranslationJob
StartTextTranslationJob' :: Maybe Text -> Maybe [Text] -> Maybe [Text] -> InputDataConfig -> OutputDataConfig -> Text -> Text -> NonEmpty Text -> Text -> StartTextTranslationJob

-- | Create a value of <a>StartTextTranslationJob</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobName:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_jobName</a> - The name of the batch
--   translation job to be performed.
--   
--   <a>$sel:parallelDataNames:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_parallelDataNames</a> - The names of the
--   parallel data resources to use in the batch translation job. For a
--   list of available parallel data resources, use the ListParallelData
--   operation.
--   
--   <a>$sel:terminologyNames:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_terminologyNames</a> - The name of the
--   terminology to use in the batch translation job. For a list of
--   available terminologies, use the ListTerminologies operation.
--   
--   <a>$sel:inputDataConfig:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_inputDataConfig</a> - Specifies the format
--   and S3 location of the input documents for the translation job.
--   
--   <a>$sel:outputDataConfig:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_outputDataConfig</a> - Specifies the S3
--   folder to which your job output will be saved.
--   
--   <a>$sel:dataAccessRoleArn:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_dataAccessRoleArn</a> - The Amazon Resource
--   Name (ARN) of an AWS Identity Access and Management (IAM) role that
--   grants Amazon Translate read access to your input data. For more
--   nformation, see identity-and-access-management.
--   
--   <a>$sel:sourceLanguageCode:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_sourceLanguageCode</a> - The language code
--   of the input language. For a list of language codes, see
--   what-is-languages.
--   
--   Amazon Translate does not automatically detect a source language
--   during batch translation jobs.
--   
--   <a>$sel:targetLanguageCodes:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_targetLanguageCodes</a> - The language code
--   of the output language.
--   
--   <a>$sel:clientToken:StartTextTranslationJob'</a>,
--   <a>startTextTranslationJob_clientToken</a> - A unique identifier for
--   the request. This token is auto-generated when using the Amazon
--   Translate SDK.
newStartTextTranslationJob :: InputDataConfig -> OutputDataConfig -> Text -> Text -> NonEmpty Text -> Text -> StartTextTranslationJob

-- | <i>See:</i> <a>newStartTextTranslationJobResponse</a> smart
--   constructor.
data StartTextTranslationJobResponse
StartTextTranslationJobResponse' :: Maybe Text -> Maybe JobStatus -> Int -> StartTextTranslationJobResponse

-- | Create a value of <a>StartTextTranslationJobResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:StartTextTranslationJobResponse'</a>,
--   <a>startTextTranslationJobResponse_jobId</a> - The identifier
--   generated for the job. To get the status of a job, use this ID with
--   the DescribeTextTranslationJob operation.
--   
--   <a>$sel:jobStatus:StartTextTranslationJobResponse'</a>,
--   <a>startTextTranslationJobResponse_jobStatus</a> - The status of the
--   job. Possible values include:
--   
--   <ul>
--   <li><tt>SUBMITTED</tt> - The job has been received and is queued for
--   processing.</li>
--   <li><tt>IN_PROGRESS</tt> - Amazon Translate is processing the
--   job.</li>
--   <li><tt>COMPLETED</tt> - The job was successfully completed and the
--   output is available.</li>
--   <li><tt>COMPLETED_WITH_ERROR</tt> - The job was completed with errors.
--   The errors can be analyzed in the job's output.</li>
--   <li><tt>FAILED</tt> - The job did not complete. To get details, use
--   the DescribeTextTranslationJob operation.</li>
--   <li><tt>STOP_REQUESTED</tt> - The user who started the job has
--   requested that it be stopped.</li>
--   <li><tt>STOPPED</tt> - The job has been stopped.</li>
--   </ul>
--   
--   <a>$sel:httpStatus:StartTextTranslationJobResponse'</a>,
--   <a>startTextTranslationJobResponse_httpStatus</a> - The response's
--   http status code.
newStartTextTranslationJobResponse :: Int -> StartTextTranslationJobResponse

-- | <i>See:</i> <a>newListParallelData</a> smart constructor.
data ListParallelData
ListParallelData' :: Maybe Text -> Maybe Natural -> ListParallelData

-- | Create a value of <a>ListParallelData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListParallelData'</a>,
--   <a>listParallelData_nextToken</a> - A string that specifies the next
--   page of results to return in a paginated response.
--   
--   <a>$sel:maxResults:ListParallelData'</a>,
--   <a>listParallelData_maxResults</a> - The maximum number of parallel
--   data resources returned for each request.
newListParallelData :: ListParallelData

-- | <i>See:</i> <a>newListParallelDataResponse</a> smart constructor.
data ListParallelDataResponse
ListParallelDataResponse' :: Maybe [ParallelDataProperties] -> Maybe Text -> Int -> ListParallelDataResponse

-- | Create a value of <a>ListParallelDataResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parallelDataPropertiesList:ListParallelDataResponse'</a>,
--   <a>listParallelDataResponse_parallelDataPropertiesList</a> - The
--   properties of the parallel data resources returned by this request.
--   
--   <a>$sel:nextToken:ListParallelData'</a>,
--   <a>listParallelDataResponse_nextToken</a> - The string to use in a
--   subsequent request to get the next page of results in a paginated
--   response. This value is null if there are no additional pages.
--   
--   <a>$sel:httpStatus:ListParallelDataResponse'</a>,
--   <a>listParallelDataResponse_httpStatus</a> - The response's http
--   status code.
newListParallelDataResponse :: Int -> ListParallelDataResponse
newtype EncryptionKeyType
EncryptionKeyType' :: Text -> EncryptionKeyType
[fromEncryptionKeyType] :: EncryptionKeyType -> Text
pattern EncryptionKeyType_KMS :: EncryptionKeyType
newtype JobStatus
JobStatus' :: Text -> JobStatus
[fromJobStatus] :: JobStatus -> Text
pattern JobStatus_COMPLETED :: JobStatus
pattern JobStatus_COMPLETED_WITH_ERROR :: JobStatus
pattern JobStatus_FAILED :: JobStatus
pattern JobStatus_IN_PROGRESS :: JobStatus
pattern JobStatus_STOPPED :: JobStatus
pattern JobStatus_STOP_REQUESTED :: JobStatus
pattern JobStatus_SUBMITTED :: JobStatus
newtype MergeStrategy
MergeStrategy' :: Text -> MergeStrategy
[fromMergeStrategy] :: MergeStrategy -> Text
pattern MergeStrategy_OVERWRITE :: MergeStrategy
newtype ParallelDataFormat
ParallelDataFormat' :: Text -> ParallelDataFormat
[fromParallelDataFormat] :: ParallelDataFormat -> Text
pattern ParallelDataFormat_CSV :: ParallelDataFormat
pattern ParallelDataFormat_TMX :: ParallelDataFormat
pattern ParallelDataFormat_TSV :: ParallelDataFormat
newtype ParallelDataStatus
ParallelDataStatus' :: Text -> ParallelDataStatus
[fromParallelDataStatus] :: ParallelDataStatus -> Text
pattern ParallelDataStatus_ACTIVE :: ParallelDataStatus
pattern ParallelDataStatus_CREATING :: ParallelDataStatus
pattern ParallelDataStatus_DELETING :: ParallelDataStatus
pattern ParallelDataStatus_FAILED :: ParallelDataStatus
pattern ParallelDataStatus_UPDATING :: ParallelDataStatus
newtype TerminologyDataFormat
TerminologyDataFormat' :: Text -> TerminologyDataFormat
[fromTerminologyDataFormat] :: TerminologyDataFormat -> Text
pattern TerminologyDataFormat_CSV :: TerminologyDataFormat
pattern TerminologyDataFormat_TMX :: TerminologyDataFormat

-- | The custom terminology applied to the input text by Amazon Translate
--   for the translated text response. This is optional in the response and
--   will only be present if you specified terminology input in the
--   request. Currently, only one terminology can be applied per
--   TranslateText request.
--   
--   <i>See:</i> <a>newAppliedTerminology</a> smart constructor.
data AppliedTerminology
AppliedTerminology' :: Maybe [Term] -> Maybe Text -> AppliedTerminology

-- | Create a value of <a>AppliedTerminology</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:terms:AppliedTerminology'</a>, <a>appliedTerminology_terms</a>
--   - The specific terms of the custom terminology applied to the input
--   text by Amazon Translate for the translated text response. A maximum
--   of 250 terms will be returned, and the specific terms applied will be
--   the first 250 terms in the source text.
--   
--   <a>$sel:name:AppliedTerminology'</a>, <a>appliedTerminology_name</a> -
--   The name of the custom terminology applied to the input text by Amazon
--   Translate for the translated text response.
newAppliedTerminology :: AppliedTerminology

-- | The encryption key used to encrypt this object.
--   
--   <i>See:</i> <a>newEncryptionKey</a> smart constructor.
data EncryptionKey
EncryptionKey' :: EncryptionKeyType -> Text -> EncryptionKey

-- | Create a value of <a>EncryptionKey</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':EncryptionKey'</a>, <a>encryptionKey_type</a> - The type
--   of encryption key used by Amazon Translate to encrypt custom
--   terminologies.
--   
--   <a>$sel:id:EncryptionKey'</a>, <a>encryptionKey_id</a> - The Amazon
--   Resource Name (ARN) of the encryption key being used to encrypt the
--   custom terminology.
newEncryptionKey :: EncryptionKeyType -> Text -> EncryptionKey

-- | The input configuration properties for requesting a batch translation
--   job.
--   
--   <i>See:</i> <a>newInputDataConfig</a> smart constructor.
data InputDataConfig
InputDataConfig' :: Text -> Text -> InputDataConfig

-- | Create a value of <a>InputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:InputDataConfig'</a>, <a>inputDataConfig_s3Uri</a> - The
--   URI of the AWS S3 folder that contains the input file. The folder must
--   be in the same Region as the API endpoint you are calling.
--   
--   <a>$sel:contentType:InputDataConfig'</a>,
--   <a>inputDataConfig_contentType</a> - Describes the format of the data
--   that you submit to Amazon Translate as input. You can specify one of
--   the following multipurpose internet mail extension (MIME) types:
--   
--   <ul>
--   <li><tt>text/html</tt>: The input data consists of one or more HTML
--   files. Amazon Translate translates only the text that resides in the
--   <tt>html</tt> element in each file.</li>
--   <li><tt>text/plain</tt>: The input data consists of one or more
--   unformatted text files. Amazon Translate translates every character in
--   this type of input.</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.wordprocessingml.document</tt>:
--   The input data consists of one or more Word documents (.docx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.presentationml.presentation</tt>:
--   The input data consists of one or more PowerPoint Presentation files
--   (.pptx).</li>
--   
--   <li><tt>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</tt>:
--   The input data consists of one or more Excel Workbook files
--   (.xlsx).</li>
--   </ul>
--   
--   If you structure your input data as HTML, ensure that you set this
--   parameter to <tt>text/html</tt>. By doing so, you cut costs by
--   limiting the translation to the contents of the <tt>html</tt> element
--   in each file. Otherwise, if you set this parameter to
--   <tt>text/plain</tt>, your costs will cover the translation of every
--   character.
newInputDataConfig :: Text -> Text -> InputDataConfig

-- | The number of documents successfully and unsuccessfully processed
--   during a translation job.
--   
--   <i>See:</i> <a>newJobDetails</a> smart constructor.
data JobDetails
JobDetails' :: Maybe Int -> Maybe Int -> Maybe Int -> JobDetails

-- | Create a value of <a>JobDetails</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:translatedDocumentsCount:JobDetails'</a>,
--   <a>jobDetails_translatedDocumentsCount</a> - The number of documents
--   successfully processed during a translation job.
--   
--   <a>$sel:documentsWithErrorsCount:JobDetails'</a>,
--   <a>jobDetails_documentsWithErrorsCount</a> - The number of documents
--   that could not be processed during a translation job.
--   
--   <a>$sel:inputDocumentsCount:JobDetails'</a>,
--   <a>jobDetails_inputDocumentsCount</a> - The number of documents used
--   as input in a translation job.
newJobDetails :: JobDetails

-- | The output configuration properties for a batch translation job.
--   
--   <i>See:</i> <a>newOutputDataConfig</a> smart constructor.
data OutputDataConfig
OutputDataConfig' :: Text -> OutputDataConfig

-- | Create a value of <a>OutputDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:OutputDataConfig'</a>, <a>outputDataConfig_s3Uri</a> -
--   The URI of the S3 folder that contains a translation job's output
--   file. The folder must be in the same Region as the API endpoint that
--   you are calling.
newOutputDataConfig :: Text -> OutputDataConfig

-- | Specifies the format and S3 location of the parallel data input file.
--   
--   <i>See:</i> <a>newParallelDataConfig</a> smart constructor.
data ParallelDataConfig
ParallelDataConfig' :: Text -> ParallelDataFormat -> ParallelDataConfig

-- | Create a value of <a>ParallelDataConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Uri:ParallelDataConfig'</a>, <a>parallelDataConfig_s3Uri</a>
--   - The URI of the Amazon S3 folder that contains the parallel data
--   input file. The folder must be in the same Region as the API endpoint
--   you are calling.
--   
--   <a>$sel:format:ParallelDataConfig'</a>,
--   <a>parallelDataConfig_format</a> - The format of the parallel data
--   input file.
newParallelDataConfig :: Text -> ParallelDataFormat -> ParallelDataConfig

-- | The location of the most recent parallel data input file that was
--   successfully imported into Amazon Translate.
--   
--   <i>See:</i> <a>newParallelDataDataLocation</a> smart constructor.
data ParallelDataDataLocation
ParallelDataDataLocation' :: Text -> Text -> ParallelDataDataLocation

-- | Create a value of <a>ParallelDataDataLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryType:ParallelDataDataLocation'</a>,
--   <a>parallelDataDataLocation_repositoryType</a> - Describes the
--   repository that contains the parallel data input file.
--   
--   <a>$sel:location:ParallelDataDataLocation'</a>,
--   <a>parallelDataDataLocation_location</a> - The Amazon S3 location of
--   the parallel data input file. The location is returned as a presigned
--   URL to that has a 30 minute expiration.
newParallelDataDataLocation :: Text -> Text -> ParallelDataDataLocation

-- | The properties of a parallel data resource.
--   
--   <i>See:</i> <a>newParallelDataProperties</a> smart constructor.
data ParallelDataProperties
ParallelDataProperties' :: Maybe ParallelDataStatus -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe EncryptionKey -> Maybe ParallelDataStatus -> Maybe Text -> Maybe Text -> Maybe Integer -> Maybe ParallelDataConfig -> ParallelDataProperties

-- | Create a value of <a>ParallelDataProperties</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_status</a> - The status of the parallel data
--   resource. When the parallel data is ready for you to use, the status
--   is <tt>ACTIVE</tt>.
--   
--   <a>$sel:lastUpdatedAt:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_lastUpdatedAt</a> - The time at which the
--   parallel data resource was last updated.
--   
--   <a>$sel:importedRecordCount:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_importedRecordCount</a> - The number of
--   records successfully imported from the parallel data input file.
--   
--   <a>$sel:arn:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_arn</a> - The Amazon Resource Name (ARN) of
--   the parallel data resource.
--   
--   <a>$sel:targetLanguageCodes:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_targetLanguageCodes</a> - The language codes
--   for the target languages available in the parallel data file. All
--   possible target languages are returned as an array.
--   
--   <a>$sel:createdAt:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_createdAt</a> - The time at which the
--   parallel data resource was created.
--   
--   <a>$sel:failedRecordCount:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_failedRecordCount</a> - The number of
--   records unsuccessfully imported from the parallel data input file.
--   
--   <a>$sel:importedDataSize:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_importedDataSize</a> - The number of UTF-8
--   characters that Amazon Translate imported from the parallel data input
--   file. This number includes only the characters in your translation
--   examples. It does not include characters that are used to format your
--   file. For example, if you provided a Translation Memory Exchange
--   (.tmx) file, this number does not include the tags.
--   
--   <a>$sel:name:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_name</a> - The custom name assigned to the
--   parallel data resource.
--   
--   <a>$sel:sourceLanguageCode:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_sourceLanguageCode</a> - The source language
--   of the translations in the parallel data file.
--   
--   <a>$sel:latestUpdateAttemptAt:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_latestUpdateAttemptAt</a> - The time that
--   the most recent update was attempted.
--   
--   <a>$sel:encryptionKey:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_encryptionKey</a> - Undocumented member.
--   
--   <a>$sel:latestUpdateAttemptStatus:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_latestUpdateAttemptStatus</a> - The status
--   of the most recent update attempt for the parallel data resource.
--   
--   <a>$sel:message:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_message</a> - Additional information from
--   Amazon Translate about the parallel data resource.
--   
--   <a>$sel:description:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_description</a> - The description assigned
--   to the parallel data resource.
--   
--   <a>$sel:skippedRecordCount:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_skippedRecordCount</a> - The number of items
--   in the input file that Amazon Translate skipped when you created or
--   updated the parallel data resource. For example, Amazon Translate
--   skips empty records, empty target texts, and empty lines.
--   
--   <a>$sel:parallelDataConfig:ParallelDataProperties'</a>,
--   <a>parallelDataProperties_parallelDataConfig</a> - Specifies the
--   format and S3 location of the parallel data input file.
newParallelDataProperties :: ParallelDataProperties

-- | The term being translated by the custom terminology.
--   
--   <i>See:</i> <a>newTerm</a> smart constructor.
data Term
Term' :: Maybe Text -> Maybe Text -> Term

-- | Create a value of <a>Term</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:targetText:Term'</a>, <a>term_targetText</a> - The target text
--   of the term being translated by the custom terminology.
--   
--   <a>$sel:sourceText:Term'</a>, <a>term_sourceText</a> - The source text
--   of the term being translated by the custom terminology.
newTerm :: Term

-- | The data associated with the custom terminology.
--   
--   <i>See:</i> <a>newTerminologyData</a> smart constructor.
data TerminologyData
TerminologyData' :: Sensitive Base64 -> TerminologyDataFormat -> TerminologyData

-- | Create a value of <a>TerminologyData</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:file:TerminologyData'</a>, <a>terminologyData_file</a> - The
--   file containing the custom terminology data. Your version of the AWS
--   SDK performs a Base64-encoding on this field before sending a request
--   to the AWS service. Users of the SDK should not perform
--   Base64-encoding themselves.-- -- <i>Note:</i> This <tt>Lens</tt>
--   automatically encodes and decodes Base64 data. -- The underlying
--   isomorphism will encode to Base64 representation during --
--   serialisation, and decode from Base64 representation during
--   deserialisation. -- This <tt>Lens</tt> accepts and returns only raw
--   unencoded data.
--   
--   <a>$sel:format:TerminologyData'</a>, <a>terminologyData_format</a> -
--   The data format of the custom terminology. Either CSV or TMX.
newTerminologyData :: ByteString -> TerminologyDataFormat -> TerminologyData

-- | The location of the custom terminology data.
--   
--   <i>See:</i> <a>newTerminologyDataLocation</a> smart constructor.
data TerminologyDataLocation
TerminologyDataLocation' :: Text -> Text -> TerminologyDataLocation

-- | Create a value of <a>TerminologyDataLocation</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:repositoryType:TerminologyDataLocation'</a>,
--   <a>terminologyDataLocation_repositoryType</a> - The repository type
--   for the custom terminology data.
--   
--   <a>$sel:location:TerminologyDataLocation'</a>,
--   <a>terminologyDataLocation_location</a> - The location of the custom
--   terminology data.
newTerminologyDataLocation :: Text -> Text -> TerminologyDataLocation

-- | The properties of the custom terminology.
--   
--   <i>See:</i> <a>newTerminologyProperties</a> smart constructor.
data TerminologyProperties
TerminologyProperties' :: Maybe Int -> Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe EncryptionKey -> Maybe Text -> TerminologyProperties

-- | Create a value of <a>TerminologyProperties</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sizeBytes:TerminologyProperties'</a>,
--   <a>terminologyProperties_sizeBytes</a> - The size of the file used
--   when importing a custom terminology.
--   
--   <a>$sel:lastUpdatedAt:TerminologyProperties'</a>,
--   <a>terminologyProperties_lastUpdatedAt</a> - The time at which the
--   custom terminology was last update, based on the timestamp.
--   
--   <a>$sel:arn:TerminologyProperties'</a>,
--   <a>terminologyProperties_arn</a> - The Amazon Resource Name (ARN) of
--   the custom terminology.
--   
--   <a>$sel:targetLanguageCodes:TerminologyProperties'</a>,
--   <a>terminologyProperties_targetLanguageCodes</a> - The language codes
--   for the target languages available with the custom terminology file.
--   All possible target languages are returned in array.
--   
--   <a>$sel:createdAt:TerminologyProperties'</a>,
--   <a>terminologyProperties_createdAt</a> - The time at which the custom
--   terminology was created, based on the timestamp.
--   
--   <a>$sel:name:TerminologyProperties'</a>,
--   <a>terminologyProperties_name</a> - The name of the custom
--   terminology.
--   
--   <a>$sel:sourceLanguageCode:TerminologyProperties'</a>,
--   <a>terminologyProperties_sourceLanguageCode</a> - The language code
--   for the source text of the translation request for which the custom
--   terminology is being used.
--   
--   <a>$sel:termCount:TerminologyProperties'</a>,
--   <a>terminologyProperties_termCount</a> - The number of terms included
--   in the custom terminology.
--   
--   <a>$sel:encryptionKey:TerminologyProperties'</a>,
--   <a>terminologyProperties_encryptionKey</a> - The encryption key for
--   the custom terminology.
--   
--   <a>$sel:description:TerminologyProperties'</a>,
--   <a>terminologyProperties_description</a> - The description of the
--   custom terminology properties.
newTerminologyProperties :: TerminologyProperties

-- | Provides information for filtering a list of translation jobs. For
--   more information, see ListTextTranslationJobs.
--   
--   <i>See:</i> <a>newTextTranslationJobFilter</a> smart constructor.
data TextTranslationJobFilter
TextTranslationJobFilter' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe JobStatus -> TextTranslationJobFilter

-- | Create a value of <a>TextTranslationJobFilter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:submittedBeforeTime:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_submittedBeforeTime</a> - Filters the list
--   of jobs based on the time that the job was submitted for processing
--   and returns only the jobs submitted before the specified time. Jobs
--   are returned in ascending order, oldest to newest.
--   
--   <a>$sel:submittedAfterTime:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_submittedAfterTime</a> - Filters the list
--   of jobs based on the time that the job was submitted for processing
--   and returns only the jobs submitted after the specified time. Jobs are
--   returned in descending order, newest to oldest.
--   
--   <a>$sel:jobName:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_jobName</a> - Filters the list of jobs by
--   name.
--   
--   <a>$sel:jobStatus:TextTranslationJobFilter'</a>,
--   <a>textTranslationJobFilter_jobStatus</a> - Filters the list of jobs
--   based by job status.
newTextTranslationJobFilter :: TextTranslationJobFilter

-- | Provides information about a translation job.
--   
--   <i>See:</i> <a>newTextTranslationJobProperties</a> smart constructor.
data TextTranslationJobProperties
TextTranslationJobProperties' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe POSIX -> Maybe InputDataConfig -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe OutputDataConfig -> Maybe JobDetails -> Maybe Text -> Maybe JobStatus -> Maybe Text -> TextTranslationJobProperties

-- | Create a value of <a>TextTranslationJobProperties</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:jobId:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobId</a> - The ID of the translation
--   job.
--   
--   <a>$sel:targetLanguageCodes:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_targetLanguageCodes</a> - The language
--   code of the language of the target text. The language must be a
--   language supported by Amazon Translate.
--   
--   <a>$sel:jobName:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobName</a> - The user-defined name of
--   the translation job.
--   
--   <a>$sel:submittedTime:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_submittedTime</a> - The time at which
--   the translation job was submitted.
--   
--   <a>$sel:inputDataConfig:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_inputDataConfig</a> - The input
--   configuration properties that were specified when the job was
--   requested.
--   
--   <a>$sel:parallelDataNames:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_parallelDataNames</a> - A list
--   containing the names of the parallel data resources applied to the
--   translation job.
--   
--   <a>$sel:terminologyNames:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_terminologyNames</a> - A list
--   containing the names of the terminologies applied to a translation
--   job. Only one terminology can be applied per StartTextTranslationJob
--   request at this time.
--   
--   <a>$sel:sourceLanguageCode:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_sourceLanguageCode</a> - The language
--   code of the language of the source text. The language must be a
--   language supported by Amazon Translate.
--   
--   <a>$sel:endTime:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_endTime</a> - The time at which the
--   translation job ended.
--   
--   <a>$sel:outputDataConfig:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_outputDataConfig</a> - The output
--   configuration properties that were specified when the job was
--   requested.
--   
--   <a>$sel:jobDetails:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobDetails</a> - The number of
--   documents successfully and unsuccessfully processed during the
--   translation job.
--   
--   <a>$sel:dataAccessRoleArn:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_dataAccessRoleArn</a> - The Amazon
--   Resource Name (ARN) of an AWS Identity Access and Management (IAM)
--   role that granted Amazon Translate read access to the job's input
--   data.
--   
--   <a>$sel:jobStatus:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_jobStatus</a> - The status of the
--   translation job.
--   
--   <a>$sel:message:TextTranslationJobProperties'</a>,
--   <a>textTranslationJobProperties_message</a> - An explanation of any
--   errors that may have occured during the translation job.
newTextTranslationJobProperties :: TextTranslationJobProperties
