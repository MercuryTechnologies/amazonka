-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-ebsZSamazonka-ebs
@version 2.0


module Amazonka.EBS.Types.Block

-- | A block of data in an Amazon Elastic Block Store snapshot.
--   
--   <i>See:</i> <a>newBlock</a> smart constructor.
data Block
Block' :: Maybe Natural -> Maybe Text -> Block

-- | The block index.
[$sel:blockIndex:Block'] :: Block -> Maybe Natural

-- | The block token for the block index.
[$sel:blockToken:Block'] :: Block -> Maybe Text

-- | Create a value of <a>Block</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockIndex:Block'</a>, <a>block_blockIndex</a> - The block
--   index.
--   
--   <a>$sel:blockToken:Block'</a>, <a>block_blockToken</a> - The block
--   token for the block index.
newBlock :: Block

-- | The block index.
block_blockIndex :: Lens' Block (Maybe Natural)

-- | The block token for the block index.
block_blockToken :: Lens' Block (Maybe Text)
instance GHC.Generics.Generic Amazonka.EBS.Types.Block.Block
instance GHC.Show.Show Amazonka.EBS.Types.Block.Block
instance GHC.Read.Read Amazonka.EBS.Types.Block.Block
instance GHC.Classes.Eq Amazonka.EBS.Types.Block.Block
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EBS.Types.Block.Block
instance Data.Hashable.Class.Hashable Amazonka.EBS.Types.Block.Block
instance Control.DeepSeq.NFData Amazonka.EBS.Types.Block.Block


module Amazonka.EBS.Types.ChangedBlock

-- | A block of data in an Amazon Elastic Block Store snapshot that is
--   different from another snapshot of the same volume/snapshot lineage.
--   
--   <i>See:</i> <a>newChangedBlock</a> smart constructor.
data ChangedBlock
ChangedBlock' :: Maybe Natural -> Maybe Text -> Maybe Text -> ChangedBlock

-- | The block index.
[$sel:blockIndex:ChangedBlock'] :: ChangedBlock -> Maybe Natural

-- | The block token for the block index of the <tt>SecondSnapshotId</tt>
--   specified in the <tt>ListChangedBlocks</tt> operation.
[$sel:secondBlockToken:ChangedBlock'] :: ChangedBlock -> Maybe Text

-- | The block token for the block index of the <tt>FirstSnapshotId</tt>
--   specified in the <tt>ListChangedBlocks</tt> operation. This value is
--   absent if the first snapshot does not have the changed block that is
--   on the second snapshot.
[$sel:firstBlockToken:ChangedBlock'] :: ChangedBlock -> Maybe Text

-- | Create a value of <a>ChangedBlock</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockIndex:ChangedBlock'</a>, <a>changedBlock_blockIndex</a> -
--   The block index.
--   
--   <a>$sel:secondBlockToken:ChangedBlock'</a>,
--   <a>changedBlock_secondBlockToken</a> - The block token for the block
--   index of the <tt>SecondSnapshotId</tt> specified in the
--   <tt>ListChangedBlocks</tt> operation.
--   
--   <a>$sel:firstBlockToken:ChangedBlock'</a>,
--   <a>changedBlock_firstBlockToken</a> - The block token for the block
--   index of the <tt>FirstSnapshotId</tt> specified in the
--   <tt>ListChangedBlocks</tt> operation. This value is absent if the
--   first snapshot does not have the changed block that is on the second
--   snapshot.
newChangedBlock :: ChangedBlock

-- | The block index.
changedBlock_blockIndex :: Lens' ChangedBlock (Maybe Natural)

-- | The block token for the block index of the <tt>SecondSnapshotId</tt>
--   specified in the <tt>ListChangedBlocks</tt> operation.
changedBlock_secondBlockToken :: Lens' ChangedBlock (Maybe Text)

-- | The block token for the block index of the <tt>FirstSnapshotId</tt>
--   specified in the <tt>ListChangedBlocks</tt> operation. This value is
--   absent if the first snapshot does not have the changed block that is
--   on the second snapshot.
changedBlock_firstBlockToken :: Lens' ChangedBlock (Maybe Text)
instance GHC.Generics.Generic Amazonka.EBS.Types.ChangedBlock.ChangedBlock
instance GHC.Show.Show Amazonka.EBS.Types.ChangedBlock.ChangedBlock
instance GHC.Classes.Eq Amazonka.EBS.Types.ChangedBlock.ChangedBlock
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EBS.Types.ChangedBlock.ChangedBlock
instance Data.Hashable.Class.Hashable Amazonka.EBS.Types.ChangedBlock.ChangedBlock
instance Control.DeepSeq.NFData Amazonka.EBS.Types.ChangedBlock.ChangedBlock


module Amazonka.EBS.Types.ChecksumAggregationMethod
newtype ChecksumAggregationMethod
ChecksumAggregationMethod' :: Text -> ChecksumAggregationMethod
[fromChecksumAggregationMethod] :: ChecksumAggregationMethod -> Text
pattern ChecksumAggregationMethod_LINEAR :: ChecksumAggregationMethod
instance Amazonka.Data.XML.ToXML Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Amazonka.Data.XML.FromXML Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Amazonka.Data.Query.ToQuery Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Amazonka.Data.Headers.ToHeader Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Amazonka.Data.Log.ToLog Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Amazonka.Data.ByteString.ToByteString Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Amazonka.Data.Text.ToText Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Amazonka.Data.Text.FromText Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Control.DeepSeq.NFData Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance Data.Hashable.Class.Hashable Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance GHC.Generics.Generic Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance GHC.Classes.Ord Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance GHC.Classes.Eq Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance GHC.Read.Read Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod
instance GHC.Show.Show Amazonka.EBS.Types.ChecksumAggregationMethod.ChecksumAggregationMethod


module Amazonka.EBS.Types.ChecksumAlgorithm
newtype ChecksumAlgorithm
ChecksumAlgorithm' :: Text -> ChecksumAlgorithm
[fromChecksumAlgorithm] :: ChecksumAlgorithm -> Text
pattern ChecksumAlgorithm_SHA256 :: ChecksumAlgorithm
instance Amazonka.Data.XML.ToXML Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Amazonka.Data.XML.FromXML Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Amazonka.Data.Query.ToQuery Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Amazonka.Data.Headers.ToHeader Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Amazonka.Data.Log.ToLog Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Amazonka.Data.ByteString.ToByteString Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Amazonka.Data.Text.ToText Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Amazonka.Data.Text.FromText Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Control.DeepSeq.NFData Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance Data.Hashable.Class.Hashable Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance GHC.Generics.Generic Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance GHC.Classes.Ord Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance GHC.Classes.Eq Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance GHC.Read.Read Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm
instance GHC.Show.Show Amazonka.EBS.Types.ChecksumAlgorithm.ChecksumAlgorithm


module Amazonka.EBS.Types.Status
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_Completed :: Status
pattern Status_Error :: Status
pattern Status_Pending :: Status
instance Amazonka.Data.XML.ToXML Amazonka.EBS.Types.Status.Status
instance Amazonka.Data.XML.FromXML Amazonka.EBS.Types.Status.Status
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.EBS.Types.Status.Status
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EBS.Types.Status.Status
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.EBS.Types.Status.Status
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EBS.Types.Status.Status
instance Amazonka.Data.Query.ToQuery Amazonka.EBS.Types.Status.Status
instance Amazonka.Data.Headers.ToHeader Amazonka.EBS.Types.Status.Status
instance Amazonka.Data.Log.ToLog Amazonka.EBS.Types.Status.Status
instance Amazonka.Data.ByteString.ToByteString Amazonka.EBS.Types.Status.Status
instance Amazonka.Data.Text.ToText Amazonka.EBS.Types.Status.Status
instance Amazonka.Data.Text.FromText Amazonka.EBS.Types.Status.Status
instance Control.DeepSeq.NFData Amazonka.EBS.Types.Status.Status
instance Data.Hashable.Class.Hashable Amazonka.EBS.Types.Status.Status
instance GHC.Generics.Generic Amazonka.EBS.Types.Status.Status
instance GHC.Classes.Ord Amazonka.EBS.Types.Status.Status
instance GHC.Classes.Eq Amazonka.EBS.Types.Status.Status
instance GHC.Read.Read Amazonka.EBS.Types.Status.Status
instance GHC.Show.Show Amazonka.EBS.Types.Status.Status


module Amazonka.EBS.Types.Tag

-- | Describes a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The value of the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key of the tag.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the tag.
newTag :: Tag

-- | The value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the tag.
tag_key :: Lens' Tag (Maybe Text)
instance GHC.Generics.Generic Amazonka.EBS.Types.Tag.Tag
instance GHC.Show.Show Amazonka.EBS.Types.Tag.Tag
instance GHC.Read.Read Amazonka.EBS.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.EBS.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.EBS.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.EBS.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.EBS.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EBS.Types.Tag.Tag


module Amazonka.EBS.Types

-- | API version <tt>2019-11-02</tt> of the Amazon Elastic Block Store SDK
--   configuration.
defaultService :: Service

-- | The input fails to satisfy the constraints of the EBS direct APIs.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request uses the same client token as a previous, but
--   non-identical request.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your current service quotas do not allow you to perform this action.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit for concurrent API requests. For more
--   information, see <a>Optimizing performance of the EBS direct APIs</a>
--   in the <i>Amazon Elastic Compute Cloud User Guide</i>.
_ConcurrentLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of API requests has exceed the maximum allowed API request
--   throttling limit.
_RequestThrottledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal error has occurred.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ChecksumAggregationMethod
ChecksumAggregationMethod' :: Text -> ChecksumAggregationMethod
[fromChecksumAggregationMethod] :: ChecksumAggregationMethod -> Text
pattern ChecksumAggregationMethod_LINEAR :: ChecksumAggregationMethod
newtype ChecksumAlgorithm
ChecksumAlgorithm' :: Text -> ChecksumAlgorithm
[fromChecksumAlgorithm] :: ChecksumAlgorithm -> Text
pattern ChecksumAlgorithm_SHA256 :: ChecksumAlgorithm
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_Completed :: Status
pattern Status_Error :: Status
pattern Status_Pending :: Status

-- | A block of data in an Amazon Elastic Block Store snapshot.
--   
--   <i>See:</i> <a>newBlock</a> smart constructor.
data Block
Block' :: Maybe Natural -> Maybe Text -> Block

-- | The block index.
[$sel:blockIndex:Block'] :: Block -> Maybe Natural

-- | The block token for the block index.
[$sel:blockToken:Block'] :: Block -> Maybe Text

-- | Create a value of <a>Block</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockIndex:Block'</a>, <a>block_blockIndex</a> - The block
--   index.
--   
--   <a>$sel:blockToken:Block'</a>, <a>block_blockToken</a> - The block
--   token for the block index.
newBlock :: Block

-- | The block index.
block_blockIndex :: Lens' Block (Maybe Natural)

-- | The block token for the block index.
block_blockToken :: Lens' Block (Maybe Text)

-- | A block of data in an Amazon Elastic Block Store snapshot that is
--   different from another snapshot of the same volume/snapshot lineage.
--   
--   <i>See:</i> <a>newChangedBlock</a> smart constructor.
data ChangedBlock
ChangedBlock' :: Maybe Natural -> Maybe Text -> Maybe Text -> ChangedBlock

-- | The block index.
[$sel:blockIndex:ChangedBlock'] :: ChangedBlock -> Maybe Natural

-- | The block token for the block index of the <tt>SecondSnapshotId</tt>
--   specified in the <tt>ListChangedBlocks</tt> operation.
[$sel:secondBlockToken:ChangedBlock'] :: ChangedBlock -> Maybe Text

-- | The block token for the block index of the <tt>FirstSnapshotId</tt>
--   specified in the <tt>ListChangedBlocks</tt> operation. This value is
--   absent if the first snapshot does not have the changed block that is
--   on the second snapshot.
[$sel:firstBlockToken:ChangedBlock'] :: ChangedBlock -> Maybe Text

-- | Create a value of <a>ChangedBlock</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockIndex:ChangedBlock'</a>, <a>changedBlock_blockIndex</a> -
--   The block index.
--   
--   <a>$sel:secondBlockToken:ChangedBlock'</a>,
--   <a>changedBlock_secondBlockToken</a> - The block token for the block
--   index of the <tt>SecondSnapshotId</tt> specified in the
--   <tt>ListChangedBlocks</tt> operation.
--   
--   <a>$sel:firstBlockToken:ChangedBlock'</a>,
--   <a>changedBlock_firstBlockToken</a> - The block token for the block
--   index of the <tt>FirstSnapshotId</tt> specified in the
--   <tt>ListChangedBlocks</tt> operation. This value is absent if the
--   first snapshot does not have the changed block that is on the second
--   snapshot.
newChangedBlock :: ChangedBlock

-- | The block index.
changedBlock_blockIndex :: Lens' ChangedBlock (Maybe Natural)

-- | The block token for the block index of the <tt>SecondSnapshotId</tt>
--   specified in the <tt>ListChangedBlocks</tt> operation.
changedBlock_secondBlockToken :: Lens' ChangedBlock (Maybe Text)

-- | The block token for the block index of the <tt>FirstSnapshotId</tt>
--   specified in the <tt>ListChangedBlocks</tt> operation. This value is
--   absent if the first snapshot does not have the changed block that is
--   on the second snapshot.
changedBlock_firstBlockToken :: Lens' ChangedBlock (Maybe Text)

-- | Describes a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | The value of the tag.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key of the tag.
[$sel:key:Tag'] :: Tag -> Maybe Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the tag.
newTag :: Tag

-- | The value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the tag.
tag_key :: Lens' Tag (Maybe Text)


-- | Creates a new Amazon EBS snapshot. The new snapshot enters the
--   <tt>pending</tt> state after the request completes.
--   
--   After creating the snapshot, use <a>PutSnapshotBlock</a> to write
--   blocks of data to the snapshot.
module Amazonka.EBS.StartSnapshot

-- | <i>See:</i> <a>newStartSnapshot</a> smart constructor.
data StartSnapshot
StartSnapshot' :: Maybe (Sensitive Text) -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe [Tag] -> Natural -> StartSnapshot

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   to be used to encrypt the snapshot. If you do not specify a KMS key,
--   the default Amazon Web Services managed KMS key is used.
--   
--   If you specify a <b>ParentSnapshotId</b>, omit this parameter; the
--   snapshot will be encrypted using the same KMS key that was used to
--   encrypt the parent snapshot.
--   
--   If <b>Encrypted</b> is set to <tt>true</tt>, you must specify a KMS
--   key ARN.
[$sel:kmsKeyArn:StartSnapshot'] :: StartSnapshot -> Maybe (Sensitive Text)

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Idempotency ensures that an API request
--   completes only once. With an idempotent request, if the original
--   request completes successfully. The subsequent retries with the same
--   client token return the result from the original successful request
--   and they have no additional effect.
--   
--   If you do not specify a client token, one is automatically generated
--   by the Amazon Web Services SDK.
--   
--   For more information, see <a>Idempotency for StartSnapshot API</a> in
--   the <i>Amazon Elastic Compute Cloud User Guide</i>.
[$sel:clientToken:StartSnapshot'] :: StartSnapshot -> Maybe Text

-- | Indicates whether to encrypt the snapshot. To create an encrypted
--   snapshot, specify <tt>true</tt>. To create an unencrypted snapshot,
--   omit this parameter.
--   
--   If you specify a value for <b>ParentSnapshotId</b>, omit this
--   parameter.
--   
--   If you specify <tt>true</tt>, the snapshot is encrypted using the KMS
--   key specified using the <b>KmsKeyArn</b> parameter. If no value is
--   specified for <b>KmsKeyArn</b>, the default KMS key for your account
--   is used. If no default KMS key has been specified for your account,
--   the Amazon Web Services managed KMS key is used. To set a default KMS
--   key for your account, use <a>ModifyEbsDefaultKmsKeyId</a>.
--   
--   If your account is enabled for encryption by default, you cannot set
--   this parameter to <tt>false</tt>. In this case, you can omit this
--   parameter.
--   
--   For more information, see <a>Using encryption</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide</i>.
[$sel:encrypted:StartSnapshot'] :: StartSnapshot -> Maybe Bool

-- | The ID of the parent snapshot. If there is no parent snapshot, or if
--   you are creating the first snapshot for an on-premises volume, omit
--   this parameter.
--   
--   If your account is enabled for encryption by default, you cannot use
--   an unencrypted snapshot as a parent snapshot. You must first create an
--   encrypted copy of the parent snapshot using <a>CopySnapshot</a>.
[$sel:parentSnapshotId:StartSnapshot'] :: StartSnapshot -> Maybe Text

-- | The amount of time (in minutes) after which the snapshot is
--   automatically cancelled if:
--   
--   <ul>
--   <li>No blocks are written to the snapshot.</li>
--   <li>The snapshot is not completed after writing the last block of
--   data.</li>
--   </ul>
--   
--   If no value is specified, the timeout defaults to <tt>60</tt> minutes.
[$sel:timeout:StartSnapshot'] :: StartSnapshot -> Maybe Natural

-- | A description for the snapshot.
[$sel:description:StartSnapshot'] :: StartSnapshot -> Maybe Text

-- | The tags to apply to the snapshot.
[$sel:tags:StartSnapshot'] :: StartSnapshot -> Maybe [Tag]

-- | The size of the volume, in GiB. The maximum size is <tt>65536</tt> GiB
--   (64 TiB).
[$sel:volumeSize:StartSnapshot'] :: StartSnapshot -> Natural

-- | Create a value of <a>StartSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:StartSnapshot'</a>, <a>startSnapshot_kmsKeyArn</a> -
--   The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   to be used to encrypt the snapshot. If you do not specify a KMS key,
--   the default Amazon Web Services managed KMS key is used.
--   
--   If you specify a <b>ParentSnapshotId</b>, omit this parameter; the
--   snapshot will be encrypted using the same KMS key that was used to
--   encrypt the parent snapshot.
--   
--   If <b>Encrypted</b> is set to <tt>true</tt>, you must specify a KMS
--   key ARN.
--   
--   <a>$sel:clientToken:StartSnapshot'</a>,
--   <a>startSnapshot_clientToken</a> - A unique, case-sensitive identifier
--   that you provide to ensure the idempotency of the request. Idempotency
--   ensures that an API request completes only once. With an idempotent
--   request, if the original request completes successfully. The
--   subsequent retries with the same client token return the result from
--   the original successful request and they have no additional effect.
--   
--   If you do not specify a client token, one is automatically generated
--   by the Amazon Web Services SDK.
--   
--   For more information, see <a>Idempotency for StartSnapshot API</a> in
--   the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   <a>$sel:encrypted:StartSnapshot'</a>, <a>startSnapshot_encrypted</a> -
--   Indicates whether to encrypt the snapshot. To create an encrypted
--   snapshot, specify <tt>true</tt>. To create an unencrypted snapshot,
--   omit this parameter.
--   
--   If you specify a value for <b>ParentSnapshotId</b>, omit this
--   parameter.
--   
--   If you specify <tt>true</tt>, the snapshot is encrypted using the KMS
--   key specified using the <b>KmsKeyArn</b> parameter. If no value is
--   specified for <b>KmsKeyArn</b>, the default KMS key for your account
--   is used. If no default KMS key has been specified for your account,
--   the Amazon Web Services managed KMS key is used. To set a default KMS
--   key for your account, use <a>ModifyEbsDefaultKmsKeyId</a>.
--   
--   If your account is enabled for encryption by default, you cannot set
--   this parameter to <tt>false</tt>. In this case, you can omit this
--   parameter.
--   
--   For more information, see <a>Using encryption</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide</i>.
--   
--   <a>$sel:parentSnapshotId:StartSnapshot'</a>,
--   <a>startSnapshot_parentSnapshotId</a> - The ID of the parent snapshot.
--   If there is no parent snapshot, or if you are creating the first
--   snapshot for an on-premises volume, omit this parameter.
--   
--   If your account is enabled for encryption by default, you cannot use
--   an unencrypted snapshot as a parent snapshot. You must first create an
--   encrypted copy of the parent snapshot using <a>CopySnapshot</a>.
--   
--   <a>$sel:timeout:StartSnapshot'</a>, <a>startSnapshot_timeout</a> - The
--   amount of time (in minutes) after which the snapshot is automatically
--   cancelled if:
--   
--   <ul>
--   <li>No blocks are written to the snapshot.</li>
--   <li>The snapshot is not completed after writing the last block of
--   data.</li>
--   </ul>
--   
--   If no value is specified, the timeout defaults to <tt>60</tt> minutes.
--   
--   <a>$sel:description:StartSnapshot'</a>,
--   <a>startSnapshot_description</a> - A description for the snapshot.
--   
--   <a>$sel:tags:StartSnapshot'</a>, <a>startSnapshot_tags</a> - The tags
--   to apply to the snapshot.
--   
--   <a>$sel:volumeSize:StartSnapshot'</a>, <a>startSnapshot_volumeSize</a>
--   - The size of the volume, in GiB. The maximum size is <tt>65536</tt>
--   GiB (64 TiB).
newStartSnapshot :: Natural -> StartSnapshot

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   to be used to encrypt the snapshot. If you do not specify a KMS key,
--   the default Amazon Web Services managed KMS key is used.
--   
--   If you specify a <b>ParentSnapshotId</b>, omit this parameter; the
--   snapshot will be encrypted using the same KMS key that was used to
--   encrypt the parent snapshot.
--   
--   If <b>Encrypted</b> is set to <tt>true</tt>, you must specify a KMS
--   key ARN.
startSnapshot_kmsKeyArn :: Lens' StartSnapshot (Maybe Text)

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Idempotency ensures that an API request
--   completes only once. With an idempotent request, if the original
--   request completes successfully. The subsequent retries with the same
--   client token return the result from the original successful request
--   and they have no additional effect.
--   
--   If you do not specify a client token, one is automatically generated
--   by the Amazon Web Services SDK.
--   
--   For more information, see <a>Idempotency for StartSnapshot API</a> in
--   the <i>Amazon Elastic Compute Cloud User Guide</i>.
startSnapshot_clientToken :: Lens' StartSnapshot (Maybe Text)

-- | Indicates whether to encrypt the snapshot. To create an encrypted
--   snapshot, specify <tt>true</tt>. To create an unencrypted snapshot,
--   omit this parameter.
--   
--   If you specify a value for <b>ParentSnapshotId</b>, omit this
--   parameter.
--   
--   If you specify <tt>true</tt>, the snapshot is encrypted using the KMS
--   key specified using the <b>KmsKeyArn</b> parameter. If no value is
--   specified for <b>KmsKeyArn</b>, the default KMS key for your account
--   is used. If no default KMS key has been specified for your account,
--   the Amazon Web Services managed KMS key is used. To set a default KMS
--   key for your account, use <a>ModifyEbsDefaultKmsKeyId</a>.
--   
--   If your account is enabled for encryption by default, you cannot set
--   this parameter to <tt>false</tt>. In this case, you can omit this
--   parameter.
--   
--   For more information, see <a>Using encryption</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide</i>.
startSnapshot_encrypted :: Lens' StartSnapshot (Maybe Bool)

-- | The ID of the parent snapshot. If there is no parent snapshot, or if
--   you are creating the first snapshot for an on-premises volume, omit
--   this parameter.
--   
--   If your account is enabled for encryption by default, you cannot use
--   an unencrypted snapshot as a parent snapshot. You must first create an
--   encrypted copy of the parent snapshot using <a>CopySnapshot</a>.
startSnapshot_parentSnapshotId :: Lens' StartSnapshot (Maybe Text)

-- | The amount of time (in minutes) after which the snapshot is
--   automatically cancelled if:
--   
--   <ul>
--   <li>No blocks are written to the snapshot.</li>
--   <li>The snapshot is not completed after writing the last block of
--   data.</li>
--   </ul>
--   
--   If no value is specified, the timeout defaults to <tt>60</tt> minutes.
startSnapshot_timeout :: Lens' StartSnapshot (Maybe Natural)

-- | A description for the snapshot.
startSnapshot_description :: Lens' StartSnapshot (Maybe Text)

-- | The tags to apply to the snapshot.
startSnapshot_tags :: Lens' StartSnapshot (Maybe [Tag])

-- | The size of the volume, in GiB. The maximum size is <tt>65536</tt> GiB
--   (64 TiB).
startSnapshot_volumeSize :: Lens' StartSnapshot Natural

-- | <i>See:</i> <a>newStartSnapshotResponse</a> smart constructor.
data StartSnapshotResponse
StartSnapshotResponse' :: Maybe Int -> Maybe Status -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Int -> StartSnapshotResponse

-- | The size of the blocks in the snapshot, in bytes.
[$sel:blockSize:StartSnapshotResponse'] :: StartSnapshotResponse -> Maybe Int

-- | The status of the snapshot.
[$sel:status:StartSnapshotResponse'] :: StartSnapshotResponse -> Maybe Status

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   used to encrypt the snapshot.
[$sel:kmsKeyArn:StartSnapshotResponse'] :: StartSnapshotResponse -> Maybe (Sensitive Text)

-- | The timestamp when the snapshot was created.
[$sel:startTime:StartSnapshotResponse'] :: StartSnapshotResponse -> Maybe POSIX

-- | The size of the volume, in GiB.
[$sel:volumeSize:StartSnapshotResponse'] :: StartSnapshotResponse -> Maybe Natural

-- | The Amazon Web Services account ID of the snapshot owner.
[$sel:ownerId:StartSnapshotResponse'] :: StartSnapshotResponse -> Maybe Text

-- | The ID of the parent snapshot.
[$sel:parentSnapshotId:StartSnapshotResponse'] :: StartSnapshotResponse -> Maybe Text

-- | The description of the snapshot.
[$sel:description:StartSnapshotResponse'] :: StartSnapshotResponse -> Maybe Text

-- | The tags applied to the snapshot. You can specify up to 50 tags per
--   snapshot. For more information, see <a>Tagging your Amazon EC2
--   resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
[$sel:tags:StartSnapshotResponse'] :: StartSnapshotResponse -> Maybe [Tag]

-- | The ID of the snapshot.
[$sel:snapshotId:StartSnapshotResponse'] :: StartSnapshotResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartSnapshotResponse'] :: StartSnapshotResponse -> Int

-- | Create a value of <a>StartSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockSize:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_blockSize</a> - The size of the blocks in the
--   snapshot, in bytes.
--   
--   <a>$sel:status:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_status</a> - The status of the snapshot.
--   
--   <a>$sel:kmsKeyArn:StartSnapshot'</a>,
--   <a>startSnapshotResponse_kmsKeyArn</a> - The Amazon Resource Name
--   (ARN) of the Key Management Service (KMS) key used to encrypt the
--   snapshot.
--   
--   <a>$sel:startTime:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_startTime</a> - The timestamp when the
--   snapshot was created.
--   
--   <a>$sel:volumeSize:StartSnapshot'</a>,
--   <a>startSnapshotResponse_volumeSize</a> - The size of the volume, in
--   GiB.
--   
--   <a>$sel:ownerId:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_ownerId</a> - The Amazon Web Services account
--   ID of the snapshot owner.
--   
--   <a>$sel:parentSnapshotId:StartSnapshot'</a>,
--   <a>startSnapshotResponse_parentSnapshotId</a> - The ID of the parent
--   snapshot.
--   
--   <a>$sel:description:StartSnapshot'</a>,
--   <a>startSnapshotResponse_description</a> - The description of the
--   snapshot.
--   
--   <a>$sel:tags:StartSnapshot'</a>, <a>startSnapshotResponse_tags</a> -
--   The tags applied to the snapshot. You can specify up to 50 tags per
--   snapshot. For more information, see <a>Tagging your Amazon EC2
--   resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   <a>$sel:snapshotId:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_snapshotId</a> - The ID of the snapshot.
--   
--   <a>$sel:httpStatus:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_httpStatus</a> - The response's http status
--   code.
newStartSnapshotResponse :: Int -> StartSnapshotResponse

-- | The size of the blocks in the snapshot, in bytes.
startSnapshotResponse_blockSize :: Lens' StartSnapshotResponse (Maybe Int)

-- | The status of the snapshot.
startSnapshotResponse_status :: Lens' StartSnapshotResponse (Maybe Status)

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   used to encrypt the snapshot.
startSnapshotResponse_kmsKeyArn :: Lens' StartSnapshotResponse (Maybe Text)

-- | The timestamp when the snapshot was created.
startSnapshotResponse_startTime :: Lens' StartSnapshotResponse (Maybe UTCTime)

-- | The size of the volume, in GiB.
startSnapshotResponse_volumeSize :: Lens' StartSnapshotResponse (Maybe Natural)

-- | The Amazon Web Services account ID of the snapshot owner.
startSnapshotResponse_ownerId :: Lens' StartSnapshotResponse (Maybe Text)

-- | The ID of the parent snapshot.
startSnapshotResponse_parentSnapshotId :: Lens' StartSnapshotResponse (Maybe Text)

-- | The description of the snapshot.
startSnapshotResponse_description :: Lens' StartSnapshotResponse (Maybe Text)

-- | The tags applied to the snapshot. You can specify up to 50 tags per
--   snapshot. For more information, see <a>Tagging your Amazon EC2
--   resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
startSnapshotResponse_tags :: Lens' StartSnapshotResponse (Maybe [Tag])

-- | The ID of the snapshot.
startSnapshotResponse_snapshotId :: Lens' StartSnapshotResponse (Maybe Text)

-- | The response's http status code.
startSnapshotResponse_httpStatus :: Lens' StartSnapshotResponse Int
instance GHC.Generics.Generic Amazonka.EBS.StartSnapshot.StartSnapshot
instance GHC.Show.Show Amazonka.EBS.StartSnapshot.StartSnapshot
instance GHC.Classes.Eq Amazonka.EBS.StartSnapshot.StartSnapshot
instance GHC.Generics.Generic Amazonka.EBS.StartSnapshot.StartSnapshotResponse
instance GHC.Show.Show Amazonka.EBS.StartSnapshot.StartSnapshotResponse
instance GHC.Classes.Eq Amazonka.EBS.StartSnapshot.StartSnapshotResponse
instance Amazonka.Types.AWSRequest Amazonka.EBS.StartSnapshot.StartSnapshot
instance Control.DeepSeq.NFData Amazonka.EBS.StartSnapshot.StartSnapshotResponse
instance Data.Hashable.Class.Hashable Amazonka.EBS.StartSnapshot.StartSnapshot
instance Control.DeepSeq.NFData Amazonka.EBS.StartSnapshot.StartSnapshot
instance Amazonka.Data.Headers.ToHeaders Amazonka.EBS.StartSnapshot.StartSnapshot
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EBS.StartSnapshot.StartSnapshot
instance Amazonka.Data.Path.ToPath Amazonka.EBS.StartSnapshot.StartSnapshot
instance Amazonka.Data.Query.ToQuery Amazonka.EBS.StartSnapshot.StartSnapshot


-- | Writes a block of data to a snapshot. If the specified block contains
--   data, the existing data is overwritten. The target snapshot must be in
--   the <tt>pending</tt> state.
--   
--   Data written to a snapshot must be aligned with 512-KiB sectors.
module Amazonka.EBS.PutSnapshotBlock

-- | <i>See:</i> <a>newPutSnapshotBlock</a> smart constructor.
data PutSnapshotBlock
PutSnapshotBlock' :: Maybe Natural -> Text -> Natural -> Int -> Text -> ChecksumAlgorithm -> HashedBody -> PutSnapshotBlock

-- | The progress of the write process, as a percentage.
[$sel:progress:PutSnapshotBlock'] :: PutSnapshotBlock -> Maybe Natural

-- | The ID of the snapshot.
[$sel:snapshotId:PutSnapshotBlock'] :: PutSnapshotBlock -> Text

-- | The block index of the block in which to write the data. A block index
--   is a logical index in units of <tt>512</tt> KiB blocks. To identify
--   the block index, divide the logical offset of the data in the logical
--   volume by the block size (logical offset of data/<tt>524288</tt>). The
--   logical offset of the data must be <tt>512</tt> KiB aligned.
[$sel:blockIndex:PutSnapshotBlock'] :: PutSnapshotBlock -> Natural

-- | The size of the data to write to the block, in bytes. Currently, the
--   only supported size is <tt>524288</tt> bytes.
--   
--   Valid values: <tt>524288</tt>
[$sel:dataLength:PutSnapshotBlock'] :: PutSnapshotBlock -> Int

-- | A Base64-encoded SHA256 checksum of the data. Only SHA256 checksums
--   are supported.
[$sel:checksum:PutSnapshotBlock'] :: PutSnapshotBlock -> Text

-- | The algorithm used to generate the checksum. Currently, the only
--   supported algorithm is <tt>SHA256</tt>.
[$sel:checksumAlgorithm:PutSnapshotBlock'] :: PutSnapshotBlock -> ChecksumAlgorithm

-- | The data to write to the block.
--   
--   The block data is not signed as part of the Signature Version 4
--   signing process. As a result, you must generate and provide a
--   Base64-encoded SHA256 checksum for the block data using the
--   <b>x-amz-Checksum</b> header. Also, you must specify the checksum
--   algorithm using the <b>x-amz-Checksum-Algorithm</b> header. The
--   checksum that you provide is part of the Signature Version 4 signing
--   process. It is validated against a checksum generated by Amazon EBS to
--   ensure the validity and authenticity of the data. If the checksums do
--   not correspond, the request fails. For more information, see <a>Using
--   checksums with the EBS direct APIs</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
[$sel:blockData:PutSnapshotBlock'] :: PutSnapshotBlock -> HashedBody

-- | Create a value of <a>PutSnapshotBlock</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progress:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_progress</a> - The progress of the write process,
--   as a percentage.
--   
--   <a>$sel:snapshotId:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_snapshotId</a> - The ID of the snapshot.
--   
--   <a>$sel:blockIndex:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_blockIndex</a> - The block index of the block in
--   which to write the data. A block index is a logical index in units of
--   <tt>512</tt> KiB blocks. To identify the block index, divide the
--   logical offset of the data in the logical volume by the block size
--   (logical offset of data/<tt>524288</tt>). The logical offset of the
--   data must be <tt>512</tt> KiB aligned.
--   
--   <a>$sel:dataLength:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_dataLength</a> - The size of the data to write to
--   the block, in bytes. Currently, the only supported size is
--   <tt>524288</tt> bytes.
--   
--   Valid values: <tt>524288</tt>
--   
--   <a>$sel:checksum:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_checksum</a> - A Base64-encoded SHA256 checksum of
--   the data. Only SHA256 checksums are supported.
--   
--   <a>$sel:checksumAlgorithm:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_checksumAlgorithm</a> - The algorithm used to
--   generate the checksum. Currently, the only supported algorithm is
--   <tt>SHA256</tt>.
--   
--   <a>$sel:blockData:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_blockData</a> - The data to write to the block.
--   
--   The block data is not signed as part of the Signature Version 4
--   signing process. As a result, you must generate and provide a
--   Base64-encoded SHA256 checksum for the block data using the
--   <b>x-amz-Checksum</b> header. Also, you must specify the checksum
--   algorithm using the <b>x-amz-Checksum-Algorithm</b> header. The
--   checksum that you provide is part of the Signature Version 4 signing
--   process. It is validated against a checksum generated by Amazon EBS to
--   ensure the validity and authenticity of the data. If the checksums do
--   not correspond, the request fails. For more information, see <a>Using
--   checksums with the EBS direct APIs</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
newPutSnapshotBlock :: Text -> Natural -> Int -> Text -> ChecksumAlgorithm -> HashedBody -> PutSnapshotBlock

-- | The progress of the write process, as a percentage.
putSnapshotBlock_progress :: Lens' PutSnapshotBlock (Maybe Natural)

-- | The ID of the snapshot.
putSnapshotBlock_snapshotId :: Lens' PutSnapshotBlock Text

-- | The block index of the block in which to write the data. A block index
--   is a logical index in units of <tt>512</tt> KiB blocks. To identify
--   the block index, divide the logical offset of the data in the logical
--   volume by the block size (logical offset of data/<tt>524288</tt>). The
--   logical offset of the data must be <tt>512</tt> KiB aligned.
putSnapshotBlock_blockIndex :: Lens' PutSnapshotBlock Natural

-- | The size of the data to write to the block, in bytes. Currently, the
--   only supported size is <tt>524288</tt> bytes.
--   
--   Valid values: <tt>524288</tt>
putSnapshotBlock_dataLength :: Lens' PutSnapshotBlock Int

-- | A Base64-encoded SHA256 checksum of the data. Only SHA256 checksums
--   are supported.
putSnapshotBlock_checksum :: Lens' PutSnapshotBlock Text

-- | The algorithm used to generate the checksum. Currently, the only
--   supported algorithm is <tt>SHA256</tt>.
putSnapshotBlock_checksumAlgorithm :: Lens' PutSnapshotBlock ChecksumAlgorithm

-- | The data to write to the block.
--   
--   The block data is not signed as part of the Signature Version 4
--   signing process. As a result, you must generate and provide a
--   Base64-encoded SHA256 checksum for the block data using the
--   <b>x-amz-Checksum</b> header. Also, you must specify the checksum
--   algorithm using the <b>x-amz-Checksum-Algorithm</b> header. The
--   checksum that you provide is part of the Signature Version 4 signing
--   process. It is validated against a checksum generated by Amazon EBS to
--   ensure the validity and authenticity of the data. If the checksums do
--   not correspond, the request fails. For more information, see <a>Using
--   checksums with the EBS direct APIs</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
putSnapshotBlock_blockData :: Lens' PutSnapshotBlock HashedBody

-- | <i>See:</i> <a>newPutSnapshotBlockResponse</a> smart constructor.
data PutSnapshotBlockResponse
PutSnapshotBlockResponse' :: Maybe ChecksumAlgorithm -> Maybe Text -> Int -> PutSnapshotBlockResponse

-- | The algorithm used by Amazon EBS to generate the checksum.
[$sel:checksumAlgorithm:PutSnapshotBlockResponse'] :: PutSnapshotBlockResponse -> Maybe ChecksumAlgorithm

-- | The SHA256 checksum generated for the block data by Amazon EBS.
[$sel:checksum:PutSnapshotBlockResponse'] :: PutSnapshotBlockResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutSnapshotBlockResponse'] :: PutSnapshotBlockResponse -> Int

-- | Create a value of <a>PutSnapshotBlockResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checksumAlgorithm:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlockResponse_checksumAlgorithm</a> - The algorithm used
--   by Amazon EBS to generate the checksum.
--   
--   <a>$sel:checksum:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlockResponse_checksum</a> - The SHA256 checksum
--   generated for the block data by Amazon EBS.
--   
--   <a>$sel:httpStatus:PutSnapshotBlockResponse'</a>,
--   <a>putSnapshotBlockResponse_httpStatus</a> - The response's http
--   status code.
newPutSnapshotBlockResponse :: Int -> PutSnapshotBlockResponse

-- | The algorithm used by Amazon EBS to generate the checksum.
putSnapshotBlockResponse_checksumAlgorithm :: Lens' PutSnapshotBlockResponse (Maybe ChecksumAlgorithm)

-- | The SHA256 checksum generated for the block data by Amazon EBS.
putSnapshotBlockResponse_checksum :: Lens' PutSnapshotBlockResponse (Maybe Text)

-- | The response's http status code.
putSnapshotBlockResponse_httpStatus :: Lens' PutSnapshotBlockResponse Int
instance GHC.Generics.Generic Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlock
instance GHC.Show.Show Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlock
instance GHC.Generics.Generic Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlockResponse
instance GHC.Show.Show Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlockResponse
instance GHC.Read.Read Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlockResponse
instance GHC.Classes.Eq Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlockResponse
instance Amazonka.Types.AWSRequest Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlock
instance Control.DeepSeq.NFData Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlockResponse
instance Amazonka.Data.Body.ToBody Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlock
instance Amazonka.Data.Headers.ToHeaders Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlock
instance Amazonka.Data.Path.ToPath Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlock
instance Amazonka.Data.Query.ToQuery Amazonka.EBS.PutSnapshotBlock.PutSnapshotBlock


-- | Returns information about the blocks in an Amazon Elastic Block Store
--   snapshot.
module Amazonka.EBS.ListSnapshotBlocks

-- | <i>See:</i> <a>newListSnapshotBlocks</a> smart constructor.
data ListSnapshotBlocks
ListSnapshotBlocks' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Text -> ListSnapshotBlocks

-- | The token to request the next page of results.
[$sel:nextToken:ListSnapshotBlocks'] :: ListSnapshotBlocks -> Maybe Text

-- | The block index from which the list should start. The list in the
--   response will start from this block index or the next valid block
--   index in the snapshot.
[$sel:startingBlockIndex:ListSnapshotBlocks'] :: ListSnapshotBlocks -> Maybe Natural

-- | The number of results to return.
[$sel:maxResults:ListSnapshotBlocks'] :: ListSnapshotBlocks -> Maybe Natural

-- | The ID of the snapshot from which to get block indexes and block
--   tokens.
[$sel:snapshotId:ListSnapshotBlocks'] :: ListSnapshotBlocks -> Text

-- | Create a value of <a>ListSnapshotBlocks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSnapshotBlocks'</a>,
--   <a>listSnapshotBlocks_nextToken</a> - The token to request the next
--   page of results.
--   
--   <a>$sel:startingBlockIndex:ListSnapshotBlocks'</a>,
--   <a>listSnapshotBlocks_startingBlockIndex</a> - The block index from
--   which the list should start. The list in the response will start from
--   this block index or the next valid block index in the snapshot.
--   
--   <a>$sel:maxResults:ListSnapshotBlocks'</a>,
--   <a>listSnapshotBlocks_maxResults</a> - The number of results to
--   return.
--   
--   <a>$sel:snapshotId:ListSnapshotBlocks'</a>,
--   <a>listSnapshotBlocks_snapshotId</a> - The ID of the snapshot from
--   which to get block indexes and block tokens.
newListSnapshotBlocks :: Text -> ListSnapshotBlocks

-- | The token to request the next page of results.
listSnapshotBlocks_nextToken :: Lens' ListSnapshotBlocks (Maybe Text)

-- | The block index from which the list should start. The list in the
--   response will start from this block index or the next valid block
--   index in the snapshot.
listSnapshotBlocks_startingBlockIndex :: Lens' ListSnapshotBlocks (Maybe Natural)

-- | The number of results to return.
listSnapshotBlocks_maxResults :: Lens' ListSnapshotBlocks (Maybe Natural)

-- | The ID of the snapshot from which to get block indexes and block
--   tokens.
listSnapshotBlocks_snapshotId :: Lens' ListSnapshotBlocks Text

-- | <i>See:</i> <a>newListSnapshotBlocksResponse</a> smart constructor.
data ListSnapshotBlocksResponse
ListSnapshotBlocksResponse' :: Maybe Int -> Maybe (Sensitive [Block]) -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Int -> ListSnapshotBlocksResponse

-- | The size of the blocks in the snapshot, in bytes.
[$sel:blockSize:ListSnapshotBlocksResponse'] :: ListSnapshotBlocksResponse -> Maybe Int

-- | An array of objects containing information about the blocks.
[$sel:blocks:ListSnapshotBlocksResponse'] :: ListSnapshotBlocksResponse -> Maybe (Sensitive [Block])

-- | The time when the <tt>BlockToken</tt> expires.
[$sel:expiryTime:ListSnapshotBlocksResponse'] :: ListSnapshotBlocksResponse -> Maybe POSIX

-- | The size of the volume in GB.
[$sel:volumeSize:ListSnapshotBlocksResponse'] :: ListSnapshotBlocksResponse -> Maybe Natural

-- | The token to use to retrieve the next page of results. This value is
--   null when there are no more results to return.
[$sel:nextToken:ListSnapshotBlocksResponse'] :: ListSnapshotBlocksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListSnapshotBlocksResponse'] :: ListSnapshotBlocksResponse -> Int

-- | Create a value of <a>ListSnapshotBlocksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockSize:ListSnapshotBlocksResponse'</a>,
--   <a>listSnapshotBlocksResponse_blockSize</a> - The size of the blocks
--   in the snapshot, in bytes.
--   
--   <a>$sel:blocks:ListSnapshotBlocksResponse'</a>,
--   <a>listSnapshotBlocksResponse_blocks</a> - An array of objects
--   containing information about the blocks.
--   
--   <a>$sel:expiryTime:ListSnapshotBlocksResponse'</a>,
--   <a>listSnapshotBlocksResponse_expiryTime</a> - The time when the
--   <tt>BlockToken</tt> expires.
--   
--   <a>$sel:volumeSize:ListSnapshotBlocksResponse'</a>,
--   <a>listSnapshotBlocksResponse_volumeSize</a> - The size of the volume
--   in GB.
--   
--   <a>$sel:nextToken:ListSnapshotBlocks'</a>,
--   <a>listSnapshotBlocksResponse_nextToken</a> - The token to use to
--   retrieve the next page of results. This value is null when there are
--   no more results to return.
--   
--   <a>$sel:httpStatus:ListSnapshotBlocksResponse'</a>,
--   <a>listSnapshotBlocksResponse_httpStatus</a> - The response's http
--   status code.
newListSnapshotBlocksResponse :: Int -> ListSnapshotBlocksResponse

-- | The size of the blocks in the snapshot, in bytes.
listSnapshotBlocksResponse_blockSize :: Lens' ListSnapshotBlocksResponse (Maybe Int)

-- | An array of objects containing information about the blocks.
listSnapshotBlocksResponse_blocks :: Lens' ListSnapshotBlocksResponse (Maybe [Block])

-- | The time when the <tt>BlockToken</tt> expires.
listSnapshotBlocksResponse_expiryTime :: Lens' ListSnapshotBlocksResponse (Maybe UTCTime)

-- | The size of the volume in GB.
listSnapshotBlocksResponse_volumeSize :: Lens' ListSnapshotBlocksResponse (Maybe Natural)

-- | The token to use to retrieve the next page of results. This value is
--   null when there are no more results to return.
listSnapshotBlocksResponse_nextToken :: Lens' ListSnapshotBlocksResponse (Maybe Text)

-- | The response's http status code.
listSnapshotBlocksResponse_httpStatus :: Lens' ListSnapshotBlocksResponse Int
instance GHC.Generics.Generic Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocks
instance GHC.Show.Show Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocks
instance GHC.Read.Read Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocks
instance GHC.Classes.Eq Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocks
instance GHC.Generics.Generic Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocksResponse
instance GHC.Show.Show Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocksResponse
instance GHC.Classes.Eq Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocksResponse
instance Amazonka.Types.AWSRequest Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocks
instance Control.DeepSeq.NFData Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocksResponse
instance Data.Hashable.Class.Hashable Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocks
instance Control.DeepSeq.NFData Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocks
instance Amazonka.Data.Headers.ToHeaders Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocks
instance Amazonka.Data.Path.ToPath Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocks
instance Amazonka.Data.Query.ToQuery Amazonka.EBS.ListSnapshotBlocks.ListSnapshotBlocks


-- | Returns information about the blocks that are different between two
--   Amazon Elastic Block Store snapshots of the same volume/snapshot
--   lineage.
module Amazonka.EBS.ListChangedBlocks

-- | <i>See:</i> <a>newListChangedBlocks</a> smart constructor.
data ListChangedBlocks
ListChangedBlocks' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Natural -> Text -> ListChangedBlocks

-- | The token to request the next page of results.
[$sel:nextToken:ListChangedBlocks'] :: ListChangedBlocks -> Maybe Text

-- | The block index from which the comparison should start.
--   
--   The list in the response will start from this block index or the next
--   valid block index in the snapshots.
[$sel:startingBlockIndex:ListChangedBlocks'] :: ListChangedBlocks -> Maybe Natural

-- | The ID of the first snapshot to use for the comparison.
--   
--   The <tt>FirstSnapshotID</tt> parameter must be specified with a
--   <tt>SecondSnapshotId</tt> parameter; otherwise, an error occurs.
[$sel:firstSnapshotId:ListChangedBlocks'] :: ListChangedBlocks -> Maybe Text

-- | The number of results to return.
[$sel:maxResults:ListChangedBlocks'] :: ListChangedBlocks -> Maybe Natural

-- | The ID of the second snapshot to use for the comparison.
--   
--   The <tt>SecondSnapshotId</tt> parameter must be specified with a
--   <tt>FirstSnapshotID</tt> parameter; otherwise, an error occurs.
[$sel:secondSnapshotId:ListChangedBlocks'] :: ListChangedBlocks -> Text

-- | Create a value of <a>ListChangedBlocks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChangedBlocks'</a>,
--   <a>listChangedBlocks_nextToken</a> - The token to request the next
--   page of results.
--   
--   <a>$sel:startingBlockIndex:ListChangedBlocks'</a>,
--   <a>listChangedBlocks_startingBlockIndex</a> - The block index from
--   which the comparison should start.
--   
--   The list in the response will start from this block index or the next
--   valid block index in the snapshots.
--   
--   <a>$sel:firstSnapshotId:ListChangedBlocks'</a>,
--   <a>listChangedBlocks_firstSnapshotId</a> - The ID of the first
--   snapshot to use for the comparison.
--   
--   The <tt>FirstSnapshotID</tt> parameter must be specified with a
--   <tt>SecondSnapshotId</tt> parameter; otherwise, an error occurs.
--   
--   <a>$sel:maxResults:ListChangedBlocks'</a>,
--   <a>listChangedBlocks_maxResults</a> - The number of results to return.
--   
--   <a>$sel:secondSnapshotId:ListChangedBlocks'</a>,
--   <a>listChangedBlocks_secondSnapshotId</a> - The ID of the second
--   snapshot to use for the comparison.
--   
--   The <tt>SecondSnapshotId</tt> parameter must be specified with a
--   <tt>FirstSnapshotID</tt> parameter; otherwise, an error occurs.
newListChangedBlocks :: Text -> ListChangedBlocks

-- | The token to request the next page of results.
listChangedBlocks_nextToken :: Lens' ListChangedBlocks (Maybe Text)

-- | The block index from which the comparison should start.
--   
--   The list in the response will start from this block index or the next
--   valid block index in the snapshots.
listChangedBlocks_startingBlockIndex :: Lens' ListChangedBlocks (Maybe Natural)

-- | The ID of the first snapshot to use for the comparison.
--   
--   The <tt>FirstSnapshotID</tt> parameter must be specified with a
--   <tt>SecondSnapshotId</tt> parameter; otherwise, an error occurs.
listChangedBlocks_firstSnapshotId :: Lens' ListChangedBlocks (Maybe Text)

-- | The number of results to return.
listChangedBlocks_maxResults :: Lens' ListChangedBlocks (Maybe Natural)

-- | The ID of the second snapshot to use for the comparison.
--   
--   The <tt>SecondSnapshotId</tt> parameter must be specified with a
--   <tt>FirstSnapshotID</tt> parameter; otherwise, an error occurs.
listChangedBlocks_secondSnapshotId :: Lens' ListChangedBlocks Text

-- | <i>See:</i> <a>newListChangedBlocksResponse</a> smart constructor.
data ListChangedBlocksResponse
ListChangedBlocksResponse' :: Maybe Int -> Maybe POSIX -> Maybe Natural -> Maybe [Sensitive ChangedBlock] -> Maybe Text -> Int -> ListChangedBlocksResponse

-- | The size of the blocks in the snapshot, in bytes.
[$sel:blockSize:ListChangedBlocksResponse'] :: ListChangedBlocksResponse -> Maybe Int

-- | The time when the <tt>BlockToken</tt> expires.
[$sel:expiryTime:ListChangedBlocksResponse'] :: ListChangedBlocksResponse -> Maybe POSIX

-- | The size of the volume in GB.
[$sel:volumeSize:ListChangedBlocksResponse'] :: ListChangedBlocksResponse -> Maybe Natural

-- | An array of objects containing information about the changed blocks.
[$sel:changedBlocks:ListChangedBlocksResponse'] :: ListChangedBlocksResponse -> Maybe [Sensitive ChangedBlock]

-- | The token to use to retrieve the next page of results. This value is
--   null when there are no more results to return.
[$sel:nextToken:ListChangedBlocksResponse'] :: ListChangedBlocksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListChangedBlocksResponse'] :: ListChangedBlocksResponse -> Int

-- | Create a value of <a>ListChangedBlocksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockSize:ListChangedBlocksResponse'</a>,
--   <a>listChangedBlocksResponse_blockSize</a> - The size of the blocks in
--   the snapshot, in bytes.
--   
--   <a>$sel:expiryTime:ListChangedBlocksResponse'</a>,
--   <a>listChangedBlocksResponse_expiryTime</a> - The time when the
--   <tt>BlockToken</tt> expires.
--   
--   <a>$sel:volumeSize:ListChangedBlocksResponse'</a>,
--   <a>listChangedBlocksResponse_volumeSize</a> - The size of the volume
--   in GB.
--   
--   <a>$sel:changedBlocks:ListChangedBlocksResponse'</a>,
--   <a>listChangedBlocksResponse_changedBlocks</a> - An array of objects
--   containing information about the changed blocks.
--   
--   <a>$sel:nextToken:ListChangedBlocks'</a>,
--   <a>listChangedBlocksResponse_nextToken</a> - The token to use to
--   retrieve the next page of results. This value is null when there are
--   no more results to return.
--   
--   <a>$sel:httpStatus:ListChangedBlocksResponse'</a>,
--   <a>listChangedBlocksResponse_httpStatus</a> - The response's http
--   status code.
newListChangedBlocksResponse :: Int -> ListChangedBlocksResponse

-- | The size of the blocks in the snapshot, in bytes.
listChangedBlocksResponse_blockSize :: Lens' ListChangedBlocksResponse (Maybe Int)

-- | The time when the <tt>BlockToken</tt> expires.
listChangedBlocksResponse_expiryTime :: Lens' ListChangedBlocksResponse (Maybe UTCTime)

-- | The size of the volume in GB.
listChangedBlocksResponse_volumeSize :: Lens' ListChangedBlocksResponse (Maybe Natural)

-- | An array of objects containing information about the changed blocks.
listChangedBlocksResponse_changedBlocks :: Lens' ListChangedBlocksResponse (Maybe [ChangedBlock])

-- | The token to use to retrieve the next page of results. This value is
--   null when there are no more results to return.
listChangedBlocksResponse_nextToken :: Lens' ListChangedBlocksResponse (Maybe Text)

-- | The response's http status code.
listChangedBlocksResponse_httpStatus :: Lens' ListChangedBlocksResponse Int
instance GHC.Generics.Generic Amazonka.EBS.ListChangedBlocks.ListChangedBlocks
instance GHC.Show.Show Amazonka.EBS.ListChangedBlocks.ListChangedBlocks
instance GHC.Read.Read Amazonka.EBS.ListChangedBlocks.ListChangedBlocks
instance GHC.Classes.Eq Amazonka.EBS.ListChangedBlocks.ListChangedBlocks
instance GHC.Generics.Generic Amazonka.EBS.ListChangedBlocks.ListChangedBlocksResponse
instance GHC.Show.Show Amazonka.EBS.ListChangedBlocks.ListChangedBlocksResponse
instance GHC.Classes.Eq Amazonka.EBS.ListChangedBlocks.ListChangedBlocksResponse
instance Amazonka.Types.AWSRequest Amazonka.EBS.ListChangedBlocks.ListChangedBlocks
instance Control.DeepSeq.NFData Amazonka.EBS.ListChangedBlocks.ListChangedBlocksResponse
instance Data.Hashable.Class.Hashable Amazonka.EBS.ListChangedBlocks.ListChangedBlocks
instance Control.DeepSeq.NFData Amazonka.EBS.ListChangedBlocks.ListChangedBlocks
instance Amazonka.Data.Headers.ToHeaders Amazonka.EBS.ListChangedBlocks.ListChangedBlocks
instance Amazonka.Data.Path.ToPath Amazonka.EBS.ListChangedBlocks.ListChangedBlocks
instance Amazonka.Data.Query.ToQuery Amazonka.EBS.ListChangedBlocks.ListChangedBlocks


-- | Returns the data in a block in an Amazon Elastic Block Store snapshot.
module Amazonka.EBS.GetSnapshotBlock

-- | <i>See:</i> <a>newGetSnapshotBlock</a> smart constructor.
data GetSnapshotBlock
GetSnapshotBlock' :: Text -> Natural -> Text -> GetSnapshotBlock

-- | The ID of the snapshot containing the block from which to get data.
[$sel:snapshotId:GetSnapshotBlock'] :: GetSnapshotBlock -> Text

-- | The block index of the block from which to get data.
--   
--   Obtain the <tt>BlockIndex</tt> by running the
--   <tt>ListChangedBlocks</tt> or <tt>ListSnapshotBlocks</tt> operations.
[$sel:blockIndex:GetSnapshotBlock'] :: GetSnapshotBlock -> Natural

-- | The block token of the block from which to get data.
--   
--   Obtain the <tt>BlockToken</tt> by running the
--   <tt>ListChangedBlocks</tt> or <tt>ListSnapshotBlocks</tt> operations.
[$sel:blockToken:GetSnapshotBlock'] :: GetSnapshotBlock -> Text

-- | Create a value of <a>GetSnapshotBlock</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshotId:GetSnapshotBlock'</a>,
--   <a>getSnapshotBlock_snapshotId</a> - The ID of the snapshot containing
--   the block from which to get data.
--   
--   <a>$sel:blockIndex:GetSnapshotBlock'</a>,
--   <a>getSnapshotBlock_blockIndex</a> - The block index of the block from
--   which to get data.
--   
--   Obtain the <tt>BlockIndex</tt> by running the
--   <tt>ListChangedBlocks</tt> or <tt>ListSnapshotBlocks</tt> operations.
--   
--   <a>$sel:blockToken:GetSnapshotBlock'</a>,
--   <a>getSnapshotBlock_blockToken</a> - The block token of the block from
--   which to get data.
--   
--   Obtain the <tt>BlockToken</tt> by running the
--   <tt>ListChangedBlocks</tt> or <tt>ListSnapshotBlocks</tt> operations.
newGetSnapshotBlock :: Text -> Natural -> Text -> GetSnapshotBlock

-- | The ID of the snapshot containing the block from which to get data.
getSnapshotBlock_snapshotId :: Lens' GetSnapshotBlock Text

-- | The block index of the block from which to get data.
--   
--   Obtain the <tt>BlockIndex</tt> by running the
--   <tt>ListChangedBlocks</tt> or <tt>ListSnapshotBlocks</tt> operations.
getSnapshotBlock_blockIndex :: Lens' GetSnapshotBlock Natural

-- | The block token of the block from which to get data.
--   
--   Obtain the <tt>BlockToken</tt> by running the
--   <tt>ListChangedBlocks</tt> or <tt>ListSnapshotBlocks</tt> operations.
getSnapshotBlock_blockToken :: Lens' GetSnapshotBlock Text

-- | <i>See:</i> <a>newGetSnapshotBlockResponse</a> smart constructor.
data GetSnapshotBlockResponse
GetSnapshotBlockResponse' :: Maybe Int -> Maybe ChecksumAlgorithm -> Maybe Text -> Int -> ResponseBody -> GetSnapshotBlockResponse

-- | The size of the data in the block.
[$sel:dataLength:GetSnapshotBlockResponse'] :: GetSnapshotBlockResponse -> Maybe Int

-- | The algorithm used to generate the checksum for the block, such as
--   SHA256.
[$sel:checksumAlgorithm:GetSnapshotBlockResponse'] :: GetSnapshotBlockResponse -> Maybe ChecksumAlgorithm

-- | The checksum generated for the block, which is Base64 encoded.
[$sel:checksum:GetSnapshotBlockResponse'] :: GetSnapshotBlockResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetSnapshotBlockResponse'] :: GetSnapshotBlockResponse -> Int

-- | The data content of the block.
[$sel:blockData:GetSnapshotBlockResponse'] :: GetSnapshotBlockResponse -> ResponseBody

-- | Create a value of <a>GetSnapshotBlockResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLength:GetSnapshotBlockResponse'</a>,
--   <a>getSnapshotBlockResponse_dataLength</a> - The size of the data in
--   the block.
--   
--   <a>$sel:checksumAlgorithm:GetSnapshotBlockResponse'</a>,
--   <a>getSnapshotBlockResponse_checksumAlgorithm</a> - The algorithm used
--   to generate the checksum for the block, such as SHA256.
--   
--   <a>$sel:checksum:GetSnapshotBlockResponse'</a>,
--   <a>getSnapshotBlockResponse_checksum</a> - The checksum generated for
--   the block, which is Base64 encoded.
--   
--   <a>$sel:httpStatus:GetSnapshotBlockResponse'</a>,
--   <a>getSnapshotBlockResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:blockData:GetSnapshotBlockResponse'</a>,
--   <a>getSnapshotBlockResponse_blockData</a> - The data content of the
--   block.
newGetSnapshotBlockResponse :: Int -> ResponseBody -> GetSnapshotBlockResponse

-- | The size of the data in the block.
getSnapshotBlockResponse_dataLength :: Lens' GetSnapshotBlockResponse (Maybe Int)

-- | The algorithm used to generate the checksum for the block, such as
--   SHA256.
getSnapshotBlockResponse_checksumAlgorithm :: Lens' GetSnapshotBlockResponse (Maybe ChecksumAlgorithm)

-- | The checksum generated for the block, which is Base64 encoded.
getSnapshotBlockResponse_checksum :: Lens' GetSnapshotBlockResponse (Maybe Text)

-- | The response's http status code.
getSnapshotBlockResponse_httpStatus :: Lens' GetSnapshotBlockResponse Int

-- | The data content of the block.
getSnapshotBlockResponse_blockData :: Lens' GetSnapshotBlockResponse ResponseBody
instance GHC.Generics.Generic Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlock
instance GHC.Show.Show Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlock
instance GHC.Read.Read Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlock
instance GHC.Classes.Eq Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlock
instance GHC.Generics.Generic Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlockResponse
instance GHC.Show.Show Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlockResponse
instance Amazonka.Types.AWSRequest Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlock
instance Data.Hashable.Class.Hashable Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlock
instance Control.DeepSeq.NFData Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlock
instance Amazonka.Data.Headers.ToHeaders Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlock
instance Amazonka.Data.Path.ToPath Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlock
instance Amazonka.Data.Query.ToQuery Amazonka.EBS.GetSnapshotBlock.GetSnapshotBlock


-- | Seals and completes the snapshot after all of the required blocks of
--   data have been written to it. Completing the snapshot changes the
--   status to <tt>completed</tt>. You cannot write new blocks to a
--   snapshot after it has been completed.
module Amazonka.EBS.CompleteSnapshot

-- | <i>See:</i> <a>newCompleteSnapshot</a> smart constructor.
data CompleteSnapshot
CompleteSnapshot' :: Maybe ChecksumAlgorithm -> Maybe Text -> Maybe ChecksumAggregationMethod -> Text -> Natural -> CompleteSnapshot

-- | The algorithm used to generate the checksum. Currently, the only
--   supported algorithm is <tt>SHA256</tt>.
[$sel:checksumAlgorithm:CompleteSnapshot'] :: CompleteSnapshot -> Maybe ChecksumAlgorithm

-- | An aggregated Base-64 SHA256 checksum based on the checksums of each
--   written block.
--   
--   To generate the aggregated checksum using the linear aggregation
--   method, arrange the checksums for each written block in ascending
--   order of their block index, concatenate them to form a single string,
--   and then generate the checksum on the entire string using the SHA256
--   algorithm.
[$sel:checksum:CompleteSnapshot'] :: CompleteSnapshot -> Maybe Text

-- | The aggregation method used to generate the checksum. Currently, the
--   only supported aggregation method is <tt>LINEAR</tt>.
[$sel:checksumAggregationMethod:CompleteSnapshot'] :: CompleteSnapshot -> Maybe ChecksumAggregationMethod

-- | The ID of the snapshot.
[$sel:snapshotId:CompleteSnapshot'] :: CompleteSnapshot -> Text

-- | The number of blocks that were written to the snapshot.
[$sel:changedBlocksCount:CompleteSnapshot'] :: CompleteSnapshot -> Natural

-- | Create a value of <a>CompleteSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checksumAlgorithm:CompleteSnapshot'</a>,
--   <a>completeSnapshot_checksumAlgorithm</a> - The algorithm used to
--   generate the checksum. Currently, the only supported algorithm is
--   <tt>SHA256</tt>.
--   
--   <a>$sel:checksum:CompleteSnapshot'</a>,
--   <a>completeSnapshot_checksum</a> - An aggregated Base-64 SHA256
--   checksum based on the checksums of each written block.
--   
--   To generate the aggregated checksum using the linear aggregation
--   method, arrange the checksums for each written block in ascending
--   order of their block index, concatenate them to form a single string,
--   and then generate the checksum on the entire string using the SHA256
--   algorithm.
--   
--   <a>$sel:checksumAggregationMethod:CompleteSnapshot'</a>,
--   <a>completeSnapshot_checksumAggregationMethod</a> - The aggregation
--   method used to generate the checksum. Currently, the only supported
--   aggregation method is <tt>LINEAR</tt>.
--   
--   <a>$sel:snapshotId:CompleteSnapshot'</a>,
--   <a>completeSnapshot_snapshotId</a> - The ID of the snapshot.
--   
--   <a>$sel:changedBlocksCount:CompleteSnapshot'</a>,
--   <a>completeSnapshot_changedBlocksCount</a> - The number of blocks that
--   were written to the snapshot.
newCompleteSnapshot :: Text -> Natural -> CompleteSnapshot

-- | The algorithm used to generate the checksum. Currently, the only
--   supported algorithm is <tt>SHA256</tt>.
completeSnapshot_checksumAlgorithm :: Lens' CompleteSnapshot (Maybe ChecksumAlgorithm)

-- | An aggregated Base-64 SHA256 checksum based on the checksums of each
--   written block.
--   
--   To generate the aggregated checksum using the linear aggregation
--   method, arrange the checksums for each written block in ascending
--   order of their block index, concatenate them to form a single string,
--   and then generate the checksum on the entire string using the SHA256
--   algorithm.
completeSnapshot_checksum :: Lens' CompleteSnapshot (Maybe Text)

-- | The aggregation method used to generate the checksum. Currently, the
--   only supported aggregation method is <tt>LINEAR</tt>.
completeSnapshot_checksumAggregationMethod :: Lens' CompleteSnapshot (Maybe ChecksumAggregationMethod)

-- | The ID of the snapshot.
completeSnapshot_snapshotId :: Lens' CompleteSnapshot Text

-- | The number of blocks that were written to the snapshot.
completeSnapshot_changedBlocksCount :: Lens' CompleteSnapshot Natural

-- | <i>See:</i> <a>newCompleteSnapshotResponse</a> smart constructor.
data CompleteSnapshotResponse
CompleteSnapshotResponse' :: Maybe Status -> Int -> CompleteSnapshotResponse

-- | The status of the snapshot.
[$sel:status:CompleteSnapshotResponse'] :: CompleteSnapshotResponse -> Maybe Status

-- | The response's http status code.
[$sel:httpStatus:CompleteSnapshotResponse'] :: CompleteSnapshotResponse -> Int

-- | Create a value of <a>CompleteSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CompleteSnapshotResponse'</a>,
--   <a>completeSnapshotResponse_status</a> - The status of the snapshot.
--   
--   <a>$sel:httpStatus:CompleteSnapshotResponse'</a>,
--   <a>completeSnapshotResponse_httpStatus</a> - The response's http
--   status code.
newCompleteSnapshotResponse :: Int -> CompleteSnapshotResponse

-- | The status of the snapshot.
completeSnapshotResponse_status :: Lens' CompleteSnapshotResponse (Maybe Status)

-- | The response's http status code.
completeSnapshotResponse_httpStatus :: Lens' CompleteSnapshotResponse Int
instance GHC.Generics.Generic Amazonka.EBS.CompleteSnapshot.CompleteSnapshot
instance GHC.Show.Show Amazonka.EBS.CompleteSnapshot.CompleteSnapshot
instance GHC.Read.Read Amazonka.EBS.CompleteSnapshot.CompleteSnapshot
instance GHC.Classes.Eq Amazonka.EBS.CompleteSnapshot.CompleteSnapshot
instance GHC.Generics.Generic Amazonka.EBS.CompleteSnapshot.CompleteSnapshotResponse
instance GHC.Show.Show Amazonka.EBS.CompleteSnapshot.CompleteSnapshotResponse
instance GHC.Read.Read Amazonka.EBS.CompleteSnapshot.CompleteSnapshotResponse
instance GHC.Classes.Eq Amazonka.EBS.CompleteSnapshot.CompleteSnapshotResponse
instance Amazonka.Types.AWSRequest Amazonka.EBS.CompleteSnapshot.CompleteSnapshot
instance Control.DeepSeq.NFData Amazonka.EBS.CompleteSnapshot.CompleteSnapshotResponse
instance Data.Hashable.Class.Hashable Amazonka.EBS.CompleteSnapshot.CompleteSnapshot
instance Control.DeepSeq.NFData Amazonka.EBS.CompleteSnapshot.CompleteSnapshot
instance Amazonka.Data.Headers.ToHeaders Amazonka.EBS.CompleteSnapshot.CompleteSnapshot
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.EBS.CompleteSnapshot.CompleteSnapshot
instance Amazonka.Data.Path.ToPath Amazonka.EBS.CompleteSnapshot.CompleteSnapshot
instance Amazonka.Data.Query.ToQuery Amazonka.EBS.CompleteSnapshot.CompleteSnapshot


module Amazonka.EBS.Lens

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   to be used to encrypt the snapshot. If you do not specify a KMS key,
--   the default Amazon Web Services managed KMS key is used.
--   
--   If you specify a <b>ParentSnapshotId</b>, omit this parameter; the
--   snapshot will be encrypted using the same KMS key that was used to
--   encrypt the parent snapshot.
--   
--   If <b>Encrypted</b> is set to <tt>true</tt>, you must specify a KMS
--   key ARN.
startSnapshot_kmsKeyArn :: Lens' StartSnapshot (Maybe Text)

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request. Idempotency ensures that an API request
--   completes only once. With an idempotent request, if the original
--   request completes successfully. The subsequent retries with the same
--   client token return the result from the original successful request
--   and they have no additional effect.
--   
--   If you do not specify a client token, one is automatically generated
--   by the Amazon Web Services SDK.
--   
--   For more information, see <a>Idempotency for StartSnapshot API</a> in
--   the <i>Amazon Elastic Compute Cloud User Guide</i>.
startSnapshot_clientToken :: Lens' StartSnapshot (Maybe Text)

-- | Indicates whether to encrypt the snapshot. To create an encrypted
--   snapshot, specify <tt>true</tt>. To create an unencrypted snapshot,
--   omit this parameter.
--   
--   If you specify a value for <b>ParentSnapshotId</b>, omit this
--   parameter.
--   
--   If you specify <tt>true</tt>, the snapshot is encrypted using the KMS
--   key specified using the <b>KmsKeyArn</b> parameter. If no value is
--   specified for <b>KmsKeyArn</b>, the default KMS key for your account
--   is used. If no default KMS key has been specified for your account,
--   the Amazon Web Services managed KMS key is used. To set a default KMS
--   key for your account, use <a>ModifyEbsDefaultKmsKeyId</a>.
--   
--   If your account is enabled for encryption by default, you cannot set
--   this parameter to <tt>false</tt>. In this case, you can omit this
--   parameter.
--   
--   For more information, see <a>Using encryption</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide</i>.
startSnapshot_encrypted :: Lens' StartSnapshot (Maybe Bool)

-- | The ID of the parent snapshot. If there is no parent snapshot, or if
--   you are creating the first snapshot for an on-premises volume, omit
--   this parameter.
--   
--   If your account is enabled for encryption by default, you cannot use
--   an unencrypted snapshot as a parent snapshot. You must first create an
--   encrypted copy of the parent snapshot using <a>CopySnapshot</a>.
startSnapshot_parentSnapshotId :: Lens' StartSnapshot (Maybe Text)

-- | The amount of time (in minutes) after which the snapshot is
--   automatically cancelled if:
--   
--   <ul>
--   <li>No blocks are written to the snapshot.</li>
--   <li>The snapshot is not completed after writing the last block of
--   data.</li>
--   </ul>
--   
--   If no value is specified, the timeout defaults to <tt>60</tt> minutes.
startSnapshot_timeout :: Lens' StartSnapshot (Maybe Natural)

-- | A description for the snapshot.
startSnapshot_description :: Lens' StartSnapshot (Maybe Text)

-- | The tags to apply to the snapshot.
startSnapshot_tags :: Lens' StartSnapshot (Maybe [Tag])

-- | The size of the volume, in GiB. The maximum size is <tt>65536</tt> GiB
--   (64 TiB).
startSnapshot_volumeSize :: Lens' StartSnapshot Natural

-- | The size of the blocks in the snapshot, in bytes.
startSnapshotResponse_blockSize :: Lens' StartSnapshotResponse (Maybe Int)

-- | The status of the snapshot.
startSnapshotResponse_status :: Lens' StartSnapshotResponse (Maybe Status)

-- | The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   used to encrypt the snapshot.
startSnapshotResponse_kmsKeyArn :: Lens' StartSnapshotResponse (Maybe Text)

-- | The timestamp when the snapshot was created.
startSnapshotResponse_startTime :: Lens' StartSnapshotResponse (Maybe UTCTime)

-- | The size of the volume, in GiB.
startSnapshotResponse_volumeSize :: Lens' StartSnapshotResponse (Maybe Natural)

-- | The Amazon Web Services account ID of the snapshot owner.
startSnapshotResponse_ownerId :: Lens' StartSnapshotResponse (Maybe Text)

-- | The ID of the parent snapshot.
startSnapshotResponse_parentSnapshotId :: Lens' StartSnapshotResponse (Maybe Text)

-- | The description of the snapshot.
startSnapshotResponse_description :: Lens' StartSnapshotResponse (Maybe Text)

-- | The tags applied to the snapshot. You can specify up to 50 tags per
--   snapshot. For more information, see <a>Tagging your Amazon EC2
--   resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
startSnapshotResponse_tags :: Lens' StartSnapshotResponse (Maybe [Tag])

-- | The ID of the snapshot.
startSnapshotResponse_snapshotId :: Lens' StartSnapshotResponse (Maybe Text)

-- | The response's http status code.
startSnapshotResponse_httpStatus :: Lens' StartSnapshotResponse Int

-- | The token to request the next page of results.
listSnapshotBlocks_nextToken :: Lens' ListSnapshotBlocks (Maybe Text)

-- | The block index from which the list should start. The list in the
--   response will start from this block index or the next valid block
--   index in the snapshot.
listSnapshotBlocks_startingBlockIndex :: Lens' ListSnapshotBlocks (Maybe Natural)

-- | The number of results to return.
listSnapshotBlocks_maxResults :: Lens' ListSnapshotBlocks (Maybe Natural)

-- | The ID of the snapshot from which to get block indexes and block
--   tokens.
listSnapshotBlocks_snapshotId :: Lens' ListSnapshotBlocks Text

-- | The size of the blocks in the snapshot, in bytes.
listSnapshotBlocksResponse_blockSize :: Lens' ListSnapshotBlocksResponse (Maybe Int)

-- | An array of objects containing information about the blocks.
listSnapshotBlocksResponse_blocks :: Lens' ListSnapshotBlocksResponse (Maybe [Block])

-- | The time when the <tt>BlockToken</tt> expires.
listSnapshotBlocksResponse_expiryTime :: Lens' ListSnapshotBlocksResponse (Maybe UTCTime)

-- | The size of the volume in GB.
listSnapshotBlocksResponse_volumeSize :: Lens' ListSnapshotBlocksResponse (Maybe Natural)

-- | The token to use to retrieve the next page of results. This value is
--   null when there are no more results to return.
listSnapshotBlocksResponse_nextToken :: Lens' ListSnapshotBlocksResponse (Maybe Text)

-- | The response's http status code.
listSnapshotBlocksResponse_httpStatus :: Lens' ListSnapshotBlocksResponse Int

-- | The progress of the write process, as a percentage.
putSnapshotBlock_progress :: Lens' PutSnapshotBlock (Maybe Natural)

-- | The ID of the snapshot.
putSnapshotBlock_snapshotId :: Lens' PutSnapshotBlock Text

-- | The block index of the block in which to write the data. A block index
--   is a logical index in units of <tt>512</tt> KiB blocks. To identify
--   the block index, divide the logical offset of the data in the logical
--   volume by the block size (logical offset of data/<tt>524288</tt>). The
--   logical offset of the data must be <tt>512</tt> KiB aligned.
putSnapshotBlock_blockIndex :: Lens' PutSnapshotBlock Natural

-- | The size of the data to write to the block, in bytes. Currently, the
--   only supported size is <tt>524288</tt> bytes.
--   
--   Valid values: <tt>524288</tt>
putSnapshotBlock_dataLength :: Lens' PutSnapshotBlock Int

-- | A Base64-encoded SHA256 checksum of the data. Only SHA256 checksums
--   are supported.
putSnapshotBlock_checksum :: Lens' PutSnapshotBlock Text

-- | The algorithm used to generate the checksum. Currently, the only
--   supported algorithm is <tt>SHA256</tt>.
putSnapshotBlock_checksumAlgorithm :: Lens' PutSnapshotBlock ChecksumAlgorithm

-- | The data to write to the block.
--   
--   The block data is not signed as part of the Signature Version 4
--   signing process. As a result, you must generate and provide a
--   Base64-encoded SHA256 checksum for the block data using the
--   <b>x-amz-Checksum</b> header. Also, you must specify the checksum
--   algorithm using the <b>x-amz-Checksum-Algorithm</b> header. The
--   checksum that you provide is part of the Signature Version 4 signing
--   process. It is validated against a checksum generated by Amazon EBS to
--   ensure the validity and authenticity of the data. If the checksums do
--   not correspond, the request fails. For more information, see <a>Using
--   checksums with the EBS direct APIs</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
putSnapshotBlock_blockData :: Lens' PutSnapshotBlock HashedBody

-- | The algorithm used by Amazon EBS to generate the checksum.
putSnapshotBlockResponse_checksumAlgorithm :: Lens' PutSnapshotBlockResponse (Maybe ChecksumAlgorithm)

-- | The SHA256 checksum generated for the block data by Amazon EBS.
putSnapshotBlockResponse_checksum :: Lens' PutSnapshotBlockResponse (Maybe Text)

-- | The response's http status code.
putSnapshotBlockResponse_httpStatus :: Lens' PutSnapshotBlockResponse Int

-- | The token to request the next page of results.
listChangedBlocks_nextToken :: Lens' ListChangedBlocks (Maybe Text)

-- | The block index from which the comparison should start.
--   
--   The list in the response will start from this block index or the next
--   valid block index in the snapshots.
listChangedBlocks_startingBlockIndex :: Lens' ListChangedBlocks (Maybe Natural)

-- | The ID of the first snapshot to use for the comparison.
--   
--   The <tt>FirstSnapshotID</tt> parameter must be specified with a
--   <tt>SecondSnapshotId</tt> parameter; otherwise, an error occurs.
listChangedBlocks_firstSnapshotId :: Lens' ListChangedBlocks (Maybe Text)

-- | The number of results to return.
listChangedBlocks_maxResults :: Lens' ListChangedBlocks (Maybe Natural)

-- | The ID of the second snapshot to use for the comparison.
--   
--   The <tt>SecondSnapshotId</tt> parameter must be specified with a
--   <tt>FirstSnapshotID</tt> parameter; otherwise, an error occurs.
listChangedBlocks_secondSnapshotId :: Lens' ListChangedBlocks Text

-- | The size of the blocks in the snapshot, in bytes.
listChangedBlocksResponse_blockSize :: Lens' ListChangedBlocksResponse (Maybe Int)

-- | The time when the <tt>BlockToken</tt> expires.
listChangedBlocksResponse_expiryTime :: Lens' ListChangedBlocksResponse (Maybe UTCTime)

-- | The size of the volume in GB.
listChangedBlocksResponse_volumeSize :: Lens' ListChangedBlocksResponse (Maybe Natural)

-- | An array of objects containing information about the changed blocks.
listChangedBlocksResponse_changedBlocks :: Lens' ListChangedBlocksResponse (Maybe [ChangedBlock])

-- | The token to use to retrieve the next page of results. This value is
--   null when there are no more results to return.
listChangedBlocksResponse_nextToken :: Lens' ListChangedBlocksResponse (Maybe Text)

-- | The response's http status code.
listChangedBlocksResponse_httpStatus :: Lens' ListChangedBlocksResponse Int

-- | The algorithm used to generate the checksum. Currently, the only
--   supported algorithm is <tt>SHA256</tt>.
completeSnapshot_checksumAlgorithm :: Lens' CompleteSnapshot (Maybe ChecksumAlgorithm)

-- | An aggregated Base-64 SHA256 checksum based on the checksums of each
--   written block.
--   
--   To generate the aggregated checksum using the linear aggregation
--   method, arrange the checksums for each written block in ascending
--   order of their block index, concatenate them to form a single string,
--   and then generate the checksum on the entire string using the SHA256
--   algorithm.
completeSnapshot_checksum :: Lens' CompleteSnapshot (Maybe Text)

-- | The aggregation method used to generate the checksum. Currently, the
--   only supported aggregation method is <tt>LINEAR</tt>.
completeSnapshot_checksumAggregationMethod :: Lens' CompleteSnapshot (Maybe ChecksumAggregationMethod)

-- | The ID of the snapshot.
completeSnapshot_snapshotId :: Lens' CompleteSnapshot Text

-- | The number of blocks that were written to the snapshot.
completeSnapshot_changedBlocksCount :: Lens' CompleteSnapshot Natural

-- | The status of the snapshot.
completeSnapshotResponse_status :: Lens' CompleteSnapshotResponse (Maybe Status)

-- | The response's http status code.
completeSnapshotResponse_httpStatus :: Lens' CompleteSnapshotResponse Int

-- | The ID of the snapshot containing the block from which to get data.
getSnapshotBlock_snapshotId :: Lens' GetSnapshotBlock Text

-- | The block index of the block from which to get data.
--   
--   Obtain the <tt>BlockIndex</tt> by running the
--   <tt>ListChangedBlocks</tt> or <tt>ListSnapshotBlocks</tt> operations.
getSnapshotBlock_blockIndex :: Lens' GetSnapshotBlock Natural

-- | The block token of the block from which to get data.
--   
--   Obtain the <tt>BlockToken</tt> by running the
--   <tt>ListChangedBlocks</tt> or <tt>ListSnapshotBlocks</tt> operations.
getSnapshotBlock_blockToken :: Lens' GetSnapshotBlock Text

-- | The size of the data in the block.
getSnapshotBlockResponse_dataLength :: Lens' GetSnapshotBlockResponse (Maybe Int)

-- | The algorithm used to generate the checksum for the block, such as
--   SHA256.
getSnapshotBlockResponse_checksumAlgorithm :: Lens' GetSnapshotBlockResponse (Maybe ChecksumAlgorithm)

-- | The checksum generated for the block, which is Base64 encoded.
getSnapshotBlockResponse_checksum :: Lens' GetSnapshotBlockResponse (Maybe Text)

-- | The response's http status code.
getSnapshotBlockResponse_httpStatus :: Lens' GetSnapshotBlockResponse Int

-- | The data content of the block.
getSnapshotBlockResponse_blockData :: Lens' GetSnapshotBlockResponse ResponseBody

-- | The block index.
block_blockIndex :: Lens' Block (Maybe Natural)

-- | The block token for the block index.
block_blockToken :: Lens' Block (Maybe Text)

-- | The block index.
changedBlock_blockIndex :: Lens' ChangedBlock (Maybe Natural)

-- | The block token for the block index of the <tt>SecondSnapshotId</tt>
--   specified in the <tt>ListChangedBlocks</tt> operation.
changedBlock_secondBlockToken :: Lens' ChangedBlock (Maybe Text)

-- | The block token for the block index of the <tt>FirstSnapshotId</tt>
--   specified in the <tt>ListChangedBlocks</tt> operation. This value is
--   absent if the first snapshot does not have the changed block that is
--   on the second snapshot.
changedBlock_firstBlockToken :: Lens' ChangedBlock (Maybe Text)

-- | The value of the tag.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the tag.
tag_key :: Lens' Tag (Maybe Text)


module Amazonka.EBS.Waiters


-- | Derived from API version <tt>2019-11-02</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   You can use the Amazon Elastic Block Store (Amazon EBS) direct APIs to
--   create Amazon EBS snapshots, write data directly to your snapshots,
--   read data on your snapshots, and identify the differences or changes
--   between two snapshots. If you’re an independent software vendor (ISV)
--   who offers backup services for Amazon EBS, the EBS direct APIs make it
--   more efficient and cost-effective to track incremental changes on your
--   Amazon EBS volumes through snapshots. This can be done without having
--   to create new volumes from snapshots, and then use Amazon Elastic
--   Compute Cloud (Amazon EC2) instances to compare the differences.
--   
--   You can create incremental snapshots directly from data on-premises
--   into volumes and the cloud to use for quick disaster recovery. With
--   the ability to write and read snapshots, you can write your
--   on-premises data to an snapshot during a disaster. Then after
--   recovery, you can restore it back to Amazon Web Services or
--   on-premises from the snapshot. You no longer need to build and
--   maintain complex mechanisms to copy data to and from Amazon EBS.
--   
--   This API reference provides detailed information about the actions,
--   data types, parameters, and errors of the EBS direct APIs. For more
--   information about the elements that make up the EBS direct APIs, and
--   examples of how to use them effectively, see <a>Accessing the Contents
--   of an Amazon EBS Snapshot</a> in the <i>Amazon Elastic Compute Cloud
--   User Guide</i>. For more information about the supported Amazon Web
--   Services Regions, endpoints, and service quotas for the EBS direct
--   APIs, see <a>Amazon Elastic Block Store Endpoints and Quotas</a> in
--   the <i>Amazon Web Services General Reference</i>.
module Amazonka.EBS

-- | API version <tt>2019-11-02</tt> of the Amazon Elastic Block Store SDK
--   configuration.
defaultService :: Service

-- | The input fails to satisfy the constraints of the EBS direct APIs.
_ValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You do not have sufficient access to perform this action.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request uses the same client token as a previous, but
--   non-identical request.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your current service quotas do not allow you to perform this action.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have reached the limit for concurrent API requests. For more
--   information, see <a>Optimizing performance of the EBS direct APIs</a>
--   in the <i>Amazon Elastic Compute Cloud User Guide</i>.
_ConcurrentLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The number of API requests has exceed the maximum allowed API request
--   throttling limit.
_RequestThrottledException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An internal error has occurred.
_InternalServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newStartSnapshot</a> smart constructor.
data StartSnapshot
StartSnapshot' :: Maybe (Sensitive Text) -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Natural -> Maybe Text -> Maybe [Tag] -> Natural -> StartSnapshot

-- | Create a value of <a>StartSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kmsKeyArn:StartSnapshot'</a>, <a>startSnapshot_kmsKeyArn</a> -
--   The Amazon Resource Name (ARN) of the Key Management Service (KMS) key
--   to be used to encrypt the snapshot. If you do not specify a KMS key,
--   the default Amazon Web Services managed KMS key is used.
--   
--   If you specify a <b>ParentSnapshotId</b>, omit this parameter; the
--   snapshot will be encrypted using the same KMS key that was used to
--   encrypt the parent snapshot.
--   
--   If <b>Encrypted</b> is set to <tt>true</tt>, you must specify a KMS
--   key ARN.
--   
--   <a>$sel:clientToken:StartSnapshot'</a>,
--   <a>startSnapshot_clientToken</a> - A unique, case-sensitive identifier
--   that you provide to ensure the idempotency of the request. Idempotency
--   ensures that an API request completes only once. With an idempotent
--   request, if the original request completes successfully. The
--   subsequent retries with the same client token return the result from
--   the original successful request and they have no additional effect.
--   
--   If you do not specify a client token, one is automatically generated
--   by the Amazon Web Services SDK.
--   
--   For more information, see <a>Idempotency for StartSnapshot API</a> in
--   the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   <a>$sel:encrypted:StartSnapshot'</a>, <a>startSnapshot_encrypted</a> -
--   Indicates whether to encrypt the snapshot. To create an encrypted
--   snapshot, specify <tt>true</tt>. To create an unencrypted snapshot,
--   omit this parameter.
--   
--   If you specify a value for <b>ParentSnapshotId</b>, omit this
--   parameter.
--   
--   If you specify <tt>true</tt>, the snapshot is encrypted using the KMS
--   key specified using the <b>KmsKeyArn</b> parameter. If no value is
--   specified for <b>KmsKeyArn</b>, the default KMS key for your account
--   is used. If no default KMS key has been specified for your account,
--   the Amazon Web Services managed KMS key is used. To set a default KMS
--   key for your account, use <a>ModifyEbsDefaultKmsKeyId</a>.
--   
--   If your account is enabled for encryption by default, you cannot set
--   this parameter to <tt>false</tt>. In this case, you can omit this
--   parameter.
--   
--   For more information, see <a>Using encryption</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide</i>.
--   
--   <a>$sel:parentSnapshotId:StartSnapshot'</a>,
--   <a>startSnapshot_parentSnapshotId</a> - The ID of the parent snapshot.
--   If there is no parent snapshot, or if you are creating the first
--   snapshot for an on-premises volume, omit this parameter.
--   
--   If your account is enabled for encryption by default, you cannot use
--   an unencrypted snapshot as a parent snapshot. You must first create an
--   encrypted copy of the parent snapshot using <a>CopySnapshot</a>.
--   
--   <a>$sel:timeout:StartSnapshot'</a>, <a>startSnapshot_timeout</a> - The
--   amount of time (in minutes) after which the snapshot is automatically
--   cancelled if:
--   
--   <ul>
--   <li>No blocks are written to the snapshot.</li>
--   <li>The snapshot is not completed after writing the last block of
--   data.</li>
--   </ul>
--   
--   If no value is specified, the timeout defaults to <tt>60</tt> minutes.
--   
--   <a>$sel:description:StartSnapshot'</a>,
--   <a>startSnapshot_description</a> - A description for the snapshot.
--   
--   <a>$sel:tags:StartSnapshot'</a>, <a>startSnapshot_tags</a> - The tags
--   to apply to the snapshot.
--   
--   <a>$sel:volumeSize:StartSnapshot'</a>, <a>startSnapshot_volumeSize</a>
--   - The size of the volume, in GiB. The maximum size is <tt>65536</tt>
--   GiB (64 TiB).
newStartSnapshot :: Natural -> StartSnapshot

-- | <i>See:</i> <a>newStartSnapshotResponse</a> smart constructor.
data StartSnapshotResponse
StartSnapshotResponse' :: Maybe Int -> Maybe Status -> Maybe (Sensitive Text) -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Tag] -> Maybe Text -> Int -> StartSnapshotResponse

-- | Create a value of <a>StartSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockSize:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_blockSize</a> - The size of the blocks in the
--   snapshot, in bytes.
--   
--   <a>$sel:status:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_status</a> - The status of the snapshot.
--   
--   <a>$sel:kmsKeyArn:StartSnapshot'</a>,
--   <a>startSnapshotResponse_kmsKeyArn</a> - The Amazon Resource Name
--   (ARN) of the Key Management Service (KMS) key used to encrypt the
--   snapshot.
--   
--   <a>$sel:startTime:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_startTime</a> - The timestamp when the
--   snapshot was created.
--   
--   <a>$sel:volumeSize:StartSnapshot'</a>,
--   <a>startSnapshotResponse_volumeSize</a> - The size of the volume, in
--   GiB.
--   
--   <a>$sel:ownerId:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_ownerId</a> - The Amazon Web Services account
--   ID of the snapshot owner.
--   
--   <a>$sel:parentSnapshotId:StartSnapshot'</a>,
--   <a>startSnapshotResponse_parentSnapshotId</a> - The ID of the parent
--   snapshot.
--   
--   <a>$sel:description:StartSnapshot'</a>,
--   <a>startSnapshotResponse_description</a> - The description of the
--   snapshot.
--   
--   <a>$sel:tags:StartSnapshot'</a>, <a>startSnapshotResponse_tags</a> -
--   The tags applied to the snapshot. You can specify up to 50 tags per
--   snapshot. For more information, see <a>Tagging your Amazon EC2
--   resources</a> in the <i>Amazon Elastic Compute Cloud User Guide</i>.
--   
--   <a>$sel:snapshotId:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_snapshotId</a> - The ID of the snapshot.
--   
--   <a>$sel:httpStatus:StartSnapshotResponse'</a>,
--   <a>startSnapshotResponse_httpStatus</a> - The response's http status
--   code.
newStartSnapshotResponse :: Int -> StartSnapshotResponse

-- | <i>See:</i> <a>newListSnapshotBlocks</a> smart constructor.
data ListSnapshotBlocks
ListSnapshotBlocks' :: Maybe Text -> Maybe Natural -> Maybe Natural -> Text -> ListSnapshotBlocks

-- | Create a value of <a>ListSnapshotBlocks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSnapshotBlocks'</a>,
--   <a>listSnapshotBlocks_nextToken</a> - The token to request the next
--   page of results.
--   
--   <a>$sel:startingBlockIndex:ListSnapshotBlocks'</a>,
--   <a>listSnapshotBlocks_startingBlockIndex</a> - The block index from
--   which the list should start. The list in the response will start from
--   this block index or the next valid block index in the snapshot.
--   
--   <a>$sel:maxResults:ListSnapshotBlocks'</a>,
--   <a>listSnapshotBlocks_maxResults</a> - The number of results to
--   return.
--   
--   <a>$sel:snapshotId:ListSnapshotBlocks'</a>,
--   <a>listSnapshotBlocks_snapshotId</a> - The ID of the snapshot from
--   which to get block indexes and block tokens.
newListSnapshotBlocks :: Text -> ListSnapshotBlocks

-- | <i>See:</i> <a>newListSnapshotBlocksResponse</a> smart constructor.
data ListSnapshotBlocksResponse
ListSnapshotBlocksResponse' :: Maybe Int -> Maybe (Sensitive [Block]) -> Maybe POSIX -> Maybe Natural -> Maybe Text -> Int -> ListSnapshotBlocksResponse

-- | Create a value of <a>ListSnapshotBlocksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockSize:ListSnapshotBlocksResponse'</a>,
--   <a>listSnapshotBlocksResponse_blockSize</a> - The size of the blocks
--   in the snapshot, in bytes.
--   
--   <a>$sel:blocks:ListSnapshotBlocksResponse'</a>,
--   <a>listSnapshotBlocksResponse_blocks</a> - An array of objects
--   containing information about the blocks.
--   
--   <a>$sel:expiryTime:ListSnapshotBlocksResponse'</a>,
--   <a>listSnapshotBlocksResponse_expiryTime</a> - The time when the
--   <tt>BlockToken</tt> expires.
--   
--   <a>$sel:volumeSize:ListSnapshotBlocksResponse'</a>,
--   <a>listSnapshotBlocksResponse_volumeSize</a> - The size of the volume
--   in GB.
--   
--   <a>$sel:nextToken:ListSnapshotBlocks'</a>,
--   <a>listSnapshotBlocksResponse_nextToken</a> - The token to use to
--   retrieve the next page of results. This value is null when there are
--   no more results to return.
--   
--   <a>$sel:httpStatus:ListSnapshotBlocksResponse'</a>,
--   <a>listSnapshotBlocksResponse_httpStatus</a> - The response's http
--   status code.
newListSnapshotBlocksResponse :: Int -> ListSnapshotBlocksResponse

-- | <i>See:</i> <a>newPutSnapshotBlock</a> smart constructor.
data PutSnapshotBlock
PutSnapshotBlock' :: Maybe Natural -> Text -> Natural -> Int -> Text -> ChecksumAlgorithm -> HashedBody -> PutSnapshotBlock

-- | Create a value of <a>PutSnapshotBlock</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:progress:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_progress</a> - The progress of the write process,
--   as a percentage.
--   
--   <a>$sel:snapshotId:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_snapshotId</a> - The ID of the snapshot.
--   
--   <a>$sel:blockIndex:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_blockIndex</a> - The block index of the block in
--   which to write the data. A block index is a logical index in units of
--   <tt>512</tt> KiB blocks. To identify the block index, divide the
--   logical offset of the data in the logical volume by the block size
--   (logical offset of data/<tt>524288</tt>). The logical offset of the
--   data must be <tt>512</tt> KiB aligned.
--   
--   <a>$sel:dataLength:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_dataLength</a> - The size of the data to write to
--   the block, in bytes. Currently, the only supported size is
--   <tt>524288</tt> bytes.
--   
--   Valid values: <tt>524288</tt>
--   
--   <a>$sel:checksum:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_checksum</a> - A Base64-encoded SHA256 checksum of
--   the data. Only SHA256 checksums are supported.
--   
--   <a>$sel:checksumAlgorithm:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_checksumAlgorithm</a> - The algorithm used to
--   generate the checksum. Currently, the only supported algorithm is
--   <tt>SHA256</tt>.
--   
--   <a>$sel:blockData:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlock_blockData</a> - The data to write to the block.
--   
--   The block data is not signed as part of the Signature Version 4
--   signing process. As a result, you must generate and provide a
--   Base64-encoded SHA256 checksum for the block data using the
--   <b>x-amz-Checksum</b> header. Also, you must specify the checksum
--   algorithm using the <b>x-amz-Checksum-Algorithm</b> header. The
--   checksum that you provide is part of the Signature Version 4 signing
--   process. It is validated against a checksum generated by Amazon EBS to
--   ensure the validity and authenticity of the data. If the checksums do
--   not correspond, the request fails. For more information, see <a>Using
--   checksums with the EBS direct APIs</a> in the <i>Amazon Elastic
--   Compute Cloud User Guide</i>.
newPutSnapshotBlock :: Text -> Natural -> Int -> Text -> ChecksumAlgorithm -> HashedBody -> PutSnapshotBlock

-- | <i>See:</i> <a>newPutSnapshotBlockResponse</a> smart constructor.
data PutSnapshotBlockResponse
PutSnapshotBlockResponse' :: Maybe ChecksumAlgorithm -> Maybe Text -> Int -> PutSnapshotBlockResponse

-- | Create a value of <a>PutSnapshotBlockResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checksumAlgorithm:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlockResponse_checksumAlgorithm</a> - The algorithm used
--   by Amazon EBS to generate the checksum.
--   
--   <a>$sel:checksum:PutSnapshotBlock'</a>,
--   <a>putSnapshotBlockResponse_checksum</a> - The SHA256 checksum
--   generated for the block data by Amazon EBS.
--   
--   <a>$sel:httpStatus:PutSnapshotBlockResponse'</a>,
--   <a>putSnapshotBlockResponse_httpStatus</a> - The response's http
--   status code.
newPutSnapshotBlockResponse :: Int -> PutSnapshotBlockResponse

-- | <i>See:</i> <a>newListChangedBlocks</a> smart constructor.
data ListChangedBlocks
ListChangedBlocks' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Natural -> Text -> ListChangedBlocks

-- | Create a value of <a>ListChangedBlocks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListChangedBlocks'</a>,
--   <a>listChangedBlocks_nextToken</a> - The token to request the next
--   page of results.
--   
--   <a>$sel:startingBlockIndex:ListChangedBlocks'</a>,
--   <a>listChangedBlocks_startingBlockIndex</a> - The block index from
--   which the comparison should start.
--   
--   The list in the response will start from this block index or the next
--   valid block index in the snapshots.
--   
--   <a>$sel:firstSnapshotId:ListChangedBlocks'</a>,
--   <a>listChangedBlocks_firstSnapshotId</a> - The ID of the first
--   snapshot to use for the comparison.
--   
--   The <tt>FirstSnapshotID</tt> parameter must be specified with a
--   <tt>SecondSnapshotId</tt> parameter; otherwise, an error occurs.
--   
--   <a>$sel:maxResults:ListChangedBlocks'</a>,
--   <a>listChangedBlocks_maxResults</a> - The number of results to return.
--   
--   <a>$sel:secondSnapshotId:ListChangedBlocks'</a>,
--   <a>listChangedBlocks_secondSnapshotId</a> - The ID of the second
--   snapshot to use for the comparison.
--   
--   The <tt>SecondSnapshotId</tt> parameter must be specified with a
--   <tt>FirstSnapshotID</tt> parameter; otherwise, an error occurs.
newListChangedBlocks :: Text -> ListChangedBlocks

-- | <i>See:</i> <a>newListChangedBlocksResponse</a> smart constructor.
data ListChangedBlocksResponse
ListChangedBlocksResponse' :: Maybe Int -> Maybe POSIX -> Maybe Natural -> Maybe [Sensitive ChangedBlock] -> Maybe Text -> Int -> ListChangedBlocksResponse

-- | Create a value of <a>ListChangedBlocksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockSize:ListChangedBlocksResponse'</a>,
--   <a>listChangedBlocksResponse_blockSize</a> - The size of the blocks in
--   the snapshot, in bytes.
--   
--   <a>$sel:expiryTime:ListChangedBlocksResponse'</a>,
--   <a>listChangedBlocksResponse_expiryTime</a> - The time when the
--   <tt>BlockToken</tt> expires.
--   
--   <a>$sel:volumeSize:ListChangedBlocksResponse'</a>,
--   <a>listChangedBlocksResponse_volumeSize</a> - The size of the volume
--   in GB.
--   
--   <a>$sel:changedBlocks:ListChangedBlocksResponse'</a>,
--   <a>listChangedBlocksResponse_changedBlocks</a> - An array of objects
--   containing information about the changed blocks.
--   
--   <a>$sel:nextToken:ListChangedBlocks'</a>,
--   <a>listChangedBlocksResponse_nextToken</a> - The token to use to
--   retrieve the next page of results. This value is null when there are
--   no more results to return.
--   
--   <a>$sel:httpStatus:ListChangedBlocksResponse'</a>,
--   <a>listChangedBlocksResponse_httpStatus</a> - The response's http
--   status code.
newListChangedBlocksResponse :: Int -> ListChangedBlocksResponse

-- | <i>See:</i> <a>newCompleteSnapshot</a> smart constructor.
data CompleteSnapshot
CompleteSnapshot' :: Maybe ChecksumAlgorithm -> Maybe Text -> Maybe ChecksumAggregationMethod -> Text -> Natural -> CompleteSnapshot

-- | Create a value of <a>CompleteSnapshot</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:checksumAlgorithm:CompleteSnapshot'</a>,
--   <a>completeSnapshot_checksumAlgorithm</a> - The algorithm used to
--   generate the checksum. Currently, the only supported algorithm is
--   <tt>SHA256</tt>.
--   
--   <a>$sel:checksum:CompleteSnapshot'</a>,
--   <a>completeSnapshot_checksum</a> - An aggregated Base-64 SHA256
--   checksum based on the checksums of each written block.
--   
--   To generate the aggregated checksum using the linear aggregation
--   method, arrange the checksums for each written block in ascending
--   order of their block index, concatenate them to form a single string,
--   and then generate the checksum on the entire string using the SHA256
--   algorithm.
--   
--   <a>$sel:checksumAggregationMethod:CompleteSnapshot'</a>,
--   <a>completeSnapshot_checksumAggregationMethod</a> - The aggregation
--   method used to generate the checksum. Currently, the only supported
--   aggregation method is <tt>LINEAR</tt>.
--   
--   <a>$sel:snapshotId:CompleteSnapshot'</a>,
--   <a>completeSnapshot_snapshotId</a> - The ID of the snapshot.
--   
--   <a>$sel:changedBlocksCount:CompleteSnapshot'</a>,
--   <a>completeSnapshot_changedBlocksCount</a> - The number of blocks that
--   were written to the snapshot.
newCompleteSnapshot :: Text -> Natural -> CompleteSnapshot

-- | <i>See:</i> <a>newCompleteSnapshotResponse</a> smart constructor.
data CompleteSnapshotResponse
CompleteSnapshotResponse' :: Maybe Status -> Int -> CompleteSnapshotResponse

-- | Create a value of <a>CompleteSnapshotResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CompleteSnapshotResponse'</a>,
--   <a>completeSnapshotResponse_status</a> - The status of the snapshot.
--   
--   <a>$sel:httpStatus:CompleteSnapshotResponse'</a>,
--   <a>completeSnapshotResponse_httpStatus</a> - The response's http
--   status code.
newCompleteSnapshotResponse :: Int -> CompleteSnapshotResponse

-- | <i>See:</i> <a>newGetSnapshotBlock</a> smart constructor.
data GetSnapshotBlock
GetSnapshotBlock' :: Text -> Natural -> Text -> GetSnapshotBlock

-- | Create a value of <a>GetSnapshotBlock</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:snapshotId:GetSnapshotBlock'</a>,
--   <a>getSnapshotBlock_snapshotId</a> - The ID of the snapshot containing
--   the block from which to get data.
--   
--   <a>$sel:blockIndex:GetSnapshotBlock'</a>,
--   <a>getSnapshotBlock_blockIndex</a> - The block index of the block from
--   which to get data.
--   
--   Obtain the <tt>BlockIndex</tt> by running the
--   <tt>ListChangedBlocks</tt> or <tt>ListSnapshotBlocks</tt> operations.
--   
--   <a>$sel:blockToken:GetSnapshotBlock'</a>,
--   <a>getSnapshotBlock_blockToken</a> - The block token of the block from
--   which to get data.
--   
--   Obtain the <tt>BlockToken</tt> by running the
--   <tt>ListChangedBlocks</tt> or <tt>ListSnapshotBlocks</tt> operations.
newGetSnapshotBlock :: Text -> Natural -> Text -> GetSnapshotBlock

-- | <i>See:</i> <a>newGetSnapshotBlockResponse</a> smart constructor.
data GetSnapshotBlockResponse
GetSnapshotBlockResponse' :: Maybe Int -> Maybe ChecksumAlgorithm -> Maybe Text -> Int -> ResponseBody -> GetSnapshotBlockResponse

-- | Create a value of <a>GetSnapshotBlockResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataLength:GetSnapshotBlockResponse'</a>,
--   <a>getSnapshotBlockResponse_dataLength</a> - The size of the data in
--   the block.
--   
--   <a>$sel:checksumAlgorithm:GetSnapshotBlockResponse'</a>,
--   <a>getSnapshotBlockResponse_checksumAlgorithm</a> - The algorithm used
--   to generate the checksum for the block, such as SHA256.
--   
--   <a>$sel:checksum:GetSnapshotBlockResponse'</a>,
--   <a>getSnapshotBlockResponse_checksum</a> - The checksum generated for
--   the block, which is Base64 encoded.
--   
--   <a>$sel:httpStatus:GetSnapshotBlockResponse'</a>,
--   <a>getSnapshotBlockResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:blockData:GetSnapshotBlockResponse'</a>,
--   <a>getSnapshotBlockResponse_blockData</a> - The data content of the
--   block.
newGetSnapshotBlockResponse :: Int -> ResponseBody -> GetSnapshotBlockResponse
newtype ChecksumAggregationMethod
ChecksumAggregationMethod' :: Text -> ChecksumAggregationMethod
[fromChecksumAggregationMethod] :: ChecksumAggregationMethod -> Text
pattern ChecksumAggregationMethod_LINEAR :: ChecksumAggregationMethod
newtype ChecksumAlgorithm
ChecksumAlgorithm' :: Text -> ChecksumAlgorithm
[fromChecksumAlgorithm] :: ChecksumAlgorithm -> Text
pattern ChecksumAlgorithm_SHA256 :: ChecksumAlgorithm
newtype Status
Status' :: Text -> Status
[fromStatus] :: Status -> Text
pattern Status_Completed :: Status
pattern Status_Error :: Status
pattern Status_Pending :: Status

-- | A block of data in an Amazon Elastic Block Store snapshot.
--   
--   <i>See:</i> <a>newBlock</a> smart constructor.
data Block
Block' :: Maybe Natural -> Maybe Text -> Block

-- | Create a value of <a>Block</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockIndex:Block'</a>, <a>block_blockIndex</a> - The block
--   index.
--   
--   <a>$sel:blockToken:Block'</a>, <a>block_blockToken</a> - The block
--   token for the block index.
newBlock :: Block

-- | A block of data in an Amazon Elastic Block Store snapshot that is
--   different from another snapshot of the same volume/snapshot lineage.
--   
--   <i>See:</i> <a>newChangedBlock</a> smart constructor.
data ChangedBlock
ChangedBlock' :: Maybe Natural -> Maybe Text -> Maybe Text -> ChangedBlock

-- | Create a value of <a>ChangedBlock</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:blockIndex:ChangedBlock'</a>, <a>changedBlock_blockIndex</a> -
--   The block index.
--   
--   <a>$sel:secondBlockToken:ChangedBlock'</a>,
--   <a>changedBlock_secondBlockToken</a> - The block token for the block
--   index of the <tt>SecondSnapshotId</tt> specified in the
--   <tt>ListChangedBlocks</tt> operation.
--   
--   <a>$sel:firstBlockToken:ChangedBlock'</a>,
--   <a>changedBlock_firstBlockToken</a> - The block token for the block
--   index of the <tt>FirstSnapshotId</tt> specified in the
--   <tt>ListChangedBlocks</tt> operation. This value is absent if the
--   first snapshot does not have the changed block that is on the second
--   snapshot.
newChangedBlock :: ChangedBlock

-- | Describes a tag.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Maybe Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the tag.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the tag.
newTag :: Tag
