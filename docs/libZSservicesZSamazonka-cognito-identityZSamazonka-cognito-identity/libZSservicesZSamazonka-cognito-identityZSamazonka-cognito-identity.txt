-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-cognito-identityZSamazonka-cognito-identity
@version 1.6.1


module Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType
newtype AmbiguousRoleResolutionType
AmbiguousRoleResolutionType' :: Text -> AmbiguousRoleResolutionType
[fromAmbiguousRoleResolutionType] :: AmbiguousRoleResolutionType -> Text
pattern AmbiguousRoleResolutionType_AuthenticatedRole :: AmbiguousRoleResolutionType
pattern AmbiguousRoleResolutionType_Deny :: AmbiguousRoleResolutionType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance GHC.Classes.Ord Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.AmbiguousRoleResolutionType.AmbiguousRoleResolutionType


module Network.AWS.CognitoIdentity.Types.CognitoErrorCode
newtype CognitoErrorCode
CognitoErrorCode' :: Text -> CognitoErrorCode
[fromCognitoErrorCode] :: CognitoErrorCode -> Text
pattern CognitoErrorCode_AccessDenied :: CognitoErrorCode
pattern CognitoErrorCode_InternalServerError :: CognitoErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance GHC.Classes.Ord Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.CognitoErrorCode.CognitoErrorCode


module Network.AWS.CognitoIdentity.Types.CognitoIdentityProvider

-- | A provider representing an Amazon Cognito user pool and its client ID.
--   
--   <i>See:</i> <a>newCognitoIdentityProvider</a> smart constructor.
data CognitoIdentityProvider
CognitoIdentityProvider' :: Maybe Text -> Maybe Text -> Maybe Bool -> CognitoIdentityProvider

-- | The client ID for the Amazon Cognito user pool.
[$sel:clientId:CognitoIdentityProvider'] :: CognitoIdentityProvider -> Maybe Text

-- | The provider name for an Amazon Cognito user pool. For example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.
[$sel:providerName:CognitoIdentityProvider'] :: CognitoIdentityProvider -> Maybe Text

-- | TRUE if server-side token validation is enabled for the identity
--   provider’s token.
--   
--   Once you set <tt>ServerSideTokenCheck</tt> to TRUE for an identity
--   pool, that identity pool will check with the integrated user pools to
--   make sure that the user has not been globally signed out or deleted
--   before the identity pool provides an OIDC token or AWS credentials for
--   the user.
--   
--   If the user is signed out or deleted, the identity pool will return a
--   400 Not Authorized error.
[$sel:serverSideTokenCheck:CognitoIdentityProvider'] :: CognitoIdentityProvider -> Maybe Bool

-- | Create a value of <a>CognitoIdentityProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:CognitoIdentityProvider'</a>,
--   <a>cognitoIdentityProvider_clientId</a> - The client ID for the Amazon
--   Cognito user pool.
--   
--   <a>$sel:providerName:CognitoIdentityProvider'</a>,
--   <a>cognitoIdentityProvider_providerName</a> - The provider name for an
--   Amazon Cognito user pool. For example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.
--   
--   <a>$sel:serverSideTokenCheck:CognitoIdentityProvider'</a>,
--   <a>cognitoIdentityProvider_serverSideTokenCheck</a> - TRUE if
--   server-side token validation is enabled for the identity provider’s
--   token.
--   
--   Once you set <tt>ServerSideTokenCheck</tt> to TRUE for an identity
--   pool, that identity pool will check with the integrated user pools to
--   make sure that the user has not been globally signed out or deleted
--   before the identity pool provides an OIDC token or AWS credentials for
--   the user.
--   
--   If the user is signed out or deleted, the identity pool will return a
--   400 Not Authorized error.
newCognitoIdentityProvider :: CognitoIdentityProvider

-- | The client ID for the Amazon Cognito user pool.
cognitoIdentityProvider_clientId :: Lens' CognitoIdentityProvider (Maybe Text)

-- | The provider name for an Amazon Cognito user pool. For example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.
cognitoIdentityProvider_providerName :: Lens' CognitoIdentityProvider (Maybe Text)

-- | TRUE if server-side token validation is enabled for the identity
--   provider’s token.
--   
--   Once you set <tt>ServerSideTokenCheck</tt> to TRUE for an identity
--   pool, that identity pool will check with the integrated user pools to
--   make sure that the user has not been globally signed out or deleted
--   before the identity pool provides an OIDC token or AWS credentials for
--   the user.
--   
--   If the user is signed out or deleted, the identity pool will return a
--   400 Not Authorized error.
cognitoIdentityProvider_serverSideTokenCheck :: Lens' CognitoIdentityProvider (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.CognitoIdentityProvider.CognitoIdentityProvider
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.CognitoIdentityProvider.CognitoIdentityProvider
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.CognitoIdentityProvider.CognitoIdentityProvider
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.CognitoIdentityProvider.CognitoIdentityProvider
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.CognitoIdentityProvider.CognitoIdentityProvider
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.CognitoIdentityProvider.CognitoIdentityProvider
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.CognitoIdentityProvider.CognitoIdentityProvider
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.Types.CognitoIdentityProvider.CognitoIdentityProvider


module Network.AWS.CognitoIdentity.Types.Credentials

-- | Credentials for the provided identity ID.
--   
--   <i>See:</i> <a>newCredentials</a> smart constructor.
data Credentials
Credentials' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Credentials

-- | The date at which these credentials will expire.
[$sel:expiration:Credentials'] :: Credentials -> Maybe POSIX

-- | The Secret Access Key portion of the credentials
[$sel:secretKey:Credentials'] :: Credentials -> Maybe Text

-- | The Access Key portion of the credentials.
[$sel:accessKeyId:Credentials'] :: Credentials -> Maybe Text

-- | The Session Token portion of the credentials
[$sel:sessionToken:Credentials'] :: Credentials -> Maybe Text

-- | Create a value of <a>Credentials</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expiration:Credentials'</a>, <a>credentials_expiration</a> -
--   The date at which these credentials will expire.
--   
--   <a>$sel:secretKey:Credentials'</a>, <a>credentials_secretKey</a> - The
--   Secret Access Key portion of the credentials
--   
--   <a>$sel:accessKeyId:Credentials'</a>, <a>credentials_accessKeyId</a> -
--   The Access Key portion of the credentials.
--   
--   <a>$sel:sessionToken:Credentials'</a>, <a>credentials_sessionToken</a>
--   - The Session Token portion of the credentials
newCredentials :: Credentials

-- | The date at which these credentials will expire.
credentials_expiration :: Lens' Credentials (Maybe UTCTime)

-- | The Secret Access Key portion of the credentials
credentials_secretKey :: Lens' Credentials (Maybe Text)

-- | The Access Key portion of the credentials.
credentials_accessKeyId :: Lens' Credentials (Maybe Text)

-- | The Session Token portion of the credentials
credentials_sessionToken :: Lens' Credentials (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.Credentials.Credentials
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.Credentials.Credentials
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.Credentials.Credentials
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.Credentials.Credentials
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.Credentials.Credentials
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.Credentials.Credentials
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.Credentials.Credentials


module Network.AWS.CognitoIdentity.Types.IdentityDescription

-- | A description of the identity.
--   
--   <i>See:</i> <a>newIdentityDescription</a> smart constructor.
data IdentityDescription
IdentityDescription' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe [Text] -> IdentityDescription

-- | Date on which the identity was last modified.
[$sel:lastModifiedDate:IdentityDescription'] :: IdentityDescription -> Maybe POSIX

-- | Date on which the identity was created.
[$sel:creationDate:IdentityDescription'] :: IdentityDescription -> Maybe POSIX

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:IdentityDescription'] :: IdentityDescription -> Maybe Text

-- | The provider names.
[$sel:logins:IdentityDescription'] :: IdentityDescription -> Maybe [Text]

-- | Create a value of <a>IdentityDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:IdentityDescription'</a>,
--   <a>identityDescription_lastModifiedDate</a> - Date on which the
--   identity was last modified.
--   
--   <a>$sel:creationDate:IdentityDescription'</a>,
--   <a>identityDescription_creationDate</a> - Date on which the identity
--   was created.
--   
--   <a>$sel:identityId:IdentityDescription'</a>,
--   <a>identityDescription_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:logins:IdentityDescription'</a>,
--   <a>identityDescription_logins</a> - The provider names.
newIdentityDescription :: IdentityDescription

-- | Date on which the identity was last modified.
identityDescription_lastModifiedDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | Date on which the identity was created.
identityDescription_creationDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | A unique identifier in the format REGION:GUID.
identityDescription_identityId :: Lens' IdentityDescription (Maybe Text)

-- | The provider names.
identityDescription_logins :: Lens' IdentityDescription (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.IdentityDescription.IdentityDescription
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.IdentityDescription.IdentityDescription
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.IdentityDescription.IdentityDescription
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.IdentityDescription.IdentityDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.IdentityDescription.IdentityDescription
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.IdentityDescription.IdentityDescription
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.IdentityDescription.IdentityDescription


module Network.AWS.CognitoIdentity.Types.IdentityPool

-- | An object representing an Amazon Cognito identity pool.
--   
--   <i>See:</i> <a>newIdentityPool</a> smart constructor.
data IdentityPool
IdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Text -> Bool -> IdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
[$sel:allowClassicFlow:IdentityPool'] :: IdentityPool -> Maybe Bool

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
[$sel:samlProviderARNs:IdentityPool'] :: IdentityPool -> Maybe [Text]

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
[$sel:identityPoolTags:IdentityPool'] :: IdentityPool -> Maybe (HashMap Text Text)

-- | The ARNs of the OpenID Connect providers.
[$sel:openIdConnectProviderARNs:IdentityPool'] :: IdentityPool -> Maybe [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
[$sel:supportedLoginProviders:IdentityPool'] :: IdentityPool -> Maybe (HashMap Text Text)

-- | A list representing an Amazon Cognito user pool and its client ID.
[$sel:cognitoIdentityProviders:IdentityPool'] :: IdentityPool -> Maybe [CognitoIdentityProvider]

-- | The "domain" by which Cognito will refer to your users.
[$sel:developerProviderName:IdentityPool'] :: IdentityPool -> Maybe Text

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:IdentityPool'] :: IdentityPool -> Text

-- | A string that you provide.
[$sel:identityPoolName:IdentityPool'] :: IdentityPool -> Text

-- | TRUE if the identity pool supports unauthenticated logins.
[$sel:allowUnauthenticatedIdentities:IdentityPool'] :: IdentityPool -> Bool

-- | Create a value of <a>IdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:IdentityPool'</a>,
--   <a>identityPool_allowClassicFlow</a> - Enables or disables the Basic
--   (Classic) authentication flow. For more information, see <a>Identity
--   Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon
--   Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:IdentityPool'</a>,
--   <a>identityPool_samlProviderARNs</a> - An array of Amazon Resource
--   Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:IdentityPool'</a>,
--   <a>identityPool_identityPoolTags</a> - The tags that are assigned to
--   the identity pool. A tag is a label that you can apply to identity
--   pools to categorize and manage them in different ways, such as by
--   purpose, owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:IdentityPool'</a>,
--   <a>identityPool_openIdConnectProviderARNs</a> - The ARNs of the OpenID
--   Connect providers.
--   
--   <a>$sel:supportedLoginProviders:IdentityPool'</a>,
--   <a>identityPool_supportedLoginProviders</a> - Optional key:value pairs
--   mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:IdentityPool'</a>,
--   <a>identityPool_cognitoIdentityProviders</a> - A list representing an
--   Amazon Cognito user pool and its client ID.
--   
--   <a>$sel:developerProviderName:IdentityPool'</a>,
--   <a>identityPool_developerProviderName</a> - The "domain" by which
--   Cognito will refer to your users.
--   
--   <a>$sel:identityPoolId:IdentityPool'</a>,
--   <a>identityPool_identityPoolId</a> - An identity pool ID in the format
--   REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPool'</a>,
--   <a>identityPool_identityPoolName</a> - A string that you provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:IdentityPool'</a>,
--   <a>identityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newIdentityPool :: Text -> Text -> Bool -> IdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
identityPool_allowClassicFlow :: Lens' IdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
identityPool_samlProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
identityPool_identityPoolTags :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | The ARNs of the OpenID Connect providers.
identityPool_openIdConnectProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
identityPool_supportedLoginProviders :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | A list representing an Amazon Cognito user pool and its client ID.
identityPool_cognitoIdentityProviders :: Lens' IdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users.
identityPool_developerProviderName :: Lens' IdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
identityPool_identityPoolId :: Lens' IdentityPool Text

-- | A string that you provide.
identityPool_identityPoolName :: Lens' IdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
identityPool_allowUnauthenticatedIdentities :: Lens' IdentityPool Bool
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.IdentityPool.IdentityPool
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.IdentityPool.IdentityPool
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.IdentityPool.IdentityPool
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.IdentityPool.IdentityPool
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.IdentityPool.IdentityPool
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.IdentityPool.IdentityPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.IdentityPool.IdentityPool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.Types.IdentityPool.IdentityPool


module Network.AWS.CognitoIdentity.Types.IdentityPoolShortDescription

-- | A description of the identity pool.
--   
--   <i>See:</i> <a>newIdentityPoolShortDescription</a> smart constructor.
data IdentityPoolShortDescription
IdentityPoolShortDescription' :: Maybe Text -> Maybe Text -> IdentityPoolShortDescription

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:IdentityPoolShortDescription'] :: IdentityPoolShortDescription -> Maybe Text

-- | A string that you provide.
[$sel:identityPoolName:IdentityPoolShortDescription'] :: IdentityPoolShortDescription -> Maybe Text

-- | Create a value of <a>IdentityPoolShortDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:IdentityPoolShortDescription'</a>,
--   <a>identityPoolShortDescription_identityPoolId</a> - An identity pool
--   ID in the format REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPoolShortDescription'</a>,
--   <a>identityPoolShortDescription_identityPoolName</a> - A string that
--   you provide.
newIdentityPoolShortDescription :: IdentityPoolShortDescription

-- | An identity pool ID in the format REGION:GUID.
identityPoolShortDescription_identityPoolId :: Lens' IdentityPoolShortDescription (Maybe Text)

-- | A string that you provide.
identityPoolShortDescription_identityPoolName :: Lens' IdentityPoolShortDescription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.IdentityPoolShortDescription.IdentityPoolShortDescription
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.IdentityPoolShortDescription.IdentityPoolShortDescription
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.IdentityPoolShortDescription.IdentityPoolShortDescription
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.IdentityPoolShortDescription.IdentityPoolShortDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.IdentityPoolShortDescription.IdentityPoolShortDescription
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.IdentityPoolShortDescription.IdentityPoolShortDescription
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.IdentityPoolShortDescription.IdentityPoolShortDescription


module Network.AWS.CognitoIdentity.Types.MappingRuleMatchType
newtype MappingRuleMatchType
MappingRuleMatchType' :: Text -> MappingRuleMatchType
[fromMappingRuleMatchType] :: MappingRuleMatchType -> Text
pattern MappingRuleMatchType_Contains :: MappingRuleMatchType
pattern MappingRuleMatchType_Equals :: MappingRuleMatchType
pattern MappingRuleMatchType_NotEqual :: MappingRuleMatchType
pattern MappingRuleMatchType_StartsWith :: MappingRuleMatchType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance GHC.Classes.Ord Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.MappingRuleMatchType.MappingRuleMatchType


module Network.AWS.CognitoIdentity.Types.MappingRule

-- | A rule that maps a claim name, a claim value, and a match type to a
--   role ARN.
--   
--   <i>See:</i> <a>newMappingRule</a> smart constructor.
data MappingRule
MappingRule' :: Text -> MappingRuleMatchType -> Text -> Text -> MappingRule

-- | The claim name that must be present in the token, for example,
--   "isAdmin" or "paid".
[$sel:claim:MappingRule'] :: MappingRule -> Text

-- | The match condition that specifies how closely the claim value in the
--   IdP token must match <tt>Value</tt>.
[$sel:matchType:MappingRule'] :: MappingRule -> MappingRuleMatchType

-- | A brief string that the claim must match, for example, "paid" or
--   "yes".
[$sel:value:MappingRule'] :: MappingRule -> Text

-- | The role ARN.
[$sel:roleARN:MappingRule'] :: MappingRule -> Text

-- | Create a value of <a>MappingRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:claim:MappingRule'</a>, <a>mappingRule_claim</a> - The claim
--   name that must be present in the token, for example, "isAdmin" or
--   "paid".
--   
--   <a>$sel:matchType:MappingRule'</a>, <a>mappingRule_matchType</a> - The
--   match condition that specifies how closely the claim value in the IdP
--   token must match <tt>Value</tt>.
--   
--   <a>$sel:value:MappingRule'</a>, <a>mappingRule_value</a> - A brief
--   string that the claim must match, for example, "paid" or "yes".
--   
--   <a>$sel:roleARN:MappingRule'</a>, <a>mappingRule_roleARN</a> - The
--   role ARN.
newMappingRule :: Text -> MappingRuleMatchType -> Text -> Text -> MappingRule

-- | The claim name that must be present in the token, for example,
--   "isAdmin" or "paid".
mappingRule_claim :: Lens' MappingRule Text

-- | The match condition that specifies how closely the claim value in the
--   IdP token must match <tt>Value</tt>.
mappingRule_matchType :: Lens' MappingRule MappingRuleMatchType

-- | A brief string that the claim must match, for example, "paid" or
--   "yes".
mappingRule_value :: Lens' MappingRule Text

-- | The role ARN.
mappingRule_roleARN :: Lens' MappingRule Text
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.MappingRule.MappingRule
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.MappingRule.MappingRule
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.MappingRule.MappingRule
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.MappingRule.MappingRule
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.MappingRule.MappingRule
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.MappingRule.MappingRule
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.MappingRule.MappingRule
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.Types.MappingRule.MappingRule


module Network.AWS.CognitoIdentity.Types.RoleMappingType
newtype RoleMappingType
RoleMappingType' :: Text -> RoleMappingType
[fromRoleMappingType] :: RoleMappingType -> Text
pattern RoleMappingType_Rules :: RoleMappingType
pattern RoleMappingType_Token :: RoleMappingType
instance Network.AWS.Data.XML.ToXML Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Network.AWS.Data.XML.FromXML Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Network.AWS.Data.Log.ToLog Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Network.AWS.Data.Text.ToText Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Network.AWS.Data.Text.FromText Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance GHC.Classes.Ord Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.RoleMappingType.RoleMappingType


module Network.AWS.CognitoIdentity.Types.RulesConfigurationType

-- | A container for rules.
--   
--   <i>See:</i> <a>newRulesConfigurationType</a> smart constructor.
data RulesConfigurationType
RulesConfigurationType' :: NonEmpty MappingRule -> RulesConfigurationType

-- | An array of rules. You can specify up to 25 rules per identity
--   provider.
--   
--   Rules are evaluated in order. The first one to match specifies the
--   role.
[$sel:rules:RulesConfigurationType'] :: RulesConfigurationType -> NonEmpty MappingRule

-- | Create a value of <a>RulesConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:RulesConfigurationType'</a>,
--   <a>rulesConfigurationType_rules</a> - An array of rules. You can
--   specify up to 25 rules per identity provider.
--   
--   Rules are evaluated in order. The first one to match specifies the
--   role.
newRulesConfigurationType :: NonEmpty MappingRule -> RulesConfigurationType

-- | An array of rules. You can specify up to 25 rules per identity
--   provider.
--   
--   Rules are evaluated in order. The first one to match specifies the
--   role.
rulesConfigurationType_rules :: Lens' RulesConfigurationType (NonEmpty MappingRule)
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.RulesConfigurationType.RulesConfigurationType
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.RulesConfigurationType.RulesConfigurationType
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.RulesConfigurationType.RulesConfigurationType
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.RulesConfigurationType.RulesConfigurationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.RulesConfigurationType.RulesConfigurationType
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.RulesConfigurationType.RulesConfigurationType
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.RulesConfigurationType.RulesConfigurationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.Types.RulesConfigurationType.RulesConfigurationType


module Network.AWS.CognitoIdentity.Types.RoleMapping

-- | A role mapping.
--   
--   <i>See:</i> <a>newRoleMapping</a> smart constructor.
data RoleMapping
RoleMapping' :: Maybe AmbiguousRoleResolutionType -> Maybe RulesConfigurationType -> RoleMappingType -> RoleMapping

-- | If you specify Token or Rules as the <tt>Type</tt>,
--   <tt>AmbiguousRoleResolution</tt> is required.
--   
--   Specifies the action to be taken if either no rules match the claim
--   value for the <tt>Rules</tt> type, or there is no
--   <tt>cognito:preferred_role</tt> claim and there are multiple
--   <tt>cognito:roles</tt> matches for the <tt>Token</tt> type.
[$sel:ambiguousRoleResolution:RoleMapping'] :: RoleMapping -> Maybe AmbiguousRoleResolutionType

-- | The rules to be used for mapping users to roles.
--   
--   If you specify Rules as the role mapping type,
--   <tt>RulesConfiguration</tt> is required.
[$sel:rulesConfiguration:RoleMapping'] :: RoleMapping -> Maybe RulesConfigurationType

-- | The role mapping type. Token will use <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims from the Cognito identity
--   provider token to map groups to roles. Rules will attempt to match
--   claims from the token to map to a role.
[$sel:type':RoleMapping'] :: RoleMapping -> RoleMappingType

-- | Create a value of <a>RoleMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ambiguousRoleResolution:RoleMapping'</a>,
--   <a>roleMapping_ambiguousRoleResolution</a> - If you specify Token or
--   Rules as the <tt>Type</tt>, <tt>AmbiguousRoleResolution</tt> is
--   required.
--   
--   Specifies the action to be taken if either no rules match the claim
--   value for the <tt>Rules</tt> type, or there is no
--   <tt>cognito:preferred_role</tt> claim and there are multiple
--   <tt>cognito:roles</tt> matches for the <tt>Token</tt> type.
--   
--   <a>$sel:rulesConfiguration:RoleMapping'</a>,
--   <a>roleMapping_rulesConfiguration</a> - The rules to be used for
--   mapping users to roles.
--   
--   If you specify Rules as the role mapping type,
--   <tt>RulesConfiguration</tt> is required.
--   
--   <a>$sel:type':RoleMapping'</a>, <a>roleMapping_type</a> - The role
--   mapping type. Token will use <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims from the Cognito identity
--   provider token to map groups to roles. Rules will attempt to match
--   claims from the token to map to a role.
newRoleMapping :: RoleMappingType -> RoleMapping

-- | If you specify Token or Rules as the <tt>Type</tt>,
--   <tt>AmbiguousRoleResolution</tt> is required.
--   
--   Specifies the action to be taken if either no rules match the claim
--   value for the <tt>Rules</tt> type, or there is no
--   <tt>cognito:preferred_role</tt> claim and there are multiple
--   <tt>cognito:roles</tt> matches for the <tt>Token</tt> type.
roleMapping_ambiguousRoleResolution :: Lens' RoleMapping (Maybe AmbiguousRoleResolutionType)

-- | The rules to be used for mapping users to roles.
--   
--   If you specify Rules as the role mapping type,
--   <tt>RulesConfiguration</tt> is required.
roleMapping_rulesConfiguration :: Lens' RoleMapping (Maybe RulesConfigurationType)

-- | The role mapping type. Token will use <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims from the Cognito identity
--   provider token to map groups to roles. Rules will attempt to match
--   claims from the token to map to a role.
roleMapping_type :: Lens' RoleMapping RoleMappingType
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.RoleMapping.RoleMapping
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.RoleMapping.RoleMapping
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.RoleMapping.RoleMapping
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.RoleMapping.RoleMapping
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.RoleMapping.RoleMapping
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.RoleMapping.RoleMapping
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.RoleMapping.RoleMapping
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.Types.RoleMapping.RoleMapping


module Network.AWS.CognitoIdentity.Types.UnprocessedIdentityId

-- | An array of UnprocessedIdentityId objects, each of which contains an
--   ErrorCode and IdentityId.
--   
--   <i>See:</i> <a>newUnprocessedIdentityId</a> smart constructor.
data UnprocessedIdentityId
UnprocessedIdentityId' :: Maybe Text -> Maybe CognitoErrorCode -> UnprocessedIdentityId

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:UnprocessedIdentityId'] :: UnprocessedIdentityId -> Maybe Text

-- | The error code indicating the type of error that occurred.
[$sel:errorCode:UnprocessedIdentityId'] :: UnprocessedIdentityId -> Maybe CognitoErrorCode

-- | Create a value of <a>UnprocessedIdentityId</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:UnprocessedIdentityId'</a>,
--   <a>unprocessedIdentityId_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:errorCode:UnprocessedIdentityId'</a>,
--   <a>unprocessedIdentityId_errorCode</a> - The error code indicating the
--   type of error that occurred.
newUnprocessedIdentityId :: UnprocessedIdentityId

-- | A unique identifier in the format REGION:GUID.
unprocessedIdentityId_identityId :: Lens' UnprocessedIdentityId (Maybe Text)

-- | The error code indicating the type of error that occurred.
unprocessedIdentityId_errorCode :: Lens' UnprocessedIdentityId (Maybe CognitoErrorCode)
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.Types.UnprocessedIdentityId.UnprocessedIdentityId
instance GHC.Show.Show Network.AWS.CognitoIdentity.Types.UnprocessedIdentityId.UnprocessedIdentityId
instance GHC.Read.Read Network.AWS.CognitoIdentity.Types.UnprocessedIdentityId.UnprocessedIdentityId
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.Types.UnprocessedIdentityId.UnprocessedIdentityId
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.CognitoIdentity.Types.UnprocessedIdentityId.UnprocessedIdentityId
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.Types.UnprocessedIdentityId.UnprocessedIdentityId
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.Types.UnprocessedIdentityId.UnprocessedIdentityId


module Network.AWS.CognitoIdentity.Types

-- | API version <tt>2014-06-30</tt> of the Amazon Cognito Identity SDK
--   configuration.
defaultService :: Service

-- | Thrown when a user tries to use a login which is already linked to
--   another account.
_ResourceConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown when the service encounters an error during processing the
--   request.
_InternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown if there are parallel requests to modify a resource.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception thrown when a dependent service such as Facebook or
--   Twitter is not responding
_ExternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown for missing or bad input parameter(s).
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown if the identity pool has no role associated for the given auth
--   type (auth/unauth) or if the AssumeRole fails.
_InvalidIdentityPoolConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown when the total number of user pools has exceeded a preset
--   limit.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided developer user identifier is already registered with
--   Cognito under a different identity ID.
_DeveloperUserAlreadyRegisteredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown when the requested resource (for example, a dataset or record)
--   does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown when a user is not authorized to access the requested resource.
_NotAuthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown when a request is throttled.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AmbiguousRoleResolutionType
AmbiguousRoleResolutionType' :: Text -> AmbiguousRoleResolutionType
[fromAmbiguousRoleResolutionType] :: AmbiguousRoleResolutionType -> Text
pattern AmbiguousRoleResolutionType_AuthenticatedRole :: AmbiguousRoleResolutionType
pattern AmbiguousRoleResolutionType_Deny :: AmbiguousRoleResolutionType
newtype CognitoErrorCode
CognitoErrorCode' :: Text -> CognitoErrorCode
[fromCognitoErrorCode] :: CognitoErrorCode -> Text
pattern CognitoErrorCode_AccessDenied :: CognitoErrorCode
pattern CognitoErrorCode_InternalServerError :: CognitoErrorCode
newtype MappingRuleMatchType
MappingRuleMatchType' :: Text -> MappingRuleMatchType
[fromMappingRuleMatchType] :: MappingRuleMatchType -> Text
pattern MappingRuleMatchType_Contains :: MappingRuleMatchType
pattern MappingRuleMatchType_Equals :: MappingRuleMatchType
pattern MappingRuleMatchType_NotEqual :: MappingRuleMatchType
pattern MappingRuleMatchType_StartsWith :: MappingRuleMatchType
newtype RoleMappingType
RoleMappingType' :: Text -> RoleMappingType
[fromRoleMappingType] :: RoleMappingType -> Text
pattern RoleMappingType_Rules :: RoleMappingType
pattern RoleMappingType_Token :: RoleMappingType

-- | A provider representing an Amazon Cognito user pool and its client ID.
--   
--   <i>See:</i> <a>newCognitoIdentityProvider</a> smart constructor.
data CognitoIdentityProvider
CognitoIdentityProvider' :: Maybe Text -> Maybe Text -> Maybe Bool -> CognitoIdentityProvider

-- | The client ID for the Amazon Cognito user pool.
[$sel:clientId:CognitoIdentityProvider'] :: CognitoIdentityProvider -> Maybe Text

-- | The provider name for an Amazon Cognito user pool. For example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.
[$sel:providerName:CognitoIdentityProvider'] :: CognitoIdentityProvider -> Maybe Text

-- | TRUE if server-side token validation is enabled for the identity
--   provider’s token.
--   
--   Once you set <tt>ServerSideTokenCheck</tt> to TRUE for an identity
--   pool, that identity pool will check with the integrated user pools to
--   make sure that the user has not been globally signed out or deleted
--   before the identity pool provides an OIDC token or AWS credentials for
--   the user.
--   
--   If the user is signed out or deleted, the identity pool will return a
--   400 Not Authorized error.
[$sel:serverSideTokenCheck:CognitoIdentityProvider'] :: CognitoIdentityProvider -> Maybe Bool

-- | Create a value of <a>CognitoIdentityProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:CognitoIdentityProvider'</a>,
--   <a>cognitoIdentityProvider_clientId</a> - The client ID for the Amazon
--   Cognito user pool.
--   
--   <a>$sel:providerName:CognitoIdentityProvider'</a>,
--   <a>cognitoIdentityProvider_providerName</a> - The provider name for an
--   Amazon Cognito user pool. For example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.
--   
--   <a>$sel:serverSideTokenCheck:CognitoIdentityProvider'</a>,
--   <a>cognitoIdentityProvider_serverSideTokenCheck</a> - TRUE if
--   server-side token validation is enabled for the identity provider’s
--   token.
--   
--   Once you set <tt>ServerSideTokenCheck</tt> to TRUE for an identity
--   pool, that identity pool will check with the integrated user pools to
--   make sure that the user has not been globally signed out or deleted
--   before the identity pool provides an OIDC token or AWS credentials for
--   the user.
--   
--   If the user is signed out or deleted, the identity pool will return a
--   400 Not Authorized error.
newCognitoIdentityProvider :: CognitoIdentityProvider

-- | The client ID for the Amazon Cognito user pool.
cognitoIdentityProvider_clientId :: Lens' CognitoIdentityProvider (Maybe Text)

-- | The provider name for an Amazon Cognito user pool. For example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.
cognitoIdentityProvider_providerName :: Lens' CognitoIdentityProvider (Maybe Text)

-- | TRUE if server-side token validation is enabled for the identity
--   provider’s token.
--   
--   Once you set <tt>ServerSideTokenCheck</tt> to TRUE for an identity
--   pool, that identity pool will check with the integrated user pools to
--   make sure that the user has not been globally signed out or deleted
--   before the identity pool provides an OIDC token or AWS credentials for
--   the user.
--   
--   If the user is signed out or deleted, the identity pool will return a
--   400 Not Authorized error.
cognitoIdentityProvider_serverSideTokenCheck :: Lens' CognitoIdentityProvider (Maybe Bool)

-- | Credentials for the provided identity ID.
--   
--   <i>See:</i> <a>newCredentials</a> smart constructor.
data Credentials
Credentials' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Credentials

-- | The date at which these credentials will expire.
[$sel:expiration:Credentials'] :: Credentials -> Maybe POSIX

-- | The Secret Access Key portion of the credentials
[$sel:secretKey:Credentials'] :: Credentials -> Maybe Text

-- | The Access Key portion of the credentials.
[$sel:accessKeyId:Credentials'] :: Credentials -> Maybe Text

-- | The Session Token portion of the credentials
[$sel:sessionToken:Credentials'] :: Credentials -> Maybe Text

-- | Create a value of <a>Credentials</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expiration:Credentials'</a>, <a>credentials_expiration</a> -
--   The date at which these credentials will expire.
--   
--   <a>$sel:secretKey:Credentials'</a>, <a>credentials_secretKey</a> - The
--   Secret Access Key portion of the credentials
--   
--   <a>$sel:accessKeyId:Credentials'</a>, <a>credentials_accessKeyId</a> -
--   The Access Key portion of the credentials.
--   
--   <a>$sel:sessionToken:Credentials'</a>, <a>credentials_sessionToken</a>
--   - The Session Token portion of the credentials
newCredentials :: Credentials

-- | The date at which these credentials will expire.
credentials_expiration :: Lens' Credentials (Maybe UTCTime)

-- | The Secret Access Key portion of the credentials
credentials_secretKey :: Lens' Credentials (Maybe Text)

-- | The Access Key portion of the credentials.
credentials_accessKeyId :: Lens' Credentials (Maybe Text)

-- | The Session Token portion of the credentials
credentials_sessionToken :: Lens' Credentials (Maybe Text)

-- | A description of the identity.
--   
--   <i>See:</i> <a>newIdentityDescription</a> smart constructor.
data IdentityDescription
IdentityDescription' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe [Text] -> IdentityDescription

-- | Date on which the identity was last modified.
[$sel:lastModifiedDate:IdentityDescription'] :: IdentityDescription -> Maybe POSIX

-- | Date on which the identity was created.
[$sel:creationDate:IdentityDescription'] :: IdentityDescription -> Maybe POSIX

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:IdentityDescription'] :: IdentityDescription -> Maybe Text

-- | The provider names.
[$sel:logins:IdentityDescription'] :: IdentityDescription -> Maybe [Text]

-- | Create a value of <a>IdentityDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:IdentityDescription'</a>,
--   <a>identityDescription_lastModifiedDate</a> - Date on which the
--   identity was last modified.
--   
--   <a>$sel:creationDate:IdentityDescription'</a>,
--   <a>identityDescription_creationDate</a> - Date on which the identity
--   was created.
--   
--   <a>$sel:identityId:IdentityDescription'</a>,
--   <a>identityDescription_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:logins:IdentityDescription'</a>,
--   <a>identityDescription_logins</a> - The provider names.
newIdentityDescription :: IdentityDescription

-- | Date on which the identity was last modified.
identityDescription_lastModifiedDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | Date on which the identity was created.
identityDescription_creationDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | A unique identifier in the format REGION:GUID.
identityDescription_identityId :: Lens' IdentityDescription (Maybe Text)

-- | The provider names.
identityDescription_logins :: Lens' IdentityDescription (Maybe [Text])

-- | An object representing an Amazon Cognito identity pool.
--   
--   <i>See:</i> <a>newIdentityPool</a> smart constructor.
data IdentityPool
IdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Text -> Bool -> IdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
[$sel:allowClassicFlow:IdentityPool'] :: IdentityPool -> Maybe Bool

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
[$sel:samlProviderARNs:IdentityPool'] :: IdentityPool -> Maybe [Text]

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
[$sel:identityPoolTags:IdentityPool'] :: IdentityPool -> Maybe (HashMap Text Text)

-- | The ARNs of the OpenID Connect providers.
[$sel:openIdConnectProviderARNs:IdentityPool'] :: IdentityPool -> Maybe [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
[$sel:supportedLoginProviders:IdentityPool'] :: IdentityPool -> Maybe (HashMap Text Text)

-- | A list representing an Amazon Cognito user pool and its client ID.
[$sel:cognitoIdentityProviders:IdentityPool'] :: IdentityPool -> Maybe [CognitoIdentityProvider]

-- | The "domain" by which Cognito will refer to your users.
[$sel:developerProviderName:IdentityPool'] :: IdentityPool -> Maybe Text

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:IdentityPool'] :: IdentityPool -> Text

-- | A string that you provide.
[$sel:identityPoolName:IdentityPool'] :: IdentityPool -> Text

-- | TRUE if the identity pool supports unauthenticated logins.
[$sel:allowUnauthenticatedIdentities:IdentityPool'] :: IdentityPool -> Bool

-- | Create a value of <a>IdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:IdentityPool'</a>,
--   <a>identityPool_allowClassicFlow</a> - Enables or disables the Basic
--   (Classic) authentication flow. For more information, see <a>Identity
--   Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon
--   Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:IdentityPool'</a>,
--   <a>identityPool_samlProviderARNs</a> - An array of Amazon Resource
--   Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:IdentityPool'</a>,
--   <a>identityPool_identityPoolTags</a> - The tags that are assigned to
--   the identity pool. A tag is a label that you can apply to identity
--   pools to categorize and manage them in different ways, such as by
--   purpose, owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:IdentityPool'</a>,
--   <a>identityPool_openIdConnectProviderARNs</a> - The ARNs of the OpenID
--   Connect providers.
--   
--   <a>$sel:supportedLoginProviders:IdentityPool'</a>,
--   <a>identityPool_supportedLoginProviders</a> - Optional key:value pairs
--   mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:IdentityPool'</a>,
--   <a>identityPool_cognitoIdentityProviders</a> - A list representing an
--   Amazon Cognito user pool and its client ID.
--   
--   <a>$sel:developerProviderName:IdentityPool'</a>,
--   <a>identityPool_developerProviderName</a> - The "domain" by which
--   Cognito will refer to your users.
--   
--   <a>$sel:identityPoolId:IdentityPool'</a>,
--   <a>identityPool_identityPoolId</a> - An identity pool ID in the format
--   REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPool'</a>,
--   <a>identityPool_identityPoolName</a> - A string that you provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:IdentityPool'</a>,
--   <a>identityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newIdentityPool :: Text -> Text -> Bool -> IdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
identityPool_allowClassicFlow :: Lens' IdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
identityPool_samlProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
identityPool_identityPoolTags :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | The ARNs of the OpenID Connect providers.
identityPool_openIdConnectProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
identityPool_supportedLoginProviders :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | A list representing an Amazon Cognito user pool and its client ID.
identityPool_cognitoIdentityProviders :: Lens' IdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users.
identityPool_developerProviderName :: Lens' IdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
identityPool_identityPoolId :: Lens' IdentityPool Text

-- | A string that you provide.
identityPool_identityPoolName :: Lens' IdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
identityPool_allowUnauthenticatedIdentities :: Lens' IdentityPool Bool

-- | A description of the identity pool.
--   
--   <i>See:</i> <a>newIdentityPoolShortDescription</a> smart constructor.
data IdentityPoolShortDescription
IdentityPoolShortDescription' :: Maybe Text -> Maybe Text -> IdentityPoolShortDescription

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:IdentityPoolShortDescription'] :: IdentityPoolShortDescription -> Maybe Text

-- | A string that you provide.
[$sel:identityPoolName:IdentityPoolShortDescription'] :: IdentityPoolShortDescription -> Maybe Text

-- | Create a value of <a>IdentityPoolShortDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:IdentityPoolShortDescription'</a>,
--   <a>identityPoolShortDescription_identityPoolId</a> - An identity pool
--   ID in the format REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPoolShortDescription'</a>,
--   <a>identityPoolShortDescription_identityPoolName</a> - A string that
--   you provide.
newIdentityPoolShortDescription :: IdentityPoolShortDescription

-- | An identity pool ID in the format REGION:GUID.
identityPoolShortDescription_identityPoolId :: Lens' IdentityPoolShortDescription (Maybe Text)

-- | A string that you provide.
identityPoolShortDescription_identityPoolName :: Lens' IdentityPoolShortDescription (Maybe Text)

-- | A rule that maps a claim name, a claim value, and a match type to a
--   role ARN.
--   
--   <i>See:</i> <a>newMappingRule</a> smart constructor.
data MappingRule
MappingRule' :: Text -> MappingRuleMatchType -> Text -> Text -> MappingRule

-- | The claim name that must be present in the token, for example,
--   "isAdmin" or "paid".
[$sel:claim:MappingRule'] :: MappingRule -> Text

-- | The match condition that specifies how closely the claim value in the
--   IdP token must match <tt>Value</tt>.
[$sel:matchType:MappingRule'] :: MappingRule -> MappingRuleMatchType

-- | A brief string that the claim must match, for example, "paid" or
--   "yes".
[$sel:value:MappingRule'] :: MappingRule -> Text

-- | The role ARN.
[$sel:roleARN:MappingRule'] :: MappingRule -> Text

-- | Create a value of <a>MappingRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:claim:MappingRule'</a>, <a>mappingRule_claim</a> - The claim
--   name that must be present in the token, for example, "isAdmin" or
--   "paid".
--   
--   <a>$sel:matchType:MappingRule'</a>, <a>mappingRule_matchType</a> - The
--   match condition that specifies how closely the claim value in the IdP
--   token must match <tt>Value</tt>.
--   
--   <a>$sel:value:MappingRule'</a>, <a>mappingRule_value</a> - A brief
--   string that the claim must match, for example, "paid" or "yes".
--   
--   <a>$sel:roleARN:MappingRule'</a>, <a>mappingRule_roleARN</a> - The
--   role ARN.
newMappingRule :: Text -> MappingRuleMatchType -> Text -> Text -> MappingRule

-- | The claim name that must be present in the token, for example,
--   "isAdmin" or "paid".
mappingRule_claim :: Lens' MappingRule Text

-- | The match condition that specifies how closely the claim value in the
--   IdP token must match <tt>Value</tt>.
mappingRule_matchType :: Lens' MappingRule MappingRuleMatchType

-- | A brief string that the claim must match, for example, "paid" or
--   "yes".
mappingRule_value :: Lens' MappingRule Text

-- | The role ARN.
mappingRule_roleARN :: Lens' MappingRule Text

-- | A role mapping.
--   
--   <i>See:</i> <a>newRoleMapping</a> smart constructor.
data RoleMapping
RoleMapping' :: Maybe AmbiguousRoleResolutionType -> Maybe RulesConfigurationType -> RoleMappingType -> RoleMapping

-- | If you specify Token or Rules as the <tt>Type</tt>,
--   <tt>AmbiguousRoleResolution</tt> is required.
--   
--   Specifies the action to be taken if either no rules match the claim
--   value for the <tt>Rules</tt> type, or there is no
--   <tt>cognito:preferred_role</tt> claim and there are multiple
--   <tt>cognito:roles</tt> matches for the <tt>Token</tt> type.
[$sel:ambiguousRoleResolution:RoleMapping'] :: RoleMapping -> Maybe AmbiguousRoleResolutionType

-- | The rules to be used for mapping users to roles.
--   
--   If you specify Rules as the role mapping type,
--   <tt>RulesConfiguration</tt> is required.
[$sel:rulesConfiguration:RoleMapping'] :: RoleMapping -> Maybe RulesConfigurationType

-- | The role mapping type. Token will use <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims from the Cognito identity
--   provider token to map groups to roles. Rules will attempt to match
--   claims from the token to map to a role.
[$sel:type':RoleMapping'] :: RoleMapping -> RoleMappingType

-- | Create a value of <a>RoleMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ambiguousRoleResolution:RoleMapping'</a>,
--   <a>roleMapping_ambiguousRoleResolution</a> - If you specify Token or
--   Rules as the <tt>Type</tt>, <tt>AmbiguousRoleResolution</tt> is
--   required.
--   
--   Specifies the action to be taken if either no rules match the claim
--   value for the <tt>Rules</tt> type, or there is no
--   <tt>cognito:preferred_role</tt> claim and there are multiple
--   <tt>cognito:roles</tt> matches for the <tt>Token</tt> type.
--   
--   <a>$sel:rulesConfiguration:RoleMapping'</a>,
--   <a>roleMapping_rulesConfiguration</a> - The rules to be used for
--   mapping users to roles.
--   
--   If you specify Rules as the role mapping type,
--   <tt>RulesConfiguration</tt> is required.
--   
--   <a>$sel:type':RoleMapping'</a>, <a>roleMapping_type</a> - The role
--   mapping type. Token will use <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims from the Cognito identity
--   provider token to map groups to roles. Rules will attempt to match
--   claims from the token to map to a role.
newRoleMapping :: RoleMappingType -> RoleMapping

-- | If you specify Token or Rules as the <tt>Type</tt>,
--   <tt>AmbiguousRoleResolution</tt> is required.
--   
--   Specifies the action to be taken if either no rules match the claim
--   value for the <tt>Rules</tt> type, or there is no
--   <tt>cognito:preferred_role</tt> claim and there are multiple
--   <tt>cognito:roles</tt> matches for the <tt>Token</tt> type.
roleMapping_ambiguousRoleResolution :: Lens' RoleMapping (Maybe AmbiguousRoleResolutionType)

-- | The rules to be used for mapping users to roles.
--   
--   If you specify Rules as the role mapping type,
--   <tt>RulesConfiguration</tt> is required.
roleMapping_rulesConfiguration :: Lens' RoleMapping (Maybe RulesConfigurationType)

-- | The role mapping type. Token will use <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims from the Cognito identity
--   provider token to map groups to roles. Rules will attempt to match
--   claims from the token to map to a role.
roleMapping_type :: Lens' RoleMapping RoleMappingType

-- | A container for rules.
--   
--   <i>See:</i> <a>newRulesConfigurationType</a> smart constructor.
data RulesConfigurationType
RulesConfigurationType' :: NonEmpty MappingRule -> RulesConfigurationType

-- | An array of rules. You can specify up to 25 rules per identity
--   provider.
--   
--   Rules are evaluated in order. The first one to match specifies the
--   role.
[$sel:rules:RulesConfigurationType'] :: RulesConfigurationType -> NonEmpty MappingRule

-- | Create a value of <a>RulesConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:RulesConfigurationType'</a>,
--   <a>rulesConfigurationType_rules</a> - An array of rules. You can
--   specify up to 25 rules per identity provider.
--   
--   Rules are evaluated in order. The first one to match specifies the
--   role.
newRulesConfigurationType :: NonEmpty MappingRule -> RulesConfigurationType

-- | An array of rules. You can specify up to 25 rules per identity
--   provider.
--   
--   Rules are evaluated in order. The first one to match specifies the
--   role.
rulesConfigurationType_rules :: Lens' RulesConfigurationType (NonEmpty MappingRule)

-- | An array of UnprocessedIdentityId objects, each of which contains an
--   ErrorCode and IdentityId.
--   
--   <i>See:</i> <a>newUnprocessedIdentityId</a> smart constructor.
data UnprocessedIdentityId
UnprocessedIdentityId' :: Maybe Text -> Maybe CognitoErrorCode -> UnprocessedIdentityId

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:UnprocessedIdentityId'] :: UnprocessedIdentityId -> Maybe Text

-- | The error code indicating the type of error that occurred.
[$sel:errorCode:UnprocessedIdentityId'] :: UnprocessedIdentityId -> Maybe CognitoErrorCode

-- | Create a value of <a>UnprocessedIdentityId</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:UnprocessedIdentityId'</a>,
--   <a>unprocessedIdentityId_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:errorCode:UnprocessedIdentityId'</a>,
--   <a>unprocessedIdentityId_errorCode</a> - The error code indicating the
--   type of error that occurred.
newUnprocessedIdentityId :: UnprocessedIdentityId

-- | A unique identifier in the format REGION:GUID.
unprocessedIdentityId_identityId :: Lens' UnprocessedIdentityId (Maybe Text)

-- | The error code indicating the type of error that occurred.
unprocessedIdentityId_errorCode :: Lens' UnprocessedIdentityId (Maybe CognitoErrorCode)


-- | Assigns a set of tags to the specified Amazon Cognito identity pool. A
--   tag is a label that you can use to categorize and manage identity
--   pools in different ways, such as by purpose, owner, environment, or
--   other criteria.
--   
--   Each tag consists of a key and value, both of which you define. A key
--   is a general category for more specific values. For example, if you
--   have two versions of an identity pool, one for testing and another for
--   production, you might assign an <tt>Environment</tt> tag key to both
--   identity pools. The value of this key might be <tt>Test</tt> for one
--   identity pool and <tt>Production</tt> for the other.
--   
--   Tags are useful for cost tracking and access control. You can activate
--   your tags so that they appear on the Billing and Cost Management
--   console, where you can track the costs associated with your identity
--   pools. In an IAM policy, you can constrain permissions for identity
--   pools based on specific tags or tag values.
--   
--   You can use this action up to 5 times per second, per account. An
--   identity pool can have as many as 50 tags.
module Network.AWS.CognitoIdentity.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the identity pool.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags to assign to the identity pool.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the identity pool.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   assign to the identity pool.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the identity pool.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to assign to the identity pool.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.TagResource.TagResource
instance GHC.Show.Show Network.AWS.CognitoIdentity.TagResource.TagResource
instance GHC.Read.Read Network.AWS.CognitoIdentity.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.TagResource.TagResource


-- | You can use this operation to use default (username and clientID)
--   attribute or custom attribute mappings.
module Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap

-- | <i>See:</i> <a>newSetPrincipalTagAttributeMap</a> smart constructor.
data SetPrincipalTagAttributeMap
SetPrincipalTagAttributeMap' :: Maybe (HashMap Text Text) -> Maybe Bool -> Text -> Text -> SetPrincipalTagAttributeMap

-- | You can use this operation to add principal tags.
[$sel:principalTags:SetPrincipalTagAttributeMap'] :: SetPrincipalTagAttributeMap -> Maybe (HashMap Text Text)

-- | You can use this operation to use default (username and clientID)
--   attribute mappings.
[$sel:useDefaults:SetPrincipalTagAttributeMap'] :: SetPrincipalTagAttributeMap -> Maybe Bool

-- | The ID of the Identity Pool you want to set attribute mappings for.
[$sel:identityPoolId:SetPrincipalTagAttributeMap'] :: SetPrincipalTagAttributeMap -> Text

-- | The provider name you want to use for attribute mappings.
[$sel:identityProviderName:SetPrincipalTagAttributeMap'] :: SetPrincipalTagAttributeMap -> Text

-- | Create a value of <a>SetPrincipalTagAttributeMap</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:principalTags:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMap_principalTags</a> - You can use this
--   operation to add principal tags.
--   
--   <a>$sel:useDefaults:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMap_useDefaults</a> - You can use this
--   operation to use default (username and clientID) attribute mappings.
--   
--   <a>$sel:identityPoolId:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMap_identityPoolId</a> - The ID of the
--   Identity Pool you want to set attribute mappings for.
--   
--   <a>$sel:identityProviderName:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMap_identityProviderName</a> - The provider
--   name you want to use for attribute mappings.
newSetPrincipalTagAttributeMap :: Text -> Text -> SetPrincipalTagAttributeMap

-- | You can use this operation to add principal tags.
setPrincipalTagAttributeMap_principalTags :: Lens' SetPrincipalTagAttributeMap (Maybe (HashMap Text Text))

-- | You can use this operation to use default (username and clientID)
--   attribute mappings.
setPrincipalTagAttributeMap_useDefaults :: Lens' SetPrincipalTagAttributeMap (Maybe Bool)

-- | The ID of the Identity Pool you want to set attribute mappings for.
setPrincipalTagAttributeMap_identityPoolId :: Lens' SetPrincipalTagAttributeMap Text

-- | The provider name you want to use for attribute mappings.
setPrincipalTagAttributeMap_identityProviderName :: Lens' SetPrincipalTagAttributeMap Text

-- | <i>See:</i> <a>newSetPrincipalTagAttributeMapResponse</a> smart
--   constructor.
data SetPrincipalTagAttributeMapResponse
SetPrincipalTagAttributeMapResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Int -> SetPrincipalTagAttributeMapResponse

-- | The ID of the Identity Pool you want to set attribute mappings for.
[$sel:identityPoolId:SetPrincipalTagAttributeMapResponse'] :: SetPrincipalTagAttributeMapResponse -> Maybe Text

-- | The provider name you want to use for attribute mappings.
[$sel:identityProviderName:SetPrincipalTagAttributeMapResponse'] :: SetPrincipalTagAttributeMapResponse -> Maybe Text

-- | You can use this operation to add principal tags. The
--   <tt>PrincipalTags</tt>operation enables you to reference user
--   attributes in your IAM permissions policy.
[$sel:principalTags:SetPrincipalTagAttributeMapResponse'] :: SetPrincipalTagAttributeMapResponse -> Maybe (HashMap Text Text)

-- | You can use this operation to select default (username and clientID)
--   attribute mappings.
[$sel:useDefaults:SetPrincipalTagAttributeMapResponse'] :: SetPrincipalTagAttributeMapResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:SetPrincipalTagAttributeMapResponse'] :: SetPrincipalTagAttributeMapResponse -> Int

-- | Create a value of <a>SetPrincipalTagAttributeMapResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMapResponse_identityPoolId</a> - The ID of
--   the Identity Pool you want to set attribute mappings for.
--   
--   <a>$sel:identityProviderName:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMapResponse_identityProviderName</a> - The
--   provider name you want to use for attribute mappings.
--   
--   <a>$sel:principalTags:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMapResponse_principalTags</a> - You can use
--   this operation to add principal tags. The
--   <tt>PrincipalTags</tt>operation enables you to reference user
--   attributes in your IAM permissions policy.
--   
--   <a>$sel:useDefaults:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMapResponse_useDefaults</a> - You can use
--   this operation to select default (username and clientID) attribute
--   mappings.
--   
--   <a>$sel:httpStatus:SetPrincipalTagAttributeMapResponse'</a>,
--   <a>setPrincipalTagAttributeMapResponse_httpStatus</a> - The response's
--   http status code.
newSetPrincipalTagAttributeMapResponse :: Int -> SetPrincipalTagAttributeMapResponse

-- | The ID of the Identity Pool you want to set attribute mappings for.
setPrincipalTagAttributeMapResponse_identityPoolId :: Lens' SetPrincipalTagAttributeMapResponse (Maybe Text)

-- | The provider name you want to use for attribute mappings.
setPrincipalTagAttributeMapResponse_identityProviderName :: Lens' SetPrincipalTagAttributeMapResponse (Maybe Text)

-- | You can use this operation to add principal tags. The
--   <tt>PrincipalTags</tt>operation enables you to reference user
--   attributes in your IAM permissions policy.
setPrincipalTagAttributeMapResponse_principalTags :: Lens' SetPrincipalTagAttributeMapResponse (Maybe (HashMap Text Text))

-- | You can use this operation to select default (username and clientID)
--   attribute mappings.
setPrincipalTagAttributeMapResponse_useDefaults :: Lens' SetPrincipalTagAttributeMapResponse (Maybe Bool)

-- | The response's http status code.
setPrincipalTagAttributeMapResponse_httpStatus :: Lens' SetPrincipalTagAttributeMapResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMap
instance GHC.Show.Show Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMap
instance GHC.Read.Read Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMap
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMap
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMapResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMapResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMapResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMapResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMap
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMapResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMap
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMap
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMap
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMap
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMap
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.SetPrincipalTagAttributeMap.SetPrincipalTagAttributeMap


-- | Sets the roles for an identity pool. These roles are used when making
--   calls to GetCredentialsForIdentity action.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.SetIdentityPoolRoles

-- | Input to the <tt>SetIdentityPoolRoles</tt> action.
--   
--   <i>See:</i> <a>newSetIdentityPoolRoles</a> smart constructor.
data SetIdentityPoolRoles
SetIdentityPoolRoles' :: Maybe (HashMap Text RoleMapping) -> Text -> HashMap Text Text -> SetIdentityPoolRoles

-- | How users for a specific identity provider are to mapped to roles.
--   This is a string to RoleMapping object map. The string identifies the
--   identity provider, for example, "graph.facebook.com" or
--   "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
--   
--   Up to 25 rules can be specified per identity provider.
[$sel:roleMappings:SetIdentityPoolRoles'] :: SetIdentityPoolRoles -> Maybe (HashMap Text RoleMapping)

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:SetIdentityPoolRoles'] :: SetIdentityPoolRoles -> Text

-- | The map of roles associated with this pool. For a given role, the key
--   will be either "authenticated" or "unauthenticated" and the value will
--   be the Role ARN.
[$sel:roles:SetIdentityPoolRoles'] :: SetIdentityPoolRoles -> HashMap Text Text

-- | Create a value of <a>SetIdentityPoolRoles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleMappings:SetIdentityPoolRoles'</a>,
--   <a>setIdentityPoolRoles_roleMappings</a> - How users for a specific
--   identity provider are to mapped to roles. This is a string to
--   RoleMapping object map. The string identifies the identity provider,
--   for example, "graph.facebook.com" or
--   "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
--   
--   Up to 25 rules can be specified per identity provider.
--   
--   <a>$sel:identityPoolId:SetIdentityPoolRoles'</a>,
--   <a>setIdentityPoolRoles_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
--   
--   <a>$sel:roles:SetIdentityPoolRoles'</a>,
--   <a>setIdentityPoolRoles_roles</a> - The map of roles associated with
--   this pool. For a given role, the key will be either "authenticated" or
--   "unauthenticated" and the value will be the Role ARN.
newSetIdentityPoolRoles :: Text -> SetIdentityPoolRoles

-- | How users for a specific identity provider are to mapped to roles.
--   This is a string to RoleMapping object map. The string identifies the
--   identity provider, for example, "graph.facebook.com" or
--   "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
--   
--   Up to 25 rules can be specified per identity provider.
setIdentityPoolRoles_roleMappings :: Lens' SetIdentityPoolRoles (Maybe (HashMap Text RoleMapping))

-- | An identity pool ID in the format REGION:GUID.
setIdentityPoolRoles_identityPoolId :: Lens' SetIdentityPoolRoles Text

-- | The map of roles associated with this pool. For a given role, the key
--   will be either "authenticated" or "unauthenticated" and the value will
--   be the Role ARN.
setIdentityPoolRoles_roles :: Lens' SetIdentityPoolRoles (HashMap Text Text)

-- | <i>See:</i> <a>newSetIdentityPoolRolesResponse</a> smart constructor.
data SetIdentityPoolRolesResponse
SetIdentityPoolRolesResponse' :: SetIdentityPoolRolesResponse

-- | Create a value of <a>SetIdentityPoolRolesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetIdentityPoolRolesResponse :: SetIdentityPoolRolesResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRoles
instance GHC.Show.Show Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRoles
instance GHC.Read.Read Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRoles
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRoles
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRolesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRolesResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRolesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRolesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRoles
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRolesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRoles
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRoles
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRoles
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRoles
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRoles
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.SetIdentityPoolRoles.SetIdentityPoolRoles


-- | Merges two users having different <tt>IdentityId</tt>s, existing in
--   the same identity pool, and identified by the same developer provider.
--   You can use this action to request that discrete users be merged and
--   identified as a single user in the Cognito environment. Cognito
--   associates the given source user (<tt>SourceUserIdentifier</tt>) with
--   the <tt>IdentityId</tt> of the <tt>DestinationUserIdentifier</tt>.
--   Only developer-authenticated users can be merged. If the users to be
--   merged are associated with the same public provider, but as two
--   different users, an exception will be thrown.
--   
--   The number of linked logins is limited to 20. So, the number of linked
--   logins for the source user, <tt>SourceUserIdentifier</tt>, and the
--   destination user, <tt>DestinationUserIdentifier</tt>, together should
--   not be larger than 20. Otherwise, an exception will be thrown.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.MergeDeveloperIdentities

-- | Input to the <tt>MergeDeveloperIdentities</tt> action.
--   
--   <i>See:</i> <a>newMergeDeveloperIdentities</a> smart constructor.
data MergeDeveloperIdentities
MergeDeveloperIdentities' :: Text -> Text -> Text -> Text -> MergeDeveloperIdentities

-- | User identifier for the source user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
[$sel:sourceUserIdentifier:MergeDeveloperIdentities'] :: MergeDeveloperIdentities -> Text

-- | User identifier for the destination user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
[$sel:destinationUserIdentifier:MergeDeveloperIdentities'] :: MergeDeveloperIdentities -> Text

-- | The "domain" by which Cognito will refer to your users. This is a
--   (pseudo) domain name that you provide while creating an identity pool.
--   This name acts as a placeholder that allows your backend and the
--   Cognito service to communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (.), underscore (_), and dash (-).
[$sel:developerProviderName:MergeDeveloperIdentities'] :: MergeDeveloperIdentities -> Text

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:MergeDeveloperIdentities'] :: MergeDeveloperIdentities -> Text

-- | Create a value of <a>MergeDeveloperIdentities</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceUserIdentifier:MergeDeveloperIdentities'</a>,
--   <a>mergeDeveloperIdentities_sourceUserIdentifier</a> - User identifier
--   for the source user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
--   
--   <a>$sel:destinationUserIdentifier:MergeDeveloperIdentities'</a>,
--   <a>mergeDeveloperIdentities_destinationUserIdentifier</a> - User
--   identifier for the destination user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
--   
--   <a>$sel:developerProviderName:MergeDeveloperIdentities'</a>,
--   <a>mergeDeveloperIdentities_developerProviderName</a> - The "domain"
--   by which Cognito will refer to your users. This is a (pseudo) domain
--   name that you provide while creating an identity pool. This name acts
--   as a placeholder that allows your backend and the Cognito service to
--   communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (.), underscore (_), and dash (-).
--   
--   <a>$sel:identityPoolId:MergeDeveloperIdentities'</a>,
--   <a>mergeDeveloperIdentities_identityPoolId</a> - An identity pool ID
--   in the format REGION:GUID.
newMergeDeveloperIdentities :: Text -> Text -> Text -> Text -> MergeDeveloperIdentities

-- | User identifier for the source user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
mergeDeveloperIdentities_sourceUserIdentifier :: Lens' MergeDeveloperIdentities Text

-- | User identifier for the destination user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
mergeDeveloperIdentities_destinationUserIdentifier :: Lens' MergeDeveloperIdentities Text

-- | The "domain" by which Cognito will refer to your users. This is a
--   (pseudo) domain name that you provide while creating an identity pool.
--   This name acts as a placeholder that allows your backend and the
--   Cognito service to communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (.), underscore (_), and dash (-).
mergeDeveloperIdentities_developerProviderName :: Lens' MergeDeveloperIdentities Text

-- | An identity pool ID in the format REGION:GUID.
mergeDeveloperIdentities_identityPoolId :: Lens' MergeDeveloperIdentities Text

-- | Returned in response to a successful <tt>MergeDeveloperIdentities</tt>
--   action.
--   
--   <i>See:</i> <a>newMergeDeveloperIdentitiesResponse</a> smart
--   constructor.
data MergeDeveloperIdentitiesResponse
MergeDeveloperIdentitiesResponse' :: Maybe Text -> Int -> MergeDeveloperIdentitiesResponse

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:MergeDeveloperIdentitiesResponse'] :: MergeDeveloperIdentitiesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:MergeDeveloperIdentitiesResponse'] :: MergeDeveloperIdentitiesResponse -> Int

-- | Create a value of <a>MergeDeveloperIdentitiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:MergeDeveloperIdentitiesResponse'</a>,
--   <a>mergeDeveloperIdentitiesResponse_identityId</a> - A unique
--   identifier in the format REGION:GUID.
--   
--   <a>$sel:httpStatus:MergeDeveloperIdentitiesResponse'</a>,
--   <a>mergeDeveloperIdentitiesResponse_httpStatus</a> - The response's
--   http status code.
newMergeDeveloperIdentitiesResponse :: Int -> MergeDeveloperIdentitiesResponse

-- | A unique identifier in the format REGION:GUID.
mergeDeveloperIdentitiesResponse_identityId :: Lens' MergeDeveloperIdentitiesResponse (Maybe Text)

-- | The response's http status code.
mergeDeveloperIdentitiesResponse_httpStatus :: Lens' MergeDeveloperIdentitiesResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentities
instance GHC.Show.Show Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentities
instance GHC.Read.Read Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentities
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentities
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentitiesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentitiesResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentitiesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentitiesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentities
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentitiesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentities
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentities
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentities
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentities
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentities
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.MergeDeveloperIdentities.MergeDeveloperIdentities


-- | Retrieves the <tt>IdentityID</tt> associated with a
--   <tt>DeveloperUserIdentifier</tt> or the list of
--   <tt>DeveloperUserIdentifier</tt> values associated with an
--   <tt>IdentityId</tt> for an existing identity. Either
--   <tt>IdentityID</tt> or <tt>DeveloperUserIdentifier</tt> must not be
--   null. If you supply only one of these values, the other value will be
--   searched in the database and returned as a part of the response. If
--   you supply both, <tt>DeveloperUserIdentifier</tt> will be matched
--   against <tt>IdentityID</tt>. If the values are verified against the
--   database, the response returns both values and is the same as the
--   request. Otherwise a <tt>ResourceConflictException</tt> is thrown.
--   
--   <tt>LookupDeveloperIdentity</tt> is intended for low-throughput
--   control plane operations: for example, to enable customer service to
--   locate an identity ID by username. If you are using it for
--   higher-volume operations such as user authentication, your requests
--   are likely to be throttled. GetOpenIdTokenForDeveloperIdentity is a
--   better option for higher-volume operations for user authentication.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.LookupDeveloperIdentity

-- | Input to the <tt>LookupDeveloperIdentityInput</tt> action.
--   
--   <i>See:</i> <a>newLookupDeveloperIdentity</a> smart constructor.
data LookupDeveloperIdentity
LookupDeveloperIdentity' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Text -> LookupDeveloperIdentity

-- | A pagination token. The first call you make will have
--   <tt>NextToken</tt> set to null. After that the service will return
--   <tt>NextToken</tt> values as needed. For example, let's say you make a
--   request with <tt>MaxResults</tt> set to 10, and there are 20 matches
--   in the database. The service will return a pagination token as a part
--   of the response. This token can be used to call the API again and get
--   results starting from the 11th match.
[$sel:nextToken:LookupDeveloperIdentity'] :: LookupDeveloperIdentity -> Maybe Text

-- | The maximum number of identities to return.
[$sel:maxResults:LookupDeveloperIdentity'] :: LookupDeveloperIdentity -> Maybe Natural

-- | A unique ID used by your backend authentication process to identify a
--   user. Typically, a developer identity provider would issue many
--   developer user identifiers, in keeping with the number of users.
[$sel:developerUserIdentifier:LookupDeveloperIdentity'] :: LookupDeveloperIdentity -> Maybe Text

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:LookupDeveloperIdentity'] :: LookupDeveloperIdentity -> Maybe Text

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:LookupDeveloperIdentity'] :: LookupDeveloperIdentity -> Text

-- | Create a value of <a>LookupDeveloperIdentity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentity_nextToken</a> - A pagination token. The
--   first call you make will have <tt>NextToken</tt> set to null. After
--   that the service will return <tt>NextToken</tt> values as needed. For
--   example, let's say you make a request with <tt>MaxResults</tt> set to
--   10, and there are 20 matches in the database. The service will return
--   a pagination token as a part of the response. This token can be used
--   to call the API again and get results starting from the 11th match.
--   
--   <a>$sel:maxResults:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentity_maxResults</a> - The maximum number of
--   identities to return.
--   
--   <a>$sel:developerUserIdentifier:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentity_developerUserIdentifier</a> - A unique ID
--   used by your backend authentication process to identify a user.
--   Typically, a developer identity provider would issue many developer
--   user identifiers, in keeping with the number of users.
--   
--   <a>$sel:identityId:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentity_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:identityPoolId:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentity_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
newLookupDeveloperIdentity :: Text -> LookupDeveloperIdentity

-- | A pagination token. The first call you make will have
--   <tt>NextToken</tt> set to null. After that the service will return
--   <tt>NextToken</tt> values as needed. For example, let's say you make a
--   request with <tt>MaxResults</tt> set to 10, and there are 20 matches
--   in the database. The service will return a pagination token as a part
--   of the response. This token can be used to call the API again and get
--   results starting from the 11th match.
lookupDeveloperIdentity_nextToken :: Lens' LookupDeveloperIdentity (Maybe Text)

-- | The maximum number of identities to return.
lookupDeveloperIdentity_maxResults :: Lens' LookupDeveloperIdentity (Maybe Natural)

-- | A unique ID used by your backend authentication process to identify a
--   user. Typically, a developer identity provider would issue many
--   developer user identifiers, in keeping with the number of users.
lookupDeveloperIdentity_developerUserIdentifier :: Lens' LookupDeveloperIdentity (Maybe Text)

-- | A unique identifier in the format REGION:GUID.
lookupDeveloperIdentity_identityId :: Lens' LookupDeveloperIdentity (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
lookupDeveloperIdentity_identityPoolId :: Lens' LookupDeveloperIdentity Text

-- | Returned in response to a successful <tt>LookupDeveloperIdentity</tt>
--   action.
--   
--   <i>See:</i> <a>newLookupDeveloperIdentityResponse</a> smart
--   constructor.
data LookupDeveloperIdentityResponse
LookupDeveloperIdentityResponse' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Int -> LookupDeveloperIdentityResponse

-- | A pagination token. The first call you make will have
--   <tt>NextToken</tt> set to null. After that the service will return
--   <tt>NextToken</tt> values as needed. For example, let's say you make a
--   request with <tt>MaxResults</tt> set to 10, and there are 20 matches
--   in the database. The service will return a pagination token as a part
--   of the response. This token can be used to call the API again and get
--   results starting from the 11th match.
[$sel:nextToken:LookupDeveloperIdentityResponse'] :: LookupDeveloperIdentityResponse -> Maybe Text

-- | This is the list of developer user identifiers associated with an
--   identity ID. Cognito supports the association of multiple developer
--   user identifiers with an identity ID.
[$sel:developerUserIdentifierList:LookupDeveloperIdentityResponse'] :: LookupDeveloperIdentityResponse -> Maybe [Text]

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:LookupDeveloperIdentityResponse'] :: LookupDeveloperIdentityResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:LookupDeveloperIdentityResponse'] :: LookupDeveloperIdentityResponse -> Int

-- | Create a value of <a>LookupDeveloperIdentityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentityResponse_nextToken</a> - A pagination token.
--   The first call you make will have <tt>NextToken</tt> set to null.
--   After that the service will return <tt>NextToken</tt> values as
--   needed. For example, let's say you make a request with
--   <tt>MaxResults</tt> set to 10, and there are 20 matches in the
--   database. The service will return a pagination token as a part of the
--   response. This token can be used to call the API again and get results
--   starting from the 11th match.
--   
--   
--   <a>$sel:developerUserIdentifierList:LookupDeveloperIdentityResponse'</a>,
--   <a>lookupDeveloperIdentityResponse_developerUserIdentifierList</a> -
--   This is the list of developer user identifiers associated with an
--   identity ID. Cognito supports the association of multiple developer
--   user identifiers with an identity ID.
--   
--   <a>$sel:identityId:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentityResponse_identityId</a> - A unique
--   identifier in the format REGION:GUID.
--   
--   <a>$sel:httpStatus:LookupDeveloperIdentityResponse'</a>,
--   <a>lookupDeveloperIdentityResponse_httpStatus</a> - The response's
--   http status code.
newLookupDeveloperIdentityResponse :: Int -> LookupDeveloperIdentityResponse

-- | A pagination token. The first call you make will have
--   <tt>NextToken</tt> set to null. After that the service will return
--   <tt>NextToken</tt> values as needed. For example, let's say you make a
--   request with <tt>MaxResults</tt> set to 10, and there are 20 matches
--   in the database. The service will return a pagination token as a part
--   of the response. This token can be used to call the API again and get
--   results starting from the 11th match.
lookupDeveloperIdentityResponse_nextToken :: Lens' LookupDeveloperIdentityResponse (Maybe Text)

-- | This is the list of developer user identifiers associated with an
--   identity ID. Cognito supports the association of multiple developer
--   user identifiers with an identity ID.
lookupDeveloperIdentityResponse_developerUserIdentifierList :: Lens' LookupDeveloperIdentityResponse (Maybe [Text])

-- | A unique identifier in the format REGION:GUID.
lookupDeveloperIdentityResponse_identityId :: Lens' LookupDeveloperIdentityResponse (Maybe Text)

-- | The response's http status code.
lookupDeveloperIdentityResponse_httpStatus :: Lens' LookupDeveloperIdentityResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentity
instance GHC.Show.Show Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentity
instance GHC.Read.Read Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentity
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentity
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentityResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentityResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentityResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentity
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentity
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentity
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentity
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.LookupDeveloperIdentity.LookupDeveloperIdentity


-- | Lists the tags that are assigned to an Amazon Cognito identity pool.
--   
--   A tag is a label that you can apply to identity pools to categorize
--   and manage them in different ways, such as by purpose, owner,
--   environment, or other criteria.
--   
--   You can use this action up to 10 times per second, per account.
module Network.AWS.CognitoIdentity.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the identity pool that the tags are
--   assigned to.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the identity pool that the tags are assigned to.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the identity pool that the tags are
--   assigned to.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The tags that are assigned to the identity pool.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags that are assigned
--   to the identity pool.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags that are assigned to the identity pool.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.ListTagsForResource.ListTagsForResource


-- | Lists all of the Cognito identity pools registered for your account.
--   
--   You must use AWS Developer credentials to call this API.
--   
--   This operation returns paginated results.
module Network.AWS.CognitoIdentity.ListIdentityPools

-- | Input to the ListIdentityPools action.
--   
--   <i>See:</i> <a>newListIdentityPools</a> smart constructor.
data ListIdentityPools
ListIdentityPools' :: Maybe Text -> Natural -> ListIdentityPools

-- | A pagination token.
[$sel:nextToken:ListIdentityPools'] :: ListIdentityPools -> Maybe Text

-- | The maximum number of identities to return.
[$sel:maxResults:ListIdentityPools'] :: ListIdentityPools -> Natural

-- | Create a value of <a>ListIdentityPools</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentityPools'</a>,
--   <a>listIdentityPools_nextToken</a> - A pagination token.
--   
--   <a>$sel:maxResults:ListIdentityPools'</a>,
--   <a>listIdentityPools_maxResults</a> - The maximum number of identities
--   to return.
newListIdentityPools :: Natural -> ListIdentityPools

-- | A pagination token.
listIdentityPools_nextToken :: Lens' ListIdentityPools (Maybe Text)

-- | The maximum number of identities to return.
listIdentityPools_maxResults :: Lens' ListIdentityPools Natural

-- | The result of a successful ListIdentityPools action.
--   
--   <i>See:</i> <a>newListIdentityPoolsResponse</a> smart constructor.
data ListIdentityPoolsResponse
ListIdentityPoolsResponse' :: Maybe Text -> Maybe [IdentityPoolShortDescription] -> Int -> ListIdentityPoolsResponse

-- | A pagination token.
[$sel:nextToken:ListIdentityPoolsResponse'] :: ListIdentityPoolsResponse -> Maybe Text

-- | The identity pools returned by the ListIdentityPools action.
[$sel:identityPools:ListIdentityPoolsResponse'] :: ListIdentityPoolsResponse -> Maybe [IdentityPoolShortDescription]

-- | The response's http status code.
[$sel:httpStatus:ListIdentityPoolsResponse'] :: ListIdentityPoolsResponse -> Int

-- | Create a value of <a>ListIdentityPoolsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentityPools'</a>,
--   <a>listIdentityPoolsResponse_nextToken</a> - A pagination token.
--   
--   <a>$sel:identityPools:ListIdentityPoolsResponse'</a>,
--   <a>listIdentityPoolsResponse_identityPools</a> - The identity pools
--   returned by the ListIdentityPools action.
--   
--   <a>$sel:httpStatus:ListIdentityPoolsResponse'</a>,
--   <a>listIdentityPoolsResponse_httpStatus</a> - The response's http
--   status code.
newListIdentityPoolsResponse :: Int -> ListIdentityPoolsResponse

-- | A pagination token.
listIdentityPoolsResponse_nextToken :: Lens' ListIdentityPoolsResponse (Maybe Text)

-- | The identity pools returned by the ListIdentityPools action.
listIdentityPoolsResponse_identityPools :: Lens' ListIdentityPoolsResponse (Maybe [IdentityPoolShortDescription])

-- | The response's http status code.
listIdentityPoolsResponse_httpStatus :: Lens' ListIdentityPoolsResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools
instance GHC.Show.Show Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools
instance GHC.Read.Read Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPoolsResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPoolsResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPoolsResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPoolsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPoolsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.ListIdentityPools.ListIdentityPools


-- | Lists the identities in an identity pool.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.ListIdentities

-- | Input to the ListIdentities action.
--   
--   <i>See:</i> <a>newListIdentities</a> smart constructor.
data ListIdentities
ListIdentities' :: Maybe Text -> Maybe Bool -> Text -> Natural -> ListIdentities

-- | A pagination token.
[$sel:nextToken:ListIdentities'] :: ListIdentities -> Maybe Text

-- | An optional boolean parameter that allows you to hide disabled
--   identities. If omitted, the ListIdentities API will include disabled
--   identities in the response.
[$sel:hideDisabled:ListIdentities'] :: ListIdentities -> Maybe Bool

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:ListIdentities'] :: ListIdentities -> Text

-- | The maximum number of identities to return.
[$sel:maxResults:ListIdentities'] :: ListIdentities -> Natural

-- | Create a value of <a>ListIdentities</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentities'</a>, <a>listIdentities_nextToken</a>
--   - A pagination token.
--   
--   <a>$sel:hideDisabled:ListIdentities'</a>,
--   <a>listIdentities_hideDisabled</a> - An optional boolean parameter
--   that allows you to hide disabled identities. If omitted, the
--   ListIdentities API will include disabled identities in the response.
--   
--   <a>$sel:identityPoolId:ListIdentities'</a>,
--   <a>listIdentities_identityPoolId</a> - An identity pool ID in the
--   format REGION:GUID.
--   
--   <a>$sel:maxResults:ListIdentities'</a>,
--   <a>listIdentities_maxResults</a> - The maximum number of identities to
--   return.
newListIdentities :: Text -> Natural -> ListIdentities

-- | A pagination token.
listIdentities_nextToken :: Lens' ListIdentities (Maybe Text)

-- | An optional boolean parameter that allows you to hide disabled
--   identities. If omitted, the ListIdentities API will include disabled
--   identities in the response.
listIdentities_hideDisabled :: Lens' ListIdentities (Maybe Bool)

-- | An identity pool ID in the format REGION:GUID.
listIdentities_identityPoolId :: Lens' ListIdentities Text

-- | The maximum number of identities to return.
listIdentities_maxResults :: Lens' ListIdentities Natural

-- | The response to a ListIdentities request.
--   
--   <i>See:</i> <a>newListIdentitiesResponse</a> smart constructor.
data ListIdentitiesResponse
ListIdentitiesResponse' :: Maybe Text -> Maybe Text -> Maybe [IdentityDescription] -> Int -> ListIdentitiesResponse

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:ListIdentitiesResponse'] :: ListIdentitiesResponse -> Maybe Text

-- | A pagination token.
[$sel:nextToken:ListIdentitiesResponse'] :: ListIdentitiesResponse -> Maybe Text

-- | An object containing a set of identities and associated mappings.
[$sel:identities:ListIdentitiesResponse'] :: ListIdentitiesResponse -> Maybe [IdentityDescription]

-- | The response's http status code.
[$sel:httpStatus:ListIdentitiesResponse'] :: ListIdentitiesResponse -> Int

-- | Create a value of <a>ListIdentitiesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:ListIdentities'</a>,
--   <a>listIdentitiesResponse_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
--   
--   <a>$sel:nextToken:ListIdentities'</a>,
--   <a>listIdentitiesResponse_nextToken</a> - A pagination token.
--   
--   <a>$sel:identities:ListIdentitiesResponse'</a>,
--   <a>listIdentitiesResponse_identities</a> - An object containing a set
--   of identities and associated mappings.
--   
--   <a>$sel:httpStatus:ListIdentitiesResponse'</a>,
--   <a>listIdentitiesResponse_httpStatus</a> - The response's http status
--   code.
newListIdentitiesResponse :: Int -> ListIdentitiesResponse

-- | An identity pool ID in the format REGION:GUID.
listIdentitiesResponse_identityPoolId :: Lens' ListIdentitiesResponse (Maybe Text)

-- | A pagination token.
listIdentitiesResponse_nextToken :: Lens' ListIdentitiesResponse (Maybe Text)

-- | An object containing a set of identities and associated mappings.
listIdentitiesResponse_identities :: Lens' ListIdentitiesResponse (Maybe [IdentityDescription])

-- | The response's http status code.
listIdentitiesResponse_httpStatus :: Lens' ListIdentitiesResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.ListIdentities.ListIdentities
instance GHC.Show.Show Network.AWS.CognitoIdentity.ListIdentities.ListIdentities
instance GHC.Read.Read Network.AWS.CognitoIdentity.ListIdentities.ListIdentities
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.ListIdentities.ListIdentities
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.ListIdentities.ListIdentitiesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.ListIdentities.ListIdentitiesResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.ListIdentities.ListIdentitiesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.ListIdentities.ListIdentitiesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.ListIdentities.ListIdentities
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.ListIdentities.ListIdentitiesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.ListIdentities.ListIdentities
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.ListIdentities.ListIdentities
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.ListIdentities.ListIdentities
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.ListIdentities.ListIdentities
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.ListIdentities.ListIdentities
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.ListIdentities.ListIdentities


-- | Use <tt>GetPrincipalTagAttributeMap</tt> to list all mappings between
--   <tt>PrincipalTags</tt> and user attributes.
module Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap

-- | <i>See:</i> <a>newGetPrincipalTagAttributeMap</a> smart constructor.
data GetPrincipalTagAttributeMap
GetPrincipalTagAttributeMap' :: Text -> Text -> GetPrincipalTagAttributeMap

-- | You can use this operation to get the ID of the Identity Pool you
--   setup attribute mappings for.
[$sel:identityPoolId:GetPrincipalTagAttributeMap'] :: GetPrincipalTagAttributeMap -> Text

-- | You can use this operation to get the provider name.
[$sel:identityProviderName:GetPrincipalTagAttributeMap'] :: GetPrincipalTagAttributeMap -> Text

-- | Create a value of <a>GetPrincipalTagAttributeMap</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:GetPrincipalTagAttributeMap'</a>,
--   <a>getPrincipalTagAttributeMap_identityPoolId</a> - You can use this
--   operation to get the ID of the Identity Pool you setup attribute
--   mappings for.
--   
--   <a>$sel:identityProviderName:GetPrincipalTagAttributeMap'</a>,
--   <a>getPrincipalTagAttributeMap_identityProviderName</a> - You can use
--   this operation to get the provider name.
newGetPrincipalTagAttributeMap :: Text -> Text -> GetPrincipalTagAttributeMap

-- | You can use this operation to get the ID of the Identity Pool you
--   setup attribute mappings for.
getPrincipalTagAttributeMap_identityPoolId :: Lens' GetPrincipalTagAttributeMap Text

-- | You can use this operation to get the provider name.
getPrincipalTagAttributeMap_identityProviderName :: Lens' GetPrincipalTagAttributeMap Text

-- | <i>See:</i> <a>newGetPrincipalTagAttributeMapResponse</a> smart
--   constructor.
data GetPrincipalTagAttributeMapResponse
GetPrincipalTagAttributeMapResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Int -> GetPrincipalTagAttributeMapResponse

-- | You can use this operation to get the ID of the Identity Pool you
--   setup attribute mappings for.
[$sel:identityPoolId:GetPrincipalTagAttributeMapResponse'] :: GetPrincipalTagAttributeMapResponse -> Maybe Text

-- | You can use this operation to get the provider name.
[$sel:identityProviderName:GetPrincipalTagAttributeMapResponse'] :: GetPrincipalTagAttributeMapResponse -> Maybe Text

-- | You can use this operation to add principal tags. The
--   <tt>PrincipalTags</tt>operation enables you to reference user
--   attributes in your IAM permissions policy.
[$sel:principalTags:GetPrincipalTagAttributeMapResponse'] :: GetPrincipalTagAttributeMapResponse -> Maybe (HashMap Text Text)

-- | You can use this operation to list
[$sel:useDefaults:GetPrincipalTagAttributeMapResponse'] :: GetPrincipalTagAttributeMapResponse -> Maybe Bool

-- | The response's http status code.
[$sel:httpStatus:GetPrincipalTagAttributeMapResponse'] :: GetPrincipalTagAttributeMapResponse -> Int

-- | Create a value of <a>GetPrincipalTagAttributeMapResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:GetPrincipalTagAttributeMap'</a>,
--   <a>getPrincipalTagAttributeMapResponse_identityPoolId</a> - You can
--   use this operation to get the ID of the Identity Pool you setup
--   attribute mappings for.
--   
--   <a>$sel:identityProviderName:GetPrincipalTagAttributeMap'</a>,
--   <a>getPrincipalTagAttributeMapResponse_identityProviderName</a> - You
--   can use this operation to get the provider name.
--   
--   <a>$sel:principalTags:GetPrincipalTagAttributeMapResponse'</a>,
--   <a>getPrincipalTagAttributeMapResponse_principalTags</a> - You can use
--   this operation to add principal tags. The
--   <tt>PrincipalTags</tt>operation enables you to reference user
--   attributes in your IAM permissions policy.
--   
--   <a>$sel:useDefaults:GetPrincipalTagAttributeMapResponse'</a>,
--   <a>getPrincipalTagAttributeMapResponse_useDefaults</a> - You can use
--   this operation to list
--   
--   <a>$sel:httpStatus:GetPrincipalTagAttributeMapResponse'</a>,
--   <a>getPrincipalTagAttributeMapResponse_httpStatus</a> - The response's
--   http status code.
newGetPrincipalTagAttributeMapResponse :: Int -> GetPrincipalTagAttributeMapResponse

-- | You can use this operation to get the ID of the Identity Pool you
--   setup attribute mappings for.
getPrincipalTagAttributeMapResponse_identityPoolId :: Lens' GetPrincipalTagAttributeMapResponse (Maybe Text)

-- | You can use this operation to get the provider name.
getPrincipalTagAttributeMapResponse_identityProviderName :: Lens' GetPrincipalTagAttributeMapResponse (Maybe Text)

-- | You can use this operation to add principal tags. The
--   <tt>PrincipalTags</tt>operation enables you to reference user
--   attributes in your IAM permissions policy.
getPrincipalTagAttributeMapResponse_principalTags :: Lens' GetPrincipalTagAttributeMapResponse (Maybe (HashMap Text Text))

-- | You can use this operation to list
getPrincipalTagAttributeMapResponse_useDefaults :: Lens' GetPrincipalTagAttributeMapResponse (Maybe Bool)

-- | The response's http status code.
getPrincipalTagAttributeMapResponse_httpStatus :: Lens' GetPrincipalTagAttributeMapResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMap
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMap
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMap
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMap
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMapResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMapResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMapResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMapResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMap
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMapResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMap
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMap
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMap
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMap
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMap
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.GetPrincipalTagAttributeMap.GetPrincipalTagAttributeMap


-- | Registers (or retrieves) a Cognito <tt>IdentityId</tt> and an OpenID
--   Connect token for a user authenticated by your backend authentication
--   process. Supplying multiple logins will create an implicit linked
--   account. You can only specify one developer provider as part of the
--   <tt>Logins</tt> map, which is linked to the identity pool. The
--   developer provider is the "domain" by which Cognito will refer to your
--   users.
--   
--   You can use <tt>GetOpenIdTokenForDeveloperIdentity</tt> to create a
--   new identity and to link new logins (that is, user credentials issued
--   by a public provider or developer provider) to an existing identity.
--   When you want to create a new identity, the <tt>IdentityId</tt> should
--   be null. When you want to associate a new login with an existing
--   authenticated/unauthenticated identity, you can do so by providing the
--   existing <tt>IdentityId</tt>. This API will create the identity in the
--   specified <tt>IdentityPoolId</tt>.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity

-- | Input to the <tt>GetOpenIdTokenForDeveloperIdentity</tt> action.
--   
--   <i>See:</i> <a>newGetOpenIdTokenForDeveloperIdentity</a> smart
--   constructor.
data GetOpenIdTokenForDeveloperIdentity
GetOpenIdTokenForDeveloperIdentity' :: Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> HashMap Text Text -> GetOpenIdTokenForDeveloperIdentity

-- | The expiration time of the token, in seconds. You can specify a custom
--   expiration time for the token so that you can cache it. If you don't
--   provide an expiration time, the token is valid for 15 minutes. You can
--   exchange the token with Amazon STS for temporary AWS credentials,
--   which are valid for a maximum of one hour. The maximum token duration
--   you can set is 24 hours. You should take care in setting the
--   expiration time for a token, as there are significant security
--   implications: an attacker could use a leaked token to access your AWS
--   resources for the token's duration.
--   
--   Please provide for a small grace period, usually no more than 5
--   minutes, to account for clock skew.
[$sel:tokenDuration:GetOpenIdTokenForDeveloperIdentity'] :: GetOpenIdTokenForDeveloperIdentity -> Maybe Natural

-- | Use this operation to configure attribute mappings for custom
--   providers.
[$sel:principalTags:GetOpenIdTokenForDeveloperIdentity'] :: GetOpenIdTokenForDeveloperIdentity -> Maybe (HashMap Text Text)

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:GetOpenIdTokenForDeveloperIdentity'] :: GetOpenIdTokenForDeveloperIdentity -> Maybe Text

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:GetOpenIdTokenForDeveloperIdentity'] :: GetOpenIdTokenForDeveloperIdentity -> Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. Each name-value pair represents a user from a public provider
--   or developer provider. If the user is from a developer provider, the
--   name-value pair will follow the syntax <tt>"developer_provider_name":
--   "developer_user_identifier"</tt>. The developer provider is the
--   "domain" by which Cognito will refer to your users; you provided this
--   domain while creating/updating the identity pool. The developer user
--   identifier is an identifier from your backend that uniquely identifies
--   a user. When you create an identity pool, you can specify the
--   supported logins.
[$sel:logins:GetOpenIdTokenForDeveloperIdentity'] :: GetOpenIdTokenForDeveloperIdentity -> HashMap Text Text

-- | Create a value of <a>GetOpenIdTokenForDeveloperIdentity</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tokenDuration:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentity_tokenDuration</a> - The
--   expiration time of the token, in seconds. You can specify a custom
--   expiration time for the token so that you can cache it. If you don't
--   provide an expiration time, the token is valid for 15 minutes. You can
--   exchange the token with Amazon STS for temporary AWS credentials,
--   which are valid for a maximum of one hour. The maximum token duration
--   you can set is 24 hours. You should take care in setting the
--   expiration time for a token, as there are significant security
--   implications: an attacker could use a leaked token to access your AWS
--   resources for the token's duration.
--   
--   Please provide for a small grace period, usually no more than 5
--   minutes, to account for clock skew.
--   
--   <a>$sel:principalTags:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentity_principalTags</a> - Use this
--   operation to configure attribute mappings for custom providers.
--   
--   <a>$sel:identityId:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentity_identityId</a> - A unique
--   identifier in the format REGION:GUID.
--   
--   <a>$sel:identityPoolId:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentity_identityPoolId</a> - An identity
--   pool ID in the format REGION:GUID.
--   
--   <a>$sel:logins:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentity_logins</a> - A set of optional
--   name-value pairs that map provider names to provider tokens. Each
--   name-value pair represents a user from a public provider or developer
--   provider. If the user is from a developer provider, the name-value
--   pair will follow the syntax <tt>"developer_provider_name":
--   "developer_user_identifier"</tt>. The developer provider is the
--   "domain" by which Cognito will refer to your users; you provided this
--   domain while creating/updating the identity pool. The developer user
--   identifier is an identifier from your backend that uniquely identifies
--   a user. When you create an identity pool, you can specify the
--   supported logins.
newGetOpenIdTokenForDeveloperIdentity :: Text -> GetOpenIdTokenForDeveloperIdentity

-- | The expiration time of the token, in seconds. You can specify a custom
--   expiration time for the token so that you can cache it. If you don't
--   provide an expiration time, the token is valid for 15 minutes. You can
--   exchange the token with Amazon STS for temporary AWS credentials,
--   which are valid for a maximum of one hour. The maximum token duration
--   you can set is 24 hours. You should take care in setting the
--   expiration time for a token, as there are significant security
--   implications: an attacker could use a leaked token to access your AWS
--   resources for the token's duration.
--   
--   Please provide for a small grace period, usually no more than 5
--   minutes, to account for clock skew.
getOpenIdTokenForDeveloperIdentity_tokenDuration :: Lens' GetOpenIdTokenForDeveloperIdentity (Maybe Natural)

-- | Use this operation to configure attribute mappings for custom
--   providers.
getOpenIdTokenForDeveloperIdentity_principalTags :: Lens' GetOpenIdTokenForDeveloperIdentity (Maybe (HashMap Text Text))

-- | A unique identifier in the format REGION:GUID.
getOpenIdTokenForDeveloperIdentity_identityId :: Lens' GetOpenIdTokenForDeveloperIdentity (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
getOpenIdTokenForDeveloperIdentity_identityPoolId :: Lens' GetOpenIdTokenForDeveloperIdentity Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. Each name-value pair represents a user from a public provider
--   or developer provider. If the user is from a developer provider, the
--   name-value pair will follow the syntax <tt>"developer_provider_name":
--   "developer_user_identifier"</tt>. The developer provider is the
--   "domain" by which Cognito will refer to your users; you provided this
--   domain while creating/updating the identity pool. The developer user
--   identifier is an identifier from your backend that uniquely identifies
--   a user. When you create an identity pool, you can specify the
--   supported logins.
getOpenIdTokenForDeveloperIdentity_logins :: Lens' GetOpenIdTokenForDeveloperIdentity (HashMap Text Text)

-- | Returned in response to a successful
--   <tt>GetOpenIdTokenForDeveloperIdentity</tt> request.
--   
--   <i>See:</i> <a>newGetOpenIdTokenForDeveloperIdentityResponse</a> smart
--   constructor.
data GetOpenIdTokenForDeveloperIdentityResponse
GetOpenIdTokenForDeveloperIdentityResponse' :: Maybe Text -> Maybe Text -> Int -> GetOpenIdTokenForDeveloperIdentityResponse

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:GetOpenIdTokenForDeveloperIdentityResponse'] :: GetOpenIdTokenForDeveloperIdentityResponse -> Maybe Text

-- | An OpenID token.
[$sel:token:GetOpenIdTokenForDeveloperIdentityResponse'] :: GetOpenIdTokenForDeveloperIdentityResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetOpenIdTokenForDeveloperIdentityResponse'] :: GetOpenIdTokenForDeveloperIdentityResponse -> Int

-- | Create a value of <a>GetOpenIdTokenForDeveloperIdentityResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentityResponse_identityId</a> - A
--   unique identifier in the format REGION:GUID.
--   
--   <a>$sel:token:GetOpenIdTokenForDeveloperIdentityResponse'</a>,
--   <a>getOpenIdTokenForDeveloperIdentityResponse_token</a> - An OpenID
--   token.
--   
--   <a>$sel:httpStatus:GetOpenIdTokenForDeveloperIdentityResponse'</a>,
--   <a>getOpenIdTokenForDeveloperIdentityResponse_httpStatus</a> - The
--   response's http status code.
newGetOpenIdTokenForDeveloperIdentityResponse :: Int -> GetOpenIdTokenForDeveloperIdentityResponse

-- | A unique identifier in the format REGION:GUID.
getOpenIdTokenForDeveloperIdentityResponse_identityId :: Lens' GetOpenIdTokenForDeveloperIdentityResponse (Maybe Text)

-- | An OpenID token.
getOpenIdTokenForDeveloperIdentityResponse_token :: Lens' GetOpenIdTokenForDeveloperIdentityResponse (Maybe Text)

-- | The response's http status code.
getOpenIdTokenForDeveloperIdentityResponse_httpStatus :: Lens' GetOpenIdTokenForDeveloperIdentityResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentity
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentity
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentity
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentity
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentityResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentityResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentityResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentity
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentity
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentity
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentity
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.GetOpenIdTokenForDeveloperIdentity.GetOpenIdTokenForDeveloperIdentity


-- | Gets an OpenID token, using a known Cognito ID. This known Cognito ID
--   is returned by GetId. You can optionally add additional logins for the
--   identity. Supplying multiple logins creates an implicit link.
--   
--   The OpenID token is valid for 10 minutes.
--   
--   This is a public API. You do not need any credentials to call this
--   API.
module Network.AWS.CognitoIdentity.GetOpenIdToken

-- | Input to the GetOpenIdToken action.
--   
--   <i>See:</i> <a>newGetOpenIdToken</a> smart constructor.
data GetOpenIdToken
GetOpenIdToken' :: Maybe (HashMap Text Text) -> Text -> GetOpenIdToken

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. When using graph.facebook.com and www.amazon.com, supply the
--   access_token returned from the provider's authflow. For
--   accounts.google.com, an Amazon Cognito user pool provider, or any
--   other OpenID Connect provider, always include the <tt>id_token</tt>.
[$sel:logins:GetOpenIdToken'] :: GetOpenIdToken -> Maybe (HashMap Text Text)

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:GetOpenIdToken'] :: GetOpenIdToken -> Text

-- | Create a value of <a>GetOpenIdToken</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logins:GetOpenIdToken'</a>, <a>getOpenIdToken_logins</a> - A
--   set of optional name-value pairs that map provider names to provider
--   tokens. When using graph.facebook.com and www.amazon.com, supply the
--   access_token returned from the provider's authflow. For
--   accounts.google.com, an Amazon Cognito user pool provider, or any
--   other OpenID Connect provider, always include the <tt>id_token</tt>.
--   
--   <a>$sel:identityId:GetOpenIdToken'</a>,
--   <a>getOpenIdToken_identityId</a> - A unique identifier in the format
--   REGION:GUID.
newGetOpenIdToken :: Text -> GetOpenIdToken

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. When using graph.facebook.com and www.amazon.com, supply the
--   access_token returned from the provider's authflow. For
--   accounts.google.com, an Amazon Cognito user pool provider, or any
--   other OpenID Connect provider, always include the <tt>id_token</tt>.
getOpenIdToken_logins :: Lens' GetOpenIdToken (Maybe (HashMap Text Text))

-- | A unique identifier in the format REGION:GUID.
getOpenIdToken_identityId :: Lens' GetOpenIdToken Text

-- | Returned in response to a successful GetOpenIdToken request.
--   
--   <i>See:</i> <a>newGetOpenIdTokenResponse</a> smart constructor.
data GetOpenIdTokenResponse
GetOpenIdTokenResponse' :: Maybe Text -> Maybe Text -> Int -> GetOpenIdTokenResponse

-- | A unique identifier in the format REGION:GUID. Note that the
--   IdentityId returned may not match the one passed on input.
[$sel:identityId:GetOpenIdTokenResponse'] :: GetOpenIdTokenResponse -> Maybe Text

-- | An OpenID token, valid for 10 minutes.
[$sel:token:GetOpenIdTokenResponse'] :: GetOpenIdTokenResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetOpenIdTokenResponse'] :: GetOpenIdTokenResponse -> Int

-- | Create a value of <a>GetOpenIdTokenResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:GetOpenIdToken'</a>,
--   <a>getOpenIdTokenResponse_identityId</a> - A unique identifier in the
--   format REGION:GUID. Note that the IdentityId returned may not match
--   the one passed on input.
--   
--   <a>$sel:token:GetOpenIdTokenResponse'</a>,
--   <a>getOpenIdTokenResponse_token</a> - An OpenID token, valid for 10
--   minutes.
--   
--   <a>$sel:httpStatus:GetOpenIdTokenResponse'</a>,
--   <a>getOpenIdTokenResponse_httpStatus</a> - The response's http status
--   code.
newGetOpenIdTokenResponse :: Int -> GetOpenIdTokenResponse

-- | A unique identifier in the format REGION:GUID. Note that the
--   IdentityId returned may not match the one passed on input.
getOpenIdTokenResponse_identityId :: Lens' GetOpenIdTokenResponse (Maybe Text)

-- | An OpenID token, valid for 10 minutes.
getOpenIdTokenResponse_token :: Lens' GetOpenIdTokenResponse (Maybe Text)

-- | The response's http status code.
getOpenIdTokenResponse_httpStatus :: Lens' GetOpenIdTokenResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdToken
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdToken
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdToken
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdToken
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdTokenResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdTokenResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdTokenResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdTokenResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdToken
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdTokenResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdToken
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdToken
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdToken
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdToken
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdToken
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.GetOpenIdToken.GetOpenIdToken


-- | Gets the roles for an identity pool.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.GetIdentityPoolRoles

-- | Input to the <tt>GetIdentityPoolRoles</tt> action.
--   
--   <i>See:</i> <a>newGetIdentityPoolRoles</a> smart constructor.
data GetIdentityPoolRoles
GetIdentityPoolRoles' :: Text -> GetIdentityPoolRoles

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:GetIdentityPoolRoles'] :: GetIdentityPoolRoles -> Text

-- | Create a value of <a>GetIdentityPoolRoles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:GetIdentityPoolRoles'</a>,
--   <a>getIdentityPoolRoles_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
newGetIdentityPoolRoles :: Text -> GetIdentityPoolRoles

-- | An identity pool ID in the format REGION:GUID.
getIdentityPoolRoles_identityPoolId :: Lens' GetIdentityPoolRoles Text

-- | Returned in response to a successful <tt>GetIdentityPoolRoles</tt>
--   operation.
--   
--   <i>See:</i> <a>newGetIdentityPoolRolesResponse</a> smart constructor.
data GetIdentityPoolRolesResponse
GetIdentityPoolRolesResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text RoleMapping) -> Int -> GetIdentityPoolRolesResponse

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:GetIdentityPoolRolesResponse'] :: GetIdentityPoolRolesResponse -> Maybe Text

-- | The map of roles associated with this pool. Currently only
--   authenticated and unauthenticated roles are supported.
[$sel:roles:GetIdentityPoolRolesResponse'] :: GetIdentityPoolRolesResponse -> Maybe (HashMap Text Text)

-- | How users for a specific identity provider are to mapped to roles.
--   This is a String-to-RoleMapping object map. The string identifies the
--   identity provider, for example, "graph.facebook.com" or
--   "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
[$sel:roleMappings:GetIdentityPoolRolesResponse'] :: GetIdentityPoolRolesResponse -> Maybe (HashMap Text RoleMapping)

-- | The response's http status code.
[$sel:httpStatus:GetIdentityPoolRolesResponse'] :: GetIdentityPoolRolesResponse -> Int

-- | Create a value of <a>GetIdentityPoolRolesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:GetIdentityPoolRoles'</a>,
--   <a>getIdentityPoolRolesResponse_identityPoolId</a> - An identity pool
--   ID in the format REGION:GUID.
--   
--   <a>$sel:roles:GetIdentityPoolRolesResponse'</a>,
--   <a>getIdentityPoolRolesResponse_roles</a> - The map of roles
--   associated with this pool. Currently only authenticated and
--   unauthenticated roles are supported.
--   
--   <a>$sel:roleMappings:GetIdentityPoolRolesResponse'</a>,
--   <a>getIdentityPoolRolesResponse_roleMappings</a> - How users for a
--   specific identity provider are to mapped to roles. This is a
--   String-to-RoleMapping object map. The string identifies the identity
--   provider, for example, "graph.facebook.com" or
--   "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
--   
--   <a>$sel:httpStatus:GetIdentityPoolRolesResponse'</a>,
--   <a>getIdentityPoolRolesResponse_httpStatus</a> - The response's http
--   status code.
newGetIdentityPoolRolesResponse :: Int -> GetIdentityPoolRolesResponse

-- | An identity pool ID in the format REGION:GUID.
getIdentityPoolRolesResponse_identityPoolId :: Lens' GetIdentityPoolRolesResponse (Maybe Text)

-- | The map of roles associated with this pool. Currently only
--   authenticated and unauthenticated roles are supported.
getIdentityPoolRolesResponse_roles :: Lens' GetIdentityPoolRolesResponse (Maybe (HashMap Text Text))

-- | How users for a specific identity provider are to mapped to roles.
--   This is a String-to-RoleMapping object map. The string identifies the
--   identity provider, for example, "graph.facebook.com" or
--   "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
getIdentityPoolRolesResponse_roleMappings :: Lens' GetIdentityPoolRolesResponse (Maybe (HashMap Text RoleMapping))

-- | The response's http status code.
getIdentityPoolRolesResponse_httpStatus :: Lens' GetIdentityPoolRolesResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRoles
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRoles
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRoles
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRoles
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRolesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRolesResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRolesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRolesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRoles
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRolesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRoles
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRoles
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRoles
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRoles
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRoles
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.GetIdentityPoolRoles.GetIdentityPoolRoles


-- | Generates (or retrieves) a Cognito ID. Supplying multiple logins will
--   create an implicit linked account.
--   
--   This is a public API. You do not need any credentials to call this
--   API.
module Network.AWS.CognitoIdentity.GetId

-- | Input to the GetId action.
--   
--   <i>See:</i> <a>newGetId</a> smart constructor.
data GetId
GetId' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> GetId

-- | A standard AWS account ID (9+ digits).
[$sel:accountId:GetId'] :: GetId -> Maybe Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. The available provider names for <tt>Logins</tt> are as
--   follows:
--   
--   <ul>
--   <li>Facebook: <tt>graph.facebook.com</tt></li>
--   <li>Amazon Cognito user pool:
--   <tt>cognito-idp.&lt;region&gt;.amazonaws.com/&lt;YOUR_USER_POOL_ID&gt;</tt>,
--   for example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.</li>
--   <li>Google: <tt>accounts.google.com</tt></li>
--   <li>Amazon: <tt>www.amazon.com</tt></li>
--   <li>Twitter: <tt>api.twitter.com</tt></li>
--   <li>Digits: <tt>www.digits.com</tt></li>
--   </ul>
[$sel:logins:GetId'] :: GetId -> Maybe (HashMap Text Text)

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:GetId'] :: GetId -> Text

-- | Create a value of <a>GetId</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:GetId'</a>, <a>getId_accountId</a> - A standard AWS
--   account ID (9+ digits).
--   
--   <a>$sel:logins:GetId'</a>, <a>getId_logins</a> - A set of optional
--   name-value pairs that map provider names to provider tokens. The
--   available provider names for <tt>Logins</tt> are as follows:
--   
--   <ul>
--   <li>Facebook: <tt>graph.facebook.com</tt></li>
--   <li>Amazon Cognito user pool:
--   <tt>cognito-idp.&lt;region&gt;.amazonaws.com/&lt;YOUR_USER_POOL_ID&gt;</tt>,
--   for example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.</li>
--   <li>Google: <tt>accounts.google.com</tt></li>
--   <li>Amazon: <tt>www.amazon.com</tt></li>
--   <li>Twitter: <tt>api.twitter.com</tt></li>
--   <li>Digits: <tt>www.digits.com</tt></li>
--   </ul>
--   
--   <a>$sel:identityPoolId:GetId'</a>, <a>getId_identityPoolId</a> - An
--   identity pool ID in the format REGION:GUID.
newGetId :: Text -> GetId

-- | A standard AWS account ID (9+ digits).
getId_accountId :: Lens' GetId (Maybe Text)

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. The available provider names for <tt>Logins</tt> are as
--   follows:
--   
--   <ul>
--   <li>Facebook: <tt>graph.facebook.com</tt></li>
--   <li>Amazon Cognito user pool:
--   <tt>cognito-idp.&lt;region&gt;.amazonaws.com/&lt;YOUR_USER_POOL_ID&gt;</tt>,
--   for example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.</li>
--   <li>Google: <tt>accounts.google.com</tt></li>
--   <li>Amazon: <tt>www.amazon.com</tt></li>
--   <li>Twitter: <tt>api.twitter.com</tt></li>
--   <li>Digits: <tt>www.digits.com</tt></li>
--   </ul>
getId_logins :: Lens' GetId (Maybe (HashMap Text Text))

-- | An identity pool ID in the format REGION:GUID.
getId_identityPoolId :: Lens' GetId Text

-- | Returned in response to a GetId request.
--   
--   <i>See:</i> <a>newGetIdResponse</a> smart constructor.
data GetIdResponse
GetIdResponse' :: Maybe Text -> Int -> GetIdResponse

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:GetIdResponse'] :: GetIdResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetIdResponse'] :: GetIdResponse -> Int

-- | Create a value of <a>GetIdResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:GetIdResponse'</a>, <a>getIdResponse_identityId</a>
--   - A unique identifier in the format REGION:GUID.
--   
--   <a>$sel:httpStatus:GetIdResponse'</a>, <a>getIdResponse_httpStatus</a>
--   - The response's http status code.
newGetIdResponse :: Int -> GetIdResponse

-- | A unique identifier in the format REGION:GUID.
getIdResponse_identityId :: Lens' GetIdResponse (Maybe Text)

-- | The response's http status code.
getIdResponse_httpStatus :: Lens' GetIdResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetId.GetId
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetId.GetId
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetId.GetId
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetId.GetId
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetId.GetIdResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetId.GetIdResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetId.GetIdResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetId.GetIdResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.GetId.GetId
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetId.GetIdResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.GetId.GetId
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetId.GetId
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.GetId.GetId
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.GetId.GetId
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.GetId.GetId
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.GetId.GetId


-- | Returns credentials for the provided identity ID. Any provided logins
--   will be validated against supported login providers. If the token is
--   for cognito-identity.amazonaws.com, it will be passed through to AWS
--   Security Token Service with the appropriate role for the token.
--   
--   This is a public API. You do not need any credentials to call this
--   API.
module Network.AWS.CognitoIdentity.GetCredentialsForIdentity

-- | Input to the <tt>GetCredentialsForIdentity</tt> action.
--   
--   <i>See:</i> <a>newGetCredentialsForIdentity</a> smart constructor.
data GetCredentialsForIdentity
GetCredentialsForIdentity' :: Maybe (HashMap Text Text) -> Maybe Text -> Text -> GetCredentialsForIdentity

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. The name-value pair will follow the syntax "provider_name":
--   "provider_user_identifier".
--   
--   Logins should not be specified when trying to get credentials for an
--   unauthenticated identity.
--   
--   The Logins parameter is required when using identities associated with
--   external identity providers such as Facebook. For examples of
--   <tt>Logins</tt> maps, see the code examples in the <a>External
--   Identity Providers</a> section of the Amazon Cognito Developer Guide.
[$sel:logins:GetCredentialsForIdentity'] :: GetCredentialsForIdentity -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the role to be assumed when multiple
--   roles were received in the token from the identity provider. For
--   example, a SAML-based identity provider. This parameter is optional
--   for identity providers that do not support role customization.
[$sel:customRoleArn:GetCredentialsForIdentity'] :: GetCredentialsForIdentity -> Maybe Text

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:GetCredentialsForIdentity'] :: GetCredentialsForIdentity -> Text

-- | Create a value of <a>GetCredentialsForIdentity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logins:GetCredentialsForIdentity'</a>,
--   <a>getCredentialsForIdentity_logins</a> - A set of optional name-value
--   pairs that map provider names to provider tokens. The name-value pair
--   will follow the syntax "provider_name": "provider_user_identifier".
--   
--   Logins should not be specified when trying to get credentials for an
--   unauthenticated identity.
--   
--   The Logins parameter is required when using identities associated with
--   external identity providers such as Facebook. For examples of
--   <tt>Logins</tt> maps, see the code examples in the <a>External
--   Identity Providers</a> section of the Amazon Cognito Developer Guide.
--   
--   <a>$sel:customRoleArn:GetCredentialsForIdentity'</a>,
--   <a>getCredentialsForIdentity_customRoleArn</a> - The Amazon Resource
--   Name (ARN) of the role to be assumed when multiple roles were received
--   in the token from the identity provider. For example, a SAML-based
--   identity provider. This parameter is optional for identity providers
--   that do not support role customization.
--   
--   <a>$sel:identityId:GetCredentialsForIdentity'</a>,
--   <a>getCredentialsForIdentity_identityId</a> - A unique identifier in
--   the format REGION:GUID.
newGetCredentialsForIdentity :: Text -> GetCredentialsForIdentity

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. The name-value pair will follow the syntax "provider_name":
--   "provider_user_identifier".
--   
--   Logins should not be specified when trying to get credentials for an
--   unauthenticated identity.
--   
--   The Logins parameter is required when using identities associated with
--   external identity providers such as Facebook. For examples of
--   <tt>Logins</tt> maps, see the code examples in the <a>External
--   Identity Providers</a> section of the Amazon Cognito Developer Guide.
getCredentialsForIdentity_logins :: Lens' GetCredentialsForIdentity (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the role to be assumed when multiple
--   roles were received in the token from the identity provider. For
--   example, a SAML-based identity provider. This parameter is optional
--   for identity providers that do not support role customization.
getCredentialsForIdentity_customRoleArn :: Lens' GetCredentialsForIdentity (Maybe Text)

-- | A unique identifier in the format REGION:GUID.
getCredentialsForIdentity_identityId :: Lens' GetCredentialsForIdentity Text

-- | Returned in response to a successful
--   <tt>GetCredentialsForIdentity</tt> operation.
--   
--   <i>See:</i> <a>newGetCredentialsForIdentityResponse</a> smart
--   constructor.
data GetCredentialsForIdentityResponse
GetCredentialsForIdentityResponse' :: Maybe Text -> Maybe Credentials -> Int -> GetCredentialsForIdentityResponse

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:GetCredentialsForIdentityResponse'] :: GetCredentialsForIdentityResponse -> Maybe Text

-- | Credentials for the provided identity ID.
[$sel:credentials:GetCredentialsForIdentityResponse'] :: GetCredentialsForIdentityResponse -> Maybe Credentials

-- | The response's http status code.
[$sel:httpStatus:GetCredentialsForIdentityResponse'] :: GetCredentialsForIdentityResponse -> Int

-- | Create a value of <a>GetCredentialsForIdentityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:GetCredentialsForIdentity'</a>,
--   <a>getCredentialsForIdentityResponse_identityId</a> - A unique
--   identifier in the format REGION:GUID.
--   
--   <a>$sel:credentials:GetCredentialsForIdentityResponse'</a>,
--   <a>getCredentialsForIdentityResponse_credentials</a> - Credentials for
--   the provided identity ID.
--   
--   <a>$sel:httpStatus:GetCredentialsForIdentityResponse'</a>,
--   <a>getCredentialsForIdentityResponse_httpStatus</a> - The response's
--   http status code.
newGetCredentialsForIdentityResponse :: Int -> GetCredentialsForIdentityResponse

-- | A unique identifier in the format REGION:GUID.
getCredentialsForIdentityResponse_identityId :: Lens' GetCredentialsForIdentityResponse (Maybe Text)

-- | Credentials for the provided identity ID.
getCredentialsForIdentityResponse_credentials :: Lens' GetCredentialsForIdentityResponse (Maybe Credentials)

-- | The response's http status code.
getCredentialsForIdentityResponse_httpStatus :: Lens' GetCredentialsForIdentityResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentity
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentity
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentity
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentity
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentityResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentityResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentityResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentity
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentity
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentity
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentity
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.GetCredentialsForIdentity.GetCredentialsForIdentity


-- | Gets details about a particular identity pool, including the pool
--   name, ID description, creation date, and current number of users.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.DescribeIdentityPool

-- | Input to the DescribeIdentityPool action.
--   
--   <i>See:</i> <a>newDescribeIdentityPool</a> smart constructor.
data DescribeIdentityPool
DescribeIdentityPool' :: Text -> DescribeIdentityPool

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:DescribeIdentityPool'] :: DescribeIdentityPool -> Text

-- | Create a value of <a>DescribeIdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:DescribeIdentityPool'</a>,
--   <a>describeIdentityPool_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
newDescribeIdentityPool :: Text -> DescribeIdentityPool

-- | An identity pool ID in the format REGION:GUID.
describeIdentityPool_identityPoolId :: Lens' DescribeIdentityPool Text

-- | An object representing an Amazon Cognito identity pool.
--   
--   <i>See:</i> <a>newIdentityPool</a> smart constructor.
data IdentityPool
IdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Text -> Bool -> IdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
[$sel:allowClassicFlow:IdentityPool'] :: IdentityPool -> Maybe Bool

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
[$sel:samlProviderARNs:IdentityPool'] :: IdentityPool -> Maybe [Text]

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
[$sel:identityPoolTags:IdentityPool'] :: IdentityPool -> Maybe (HashMap Text Text)

-- | The ARNs of the OpenID Connect providers.
[$sel:openIdConnectProviderARNs:IdentityPool'] :: IdentityPool -> Maybe [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
[$sel:supportedLoginProviders:IdentityPool'] :: IdentityPool -> Maybe (HashMap Text Text)

-- | A list representing an Amazon Cognito user pool and its client ID.
[$sel:cognitoIdentityProviders:IdentityPool'] :: IdentityPool -> Maybe [CognitoIdentityProvider]

-- | The "domain" by which Cognito will refer to your users.
[$sel:developerProviderName:IdentityPool'] :: IdentityPool -> Maybe Text

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:IdentityPool'] :: IdentityPool -> Text

-- | A string that you provide.
[$sel:identityPoolName:IdentityPool'] :: IdentityPool -> Text

-- | TRUE if the identity pool supports unauthenticated logins.
[$sel:allowUnauthenticatedIdentities:IdentityPool'] :: IdentityPool -> Bool

-- | Create a value of <a>IdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:IdentityPool'</a>,
--   <a>identityPool_allowClassicFlow</a> - Enables or disables the Basic
--   (Classic) authentication flow. For more information, see <a>Identity
--   Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon
--   Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:IdentityPool'</a>,
--   <a>identityPool_samlProviderARNs</a> - An array of Amazon Resource
--   Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:IdentityPool'</a>,
--   <a>identityPool_identityPoolTags</a> - The tags that are assigned to
--   the identity pool. A tag is a label that you can apply to identity
--   pools to categorize and manage them in different ways, such as by
--   purpose, owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:IdentityPool'</a>,
--   <a>identityPool_openIdConnectProviderARNs</a> - The ARNs of the OpenID
--   Connect providers.
--   
--   <a>$sel:supportedLoginProviders:IdentityPool'</a>,
--   <a>identityPool_supportedLoginProviders</a> - Optional key:value pairs
--   mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:IdentityPool'</a>,
--   <a>identityPool_cognitoIdentityProviders</a> - A list representing an
--   Amazon Cognito user pool and its client ID.
--   
--   <a>$sel:developerProviderName:IdentityPool'</a>,
--   <a>identityPool_developerProviderName</a> - The "domain" by which
--   Cognito will refer to your users.
--   
--   <a>$sel:identityPoolId:IdentityPool'</a>,
--   <a>identityPool_identityPoolId</a> - An identity pool ID in the format
--   REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPool'</a>,
--   <a>identityPool_identityPoolName</a> - A string that you provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:IdentityPool'</a>,
--   <a>identityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newIdentityPool :: Text -> Text -> Bool -> IdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
identityPool_allowClassicFlow :: Lens' IdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
identityPool_samlProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
identityPool_identityPoolTags :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | The ARNs of the OpenID Connect providers.
identityPool_openIdConnectProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
identityPool_supportedLoginProviders :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | A list representing an Amazon Cognito user pool and its client ID.
identityPool_cognitoIdentityProviders :: Lens' IdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users.
identityPool_developerProviderName :: Lens' IdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
identityPool_identityPoolId :: Lens' IdentityPool Text

-- | A string that you provide.
identityPool_identityPoolName :: Lens' IdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
identityPool_allowUnauthenticatedIdentities :: Lens' IdentityPool Bool
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.DescribeIdentityPool.DescribeIdentityPool
instance GHC.Show.Show Network.AWS.CognitoIdentity.DescribeIdentityPool.DescribeIdentityPool
instance GHC.Read.Read Network.AWS.CognitoIdentity.DescribeIdentityPool.DescribeIdentityPool
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.DescribeIdentityPool.DescribeIdentityPool
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.DescribeIdentityPool.DescribeIdentityPool
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.DescribeIdentityPool.DescribeIdentityPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.DescribeIdentityPool.DescribeIdentityPool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.DescribeIdentityPool.DescribeIdentityPool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.DescribeIdentityPool.DescribeIdentityPool
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.DescribeIdentityPool.DescribeIdentityPool
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.DescribeIdentityPool.DescribeIdentityPool


-- | Returns metadata related to the given identity, including when the
--   identity was created and any associated linked logins.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.DescribeIdentity

-- | Input to the <tt>DescribeIdentity</tt> action.
--   
--   <i>See:</i> <a>newDescribeIdentity</a> smart constructor.
data DescribeIdentity
DescribeIdentity' :: Text -> DescribeIdentity

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:DescribeIdentity'] :: DescribeIdentity -> Text

-- | Create a value of <a>DescribeIdentity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:DescribeIdentity'</a>,
--   <a>describeIdentity_identityId</a> - A unique identifier in the format
--   REGION:GUID.
newDescribeIdentity :: Text -> DescribeIdentity

-- | A unique identifier in the format REGION:GUID.
describeIdentity_identityId :: Lens' DescribeIdentity Text

-- | A description of the identity.
--   
--   <i>See:</i> <a>newIdentityDescription</a> smart constructor.
data IdentityDescription
IdentityDescription' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe [Text] -> IdentityDescription

-- | Date on which the identity was last modified.
[$sel:lastModifiedDate:IdentityDescription'] :: IdentityDescription -> Maybe POSIX

-- | Date on which the identity was created.
[$sel:creationDate:IdentityDescription'] :: IdentityDescription -> Maybe POSIX

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:IdentityDescription'] :: IdentityDescription -> Maybe Text

-- | The provider names.
[$sel:logins:IdentityDescription'] :: IdentityDescription -> Maybe [Text]

-- | Create a value of <a>IdentityDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:IdentityDescription'</a>,
--   <a>identityDescription_lastModifiedDate</a> - Date on which the
--   identity was last modified.
--   
--   <a>$sel:creationDate:IdentityDescription'</a>,
--   <a>identityDescription_creationDate</a> - Date on which the identity
--   was created.
--   
--   <a>$sel:identityId:IdentityDescription'</a>,
--   <a>identityDescription_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:logins:IdentityDescription'</a>,
--   <a>identityDescription_logins</a> - The provider names.
newIdentityDescription :: IdentityDescription

-- | Date on which the identity was last modified.
identityDescription_lastModifiedDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | Date on which the identity was created.
identityDescription_creationDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | A unique identifier in the format REGION:GUID.
identityDescription_identityId :: Lens' IdentityDescription (Maybe Text)

-- | The provider names.
identityDescription_logins :: Lens' IdentityDescription (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.DescribeIdentity.DescribeIdentity
instance GHC.Show.Show Network.AWS.CognitoIdentity.DescribeIdentity.DescribeIdentity
instance GHC.Read.Read Network.AWS.CognitoIdentity.DescribeIdentity.DescribeIdentity
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.DescribeIdentity.DescribeIdentity
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.DescribeIdentity.DescribeIdentity
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.DescribeIdentity.DescribeIdentity
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.DescribeIdentity.DescribeIdentity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.DescribeIdentity.DescribeIdentity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.DescribeIdentity.DescribeIdentity
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.DescribeIdentity.DescribeIdentity
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.DescribeIdentity.DescribeIdentity


-- | Deletes an identity pool. Once a pool is deleted, users will not be
--   able to authenticate with the pool.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.DeleteIdentityPool

-- | Input to the DeleteIdentityPool action.
--   
--   <i>See:</i> <a>newDeleteIdentityPool</a> smart constructor.
data DeleteIdentityPool
DeleteIdentityPool' :: Text -> DeleteIdentityPool

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:DeleteIdentityPool'] :: DeleteIdentityPool -> Text

-- | Create a value of <a>DeleteIdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:DeleteIdentityPool'</a>,
--   <a>deleteIdentityPool_identityPoolId</a> - An identity pool ID in the
--   format REGION:GUID.
newDeleteIdentityPool :: Text -> DeleteIdentityPool

-- | An identity pool ID in the format REGION:GUID.
deleteIdentityPool_identityPoolId :: Lens' DeleteIdentityPool Text

-- | <i>See:</i> <a>newDeleteIdentityPoolResponse</a> smart constructor.
data DeleteIdentityPoolResponse
DeleteIdentityPoolResponse' :: DeleteIdentityPoolResponse

-- | Create a value of <a>DeleteIdentityPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIdentityPoolResponse :: DeleteIdentityPoolResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPool
instance GHC.Show.Show Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPool
instance GHC.Read.Read Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPool
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPool
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPoolResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPoolResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPoolResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPoolResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPoolResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPool
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPool
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.DeleteIdentityPool.DeleteIdentityPool


-- | Deletes identities from an identity pool. You can specify a list of
--   1-60 identities that you want to delete.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.DeleteIdentities

-- | Input to the <tt>DeleteIdentities</tt> action.
--   
--   <i>See:</i> <a>newDeleteIdentities</a> smart constructor.
data DeleteIdentities
DeleteIdentities' :: NonEmpty Text -> DeleteIdentities

-- | A list of 1-60 identities that you want to delete.
[$sel:identityIdsToDelete:DeleteIdentities'] :: DeleteIdentities -> NonEmpty Text

-- | Create a value of <a>DeleteIdentities</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityIdsToDelete:DeleteIdentities'</a>,
--   <a>deleteIdentities_identityIdsToDelete</a> - A list of 1-60
--   identities that you want to delete.
newDeleteIdentities :: NonEmpty Text -> DeleteIdentities

-- | A list of 1-60 identities that you want to delete.
deleteIdentities_identityIdsToDelete :: Lens' DeleteIdentities (NonEmpty Text)

-- | Returned in response to a successful <tt>DeleteIdentities</tt>
--   operation.
--   
--   <i>See:</i> <a>newDeleteIdentitiesResponse</a> smart constructor.
data DeleteIdentitiesResponse
DeleteIdentitiesResponse' :: Maybe [UnprocessedIdentityId] -> Int -> DeleteIdentitiesResponse

-- | An array of UnprocessedIdentityId objects, each of which contains an
--   ErrorCode and IdentityId.
[$sel:unprocessedIdentityIds:DeleteIdentitiesResponse'] :: DeleteIdentitiesResponse -> Maybe [UnprocessedIdentityId]

-- | The response's http status code.
[$sel:httpStatus:DeleteIdentitiesResponse'] :: DeleteIdentitiesResponse -> Int

-- | Create a value of <a>DeleteIdentitiesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedIdentityIds:DeleteIdentitiesResponse'</a>,
--   <a>deleteIdentitiesResponse_unprocessedIdentityIds</a> - An array of
--   UnprocessedIdentityId objects, each of which contains an ErrorCode and
--   IdentityId.
--   
--   <a>$sel:httpStatus:DeleteIdentitiesResponse'</a>,
--   <a>deleteIdentitiesResponse_httpStatus</a> - The response's http
--   status code.
newDeleteIdentitiesResponse :: Int -> DeleteIdentitiesResponse

-- | An array of UnprocessedIdentityId objects, each of which contains an
--   ErrorCode and IdentityId.
deleteIdentitiesResponse_unprocessedIdentityIds :: Lens' DeleteIdentitiesResponse (Maybe [UnprocessedIdentityId])

-- | The response's http status code.
deleteIdentitiesResponse_httpStatus :: Lens' DeleteIdentitiesResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentities
instance GHC.Show.Show Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentities
instance GHC.Read.Read Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentities
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentities
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentitiesResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentitiesResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentitiesResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentitiesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentities
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentitiesResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentities
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentities
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentities
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentities
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentities
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.DeleteIdentities.DeleteIdentities


-- | Creates a new identity pool. The identity pool is a store of user
--   identity information that is specific to your AWS account. The keys
--   for <tt>SupportedLoginProviders</tt> are as follows:
--   
--   <ul>
--   <li>Facebook: <tt>graph.facebook.com</tt></li>
--   <li>Google: <tt>accounts.google.com</tt></li>
--   <li>Amazon: <tt>www.amazon.com</tt></li>
--   <li>Twitter: <tt>api.twitter.com</tt></li>
--   <li>Digits: <tt>www.digits.com</tt></li>
--   </ul>
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.CreateIdentityPool

-- | Input to the CreateIdentityPool action.
--   
--   <i>See:</i> <a>newCreateIdentityPool</a> smart constructor.
data CreateIdentityPool
CreateIdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Bool -> CreateIdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
[$sel:allowClassicFlow:CreateIdentityPool'] :: CreateIdentityPool -> Maybe Bool

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
[$sel:samlProviderARNs:CreateIdentityPool'] :: CreateIdentityPool -> Maybe [Text]

-- | Tags to assign to the identity pool. A tag is a label that you can
--   apply to identity pools to categorize and manage them in different
--   ways, such as by purpose, owner, environment, or other criteria.
[$sel:identityPoolTags:CreateIdentityPool'] :: CreateIdentityPool -> Maybe (HashMap Text Text)

-- | The Amazon Resource Names (ARN) of the OpenID Connect providers.
[$sel:openIdConnectProviderARNs:CreateIdentityPool'] :: CreateIdentityPool -> Maybe [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
[$sel:supportedLoginProviders:CreateIdentityPool'] :: CreateIdentityPool -> Maybe (HashMap Text Text)

-- | An array of Amazon Cognito user pools and their client IDs.
[$sel:cognitoIdentityProviders:CreateIdentityPool'] :: CreateIdentityPool -> Maybe [CognitoIdentityProvider]

-- | The "domain" by which Cognito will refer to your users. This name acts
--   as a placeholder that allows your backend and the Cognito service to
--   communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (<tt>.</tt>), underscore (<tt>_</tt>), and dash (<tt>-</tt>).
--   
--   Once you have set a developer provider name, you cannot change it.
--   Please take care in setting this parameter.
[$sel:developerProviderName:CreateIdentityPool'] :: CreateIdentityPool -> Maybe Text

-- | A string that you provide.
[$sel:identityPoolName:CreateIdentityPool'] :: CreateIdentityPool -> Text

-- | TRUE if the identity pool supports unauthenticated logins.
[$sel:allowUnauthenticatedIdentities:CreateIdentityPool'] :: CreateIdentityPool -> Bool

-- | Create a value of <a>CreateIdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:CreateIdentityPool'</a>,
--   <a>createIdentityPool_allowClassicFlow</a> - Enables or disables the
--   Basic (Classic) authentication flow. For more information, see
--   <a>Identity Pools (Federated Identities) Authentication Flow</a> in
--   the <i>Amazon Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:CreateIdentityPool'</a>,
--   <a>createIdentityPool_samlProviderARNs</a> - An array of Amazon
--   Resource Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:CreateIdentityPool'</a>,
--   <a>createIdentityPool_identityPoolTags</a> - Tags to assign to the
--   identity pool. A tag is a label that you can apply to identity pools
--   to categorize and manage them in different ways, such as by purpose,
--   owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:CreateIdentityPool'</a>,
--   <a>createIdentityPool_openIdConnectProviderARNs</a> - The Amazon
--   Resource Names (ARN) of the OpenID Connect providers.
--   
--   <a>$sel:supportedLoginProviders:CreateIdentityPool'</a>,
--   <a>createIdentityPool_supportedLoginProviders</a> - Optional key:value
--   pairs mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:CreateIdentityPool'</a>,
--   <a>createIdentityPool_cognitoIdentityProviders</a> - An array of
--   Amazon Cognito user pools and their client IDs.
--   
--   <a>$sel:developerProviderName:CreateIdentityPool'</a>,
--   <a>createIdentityPool_developerProviderName</a> - The "domain" by
--   which Cognito will refer to your users. This name acts as a
--   placeholder that allows your backend and the Cognito service to
--   communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (<tt>.</tt>), underscore (<tt>_</tt>), and dash (<tt>-</tt>).
--   
--   Once you have set a developer provider name, you cannot change it.
--   Please take care in setting this parameter.
--   
--   <a>$sel:identityPoolName:CreateIdentityPool'</a>,
--   <a>createIdentityPool_identityPoolName</a> - A string that you
--   provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:CreateIdentityPool'</a>,
--   <a>createIdentityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newCreateIdentityPool :: Text -> Bool -> CreateIdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
createIdentityPool_allowClassicFlow :: Lens' CreateIdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
createIdentityPool_samlProviderARNs :: Lens' CreateIdentityPool (Maybe [Text])

-- | Tags to assign to the identity pool. A tag is a label that you can
--   apply to identity pools to categorize and manage them in different
--   ways, such as by purpose, owner, environment, or other criteria.
createIdentityPool_identityPoolTags :: Lens' CreateIdentityPool (Maybe (HashMap Text Text))

-- | The Amazon Resource Names (ARN) of the OpenID Connect providers.
createIdentityPool_openIdConnectProviderARNs :: Lens' CreateIdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
createIdentityPool_supportedLoginProviders :: Lens' CreateIdentityPool (Maybe (HashMap Text Text))

-- | An array of Amazon Cognito user pools and their client IDs.
createIdentityPool_cognitoIdentityProviders :: Lens' CreateIdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users. This name acts
--   as a placeholder that allows your backend and the Cognito service to
--   communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (<tt>.</tt>), underscore (<tt>_</tt>), and dash (<tt>-</tt>).
--   
--   Once you have set a developer provider name, you cannot change it.
--   Please take care in setting this parameter.
createIdentityPool_developerProviderName :: Lens' CreateIdentityPool (Maybe Text)

-- | A string that you provide.
createIdentityPool_identityPoolName :: Lens' CreateIdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
createIdentityPool_allowUnauthenticatedIdentities :: Lens' CreateIdentityPool Bool

-- | An object representing an Amazon Cognito identity pool.
--   
--   <i>See:</i> <a>newIdentityPool</a> smart constructor.
data IdentityPool
IdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Text -> Bool -> IdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
[$sel:allowClassicFlow:IdentityPool'] :: IdentityPool -> Maybe Bool

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
[$sel:samlProviderARNs:IdentityPool'] :: IdentityPool -> Maybe [Text]

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
[$sel:identityPoolTags:IdentityPool'] :: IdentityPool -> Maybe (HashMap Text Text)

-- | The ARNs of the OpenID Connect providers.
[$sel:openIdConnectProviderARNs:IdentityPool'] :: IdentityPool -> Maybe [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
[$sel:supportedLoginProviders:IdentityPool'] :: IdentityPool -> Maybe (HashMap Text Text)

-- | A list representing an Amazon Cognito user pool and its client ID.
[$sel:cognitoIdentityProviders:IdentityPool'] :: IdentityPool -> Maybe [CognitoIdentityProvider]

-- | The "domain" by which Cognito will refer to your users.
[$sel:developerProviderName:IdentityPool'] :: IdentityPool -> Maybe Text

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:IdentityPool'] :: IdentityPool -> Text

-- | A string that you provide.
[$sel:identityPoolName:IdentityPool'] :: IdentityPool -> Text

-- | TRUE if the identity pool supports unauthenticated logins.
[$sel:allowUnauthenticatedIdentities:IdentityPool'] :: IdentityPool -> Bool

-- | Create a value of <a>IdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:IdentityPool'</a>,
--   <a>identityPool_allowClassicFlow</a> - Enables or disables the Basic
--   (Classic) authentication flow. For more information, see <a>Identity
--   Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon
--   Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:IdentityPool'</a>,
--   <a>identityPool_samlProviderARNs</a> - An array of Amazon Resource
--   Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:IdentityPool'</a>,
--   <a>identityPool_identityPoolTags</a> - The tags that are assigned to
--   the identity pool. A tag is a label that you can apply to identity
--   pools to categorize and manage them in different ways, such as by
--   purpose, owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:IdentityPool'</a>,
--   <a>identityPool_openIdConnectProviderARNs</a> - The ARNs of the OpenID
--   Connect providers.
--   
--   <a>$sel:supportedLoginProviders:IdentityPool'</a>,
--   <a>identityPool_supportedLoginProviders</a> - Optional key:value pairs
--   mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:IdentityPool'</a>,
--   <a>identityPool_cognitoIdentityProviders</a> - A list representing an
--   Amazon Cognito user pool and its client ID.
--   
--   <a>$sel:developerProviderName:IdentityPool'</a>,
--   <a>identityPool_developerProviderName</a> - The "domain" by which
--   Cognito will refer to your users.
--   
--   <a>$sel:identityPoolId:IdentityPool'</a>,
--   <a>identityPool_identityPoolId</a> - An identity pool ID in the format
--   REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPool'</a>,
--   <a>identityPool_identityPoolName</a> - A string that you provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:IdentityPool'</a>,
--   <a>identityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newIdentityPool :: Text -> Text -> Bool -> IdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
identityPool_allowClassicFlow :: Lens' IdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
identityPool_samlProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
identityPool_identityPoolTags :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | The ARNs of the OpenID Connect providers.
identityPool_openIdConnectProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
identityPool_supportedLoginProviders :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | A list representing an Amazon Cognito user pool and its client ID.
identityPool_cognitoIdentityProviders :: Lens' IdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users.
identityPool_developerProviderName :: Lens' IdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
identityPool_identityPoolId :: Lens' IdentityPool Text

-- | A string that you provide.
identityPool_identityPoolName :: Lens' IdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
identityPool_allowUnauthenticatedIdentities :: Lens' IdentityPool Bool
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.CreateIdentityPool.CreateIdentityPool
instance GHC.Show.Show Network.AWS.CognitoIdentity.CreateIdentityPool.CreateIdentityPool
instance GHC.Read.Read Network.AWS.CognitoIdentity.CreateIdentityPool.CreateIdentityPool
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.CreateIdentityPool.CreateIdentityPool
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.CreateIdentityPool.CreateIdentityPool
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.CreateIdentityPool.CreateIdentityPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.CreateIdentityPool.CreateIdentityPool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.CreateIdentityPool.CreateIdentityPool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.CreateIdentityPool.CreateIdentityPool
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.CreateIdentityPool.CreateIdentityPool
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.CreateIdentityPool.CreateIdentityPool


-- | Unlinks a <tt>DeveloperUserIdentifier</tt> from an existing identity.
--   Unlinked developer users will be considered new identities next time
--   they are seen. If, for a given Cognito identity, you remove all
--   federated identities as well as the developer user identifier, the
--   Cognito identity becomes inaccessible.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity

-- | Input to the <tt>UnlinkDeveloperIdentity</tt> action.
--   
--   <i>See:</i> <a>newUnlinkDeveloperIdentity</a> smart constructor.
data UnlinkDeveloperIdentity
UnlinkDeveloperIdentity' :: Text -> Text -> Text -> Text -> UnlinkDeveloperIdentity

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:UnlinkDeveloperIdentity'] :: UnlinkDeveloperIdentity -> Text

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:UnlinkDeveloperIdentity'] :: UnlinkDeveloperIdentity -> Text

-- | The "domain" by which Cognito will refer to your users.
[$sel:developerProviderName:UnlinkDeveloperIdentity'] :: UnlinkDeveloperIdentity -> Text

-- | A unique ID used by your backend authentication process to identify a
--   user.
[$sel:developerUserIdentifier:UnlinkDeveloperIdentity'] :: UnlinkDeveloperIdentity -> Text

-- | Create a value of <a>UnlinkDeveloperIdentity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:UnlinkDeveloperIdentity'</a>,
--   <a>unlinkDeveloperIdentity_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:identityPoolId:UnlinkDeveloperIdentity'</a>,
--   <a>unlinkDeveloperIdentity_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
--   
--   <a>$sel:developerProviderName:UnlinkDeveloperIdentity'</a>,
--   <a>unlinkDeveloperIdentity_developerProviderName</a> - The "domain" by
--   which Cognito will refer to your users.
--   
--   <a>$sel:developerUserIdentifier:UnlinkDeveloperIdentity'</a>,
--   <a>unlinkDeveloperIdentity_developerUserIdentifier</a> - A unique ID
--   used by your backend authentication process to identify a user.
newUnlinkDeveloperIdentity :: Text -> Text -> Text -> Text -> UnlinkDeveloperIdentity

-- | A unique identifier in the format REGION:GUID.
unlinkDeveloperIdentity_identityId :: Lens' UnlinkDeveloperIdentity Text

-- | An identity pool ID in the format REGION:GUID.
unlinkDeveloperIdentity_identityPoolId :: Lens' UnlinkDeveloperIdentity Text

-- | The "domain" by which Cognito will refer to your users.
unlinkDeveloperIdentity_developerProviderName :: Lens' UnlinkDeveloperIdentity Text

-- | A unique ID used by your backend authentication process to identify a
--   user.
unlinkDeveloperIdentity_developerUserIdentifier :: Lens' UnlinkDeveloperIdentity Text

-- | <i>See:</i> <a>newUnlinkDeveloperIdentityResponse</a> smart
--   constructor.
data UnlinkDeveloperIdentityResponse
UnlinkDeveloperIdentityResponse' :: UnlinkDeveloperIdentityResponse

-- | Create a value of <a>UnlinkDeveloperIdentityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUnlinkDeveloperIdentityResponse :: UnlinkDeveloperIdentityResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentity
instance GHC.Show.Show Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentity
instance GHC.Read.Read Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentity
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentity
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentityResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentityResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentityResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentity
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentity
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentity
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentity
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.UnlinkDeveloperIdentity.UnlinkDeveloperIdentity


-- | Unlinks a federated identity from an existing account. Unlinked logins
--   will be considered new identities next time they are seen. Removing
--   the last linked login will make this identity inaccessible.
--   
--   This is a public API. You do not need any credentials to call this
--   API.
module Network.AWS.CognitoIdentity.UnlinkIdentity

-- | Input to the UnlinkIdentity action.
--   
--   <i>See:</i> <a>newUnlinkIdentity</a> smart constructor.
data UnlinkIdentity
UnlinkIdentity' :: Text -> HashMap Text Text -> [Text] -> UnlinkIdentity

-- | A unique identifier in the format REGION:GUID.
[$sel:identityId:UnlinkIdentity'] :: UnlinkIdentity -> Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens.
[$sel:logins:UnlinkIdentity'] :: UnlinkIdentity -> HashMap Text Text

-- | Provider names to unlink from this identity.
[$sel:loginsToRemove:UnlinkIdentity'] :: UnlinkIdentity -> [Text]

-- | Create a value of <a>UnlinkIdentity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:UnlinkIdentity'</a>,
--   <a>unlinkIdentity_identityId</a> - A unique identifier in the format
--   REGION:GUID.
--   
--   <a>$sel:logins:UnlinkIdentity'</a>, <a>unlinkIdentity_logins</a> - A
--   set of optional name-value pairs that map provider names to provider
--   tokens.
--   
--   <a>$sel:loginsToRemove:UnlinkIdentity'</a>,
--   <a>unlinkIdentity_loginsToRemove</a> - Provider names to unlink from
--   this identity.
newUnlinkIdentity :: Text -> UnlinkIdentity

-- | A unique identifier in the format REGION:GUID.
unlinkIdentity_identityId :: Lens' UnlinkIdentity Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens.
unlinkIdentity_logins :: Lens' UnlinkIdentity (HashMap Text Text)

-- | Provider names to unlink from this identity.
unlinkIdentity_loginsToRemove :: Lens' UnlinkIdentity [Text]

-- | <i>See:</i> <a>newUnlinkIdentityResponse</a> smart constructor.
data UnlinkIdentityResponse
UnlinkIdentityResponse' :: UnlinkIdentityResponse

-- | Create a value of <a>UnlinkIdentityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUnlinkIdentityResponse :: UnlinkIdentityResponse
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentity
instance GHC.Show.Show Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentity
instance GHC.Read.Read Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentity
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentity
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentityResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentityResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentityResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentityResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentity
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentityResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentity
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentity
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentity
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentity
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentity
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.UnlinkIdentity.UnlinkIdentity


-- | Removes the specified tags from the specified Amazon Cognito identity
--   pool. You can use this action up to 5 times per second, per account
module Network.AWS.CognitoIdentity.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the identity pool.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The keys of the tags to remove from the user pool.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the identity pool.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to remove from the user pool.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the identity pool.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to remove from the user pool.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.CognitoIdentity.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.CognitoIdentity.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.CognitoIdentity.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.CognitoIdentity.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.UntagResource.UntagResource


-- | Updates an identity pool.
--   
--   You must use AWS Developer credentials to call this API.
module Network.AWS.CognitoIdentity.UpdateIdentityPool

-- | An object representing an Amazon Cognito identity pool.
--   
--   <i>See:</i> <a>newUpdateIdentityPool</a> smart constructor.
data UpdateIdentityPool
UpdateIdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Text -> Bool -> UpdateIdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
[$sel:allowClassicFlow:UpdateIdentityPool'] :: UpdateIdentityPool -> Maybe Bool

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
[$sel:samlProviderARNs:UpdateIdentityPool'] :: UpdateIdentityPool -> Maybe [Text]

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
[$sel:identityPoolTags:UpdateIdentityPool'] :: UpdateIdentityPool -> Maybe (HashMap Text Text)

-- | The ARNs of the OpenID Connect providers.
[$sel:openIdConnectProviderARNs:UpdateIdentityPool'] :: UpdateIdentityPool -> Maybe [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
[$sel:supportedLoginProviders:UpdateIdentityPool'] :: UpdateIdentityPool -> Maybe (HashMap Text Text)

-- | A list representing an Amazon Cognito user pool and its client ID.
[$sel:cognitoIdentityProviders:UpdateIdentityPool'] :: UpdateIdentityPool -> Maybe [CognitoIdentityProvider]

-- | The "domain" by which Cognito will refer to your users.
[$sel:developerProviderName:UpdateIdentityPool'] :: UpdateIdentityPool -> Maybe Text

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:UpdateIdentityPool'] :: UpdateIdentityPool -> Text

-- | A string that you provide.
[$sel:identityPoolName:UpdateIdentityPool'] :: UpdateIdentityPool -> Text

-- | TRUE if the identity pool supports unauthenticated logins.
[$sel:allowUnauthenticatedIdentities:UpdateIdentityPool'] :: UpdateIdentityPool -> Bool

-- | Create a value of <a>UpdateIdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_allowClassicFlow</a> - Enables or disables the
--   Basic (Classic) authentication flow. For more information, see
--   <a>Identity Pools (Federated Identities) Authentication Flow</a> in
--   the <i>Amazon Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_samlProviderARNs</a> - An array of Amazon
--   Resource Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_identityPoolTags</a> - The tags that are
--   assigned to the identity pool. A tag is a label that you can apply to
--   identity pools to categorize and manage them in different ways, such
--   as by purpose, owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_openIdConnectProviderARNs</a> - The ARNs of the
--   OpenID Connect providers.
--   
--   <a>$sel:supportedLoginProviders:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_supportedLoginProviders</a> - Optional key:value
--   pairs mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_cognitoIdentityProviders</a> - A list
--   representing an Amazon Cognito user pool and its client ID.
--   
--   <a>$sel:developerProviderName:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_developerProviderName</a> - The "domain" by
--   which Cognito will refer to your users.
--   
--   <a>$sel:identityPoolId:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_identityPoolId</a> - An identity pool ID in the
--   format REGION:GUID.
--   
--   <a>$sel:identityPoolName:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_identityPoolName</a> - A string that you
--   provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newUpdateIdentityPool :: Text -> Text -> Bool -> UpdateIdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
updateIdentityPool_allowClassicFlow :: Lens' UpdateIdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
updateIdentityPool_samlProviderARNs :: Lens' UpdateIdentityPool (Maybe [Text])

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
updateIdentityPool_identityPoolTags :: Lens' UpdateIdentityPool (Maybe (HashMap Text Text))

-- | The ARNs of the OpenID Connect providers.
updateIdentityPool_openIdConnectProviderARNs :: Lens' UpdateIdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
updateIdentityPool_supportedLoginProviders :: Lens' UpdateIdentityPool (Maybe (HashMap Text Text))

-- | A list representing an Amazon Cognito user pool and its client ID.
updateIdentityPool_cognitoIdentityProviders :: Lens' UpdateIdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users.
updateIdentityPool_developerProviderName :: Lens' UpdateIdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
updateIdentityPool_identityPoolId :: Lens' UpdateIdentityPool Text

-- | A string that you provide.
updateIdentityPool_identityPoolName :: Lens' UpdateIdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
updateIdentityPool_allowUnauthenticatedIdentities :: Lens' UpdateIdentityPool Bool

-- | An object representing an Amazon Cognito identity pool.
--   
--   <i>See:</i> <a>newIdentityPool</a> smart constructor.
data IdentityPool
IdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Text -> Bool -> IdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
[$sel:allowClassicFlow:IdentityPool'] :: IdentityPool -> Maybe Bool

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
[$sel:samlProviderARNs:IdentityPool'] :: IdentityPool -> Maybe [Text]

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
[$sel:identityPoolTags:IdentityPool'] :: IdentityPool -> Maybe (HashMap Text Text)

-- | The ARNs of the OpenID Connect providers.
[$sel:openIdConnectProviderARNs:IdentityPool'] :: IdentityPool -> Maybe [Text]

-- | Optional key:value pairs mapping provider names to provider app IDs.
[$sel:supportedLoginProviders:IdentityPool'] :: IdentityPool -> Maybe (HashMap Text Text)

-- | A list representing an Amazon Cognito user pool and its client ID.
[$sel:cognitoIdentityProviders:IdentityPool'] :: IdentityPool -> Maybe [CognitoIdentityProvider]

-- | The "domain" by which Cognito will refer to your users.
[$sel:developerProviderName:IdentityPool'] :: IdentityPool -> Maybe Text

-- | An identity pool ID in the format REGION:GUID.
[$sel:identityPoolId:IdentityPool'] :: IdentityPool -> Text

-- | A string that you provide.
[$sel:identityPoolName:IdentityPool'] :: IdentityPool -> Text

-- | TRUE if the identity pool supports unauthenticated logins.
[$sel:allowUnauthenticatedIdentities:IdentityPool'] :: IdentityPool -> Bool

-- | Create a value of <a>IdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:IdentityPool'</a>,
--   <a>identityPool_allowClassicFlow</a> - Enables or disables the Basic
--   (Classic) authentication flow. For more information, see <a>Identity
--   Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon
--   Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:IdentityPool'</a>,
--   <a>identityPool_samlProviderARNs</a> - An array of Amazon Resource
--   Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:IdentityPool'</a>,
--   <a>identityPool_identityPoolTags</a> - The tags that are assigned to
--   the identity pool. A tag is a label that you can apply to identity
--   pools to categorize and manage them in different ways, such as by
--   purpose, owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:IdentityPool'</a>,
--   <a>identityPool_openIdConnectProviderARNs</a> - The ARNs of the OpenID
--   Connect providers.
--   
--   <a>$sel:supportedLoginProviders:IdentityPool'</a>,
--   <a>identityPool_supportedLoginProviders</a> - Optional key:value pairs
--   mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:IdentityPool'</a>,
--   <a>identityPool_cognitoIdentityProviders</a> - A list representing an
--   Amazon Cognito user pool and its client ID.
--   
--   <a>$sel:developerProviderName:IdentityPool'</a>,
--   <a>identityPool_developerProviderName</a> - The "domain" by which
--   Cognito will refer to your users.
--   
--   <a>$sel:identityPoolId:IdentityPool'</a>,
--   <a>identityPool_identityPoolId</a> - An identity pool ID in the format
--   REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPool'</a>,
--   <a>identityPool_identityPoolName</a> - A string that you provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:IdentityPool'</a>,
--   <a>identityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newIdentityPool :: Text -> Text -> Bool -> IdentityPool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
identityPool_allowClassicFlow :: Lens' IdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
identityPool_samlProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
identityPool_identityPoolTags :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | The ARNs of the OpenID Connect providers.
identityPool_openIdConnectProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
identityPool_supportedLoginProviders :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | A list representing an Amazon Cognito user pool and its client ID.
identityPool_cognitoIdentityProviders :: Lens' IdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users.
identityPool_developerProviderName :: Lens' IdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
identityPool_identityPoolId :: Lens' IdentityPool Text

-- | A string that you provide.
identityPool_identityPoolName :: Lens' IdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
identityPool_allowUnauthenticatedIdentities :: Lens' IdentityPool Bool
instance GHC.Generics.Generic Network.AWS.CognitoIdentity.UpdateIdentityPool.UpdateIdentityPool
instance GHC.Show.Show Network.AWS.CognitoIdentity.UpdateIdentityPool.UpdateIdentityPool
instance GHC.Read.Read Network.AWS.CognitoIdentity.UpdateIdentityPool.UpdateIdentityPool
instance GHC.Classes.Eq Network.AWS.CognitoIdentity.UpdateIdentityPool.UpdateIdentityPool
instance Network.AWS.Types.AWSRequest Network.AWS.CognitoIdentity.UpdateIdentityPool.UpdateIdentityPool
instance Data.Hashable.Class.Hashable Network.AWS.CognitoIdentity.UpdateIdentityPool.UpdateIdentityPool
instance Control.DeepSeq.NFData Network.AWS.CognitoIdentity.UpdateIdentityPool.UpdateIdentityPool
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.CognitoIdentity.UpdateIdentityPool.UpdateIdentityPool
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.CognitoIdentity.UpdateIdentityPool.UpdateIdentityPool
instance Network.AWS.Data.Path.ToPath Network.AWS.CognitoIdentity.UpdateIdentityPool.UpdateIdentityPool
instance Network.AWS.Data.Query.ToQuery Network.AWS.CognitoIdentity.UpdateIdentityPool.UpdateIdentityPool


module Network.AWS.CognitoIdentity.Lens

-- | An identity pool ID in the format REGION:GUID.
describeIdentityPool_identityPoolId :: Lens' DescribeIdentityPool Text

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
identityPool_allowClassicFlow :: Lens' IdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
identityPool_samlProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
identityPool_identityPoolTags :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | The ARNs of the OpenID Connect providers.
identityPool_openIdConnectProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
identityPool_supportedLoginProviders :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | A list representing an Amazon Cognito user pool and its client ID.
identityPool_cognitoIdentityProviders :: Lens' IdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users.
identityPool_developerProviderName :: Lens' IdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
identityPool_identityPoolId :: Lens' IdentityPool Text

-- | A string that you provide.
identityPool_identityPoolName :: Lens' IdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
identityPool_allowUnauthenticatedIdentities :: Lens' IdentityPool Bool

-- | The expiration time of the token, in seconds. You can specify a custom
--   expiration time for the token so that you can cache it. If you don't
--   provide an expiration time, the token is valid for 15 minutes. You can
--   exchange the token with Amazon STS for temporary AWS credentials,
--   which are valid for a maximum of one hour. The maximum token duration
--   you can set is 24 hours. You should take care in setting the
--   expiration time for a token, as there are significant security
--   implications: an attacker could use a leaked token to access your AWS
--   resources for the token's duration.
--   
--   Please provide for a small grace period, usually no more than 5
--   minutes, to account for clock skew.
getOpenIdTokenForDeveloperIdentity_tokenDuration :: Lens' GetOpenIdTokenForDeveloperIdentity (Maybe Natural)

-- | Use this operation to configure attribute mappings for custom
--   providers.
getOpenIdTokenForDeveloperIdentity_principalTags :: Lens' GetOpenIdTokenForDeveloperIdentity (Maybe (HashMap Text Text))

-- | A unique identifier in the format REGION:GUID.
getOpenIdTokenForDeveloperIdentity_identityId :: Lens' GetOpenIdTokenForDeveloperIdentity (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
getOpenIdTokenForDeveloperIdentity_identityPoolId :: Lens' GetOpenIdTokenForDeveloperIdentity Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. Each name-value pair represents a user from a public provider
--   or developer provider. If the user is from a developer provider, the
--   name-value pair will follow the syntax <tt>"developer_provider_name":
--   "developer_user_identifier"</tt>. The developer provider is the
--   "domain" by which Cognito will refer to your users; you provided this
--   domain while creating/updating the identity pool. The developer user
--   identifier is an identifier from your backend that uniquely identifies
--   a user. When you create an identity pool, you can specify the
--   supported logins.
getOpenIdTokenForDeveloperIdentity_logins :: Lens' GetOpenIdTokenForDeveloperIdentity (HashMap Text Text)

-- | A unique identifier in the format REGION:GUID.
getOpenIdTokenForDeveloperIdentityResponse_identityId :: Lens' GetOpenIdTokenForDeveloperIdentityResponse (Maybe Text)

-- | An OpenID token.
getOpenIdTokenForDeveloperIdentityResponse_token :: Lens' GetOpenIdTokenForDeveloperIdentityResponse (Maybe Text)

-- | The response's http status code.
getOpenIdTokenForDeveloperIdentityResponse_httpStatus :: Lens' GetOpenIdTokenForDeveloperIdentityResponse Int

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. When using graph.facebook.com and www.amazon.com, supply the
--   access_token returned from the provider's authflow. For
--   accounts.google.com, an Amazon Cognito user pool provider, or any
--   other OpenID Connect provider, always include the <tt>id_token</tt>.
getOpenIdToken_logins :: Lens' GetOpenIdToken (Maybe (HashMap Text Text))

-- | A unique identifier in the format REGION:GUID.
getOpenIdToken_identityId :: Lens' GetOpenIdToken Text

-- | A unique identifier in the format REGION:GUID. Note that the
--   IdentityId returned may not match the one passed on input.
getOpenIdTokenResponse_identityId :: Lens' GetOpenIdTokenResponse (Maybe Text)

-- | An OpenID token, valid for 10 minutes.
getOpenIdTokenResponse_token :: Lens' GetOpenIdTokenResponse (Maybe Text)

-- | The response's http status code.
getOpenIdTokenResponse_httpStatus :: Lens' GetOpenIdTokenResponse Int

-- | A list of 1-60 identities that you want to delete.
deleteIdentities_identityIdsToDelete :: Lens' DeleteIdentities (NonEmpty Text)

-- | An array of UnprocessedIdentityId objects, each of which contains an
--   ErrorCode and IdentityId.
deleteIdentitiesResponse_unprocessedIdentityIds :: Lens' DeleteIdentitiesResponse (Maybe [UnprocessedIdentityId])

-- | The response's http status code.
deleteIdentitiesResponse_httpStatus :: Lens' DeleteIdentitiesResponse Int

-- | You can use this operation to get the ID of the Identity Pool you
--   setup attribute mappings for.
getPrincipalTagAttributeMap_identityPoolId :: Lens' GetPrincipalTagAttributeMap Text

-- | You can use this operation to get the provider name.
getPrincipalTagAttributeMap_identityProviderName :: Lens' GetPrincipalTagAttributeMap Text

-- | You can use this operation to get the ID of the Identity Pool you
--   setup attribute mappings for.
getPrincipalTagAttributeMapResponse_identityPoolId :: Lens' GetPrincipalTagAttributeMapResponse (Maybe Text)

-- | You can use this operation to get the provider name.
getPrincipalTagAttributeMapResponse_identityProviderName :: Lens' GetPrincipalTagAttributeMapResponse (Maybe Text)

-- | You can use this operation to add principal tags. The
--   <tt>PrincipalTags</tt>operation enables you to reference user
--   attributes in your IAM permissions policy.
getPrincipalTagAttributeMapResponse_principalTags :: Lens' GetPrincipalTagAttributeMapResponse (Maybe (HashMap Text Text))

-- | You can use this operation to list
getPrincipalTagAttributeMapResponse_useDefaults :: Lens' GetPrincipalTagAttributeMapResponse (Maybe Bool)

-- | The response's http status code.
getPrincipalTagAttributeMapResponse_httpStatus :: Lens' GetPrincipalTagAttributeMapResponse Int

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
createIdentityPool_allowClassicFlow :: Lens' CreateIdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
createIdentityPool_samlProviderARNs :: Lens' CreateIdentityPool (Maybe [Text])

-- | Tags to assign to the identity pool. A tag is a label that you can
--   apply to identity pools to categorize and manage them in different
--   ways, such as by purpose, owner, environment, or other criteria.
createIdentityPool_identityPoolTags :: Lens' CreateIdentityPool (Maybe (HashMap Text Text))

-- | The Amazon Resource Names (ARN) of the OpenID Connect providers.
createIdentityPool_openIdConnectProviderARNs :: Lens' CreateIdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
createIdentityPool_supportedLoginProviders :: Lens' CreateIdentityPool (Maybe (HashMap Text Text))

-- | An array of Amazon Cognito user pools and their client IDs.
createIdentityPool_cognitoIdentityProviders :: Lens' CreateIdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users. This name acts
--   as a placeholder that allows your backend and the Cognito service to
--   communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (<tt>.</tt>), underscore (<tt>_</tt>), and dash (<tt>-</tt>).
--   
--   Once you have set a developer provider name, you cannot change it.
--   Please take care in setting this parameter.
createIdentityPool_developerProviderName :: Lens' CreateIdentityPool (Maybe Text)

-- | A string that you provide.
createIdentityPool_identityPoolName :: Lens' CreateIdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
createIdentityPool_allowUnauthenticatedIdentities :: Lens' CreateIdentityPool Bool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
identityPool_allowClassicFlow :: Lens' IdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
identityPool_samlProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
identityPool_identityPoolTags :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | The ARNs of the OpenID Connect providers.
identityPool_openIdConnectProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
identityPool_supportedLoginProviders :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | A list representing an Amazon Cognito user pool and its client ID.
identityPool_cognitoIdentityProviders :: Lens' IdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users.
identityPool_developerProviderName :: Lens' IdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
identityPool_identityPoolId :: Lens' IdentityPool Text

-- | A string that you provide.
identityPool_identityPoolName :: Lens' IdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
identityPool_allowUnauthenticatedIdentities :: Lens' IdentityPool Bool

-- | User identifier for the source user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
mergeDeveloperIdentities_sourceUserIdentifier :: Lens' MergeDeveloperIdentities Text

-- | User identifier for the destination user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
mergeDeveloperIdentities_destinationUserIdentifier :: Lens' MergeDeveloperIdentities Text

-- | The "domain" by which Cognito will refer to your users. This is a
--   (pseudo) domain name that you provide while creating an identity pool.
--   This name acts as a placeholder that allows your backend and the
--   Cognito service to communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (.), underscore (_), and dash (-).
mergeDeveloperIdentities_developerProviderName :: Lens' MergeDeveloperIdentities Text

-- | An identity pool ID in the format REGION:GUID.
mergeDeveloperIdentities_identityPoolId :: Lens' MergeDeveloperIdentities Text

-- | A unique identifier in the format REGION:GUID.
mergeDeveloperIdentitiesResponse_identityId :: Lens' MergeDeveloperIdentitiesResponse (Maybe Text)

-- | The response's http status code.
mergeDeveloperIdentitiesResponse_httpStatus :: Lens' MergeDeveloperIdentitiesResponse Int

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
updateIdentityPool_allowClassicFlow :: Lens' UpdateIdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
updateIdentityPool_samlProviderARNs :: Lens' UpdateIdentityPool (Maybe [Text])

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
updateIdentityPool_identityPoolTags :: Lens' UpdateIdentityPool (Maybe (HashMap Text Text))

-- | The ARNs of the OpenID Connect providers.
updateIdentityPool_openIdConnectProviderARNs :: Lens' UpdateIdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
updateIdentityPool_supportedLoginProviders :: Lens' UpdateIdentityPool (Maybe (HashMap Text Text))

-- | A list representing an Amazon Cognito user pool and its client ID.
updateIdentityPool_cognitoIdentityProviders :: Lens' UpdateIdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users.
updateIdentityPool_developerProviderName :: Lens' UpdateIdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
updateIdentityPool_identityPoolId :: Lens' UpdateIdentityPool Text

-- | A string that you provide.
updateIdentityPool_identityPoolName :: Lens' UpdateIdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
updateIdentityPool_allowUnauthenticatedIdentities :: Lens' UpdateIdentityPool Bool

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
identityPool_allowClassicFlow :: Lens' IdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
identityPool_samlProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
identityPool_identityPoolTags :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | The ARNs of the OpenID Connect providers.
identityPool_openIdConnectProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
identityPool_supportedLoginProviders :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | A list representing an Amazon Cognito user pool and its client ID.
identityPool_cognitoIdentityProviders :: Lens' IdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users.
identityPool_developerProviderName :: Lens' IdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
identityPool_identityPoolId :: Lens' IdentityPool Text

-- | A string that you provide.
identityPool_identityPoolName :: Lens' IdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
identityPool_allowUnauthenticatedIdentities :: Lens' IdentityPool Bool

-- | An identity pool ID in the format REGION:GUID.
getIdentityPoolRoles_identityPoolId :: Lens' GetIdentityPoolRoles Text

-- | An identity pool ID in the format REGION:GUID.
getIdentityPoolRolesResponse_identityPoolId :: Lens' GetIdentityPoolRolesResponse (Maybe Text)

-- | The map of roles associated with this pool. Currently only
--   authenticated and unauthenticated roles are supported.
getIdentityPoolRolesResponse_roles :: Lens' GetIdentityPoolRolesResponse (Maybe (HashMap Text Text))

-- | How users for a specific identity provider are to mapped to roles.
--   This is a String-to-RoleMapping object map. The string identifies the
--   identity provider, for example, "graph.facebook.com" or
--   "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
getIdentityPoolRolesResponse_roleMappings :: Lens' GetIdentityPoolRolesResponse (Maybe (HashMap Text RoleMapping))

-- | The response's http status code.
getIdentityPoolRolesResponse_httpStatus :: Lens' GetIdentityPoolRolesResponse Int

-- | The Amazon Resource Name (ARN) of the identity pool.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to remove from the user pool.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | An identity pool ID in the format REGION:GUID.
deleteIdentityPool_identityPoolId :: Lens' DeleteIdentityPool Text

-- | The Amazon Resource Name (ARN) of the identity pool.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to assign to the identity pool.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | A unique identifier in the format REGION:GUID.
unlinkIdentity_identityId :: Lens' UnlinkIdentity Text

-- | A set of optional name-value pairs that map provider names to provider
--   tokens.
unlinkIdentity_logins :: Lens' UnlinkIdentity (HashMap Text Text)

-- | Provider names to unlink from this identity.
unlinkIdentity_loginsToRemove :: Lens' UnlinkIdentity [Text]

-- | A pagination token. The first call you make will have
--   <tt>NextToken</tt> set to null. After that the service will return
--   <tt>NextToken</tt> values as needed. For example, let's say you make a
--   request with <tt>MaxResults</tt> set to 10, and there are 20 matches
--   in the database. The service will return a pagination token as a part
--   of the response. This token can be used to call the API again and get
--   results starting from the 11th match.
lookupDeveloperIdentity_nextToken :: Lens' LookupDeveloperIdentity (Maybe Text)

-- | The maximum number of identities to return.
lookupDeveloperIdentity_maxResults :: Lens' LookupDeveloperIdentity (Maybe Natural)

-- | A unique ID used by your backend authentication process to identify a
--   user. Typically, a developer identity provider would issue many
--   developer user identifiers, in keeping with the number of users.
lookupDeveloperIdentity_developerUserIdentifier :: Lens' LookupDeveloperIdentity (Maybe Text)

-- | A unique identifier in the format REGION:GUID.
lookupDeveloperIdentity_identityId :: Lens' LookupDeveloperIdentity (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
lookupDeveloperIdentity_identityPoolId :: Lens' LookupDeveloperIdentity Text

-- | A pagination token. The first call you make will have
--   <tt>NextToken</tt> set to null. After that the service will return
--   <tt>NextToken</tt> values as needed. For example, let's say you make a
--   request with <tt>MaxResults</tt> set to 10, and there are 20 matches
--   in the database. The service will return a pagination token as a part
--   of the response. This token can be used to call the API again and get
--   results starting from the 11th match.
lookupDeveloperIdentityResponse_nextToken :: Lens' LookupDeveloperIdentityResponse (Maybe Text)

-- | This is the list of developer user identifiers associated with an
--   identity ID. Cognito supports the association of multiple developer
--   user identifiers with an identity ID.
lookupDeveloperIdentityResponse_developerUserIdentifierList :: Lens' LookupDeveloperIdentityResponse (Maybe [Text])

-- | A unique identifier in the format REGION:GUID.
lookupDeveloperIdentityResponse_identityId :: Lens' LookupDeveloperIdentityResponse (Maybe Text)

-- | The response's http status code.
lookupDeveloperIdentityResponse_httpStatus :: Lens' LookupDeveloperIdentityResponse Int

-- | How users for a specific identity provider are to mapped to roles.
--   This is a string to RoleMapping object map. The string identifies the
--   identity provider, for example, "graph.facebook.com" or
--   "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
--   
--   Up to 25 rules can be specified per identity provider.
setIdentityPoolRoles_roleMappings :: Lens' SetIdentityPoolRoles (Maybe (HashMap Text RoleMapping))

-- | An identity pool ID in the format REGION:GUID.
setIdentityPoolRoles_identityPoolId :: Lens' SetIdentityPoolRoles Text

-- | The map of roles associated with this pool. For a given role, the key
--   will be either "authenticated" or "unauthenticated" and the value will
--   be the Role ARN.
setIdentityPoolRoles_roles :: Lens' SetIdentityPoolRoles (HashMap Text Text)

-- | A pagination token.
listIdentityPools_nextToken :: Lens' ListIdentityPools (Maybe Text)

-- | The maximum number of identities to return.
listIdentityPools_maxResults :: Lens' ListIdentityPools Natural

-- | A pagination token.
listIdentityPoolsResponse_nextToken :: Lens' ListIdentityPoolsResponse (Maybe Text)

-- | The identity pools returned by the ListIdentityPools action.
listIdentityPoolsResponse_identityPools :: Lens' ListIdentityPoolsResponse (Maybe [IdentityPoolShortDescription])

-- | The response's http status code.
listIdentityPoolsResponse_httpStatus :: Lens' ListIdentityPoolsResponse Int

-- | A standard AWS account ID (9+ digits).
getId_accountId :: Lens' GetId (Maybe Text)

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. The available provider names for <tt>Logins</tt> are as
--   follows:
--   
--   <ul>
--   <li>Facebook: <tt>graph.facebook.com</tt></li>
--   <li>Amazon Cognito user pool:
--   <tt>cognito-idp.&lt;region&gt;.amazonaws.com/&lt;YOUR_USER_POOL_ID&gt;</tt>,
--   for example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.</li>
--   <li>Google: <tt>accounts.google.com</tt></li>
--   <li>Amazon: <tt>www.amazon.com</tt></li>
--   <li>Twitter: <tt>api.twitter.com</tt></li>
--   <li>Digits: <tt>www.digits.com</tt></li>
--   </ul>
getId_logins :: Lens' GetId (Maybe (HashMap Text Text))

-- | An identity pool ID in the format REGION:GUID.
getId_identityPoolId :: Lens' GetId Text

-- | A unique identifier in the format REGION:GUID.
getIdResponse_identityId :: Lens' GetIdResponse (Maybe Text)

-- | The response's http status code.
getIdResponse_httpStatus :: Lens' GetIdResponse Int

-- | A unique identifier in the format REGION:GUID.
describeIdentity_identityId :: Lens' DescribeIdentity Text

-- | Date on which the identity was last modified.
identityDescription_lastModifiedDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | Date on which the identity was created.
identityDescription_creationDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | A unique identifier in the format REGION:GUID.
identityDescription_identityId :: Lens' IdentityDescription (Maybe Text)

-- | The provider names.
identityDescription_logins :: Lens' IdentityDescription (Maybe [Text])

-- | A set of optional name-value pairs that map provider names to provider
--   tokens. The name-value pair will follow the syntax "provider_name":
--   "provider_user_identifier".
--   
--   Logins should not be specified when trying to get credentials for an
--   unauthenticated identity.
--   
--   The Logins parameter is required when using identities associated with
--   external identity providers such as Facebook. For examples of
--   <tt>Logins</tt> maps, see the code examples in the <a>External
--   Identity Providers</a> section of the Amazon Cognito Developer Guide.
getCredentialsForIdentity_logins :: Lens' GetCredentialsForIdentity (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the role to be assumed when multiple
--   roles were received in the token from the identity provider. For
--   example, a SAML-based identity provider. This parameter is optional
--   for identity providers that do not support role customization.
getCredentialsForIdentity_customRoleArn :: Lens' GetCredentialsForIdentity (Maybe Text)

-- | A unique identifier in the format REGION:GUID.
getCredentialsForIdentity_identityId :: Lens' GetCredentialsForIdentity Text

-- | A unique identifier in the format REGION:GUID.
getCredentialsForIdentityResponse_identityId :: Lens' GetCredentialsForIdentityResponse (Maybe Text)

-- | Credentials for the provided identity ID.
getCredentialsForIdentityResponse_credentials :: Lens' GetCredentialsForIdentityResponse (Maybe Credentials)

-- | The response's http status code.
getCredentialsForIdentityResponse_httpStatus :: Lens' GetCredentialsForIdentityResponse Int

-- | A unique identifier in the format REGION:GUID.
unlinkDeveloperIdentity_identityId :: Lens' UnlinkDeveloperIdentity Text

-- | An identity pool ID in the format REGION:GUID.
unlinkDeveloperIdentity_identityPoolId :: Lens' UnlinkDeveloperIdentity Text

-- | The "domain" by which Cognito will refer to your users.
unlinkDeveloperIdentity_developerProviderName :: Lens' UnlinkDeveloperIdentity Text

-- | A unique ID used by your backend authentication process to identify a
--   user.
unlinkDeveloperIdentity_developerUserIdentifier :: Lens' UnlinkDeveloperIdentity Text

-- | A pagination token.
listIdentities_nextToken :: Lens' ListIdentities (Maybe Text)

-- | An optional boolean parameter that allows you to hide disabled
--   identities. If omitted, the ListIdentities API will include disabled
--   identities in the response.
listIdentities_hideDisabled :: Lens' ListIdentities (Maybe Bool)

-- | An identity pool ID in the format REGION:GUID.
listIdentities_identityPoolId :: Lens' ListIdentities Text

-- | The maximum number of identities to return.
listIdentities_maxResults :: Lens' ListIdentities Natural

-- | An identity pool ID in the format REGION:GUID.
listIdentitiesResponse_identityPoolId :: Lens' ListIdentitiesResponse (Maybe Text)

-- | A pagination token.
listIdentitiesResponse_nextToken :: Lens' ListIdentitiesResponse (Maybe Text)

-- | An object containing a set of identities and associated mappings.
listIdentitiesResponse_identities :: Lens' ListIdentitiesResponse (Maybe [IdentityDescription])

-- | The response's http status code.
listIdentitiesResponse_httpStatus :: Lens' ListIdentitiesResponse Int

-- | You can use this operation to add principal tags.
setPrincipalTagAttributeMap_principalTags :: Lens' SetPrincipalTagAttributeMap (Maybe (HashMap Text Text))

-- | You can use this operation to use default (username and clientID)
--   attribute mappings.
setPrincipalTagAttributeMap_useDefaults :: Lens' SetPrincipalTagAttributeMap (Maybe Bool)

-- | The ID of the Identity Pool you want to set attribute mappings for.
setPrincipalTagAttributeMap_identityPoolId :: Lens' SetPrincipalTagAttributeMap Text

-- | The provider name you want to use for attribute mappings.
setPrincipalTagAttributeMap_identityProviderName :: Lens' SetPrincipalTagAttributeMap Text

-- | The ID of the Identity Pool you want to set attribute mappings for.
setPrincipalTagAttributeMapResponse_identityPoolId :: Lens' SetPrincipalTagAttributeMapResponse (Maybe Text)

-- | The provider name you want to use for attribute mappings.
setPrincipalTagAttributeMapResponse_identityProviderName :: Lens' SetPrincipalTagAttributeMapResponse (Maybe Text)

-- | You can use this operation to add principal tags. The
--   <tt>PrincipalTags</tt>operation enables you to reference user
--   attributes in your IAM permissions policy.
setPrincipalTagAttributeMapResponse_principalTags :: Lens' SetPrincipalTagAttributeMapResponse (Maybe (HashMap Text Text))

-- | You can use this operation to select default (username and clientID)
--   attribute mappings.
setPrincipalTagAttributeMapResponse_useDefaults :: Lens' SetPrincipalTagAttributeMapResponse (Maybe Bool)

-- | The response's http status code.
setPrincipalTagAttributeMapResponse_httpStatus :: Lens' SetPrincipalTagAttributeMapResponse Int

-- | The Amazon Resource Name (ARN) of the identity pool that the tags are
--   assigned to.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags that are assigned to the identity pool.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The client ID for the Amazon Cognito user pool.
cognitoIdentityProvider_clientId :: Lens' CognitoIdentityProvider (Maybe Text)

-- | The provider name for an Amazon Cognito user pool. For example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.
cognitoIdentityProvider_providerName :: Lens' CognitoIdentityProvider (Maybe Text)

-- | TRUE if server-side token validation is enabled for the identity
--   provider’s token.
--   
--   Once you set <tt>ServerSideTokenCheck</tt> to TRUE for an identity
--   pool, that identity pool will check with the integrated user pools to
--   make sure that the user has not been globally signed out or deleted
--   before the identity pool provides an OIDC token or AWS credentials for
--   the user.
--   
--   If the user is signed out or deleted, the identity pool will return a
--   400 Not Authorized error.
cognitoIdentityProvider_serverSideTokenCheck :: Lens' CognitoIdentityProvider (Maybe Bool)

-- | The date at which these credentials will expire.
credentials_expiration :: Lens' Credentials (Maybe UTCTime)

-- | The Secret Access Key portion of the credentials
credentials_secretKey :: Lens' Credentials (Maybe Text)

-- | The Access Key portion of the credentials.
credentials_accessKeyId :: Lens' Credentials (Maybe Text)

-- | The Session Token portion of the credentials
credentials_sessionToken :: Lens' Credentials (Maybe Text)

-- | Date on which the identity was last modified.
identityDescription_lastModifiedDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | Date on which the identity was created.
identityDescription_creationDate :: Lens' IdentityDescription (Maybe UTCTime)

-- | A unique identifier in the format REGION:GUID.
identityDescription_identityId :: Lens' IdentityDescription (Maybe Text)

-- | The provider names.
identityDescription_logins :: Lens' IdentityDescription (Maybe [Text])

-- | Enables or disables the Basic (Classic) authentication flow. For more
--   information, see <a>Identity Pools (Federated Identities)
--   Authentication Flow</a> in the <i>Amazon Cognito Developer Guide</i>.
identityPool_allowClassicFlow :: Lens' IdentityPool (Maybe Bool)

-- | An array of Amazon Resource Names (ARNs) of the SAML provider for your
--   identity pool.
identityPool_samlProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | The tags that are assigned to the identity pool. A tag is a label that
--   you can apply to identity pools to categorize and manage them in
--   different ways, such as by purpose, owner, environment, or other
--   criteria.
identityPool_identityPoolTags :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | The ARNs of the OpenID Connect providers.
identityPool_openIdConnectProviderARNs :: Lens' IdentityPool (Maybe [Text])

-- | Optional key:value pairs mapping provider names to provider app IDs.
identityPool_supportedLoginProviders :: Lens' IdentityPool (Maybe (HashMap Text Text))

-- | A list representing an Amazon Cognito user pool and its client ID.
identityPool_cognitoIdentityProviders :: Lens' IdentityPool (Maybe [CognitoIdentityProvider])

-- | The "domain" by which Cognito will refer to your users.
identityPool_developerProviderName :: Lens' IdentityPool (Maybe Text)

-- | An identity pool ID in the format REGION:GUID.
identityPool_identityPoolId :: Lens' IdentityPool Text

-- | A string that you provide.
identityPool_identityPoolName :: Lens' IdentityPool Text

-- | TRUE if the identity pool supports unauthenticated logins.
identityPool_allowUnauthenticatedIdentities :: Lens' IdentityPool Bool

-- | An identity pool ID in the format REGION:GUID.
identityPoolShortDescription_identityPoolId :: Lens' IdentityPoolShortDescription (Maybe Text)

-- | A string that you provide.
identityPoolShortDescription_identityPoolName :: Lens' IdentityPoolShortDescription (Maybe Text)

-- | The claim name that must be present in the token, for example,
--   "isAdmin" or "paid".
mappingRule_claim :: Lens' MappingRule Text

-- | The match condition that specifies how closely the claim value in the
--   IdP token must match <tt>Value</tt>.
mappingRule_matchType :: Lens' MappingRule MappingRuleMatchType

-- | A brief string that the claim must match, for example, "paid" or
--   "yes".
mappingRule_value :: Lens' MappingRule Text

-- | The role ARN.
mappingRule_roleARN :: Lens' MappingRule Text

-- | If you specify Token or Rules as the <tt>Type</tt>,
--   <tt>AmbiguousRoleResolution</tt> is required.
--   
--   Specifies the action to be taken if either no rules match the claim
--   value for the <tt>Rules</tt> type, or there is no
--   <tt>cognito:preferred_role</tt> claim and there are multiple
--   <tt>cognito:roles</tt> matches for the <tt>Token</tt> type.
roleMapping_ambiguousRoleResolution :: Lens' RoleMapping (Maybe AmbiguousRoleResolutionType)

-- | The rules to be used for mapping users to roles.
--   
--   If you specify Rules as the role mapping type,
--   <tt>RulesConfiguration</tt> is required.
roleMapping_rulesConfiguration :: Lens' RoleMapping (Maybe RulesConfigurationType)

-- | The role mapping type. Token will use <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims from the Cognito identity
--   provider token to map groups to roles. Rules will attempt to match
--   claims from the token to map to a role.
roleMapping_type :: Lens' RoleMapping RoleMappingType

-- | An array of rules. You can specify up to 25 rules per identity
--   provider.
--   
--   Rules are evaluated in order. The first one to match specifies the
--   role.
rulesConfigurationType_rules :: Lens' RulesConfigurationType (NonEmpty MappingRule)

-- | A unique identifier in the format REGION:GUID.
unprocessedIdentityId_identityId :: Lens' UnprocessedIdentityId (Maybe Text)

-- | The error code indicating the type of error that occurred.
unprocessedIdentityId_errorCode :: Lens' UnprocessedIdentityId (Maybe CognitoErrorCode)


module Network.AWS.CognitoIdentity.Waiters


-- | Derived from API version <tt>2014-06-30</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Cognito Federated Identities
--   
--   Amazon Cognito Federated Identities is a web service that delivers
--   scoped temporary credentials to mobile devices and other untrusted
--   environments. It uniquely identifies a device and supplies the user
--   with a consistent identity over the lifetime of an application.
--   
--   Using Amazon Cognito Federated Identities, you can enable
--   authentication with one or more third-party identity providers
--   (Facebook, Google, or Login with Amazon) or an Amazon Cognito user
--   pool, and you can also choose to support unauthenticated access from
--   your app. Cognito delivers a unique identifier for each user and acts
--   as an OpenID token provider trusted by AWS Security Token Service
--   (STS) to access temporary, limited-privilege AWS credentials.
--   
--   For a description of the authentication flow from the Amazon Cognito
--   Developer Guide see <a>Authentication Flow</a>.
--   
--   For more information see <a>Amazon Cognito Federated Identities</a>.
module Network.AWS.CognitoIdentity

-- | API version <tt>2014-06-30</tt> of the Amazon Cognito Identity SDK
--   configuration.
defaultService :: Service

-- | Thrown when a user tries to use a login which is already linked to
--   another account.
_ResourceConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown when the service encounters an error during processing the
--   request.
_InternalErrorException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown if there are parallel requests to modify a resource.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An exception thrown when a dependent service such as Facebook or
--   Twitter is not responding
_ExternalServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown for missing or bad input parameter(s).
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown if the identity pool has no role associated for the given auth
--   type (auth/unauth) or if the AssumeRole fails.
_InvalidIdentityPoolConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown when the total number of user pools has exceeded a preset
--   limit.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided developer user identifier is already registered with
--   Cognito under a different identity ID.
_DeveloperUserAlreadyRegisteredException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown when the requested resource (for example, a dataset or record)
--   does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown when a user is not authorized to access the requested resource.
_NotAuthorizedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Thrown when a request is throttled.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Input to the DescribeIdentityPool action.
--   
--   <i>See:</i> <a>newDescribeIdentityPool</a> smart constructor.
data DescribeIdentityPool
DescribeIdentityPool' :: Text -> DescribeIdentityPool

-- | Create a value of <a>DescribeIdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:DescribeIdentityPool'</a>,
--   <a>describeIdentityPool_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
newDescribeIdentityPool :: Text -> DescribeIdentityPool

-- | An object representing an Amazon Cognito identity pool.
--   
--   <i>See:</i> <a>newIdentityPool</a> smart constructor.
data IdentityPool
IdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Text -> Bool -> IdentityPool

-- | Create a value of <a>IdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:IdentityPool'</a>,
--   <a>identityPool_allowClassicFlow</a> - Enables or disables the Basic
--   (Classic) authentication flow. For more information, see <a>Identity
--   Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon
--   Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:IdentityPool'</a>,
--   <a>identityPool_samlProviderARNs</a> - An array of Amazon Resource
--   Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:IdentityPool'</a>,
--   <a>identityPool_identityPoolTags</a> - The tags that are assigned to
--   the identity pool. A tag is a label that you can apply to identity
--   pools to categorize and manage them in different ways, such as by
--   purpose, owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:IdentityPool'</a>,
--   <a>identityPool_openIdConnectProviderARNs</a> - The ARNs of the OpenID
--   Connect providers.
--   
--   <a>$sel:supportedLoginProviders:IdentityPool'</a>,
--   <a>identityPool_supportedLoginProviders</a> - Optional key:value pairs
--   mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:IdentityPool'</a>,
--   <a>identityPool_cognitoIdentityProviders</a> - A list representing an
--   Amazon Cognito user pool and its client ID.
--   
--   <a>$sel:developerProviderName:IdentityPool'</a>,
--   <a>identityPool_developerProviderName</a> - The "domain" by which
--   Cognito will refer to your users.
--   
--   <a>$sel:identityPoolId:IdentityPool'</a>,
--   <a>identityPool_identityPoolId</a> - An identity pool ID in the format
--   REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPool'</a>,
--   <a>identityPool_identityPoolName</a> - A string that you provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:IdentityPool'</a>,
--   <a>identityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newIdentityPool :: Text -> Text -> Bool -> IdentityPool

-- | Input to the <tt>GetOpenIdTokenForDeveloperIdentity</tt> action.
--   
--   <i>See:</i> <a>newGetOpenIdTokenForDeveloperIdentity</a> smart
--   constructor.
data GetOpenIdTokenForDeveloperIdentity
GetOpenIdTokenForDeveloperIdentity' :: Maybe Natural -> Maybe (HashMap Text Text) -> Maybe Text -> Text -> HashMap Text Text -> GetOpenIdTokenForDeveloperIdentity

-- | Create a value of <a>GetOpenIdTokenForDeveloperIdentity</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tokenDuration:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentity_tokenDuration</a> - The
--   expiration time of the token, in seconds. You can specify a custom
--   expiration time for the token so that you can cache it. If you don't
--   provide an expiration time, the token is valid for 15 minutes. You can
--   exchange the token with Amazon STS for temporary AWS credentials,
--   which are valid for a maximum of one hour. The maximum token duration
--   you can set is 24 hours. You should take care in setting the
--   expiration time for a token, as there are significant security
--   implications: an attacker could use a leaked token to access your AWS
--   resources for the token's duration.
--   
--   Please provide for a small grace period, usually no more than 5
--   minutes, to account for clock skew.
--   
--   <a>$sel:principalTags:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentity_principalTags</a> - Use this
--   operation to configure attribute mappings for custom providers.
--   
--   <a>$sel:identityId:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentity_identityId</a> - A unique
--   identifier in the format REGION:GUID.
--   
--   <a>$sel:identityPoolId:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentity_identityPoolId</a> - An identity
--   pool ID in the format REGION:GUID.
--   
--   <a>$sel:logins:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentity_logins</a> - A set of optional
--   name-value pairs that map provider names to provider tokens. Each
--   name-value pair represents a user from a public provider or developer
--   provider. If the user is from a developer provider, the name-value
--   pair will follow the syntax <tt>"developer_provider_name":
--   "developer_user_identifier"</tt>. The developer provider is the
--   "domain" by which Cognito will refer to your users; you provided this
--   domain while creating/updating the identity pool. The developer user
--   identifier is an identifier from your backend that uniquely identifies
--   a user. When you create an identity pool, you can specify the
--   supported logins.
newGetOpenIdTokenForDeveloperIdentity :: Text -> GetOpenIdTokenForDeveloperIdentity

-- | Returned in response to a successful
--   <tt>GetOpenIdTokenForDeveloperIdentity</tt> request.
--   
--   <i>See:</i> <a>newGetOpenIdTokenForDeveloperIdentityResponse</a> smart
--   constructor.
data GetOpenIdTokenForDeveloperIdentityResponse
GetOpenIdTokenForDeveloperIdentityResponse' :: Maybe Text -> Maybe Text -> Int -> GetOpenIdTokenForDeveloperIdentityResponse

-- | Create a value of <a>GetOpenIdTokenForDeveloperIdentityResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:GetOpenIdTokenForDeveloperIdentity'</a>,
--   <a>getOpenIdTokenForDeveloperIdentityResponse_identityId</a> - A
--   unique identifier in the format REGION:GUID.
--   
--   <a>$sel:token:GetOpenIdTokenForDeveloperIdentityResponse'</a>,
--   <a>getOpenIdTokenForDeveloperIdentityResponse_token</a> - An OpenID
--   token.
--   
--   <a>$sel:httpStatus:GetOpenIdTokenForDeveloperIdentityResponse'</a>,
--   <a>getOpenIdTokenForDeveloperIdentityResponse_httpStatus</a> - The
--   response's http status code.
newGetOpenIdTokenForDeveloperIdentityResponse :: Int -> GetOpenIdTokenForDeveloperIdentityResponse

-- | Input to the GetOpenIdToken action.
--   
--   <i>See:</i> <a>newGetOpenIdToken</a> smart constructor.
data GetOpenIdToken
GetOpenIdToken' :: Maybe (HashMap Text Text) -> Text -> GetOpenIdToken

-- | Create a value of <a>GetOpenIdToken</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logins:GetOpenIdToken'</a>, <a>getOpenIdToken_logins</a> - A
--   set of optional name-value pairs that map provider names to provider
--   tokens. When using graph.facebook.com and www.amazon.com, supply the
--   access_token returned from the provider's authflow. For
--   accounts.google.com, an Amazon Cognito user pool provider, or any
--   other OpenID Connect provider, always include the <tt>id_token</tt>.
--   
--   <a>$sel:identityId:GetOpenIdToken'</a>,
--   <a>getOpenIdToken_identityId</a> - A unique identifier in the format
--   REGION:GUID.
newGetOpenIdToken :: Text -> GetOpenIdToken

-- | Returned in response to a successful GetOpenIdToken request.
--   
--   <i>See:</i> <a>newGetOpenIdTokenResponse</a> smart constructor.
data GetOpenIdTokenResponse
GetOpenIdTokenResponse' :: Maybe Text -> Maybe Text -> Int -> GetOpenIdTokenResponse

-- | Create a value of <a>GetOpenIdTokenResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:GetOpenIdToken'</a>,
--   <a>getOpenIdTokenResponse_identityId</a> - A unique identifier in the
--   format REGION:GUID. Note that the IdentityId returned may not match
--   the one passed on input.
--   
--   <a>$sel:token:GetOpenIdTokenResponse'</a>,
--   <a>getOpenIdTokenResponse_token</a> - An OpenID token, valid for 10
--   minutes.
--   
--   <a>$sel:httpStatus:GetOpenIdTokenResponse'</a>,
--   <a>getOpenIdTokenResponse_httpStatus</a> - The response's http status
--   code.
newGetOpenIdTokenResponse :: Int -> GetOpenIdTokenResponse

-- | Input to the <tt>DeleteIdentities</tt> action.
--   
--   <i>See:</i> <a>newDeleteIdentities</a> smart constructor.
data DeleteIdentities
DeleteIdentities' :: NonEmpty Text -> DeleteIdentities

-- | Create a value of <a>DeleteIdentities</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityIdsToDelete:DeleteIdentities'</a>,
--   <a>deleteIdentities_identityIdsToDelete</a> - A list of 1-60
--   identities that you want to delete.
newDeleteIdentities :: NonEmpty Text -> DeleteIdentities

-- | Returned in response to a successful <tt>DeleteIdentities</tt>
--   operation.
--   
--   <i>See:</i> <a>newDeleteIdentitiesResponse</a> smart constructor.
data DeleteIdentitiesResponse
DeleteIdentitiesResponse' :: Maybe [UnprocessedIdentityId] -> Int -> DeleteIdentitiesResponse

-- | Create a value of <a>DeleteIdentitiesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:unprocessedIdentityIds:DeleteIdentitiesResponse'</a>,
--   <a>deleteIdentitiesResponse_unprocessedIdentityIds</a> - An array of
--   UnprocessedIdentityId objects, each of which contains an ErrorCode and
--   IdentityId.
--   
--   <a>$sel:httpStatus:DeleteIdentitiesResponse'</a>,
--   <a>deleteIdentitiesResponse_httpStatus</a> - The response's http
--   status code.
newDeleteIdentitiesResponse :: Int -> DeleteIdentitiesResponse

-- | <i>See:</i> <a>newGetPrincipalTagAttributeMap</a> smart constructor.
data GetPrincipalTagAttributeMap
GetPrincipalTagAttributeMap' :: Text -> Text -> GetPrincipalTagAttributeMap

-- | Create a value of <a>GetPrincipalTagAttributeMap</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:GetPrincipalTagAttributeMap'</a>,
--   <a>getPrincipalTagAttributeMap_identityPoolId</a> - You can use this
--   operation to get the ID of the Identity Pool you setup attribute
--   mappings for.
--   
--   <a>$sel:identityProviderName:GetPrincipalTagAttributeMap'</a>,
--   <a>getPrincipalTagAttributeMap_identityProviderName</a> - You can use
--   this operation to get the provider name.
newGetPrincipalTagAttributeMap :: Text -> Text -> GetPrincipalTagAttributeMap

-- | <i>See:</i> <a>newGetPrincipalTagAttributeMapResponse</a> smart
--   constructor.
data GetPrincipalTagAttributeMapResponse
GetPrincipalTagAttributeMapResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Int -> GetPrincipalTagAttributeMapResponse

-- | Create a value of <a>GetPrincipalTagAttributeMapResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:GetPrincipalTagAttributeMap'</a>,
--   <a>getPrincipalTagAttributeMapResponse_identityPoolId</a> - You can
--   use this operation to get the ID of the Identity Pool you setup
--   attribute mappings for.
--   
--   <a>$sel:identityProviderName:GetPrincipalTagAttributeMap'</a>,
--   <a>getPrincipalTagAttributeMapResponse_identityProviderName</a> - You
--   can use this operation to get the provider name.
--   
--   <a>$sel:principalTags:GetPrincipalTagAttributeMapResponse'</a>,
--   <a>getPrincipalTagAttributeMapResponse_principalTags</a> - You can use
--   this operation to add principal tags. The
--   <tt>PrincipalTags</tt>operation enables you to reference user
--   attributes in your IAM permissions policy.
--   
--   <a>$sel:useDefaults:GetPrincipalTagAttributeMapResponse'</a>,
--   <a>getPrincipalTagAttributeMapResponse_useDefaults</a> - You can use
--   this operation to list
--   
--   <a>$sel:httpStatus:GetPrincipalTagAttributeMapResponse'</a>,
--   <a>getPrincipalTagAttributeMapResponse_httpStatus</a> - The response's
--   http status code.
newGetPrincipalTagAttributeMapResponse :: Int -> GetPrincipalTagAttributeMapResponse

-- | Input to the CreateIdentityPool action.
--   
--   <i>See:</i> <a>newCreateIdentityPool</a> smart constructor.
data CreateIdentityPool
CreateIdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Bool -> CreateIdentityPool

-- | Create a value of <a>CreateIdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:CreateIdentityPool'</a>,
--   <a>createIdentityPool_allowClassicFlow</a> - Enables or disables the
--   Basic (Classic) authentication flow. For more information, see
--   <a>Identity Pools (Federated Identities) Authentication Flow</a> in
--   the <i>Amazon Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:CreateIdentityPool'</a>,
--   <a>createIdentityPool_samlProviderARNs</a> - An array of Amazon
--   Resource Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:CreateIdentityPool'</a>,
--   <a>createIdentityPool_identityPoolTags</a> - Tags to assign to the
--   identity pool. A tag is a label that you can apply to identity pools
--   to categorize and manage them in different ways, such as by purpose,
--   owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:CreateIdentityPool'</a>,
--   <a>createIdentityPool_openIdConnectProviderARNs</a> - The Amazon
--   Resource Names (ARN) of the OpenID Connect providers.
--   
--   <a>$sel:supportedLoginProviders:CreateIdentityPool'</a>,
--   <a>createIdentityPool_supportedLoginProviders</a> - Optional key:value
--   pairs mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:CreateIdentityPool'</a>,
--   <a>createIdentityPool_cognitoIdentityProviders</a> - An array of
--   Amazon Cognito user pools and their client IDs.
--   
--   <a>$sel:developerProviderName:CreateIdentityPool'</a>,
--   <a>createIdentityPool_developerProviderName</a> - The "domain" by
--   which Cognito will refer to your users. This name acts as a
--   placeholder that allows your backend and the Cognito service to
--   communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (<tt>.</tt>), underscore (<tt>_</tt>), and dash (<tt>-</tt>).
--   
--   Once you have set a developer provider name, you cannot change it.
--   Please take care in setting this parameter.
--   
--   <a>$sel:identityPoolName:CreateIdentityPool'</a>,
--   <a>createIdentityPool_identityPoolName</a> - A string that you
--   provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:CreateIdentityPool'</a>,
--   <a>createIdentityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newCreateIdentityPool :: Text -> Bool -> CreateIdentityPool

-- | An object representing an Amazon Cognito identity pool.
--   
--   <i>See:</i> <a>newIdentityPool</a> smart constructor.
data IdentityPool
IdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Text -> Bool -> IdentityPool

-- | Create a value of <a>IdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:IdentityPool'</a>,
--   <a>identityPool_allowClassicFlow</a> - Enables or disables the Basic
--   (Classic) authentication flow. For more information, see <a>Identity
--   Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon
--   Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:IdentityPool'</a>,
--   <a>identityPool_samlProviderARNs</a> - An array of Amazon Resource
--   Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:IdentityPool'</a>,
--   <a>identityPool_identityPoolTags</a> - The tags that are assigned to
--   the identity pool. A tag is a label that you can apply to identity
--   pools to categorize and manage them in different ways, such as by
--   purpose, owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:IdentityPool'</a>,
--   <a>identityPool_openIdConnectProviderARNs</a> - The ARNs of the OpenID
--   Connect providers.
--   
--   <a>$sel:supportedLoginProviders:IdentityPool'</a>,
--   <a>identityPool_supportedLoginProviders</a> - Optional key:value pairs
--   mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:IdentityPool'</a>,
--   <a>identityPool_cognitoIdentityProviders</a> - A list representing an
--   Amazon Cognito user pool and its client ID.
--   
--   <a>$sel:developerProviderName:IdentityPool'</a>,
--   <a>identityPool_developerProviderName</a> - The "domain" by which
--   Cognito will refer to your users.
--   
--   <a>$sel:identityPoolId:IdentityPool'</a>,
--   <a>identityPool_identityPoolId</a> - An identity pool ID in the format
--   REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPool'</a>,
--   <a>identityPool_identityPoolName</a> - A string that you provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:IdentityPool'</a>,
--   <a>identityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newIdentityPool :: Text -> Text -> Bool -> IdentityPool

-- | Input to the <tt>MergeDeveloperIdentities</tt> action.
--   
--   <i>See:</i> <a>newMergeDeveloperIdentities</a> smart constructor.
data MergeDeveloperIdentities
MergeDeveloperIdentities' :: Text -> Text -> Text -> Text -> MergeDeveloperIdentities

-- | Create a value of <a>MergeDeveloperIdentities</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceUserIdentifier:MergeDeveloperIdentities'</a>,
--   <a>mergeDeveloperIdentities_sourceUserIdentifier</a> - User identifier
--   for the source user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
--   
--   <a>$sel:destinationUserIdentifier:MergeDeveloperIdentities'</a>,
--   <a>mergeDeveloperIdentities_destinationUserIdentifier</a> - User
--   identifier for the destination user. The value should be a
--   <tt>DeveloperUserIdentifier</tt>.
--   
--   <a>$sel:developerProviderName:MergeDeveloperIdentities'</a>,
--   <a>mergeDeveloperIdentities_developerProviderName</a> - The "domain"
--   by which Cognito will refer to your users. This is a (pseudo) domain
--   name that you provide while creating an identity pool. This name acts
--   as a placeholder that allows your backend and the Cognito service to
--   communicate about the developer provider. For the
--   <tt>DeveloperProviderName</tt>, you can use letters as well as period
--   (.), underscore (_), and dash (-).
--   
--   <a>$sel:identityPoolId:MergeDeveloperIdentities'</a>,
--   <a>mergeDeveloperIdentities_identityPoolId</a> - An identity pool ID
--   in the format REGION:GUID.
newMergeDeveloperIdentities :: Text -> Text -> Text -> Text -> MergeDeveloperIdentities

-- | Returned in response to a successful <tt>MergeDeveloperIdentities</tt>
--   action.
--   
--   <i>See:</i> <a>newMergeDeveloperIdentitiesResponse</a> smart
--   constructor.
data MergeDeveloperIdentitiesResponse
MergeDeveloperIdentitiesResponse' :: Maybe Text -> Int -> MergeDeveloperIdentitiesResponse

-- | Create a value of <a>MergeDeveloperIdentitiesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:MergeDeveloperIdentitiesResponse'</a>,
--   <a>mergeDeveloperIdentitiesResponse_identityId</a> - A unique
--   identifier in the format REGION:GUID.
--   
--   <a>$sel:httpStatus:MergeDeveloperIdentitiesResponse'</a>,
--   <a>mergeDeveloperIdentitiesResponse_httpStatus</a> - The response's
--   http status code.
newMergeDeveloperIdentitiesResponse :: Int -> MergeDeveloperIdentitiesResponse

-- | An object representing an Amazon Cognito identity pool.
--   
--   <i>See:</i> <a>newUpdateIdentityPool</a> smart constructor.
data UpdateIdentityPool
UpdateIdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Text -> Bool -> UpdateIdentityPool

-- | Create a value of <a>UpdateIdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_allowClassicFlow</a> - Enables or disables the
--   Basic (Classic) authentication flow. For more information, see
--   <a>Identity Pools (Federated Identities) Authentication Flow</a> in
--   the <i>Amazon Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_samlProviderARNs</a> - An array of Amazon
--   Resource Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_identityPoolTags</a> - The tags that are
--   assigned to the identity pool. A tag is a label that you can apply to
--   identity pools to categorize and manage them in different ways, such
--   as by purpose, owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_openIdConnectProviderARNs</a> - The ARNs of the
--   OpenID Connect providers.
--   
--   <a>$sel:supportedLoginProviders:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_supportedLoginProviders</a> - Optional key:value
--   pairs mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_cognitoIdentityProviders</a> - A list
--   representing an Amazon Cognito user pool and its client ID.
--   
--   <a>$sel:developerProviderName:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_developerProviderName</a> - The "domain" by
--   which Cognito will refer to your users.
--   
--   <a>$sel:identityPoolId:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_identityPoolId</a> - An identity pool ID in the
--   format REGION:GUID.
--   
--   <a>$sel:identityPoolName:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_identityPoolName</a> - A string that you
--   provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:UpdateIdentityPool'</a>,
--   <a>updateIdentityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newUpdateIdentityPool :: Text -> Text -> Bool -> UpdateIdentityPool

-- | An object representing an Amazon Cognito identity pool.
--   
--   <i>See:</i> <a>newIdentityPool</a> smart constructor.
data IdentityPool
IdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Text -> Bool -> IdentityPool

-- | Create a value of <a>IdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:IdentityPool'</a>,
--   <a>identityPool_allowClassicFlow</a> - Enables or disables the Basic
--   (Classic) authentication flow. For more information, see <a>Identity
--   Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon
--   Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:IdentityPool'</a>,
--   <a>identityPool_samlProviderARNs</a> - An array of Amazon Resource
--   Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:IdentityPool'</a>,
--   <a>identityPool_identityPoolTags</a> - The tags that are assigned to
--   the identity pool. A tag is a label that you can apply to identity
--   pools to categorize and manage them in different ways, such as by
--   purpose, owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:IdentityPool'</a>,
--   <a>identityPool_openIdConnectProviderARNs</a> - The ARNs of the OpenID
--   Connect providers.
--   
--   <a>$sel:supportedLoginProviders:IdentityPool'</a>,
--   <a>identityPool_supportedLoginProviders</a> - Optional key:value pairs
--   mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:IdentityPool'</a>,
--   <a>identityPool_cognitoIdentityProviders</a> - A list representing an
--   Amazon Cognito user pool and its client ID.
--   
--   <a>$sel:developerProviderName:IdentityPool'</a>,
--   <a>identityPool_developerProviderName</a> - The "domain" by which
--   Cognito will refer to your users.
--   
--   <a>$sel:identityPoolId:IdentityPool'</a>,
--   <a>identityPool_identityPoolId</a> - An identity pool ID in the format
--   REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPool'</a>,
--   <a>identityPool_identityPoolName</a> - A string that you provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:IdentityPool'</a>,
--   <a>identityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newIdentityPool :: Text -> Text -> Bool -> IdentityPool

-- | Input to the <tt>GetIdentityPoolRoles</tt> action.
--   
--   <i>See:</i> <a>newGetIdentityPoolRoles</a> smart constructor.
data GetIdentityPoolRoles
GetIdentityPoolRoles' :: Text -> GetIdentityPoolRoles

-- | Create a value of <a>GetIdentityPoolRoles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:GetIdentityPoolRoles'</a>,
--   <a>getIdentityPoolRoles_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
newGetIdentityPoolRoles :: Text -> GetIdentityPoolRoles

-- | Returned in response to a successful <tt>GetIdentityPoolRoles</tt>
--   operation.
--   
--   <i>See:</i> <a>newGetIdentityPoolRolesResponse</a> smart constructor.
data GetIdentityPoolRolesResponse
GetIdentityPoolRolesResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text RoleMapping) -> Int -> GetIdentityPoolRolesResponse

-- | Create a value of <a>GetIdentityPoolRolesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:GetIdentityPoolRoles'</a>,
--   <a>getIdentityPoolRolesResponse_identityPoolId</a> - An identity pool
--   ID in the format REGION:GUID.
--   
--   <a>$sel:roles:GetIdentityPoolRolesResponse'</a>,
--   <a>getIdentityPoolRolesResponse_roles</a> - The map of roles
--   associated with this pool. Currently only authenticated and
--   unauthenticated roles are supported.
--   
--   <a>$sel:roleMappings:GetIdentityPoolRolesResponse'</a>,
--   <a>getIdentityPoolRolesResponse_roleMappings</a> - How users for a
--   specific identity provider are to mapped to roles. This is a
--   String-to-RoleMapping object map. The string identifies the identity
--   provider, for example, "graph.facebook.com" or
--   "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
--   
--   <a>$sel:httpStatus:GetIdentityPoolRolesResponse'</a>,
--   <a>getIdentityPoolRolesResponse_httpStatus</a> - The response's http
--   status code.
newGetIdentityPoolRolesResponse :: Int -> GetIdentityPoolRolesResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the identity pool.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to remove from the user pool.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | Input to the DeleteIdentityPool action.
--   
--   <i>See:</i> <a>newDeleteIdentityPool</a> smart constructor.
data DeleteIdentityPool
DeleteIdentityPool' :: Text -> DeleteIdentityPool

-- | Create a value of <a>DeleteIdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:DeleteIdentityPool'</a>,
--   <a>deleteIdentityPool_identityPoolId</a> - An identity pool ID in the
--   format REGION:GUID.
newDeleteIdentityPool :: Text -> DeleteIdentityPool

-- | <i>See:</i> <a>newDeleteIdentityPoolResponse</a> smart constructor.
data DeleteIdentityPoolResponse
DeleteIdentityPoolResponse' :: DeleteIdentityPoolResponse

-- | Create a value of <a>DeleteIdentityPoolResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIdentityPoolResponse :: DeleteIdentityPoolResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the identity pool.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   assign to the identity pool.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | Input to the UnlinkIdentity action.
--   
--   <i>See:</i> <a>newUnlinkIdentity</a> smart constructor.
data UnlinkIdentity
UnlinkIdentity' :: Text -> HashMap Text Text -> [Text] -> UnlinkIdentity

-- | Create a value of <a>UnlinkIdentity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:UnlinkIdentity'</a>,
--   <a>unlinkIdentity_identityId</a> - A unique identifier in the format
--   REGION:GUID.
--   
--   <a>$sel:logins:UnlinkIdentity'</a>, <a>unlinkIdentity_logins</a> - A
--   set of optional name-value pairs that map provider names to provider
--   tokens.
--   
--   <a>$sel:loginsToRemove:UnlinkIdentity'</a>,
--   <a>unlinkIdentity_loginsToRemove</a> - Provider names to unlink from
--   this identity.
newUnlinkIdentity :: Text -> UnlinkIdentity

-- | <i>See:</i> <a>newUnlinkIdentityResponse</a> smart constructor.
data UnlinkIdentityResponse
UnlinkIdentityResponse' :: UnlinkIdentityResponse

-- | Create a value of <a>UnlinkIdentityResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUnlinkIdentityResponse :: UnlinkIdentityResponse

-- | Input to the <tt>LookupDeveloperIdentityInput</tt> action.
--   
--   <i>See:</i> <a>newLookupDeveloperIdentity</a> smart constructor.
data LookupDeveloperIdentity
LookupDeveloperIdentity' :: Maybe Text -> Maybe Natural -> Maybe Text -> Maybe Text -> Text -> LookupDeveloperIdentity

-- | Create a value of <a>LookupDeveloperIdentity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentity_nextToken</a> - A pagination token. The
--   first call you make will have <tt>NextToken</tt> set to null. After
--   that the service will return <tt>NextToken</tt> values as needed. For
--   example, let's say you make a request with <tt>MaxResults</tt> set to
--   10, and there are 20 matches in the database. The service will return
--   a pagination token as a part of the response. This token can be used
--   to call the API again and get results starting from the 11th match.
--   
--   <a>$sel:maxResults:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentity_maxResults</a> - The maximum number of
--   identities to return.
--   
--   <a>$sel:developerUserIdentifier:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentity_developerUserIdentifier</a> - A unique ID
--   used by your backend authentication process to identify a user.
--   Typically, a developer identity provider would issue many developer
--   user identifiers, in keeping with the number of users.
--   
--   <a>$sel:identityId:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentity_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:identityPoolId:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentity_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
newLookupDeveloperIdentity :: Text -> LookupDeveloperIdentity

-- | Returned in response to a successful <tt>LookupDeveloperIdentity</tt>
--   action.
--   
--   <i>See:</i> <a>newLookupDeveloperIdentityResponse</a> smart
--   constructor.
data LookupDeveloperIdentityResponse
LookupDeveloperIdentityResponse' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Int -> LookupDeveloperIdentityResponse

-- | Create a value of <a>LookupDeveloperIdentityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentityResponse_nextToken</a> - A pagination token.
--   The first call you make will have <tt>NextToken</tt> set to null.
--   After that the service will return <tt>NextToken</tt> values as
--   needed. For example, let's say you make a request with
--   <tt>MaxResults</tt> set to 10, and there are 20 matches in the
--   database. The service will return a pagination token as a part of the
--   response. This token can be used to call the API again and get results
--   starting from the 11th match.
--   
--   
--   <a>$sel:developerUserIdentifierList:LookupDeveloperIdentityResponse'</a>,
--   <a>lookupDeveloperIdentityResponse_developerUserIdentifierList</a> -
--   This is the list of developer user identifiers associated with an
--   identity ID. Cognito supports the association of multiple developer
--   user identifiers with an identity ID.
--   
--   <a>$sel:identityId:LookupDeveloperIdentity'</a>,
--   <a>lookupDeveloperIdentityResponse_identityId</a> - A unique
--   identifier in the format REGION:GUID.
--   
--   <a>$sel:httpStatus:LookupDeveloperIdentityResponse'</a>,
--   <a>lookupDeveloperIdentityResponse_httpStatus</a> - The response's
--   http status code.
newLookupDeveloperIdentityResponse :: Int -> LookupDeveloperIdentityResponse

-- | Input to the <tt>SetIdentityPoolRoles</tt> action.
--   
--   <i>See:</i> <a>newSetIdentityPoolRoles</a> smart constructor.
data SetIdentityPoolRoles
SetIdentityPoolRoles' :: Maybe (HashMap Text RoleMapping) -> Text -> HashMap Text Text -> SetIdentityPoolRoles

-- | Create a value of <a>SetIdentityPoolRoles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleMappings:SetIdentityPoolRoles'</a>,
--   <a>setIdentityPoolRoles_roleMappings</a> - How users for a specific
--   identity provider are to mapped to roles. This is a string to
--   RoleMapping object map. The string identifies the identity provider,
--   for example, "graph.facebook.com" or
--   "cognito-idp.us-east-1.amazonaws.com/us-east-1_abcdefghi:app_client_id".
--   
--   Up to 25 rules can be specified per identity provider.
--   
--   <a>$sel:identityPoolId:SetIdentityPoolRoles'</a>,
--   <a>setIdentityPoolRoles_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
--   
--   <a>$sel:roles:SetIdentityPoolRoles'</a>,
--   <a>setIdentityPoolRoles_roles</a> - The map of roles associated with
--   this pool. For a given role, the key will be either "authenticated" or
--   "unauthenticated" and the value will be the Role ARN.
newSetIdentityPoolRoles :: Text -> SetIdentityPoolRoles

-- | <i>See:</i> <a>newSetIdentityPoolRolesResponse</a> smart constructor.
data SetIdentityPoolRolesResponse
SetIdentityPoolRolesResponse' :: SetIdentityPoolRolesResponse

-- | Create a value of <a>SetIdentityPoolRolesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newSetIdentityPoolRolesResponse :: SetIdentityPoolRolesResponse

-- | Input to the ListIdentityPools action.
--   
--   <i>See:</i> <a>newListIdentityPools</a> smart constructor.
data ListIdentityPools
ListIdentityPools' :: Maybe Text -> Natural -> ListIdentityPools

-- | Create a value of <a>ListIdentityPools</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentityPools'</a>,
--   <a>listIdentityPools_nextToken</a> - A pagination token.
--   
--   <a>$sel:maxResults:ListIdentityPools'</a>,
--   <a>listIdentityPools_maxResults</a> - The maximum number of identities
--   to return.
newListIdentityPools :: Natural -> ListIdentityPools

-- | The result of a successful ListIdentityPools action.
--   
--   <i>See:</i> <a>newListIdentityPoolsResponse</a> smart constructor.
data ListIdentityPoolsResponse
ListIdentityPoolsResponse' :: Maybe Text -> Maybe [IdentityPoolShortDescription] -> Int -> ListIdentityPoolsResponse

-- | Create a value of <a>ListIdentityPoolsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentityPools'</a>,
--   <a>listIdentityPoolsResponse_nextToken</a> - A pagination token.
--   
--   <a>$sel:identityPools:ListIdentityPoolsResponse'</a>,
--   <a>listIdentityPoolsResponse_identityPools</a> - The identity pools
--   returned by the ListIdentityPools action.
--   
--   <a>$sel:httpStatus:ListIdentityPoolsResponse'</a>,
--   <a>listIdentityPoolsResponse_httpStatus</a> - The response's http
--   status code.
newListIdentityPoolsResponse :: Int -> ListIdentityPoolsResponse

-- | Input to the GetId action.
--   
--   <i>See:</i> <a>newGetId</a> smart constructor.
data GetId
GetId' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> GetId

-- | Create a value of <a>GetId</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:accountId:GetId'</a>, <a>getId_accountId</a> - A standard AWS
--   account ID (9+ digits).
--   
--   <a>$sel:logins:GetId'</a>, <a>getId_logins</a> - A set of optional
--   name-value pairs that map provider names to provider tokens. The
--   available provider names for <tt>Logins</tt> are as follows:
--   
--   <ul>
--   <li>Facebook: <tt>graph.facebook.com</tt></li>
--   <li>Amazon Cognito user pool:
--   <tt>cognito-idp.&lt;region&gt;.amazonaws.com/&lt;YOUR_USER_POOL_ID&gt;</tt>,
--   for example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.</li>
--   <li>Google: <tt>accounts.google.com</tt></li>
--   <li>Amazon: <tt>www.amazon.com</tt></li>
--   <li>Twitter: <tt>api.twitter.com</tt></li>
--   <li>Digits: <tt>www.digits.com</tt></li>
--   </ul>
--   
--   <a>$sel:identityPoolId:GetId'</a>, <a>getId_identityPoolId</a> - An
--   identity pool ID in the format REGION:GUID.
newGetId :: Text -> GetId

-- | Returned in response to a GetId request.
--   
--   <i>See:</i> <a>newGetIdResponse</a> smart constructor.
data GetIdResponse
GetIdResponse' :: Maybe Text -> Int -> GetIdResponse

-- | Create a value of <a>GetIdResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:GetIdResponse'</a>, <a>getIdResponse_identityId</a>
--   - A unique identifier in the format REGION:GUID.
--   
--   <a>$sel:httpStatus:GetIdResponse'</a>, <a>getIdResponse_httpStatus</a>
--   - The response's http status code.
newGetIdResponse :: Int -> GetIdResponse

-- | Input to the <tt>DescribeIdentity</tt> action.
--   
--   <i>See:</i> <a>newDescribeIdentity</a> smart constructor.
data DescribeIdentity
DescribeIdentity' :: Text -> DescribeIdentity

-- | Create a value of <a>DescribeIdentity</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:DescribeIdentity'</a>,
--   <a>describeIdentity_identityId</a> - A unique identifier in the format
--   REGION:GUID.
newDescribeIdentity :: Text -> DescribeIdentity

-- | A description of the identity.
--   
--   <i>See:</i> <a>newIdentityDescription</a> smart constructor.
data IdentityDescription
IdentityDescription' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe [Text] -> IdentityDescription

-- | Create a value of <a>IdentityDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:IdentityDescription'</a>,
--   <a>identityDescription_lastModifiedDate</a> - Date on which the
--   identity was last modified.
--   
--   <a>$sel:creationDate:IdentityDescription'</a>,
--   <a>identityDescription_creationDate</a> - Date on which the identity
--   was created.
--   
--   <a>$sel:identityId:IdentityDescription'</a>,
--   <a>identityDescription_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:logins:IdentityDescription'</a>,
--   <a>identityDescription_logins</a> - The provider names.
newIdentityDescription :: IdentityDescription

-- | Input to the <tt>GetCredentialsForIdentity</tt> action.
--   
--   <i>See:</i> <a>newGetCredentialsForIdentity</a> smart constructor.
data GetCredentialsForIdentity
GetCredentialsForIdentity' :: Maybe (HashMap Text Text) -> Maybe Text -> Text -> GetCredentialsForIdentity

-- | Create a value of <a>GetCredentialsForIdentity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logins:GetCredentialsForIdentity'</a>,
--   <a>getCredentialsForIdentity_logins</a> - A set of optional name-value
--   pairs that map provider names to provider tokens. The name-value pair
--   will follow the syntax "provider_name": "provider_user_identifier".
--   
--   Logins should not be specified when trying to get credentials for an
--   unauthenticated identity.
--   
--   The Logins parameter is required when using identities associated with
--   external identity providers such as Facebook. For examples of
--   <tt>Logins</tt> maps, see the code examples in the <a>External
--   Identity Providers</a> section of the Amazon Cognito Developer Guide.
--   
--   <a>$sel:customRoleArn:GetCredentialsForIdentity'</a>,
--   <a>getCredentialsForIdentity_customRoleArn</a> - The Amazon Resource
--   Name (ARN) of the role to be assumed when multiple roles were received
--   in the token from the identity provider. For example, a SAML-based
--   identity provider. This parameter is optional for identity providers
--   that do not support role customization.
--   
--   <a>$sel:identityId:GetCredentialsForIdentity'</a>,
--   <a>getCredentialsForIdentity_identityId</a> - A unique identifier in
--   the format REGION:GUID.
newGetCredentialsForIdentity :: Text -> GetCredentialsForIdentity

-- | Returned in response to a successful
--   <tt>GetCredentialsForIdentity</tt> operation.
--   
--   <i>See:</i> <a>newGetCredentialsForIdentityResponse</a> smart
--   constructor.
data GetCredentialsForIdentityResponse
GetCredentialsForIdentityResponse' :: Maybe Text -> Maybe Credentials -> Int -> GetCredentialsForIdentityResponse

-- | Create a value of <a>GetCredentialsForIdentityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:GetCredentialsForIdentity'</a>,
--   <a>getCredentialsForIdentityResponse_identityId</a> - A unique
--   identifier in the format REGION:GUID.
--   
--   <a>$sel:credentials:GetCredentialsForIdentityResponse'</a>,
--   <a>getCredentialsForIdentityResponse_credentials</a> - Credentials for
--   the provided identity ID.
--   
--   <a>$sel:httpStatus:GetCredentialsForIdentityResponse'</a>,
--   <a>getCredentialsForIdentityResponse_httpStatus</a> - The response's
--   http status code.
newGetCredentialsForIdentityResponse :: Int -> GetCredentialsForIdentityResponse

-- | Input to the <tt>UnlinkDeveloperIdentity</tt> action.
--   
--   <i>See:</i> <a>newUnlinkDeveloperIdentity</a> smart constructor.
data UnlinkDeveloperIdentity
UnlinkDeveloperIdentity' :: Text -> Text -> Text -> Text -> UnlinkDeveloperIdentity

-- | Create a value of <a>UnlinkDeveloperIdentity</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:UnlinkDeveloperIdentity'</a>,
--   <a>unlinkDeveloperIdentity_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:identityPoolId:UnlinkDeveloperIdentity'</a>,
--   <a>unlinkDeveloperIdentity_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
--   
--   <a>$sel:developerProviderName:UnlinkDeveloperIdentity'</a>,
--   <a>unlinkDeveloperIdentity_developerProviderName</a> - The "domain" by
--   which Cognito will refer to your users.
--   
--   <a>$sel:developerUserIdentifier:UnlinkDeveloperIdentity'</a>,
--   <a>unlinkDeveloperIdentity_developerUserIdentifier</a> - A unique ID
--   used by your backend authentication process to identify a user.
newUnlinkDeveloperIdentity :: Text -> Text -> Text -> Text -> UnlinkDeveloperIdentity

-- | <i>See:</i> <a>newUnlinkDeveloperIdentityResponse</a> smart
--   constructor.
data UnlinkDeveloperIdentityResponse
UnlinkDeveloperIdentityResponse' :: UnlinkDeveloperIdentityResponse

-- | Create a value of <a>UnlinkDeveloperIdentityResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUnlinkDeveloperIdentityResponse :: UnlinkDeveloperIdentityResponse

-- | Input to the ListIdentities action.
--   
--   <i>See:</i> <a>newListIdentities</a> smart constructor.
data ListIdentities
ListIdentities' :: Maybe Text -> Maybe Bool -> Text -> Natural -> ListIdentities

-- | Create a value of <a>ListIdentities</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentities'</a>, <a>listIdentities_nextToken</a>
--   - A pagination token.
--   
--   <a>$sel:hideDisabled:ListIdentities'</a>,
--   <a>listIdentities_hideDisabled</a> - An optional boolean parameter
--   that allows you to hide disabled identities. If omitted, the
--   ListIdentities API will include disabled identities in the response.
--   
--   <a>$sel:identityPoolId:ListIdentities'</a>,
--   <a>listIdentities_identityPoolId</a> - An identity pool ID in the
--   format REGION:GUID.
--   
--   <a>$sel:maxResults:ListIdentities'</a>,
--   <a>listIdentities_maxResults</a> - The maximum number of identities to
--   return.
newListIdentities :: Text -> Natural -> ListIdentities

-- | The response to a ListIdentities request.
--   
--   <i>See:</i> <a>newListIdentitiesResponse</a> smart constructor.
data ListIdentitiesResponse
ListIdentitiesResponse' :: Maybe Text -> Maybe Text -> Maybe [IdentityDescription] -> Int -> ListIdentitiesResponse

-- | Create a value of <a>ListIdentitiesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:ListIdentities'</a>,
--   <a>listIdentitiesResponse_identityPoolId</a> - An identity pool ID in
--   the format REGION:GUID.
--   
--   <a>$sel:nextToken:ListIdentities'</a>,
--   <a>listIdentitiesResponse_nextToken</a> - A pagination token.
--   
--   <a>$sel:identities:ListIdentitiesResponse'</a>,
--   <a>listIdentitiesResponse_identities</a> - An object containing a set
--   of identities and associated mappings.
--   
--   <a>$sel:httpStatus:ListIdentitiesResponse'</a>,
--   <a>listIdentitiesResponse_httpStatus</a> - The response's http status
--   code.
newListIdentitiesResponse :: Int -> ListIdentitiesResponse

-- | <i>See:</i> <a>newSetPrincipalTagAttributeMap</a> smart constructor.
data SetPrincipalTagAttributeMap
SetPrincipalTagAttributeMap' :: Maybe (HashMap Text Text) -> Maybe Bool -> Text -> Text -> SetPrincipalTagAttributeMap

-- | Create a value of <a>SetPrincipalTagAttributeMap</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:principalTags:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMap_principalTags</a> - You can use this
--   operation to add principal tags.
--   
--   <a>$sel:useDefaults:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMap_useDefaults</a> - You can use this
--   operation to use default (username and clientID) attribute mappings.
--   
--   <a>$sel:identityPoolId:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMap_identityPoolId</a> - The ID of the
--   Identity Pool you want to set attribute mappings for.
--   
--   <a>$sel:identityProviderName:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMap_identityProviderName</a> - The provider
--   name you want to use for attribute mappings.
newSetPrincipalTagAttributeMap :: Text -> Text -> SetPrincipalTagAttributeMap

-- | <i>See:</i> <a>newSetPrincipalTagAttributeMapResponse</a> smart
--   constructor.
data SetPrincipalTagAttributeMapResponse
SetPrincipalTagAttributeMapResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Int -> SetPrincipalTagAttributeMapResponse

-- | Create a value of <a>SetPrincipalTagAttributeMapResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMapResponse_identityPoolId</a> - The ID of
--   the Identity Pool you want to set attribute mappings for.
--   
--   <a>$sel:identityProviderName:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMapResponse_identityProviderName</a> - The
--   provider name you want to use for attribute mappings.
--   
--   <a>$sel:principalTags:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMapResponse_principalTags</a> - You can use
--   this operation to add principal tags. The
--   <tt>PrincipalTags</tt>operation enables you to reference user
--   attributes in your IAM permissions policy.
--   
--   <a>$sel:useDefaults:SetPrincipalTagAttributeMap'</a>,
--   <a>setPrincipalTagAttributeMapResponse_useDefaults</a> - You can use
--   this operation to select default (username and clientID) attribute
--   mappings.
--   
--   <a>$sel:httpStatus:SetPrincipalTagAttributeMapResponse'</a>,
--   <a>setPrincipalTagAttributeMapResponse_httpStatus</a> - The response's
--   http status code.
newSetPrincipalTagAttributeMapResponse :: Int -> SetPrincipalTagAttributeMapResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the identity pool that the tags are assigned to.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags that are assigned
--   to the identity pool.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse
newtype AmbiguousRoleResolutionType
AmbiguousRoleResolutionType' :: Text -> AmbiguousRoleResolutionType
[fromAmbiguousRoleResolutionType] :: AmbiguousRoleResolutionType -> Text
pattern AmbiguousRoleResolutionType_AuthenticatedRole :: AmbiguousRoleResolutionType
pattern AmbiguousRoleResolutionType_Deny :: AmbiguousRoleResolutionType
newtype CognitoErrorCode
CognitoErrorCode' :: Text -> CognitoErrorCode
[fromCognitoErrorCode] :: CognitoErrorCode -> Text
pattern CognitoErrorCode_AccessDenied :: CognitoErrorCode
pattern CognitoErrorCode_InternalServerError :: CognitoErrorCode
newtype MappingRuleMatchType
MappingRuleMatchType' :: Text -> MappingRuleMatchType
[fromMappingRuleMatchType] :: MappingRuleMatchType -> Text
pattern MappingRuleMatchType_Contains :: MappingRuleMatchType
pattern MappingRuleMatchType_Equals :: MappingRuleMatchType
pattern MappingRuleMatchType_NotEqual :: MappingRuleMatchType
pattern MappingRuleMatchType_StartsWith :: MappingRuleMatchType
newtype RoleMappingType
RoleMappingType' :: Text -> RoleMappingType
[fromRoleMappingType] :: RoleMappingType -> Text
pattern RoleMappingType_Rules :: RoleMappingType
pattern RoleMappingType_Token :: RoleMappingType

-- | A provider representing an Amazon Cognito user pool and its client ID.
--   
--   <i>See:</i> <a>newCognitoIdentityProvider</a> smart constructor.
data CognitoIdentityProvider
CognitoIdentityProvider' :: Maybe Text -> Maybe Text -> Maybe Bool -> CognitoIdentityProvider

-- | Create a value of <a>CognitoIdentityProvider</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientId:CognitoIdentityProvider'</a>,
--   <a>cognitoIdentityProvider_clientId</a> - The client ID for the Amazon
--   Cognito user pool.
--   
--   <a>$sel:providerName:CognitoIdentityProvider'</a>,
--   <a>cognitoIdentityProvider_providerName</a> - The provider name for an
--   Amazon Cognito user pool. For example,
--   <tt>cognito-idp.us-east-1.amazonaws.com/us-east-1_123456789</tt>.
--   
--   <a>$sel:serverSideTokenCheck:CognitoIdentityProvider'</a>,
--   <a>cognitoIdentityProvider_serverSideTokenCheck</a> - TRUE if
--   server-side token validation is enabled for the identity provider’s
--   token.
--   
--   Once you set <tt>ServerSideTokenCheck</tt> to TRUE for an identity
--   pool, that identity pool will check with the integrated user pools to
--   make sure that the user has not been globally signed out or deleted
--   before the identity pool provides an OIDC token or AWS credentials for
--   the user.
--   
--   If the user is signed out or deleted, the identity pool will return a
--   400 Not Authorized error.
newCognitoIdentityProvider :: CognitoIdentityProvider

-- | Credentials for the provided identity ID.
--   
--   <i>See:</i> <a>newCredentials</a> smart constructor.
data Credentials
Credentials' :: Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Credentials

-- | Create a value of <a>Credentials</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:expiration:Credentials'</a>, <a>credentials_expiration</a> -
--   The date at which these credentials will expire.
--   
--   <a>$sel:secretKey:Credentials'</a>, <a>credentials_secretKey</a> - The
--   Secret Access Key portion of the credentials
--   
--   <a>$sel:accessKeyId:Credentials'</a>, <a>credentials_accessKeyId</a> -
--   The Access Key portion of the credentials.
--   
--   <a>$sel:sessionToken:Credentials'</a>, <a>credentials_sessionToken</a>
--   - The Session Token portion of the credentials
newCredentials :: Credentials

-- | A description of the identity.
--   
--   <i>See:</i> <a>newIdentityDescription</a> smart constructor.
data IdentityDescription
IdentityDescription' :: Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe [Text] -> IdentityDescription

-- | Create a value of <a>IdentityDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastModifiedDate:IdentityDescription'</a>,
--   <a>identityDescription_lastModifiedDate</a> - Date on which the
--   identity was last modified.
--   
--   <a>$sel:creationDate:IdentityDescription'</a>,
--   <a>identityDescription_creationDate</a> - Date on which the identity
--   was created.
--   
--   <a>$sel:identityId:IdentityDescription'</a>,
--   <a>identityDescription_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:logins:IdentityDescription'</a>,
--   <a>identityDescription_logins</a> - The provider names.
newIdentityDescription :: IdentityDescription

-- | An object representing an Amazon Cognito identity pool.
--   
--   <i>See:</i> <a>newIdentityPool</a> smart constructor.
data IdentityPool
IdentityPool' :: Maybe Bool -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [Text] -> Maybe (HashMap Text Text) -> Maybe [CognitoIdentityProvider] -> Maybe Text -> Text -> Text -> Bool -> IdentityPool

-- | Create a value of <a>IdentityPool</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:allowClassicFlow:IdentityPool'</a>,
--   <a>identityPool_allowClassicFlow</a> - Enables or disables the Basic
--   (Classic) authentication flow. For more information, see <a>Identity
--   Pools (Federated Identities) Authentication Flow</a> in the <i>Amazon
--   Cognito Developer Guide</i>.
--   
--   <a>$sel:samlProviderARNs:IdentityPool'</a>,
--   <a>identityPool_samlProviderARNs</a> - An array of Amazon Resource
--   Names (ARNs) of the SAML provider for your identity pool.
--   
--   <a>$sel:identityPoolTags:IdentityPool'</a>,
--   <a>identityPool_identityPoolTags</a> - The tags that are assigned to
--   the identity pool. A tag is a label that you can apply to identity
--   pools to categorize and manage them in different ways, such as by
--   purpose, owner, environment, or other criteria.
--   
--   <a>$sel:openIdConnectProviderARNs:IdentityPool'</a>,
--   <a>identityPool_openIdConnectProviderARNs</a> - The ARNs of the OpenID
--   Connect providers.
--   
--   <a>$sel:supportedLoginProviders:IdentityPool'</a>,
--   <a>identityPool_supportedLoginProviders</a> - Optional key:value pairs
--   mapping provider names to provider app IDs.
--   
--   <a>$sel:cognitoIdentityProviders:IdentityPool'</a>,
--   <a>identityPool_cognitoIdentityProviders</a> - A list representing an
--   Amazon Cognito user pool and its client ID.
--   
--   <a>$sel:developerProviderName:IdentityPool'</a>,
--   <a>identityPool_developerProviderName</a> - The "domain" by which
--   Cognito will refer to your users.
--   
--   <a>$sel:identityPoolId:IdentityPool'</a>,
--   <a>identityPool_identityPoolId</a> - An identity pool ID in the format
--   REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPool'</a>,
--   <a>identityPool_identityPoolName</a> - A string that you provide.
--   
--   <a>$sel:allowUnauthenticatedIdentities:IdentityPool'</a>,
--   <a>identityPool_allowUnauthenticatedIdentities</a> - TRUE if the
--   identity pool supports unauthenticated logins.
newIdentityPool :: Text -> Text -> Bool -> IdentityPool

-- | A description of the identity pool.
--   
--   <i>See:</i> <a>newIdentityPoolShortDescription</a> smart constructor.
data IdentityPoolShortDescription
IdentityPoolShortDescription' :: Maybe Text -> Maybe Text -> IdentityPoolShortDescription

-- | Create a value of <a>IdentityPoolShortDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityPoolId:IdentityPoolShortDescription'</a>,
--   <a>identityPoolShortDescription_identityPoolId</a> - An identity pool
--   ID in the format REGION:GUID.
--   
--   <a>$sel:identityPoolName:IdentityPoolShortDescription'</a>,
--   <a>identityPoolShortDescription_identityPoolName</a> - A string that
--   you provide.
newIdentityPoolShortDescription :: IdentityPoolShortDescription

-- | A rule that maps a claim name, a claim value, and a match type to a
--   role ARN.
--   
--   <i>See:</i> <a>newMappingRule</a> smart constructor.
data MappingRule
MappingRule' :: Text -> MappingRuleMatchType -> Text -> Text -> MappingRule

-- | Create a value of <a>MappingRule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:claim:MappingRule'</a>, <a>mappingRule_claim</a> - The claim
--   name that must be present in the token, for example, "isAdmin" or
--   "paid".
--   
--   <a>$sel:matchType:MappingRule'</a>, <a>mappingRule_matchType</a> - The
--   match condition that specifies how closely the claim value in the IdP
--   token must match <tt>Value</tt>.
--   
--   <a>$sel:value:MappingRule'</a>, <a>mappingRule_value</a> - A brief
--   string that the claim must match, for example, "paid" or "yes".
--   
--   <a>$sel:roleARN:MappingRule'</a>, <a>mappingRule_roleARN</a> - The
--   role ARN.
newMappingRule :: Text -> MappingRuleMatchType -> Text -> Text -> MappingRule

-- | A role mapping.
--   
--   <i>See:</i> <a>newRoleMapping</a> smart constructor.
data RoleMapping
RoleMapping' :: Maybe AmbiguousRoleResolutionType -> Maybe RulesConfigurationType -> RoleMappingType -> RoleMapping

-- | Create a value of <a>RoleMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ambiguousRoleResolution:RoleMapping'</a>,
--   <a>roleMapping_ambiguousRoleResolution</a> - If you specify Token or
--   Rules as the <tt>Type</tt>, <tt>AmbiguousRoleResolution</tt> is
--   required.
--   
--   Specifies the action to be taken if either no rules match the claim
--   value for the <tt>Rules</tt> type, or there is no
--   <tt>cognito:preferred_role</tt> claim and there are multiple
--   <tt>cognito:roles</tt> matches for the <tt>Token</tt> type.
--   
--   <a>$sel:rulesConfiguration:RoleMapping'</a>,
--   <a>roleMapping_rulesConfiguration</a> - The rules to be used for
--   mapping users to roles.
--   
--   If you specify Rules as the role mapping type,
--   <tt>RulesConfiguration</tt> is required.
--   
--   <a>$sel:type':RoleMapping'</a>, <a>roleMapping_type</a> - The role
--   mapping type. Token will use <tt>cognito:roles</tt> and
--   <tt>cognito:preferred_role</tt> claims from the Cognito identity
--   provider token to map groups to roles. Rules will attempt to match
--   claims from the token to map to a role.
newRoleMapping :: RoleMappingType -> RoleMapping

-- | A container for rules.
--   
--   <i>See:</i> <a>newRulesConfigurationType</a> smart constructor.
data RulesConfigurationType
RulesConfigurationType' :: NonEmpty MappingRule -> RulesConfigurationType

-- | Create a value of <a>RulesConfigurationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rules:RulesConfigurationType'</a>,
--   <a>rulesConfigurationType_rules</a> - An array of rules. You can
--   specify up to 25 rules per identity provider.
--   
--   Rules are evaluated in order. The first one to match specifies the
--   role.
newRulesConfigurationType :: NonEmpty MappingRule -> RulesConfigurationType

-- | An array of UnprocessedIdentityId objects, each of which contains an
--   ErrorCode and IdentityId.
--   
--   <i>See:</i> <a>newUnprocessedIdentityId</a> smart constructor.
data UnprocessedIdentityId
UnprocessedIdentityId' :: Maybe Text -> Maybe CognitoErrorCode -> UnprocessedIdentityId

-- | Create a value of <a>UnprocessedIdentityId</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityId:UnprocessedIdentityId'</a>,
--   <a>unprocessedIdentityId_identityId</a> - A unique identifier in the
--   format REGION:GUID.
--   
--   <a>$sel:errorCode:UnprocessedIdentityId'</a>,
--   <a>unprocessedIdentityId_errorCode</a> - The error code indicating the
--   type of error that occurred.
newUnprocessedIdentityId :: UnprocessedIdentityId
