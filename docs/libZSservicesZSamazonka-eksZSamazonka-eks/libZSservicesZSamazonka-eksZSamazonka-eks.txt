-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-eksZSamazonka-eks
@version 2.0


module Network.AWS.EKS.Types.AMITypes
newtype AMITypes
AMITypes' :: Text -> AMITypes
[fromAMITypes] :: AMITypes -> Text
pattern AMITypes_AL2_ARM_64 :: AMITypes
pattern AMITypes_AL2_x86_64 :: AMITypes
pattern AMITypes_AL2_x86_64_GPU :: AMITypes
pattern AMITypes_CUSTOM :: AMITypes
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.AMITypes.AMITypes
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.AMITypes.AMITypes
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.AMITypes.AMITypes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.AMITypes.AMITypes
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.AMITypes.AMITypes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.AMITypes.AMITypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.AMITypes.AMITypes
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.AMITypes.AMITypes
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.AMITypes.AMITypes
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.AMITypes.AMITypes
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.AMITypes.AMITypes
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.AMITypes.AMITypes
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.AMITypes.AMITypes
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.AMITypes.AMITypes
instance GHC.Generics.Generic Network.AWS.EKS.Types.AMITypes.AMITypes
instance GHC.Classes.Ord Network.AWS.EKS.Types.AMITypes.AMITypes
instance GHC.Classes.Eq Network.AWS.EKS.Types.AMITypes.AMITypes
instance GHC.Read.Read Network.AWS.EKS.Types.AMITypes.AMITypes
instance GHC.Show.Show Network.AWS.EKS.Types.AMITypes.AMITypes


module Network.AWS.EKS.Types.AddonIssueCode
newtype AddonIssueCode
AddonIssueCode' :: Text -> AddonIssueCode
[fromAddonIssueCode] :: AddonIssueCode -> Text
pattern AddonIssueCode_AccessDenied :: AddonIssueCode
pattern AddonIssueCode_AdmissionRequestDenied :: AddonIssueCode
pattern AddonIssueCode_ClusterUnreachable :: AddonIssueCode
pattern AddonIssueCode_ConfigurationConflict :: AddonIssueCode
pattern AddonIssueCode_InsufficientNumberOfReplicas :: AddonIssueCode
pattern AddonIssueCode_InternalFailure :: AddonIssueCode
pattern AddonIssueCode_K8sResourceNotFound :: AddonIssueCode
pattern AddonIssueCode_UnsupportedAddonModification :: AddonIssueCode
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance GHC.Generics.Generic Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance GHC.Classes.Ord Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance GHC.Classes.Eq Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance GHC.Read.Read Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode
instance GHC.Show.Show Network.AWS.EKS.Types.AddonIssueCode.AddonIssueCode


module Network.AWS.EKS.Types.AddonIssue

-- | An issue related to an add-on.
--   
--   <i>See:</i> <a>newAddonIssue</a> smart constructor.
data AddonIssue
AddonIssue' :: Maybe [Text] -> Maybe AddonIssueCode -> Maybe Text -> AddonIssue

-- | The resource IDs of the issue.
[$sel:resourceIds:AddonIssue'] :: AddonIssue -> Maybe [Text]

-- | A code that describes the type of issue.
[$sel:code:AddonIssue'] :: AddonIssue -> Maybe AddonIssueCode

-- | A message that provides details about the issue and what might cause
--   it.
[$sel:message:AddonIssue'] :: AddonIssue -> Maybe Text

-- | Create a value of <a>AddonIssue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:AddonIssue'</a>, <a>addonIssue_resourceIds</a> -
--   The resource IDs of the issue.
--   
--   <a>$sel:code:AddonIssue'</a>, <a>addonIssue_code</a> - A code that
--   describes the type of issue.
--   
--   <a>$sel:message:AddonIssue'</a>, <a>addonIssue_message</a> - A message
--   that provides details about the issue and what might cause it.
newAddonIssue :: AddonIssue

-- | The resource IDs of the issue.
addonIssue_resourceIds :: Lens' AddonIssue (Maybe [Text])

-- | A code that describes the type of issue.
addonIssue_code :: Lens' AddonIssue (Maybe AddonIssueCode)

-- | A message that provides details about the issue and what might cause
--   it.
addonIssue_message :: Lens' AddonIssue (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.AddonIssue.AddonIssue
instance GHC.Show.Show Network.AWS.EKS.Types.AddonIssue.AddonIssue
instance GHC.Read.Read Network.AWS.EKS.Types.AddonIssue.AddonIssue
instance GHC.Classes.Eq Network.AWS.EKS.Types.AddonIssue.AddonIssue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.AddonIssue.AddonIssue
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.AddonIssue.AddonIssue
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.AddonIssue.AddonIssue


module Network.AWS.EKS.Types.AddonHealth

-- | The health of the add-on.
--   
--   <i>See:</i> <a>newAddonHealth</a> smart constructor.
data AddonHealth
AddonHealth' :: Maybe [AddonIssue] -> AddonHealth

-- | An object that represents the add-on's health issues.
[$sel:issues:AddonHealth'] :: AddonHealth -> Maybe [AddonIssue]

-- | Create a value of <a>AddonHealth</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:issues:AddonHealth'</a>, <a>addonHealth_issues</a> - An object
--   that represents the add-on's health issues.
newAddonHealth :: AddonHealth

-- | An object that represents the add-on's health issues.
addonHealth_issues :: Lens' AddonHealth (Maybe [AddonIssue])
instance GHC.Generics.Generic Network.AWS.EKS.Types.AddonHealth.AddonHealth
instance GHC.Show.Show Network.AWS.EKS.Types.AddonHealth.AddonHealth
instance GHC.Read.Read Network.AWS.EKS.Types.AddonHealth.AddonHealth
instance GHC.Classes.Eq Network.AWS.EKS.Types.AddonHealth.AddonHealth
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.AddonHealth.AddonHealth
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.AddonHealth.AddonHealth
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.AddonHealth.AddonHealth


module Network.AWS.EKS.Types.AddonStatus
newtype AddonStatus
AddonStatus' :: Text -> AddonStatus
[fromAddonStatus] :: AddonStatus -> Text
pattern AddonStatus_ACTIVE :: AddonStatus
pattern AddonStatus_CREATE_FAILED :: AddonStatus
pattern AddonStatus_CREATING :: AddonStatus
pattern AddonStatus_DEGRADED :: AddonStatus
pattern AddonStatus_DELETE_FAILED :: AddonStatus
pattern AddonStatus_DELETING :: AddonStatus
pattern AddonStatus_UPDATING :: AddonStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance GHC.Generics.Generic Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance GHC.Classes.Ord Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance GHC.Classes.Eq Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance GHC.Read.Read Network.AWS.EKS.Types.AddonStatus.AddonStatus
instance GHC.Show.Show Network.AWS.EKS.Types.AddonStatus.AddonStatus


module Network.AWS.EKS.Types.Addon

-- | An Amazon EKS add-on.
--   
--   <i>See:</i> <a>newAddon</a> smart constructor.
data Addon
Addon' :: Maybe POSIX -> Maybe AddonStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe AddonHealth -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Addon

-- | The date and time that the add-on was last modified.
[$sel:modifiedAt:Addon'] :: Addon -> Maybe POSIX

-- | The status of the add-on.
[$sel:status:Addon'] :: Addon -> Maybe AddonStatus

-- | The name of the add-on.
[$sel:addonName:Addon'] :: Addon -> Maybe Text

-- | The version of the add-on.
[$sel:addonVersion:Addon'] :: Addon -> Maybe Text

-- | The date and time that the add-on was created.
[$sel:createdAt:Addon'] :: Addon -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the IAM role that is bound to the
--   Kubernetes service account used by the add-on.
[$sel:serviceAccountRoleArn:Addon'] :: Addon -> Maybe Text

-- | An object that represents the health of the add-on.
[$sel:health:Addon'] :: Addon -> Maybe AddonHealth

-- | The name of the cluster.
[$sel:clusterName:Addon'] :: Addon -> Maybe Text

-- | The Amazon Resource Name (ARN) of the add-on.
[$sel:addonArn:Addon'] :: Addon -> Maybe Text

-- | The metadata that you apply to the add-on to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Add-on tags do not propagate
--   to any other resources associated with the cluster.
[$sel:tags:Addon'] :: Addon -> Maybe (HashMap Text Text)

-- | Create a value of <a>Addon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modifiedAt:Addon'</a>, <a>addon_modifiedAt</a> - The date and
--   time that the add-on was last modified.
--   
--   <a>$sel:status:Addon'</a>, <a>addon_status</a> - The status of the
--   add-on.
--   
--   <a>$sel:addonName:Addon'</a>, <a>addon_addonName</a> - The name of the
--   add-on.
--   
--   <a>$sel:addonVersion:Addon'</a>, <a>addon_addonVersion</a> - The
--   version of the add-on.
--   
--   <a>$sel:createdAt:Addon'</a>, <a>addon_createdAt</a> - The date and
--   time that the add-on was created.
--   
--   <a>$sel:serviceAccountRoleArn:Addon'</a>,
--   <a>addon_serviceAccountRoleArn</a> - The Amazon Resource Name (ARN) of
--   the IAM role that is bound to the Kubernetes service account used by
--   the add-on.
--   
--   <a>$sel:health:Addon'</a>, <a>addon_health</a> - An object that
--   represents the health of the add-on.
--   
--   <a>$sel:clusterName:Addon'</a>, <a>addon_clusterName</a> - The name of
--   the cluster.
--   
--   <a>$sel:addonArn:Addon'</a>, <a>addon_addonArn</a> - The Amazon
--   Resource Name (ARN) of the add-on.
--   
--   <a>$sel:tags:Addon'</a>, <a>addon_tags</a> - The metadata that you
--   apply to the add-on to assist with categorization and organization.
--   Each tag consists of a key and an optional value, both of which you
--   define. Add-on tags do not propagate to any other resources associated
--   with the cluster.
newAddon :: Addon

-- | The date and time that the add-on was last modified.
addon_modifiedAt :: Lens' Addon (Maybe UTCTime)

-- | The status of the add-on.
addon_status :: Lens' Addon (Maybe AddonStatus)

-- | The name of the add-on.
addon_addonName :: Lens' Addon (Maybe Text)

-- | The version of the add-on.
addon_addonVersion :: Lens' Addon (Maybe Text)

-- | The date and time that the add-on was created.
addon_createdAt :: Lens' Addon (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the IAM role that is bound to the
--   Kubernetes service account used by the add-on.
addon_serviceAccountRoleArn :: Lens' Addon (Maybe Text)

-- | An object that represents the health of the add-on.
addon_health :: Lens' Addon (Maybe AddonHealth)

-- | The name of the cluster.
addon_clusterName :: Lens' Addon (Maybe Text)

-- | The Amazon Resource Name (ARN) of the add-on.
addon_addonArn :: Lens' Addon (Maybe Text)

-- | The metadata that you apply to the add-on to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Add-on tags do not propagate
--   to any other resources associated with the cluster.
addon_tags :: Lens' Addon (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.EKS.Types.Addon.Addon
instance GHC.Show.Show Network.AWS.EKS.Types.Addon.Addon
instance GHC.Read.Read Network.AWS.EKS.Types.Addon.Addon
instance GHC.Classes.Eq Network.AWS.EKS.Types.Addon.Addon
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.Addon.Addon
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.Addon.Addon
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.Addon.Addon


module Network.AWS.EKS.Types.AutoScalingGroup

-- | An Auto Scaling group that is associated with an Amazon EKS managed
--   node group.
--   
--   <i>See:</i> <a>newAutoScalingGroup</a> smart constructor.
data AutoScalingGroup
AutoScalingGroup' :: Maybe Text -> AutoScalingGroup

-- | The name of the Auto Scaling group associated with an Amazon EKS
--   managed node group.
[$sel:name:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | Create a value of <a>AutoScalingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AutoScalingGroup'</a>, <a>autoScalingGroup_name</a> - The
--   name of the Auto Scaling group associated with an Amazon EKS managed
--   node group.
newAutoScalingGroup :: AutoScalingGroup

-- | The name of the Auto Scaling group associated with an Amazon EKS
--   managed node group.
autoScalingGroup_name :: Lens' AutoScalingGroup (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.AutoScalingGroup.AutoScalingGroup
instance GHC.Show.Show Network.AWS.EKS.Types.AutoScalingGroup.AutoScalingGroup
instance GHC.Read.Read Network.AWS.EKS.Types.AutoScalingGroup.AutoScalingGroup
instance GHC.Classes.Eq Network.AWS.EKS.Types.AutoScalingGroup.AutoScalingGroup
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.AutoScalingGroup.AutoScalingGroup
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.AutoScalingGroup.AutoScalingGroup
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.AutoScalingGroup.AutoScalingGroup


module Network.AWS.EKS.Types.CapacityTypes
newtype CapacityTypes
CapacityTypes' :: Text -> CapacityTypes
[fromCapacityTypes] :: CapacityTypes -> Text
pattern CapacityTypes_ON_DEMAND :: CapacityTypes
pattern CapacityTypes_SPOT :: CapacityTypes
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance GHC.Generics.Generic Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance GHC.Classes.Ord Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance GHC.Classes.Eq Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance GHC.Read.Read Network.AWS.EKS.Types.CapacityTypes.CapacityTypes
instance GHC.Show.Show Network.AWS.EKS.Types.CapacityTypes.CapacityTypes


module Network.AWS.EKS.Types.Certificate

-- | An object representing the <tt>certificate-authority-data</tt> for
--   your cluster.
--   
--   <i>See:</i> <a>newCertificate</a> smart constructor.
data Certificate
Certificate' :: Maybe Text -> Certificate

-- | The Base64-encoded certificate data required to communicate with your
--   cluster. Add this to the <tt>certificate-authority-data</tt> section
--   of the <tt>kubeconfig</tt> file for your cluster.
[$sel:data':Certificate'] :: Certificate -> Maybe Text

-- | Create a value of <a>Certificate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':Certificate'</a>, <a>certificate_data</a> - The
--   Base64-encoded certificate data required to communicate with your
--   cluster. Add this to the <tt>certificate-authority-data</tt> section
--   of the <tt>kubeconfig</tt> file for your cluster.
newCertificate :: Certificate

-- | The Base64-encoded certificate data required to communicate with your
--   cluster. Add this to the <tt>certificate-authority-data</tt> section
--   of the <tt>kubeconfig</tt> file for your cluster.
certificate_data :: Lens' Certificate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.Certificate.Certificate
instance GHC.Show.Show Network.AWS.EKS.Types.Certificate.Certificate
instance GHC.Read.Read Network.AWS.EKS.Types.Certificate.Certificate
instance GHC.Classes.Eq Network.AWS.EKS.Types.Certificate.Certificate
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.Certificate.Certificate
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.Certificate.Certificate
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.Certificate.Certificate


module Network.AWS.EKS.Types.ClusterStatus
newtype ClusterStatus
ClusterStatus' :: Text -> ClusterStatus
[fromClusterStatus] :: ClusterStatus -> Text
pattern ClusterStatus_ACTIVE :: ClusterStatus
pattern ClusterStatus_CREATING :: ClusterStatus
pattern ClusterStatus_DELETING :: ClusterStatus
pattern ClusterStatus_FAILED :: ClusterStatus
pattern ClusterStatus_PENDING :: ClusterStatus
pattern ClusterStatus_UPDATING :: ClusterStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance GHC.Generics.Generic Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance GHC.Classes.Ord Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance GHC.Classes.Eq Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance GHC.Read.Read Network.AWS.EKS.Types.ClusterStatus.ClusterStatus
instance GHC.Show.Show Network.AWS.EKS.Types.ClusterStatus.ClusterStatus


module Network.AWS.EKS.Types.Compatibility

-- | Compatibility information.
--   
--   <i>See:</i> <a>newCompatibility</a> smart constructor.
data Compatibility
Compatibility' :: Maybe Bool -> Maybe Text -> Maybe [Text] -> Compatibility

-- | The supported default version.
[$sel:defaultVersion:Compatibility'] :: Compatibility -> Maybe Bool

-- | The supported Kubernetes version of the cluster.
[$sel:clusterVersion:Compatibility'] :: Compatibility -> Maybe Text

-- | The supported compute platform.
[$sel:platformVersions:Compatibility'] :: Compatibility -> Maybe [Text]

-- | Create a value of <a>Compatibility</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultVersion:Compatibility'</a>,
--   <a>compatibility_defaultVersion</a> - The supported default version.
--   
--   <a>$sel:clusterVersion:Compatibility'</a>,
--   <a>compatibility_clusterVersion</a> - The supported Kubernetes version
--   of the cluster.
--   
--   <a>$sel:platformVersions:Compatibility'</a>,
--   <a>compatibility_platformVersions</a> - The supported compute
--   platform.
newCompatibility :: Compatibility

-- | The supported default version.
compatibility_defaultVersion :: Lens' Compatibility (Maybe Bool)

-- | The supported Kubernetes version of the cluster.
compatibility_clusterVersion :: Lens' Compatibility (Maybe Text)

-- | The supported compute platform.
compatibility_platformVersions :: Lens' Compatibility (Maybe [Text])
instance GHC.Generics.Generic Network.AWS.EKS.Types.Compatibility.Compatibility
instance GHC.Show.Show Network.AWS.EKS.Types.Compatibility.Compatibility
instance GHC.Read.Read Network.AWS.EKS.Types.Compatibility.Compatibility
instance GHC.Classes.Eq Network.AWS.EKS.Types.Compatibility.Compatibility
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.Compatibility.Compatibility
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.Compatibility.Compatibility
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.Compatibility.Compatibility


module Network.AWS.EKS.Types.AddonVersionInfo

-- | Information about an add-on version.
--   
--   <i>See:</i> <a>newAddonVersionInfo</a> smart constructor.
data AddonVersionInfo
AddonVersionInfo' :: Maybe Text -> Maybe [Text] -> Maybe [Compatibility] -> AddonVersionInfo

-- | The version of the add-on.
[$sel:addonVersion:AddonVersionInfo'] :: AddonVersionInfo -> Maybe Text

-- | The architectures that the version supports.
[$sel:architecture:AddonVersionInfo'] :: AddonVersionInfo -> Maybe [Text]

-- | An object that represents the compatibilities of a version.
[$sel:compatibilities:AddonVersionInfo'] :: AddonVersionInfo -> Maybe [Compatibility]

-- | Create a value of <a>AddonVersionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonVersion:AddonVersionInfo'</a>,
--   <a>addonVersionInfo_addonVersion</a> - The version of the add-on.
--   
--   <a>$sel:architecture:AddonVersionInfo'</a>,
--   <a>addonVersionInfo_architecture</a> - The architectures that the
--   version supports.
--   
--   <a>$sel:compatibilities:AddonVersionInfo'</a>,
--   <a>addonVersionInfo_compatibilities</a> - An object that represents
--   the compatibilities of a version.
newAddonVersionInfo :: AddonVersionInfo

-- | The version of the add-on.
addonVersionInfo_addonVersion :: Lens' AddonVersionInfo (Maybe Text)

-- | The architectures that the version supports.
addonVersionInfo_architecture :: Lens' AddonVersionInfo (Maybe [Text])

-- | An object that represents the compatibilities of a version.
addonVersionInfo_compatibilities :: Lens' AddonVersionInfo (Maybe [Compatibility])
instance GHC.Generics.Generic Network.AWS.EKS.Types.AddonVersionInfo.AddonVersionInfo
instance GHC.Show.Show Network.AWS.EKS.Types.AddonVersionInfo.AddonVersionInfo
instance GHC.Read.Read Network.AWS.EKS.Types.AddonVersionInfo.AddonVersionInfo
instance GHC.Classes.Eq Network.AWS.EKS.Types.AddonVersionInfo.AddonVersionInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.AddonVersionInfo.AddonVersionInfo
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.AddonVersionInfo.AddonVersionInfo
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.AddonVersionInfo.AddonVersionInfo


module Network.AWS.EKS.Types.AddonInfo

-- | Information about an add-on.
--   
--   <i>See:</i> <a>newAddonInfo</a> smart constructor.
data AddonInfo
AddonInfo' :: Maybe Text -> Maybe Text -> Maybe [AddonVersionInfo] -> AddonInfo

-- | The name of the add-on.
[$sel:addonName:AddonInfo'] :: AddonInfo -> Maybe Text

-- | The type of the add-on.
[$sel:type':AddonInfo'] :: AddonInfo -> Maybe Text

-- | An object that represents information about available add-on versions
--   and compatible Kubernetes versions.
[$sel:addonVersions:AddonInfo'] :: AddonInfo -> Maybe [AddonVersionInfo]

-- | Create a value of <a>AddonInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonName:AddonInfo'</a>, <a>addonInfo_addonName</a> - The
--   name of the add-on.
--   
--   <a>$sel:type':AddonInfo'</a>, <a>addonInfo_type</a> - The type of the
--   add-on.
--   
--   <a>$sel:addonVersions:AddonInfo'</a>, <a>addonInfo_addonVersions</a> -
--   An object that represents information about available add-on versions
--   and compatible Kubernetes versions.
newAddonInfo :: AddonInfo

-- | The name of the add-on.
addonInfo_addonName :: Lens' AddonInfo (Maybe Text)

-- | The type of the add-on.
addonInfo_type :: Lens' AddonInfo (Maybe Text)

-- | An object that represents information about available add-on versions
--   and compatible Kubernetes versions.
addonInfo_addonVersions :: Lens' AddonInfo (Maybe [AddonVersionInfo])
instance GHC.Generics.Generic Network.AWS.EKS.Types.AddonInfo.AddonInfo
instance GHC.Show.Show Network.AWS.EKS.Types.AddonInfo.AddonInfo
instance GHC.Read.Read Network.AWS.EKS.Types.AddonInfo.AddonInfo
instance GHC.Classes.Eq Network.AWS.EKS.Types.AddonInfo.AddonInfo
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.AddonInfo.AddonInfo
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.AddonInfo.AddonInfo
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.AddonInfo.AddonInfo


module Network.AWS.EKS.Types.ConfigStatus
newtype ConfigStatus
ConfigStatus' :: Text -> ConfigStatus
[fromConfigStatus] :: ConfigStatus -> Text
pattern ConfigStatus_ACTIVE :: ConfigStatus
pattern ConfigStatus_CREATING :: ConfigStatus
pattern ConfigStatus_DELETING :: ConfigStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance GHC.Generics.Generic Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance GHC.Classes.Ord Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance GHC.Classes.Eq Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance GHC.Read.Read Network.AWS.EKS.Types.ConfigStatus.ConfigStatus
instance GHC.Show.Show Network.AWS.EKS.Types.ConfigStatus.ConfigStatus


module Network.AWS.EKS.Types.ConnectorConfigProvider
newtype ConnectorConfigProvider
ConnectorConfigProvider' :: Text -> ConnectorConfigProvider
[fromConnectorConfigProvider] :: ConnectorConfigProvider -> Text
pattern ConnectorConfigProvider_AKS :: ConnectorConfigProvider
pattern ConnectorConfigProvider_ANTHOS :: ConnectorConfigProvider
pattern ConnectorConfigProvider_EC2 :: ConnectorConfigProvider
pattern ConnectorConfigProvider_EKS_ANYWHERE :: ConnectorConfigProvider
pattern ConnectorConfigProvider_GKE :: ConnectorConfigProvider
pattern ConnectorConfigProvider_OPENSHIFT :: ConnectorConfigProvider
pattern ConnectorConfigProvider_OTHER :: ConnectorConfigProvider
pattern ConnectorConfigProvider_RANCHER :: ConnectorConfigProvider
pattern ConnectorConfigProvider_TANZU :: ConnectorConfigProvider
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance GHC.Generics.Generic Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance GHC.Classes.Ord Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance GHC.Classes.Eq Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance GHC.Read.Read Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider
instance GHC.Show.Show Network.AWS.EKS.Types.ConnectorConfigProvider.ConnectorConfigProvider


module Network.AWS.EKS.Types.ConnectorConfigRequest

-- | The configuration sent to a cluster for configuration.
--   
--   <i>See:</i> <a>newConnectorConfigRequest</a> smart constructor.
data ConnectorConfigRequest
ConnectorConfigRequest' :: Text -> ConnectorConfigProvider -> ConnectorConfigRequest

-- | The Amazon Resource Name (ARN) of the role that is authorized to
--   request the connector configuration.
[$sel:roleArn:ConnectorConfigRequest'] :: ConnectorConfigRequest -> Text

-- | The cloud provider for the target cluster to connect.
[$sel:provider:ConnectorConfigRequest'] :: ConnectorConfigRequest -> ConnectorConfigProvider

-- | Create a value of <a>ConnectorConfigRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:ConnectorConfigRequest'</a>,
--   <a>connectorConfigRequest_roleArn</a> - The Amazon Resource Name (ARN)
--   of the role that is authorized to request the connector configuration.
--   
--   <a>$sel:provider:ConnectorConfigRequest'</a>,
--   <a>connectorConfigRequest_provider</a> - The cloud provider for the
--   target cluster to connect.
newConnectorConfigRequest :: Text -> ConnectorConfigProvider -> ConnectorConfigRequest

-- | The Amazon Resource Name (ARN) of the role that is authorized to
--   request the connector configuration.
connectorConfigRequest_roleArn :: Lens' ConnectorConfigRequest Text

-- | The cloud provider for the target cluster to connect.
connectorConfigRequest_provider :: Lens' ConnectorConfigRequest ConnectorConfigProvider
instance GHC.Generics.Generic Network.AWS.EKS.Types.ConnectorConfigRequest.ConnectorConfigRequest
instance GHC.Show.Show Network.AWS.EKS.Types.ConnectorConfigRequest.ConnectorConfigRequest
instance GHC.Read.Read Network.AWS.EKS.Types.ConnectorConfigRequest.ConnectorConfigRequest
instance GHC.Classes.Eq Network.AWS.EKS.Types.ConnectorConfigRequest.ConnectorConfigRequest
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.ConnectorConfigRequest.ConnectorConfigRequest
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.ConnectorConfigRequest.ConnectorConfigRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.ConnectorConfigRequest.ConnectorConfigRequest


module Network.AWS.EKS.Types.ConnectorConfigResponse

-- | The full description of your connected cluster.
--   
--   <i>See:</i> <a>newConnectorConfigResponse</a> smart constructor.
data ConnectorConfigResponse
ConnectorConfigResponse' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> ConnectorConfigResponse

-- | A unique code associated with the cluster for registration purposes.
[$sel:activationCode:ConnectorConfigResponse'] :: ConnectorConfigResponse -> Maybe Text

-- | A unique ID associated with the cluster for registration purposes.
[$sel:activationId:ConnectorConfigResponse'] :: ConnectorConfigResponse -> Maybe Text

-- | The expiration time of the connected cluster. The cluster's YAML file
--   must be applied through the native provider.
[$sel:activationExpiry:ConnectorConfigResponse'] :: ConnectorConfigResponse -> Maybe POSIX

-- | The cluster's cloud service provider.
[$sel:provider:ConnectorConfigResponse'] :: ConnectorConfigResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the role that is used by the EKS
--   connector to communicate with AWS services from the connected
--   Kubernetes cluster.
[$sel:roleArn:ConnectorConfigResponse'] :: ConnectorConfigResponse -> Maybe Text

-- | Create a value of <a>ConnectorConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activationCode:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_activationCode</a> - A unique code
--   associated with the cluster for registration purposes.
--   
--   <a>$sel:activationId:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_activationId</a> - A unique ID associated
--   with the cluster for registration purposes.
--   
--   <a>$sel:activationExpiry:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_activationExpiry</a> - The expiration time
--   of the connected cluster. The cluster's YAML file must be applied
--   through the native provider.
--   
--   <a>$sel:provider:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_provider</a> - The cluster's cloud service
--   provider.
--   
--   <a>$sel:roleArn:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_roleArn</a> - The Amazon Resource Name
--   (ARN) of the role that is used by the EKS connector to communicate
--   with AWS services from the connected Kubernetes cluster.
newConnectorConfigResponse :: ConnectorConfigResponse

-- | A unique code associated with the cluster for registration purposes.
connectorConfigResponse_activationCode :: Lens' ConnectorConfigResponse (Maybe Text)

-- | A unique ID associated with the cluster for registration purposes.
connectorConfigResponse_activationId :: Lens' ConnectorConfigResponse (Maybe Text)

-- | The expiration time of the connected cluster. The cluster's YAML file
--   must be applied through the native provider.
connectorConfigResponse_activationExpiry :: Lens' ConnectorConfigResponse (Maybe UTCTime)

-- | The cluster's cloud service provider.
connectorConfigResponse_provider :: Lens' ConnectorConfigResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the role that is used by the EKS
--   connector to communicate with AWS services from the connected
--   Kubernetes cluster.
connectorConfigResponse_roleArn :: Lens' ConnectorConfigResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.ConnectorConfigResponse.ConnectorConfigResponse
instance GHC.Show.Show Network.AWS.EKS.Types.ConnectorConfigResponse.ConnectorConfigResponse
instance GHC.Read.Read Network.AWS.EKS.Types.ConnectorConfigResponse.ConnectorConfigResponse
instance GHC.Classes.Eq Network.AWS.EKS.Types.ConnectorConfigResponse.ConnectorConfigResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.ConnectorConfigResponse.ConnectorConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.ConnectorConfigResponse.ConnectorConfigResponse
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.ConnectorConfigResponse.ConnectorConfigResponse


module Network.AWS.EKS.Types.EKSErrorCode
newtype EKSErrorCode
EKSErrorCode' :: Text -> EKSErrorCode
[fromEKSErrorCode] :: EKSErrorCode -> Text
pattern EKSErrorCode_AccessDenied :: EKSErrorCode
pattern EKSErrorCode_AdmissionRequestDenied :: EKSErrorCode
pattern EKSErrorCode_ClusterUnreachable :: EKSErrorCode
pattern EKSErrorCode_ConfigurationConflict :: EKSErrorCode
pattern EKSErrorCode_EniLimitReached :: EKSErrorCode
pattern EKSErrorCode_InsufficientFreeAddresses :: EKSErrorCode
pattern EKSErrorCode_InsufficientNumberOfReplicas :: EKSErrorCode
pattern EKSErrorCode_IpNotAvailable :: EKSErrorCode
pattern EKSErrorCode_K8sResourceNotFound :: EKSErrorCode
pattern EKSErrorCode_NodeCreationFailure :: EKSErrorCode
pattern EKSErrorCode_OperationNotPermitted :: EKSErrorCode
pattern EKSErrorCode_PodEvictionFailure :: EKSErrorCode
pattern EKSErrorCode_SecurityGroupNotFound :: EKSErrorCode
pattern EKSErrorCode_SubnetNotFound :: EKSErrorCode
pattern EKSErrorCode_Unknown :: EKSErrorCode
pattern EKSErrorCode_UnsupportedAddonModification :: EKSErrorCode
pattern EKSErrorCode_VpcIdNotFound :: EKSErrorCode
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance GHC.Generics.Generic Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance GHC.Classes.Ord Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance GHC.Classes.Eq Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance GHC.Read.Read Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode
instance GHC.Show.Show Network.AWS.EKS.Types.EKSErrorCode.EKSErrorCode


module Network.AWS.EKS.Types.ErrorDetail

-- | An object representing an error when an asynchronous operation fails.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe [Text] -> Maybe EKSErrorCode -> Maybe Text -> ErrorDetail

-- | An optional field that contains the resource IDs associated with the
--   error.
[$sel:resourceIds:ErrorDetail'] :: ErrorDetail -> Maybe [Text]

-- | A brief description of the error.
--   
--   <ul>
--   <li><b>SubnetNotFound</b>: We couldn't find one of the subnets
--   associated with the cluster.</li>
--   <li><b>SecurityGroupNotFound</b>: We couldn't find one of the security
--   groups associated with the cluster.</li>
--   <li><b>EniLimitReached</b>: You have reached the elastic network
--   interface limit for your account.</li>
--   <li><b>IpNotAvailable</b>: A subnet associated with the cluster
--   doesn't have any free IP addresses.</li>
--   <li><b>AccessDenied</b>: You don't have permissions to perform the
--   specified operation.</li>
--   <li><b>OperationNotPermitted</b>: The service role associated with the
--   cluster doesn't have the required access permissions for Amazon
--   EKS.</li>
--   <li><b>VpcIdNotFound</b>: We couldn't find the VPC associated with the
--   cluster.</li>
--   </ul>
[$sel:errorCode:ErrorDetail'] :: ErrorDetail -> Maybe EKSErrorCode

-- | A more complete description of the error.
[$sel:errorMessage:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:ErrorDetail'</a>, <a>errorDetail_resourceIds</a> -
--   An optional field that contains the resource IDs associated with the
--   error.
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - A
--   brief description of the error.
--   
--   <ul>
--   <li><b>SubnetNotFound</b>: We couldn't find one of the subnets
--   associated with the cluster.</li>
--   <li><b>SecurityGroupNotFound</b>: We couldn't find one of the security
--   groups associated with the cluster.</li>
--   <li><b>EniLimitReached</b>: You have reached the elastic network
--   interface limit for your account.</li>
--   <li><b>IpNotAvailable</b>: A subnet associated with the cluster
--   doesn't have any free IP addresses.</li>
--   <li><b>AccessDenied</b>: You don't have permissions to perform the
--   specified operation.</li>
--   <li><b>OperationNotPermitted</b>: The service role associated with the
--   cluster doesn't have the required access permissions for Amazon
--   EKS.</li>
--   <li><b>VpcIdNotFound</b>: We couldn't find the VPC associated with the
--   cluster.</li>
--   </ul>
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - A more complete description of the error.
newErrorDetail :: ErrorDetail

-- | An optional field that contains the resource IDs associated with the
--   error.
errorDetail_resourceIds :: Lens' ErrorDetail (Maybe [Text])

-- | A brief description of the error.
--   
--   <ul>
--   <li><b>SubnetNotFound</b>: We couldn't find one of the subnets
--   associated with the cluster.</li>
--   <li><b>SecurityGroupNotFound</b>: We couldn't find one of the security
--   groups associated with the cluster.</li>
--   <li><b>EniLimitReached</b>: You have reached the elastic network
--   interface limit for your account.</li>
--   <li><b>IpNotAvailable</b>: A subnet associated with the cluster
--   doesn't have any free IP addresses.</li>
--   <li><b>AccessDenied</b>: You don't have permissions to perform the
--   specified operation.</li>
--   <li><b>OperationNotPermitted</b>: The service role associated with the
--   cluster doesn't have the required access permissions for Amazon
--   EKS.</li>
--   <li><b>VpcIdNotFound</b>: We couldn't find the VPC associated with the
--   cluster.</li>
--   </ul>
errorDetail_errorCode :: Lens' ErrorDetail (Maybe EKSErrorCode)

-- | A more complete description of the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.ErrorDetail.ErrorDetail
instance GHC.Show.Show Network.AWS.EKS.Types.ErrorDetail.ErrorDetail
instance GHC.Read.Read Network.AWS.EKS.Types.ErrorDetail.ErrorDetail
instance GHC.Classes.Eq Network.AWS.EKS.Types.ErrorDetail.ErrorDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.ErrorDetail.ErrorDetail
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.ErrorDetail.ErrorDetail
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.ErrorDetail.ErrorDetail


module Network.AWS.EKS.Types.FargateProfileSelector

-- | An object representing an Fargate profile selector.
--   
--   <i>See:</i> <a>newFargateProfileSelector</a> smart constructor.
data FargateProfileSelector
FargateProfileSelector' :: Maybe Text -> Maybe (HashMap Text Text) -> FargateProfileSelector

-- | The Kubernetes namespace that the selector should match.
[$sel:namespace:FargateProfileSelector'] :: FargateProfileSelector -> Maybe Text

-- | The Kubernetes labels that the selector should match. A pod must
--   contain all of the labels that are specified in the selector for it to
--   be considered a match.
[$sel:labels:FargateProfileSelector'] :: FargateProfileSelector -> Maybe (HashMap Text Text)

-- | Create a value of <a>FargateProfileSelector</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:FargateProfileSelector'</a>,
--   <a>fargateProfileSelector_namespace</a> - The Kubernetes namespace
--   that the selector should match.
--   
--   <a>$sel:labels:FargateProfileSelector'</a>,
--   <a>fargateProfileSelector_labels</a> - The Kubernetes labels that the
--   selector should match. A pod must contain all of the labels that are
--   specified in the selector for it to be considered a match.
newFargateProfileSelector :: FargateProfileSelector

-- | The Kubernetes namespace that the selector should match.
fargateProfileSelector_namespace :: Lens' FargateProfileSelector (Maybe Text)

-- | The Kubernetes labels that the selector should match. A pod must
--   contain all of the labels that are specified in the selector for it to
--   be considered a match.
fargateProfileSelector_labels :: Lens' FargateProfileSelector (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.EKS.Types.FargateProfileSelector.FargateProfileSelector
instance GHC.Show.Show Network.AWS.EKS.Types.FargateProfileSelector.FargateProfileSelector
instance GHC.Read.Read Network.AWS.EKS.Types.FargateProfileSelector.FargateProfileSelector
instance GHC.Classes.Eq Network.AWS.EKS.Types.FargateProfileSelector.FargateProfileSelector
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.FargateProfileSelector.FargateProfileSelector
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.FargateProfileSelector.FargateProfileSelector
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.FargateProfileSelector.FargateProfileSelector
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.FargateProfileSelector.FargateProfileSelector


module Network.AWS.EKS.Types.FargateProfileStatus
newtype FargateProfileStatus
FargateProfileStatus' :: Text -> FargateProfileStatus
[fromFargateProfileStatus] :: FargateProfileStatus -> Text
pattern FargateProfileStatus_ACTIVE :: FargateProfileStatus
pattern FargateProfileStatus_CREATE_FAILED :: FargateProfileStatus
pattern FargateProfileStatus_CREATING :: FargateProfileStatus
pattern FargateProfileStatus_DELETE_FAILED :: FargateProfileStatus
pattern FargateProfileStatus_DELETING :: FargateProfileStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance GHC.Generics.Generic Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance GHC.Classes.Ord Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance GHC.Classes.Eq Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance GHC.Read.Read Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus
instance GHC.Show.Show Network.AWS.EKS.Types.FargateProfileStatus.FargateProfileStatus


module Network.AWS.EKS.Types.FargateProfile

-- | An object representing an Fargate profile.
--   
--   <i>See:</i> <a>newFargateProfile</a> smart constructor.
data FargateProfile
FargateProfile' :: Maybe Text -> Maybe FargateProfileStatus -> Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [FargateProfileSelector] -> Maybe (HashMap Text Text) -> FargateProfile

-- | The full Amazon Resource Name (ARN) of the Fargate profile.
[$sel:fargateProfileArn:FargateProfile'] :: FargateProfile -> Maybe Text

-- | The current status of the Fargate profile.
[$sel:status:FargateProfile'] :: FargateProfile -> Maybe FargateProfileStatus

-- | The Unix epoch timestamp in seconds for when the Fargate profile was
--   created.
[$sel:createdAt:FargateProfile'] :: FargateProfile -> Maybe POSIX

-- | The IDs of subnets to launch pods into.
[$sel:subnets:FargateProfile'] :: FargateProfile -> Maybe [Text]

-- | The name of the Amazon EKS cluster that the Fargate profile belongs
--   to.
[$sel:clusterName:FargateProfile'] :: FargateProfile -> Maybe Text

-- | The Amazon Resource Name (ARN) of the pod execution role to use for
--   pods that match the selectors in the Fargate profile. For more
--   information, see <a>Pod Execution Role</a> in the <i>Amazon EKS User
--   Guide</i>.
[$sel:podExecutionRoleArn:FargateProfile'] :: FargateProfile -> Maybe Text

-- | The name of the Fargate profile.
[$sel:fargateProfileName:FargateProfile'] :: FargateProfile -> Maybe Text

-- | The selectors to match for pods to use this Fargate profile.
[$sel:selectors:FargateProfile'] :: FargateProfile -> Maybe [FargateProfileSelector]

-- | The metadata applied to the Fargate profile to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Fargate profile tags do not
--   propagate to any other resources associated with the Fargate profile,
--   such as the pods that are scheduled with it.
[$sel:tags:FargateProfile'] :: FargateProfile -> Maybe (HashMap Text Text)

-- | Create a value of <a>FargateProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fargateProfileArn:FargateProfile'</a>,
--   <a>fargateProfile_fargateProfileArn</a> - The full Amazon Resource
--   Name (ARN) of the Fargate profile.
--   
--   <a>$sel:status:FargateProfile'</a>, <a>fargateProfile_status</a> - The
--   current status of the Fargate profile.
--   
--   <a>$sel:createdAt:FargateProfile'</a>, <a>fargateProfile_createdAt</a>
--   - The Unix epoch timestamp in seconds for when the Fargate profile was
--   created.
--   
--   <a>$sel:subnets:FargateProfile'</a>, <a>fargateProfile_subnets</a> -
--   The IDs of subnets to launch pods into.
--   
--   <a>$sel:clusterName:FargateProfile'</a>,
--   <a>fargateProfile_clusterName</a> - The name of the Amazon EKS cluster
--   that the Fargate profile belongs to.
--   
--   <a>$sel:podExecutionRoleArn:FargateProfile'</a>,
--   <a>fargateProfile_podExecutionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the pod execution role to use for pods that match the
--   selectors in the Fargate profile. For more information, see <a>Pod
--   Execution Role</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:fargateProfileName:FargateProfile'</a>,
--   <a>fargateProfile_fargateProfileName</a> - The name of the Fargate
--   profile.
--   
--   <a>$sel:selectors:FargateProfile'</a>, <a>fargateProfile_selectors</a>
--   - The selectors to match for pods to use this Fargate profile.
--   
--   <a>$sel:tags:FargateProfile'</a>, <a>fargateProfile_tags</a> - The
--   metadata applied to the Fargate profile to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Fargate profile tags do not propagate to any
--   other resources associated with the Fargate profile, such as the pods
--   that are scheduled with it.
newFargateProfile :: FargateProfile

-- | The full Amazon Resource Name (ARN) of the Fargate profile.
fargateProfile_fargateProfileArn :: Lens' FargateProfile (Maybe Text)

-- | The current status of the Fargate profile.
fargateProfile_status :: Lens' FargateProfile (Maybe FargateProfileStatus)

-- | The Unix epoch timestamp in seconds for when the Fargate profile was
--   created.
fargateProfile_createdAt :: Lens' FargateProfile (Maybe UTCTime)

-- | The IDs of subnets to launch pods into.
fargateProfile_subnets :: Lens' FargateProfile (Maybe [Text])

-- | The name of the Amazon EKS cluster that the Fargate profile belongs
--   to.
fargateProfile_clusterName :: Lens' FargateProfile (Maybe Text)

-- | The Amazon Resource Name (ARN) of the pod execution role to use for
--   pods that match the selectors in the Fargate profile. For more
--   information, see <a>Pod Execution Role</a> in the <i>Amazon EKS User
--   Guide</i>.
fargateProfile_podExecutionRoleArn :: Lens' FargateProfile (Maybe Text)

-- | The name of the Fargate profile.
fargateProfile_fargateProfileName :: Lens' FargateProfile (Maybe Text)

-- | The selectors to match for pods to use this Fargate profile.
fargateProfile_selectors :: Lens' FargateProfile (Maybe [FargateProfileSelector])

-- | The metadata applied to the Fargate profile to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Fargate profile tags do not
--   propagate to any other resources associated with the Fargate profile,
--   such as the pods that are scheduled with it.
fargateProfile_tags :: Lens' FargateProfile (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.EKS.Types.FargateProfile.FargateProfile
instance GHC.Show.Show Network.AWS.EKS.Types.FargateProfile.FargateProfile
instance GHC.Read.Read Network.AWS.EKS.Types.FargateProfile.FargateProfile
instance GHC.Classes.Eq Network.AWS.EKS.Types.FargateProfile.FargateProfile
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.FargateProfile.FargateProfile
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.FargateProfile.FargateProfile
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.FargateProfile.FargateProfile


module Network.AWS.EKS.Types.IdentityProviderConfig

-- | An object representing an identity provider configuration.
--   
--   <i>See:</i> <a>newIdentityProviderConfig</a> smart constructor.
data IdentityProviderConfig
IdentityProviderConfig' :: Text -> Text -> IdentityProviderConfig

-- | The type of the identity provider configuration.
[$sel:type':IdentityProviderConfig'] :: IdentityProviderConfig -> Text

-- | The name of the identity provider configuration.
[$sel:name:IdentityProviderConfig'] :: IdentityProviderConfig -> Text

-- | Create a value of <a>IdentityProviderConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':IdentityProviderConfig'</a>,
--   <a>identityProviderConfig_type</a> - The type of the identity provider
--   configuration.
--   
--   <a>$sel:name:IdentityProviderConfig'</a>,
--   <a>identityProviderConfig_name</a> - The name of the identity provider
--   configuration.
newIdentityProviderConfig :: Text -> Text -> IdentityProviderConfig

-- | The type of the identity provider configuration.
identityProviderConfig_type :: Lens' IdentityProviderConfig Text

-- | The name of the identity provider configuration.
identityProviderConfig_name :: Lens' IdentityProviderConfig Text
instance GHC.Generics.Generic Network.AWS.EKS.Types.IdentityProviderConfig.IdentityProviderConfig
instance GHC.Show.Show Network.AWS.EKS.Types.IdentityProviderConfig.IdentityProviderConfig
instance GHC.Read.Read Network.AWS.EKS.Types.IdentityProviderConfig.IdentityProviderConfig
instance GHC.Classes.Eq Network.AWS.EKS.Types.IdentityProviderConfig.IdentityProviderConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.IdentityProviderConfig.IdentityProviderConfig
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.IdentityProviderConfig.IdentityProviderConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.IdentityProviderConfig.IdentityProviderConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.IdentityProviderConfig.IdentityProviderConfig


module Network.AWS.EKS.Types.KubernetesNetworkConfigRequest

-- | The Kubernetes network configuration for the cluster.
--   
--   <i>See:</i> <a>newKubernetesNetworkConfigRequest</a> smart
--   constructor.
data KubernetesNetworkConfigRequest
KubernetesNetworkConfigRequest' :: Maybe Text -> KubernetesNetworkConfigRequest

-- | The CIDR block to assign Kubernetes service IP addresses from. If you
--   don't specify a block, Kubernetes assigns addresses from either the
--   10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you
--   specify a block that does not overlap with resources in other networks
--   that are peered or connected to your VPC. The block must meet the
--   following requirements:
--   
--   <ul>
--   <li>Within one of the following private IP address blocks: 10.0.0.0/8,
--   172.16.0.0.0/12, or 192.168.0.0/16.</li>
--   <li>Doesn't overlap with any CIDR block assigned to the VPC that you
--   selected for VPC.</li>
--   <li>Between /24 and /12.</li>
--   </ul>
--   
--   You can only specify a custom CIDR block when you create a cluster and
--   can't change this value once the cluster is created.
[$sel:serviceIpv4Cidr:KubernetesNetworkConfigRequest'] :: KubernetesNetworkConfigRequest -> Maybe Text

-- | Create a value of <a>KubernetesNetworkConfigRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIpv4Cidr:KubernetesNetworkConfigRequest'</a>,
--   <a>kubernetesNetworkConfigRequest_serviceIpv4Cidr</a> - The CIDR block
--   to assign Kubernetes service IP addresses from. If you don't specify a
--   block, Kubernetes assigns addresses from either the 10.100.0.0/16 or
--   172.20.0.0/16 CIDR blocks. We recommend that you specify a block that
--   does not overlap with resources in other networks that are peered or
--   connected to your VPC. The block must meet the following requirements:
--   
--   <ul>
--   <li>Within one of the following private IP address blocks: 10.0.0.0/8,
--   172.16.0.0.0/12, or 192.168.0.0/16.</li>
--   <li>Doesn't overlap with any CIDR block assigned to the VPC that you
--   selected for VPC.</li>
--   <li>Between /24 and /12.</li>
--   </ul>
--   
--   You can only specify a custom CIDR block when you create a cluster and
--   can't change this value once the cluster is created.
newKubernetesNetworkConfigRequest :: KubernetesNetworkConfigRequest

-- | The CIDR block to assign Kubernetes service IP addresses from. If you
--   don't specify a block, Kubernetes assigns addresses from either the
--   10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you
--   specify a block that does not overlap with resources in other networks
--   that are peered or connected to your VPC. The block must meet the
--   following requirements:
--   
--   <ul>
--   <li>Within one of the following private IP address blocks: 10.0.0.0/8,
--   172.16.0.0.0/12, or 192.168.0.0/16.</li>
--   <li>Doesn't overlap with any CIDR block assigned to the VPC that you
--   selected for VPC.</li>
--   <li>Between /24 and /12.</li>
--   </ul>
--   
--   You can only specify a custom CIDR block when you create a cluster and
--   can't change this value once the cluster is created.
kubernetesNetworkConfigRequest_serviceIpv4Cidr :: Lens' KubernetesNetworkConfigRequest (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.KubernetesNetworkConfigRequest.KubernetesNetworkConfigRequest
instance GHC.Show.Show Network.AWS.EKS.Types.KubernetesNetworkConfigRequest.KubernetesNetworkConfigRequest
instance GHC.Read.Read Network.AWS.EKS.Types.KubernetesNetworkConfigRequest.KubernetesNetworkConfigRequest
instance GHC.Classes.Eq Network.AWS.EKS.Types.KubernetesNetworkConfigRequest.KubernetesNetworkConfigRequest
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.KubernetesNetworkConfigRequest.KubernetesNetworkConfigRequest
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.KubernetesNetworkConfigRequest.KubernetesNetworkConfigRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.KubernetesNetworkConfigRequest.KubernetesNetworkConfigRequest


module Network.AWS.EKS.Types.KubernetesNetworkConfigResponse

-- | The Kubernetes network configuration for the cluster.
--   
--   <i>See:</i> <a>newKubernetesNetworkConfigResponse</a> smart
--   constructor.
data KubernetesNetworkConfigResponse
KubernetesNetworkConfigResponse' :: Maybe Text -> KubernetesNetworkConfigResponse

-- | The CIDR block that Kubernetes service IP addresses are assigned from.
--   If you didn't specify a CIDR block when you created the cluster, then
--   Kubernetes assigns addresses from either the 10.100.0.0/16 or
--   172.20.0.0/16 CIDR blocks. If this was specified, then it was
--   specified when the cluster was created and it cannot be changed.
[$sel:serviceIpv4Cidr:KubernetesNetworkConfigResponse'] :: KubernetesNetworkConfigResponse -> Maybe Text

-- | Create a value of <a>KubernetesNetworkConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIpv4Cidr:KubernetesNetworkConfigResponse'</a>,
--   <a>kubernetesNetworkConfigResponse_serviceIpv4Cidr</a> - The CIDR
--   block that Kubernetes service IP addresses are assigned from. If you
--   didn't specify a CIDR block when you created the cluster, then
--   Kubernetes assigns addresses from either the 10.100.0.0/16 or
--   172.20.0.0/16 CIDR blocks. If this was specified, then it was
--   specified when the cluster was created and it cannot be changed.
newKubernetesNetworkConfigResponse :: KubernetesNetworkConfigResponse

-- | The CIDR block that Kubernetes service IP addresses are assigned from.
--   If you didn't specify a CIDR block when you created the cluster, then
--   Kubernetes assigns addresses from either the 10.100.0.0/16 or
--   172.20.0.0/16 CIDR blocks. If this was specified, then it was
--   specified when the cluster was created and it cannot be changed.
kubernetesNetworkConfigResponse_serviceIpv4Cidr :: Lens' KubernetesNetworkConfigResponse (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.KubernetesNetworkConfigResponse.KubernetesNetworkConfigResponse
instance GHC.Show.Show Network.AWS.EKS.Types.KubernetesNetworkConfigResponse.KubernetesNetworkConfigResponse
instance GHC.Read.Read Network.AWS.EKS.Types.KubernetesNetworkConfigResponse.KubernetesNetworkConfigResponse
instance GHC.Classes.Eq Network.AWS.EKS.Types.KubernetesNetworkConfigResponse.KubernetesNetworkConfigResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.KubernetesNetworkConfigResponse.KubernetesNetworkConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.KubernetesNetworkConfigResponse.KubernetesNetworkConfigResponse
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.KubernetesNetworkConfigResponse.KubernetesNetworkConfigResponse


module Network.AWS.EKS.Types.LaunchTemplateSpecification

-- | An object representing a node group launch template specification. The
--   launch template cannot include <a>SubnetId</a> ,
--   <a>IamInstanceProfile</a> , <a>RequestSpotInstances</a> ,
--   <a>HibernationOptions</a> , or <a>TerminateInstances</a> , or the node
--   group deployment or update will fail. For more information about
--   launch templates, see <a>CreateLaunchTemplate</a> in the Amazon EC2
--   API Reference. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
--   
--   Specify either <tt>name</tt> or <tt>id</tt>, but not both.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | The name of the launch template.
[$sel:name:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The version of the launch template to use. If no version is specified,
--   then the template's default version is used.
[$sel:version:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The ID of the launch template.
[$sel:id:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_name</a> - The name of the launch
--   template.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version of the launch
--   template to use. If no version is specified, then the template's
--   default version is used.
--   
--   <a>$sel:id:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_id</a> - The ID of the launch template.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | The name of the launch template.
launchTemplateSpecification_name :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version of the launch template to use. If no version is specified,
--   then the template's default version is used.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The ID of the launch template.
launchTemplateSpecification_id :: Lens' LaunchTemplateSpecification (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Show.Show Network.AWS.EKS.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Read.Read Network.AWS.EKS.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance GHC.Classes.Eq Network.AWS.EKS.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.LaunchTemplateSpecification.LaunchTemplateSpecification
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.LaunchTemplateSpecification.LaunchTemplateSpecification


module Network.AWS.EKS.Types.LogType
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_Api :: LogType
pattern LogType_Audit :: LogType
pattern LogType_Authenticator :: LogType
pattern LogType_ControllerManager :: LogType
pattern LogType_Scheduler :: LogType
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.LogType.LogType
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.LogType.LogType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.LogType.LogType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.LogType.LogType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.LogType.LogType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.LogType.LogType
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.LogType.LogType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.LogType.LogType
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.LogType.LogType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.LogType.LogType
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.LogType.LogType
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.LogType.LogType
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.LogType.LogType
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.LogType.LogType
instance GHC.Generics.Generic Network.AWS.EKS.Types.LogType.LogType
instance GHC.Classes.Ord Network.AWS.EKS.Types.LogType.LogType
instance GHC.Classes.Eq Network.AWS.EKS.Types.LogType.LogType
instance GHC.Read.Read Network.AWS.EKS.Types.LogType.LogType
instance GHC.Show.Show Network.AWS.EKS.Types.LogType.LogType


module Network.AWS.EKS.Types.LogSetup

-- | An object representing the enabled or disabled Kubernetes control
--   plane logs for your cluster.
--   
--   <i>See:</i> <a>newLogSetup</a> smart constructor.
data LogSetup
LogSetup' :: Maybe Bool -> Maybe [LogType] -> LogSetup

-- | If a log type is enabled, that log type exports its control plane logs
--   to CloudWatch Logs. If a log type isn't enabled, that log type doesn't
--   export its control plane logs. Each individual log type can be enabled
--   or disabled independently.
[$sel:enabled:LogSetup'] :: LogSetup -> Maybe Bool

-- | The available cluster control plane log types.
[$sel:types:LogSetup'] :: LogSetup -> Maybe [LogType]

-- | Create a value of <a>LogSetup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:LogSetup'</a>, <a>logSetup_enabled</a> - If a log type
--   is enabled, that log type exports its control plane logs to CloudWatch
--   Logs. If a log type isn't enabled, that log type doesn't export its
--   control plane logs. Each individual log type can be enabled or
--   disabled independently.
--   
--   <a>$sel:types:LogSetup'</a>, <a>logSetup_types</a> - The available
--   cluster control plane log types.
newLogSetup :: LogSetup

-- | If a log type is enabled, that log type exports its control plane logs
--   to CloudWatch Logs. If a log type isn't enabled, that log type doesn't
--   export its control plane logs. Each individual log type can be enabled
--   or disabled independently.
logSetup_enabled :: Lens' LogSetup (Maybe Bool)

-- | The available cluster control plane log types.
logSetup_types :: Lens' LogSetup (Maybe [LogType])
instance GHC.Generics.Generic Network.AWS.EKS.Types.LogSetup.LogSetup
instance GHC.Show.Show Network.AWS.EKS.Types.LogSetup.LogSetup
instance GHC.Read.Read Network.AWS.EKS.Types.LogSetup.LogSetup
instance GHC.Classes.Eq Network.AWS.EKS.Types.LogSetup.LogSetup
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.LogSetup.LogSetup
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.LogSetup.LogSetup
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.LogSetup.LogSetup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.LogSetup.LogSetup


module Network.AWS.EKS.Types.Logging

-- | An object representing the logging configuration for resources in your
--   cluster.
--   
--   <i>See:</i> <a>newLogging</a> smart constructor.
data Logging
Logging' :: Maybe [LogSetup] -> Logging

-- | The cluster control plane logging configuration for your cluster.
[$sel:clusterLogging:Logging'] :: Logging -> Maybe [LogSetup]

-- | Create a value of <a>Logging</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterLogging:Logging'</a>, <a>logging_clusterLogging</a> -
--   The cluster control plane logging configuration for your cluster.
newLogging :: Logging

-- | The cluster control plane logging configuration for your cluster.
logging_clusterLogging :: Lens' Logging (Maybe [LogSetup])
instance GHC.Generics.Generic Network.AWS.EKS.Types.Logging.Logging
instance GHC.Show.Show Network.AWS.EKS.Types.Logging.Logging
instance GHC.Read.Read Network.AWS.EKS.Types.Logging.Logging
instance GHC.Classes.Eq Network.AWS.EKS.Types.Logging.Logging
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.Logging.Logging
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.Logging.Logging
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.Logging.Logging
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.Logging.Logging


module Network.AWS.EKS.Types.NodegroupIssueCode
newtype NodegroupIssueCode
NodegroupIssueCode' :: Text -> NodegroupIssueCode
[fromNodegroupIssueCode] :: NodegroupIssueCode -> Text
pattern NodegroupIssueCode_AccessDenied :: NodegroupIssueCode
pattern NodegroupIssueCode_AsgInstanceLaunchFailures :: NodegroupIssueCode
pattern NodegroupIssueCode_AutoScalingGroupInvalidConfiguration :: NodegroupIssueCode
pattern NodegroupIssueCode_AutoScalingGroupNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_ClusterUnreachable :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2LaunchTemplateNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2LaunchTemplateVersionMismatch :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SecurityGroupDeletionFailure :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SecurityGroupNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SubnetInvalidConfiguration :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SubnetNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_IamInstanceProfileNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_IamLimitExceeded :: NodegroupIssueCode
pattern NodegroupIssueCode_IamNodeRoleNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_InstanceLimitExceeded :: NodegroupIssueCode
pattern NodegroupIssueCode_InsufficientFreeAddresses :: NodegroupIssueCode
pattern NodegroupIssueCode_InternalFailure :: NodegroupIssueCode
pattern NodegroupIssueCode_NodeCreationFailure :: NodegroupIssueCode
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance GHC.Generics.Generic Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance GHC.Classes.Ord Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance GHC.Classes.Eq Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance GHC.Read.Read Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode
instance GHC.Show.Show Network.AWS.EKS.Types.NodegroupIssueCode.NodegroupIssueCode


module Network.AWS.EKS.Types.Issue

-- | An object representing an issue with an Amazon EKS resource.
--   
--   <i>See:</i> <a>newIssue</a> smart constructor.
data Issue
Issue' :: Maybe [Text] -> Maybe NodegroupIssueCode -> Maybe Text -> Issue

-- | The Amazon Web Services resources that are afflicted by this issue.
[$sel:resourceIds:Issue'] :: Issue -> Maybe [Text]

-- | A brief description of the error.
--   
--   <ul>
--   <li><b>AccessDenied</b>: Amazon EKS or one or more of your managed
--   nodes is failing to authenticate or authorize with your Kubernetes
--   cluster API server.</li>
--   <li><b>AsgInstanceLaunchFailures</b>: Your Auto Scaling group is
--   experiencing failures while attempting to launch instances.</li>
--   <li><b>AutoScalingGroupNotFound</b>: We couldn't find the Auto Scaling
--   group associated with the managed node group. You may be able to
--   recreate an Auto Scaling group with the same settings to recover.</li>
--   <li><b>ClusterUnreachable</b>: Amazon EKS or one or more of your
--   managed nodes is unable to to communicate with your Kubernetes cluster
--   API server. This can happen if there are network disruptions or if API
--   servers are timing out processing requests.</li>
--   <li><b>Ec2LaunchTemplateNotFound</b>: We couldn't find the Amazon EC2
--   launch template for your managed node group. You may be able to
--   recreate a launch template with the same settings to recover.</li>
--   <li><b>Ec2LaunchTemplateVersionMismatch</b>: The Amazon EC2 launch
--   template version for your managed node group does not match the
--   version that Amazon EKS created. You may be able to revert to the
--   version that Amazon EKS created to recover.</li>
--   <li><b>Ec2SecurityGroupDeletionFailure</b>: We could not delete the
--   remote access security group for your managed node group. Remove any
--   dependencies from the security group.</li>
--   <li><b>Ec2SecurityGroupNotFound</b>: We couldn't find the cluster
--   security group for the cluster. You must recreate your cluster.</li>
--   <li><b>Ec2SubnetInvalidConfiguration</b>: One or more Amazon EC2
--   subnets specified for a node group do not automatically assign public
--   IP addresses to instances launched into it. If you want your instances
--   to be assigned a public IP address, then you need to enable the
--   <tt>auto-assign public IP address</tt> setting for the subnet. See
--   <a>Modifying the public IPv4 addressing attribute for your subnet</a>
--   in the Amazon VPC User Guide.</li>
--   <li><b>IamInstanceProfileNotFound</b>: We couldn't find the IAM
--   instance profile for your managed node group. You may be able to
--   recreate an instance profile with the same settings to recover.</li>
--   <li><b>IamNodeRoleNotFound</b>: We couldn't find the IAM role for your
--   managed node group. You may be able to recreate an IAM role with the
--   same settings to recover.</li>
--   <li><b>InstanceLimitExceeded</b>: Your Amazon Web Services account is
--   unable to launch any more instances of the specified instance type.
--   You may be able to request an Amazon EC2 instance limit increase to
--   recover.</li>
--   <li><b>InsufficientFreeAddresses</b>: One or more of the subnets
--   associated with your managed node group does not have enough available
--   IP addresses for new nodes.</li>
--   <li><b>InternalFailure</b>: These errors are usually caused by an
--   Amazon EKS server-side issue.</li>
--   <li><b>NodeCreationFailure</b>: Your launched instances are unable to
--   register with your Amazon EKS cluster. Common causes of this failure
--   are insufficient <a>node IAM role</a> permissions or lack of outbound
--   internet access for the nodes.</li>
--   </ul>
[$sel:code:Issue'] :: Issue -> Maybe NodegroupIssueCode

-- | The error message associated with the issue.
[$sel:message:Issue'] :: Issue -> Maybe Text

-- | Create a value of <a>Issue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:Issue'</a>, <a>issue_resourceIds</a> - The Amazon
--   Web Services resources that are afflicted by this issue.
--   
--   <a>$sel:code:Issue'</a>, <a>issue_code</a> - A brief description of
--   the error.
--   
--   <ul>
--   <li><b>AccessDenied</b>: Amazon EKS or one or more of your managed
--   nodes is failing to authenticate or authorize with your Kubernetes
--   cluster API server.</li>
--   <li><b>AsgInstanceLaunchFailures</b>: Your Auto Scaling group is
--   experiencing failures while attempting to launch instances.</li>
--   <li><b>AutoScalingGroupNotFound</b>: We couldn't find the Auto Scaling
--   group associated with the managed node group. You may be able to
--   recreate an Auto Scaling group with the same settings to recover.</li>
--   <li><b>ClusterUnreachable</b>: Amazon EKS or one or more of your
--   managed nodes is unable to to communicate with your Kubernetes cluster
--   API server. This can happen if there are network disruptions or if API
--   servers are timing out processing requests.</li>
--   <li><b>Ec2LaunchTemplateNotFound</b>: We couldn't find the Amazon EC2
--   launch template for your managed node group. You may be able to
--   recreate a launch template with the same settings to recover.</li>
--   <li><b>Ec2LaunchTemplateVersionMismatch</b>: The Amazon EC2 launch
--   template version for your managed node group does not match the
--   version that Amazon EKS created. You may be able to revert to the
--   version that Amazon EKS created to recover.</li>
--   <li><b>Ec2SecurityGroupDeletionFailure</b>: We could not delete the
--   remote access security group for your managed node group. Remove any
--   dependencies from the security group.</li>
--   <li><b>Ec2SecurityGroupNotFound</b>: We couldn't find the cluster
--   security group for the cluster. You must recreate your cluster.</li>
--   <li><b>Ec2SubnetInvalidConfiguration</b>: One or more Amazon EC2
--   subnets specified for a node group do not automatically assign public
--   IP addresses to instances launched into it. If you want your instances
--   to be assigned a public IP address, then you need to enable the
--   <tt>auto-assign public IP address</tt> setting for the subnet. See
--   <a>Modifying the public IPv4 addressing attribute for your subnet</a>
--   in the Amazon VPC User Guide.</li>
--   <li><b>IamInstanceProfileNotFound</b>: We couldn't find the IAM
--   instance profile for your managed node group. You may be able to
--   recreate an instance profile with the same settings to recover.</li>
--   <li><b>IamNodeRoleNotFound</b>: We couldn't find the IAM role for your
--   managed node group. You may be able to recreate an IAM role with the
--   same settings to recover.</li>
--   <li><b>InstanceLimitExceeded</b>: Your Amazon Web Services account is
--   unable to launch any more instances of the specified instance type.
--   You may be able to request an Amazon EC2 instance limit increase to
--   recover.</li>
--   <li><b>InsufficientFreeAddresses</b>: One or more of the subnets
--   associated with your managed node group does not have enough available
--   IP addresses for new nodes.</li>
--   <li><b>InternalFailure</b>: These errors are usually caused by an
--   Amazon EKS server-side issue.</li>
--   <li><b>NodeCreationFailure</b>: Your launched instances are unable to
--   register with your Amazon EKS cluster. Common causes of this failure
--   are insufficient <a>node IAM role</a> permissions or lack of outbound
--   internet access for the nodes.</li>
--   </ul>
--   
--   <a>$sel:message:Issue'</a>, <a>issue_message</a> - The error message
--   associated with the issue.
newIssue :: Issue

-- | The Amazon Web Services resources that are afflicted by this issue.
issue_resourceIds :: Lens' Issue (Maybe [Text])

-- | A brief description of the error.
--   
--   <ul>
--   <li><b>AccessDenied</b>: Amazon EKS or one or more of your managed
--   nodes is failing to authenticate or authorize with your Kubernetes
--   cluster API server.</li>
--   <li><b>AsgInstanceLaunchFailures</b>: Your Auto Scaling group is
--   experiencing failures while attempting to launch instances.</li>
--   <li><b>AutoScalingGroupNotFound</b>: We couldn't find the Auto Scaling
--   group associated with the managed node group. You may be able to
--   recreate an Auto Scaling group with the same settings to recover.</li>
--   <li><b>ClusterUnreachable</b>: Amazon EKS or one or more of your
--   managed nodes is unable to to communicate with your Kubernetes cluster
--   API server. This can happen if there are network disruptions or if API
--   servers are timing out processing requests.</li>
--   <li><b>Ec2LaunchTemplateNotFound</b>: We couldn't find the Amazon EC2
--   launch template for your managed node group. You may be able to
--   recreate a launch template with the same settings to recover.</li>
--   <li><b>Ec2LaunchTemplateVersionMismatch</b>: The Amazon EC2 launch
--   template version for your managed node group does not match the
--   version that Amazon EKS created. You may be able to revert to the
--   version that Amazon EKS created to recover.</li>
--   <li><b>Ec2SecurityGroupDeletionFailure</b>: We could not delete the
--   remote access security group for your managed node group. Remove any
--   dependencies from the security group.</li>
--   <li><b>Ec2SecurityGroupNotFound</b>: We couldn't find the cluster
--   security group for the cluster. You must recreate your cluster.</li>
--   <li><b>Ec2SubnetInvalidConfiguration</b>: One or more Amazon EC2
--   subnets specified for a node group do not automatically assign public
--   IP addresses to instances launched into it. If you want your instances
--   to be assigned a public IP address, then you need to enable the
--   <tt>auto-assign public IP address</tt> setting for the subnet. See
--   <a>Modifying the public IPv4 addressing attribute for your subnet</a>
--   in the Amazon VPC User Guide.</li>
--   <li><b>IamInstanceProfileNotFound</b>: We couldn't find the IAM
--   instance profile for your managed node group. You may be able to
--   recreate an instance profile with the same settings to recover.</li>
--   <li><b>IamNodeRoleNotFound</b>: We couldn't find the IAM role for your
--   managed node group. You may be able to recreate an IAM role with the
--   same settings to recover.</li>
--   <li><b>InstanceLimitExceeded</b>: Your Amazon Web Services account is
--   unable to launch any more instances of the specified instance type.
--   You may be able to request an Amazon EC2 instance limit increase to
--   recover.</li>
--   <li><b>InsufficientFreeAddresses</b>: One or more of the subnets
--   associated with your managed node group does not have enough available
--   IP addresses for new nodes.</li>
--   <li><b>InternalFailure</b>: These errors are usually caused by an
--   Amazon EKS server-side issue.</li>
--   <li><b>NodeCreationFailure</b>: Your launched instances are unable to
--   register with your Amazon EKS cluster. Common causes of this failure
--   are insufficient <a>node IAM role</a> permissions or lack of outbound
--   internet access for the nodes.</li>
--   </ul>
issue_code :: Lens' Issue (Maybe NodegroupIssueCode)

-- | The error message associated with the issue.
issue_message :: Lens' Issue (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.Issue.Issue
instance GHC.Show.Show Network.AWS.EKS.Types.Issue.Issue
instance GHC.Read.Read Network.AWS.EKS.Types.Issue.Issue
instance GHC.Classes.Eq Network.AWS.EKS.Types.Issue.Issue
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.Issue.Issue
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.Issue.Issue
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.Issue.Issue


module Network.AWS.EKS.Types.NodegroupHealth

-- | An object representing the health status of the node group.
--   
--   <i>See:</i> <a>newNodegroupHealth</a> smart constructor.
data NodegroupHealth
NodegroupHealth' :: Maybe [Issue] -> NodegroupHealth

-- | Any issues that are associated with the node group.
[$sel:issues:NodegroupHealth'] :: NodegroupHealth -> Maybe [Issue]

-- | Create a value of <a>NodegroupHealth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:issues:NodegroupHealth'</a>, <a>nodegroupHealth_issues</a> -
--   Any issues that are associated with the node group.
newNodegroupHealth :: NodegroupHealth

-- | Any issues that are associated with the node group.
nodegroupHealth_issues :: Lens' NodegroupHealth (Maybe [Issue])
instance GHC.Generics.Generic Network.AWS.EKS.Types.NodegroupHealth.NodegroupHealth
instance GHC.Show.Show Network.AWS.EKS.Types.NodegroupHealth.NodegroupHealth
instance GHC.Read.Read Network.AWS.EKS.Types.NodegroupHealth.NodegroupHealth
instance GHC.Classes.Eq Network.AWS.EKS.Types.NodegroupHealth.NodegroupHealth
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.NodegroupHealth.NodegroupHealth
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.NodegroupHealth.NodegroupHealth
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.NodegroupHealth.NodegroupHealth


module Network.AWS.EKS.Types.NodegroupResources

-- | An object representing the resources associated with the node group,
--   such as Auto Scaling groups and security groups for remote access.
--   
--   <i>See:</i> <a>newNodegroupResources</a> smart constructor.
data NodegroupResources
NodegroupResources' :: Maybe Text -> Maybe [AutoScalingGroup] -> NodegroupResources

-- | The remote access security group associated with the node group. This
--   security group controls SSH access to the nodes.
[$sel:remoteAccessSecurityGroup:NodegroupResources'] :: NodegroupResources -> Maybe Text

-- | The Auto Scaling groups associated with the node group.
[$sel:autoScalingGroups:NodegroupResources'] :: NodegroupResources -> Maybe [AutoScalingGroup]

-- | Create a value of <a>NodegroupResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remoteAccessSecurityGroup:NodegroupResources'</a>,
--   <a>nodegroupResources_remoteAccessSecurityGroup</a> - The remote
--   access security group associated with the node group. This security
--   group controls SSH access to the nodes.
--   
--   <a>$sel:autoScalingGroups:NodegroupResources'</a>,
--   <a>nodegroupResources_autoScalingGroups</a> - The Auto Scaling groups
--   associated with the node group.
newNodegroupResources :: NodegroupResources

-- | The remote access security group associated with the node group. This
--   security group controls SSH access to the nodes.
nodegroupResources_remoteAccessSecurityGroup :: Lens' NodegroupResources (Maybe Text)

-- | The Auto Scaling groups associated with the node group.
nodegroupResources_autoScalingGroups :: Lens' NodegroupResources (Maybe [AutoScalingGroup])
instance GHC.Generics.Generic Network.AWS.EKS.Types.NodegroupResources.NodegroupResources
instance GHC.Show.Show Network.AWS.EKS.Types.NodegroupResources.NodegroupResources
instance GHC.Read.Read Network.AWS.EKS.Types.NodegroupResources.NodegroupResources
instance GHC.Classes.Eq Network.AWS.EKS.Types.NodegroupResources.NodegroupResources
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.NodegroupResources.NodegroupResources
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.NodegroupResources.NodegroupResources
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.NodegroupResources.NodegroupResources


module Network.AWS.EKS.Types.NodegroupScalingConfig

-- | An object representing the scaling configuration details for the Auto
--   Scaling group that is associated with your node group. When creating a
--   node group, you must specify all or none of the properties. When
--   updating a node group, you can specify any or none of the properties.
--   
--   <i>See:</i> <a>newNodegroupScalingConfig</a> smart constructor.
data NodegroupScalingConfig
NodegroupScalingConfig' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> NodegroupScalingConfig

-- | The current number of nodes that the managed node group should
--   maintain.
[$sel:desiredSize:NodegroupScalingConfig'] :: NodegroupScalingConfig -> Maybe Natural

-- | The maximum number of nodes that the managed node group can scale out
--   to. For information about the maximum number that you can specify, see
--   <a>Amazon EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.
[$sel:maxSize:NodegroupScalingConfig'] :: NodegroupScalingConfig -> Maybe Natural

-- | The minimum number of nodes that the managed node group can scale in
--   to.
[$sel:minSize:NodegroupScalingConfig'] :: NodegroupScalingConfig -> Maybe Natural

-- | Create a value of <a>NodegroupScalingConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:desiredSize:NodegroupScalingConfig'</a>,
--   <a>nodegroupScalingConfig_desiredSize</a> - The current number of
--   nodes that the managed node group should maintain.
--   
--   <a>$sel:maxSize:NodegroupScalingConfig'</a>,
--   <a>nodegroupScalingConfig_maxSize</a> - The maximum number of nodes
--   that the managed node group can scale out to. For information about
--   the maximum number that you can specify, see <a>Amazon EKS service
--   quotas</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:minSize:NodegroupScalingConfig'</a>,
--   <a>nodegroupScalingConfig_minSize</a> - The minimum number of nodes
--   that the managed node group can scale in to.
newNodegroupScalingConfig :: NodegroupScalingConfig

-- | The current number of nodes that the managed node group should
--   maintain.
nodegroupScalingConfig_desiredSize :: Lens' NodegroupScalingConfig (Maybe Natural)

-- | The maximum number of nodes that the managed node group can scale out
--   to. For information about the maximum number that you can specify, see
--   <a>Amazon EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.
nodegroupScalingConfig_maxSize :: Lens' NodegroupScalingConfig (Maybe Natural)

-- | The minimum number of nodes that the managed node group can scale in
--   to.
nodegroupScalingConfig_minSize :: Lens' NodegroupScalingConfig (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.EKS.Types.NodegroupScalingConfig.NodegroupScalingConfig
instance GHC.Show.Show Network.AWS.EKS.Types.NodegroupScalingConfig.NodegroupScalingConfig
instance GHC.Read.Read Network.AWS.EKS.Types.NodegroupScalingConfig.NodegroupScalingConfig
instance GHC.Classes.Eq Network.AWS.EKS.Types.NodegroupScalingConfig.NodegroupScalingConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.NodegroupScalingConfig.NodegroupScalingConfig
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.NodegroupScalingConfig.NodegroupScalingConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.NodegroupScalingConfig.NodegroupScalingConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.NodegroupScalingConfig.NodegroupScalingConfig


module Network.AWS.EKS.Types.NodegroupStatus
newtype NodegroupStatus
NodegroupStatus' :: Text -> NodegroupStatus
[fromNodegroupStatus] :: NodegroupStatus -> Text
pattern NodegroupStatus_ACTIVE :: NodegroupStatus
pattern NodegroupStatus_CREATE_FAILED :: NodegroupStatus
pattern NodegroupStatus_CREATING :: NodegroupStatus
pattern NodegroupStatus_DEGRADED :: NodegroupStatus
pattern NodegroupStatus_DELETE_FAILED :: NodegroupStatus
pattern NodegroupStatus_DELETING :: NodegroupStatus
pattern NodegroupStatus_UPDATING :: NodegroupStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance GHC.Generics.Generic Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance GHC.Classes.Ord Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance GHC.Classes.Eq Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance GHC.Read.Read Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus
instance GHC.Show.Show Network.AWS.EKS.Types.NodegroupStatus.NodegroupStatus


module Network.AWS.EKS.Types.NodegroupUpdateConfig

-- | The node group update configuration.
--   
--   <i>See:</i> <a>newNodegroupUpdateConfig</a> smart constructor.
data NodegroupUpdateConfig
NodegroupUpdateConfig' :: Maybe Natural -> Maybe Natural -> NodegroupUpdateConfig

-- | The maximum number of nodes unavailable at once during a version
--   update. Nodes will be updated in parallel. This value or
--   <tt>maxUnavailablePercentage</tt> is required to have a value.The
--   maximum number is 100.
[$sel:maxUnavailable:NodegroupUpdateConfig'] :: NodegroupUpdateConfig -> Maybe Natural

-- | The maximum percentage of nodes unavailable during a version update.
--   This percentage of nodes will be updated in parallel, up to 100 nodes
--   at once. This value or <tt>maxUnavailable</tt> is required to have a
--   value.
[$sel:maxUnavailablePercentage:NodegroupUpdateConfig'] :: NodegroupUpdateConfig -> Maybe Natural

-- | Create a value of <a>NodegroupUpdateConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxUnavailable:NodegroupUpdateConfig'</a>,
--   <a>nodegroupUpdateConfig_maxUnavailable</a> - The maximum number of
--   nodes unavailable at once during a version update. Nodes will be
--   updated in parallel. This value or <tt>maxUnavailablePercentage</tt>
--   is required to have a value.The maximum number is 100.
--   
--   <a>$sel:maxUnavailablePercentage:NodegroupUpdateConfig'</a>,
--   <a>nodegroupUpdateConfig_maxUnavailablePercentage</a> - The maximum
--   percentage of nodes unavailable during a version update. This
--   percentage of nodes will be updated in parallel, up to 100 nodes at
--   once. This value or <tt>maxUnavailable</tt> is required to have a
--   value.
newNodegroupUpdateConfig :: NodegroupUpdateConfig

-- | The maximum number of nodes unavailable at once during a version
--   update. Nodes will be updated in parallel. This value or
--   <tt>maxUnavailablePercentage</tt> is required to have a value.The
--   maximum number is 100.
nodegroupUpdateConfig_maxUnavailable :: Lens' NodegroupUpdateConfig (Maybe Natural)

-- | The maximum percentage of nodes unavailable during a version update.
--   This percentage of nodes will be updated in parallel, up to 100 nodes
--   at once. This value or <tt>maxUnavailable</tt> is required to have a
--   value.
nodegroupUpdateConfig_maxUnavailablePercentage :: Lens' NodegroupUpdateConfig (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.EKS.Types.NodegroupUpdateConfig.NodegroupUpdateConfig
instance GHC.Show.Show Network.AWS.EKS.Types.NodegroupUpdateConfig.NodegroupUpdateConfig
instance GHC.Read.Read Network.AWS.EKS.Types.NodegroupUpdateConfig.NodegroupUpdateConfig
instance GHC.Classes.Eq Network.AWS.EKS.Types.NodegroupUpdateConfig.NodegroupUpdateConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.NodegroupUpdateConfig.NodegroupUpdateConfig
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.NodegroupUpdateConfig.NodegroupUpdateConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.NodegroupUpdateConfig.NodegroupUpdateConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.NodegroupUpdateConfig.NodegroupUpdateConfig


module Network.AWS.EKS.Types.OIDC

-- | An object representing the <a>OpenID Connect</a> (OIDC) identity
--   provider information for the cluster.
--   
--   <i>See:</i> <a>newOIDC</a> smart constructor.
data OIDC
OIDC' :: Maybe Text -> OIDC

-- | The issuer URL for the OIDC identity provider.
[$sel:issuer:OIDC'] :: OIDC -> Maybe Text

-- | Create a value of <a>OIDC</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:issuer:OIDC'</a>, <a>oidc_issuer</a> - The issuer URL for the
--   OIDC identity provider.
newOIDC :: OIDC

-- | The issuer URL for the OIDC identity provider.
oidc_issuer :: Lens' OIDC (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.OIDC.OIDC
instance GHC.Show.Show Network.AWS.EKS.Types.OIDC.OIDC
instance GHC.Read.Read Network.AWS.EKS.Types.OIDC.OIDC
instance GHC.Classes.Eq Network.AWS.EKS.Types.OIDC.OIDC
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.OIDC.OIDC
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.OIDC.OIDC
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.OIDC.OIDC


module Network.AWS.EKS.Types.Identity

-- | An object representing an identity provider.
--   
--   <i>See:</i> <a>newIdentity</a> smart constructor.
data Identity
Identity' :: Maybe OIDC -> Identity

-- | An object representing the <a>OpenID Connect</a> identity provider
--   information.
[$sel:oidc:Identity'] :: Identity -> Maybe OIDC

-- | Create a value of <a>Identity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oidc:Identity'</a>, <a>identity_oidc</a> - An object
--   representing the <a>OpenID Connect</a> identity provider information.
newIdentity :: Identity

-- | An object representing the <a>OpenID Connect</a> identity provider
--   information.
identity_oidc :: Lens' Identity (Maybe OIDC)
instance GHC.Generics.Generic Network.AWS.EKS.Types.Identity.Identity
instance GHC.Show.Show Network.AWS.EKS.Types.Identity.Identity
instance GHC.Read.Read Network.AWS.EKS.Types.Identity.Identity
instance GHC.Classes.Eq Network.AWS.EKS.Types.Identity.Identity
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.Identity.Identity
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.Identity.Identity
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.Identity.Identity


module Network.AWS.EKS.Types.OidcIdentityProviderConfig

-- | An object that represents the configuration for an OpenID Connect
--   (OIDC) identity provider.
--   
--   <i>See:</i> <a>newOidcIdentityProviderConfig</a> smart constructor.
data OidcIdentityProviderConfig
OidcIdentityProviderConfig' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConfigStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> OidcIdentityProviderConfig

-- | The prefix that is prepended to group claims to prevent clashes with
--   existing names (such as <tt>system:</tt> groups). For example, the
--   value<tt> oidc:</tt> creates group names like
--   <tt>oidc:engineering</tt> and <tt>oidc:infra</tt>. The prefix can't
--   contain <tt>system:</tt>
[$sel:groupsPrefix:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The JSON Web token (JWT) claim that is used as the username.
[$sel:usernameClaim:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | This is also known as <i>audience</i>. The ID of the client
--   application that makes authentication requests to the OIDC identity
--   provider.
[$sel:clientId:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The status of the OIDC identity provider.
[$sel:status:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe ConfigStatus

-- | The name of the configuration.
[$sel:identityProviderConfigName:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The ARN of the configuration.
[$sel:identityProviderConfigArn:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The URL of the OIDC identity provider that allows the API server to
--   discover public signing keys for verifying tokens.
[$sel:issuerUrl:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The key-value pairs that describe required claims in the identity
--   token. If set, each claim is verified to be present in the token with
--   a matching value.
[$sel:requiredClaims:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe (HashMap Text Text)

-- | The prefix that is prepended to username claims to prevent clashes
--   with existing names. The prefix can't contain <tt>system:</tt>
[$sel:usernamePrefix:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The JSON web token (JWT) claim that the provider uses to return your
--   groups.
[$sel:groupsClaim:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The cluster that the configuration is associated to.
[$sel:clusterName:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The metadata to apply to the provider configuration to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you defined.
[$sel:tags:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe (HashMap Text Text)

-- | Create a value of <a>OidcIdentityProviderConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupsPrefix:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_groupsPrefix</a> - The prefix that is
--   prepended to group claims to prevent clashes with existing names (such
--   as <tt>system:</tt> groups). For example, the value<tt> oidc:</tt>
--   creates group names like <tt>oidc:engineering</tt> and
--   <tt>oidc:infra</tt>. The prefix can't contain <tt>system:</tt>
--   
--   <a>$sel:usernameClaim:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_usernameClaim</a> - The JSON Web token
--   (JWT) claim that is used as the username.
--   
--   <a>$sel:clientId:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_clientId</a> - This is also known as
--   <i>audience</i>. The ID of the client application that makes
--   authentication requests to the OIDC identity provider.
--   
--   <a>$sel:status:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_status</a> - The status of the OIDC
--   identity provider.
--   
--   <a>$sel:identityProviderConfigName:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_identityProviderConfigName</a> - The
--   name of the configuration.
--   
--   <a>$sel:identityProviderConfigArn:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_identityProviderConfigArn</a> - The ARN
--   of the configuration.
--   
--   <a>$sel:issuerUrl:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_issuerUrl</a> - The URL of the OIDC
--   identity provider that allows the API server to discover public
--   signing keys for verifying tokens.
--   
--   <a>$sel:requiredClaims:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_requiredClaims</a> - The key-value pairs
--   that describe required claims in the identity token. If set, each
--   claim is verified to be present in the token with a matching value.
--   
--   <a>$sel:usernamePrefix:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_usernamePrefix</a> - The prefix that is
--   prepended to username claims to prevent clashes with existing names.
--   The prefix can't contain <tt>system:</tt>
--   
--   <a>$sel:groupsClaim:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_groupsClaim</a> - The JSON web token
--   (JWT) claim that the provider uses to return your groups.
--   
--   <a>$sel:clusterName:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_clusterName</a> - The cluster that the
--   configuration is associated to.
--   
--   <a>$sel:tags:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_tags</a> - The metadata to apply to the
--   provider configuration to assist with categorization and organization.
--   Each tag consists of a key and an optional value, both of which you
--   defined.
newOidcIdentityProviderConfig :: OidcIdentityProviderConfig

-- | The prefix that is prepended to group claims to prevent clashes with
--   existing names (such as <tt>system:</tt> groups). For example, the
--   value<tt> oidc:</tt> creates group names like
--   <tt>oidc:engineering</tt> and <tt>oidc:infra</tt>. The prefix can't
--   contain <tt>system:</tt>
oidcIdentityProviderConfig_groupsPrefix :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The JSON Web token (JWT) claim that is used as the username.
oidcIdentityProviderConfig_usernameClaim :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | This is also known as <i>audience</i>. The ID of the client
--   application that makes authentication requests to the OIDC identity
--   provider.
oidcIdentityProviderConfig_clientId :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The status of the OIDC identity provider.
oidcIdentityProviderConfig_status :: Lens' OidcIdentityProviderConfig (Maybe ConfigStatus)

-- | The name of the configuration.
oidcIdentityProviderConfig_identityProviderConfigName :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The ARN of the configuration.
oidcIdentityProviderConfig_identityProviderConfigArn :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The URL of the OIDC identity provider that allows the API server to
--   discover public signing keys for verifying tokens.
oidcIdentityProviderConfig_issuerUrl :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The key-value pairs that describe required claims in the identity
--   token. If set, each claim is verified to be present in the token with
--   a matching value.
oidcIdentityProviderConfig_requiredClaims :: Lens' OidcIdentityProviderConfig (Maybe (HashMap Text Text))

-- | The prefix that is prepended to username claims to prevent clashes
--   with existing names. The prefix can't contain <tt>system:</tt>
oidcIdentityProviderConfig_usernamePrefix :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The JSON web token (JWT) claim that the provider uses to return your
--   groups.
oidcIdentityProviderConfig_groupsClaim :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The cluster that the configuration is associated to.
oidcIdentityProviderConfig_clusterName :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The metadata to apply to the provider configuration to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you defined.
oidcIdentityProviderConfig_tags :: Lens' OidcIdentityProviderConfig (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.EKS.Types.OidcIdentityProviderConfig.OidcIdentityProviderConfig
instance GHC.Show.Show Network.AWS.EKS.Types.OidcIdentityProviderConfig.OidcIdentityProviderConfig
instance GHC.Read.Read Network.AWS.EKS.Types.OidcIdentityProviderConfig.OidcIdentityProviderConfig
instance GHC.Classes.Eq Network.AWS.EKS.Types.OidcIdentityProviderConfig.OidcIdentityProviderConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.OidcIdentityProviderConfig.OidcIdentityProviderConfig
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.OidcIdentityProviderConfig.OidcIdentityProviderConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.OidcIdentityProviderConfig.OidcIdentityProviderConfig


module Network.AWS.EKS.Types.IdentityProviderConfigResponse

-- | The full description of your identity configuration.
--   
--   <i>See:</i> <a>newIdentityProviderConfigResponse</a> smart
--   constructor.
data IdentityProviderConfigResponse
IdentityProviderConfigResponse' :: Maybe OidcIdentityProviderConfig -> IdentityProviderConfigResponse

-- | An object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
[$sel:oidc:IdentityProviderConfigResponse'] :: IdentityProviderConfigResponse -> Maybe OidcIdentityProviderConfig

-- | Create a value of <a>IdentityProviderConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oidc:IdentityProviderConfigResponse'</a>,
--   <a>identityProviderConfigResponse_oidc</a> - An object that represents
--   an OpenID Connect (OIDC) identity provider configuration.
newIdentityProviderConfigResponse :: IdentityProviderConfigResponse

-- | An object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
identityProviderConfigResponse_oidc :: Lens' IdentityProviderConfigResponse (Maybe OidcIdentityProviderConfig)
instance GHC.Generics.Generic Network.AWS.EKS.Types.IdentityProviderConfigResponse.IdentityProviderConfigResponse
instance GHC.Show.Show Network.AWS.EKS.Types.IdentityProviderConfigResponse.IdentityProviderConfigResponse
instance GHC.Read.Read Network.AWS.EKS.Types.IdentityProviderConfigResponse.IdentityProviderConfigResponse
instance GHC.Classes.Eq Network.AWS.EKS.Types.IdentityProviderConfigResponse.IdentityProviderConfigResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.IdentityProviderConfigResponse.IdentityProviderConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.IdentityProviderConfigResponse.IdentityProviderConfigResponse
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.IdentityProviderConfigResponse.IdentityProviderConfigResponse


module Network.AWS.EKS.Types.OidcIdentityProviderConfigRequest

-- | An object representing an OpenID Connect (OIDC) configuration. Before
--   associating an OIDC identity provider to your cluster, review the
--   considerations in <a>Authenticating users for your cluster from an
--   OpenID Connect identity provider</a> in the <i>Amazon EKS User
--   Guide</i>.
--   
--   <i>See:</i> <a>newOidcIdentityProviderConfigRequest</a> smart
--   constructor.
data OidcIdentityProviderConfigRequest
OidcIdentityProviderConfigRequest' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> OidcIdentityProviderConfigRequest

-- | The prefix that is prepended to group claims to prevent clashes with
--   existing names (such as <tt>system:</tt> groups). For example, the
--   value<tt> oidc:</tt> will create group names like
--   <tt>oidc:engineering</tt> and <tt>oidc:infra</tt>.
[$sel:groupsPrefix:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Maybe Text

-- | The JSON Web Token (JWT) claim to use as the username. The default is
--   <tt>sub</tt>, which is expected to be a unique identifier of the end
--   user. You can choose other claims, such as <tt>email</tt> or
--   <tt>name</tt>, depending on the OpenID identity provider. Claims other
--   than <tt>email</tt> are prefixed with the issuer URL to prevent naming
--   clashes with other plug-ins.
[$sel:usernameClaim:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Maybe Text

-- | The key value pairs that describe required claims in the identity
--   token. If set, each claim is verified to be present in the token with
--   a matching value. For the maximum number of claims that you can
--   require, see <a>Amazon EKS service quotas</a> in the <i>Amazon EKS
--   User Guide</i>.
[$sel:requiredClaims:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Maybe (HashMap Text Text)

-- | The prefix that is prepended to username claims to prevent clashes
--   with existing names. If you do not provide this field, and
--   <tt>username</tt> is a value other than <tt>email</tt>, the prefix
--   defaults to <tt>issuerurl#</tt>. You can use the value <tt>-</tt> to
--   disable all prefixing.
[$sel:usernamePrefix:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Maybe Text

-- | The JWT claim that the provider uses to return your groups.
[$sel:groupsClaim:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Maybe Text

-- | The name of the OIDC provider configuration.
[$sel:identityProviderConfigName:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Text

-- | The URL of the OpenID identity provider that allows the API server to
--   discover public signing keys for verifying tokens. The URL must begin
--   with <tt>https://</tt> and should correspond to the <tt>iss</tt> claim
--   in the provider's OIDC ID tokens. Per the OIDC standard, path
--   components are allowed but query parameters are not. Typically the URL
--   consists of only a hostname, like <tt>https://server.example.org</tt>
--   or <tt>https://example.com</tt>. This URL should point to the level
--   below <tt>.well-known/openid-configuration</tt> and must be publicly
--   accessible over the internet.
[$sel:issuerUrl:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Text

-- | This is also known as <i>audience</i>. The ID for the client
--   application that makes authentication requests to the OpenID identity
--   provider.
[$sel:clientId:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Text

-- | Create a value of <a>OidcIdentityProviderConfigRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupsPrefix:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_groupsPrefix</a> - The prefix
--   that is prepended to group claims to prevent clashes with existing
--   names (such as <tt>system:</tt> groups). For example, the value<tt>
--   oidc:</tt> will create group names like <tt>oidc:engineering</tt> and
--   <tt>oidc:infra</tt>.
--   
--   <a>$sel:usernameClaim:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_usernameClaim</a> - The JSON Web
--   Token (JWT) claim to use as the username. The default is <tt>sub</tt>,
--   which is expected to be a unique identifier of the end user. You can
--   choose other claims, such as <tt>email</tt> or <tt>name</tt>,
--   depending on the OpenID identity provider. Claims other than
--   <tt>email</tt> are prefixed with the issuer URL to prevent naming
--   clashes with other plug-ins.
--   
--   <a>$sel:requiredClaims:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_requiredClaims</a> - The key
--   value pairs that describe required claims in the identity token. If
--   set, each claim is verified to be present in the token with a matching
--   value. For the maximum number of claims that you can require, see
--   <a>Amazon EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:usernamePrefix:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_usernamePrefix</a> - The prefix
--   that is prepended to username claims to prevent clashes with existing
--   names. If you do not provide this field, and <tt>username</tt> is a
--   value other than <tt>email</tt>, the prefix defaults to
--   <tt>issuerurl#</tt>. You can use the value <tt>-</tt> to disable all
--   prefixing.
--   
--   <a>$sel:groupsClaim:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_groupsClaim</a> - The JWT claim
--   that the provider uses to return your groups.
--   
--   
--   <a>$sel:identityProviderConfigName:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_identityProviderConfigName</a> -
--   The name of the OIDC provider configuration.
--   
--   <a>$sel:issuerUrl:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_issuerUrl</a> - The URL of the
--   OpenID identity provider that allows the API server to discover public
--   signing keys for verifying tokens. The URL must begin with
--   <tt>https://</tt> and should correspond to the <tt>iss</tt> claim in
--   the provider's OIDC ID tokens. Per the OIDC standard, path components
--   are allowed but query parameters are not. Typically the URL consists
--   of only a hostname, like <tt>https://server.example.org</tt> or
--   <tt>https://example.com</tt>. This URL should point to the level below
--   <tt>.well-known/openid-configuration</tt> and must be publicly
--   accessible over the internet.
--   
--   <a>$sel:clientId:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_clientId</a> - This is also known
--   as <i>audience</i>. The ID for the client application that makes
--   authentication requests to the OpenID identity provider.
newOidcIdentityProviderConfigRequest :: Text -> Text -> Text -> OidcIdentityProviderConfigRequest

-- | The prefix that is prepended to group claims to prevent clashes with
--   existing names (such as <tt>system:</tt> groups). For example, the
--   value<tt> oidc:</tt> will create group names like
--   <tt>oidc:engineering</tt> and <tt>oidc:infra</tt>.
oidcIdentityProviderConfigRequest_groupsPrefix :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The JSON Web Token (JWT) claim to use as the username. The default is
--   <tt>sub</tt>, which is expected to be a unique identifier of the end
--   user. You can choose other claims, such as <tt>email</tt> or
--   <tt>name</tt>, depending on the OpenID identity provider. Claims other
--   than <tt>email</tt> are prefixed with the issuer URL to prevent naming
--   clashes with other plug-ins.
oidcIdentityProviderConfigRequest_usernameClaim :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The key value pairs that describe required claims in the identity
--   token. If set, each claim is verified to be present in the token with
--   a matching value. For the maximum number of claims that you can
--   require, see <a>Amazon EKS service quotas</a> in the <i>Amazon EKS
--   User Guide</i>.
oidcIdentityProviderConfigRequest_requiredClaims :: Lens' OidcIdentityProviderConfigRequest (Maybe (HashMap Text Text))

-- | The prefix that is prepended to username claims to prevent clashes
--   with existing names. If you do not provide this field, and
--   <tt>username</tt> is a value other than <tt>email</tt>, the prefix
--   defaults to <tt>issuerurl#</tt>. You can use the value <tt>-</tt> to
--   disable all prefixing.
oidcIdentityProviderConfigRequest_usernamePrefix :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The JWT claim that the provider uses to return your groups.
oidcIdentityProviderConfigRequest_groupsClaim :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The name of the OIDC provider configuration.
oidcIdentityProviderConfigRequest_identityProviderConfigName :: Lens' OidcIdentityProviderConfigRequest Text

-- | The URL of the OpenID identity provider that allows the API server to
--   discover public signing keys for verifying tokens. The URL must begin
--   with <tt>https://</tt> and should correspond to the <tt>iss</tt> claim
--   in the provider's OIDC ID tokens. Per the OIDC standard, path
--   components are allowed but query parameters are not. Typically the URL
--   consists of only a hostname, like <tt>https://server.example.org</tt>
--   or <tt>https://example.com</tt>. This URL should point to the level
--   below <tt>.well-known/openid-configuration</tt> and must be publicly
--   accessible over the internet.
oidcIdentityProviderConfigRequest_issuerUrl :: Lens' OidcIdentityProviderConfigRequest Text

-- | This is also known as <i>audience</i>. The ID for the client
--   application that makes authentication requests to the OpenID identity
--   provider.
oidcIdentityProviderConfigRequest_clientId :: Lens' OidcIdentityProviderConfigRequest Text
instance GHC.Generics.Generic Network.AWS.EKS.Types.OidcIdentityProviderConfigRequest.OidcIdentityProviderConfigRequest
instance GHC.Show.Show Network.AWS.EKS.Types.OidcIdentityProviderConfigRequest.OidcIdentityProviderConfigRequest
instance GHC.Read.Read Network.AWS.EKS.Types.OidcIdentityProviderConfigRequest.OidcIdentityProviderConfigRequest
instance GHC.Classes.Eq Network.AWS.EKS.Types.OidcIdentityProviderConfigRequest.OidcIdentityProviderConfigRequest
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.OidcIdentityProviderConfigRequest.OidcIdentityProviderConfigRequest
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.OidcIdentityProviderConfigRequest.OidcIdentityProviderConfigRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.OidcIdentityProviderConfigRequest.OidcIdentityProviderConfigRequest


module Network.AWS.EKS.Types.Provider

-- | Identifies the Key Management Service (KMS) key used to encrypt the
--   secrets.
--   
--   <i>See:</i> <a>newProvider</a> smart constructor.
data Provider
Provider' :: Maybe Text -> Provider

-- | Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must
--   be symmetric, created in the same region as the cluster, and if the
--   KMS key was created in a different account, the user must have access
--   to the KMS key. For more information, see <a>Allowing Users in Other
--   Accounts to Use a KMS key</a> in the <i>Key Management Service
--   Developer Guide</i>.
[$sel:keyArn:Provider'] :: Provider -> Maybe Text

-- | Create a value of <a>Provider</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyArn:Provider'</a>, <a>provider_keyArn</a> - Amazon Resource
--   Name (ARN) or alias of the KMS key. The KMS key must be symmetric,
--   created in the same region as the cluster, and if the KMS key was
--   created in a different account, the user must have access to the KMS
--   key. For more information, see <a>Allowing Users in Other Accounts to
--   Use a KMS key</a> in the <i>Key Management Service Developer
--   Guide</i>.
newProvider :: Provider

-- | Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must
--   be symmetric, created in the same region as the cluster, and if the
--   KMS key was created in a different account, the user must have access
--   to the KMS key. For more information, see <a>Allowing Users in Other
--   Accounts to Use a KMS key</a> in the <i>Key Management Service
--   Developer Guide</i>.
provider_keyArn :: Lens' Provider (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.Provider.Provider
instance GHC.Show.Show Network.AWS.EKS.Types.Provider.Provider
instance GHC.Read.Read Network.AWS.EKS.Types.Provider.Provider
instance GHC.Classes.Eq Network.AWS.EKS.Types.Provider.Provider
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.Provider.Provider
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.Provider.Provider
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.Provider.Provider
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.Provider.Provider


module Network.AWS.EKS.Types.EncryptionConfig

-- | The encryption configuration for the cluster.
--   
--   <i>See:</i> <a>newEncryptionConfig</a> smart constructor.
data EncryptionConfig
EncryptionConfig' :: Maybe [Text] -> Maybe Provider -> EncryptionConfig

-- | Specifies the resources to be encrypted. The only supported value is
--   "secrets".
[$sel:resources:EncryptionConfig'] :: EncryptionConfig -> Maybe [Text]

-- | Key Management Service (KMS) key. Either the ARN or the alias can be
--   used.
[$sel:provider:EncryptionConfig'] :: EncryptionConfig -> Maybe Provider

-- | Create a value of <a>EncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:EncryptionConfig'</a>,
--   <a>encryptionConfig_resources</a> - Specifies the resources to be
--   encrypted. The only supported value is "secrets".
--   
--   <a>$sel:provider:EncryptionConfig'</a>,
--   <a>encryptionConfig_provider</a> - Key Management Service (KMS) key.
--   Either the ARN or the alias can be used.
newEncryptionConfig :: EncryptionConfig

-- | Specifies the resources to be encrypted. The only supported value is
--   "secrets".
encryptionConfig_resources :: Lens' EncryptionConfig (Maybe [Text])

-- | Key Management Service (KMS) key. Either the ARN or the alias can be
--   used.
encryptionConfig_provider :: Lens' EncryptionConfig (Maybe Provider)
instance GHC.Generics.Generic Network.AWS.EKS.Types.EncryptionConfig.EncryptionConfig
instance GHC.Show.Show Network.AWS.EKS.Types.EncryptionConfig.EncryptionConfig
instance GHC.Read.Read Network.AWS.EKS.Types.EncryptionConfig.EncryptionConfig
instance GHC.Classes.Eq Network.AWS.EKS.Types.EncryptionConfig.EncryptionConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.EncryptionConfig.EncryptionConfig
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.EncryptionConfig.EncryptionConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.EncryptionConfig.EncryptionConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.EncryptionConfig.EncryptionConfig


module Network.AWS.EKS.Types.RemoteAccessConfig

-- | An object representing the remote access configuration for the managed
--   node group.
--   
--   <i>See:</i> <a>newRemoteAccessConfig</a> smart constructor.
data RemoteAccessConfig
RemoteAccessConfig' :: Maybe [Text] -> Maybe Text -> RemoteAccessConfig

-- | The security groups that are allowed SSH access (port 22) to the
--   nodes. If you specify an Amazon EC2 SSH key but do not specify a
--   source security group when you create a managed node group, then port
--   22 on the nodes is opened to the internet (0.0.0.0/0). For more
--   information, see <a>Security Groups for Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.
[$sel:sourceSecurityGroups:RemoteAccessConfig'] :: RemoteAccessConfig -> Maybe [Text]

-- | The Amazon EC2 SSH key that provides access for SSH communication with
--   the nodes in the managed node group. For more information, see
--   <a>Amazon EC2 key pairs and Linux instances</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide for Linux Instances</i>.
[$sel:ec2SshKey:RemoteAccessConfig'] :: RemoteAccessConfig -> Maybe Text

-- | Create a value of <a>RemoteAccessConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceSecurityGroups:RemoteAccessConfig'</a>,
--   <a>remoteAccessConfig_sourceSecurityGroups</a> - The security groups
--   that are allowed SSH access (port 22) to the nodes. If you specify an
--   Amazon EC2 SSH key but do not specify a source security group when you
--   create a managed node group, then port 22 on the nodes is opened to
--   the internet (0.0.0.0/0). For more information, see <a>Security Groups
--   for Your VPC</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
--   
--   <a>$sel:ec2SshKey:RemoteAccessConfig'</a>,
--   <a>remoteAccessConfig_ec2SshKey</a> - The Amazon EC2 SSH key that
--   provides access for SSH communication with the nodes in the managed
--   node group. For more information, see <a>Amazon EC2 key pairs and
--   Linux instances</a> in the <i>Amazon Elastic Compute Cloud User Guide
--   for Linux Instances</i>.
newRemoteAccessConfig :: RemoteAccessConfig

-- | The security groups that are allowed SSH access (port 22) to the
--   nodes. If you specify an Amazon EC2 SSH key but do not specify a
--   source security group when you create a managed node group, then port
--   22 on the nodes is opened to the internet (0.0.0.0/0). For more
--   information, see <a>Security Groups for Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.
remoteAccessConfig_sourceSecurityGroups :: Lens' RemoteAccessConfig (Maybe [Text])

-- | The Amazon EC2 SSH key that provides access for SSH communication with
--   the nodes in the managed node group. For more information, see
--   <a>Amazon EC2 key pairs and Linux instances</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide for Linux Instances</i>.
remoteAccessConfig_ec2SshKey :: Lens' RemoteAccessConfig (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.RemoteAccessConfig.RemoteAccessConfig
instance GHC.Show.Show Network.AWS.EKS.Types.RemoteAccessConfig.RemoteAccessConfig
instance GHC.Read.Read Network.AWS.EKS.Types.RemoteAccessConfig.RemoteAccessConfig
instance GHC.Classes.Eq Network.AWS.EKS.Types.RemoteAccessConfig.RemoteAccessConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.RemoteAccessConfig.RemoteAccessConfig
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.RemoteAccessConfig.RemoteAccessConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.RemoteAccessConfig.RemoteAccessConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.RemoteAccessConfig.RemoteAccessConfig


module Network.AWS.EKS.Types.ResolveConflicts
newtype ResolveConflicts
ResolveConflicts' :: Text -> ResolveConflicts
[fromResolveConflicts] :: ResolveConflicts -> Text
pattern ResolveConflicts_NONE :: ResolveConflicts
pattern ResolveConflicts_OVERWRITE :: ResolveConflicts
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance GHC.Generics.Generic Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance GHC.Classes.Ord Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance GHC.Classes.Eq Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance GHC.Read.Read Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts
instance GHC.Show.Show Network.AWS.EKS.Types.ResolveConflicts.ResolveConflicts


module Network.AWS.EKS.Types.TaintEffect
newtype TaintEffect
TaintEffect' :: Text -> TaintEffect
[fromTaintEffect] :: TaintEffect -> Text
pattern TaintEffect_NO_EXECUTE :: TaintEffect
pattern TaintEffect_NO_SCHEDULE :: TaintEffect
pattern TaintEffect_PREFER_NO_SCHEDULE :: TaintEffect
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance GHC.Generics.Generic Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance GHC.Classes.Ord Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance GHC.Classes.Eq Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance GHC.Read.Read Network.AWS.EKS.Types.TaintEffect.TaintEffect
instance GHC.Show.Show Network.AWS.EKS.Types.TaintEffect.TaintEffect


module Network.AWS.EKS.Types.Taint

-- | A property that allows a node to repel a set of pods.
--   
--   <i>See:</i> <a>newTaint</a> smart constructor.
data Taint
Taint' :: Maybe TaintEffect -> Maybe Text -> Maybe Text -> Taint

-- | The effect of the taint.
[$sel:effect:Taint'] :: Taint -> Maybe TaintEffect

-- | The value of the taint.
[$sel:value:Taint'] :: Taint -> Maybe Text

-- | The key of the taint.
[$sel:key:Taint'] :: Taint -> Maybe Text

-- | Create a value of <a>Taint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:effect:Taint'</a>, <a>taint_effect</a> - The effect of the
--   taint.
--   
--   <a>$sel:value:Taint'</a>, <a>taint_value</a> - The value of the taint.
--   
--   <a>$sel:key:Taint'</a>, <a>taint_key</a> - The key of the taint.
newTaint :: Taint

-- | The effect of the taint.
taint_effect :: Lens' Taint (Maybe TaintEffect)

-- | The value of the taint.
taint_value :: Lens' Taint (Maybe Text)

-- | The key of the taint.
taint_key :: Lens' Taint (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.Taint.Taint
instance GHC.Show.Show Network.AWS.EKS.Types.Taint.Taint
instance GHC.Read.Read Network.AWS.EKS.Types.Taint.Taint
instance GHC.Classes.Eq Network.AWS.EKS.Types.Taint.Taint
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.Taint.Taint
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.Taint.Taint
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.Taint.Taint
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.Taint.Taint


module Network.AWS.EKS.Types.Nodegroup

-- | An object representing an Amazon EKS managed node group.
--   
--   <i>See:</i> <a>newNodegroup</a> smart constructor.
data Nodegroup
Nodegroup' :: Maybe POSIX -> Maybe CapacityTypes -> Maybe NodegroupStatus -> Maybe [Text] -> Maybe POSIX -> Maybe [Taint] -> Maybe [Text] -> Maybe RemoteAccessConfig -> Maybe Int -> Maybe Text -> Maybe NodegroupResources -> Maybe NodegroupHealth -> Maybe Text -> Maybe NodegroupScalingConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe (HashMap Text Text) -> Maybe AMITypes -> Maybe Text -> Maybe NodegroupUpdateConfig -> Maybe (HashMap Text Text) -> Nodegroup

-- | The Unix epoch timestamp in seconds for when the managed node group
--   was last modified.
[$sel:modifiedAt:Nodegroup'] :: Nodegroup -> Maybe POSIX

-- | The capacity type of your managed node group.
[$sel:capacityType:Nodegroup'] :: Nodegroup -> Maybe CapacityTypes

-- | The current status of the managed node group.
[$sel:status:Nodegroup'] :: Nodegroup -> Maybe NodegroupStatus

-- | If the node group wasn't deployed with a launch template, then this is
--   the instance type that is associated with the node group. If the node
--   group was deployed with a launch template, then this is <tt>null</tt>.
[$sel:instanceTypes:Nodegroup'] :: Nodegroup -> Maybe [Text]

-- | The Unix epoch timestamp in seconds for when the managed node group
--   was created.
[$sel:createdAt:Nodegroup'] :: Nodegroup -> Maybe POSIX

-- | The Kubernetes taints to be applied to the nodes in the node group
--   when they are created. Effect is one of <tt>No_Schedule</tt>,
--   <tt>Prefer_No_Schedule</tt>, or <tt>No_Execute</tt>. Kubernetes taints
--   can be used together with tolerations to control how workloads are
--   scheduled to your nodes.
[$sel:taints:Nodegroup'] :: Nodegroup -> Maybe [Taint]

-- | The subnets that were specified for the Auto Scaling group that is
--   associated with your node group.
[$sel:subnets:Nodegroup'] :: Nodegroup -> Maybe [Text]

-- | If the node group wasn't deployed with a launch template, then this is
--   the remote access configuration that is associated with the node
--   group. If the node group was deployed with a launch template, then
--   this is <tt>null</tt>.
[$sel:remoteAccess:Nodegroup'] :: Nodegroup -> Maybe RemoteAccessConfig

-- | If the node group wasn't deployed with a launch template, then this is
--   the disk size in the node group configuration. If the node group was
--   deployed with a launch template, then this is <tt>null</tt>.
[$sel:diskSize:Nodegroup'] :: Nodegroup -> Maybe Int

-- | If the node group was deployed using a launch template with a custom
--   AMI, then this is the AMI ID that was specified in the launch
--   template. For node groups that weren't deployed using a launch
--   template, this is the version of the Amazon EKS optimized AMI that the
--   node group was deployed with.
[$sel:releaseVersion:Nodegroup'] :: Nodegroup -> Maybe Text

-- | The resources associated with the node group, such as Auto Scaling
--   groups and security groups for remote access.
[$sel:resources:Nodegroup'] :: Nodegroup -> Maybe NodegroupResources

-- | The health status of the node group. If there are issues with your
--   node group's health, they are listed here.
[$sel:health:Nodegroup'] :: Nodegroup -> Maybe NodegroupHealth

-- | The IAM role associated with your node group. The Amazon EKS node
--   <tt>kubelet</tt> daemon makes calls to Amazon Web Services APIs on
--   your behalf. Nodes receive permissions for these API calls through an
--   IAM instance profile and associated policies.
[$sel:nodeRole:Nodegroup'] :: Nodegroup -> Maybe Text

-- | The scaling configuration details for the Auto Scaling group that is
--   associated with your node group.
[$sel:scalingConfig:Nodegroup'] :: Nodegroup -> Maybe NodegroupScalingConfig

-- | The Kubernetes version of the managed node group.
[$sel:version:Nodegroup'] :: Nodegroup -> Maybe Text

-- | The Amazon Resource Name (ARN) associated with the managed node group.
[$sel:nodegroupArn:Nodegroup'] :: Nodegroup -> Maybe Text

-- | The name of the cluster that the managed node group resides in.
[$sel:clusterName:Nodegroup'] :: Nodegroup -> Maybe Text

-- | If a launch template was used to create the node group, then this is
--   the launch template that was used.
[$sel:launchTemplate:Nodegroup'] :: Nodegroup -> Maybe LaunchTemplateSpecification

-- | The Kubernetes labels applied to the nodes in the node group.
--   
--   Only labels that are applied with the Amazon EKS API are shown here.
--   There may be other Kubernetes labels applied to the nodes in this
--   group.
[$sel:labels:Nodegroup'] :: Nodegroup -> Maybe (HashMap Text Text)

-- | If the node group was deployed using a launch template with a custom
--   AMI, then this is <tt>CUSTOM</tt>. For node groups that weren't
--   deployed using a launch template, this is the AMI type that was
--   specified in the node group configuration.
[$sel:amiType:Nodegroup'] :: Nodegroup -> Maybe AMITypes

-- | The name associated with an Amazon EKS managed node group.
[$sel:nodegroupName:Nodegroup'] :: Nodegroup -> Maybe Text

-- | The node group update configuration.
[$sel:updateConfig:Nodegroup'] :: Nodegroup -> Maybe NodegroupUpdateConfig

-- | The metadata applied to the node group to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Node group tags do not propagate to any
--   other resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
[$sel:tags:Nodegroup'] :: Nodegroup -> Maybe (HashMap Text Text)

-- | Create a value of <a>Nodegroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modifiedAt:Nodegroup'</a>, <a>nodegroup_modifiedAt</a> - The
--   Unix epoch timestamp in seconds for when the managed node group was
--   last modified.
--   
--   <a>$sel:capacityType:Nodegroup'</a>, <a>nodegroup_capacityType</a> -
--   The capacity type of your managed node group.
--   
--   <a>$sel:status:Nodegroup'</a>, <a>nodegroup_status</a> - The current
--   status of the managed node group.
--   
--   <a>$sel:instanceTypes:Nodegroup'</a>, <a>nodegroup_instanceTypes</a> -
--   If the node group wasn't deployed with a launch template, then this is
--   the instance type that is associated with the node group. If the node
--   group was deployed with a launch template, then this is <tt>null</tt>.
--   
--   <a>$sel:createdAt:Nodegroup'</a>, <a>nodegroup_createdAt</a> - The
--   Unix epoch timestamp in seconds for when the managed node group was
--   created.
--   
--   <a>$sel:taints:Nodegroup'</a>, <a>nodegroup_taints</a> - The
--   Kubernetes taints to be applied to the nodes in the node group when
--   they are created. Effect is one of <tt>No_Schedule</tt>,
--   <tt>Prefer_No_Schedule</tt>, or <tt>No_Execute</tt>. Kubernetes taints
--   can be used together with tolerations to control how workloads are
--   scheduled to your nodes.
--   
--   <a>$sel:subnets:Nodegroup'</a>, <a>nodegroup_subnets</a> - The subnets
--   that were specified for the Auto Scaling group that is associated with
--   your node group.
--   
--   <a>$sel:remoteAccess:Nodegroup'</a>, <a>nodegroup_remoteAccess</a> -
--   If the node group wasn't deployed with a launch template, then this is
--   the remote access configuration that is associated with the node
--   group. If the node group was deployed with a launch template, then
--   this is <tt>null</tt>.
--   
--   <a>$sel:diskSize:Nodegroup'</a>, <a>nodegroup_diskSize</a> - If the
--   node group wasn't deployed with a launch template, then this is the
--   disk size in the node group configuration. If the node group was
--   deployed with a launch template, then this is <tt>null</tt>.
--   
--   <a>$sel:releaseVersion:Nodegroup'</a>, <a>nodegroup_releaseVersion</a>
--   - If the node group was deployed using a launch template with a custom
--   AMI, then this is the AMI ID that was specified in the launch
--   template. For node groups that weren't deployed using a launch
--   template, this is the version of the Amazon EKS optimized AMI that the
--   node group was deployed with.
--   
--   <a>$sel:resources:Nodegroup'</a>, <a>nodegroup_resources</a> - The
--   resources associated with the node group, such as Auto Scaling groups
--   and security groups for remote access.
--   
--   <a>$sel:health:Nodegroup'</a>, <a>nodegroup_health</a> - The health
--   status of the node group. If there are issues with your node group's
--   health, they are listed here.
--   
--   <a>$sel:nodeRole:Nodegroup'</a>, <a>nodegroup_nodeRole</a> - The IAM
--   role associated with your node group. The Amazon EKS node
--   <tt>kubelet</tt> daemon makes calls to Amazon Web Services APIs on
--   your behalf. Nodes receive permissions for these API calls through an
--   IAM instance profile and associated policies.
--   
--   <a>$sel:scalingConfig:Nodegroup'</a>, <a>nodegroup_scalingConfig</a> -
--   The scaling configuration details for the Auto Scaling group that is
--   associated with your node group.
--   
--   <a>$sel:version:Nodegroup'</a>, <a>nodegroup_version</a> - The
--   Kubernetes version of the managed node group.
--   
--   <a>$sel:nodegroupArn:Nodegroup'</a>, <a>nodegroup_nodegroupArn</a> -
--   The Amazon Resource Name (ARN) associated with the managed node group.
--   
--   <a>$sel:clusterName:Nodegroup'</a>, <a>nodegroup_clusterName</a> - The
--   name of the cluster that the managed node group resides in.
--   
--   <a>$sel:launchTemplate:Nodegroup'</a>, <a>nodegroup_launchTemplate</a>
--   - If a launch template was used to create the node group, then this is
--   the launch template that was used.
--   
--   <a>$sel:labels:Nodegroup'</a>, <a>nodegroup_labels</a> - The
--   Kubernetes labels applied to the nodes in the node group.
--   
--   Only labels that are applied with the Amazon EKS API are shown here.
--   There may be other Kubernetes labels applied to the nodes in this
--   group.
--   
--   <a>$sel:amiType:Nodegroup'</a>, <a>nodegroup_amiType</a> - If the node
--   group was deployed using a launch template with a custom AMI, then
--   this is <tt>CUSTOM</tt>. For node groups that weren't deployed using a
--   launch template, this is the AMI type that was specified in the node
--   group configuration.
--   
--   <a>$sel:nodegroupName:Nodegroup'</a>, <a>nodegroup_nodegroupName</a> -
--   The name associated with an Amazon EKS managed node group.
--   
--   <a>$sel:updateConfig:Nodegroup'</a>, <a>nodegroup_updateConfig</a> -
--   The node group update configuration.
--   
--   <a>$sel:tags:Nodegroup'</a>, <a>nodegroup_tags</a> - The metadata
--   applied to the node group to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define. Node group tags do not propagate to any other
--   resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
newNodegroup :: Nodegroup

-- | The Unix epoch timestamp in seconds for when the managed node group
--   was last modified.
nodegroup_modifiedAt :: Lens' Nodegroup (Maybe UTCTime)

-- | The capacity type of your managed node group.
nodegroup_capacityType :: Lens' Nodegroup (Maybe CapacityTypes)

-- | The current status of the managed node group.
nodegroup_status :: Lens' Nodegroup (Maybe NodegroupStatus)

-- | If the node group wasn't deployed with a launch template, then this is
--   the instance type that is associated with the node group. If the node
--   group was deployed with a launch template, then this is <tt>null</tt>.
nodegroup_instanceTypes :: Lens' Nodegroup (Maybe [Text])

-- | The Unix epoch timestamp in seconds for when the managed node group
--   was created.
nodegroup_createdAt :: Lens' Nodegroup (Maybe UTCTime)

-- | The Kubernetes taints to be applied to the nodes in the node group
--   when they are created. Effect is one of <tt>No_Schedule</tt>,
--   <tt>Prefer_No_Schedule</tt>, or <tt>No_Execute</tt>. Kubernetes taints
--   can be used together with tolerations to control how workloads are
--   scheduled to your nodes.
nodegroup_taints :: Lens' Nodegroup (Maybe [Taint])

-- | The subnets that were specified for the Auto Scaling group that is
--   associated with your node group.
nodegroup_subnets :: Lens' Nodegroup (Maybe [Text])

-- | If the node group wasn't deployed with a launch template, then this is
--   the remote access configuration that is associated with the node
--   group. If the node group was deployed with a launch template, then
--   this is <tt>null</tt>.
nodegroup_remoteAccess :: Lens' Nodegroup (Maybe RemoteAccessConfig)

-- | If the node group wasn't deployed with a launch template, then this is
--   the disk size in the node group configuration. If the node group was
--   deployed with a launch template, then this is <tt>null</tt>.
nodegroup_diskSize :: Lens' Nodegroup (Maybe Int)

-- | If the node group was deployed using a launch template with a custom
--   AMI, then this is the AMI ID that was specified in the launch
--   template. For node groups that weren't deployed using a launch
--   template, this is the version of the Amazon EKS optimized AMI that the
--   node group was deployed with.
nodegroup_releaseVersion :: Lens' Nodegroup (Maybe Text)

-- | The resources associated with the node group, such as Auto Scaling
--   groups and security groups for remote access.
nodegroup_resources :: Lens' Nodegroup (Maybe NodegroupResources)

-- | The health status of the node group. If there are issues with your
--   node group's health, they are listed here.
nodegroup_health :: Lens' Nodegroup (Maybe NodegroupHealth)

-- | The IAM role associated with your node group. The Amazon EKS node
--   <tt>kubelet</tt> daemon makes calls to Amazon Web Services APIs on
--   your behalf. Nodes receive permissions for these API calls through an
--   IAM instance profile and associated policies.
nodegroup_nodeRole :: Lens' Nodegroup (Maybe Text)

-- | The scaling configuration details for the Auto Scaling group that is
--   associated with your node group.
nodegroup_scalingConfig :: Lens' Nodegroup (Maybe NodegroupScalingConfig)

-- | The Kubernetes version of the managed node group.
nodegroup_version :: Lens' Nodegroup (Maybe Text)

-- | The Amazon Resource Name (ARN) associated with the managed node group.
nodegroup_nodegroupArn :: Lens' Nodegroup (Maybe Text)

-- | The name of the cluster that the managed node group resides in.
nodegroup_clusterName :: Lens' Nodegroup (Maybe Text)

-- | If a launch template was used to create the node group, then this is
--   the launch template that was used.
nodegroup_launchTemplate :: Lens' Nodegroup (Maybe LaunchTemplateSpecification)

-- | The Kubernetes labels applied to the nodes in the node group.
--   
--   Only labels that are applied with the Amazon EKS API are shown here.
--   There may be other Kubernetes labels applied to the nodes in this
--   group.
nodegroup_labels :: Lens' Nodegroup (Maybe (HashMap Text Text))

-- | If the node group was deployed using a launch template with a custom
--   AMI, then this is <tt>CUSTOM</tt>. For node groups that weren't
--   deployed using a launch template, this is the AMI type that was
--   specified in the node group configuration.
nodegroup_amiType :: Lens' Nodegroup (Maybe AMITypes)

-- | The name associated with an Amazon EKS managed node group.
nodegroup_nodegroupName :: Lens' Nodegroup (Maybe Text)

-- | The node group update configuration.
nodegroup_updateConfig :: Lens' Nodegroup (Maybe NodegroupUpdateConfig)

-- | The metadata applied to the node group to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Node group tags do not propagate to any
--   other resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
nodegroup_tags :: Lens' Nodegroup (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.EKS.Types.Nodegroup.Nodegroup
instance GHC.Show.Show Network.AWS.EKS.Types.Nodegroup.Nodegroup
instance GHC.Read.Read Network.AWS.EKS.Types.Nodegroup.Nodegroup
instance GHC.Classes.Eq Network.AWS.EKS.Types.Nodegroup.Nodegroup
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.Nodegroup.Nodegroup
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.Nodegroup.Nodegroup
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.Nodegroup.Nodegroup


module Network.AWS.EKS.Types.UpdateLabelsPayload

-- | An object representing a Kubernetes label change for a managed node
--   group.
--   
--   <i>See:</i> <a>newUpdateLabelsPayload</a> smart constructor.
data UpdateLabelsPayload
UpdateLabelsPayload' :: Maybe [Text] -> Maybe (HashMap Text Text) -> UpdateLabelsPayload

-- | Kubernetes labels to be removed.
[$sel:removeLabels:UpdateLabelsPayload'] :: UpdateLabelsPayload -> Maybe [Text]

-- | Kubernetes labels to be added or updated.
[$sel:addOrUpdateLabels:UpdateLabelsPayload'] :: UpdateLabelsPayload -> Maybe (HashMap Text Text)

-- | Create a value of <a>UpdateLabelsPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:removeLabels:UpdateLabelsPayload'</a>,
--   <a>updateLabelsPayload_removeLabels</a> - Kubernetes labels to be
--   removed.
--   
--   <a>$sel:addOrUpdateLabels:UpdateLabelsPayload'</a>,
--   <a>updateLabelsPayload_addOrUpdateLabels</a> - Kubernetes labels to be
--   added or updated.
newUpdateLabelsPayload :: UpdateLabelsPayload

-- | Kubernetes labels to be removed.
updateLabelsPayload_removeLabels :: Lens' UpdateLabelsPayload (Maybe [Text])

-- | Kubernetes labels to be added or updated.
updateLabelsPayload_addOrUpdateLabels :: Lens' UpdateLabelsPayload (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Network.AWS.EKS.Types.UpdateLabelsPayload.UpdateLabelsPayload
instance GHC.Show.Show Network.AWS.EKS.Types.UpdateLabelsPayload.UpdateLabelsPayload
instance GHC.Read.Read Network.AWS.EKS.Types.UpdateLabelsPayload.UpdateLabelsPayload
instance GHC.Classes.Eq Network.AWS.EKS.Types.UpdateLabelsPayload.UpdateLabelsPayload
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.UpdateLabelsPayload.UpdateLabelsPayload
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.UpdateLabelsPayload.UpdateLabelsPayload
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.UpdateLabelsPayload.UpdateLabelsPayload


module Network.AWS.EKS.Types.UpdateParamType
newtype UpdateParamType
UpdateParamType' :: Text -> UpdateParamType
[fromUpdateParamType] :: UpdateParamType -> Text
pattern UpdateParamType_AddonVersion :: UpdateParamType
pattern UpdateParamType_ClusterLogging :: UpdateParamType
pattern UpdateParamType_DesiredSize :: UpdateParamType
pattern UpdateParamType_EncryptionConfig :: UpdateParamType
pattern UpdateParamType_EndpointPrivateAccess :: UpdateParamType
pattern UpdateParamType_EndpointPublicAccess :: UpdateParamType
pattern UpdateParamType_IdentityProviderConfig :: UpdateParamType
pattern UpdateParamType_LabelsToAdd :: UpdateParamType
pattern UpdateParamType_LabelsToRemove :: UpdateParamType
pattern UpdateParamType_LaunchTemplateName :: UpdateParamType
pattern UpdateParamType_LaunchTemplateVersion :: UpdateParamType
pattern UpdateParamType_MaxSize :: UpdateParamType
pattern UpdateParamType_MaxUnavailable :: UpdateParamType
pattern UpdateParamType_MaxUnavailablePercentage :: UpdateParamType
pattern UpdateParamType_MinSize :: UpdateParamType
pattern UpdateParamType_PlatformVersion :: UpdateParamType
pattern UpdateParamType_PublicAccessCidrs :: UpdateParamType
pattern UpdateParamType_ReleaseVersion :: UpdateParamType
pattern UpdateParamType_ResolveConflicts :: UpdateParamType
pattern UpdateParamType_ServiceAccountRoleArn :: UpdateParamType
pattern UpdateParamType_TaintsToAdd :: UpdateParamType
pattern UpdateParamType_TaintsToRemove :: UpdateParamType
pattern UpdateParamType_Version :: UpdateParamType
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance GHC.Generics.Generic Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance GHC.Classes.Ord Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance GHC.Classes.Eq Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance GHC.Read.Read Network.AWS.EKS.Types.UpdateParamType.UpdateParamType
instance GHC.Show.Show Network.AWS.EKS.Types.UpdateParamType.UpdateParamType


module Network.AWS.EKS.Types.UpdateParam

-- | An object representing the details of an update request.
--   
--   <i>See:</i> <a>newUpdateParam</a> smart constructor.
data UpdateParam
UpdateParam' :: Maybe Text -> Maybe UpdateParamType -> UpdateParam

-- | The value of the keys submitted as part of an update request.
[$sel:value:UpdateParam'] :: UpdateParam -> Maybe Text

-- | The keys associated with an update request.
[$sel:type':UpdateParam'] :: UpdateParam -> Maybe UpdateParamType

-- | Create a value of <a>UpdateParam</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:UpdateParam'</a>, <a>updateParam_value</a> - The value
--   of the keys submitted as part of an update request.
--   
--   <a>$sel:type':UpdateParam'</a>, <a>updateParam_type</a> - The keys
--   associated with an update request.
newUpdateParam :: UpdateParam

-- | The value of the keys submitted as part of an update request.
updateParam_value :: Lens' UpdateParam (Maybe Text)

-- | The keys associated with an update request.
updateParam_type :: Lens' UpdateParam (Maybe UpdateParamType)
instance GHC.Generics.Generic Network.AWS.EKS.Types.UpdateParam.UpdateParam
instance GHC.Show.Show Network.AWS.EKS.Types.UpdateParam.UpdateParam
instance GHC.Read.Read Network.AWS.EKS.Types.UpdateParam.UpdateParam
instance GHC.Classes.Eq Network.AWS.EKS.Types.UpdateParam.UpdateParam
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.UpdateParam.UpdateParam
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.UpdateParam.UpdateParam
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.UpdateParam.UpdateParam


module Network.AWS.EKS.Types.UpdateStatus
newtype UpdateStatus
UpdateStatus' :: Text -> UpdateStatus
[fromUpdateStatus] :: UpdateStatus -> Text
pattern UpdateStatus_Cancelled :: UpdateStatus
pattern UpdateStatus_Failed :: UpdateStatus
pattern UpdateStatus_InProgress :: UpdateStatus
pattern UpdateStatus_Successful :: UpdateStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance GHC.Generics.Generic Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance GHC.Classes.Ord Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance GHC.Classes.Eq Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance GHC.Read.Read Network.AWS.EKS.Types.UpdateStatus.UpdateStatus
instance GHC.Show.Show Network.AWS.EKS.Types.UpdateStatus.UpdateStatus


module Network.AWS.EKS.Types.UpdateTaintsPayload

-- | An object representing the details of an update to a taints payload.
--   
--   <i>See:</i> <a>newUpdateTaintsPayload</a> smart constructor.
data UpdateTaintsPayload
UpdateTaintsPayload' :: Maybe [Taint] -> Maybe [Taint] -> UpdateTaintsPayload

-- | Kubernetes taints to be added or updated.
[$sel:addOrUpdateTaints:UpdateTaintsPayload'] :: UpdateTaintsPayload -> Maybe [Taint]

-- | Kubernetes taints to be removed.
[$sel:removeTaints:UpdateTaintsPayload'] :: UpdateTaintsPayload -> Maybe [Taint]

-- | Create a value of <a>UpdateTaintsPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addOrUpdateTaints:UpdateTaintsPayload'</a>,
--   <a>updateTaintsPayload_addOrUpdateTaints</a> - Kubernetes taints to be
--   added or updated.
--   
--   <a>$sel:removeTaints:UpdateTaintsPayload'</a>,
--   <a>updateTaintsPayload_removeTaints</a> - Kubernetes taints to be
--   removed.
newUpdateTaintsPayload :: UpdateTaintsPayload

-- | Kubernetes taints to be added or updated.
updateTaintsPayload_addOrUpdateTaints :: Lens' UpdateTaintsPayload (Maybe [Taint])

-- | Kubernetes taints to be removed.
updateTaintsPayload_removeTaints :: Lens' UpdateTaintsPayload (Maybe [Taint])
instance GHC.Generics.Generic Network.AWS.EKS.Types.UpdateTaintsPayload.UpdateTaintsPayload
instance GHC.Show.Show Network.AWS.EKS.Types.UpdateTaintsPayload.UpdateTaintsPayload
instance GHC.Read.Read Network.AWS.EKS.Types.UpdateTaintsPayload.UpdateTaintsPayload
instance GHC.Classes.Eq Network.AWS.EKS.Types.UpdateTaintsPayload.UpdateTaintsPayload
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.UpdateTaintsPayload.UpdateTaintsPayload
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.UpdateTaintsPayload.UpdateTaintsPayload
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.UpdateTaintsPayload.UpdateTaintsPayload


module Network.AWS.EKS.Types.UpdateType
newtype UpdateType
UpdateType' :: Text -> UpdateType
[fromUpdateType] :: UpdateType -> Text
pattern UpdateType_AddonUpdate :: UpdateType
pattern UpdateType_AssociateEncryptionConfig :: UpdateType
pattern UpdateType_AssociateIdentityProviderConfig :: UpdateType
pattern UpdateType_ConfigUpdate :: UpdateType
pattern UpdateType_DisassociateIdentityProviderConfig :: UpdateType
pattern UpdateType_EndpointAccessUpdate :: UpdateType
pattern UpdateType_LoggingUpdate :: UpdateType
pattern UpdateType_VersionUpdate :: UpdateType
instance Network.AWS.Data.XML.ToXML Network.AWS.EKS.Types.UpdateType.UpdateType
instance Network.AWS.Data.XML.FromXML Network.AWS.EKS.Types.UpdateType.UpdateType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.EKS.Types.UpdateType.UpdateType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.UpdateType.UpdateType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.EKS.Types.UpdateType.UpdateType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.UpdateType.UpdateType
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.Types.UpdateType.UpdateType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.EKS.Types.UpdateType.UpdateType
instance Network.AWS.Data.Log.ToLog Network.AWS.EKS.Types.UpdateType.UpdateType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.EKS.Types.UpdateType.UpdateType
instance Network.AWS.Data.Text.ToText Network.AWS.EKS.Types.UpdateType.UpdateType
instance Network.AWS.Data.Text.FromText Network.AWS.EKS.Types.UpdateType.UpdateType
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.UpdateType.UpdateType
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.UpdateType.UpdateType
instance GHC.Generics.Generic Network.AWS.EKS.Types.UpdateType.UpdateType
instance GHC.Classes.Ord Network.AWS.EKS.Types.UpdateType.UpdateType
instance GHC.Classes.Eq Network.AWS.EKS.Types.UpdateType.UpdateType
instance GHC.Read.Read Network.AWS.EKS.Types.UpdateType.UpdateType
instance GHC.Show.Show Network.AWS.EKS.Types.UpdateType.UpdateType


module Network.AWS.EKS.Types.Update

-- | An object representing an asynchronous update.
--   
--   <i>See:</i> <a>newUpdate</a> smart constructor.
data Update
Update' :: Maybe UpdateStatus -> Maybe POSIX -> Maybe [UpdateParam] -> Maybe Text -> Maybe UpdateType -> Maybe [ErrorDetail] -> Update

-- | The current status of the update.
[$sel:status:Update'] :: Update -> Maybe UpdateStatus

-- | The Unix epoch timestamp in seconds for when the update was created.
[$sel:createdAt:Update'] :: Update -> Maybe POSIX

-- | A key-value map that contains the parameters associated with the
--   update.
[$sel:params:Update'] :: Update -> Maybe [UpdateParam]

-- | A UUID that is used to track the update.
[$sel:id:Update'] :: Update -> Maybe Text

-- | The type of the update.
[$sel:type':Update'] :: Update -> Maybe UpdateType

-- | Any errors associated with a <tt>Failed</tt> update.
[$sel:errors:Update'] :: Update -> Maybe [ErrorDetail]

-- | Create a value of <a>Update</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Update'</a>, <a>update_status</a> - The current status
--   of the update.
--   
--   <a>$sel:createdAt:Update'</a>, <a>update_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the update was created.
--   
--   <a>$sel:params:Update'</a>, <a>update_params</a> - A key-value map
--   that contains the parameters associated with the update.
--   
--   <a>$sel:id:Update'</a>, <a>update_id</a> - A UUID that is used to
--   track the update.
--   
--   <a>$sel:type':Update'</a>, <a>update_type</a> - The type of the
--   update.
--   
--   <a>$sel:errors:Update'</a>, <a>update_errors</a> - Any errors
--   associated with a <tt>Failed</tt> update.
newUpdate :: Update

-- | The current status of the update.
update_status :: Lens' Update (Maybe UpdateStatus)

-- | The Unix epoch timestamp in seconds for when the update was created.
update_createdAt :: Lens' Update (Maybe UTCTime)

-- | A key-value map that contains the parameters associated with the
--   update.
update_params :: Lens' Update (Maybe [UpdateParam])

-- | A UUID that is used to track the update.
update_id :: Lens' Update (Maybe Text)

-- | The type of the update.
update_type :: Lens' Update (Maybe UpdateType)

-- | Any errors associated with a <tt>Failed</tt> update.
update_errors :: Lens' Update (Maybe [ErrorDetail])
instance GHC.Generics.Generic Network.AWS.EKS.Types.Update.Update
instance GHC.Show.Show Network.AWS.EKS.Types.Update.Update
instance GHC.Read.Read Network.AWS.EKS.Types.Update.Update
instance GHC.Classes.Eq Network.AWS.EKS.Types.Update.Update
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.Update.Update
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.Update.Update
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.Update.Update


module Network.AWS.EKS.Types.VpcConfigRequest

-- | An object representing the VPC configuration to use for an Amazon EKS
--   cluster.
--   
--   <i>See:</i> <a>newVpcConfigRequest</a> smart constructor.
data VpcConfigRequest
VpcConfigRequest' :: Maybe [Text] -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> VpcConfigRequest

-- | Specify one or more security groups for the cross-account elastic
--   network interfaces that Amazon EKS creates to use that allow
--   communication between your nodes and the Kubernetes control plane. If
--   you don't specify any security groups, then familiarize yourself with
--   the difference between Amazon EKS defaults for clusters deployed with
--   Kubernetes:
--   
--   <ul>
--   <li>1.14 Amazon EKS platform version <tt>eks.2</tt> and earlier</li>
--   <li>1.14 Amazon EKS platform version <tt>eks.3</tt> and later</li>
--   </ul>
--   
--   For more information, see <a>Amazon EKS security group
--   considerations</a> in the /<i>Amazon EKS User Guide</i>/ .
[$sel:securityGroupIds:VpcConfigRequest'] :: VpcConfigRequest -> Maybe [Text]

-- | Set this value to <tt>true</tt> to enable private access for your
--   cluster's Kubernetes API server endpoint. If you enable private
--   access, Kubernetes API requests from within your cluster's VPC use the
--   private VPC endpoint. The default value for this parameter is
--   <tt>false</tt>, which disables private access for your Kubernetes API
--   server. If you disable private access and you have nodes or Fargate
--   pods in the cluster, then ensure that <tt>publicAccessCidrs</tt>
--   includes the necessary CIDR blocks for communication with the nodes or
--   Fargate pods. For more information, see <a>Amazon EKS cluster endpoint
--   access control</a> in the /<i>Amazon EKS User Guide</i>/ .
[$sel:endpointPrivateAccess:VpcConfigRequest'] :: VpcConfigRequest -> Maybe Bool

-- | The CIDR blocks that are allowed access to your cluster's public
--   Kubernetes API server endpoint. Communication to the endpoint from
--   addresses outside of the CIDR blocks that you specify is denied. The
--   default value is <tt>0.0.0.0/0</tt>. If you've disabled private
--   endpoint access and you have nodes or Fargate pods in the cluster,
--   then ensure that you specify the necessary CIDR blocks. For more
--   information, see <a>Amazon EKS cluster endpoint access control</a> in
--   the /<i>Amazon EKS User Guide</i>/ .
[$sel:publicAccessCidrs:VpcConfigRequest'] :: VpcConfigRequest -> Maybe [Text]

-- | Specify subnets for your Amazon EKS nodes. Amazon EKS creates
--   cross-account elastic network interfaces in these subnets to allow
--   communication between your nodes and the Kubernetes control plane.
[$sel:subnetIds:VpcConfigRequest'] :: VpcConfigRequest -> Maybe [Text]

-- | Set this value to <tt>false</tt> to disable public access to your
--   cluster's Kubernetes API server endpoint. If you disable public
--   access, your cluster's Kubernetes API server can only receive requests
--   from within the cluster VPC. The default value for this parameter is
--   <tt>true</tt>, which enables public access for your Kubernetes API
--   server. For more information, see <a>Amazon EKS cluster endpoint
--   access control</a> in the /<i>Amazon EKS User Guide</i>/ .
[$sel:endpointPublicAccess:VpcConfigRequest'] :: VpcConfigRequest -> Maybe Bool

-- | Create a value of <a>VpcConfigRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_securityGroupIds</a> - Specify one or more
--   security groups for the cross-account elastic network interfaces that
--   Amazon EKS creates to use that allow communication between your nodes
--   and the Kubernetes control plane. If you don't specify any security
--   groups, then familiarize yourself with the difference between Amazon
--   EKS defaults for clusters deployed with Kubernetes:
--   
--   <ul>
--   <li>1.14 Amazon EKS platform version <tt>eks.2</tt> and earlier</li>
--   <li>1.14 Amazon EKS platform version <tt>eks.3</tt> and later</li>
--   </ul>
--   
--   For more information, see <a>Amazon EKS security group
--   considerations</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:endpointPrivateAccess:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_endpointPrivateAccess</a> - Set this value to
--   <tt>true</tt> to enable private access for your cluster's Kubernetes
--   API server endpoint. If you enable private access, Kubernetes API
--   requests from within your cluster's VPC use the private VPC endpoint.
--   The default value for this parameter is <tt>false</tt>, which disables
--   private access for your Kubernetes API server. If you disable private
--   access and you have nodes or Fargate pods in the cluster, then ensure
--   that <tt>publicAccessCidrs</tt> includes the necessary CIDR blocks for
--   communication with the nodes or Fargate pods. For more information,
--   see <a>Amazon EKS cluster endpoint access control</a> in the
--   /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:publicAccessCidrs:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_publicAccessCidrs</a> - The CIDR blocks that are
--   allowed access to your cluster's public Kubernetes API server
--   endpoint. Communication to the endpoint from addresses outside of the
--   CIDR blocks that you specify is denied. The default value is
--   <tt>0.0.0.0/0</tt>. If you've disabled private endpoint access and you
--   have nodes or Fargate pods in the cluster, then ensure that you
--   specify the necessary CIDR blocks. For more information, see <a>Amazon
--   EKS cluster endpoint access control</a> in the /<i>Amazon EKS User
--   Guide</i>/ .
--   
--   <a>$sel:subnetIds:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_subnetIds</a> - Specify subnets for your Amazon
--   EKS nodes. Amazon EKS creates cross-account elastic network interfaces
--   in these subnets to allow communication between your nodes and the
--   Kubernetes control plane.
--   
--   <a>$sel:endpointPublicAccess:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_endpointPublicAccess</a> - Set this value to
--   <tt>false</tt> to disable public access to your cluster's Kubernetes
--   API server endpoint. If you disable public access, your cluster's
--   Kubernetes API server can only receive requests from within the
--   cluster VPC. The default value for this parameter is <tt>true</tt>,
--   which enables public access for your Kubernetes API server. For more
--   information, see <a>Amazon EKS cluster endpoint access control</a> in
--   the /<i>Amazon EKS User Guide</i>/ .
newVpcConfigRequest :: VpcConfigRequest

-- | Specify one or more security groups for the cross-account elastic
--   network interfaces that Amazon EKS creates to use that allow
--   communication between your nodes and the Kubernetes control plane. If
--   you don't specify any security groups, then familiarize yourself with
--   the difference between Amazon EKS defaults for clusters deployed with
--   Kubernetes:
--   
--   <ul>
--   <li>1.14 Amazon EKS platform version <tt>eks.2</tt> and earlier</li>
--   <li>1.14 Amazon EKS platform version <tt>eks.3</tt> and later</li>
--   </ul>
--   
--   For more information, see <a>Amazon EKS security group
--   considerations</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_securityGroupIds :: Lens' VpcConfigRequest (Maybe [Text])

-- | Set this value to <tt>true</tt> to enable private access for your
--   cluster's Kubernetes API server endpoint. If you enable private
--   access, Kubernetes API requests from within your cluster's VPC use the
--   private VPC endpoint. The default value for this parameter is
--   <tt>false</tt>, which disables private access for your Kubernetes API
--   server. If you disable private access and you have nodes or Fargate
--   pods in the cluster, then ensure that <tt>publicAccessCidrs</tt>
--   includes the necessary CIDR blocks for communication with the nodes or
--   Fargate pods. For more information, see <a>Amazon EKS cluster endpoint
--   access control</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_endpointPrivateAccess :: Lens' VpcConfigRequest (Maybe Bool)

-- | The CIDR blocks that are allowed access to your cluster's public
--   Kubernetes API server endpoint. Communication to the endpoint from
--   addresses outside of the CIDR blocks that you specify is denied. The
--   default value is <tt>0.0.0.0/0</tt>. If you've disabled private
--   endpoint access and you have nodes or Fargate pods in the cluster,
--   then ensure that you specify the necessary CIDR blocks. For more
--   information, see <a>Amazon EKS cluster endpoint access control</a> in
--   the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_publicAccessCidrs :: Lens' VpcConfigRequest (Maybe [Text])

-- | Specify subnets for your Amazon EKS nodes. Amazon EKS creates
--   cross-account elastic network interfaces in these subnets to allow
--   communication between your nodes and the Kubernetes control plane.
vpcConfigRequest_subnetIds :: Lens' VpcConfigRequest (Maybe [Text])

-- | Set this value to <tt>false</tt> to disable public access to your
--   cluster's Kubernetes API server endpoint. If you disable public
--   access, your cluster's Kubernetes API server can only receive requests
--   from within the cluster VPC. The default value for this parameter is
--   <tt>true</tt>, which enables public access for your Kubernetes API
--   server. For more information, see <a>Amazon EKS cluster endpoint
--   access control</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_endpointPublicAccess :: Lens' VpcConfigRequest (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.EKS.Types.VpcConfigRequest.VpcConfigRequest
instance GHC.Show.Show Network.AWS.EKS.Types.VpcConfigRequest.VpcConfigRequest
instance GHC.Read.Read Network.AWS.EKS.Types.VpcConfigRequest.VpcConfigRequest
instance GHC.Classes.Eq Network.AWS.EKS.Types.VpcConfigRequest.VpcConfigRequest
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.VpcConfigRequest.VpcConfigRequest
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.VpcConfigRequest.VpcConfigRequest
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.Types.VpcConfigRequest.VpcConfigRequest


module Network.AWS.EKS.Types.VpcConfigResponse

-- | An object representing an Amazon EKS cluster VPC configuration
--   response.
--   
--   <i>See:</i> <a>newVpcConfigResponse</a> smart constructor.
data VpcConfigResponse
VpcConfigResponse' :: Maybe [Text] -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Bool -> VpcConfigResponse

-- | The security groups associated with the cross-account elastic network
--   interfaces that are used to allow communication between your nodes and
--   the Kubernetes control plane.
[$sel:securityGroupIds:VpcConfigResponse'] :: VpcConfigResponse -> Maybe [Text]

-- | This parameter indicates whether the Amazon EKS private API server
--   endpoint is enabled. If the Amazon EKS private API server endpoint is
--   enabled, Kubernetes API requests that originate from within your
--   cluster's VPC use the private VPC endpoint instead of traversing the
--   internet. If this value is disabled and you have nodes or Fargate pods
--   in the cluster, then ensure that <tt>publicAccessCidrs</tt> includes
--   the necessary CIDR blocks for communication with the nodes or Fargate
--   pods. For more information, see <a>Amazon EKS cluster endpoint access
--   control</a> in the /<i>Amazon EKS User Guide</i>/ .
[$sel:endpointPrivateAccess:VpcConfigResponse'] :: VpcConfigResponse -> Maybe Bool

-- | The CIDR blocks that are allowed access to your cluster's public
--   Kubernetes API server endpoint. Communication to the endpoint from
--   addresses outside of the listed CIDR blocks is denied. The default
--   value is <tt>0.0.0.0/0</tt>. If you've disabled private endpoint
--   access and you have nodes or Fargate pods in the cluster, then ensure
--   that the necessary CIDR blocks are listed. For more information, see
--   <a>Amazon EKS cluster endpoint access control</a> in the /<i>Amazon
--   EKS User Guide</i>/ .
[$sel:publicAccessCidrs:VpcConfigResponse'] :: VpcConfigResponse -> Maybe [Text]

-- | The subnets associated with your cluster.
[$sel:subnetIds:VpcConfigResponse'] :: VpcConfigResponse -> Maybe [Text]

-- | The VPC associated with your cluster.
[$sel:vpcId:VpcConfigResponse'] :: VpcConfigResponse -> Maybe Text

-- | The cluster security group that was created by Amazon EKS for the
--   cluster. Managed node groups use this security group for
--   control-plane-to-data-plane communication.
[$sel:clusterSecurityGroupId:VpcConfigResponse'] :: VpcConfigResponse -> Maybe Text

-- | This parameter indicates whether the Amazon EKS public API server
--   endpoint is enabled. If the Amazon EKS public API server endpoint is
--   disabled, your cluster's Kubernetes API server can only receive
--   requests that originate from within the cluster VPC.
[$sel:endpointPublicAccess:VpcConfigResponse'] :: VpcConfigResponse -> Maybe Bool

-- | Create a value of <a>VpcConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_securityGroupIds</a> - The security groups
--   associated with the cross-account elastic network interfaces that are
--   used to allow communication between your nodes and the Kubernetes
--   control plane.
--   
--   <a>$sel:endpointPrivateAccess:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_endpointPrivateAccess</a> - This parameter
--   indicates whether the Amazon EKS private API server endpoint is
--   enabled. If the Amazon EKS private API server endpoint is enabled,
--   Kubernetes API requests that originate from within your cluster's VPC
--   use the private VPC endpoint instead of traversing the internet. If
--   this value is disabled and you have nodes or Fargate pods in the
--   cluster, then ensure that <tt>publicAccessCidrs</tt> includes the
--   necessary CIDR blocks for communication with the nodes or Fargate
--   pods. For more information, see <a>Amazon EKS cluster endpoint access
--   control</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:publicAccessCidrs:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_publicAccessCidrs</a> - The CIDR blocks that are
--   allowed access to your cluster's public Kubernetes API server
--   endpoint. Communication to the endpoint from addresses outside of the
--   listed CIDR blocks is denied. The default value is <tt>0.0.0.0/0</tt>.
--   If you've disabled private endpoint access and you have nodes or
--   Fargate pods in the cluster, then ensure that the necessary CIDR
--   blocks are listed. For more information, see <a>Amazon EKS cluster
--   endpoint access control</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:subnetIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_subnetIds</a> - The subnets associated with your
--   cluster.
--   
--   <a>$sel:vpcId:VpcConfigResponse'</a>, <a>vpcConfigResponse_vpcId</a> -
--   The VPC associated with your cluster.
--   
--   <a>$sel:clusterSecurityGroupId:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_clusterSecurityGroupId</a> - The cluster security
--   group that was created by Amazon EKS for the cluster. Managed node
--   groups use this security group for control-plane-to-data-plane
--   communication.
--   
--   <a>$sel:endpointPublicAccess:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_endpointPublicAccess</a> - This parameter
--   indicates whether the Amazon EKS public API server endpoint is
--   enabled. If the Amazon EKS public API server endpoint is disabled,
--   your cluster's Kubernetes API server can only receive requests that
--   originate from within the cluster VPC.
newVpcConfigResponse :: VpcConfigResponse

-- | The security groups associated with the cross-account elastic network
--   interfaces that are used to allow communication between your nodes and
--   the Kubernetes control plane.
vpcConfigResponse_securityGroupIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | This parameter indicates whether the Amazon EKS private API server
--   endpoint is enabled. If the Amazon EKS private API server endpoint is
--   enabled, Kubernetes API requests that originate from within your
--   cluster's VPC use the private VPC endpoint instead of traversing the
--   internet. If this value is disabled and you have nodes or Fargate pods
--   in the cluster, then ensure that <tt>publicAccessCidrs</tt> includes
--   the necessary CIDR blocks for communication with the nodes or Fargate
--   pods. For more information, see <a>Amazon EKS cluster endpoint access
--   control</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigResponse_endpointPrivateAccess :: Lens' VpcConfigResponse (Maybe Bool)

-- | The CIDR blocks that are allowed access to your cluster's public
--   Kubernetes API server endpoint. Communication to the endpoint from
--   addresses outside of the listed CIDR blocks is denied. The default
--   value is <tt>0.0.0.0/0</tt>. If you've disabled private endpoint
--   access and you have nodes or Fargate pods in the cluster, then ensure
--   that the necessary CIDR blocks are listed. For more information, see
--   <a>Amazon EKS cluster endpoint access control</a> in the /<i>Amazon
--   EKS User Guide</i>/ .
vpcConfigResponse_publicAccessCidrs :: Lens' VpcConfigResponse (Maybe [Text])

-- | The subnets associated with your cluster.
vpcConfigResponse_subnetIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | The VPC associated with your cluster.
vpcConfigResponse_vpcId :: Lens' VpcConfigResponse (Maybe Text)

-- | The cluster security group that was created by Amazon EKS for the
--   cluster. Managed node groups use this security group for
--   control-plane-to-data-plane communication.
vpcConfigResponse_clusterSecurityGroupId :: Lens' VpcConfigResponse (Maybe Text)

-- | This parameter indicates whether the Amazon EKS public API server
--   endpoint is enabled. If the Amazon EKS public API server endpoint is
--   disabled, your cluster's Kubernetes API server can only receive
--   requests that originate from within the cluster VPC.
vpcConfigResponse_endpointPublicAccess :: Lens' VpcConfigResponse (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.EKS.Types.VpcConfigResponse.VpcConfigResponse
instance GHC.Show.Show Network.AWS.EKS.Types.VpcConfigResponse.VpcConfigResponse
instance GHC.Read.Read Network.AWS.EKS.Types.VpcConfigResponse.VpcConfigResponse
instance GHC.Classes.Eq Network.AWS.EKS.Types.VpcConfigResponse.VpcConfigResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.VpcConfigResponse.VpcConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.VpcConfigResponse.VpcConfigResponse
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.VpcConfigResponse.VpcConfigResponse


module Network.AWS.EKS.Types.Cluster

-- | An object representing an Amazon EKS cluster.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe ClusterStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe KubernetesNetworkConfigResponse -> Maybe ConnectorConfigResponse -> Maybe Certificate -> Maybe Text -> Maybe Text -> Maybe [EncryptionConfig] -> Maybe Text -> Maybe Text -> Maybe Logging -> Maybe Identity -> Maybe VpcConfigResponse -> Maybe (HashMap Text Text) -> Maybe Text -> Cluster

-- | The current status of the cluster.
[$sel:status:Cluster'] :: Cluster -> Maybe ClusterStatus

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:arn:Cluster'] :: Cluster -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the cluster was created.
[$sel:createdAt:Cluster'] :: Cluster -> Maybe POSIX

-- | The platform version of your Amazon EKS cluster. For more information,
--   see <a>Platform Versions</a> in the /<i>Amazon EKS User Guide</i>/ .
[$sel:platformVersion:Cluster'] :: Cluster -> Maybe Text

-- | The Kubernetes network configuration for the cluster.
[$sel:kubernetesNetworkConfig:Cluster'] :: Cluster -> Maybe KubernetesNetworkConfigResponse

-- | The configuration used to connect to a cluster for registration.
[$sel:connectorConfig:Cluster'] :: Cluster -> Maybe ConnectorConfigResponse

-- | The <tt>certificate-authority-data</tt> for your cluster.
[$sel:certificateAuthority:Cluster'] :: Cluster -> Maybe Certificate

-- | The name of the cluster.
[$sel:name:Cluster'] :: Cluster -> Maybe Text

-- | The Kubernetes server version for the cluster.
[$sel:version:Cluster'] :: Cluster -> Maybe Text

-- | The encryption configuration for the cluster.
[$sel:encryptionConfig:Cluster'] :: Cluster -> Maybe [EncryptionConfig]

-- | The endpoint for your Kubernetes API server.
[$sel:endpoint:Cluster'] :: Cluster -> Maybe Text

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:Cluster'] :: Cluster -> Maybe Text

-- | The logging configuration for your cluster.
[$sel:logging:Cluster'] :: Cluster -> Maybe Logging

-- | The identity provider information for the cluster.
[$sel:identity:Cluster'] :: Cluster -> Maybe Identity

-- | The VPC configuration used by the cluster control plane. Amazon EKS
--   VPC resources have specific requirements to work properly with
--   Kubernetes. For more information, see <a>Cluster VPC
--   Considerations</a> and <a>Cluster Security Group Considerations</a> in
--   the <i>Amazon EKS User Guide</i>.
[$sel:resourcesVpcConfig:Cluster'] :: Cluster -> Maybe VpcConfigResponse

-- | The metadata that you apply to the cluster to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Cluster tags do not
--   propagate to any other resources associated with the cluster.
[$sel:tags:Cluster'] :: Cluster -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the IAM role that provides
--   permissions for the Kubernetes control plane to make calls to Amazon
--   Web Services API operations on your behalf.
[$sel:roleArn:Cluster'] :: Cluster -> Maybe Text

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - The current
--   status of the cluster.
--   
--   <a>$sel:arn:Cluster'</a>, <a>cluster_arn</a> - The Amazon Resource
--   Name (ARN) of the cluster.
--   
--   <a>$sel:createdAt:Cluster'</a>, <a>cluster_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the cluster was created.
--   
--   <a>$sel:platformVersion:Cluster'</a>, <a>cluster_platformVersion</a> -
--   The platform version of your Amazon EKS cluster. For more information,
--   see <a>Platform Versions</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:kubernetesNetworkConfig:Cluster'</a>,
--   <a>cluster_kubernetesNetworkConfig</a> - The Kubernetes network
--   configuration for the cluster.
--   
--   <a>$sel:connectorConfig:Cluster'</a>, <a>cluster_connectorConfig</a> -
--   The configuration used to connect to a cluster for registration.
--   
--   <a>$sel:certificateAuthority:Cluster'</a>,
--   <a>cluster_certificateAuthority</a> - The
--   <tt>certificate-authority-data</tt> for your cluster.
--   
--   <a>$sel:name:Cluster'</a>, <a>cluster_name</a> - The name of the
--   cluster.
--   
--   <a>$sel:version:Cluster'</a>, <a>cluster_version</a> - The Kubernetes
--   server version for the cluster.
--   
--   <a>$sel:encryptionConfig:Cluster'</a>, <a>cluster_encryptionConfig</a>
--   - The encryption configuration for the cluster.
--   
--   <a>$sel:endpoint:Cluster'</a>, <a>cluster_endpoint</a> - The endpoint
--   for your Kubernetes API server.
--   
--   <a>$sel:clientRequestToken:Cluster'</a>,
--   <a>cluster_clientRequestToken</a> - Unique, case-sensitive identifier
--   that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:logging:Cluster'</a>, <a>cluster_logging</a> - The logging
--   configuration for your cluster.
--   
--   <a>$sel:identity:Cluster'</a>, <a>cluster_identity</a> - The identity
--   provider information for the cluster.
--   
--   <a>$sel:resourcesVpcConfig:Cluster'</a>,
--   <a>cluster_resourcesVpcConfig</a> - The VPC configuration used by the
--   cluster control plane. Amazon EKS VPC resources have specific
--   requirements to work properly with Kubernetes. For more information,
--   see <a>Cluster VPC Considerations</a> and <a>Cluster Security Group
--   Considerations</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:tags:Cluster'</a>, <a>cluster_tags</a> - The metadata that you
--   apply to the cluster to assist with categorization and organization.
--   Each tag consists of a key and an optional value, both of which you
--   define. Cluster tags do not propagate to any other resources
--   associated with the cluster.
--   
--   <a>$sel:roleArn:Cluster'</a>, <a>cluster_roleArn</a> - The Amazon
--   Resource Name (ARN) of the IAM role that provides permissions for the
--   Kubernetes control plane to make calls to Amazon Web Services API
--   operations on your behalf.
newCluster :: Cluster

-- | The current status of the cluster.
cluster_status :: Lens' Cluster (Maybe ClusterStatus)

-- | The Amazon Resource Name (ARN) of the cluster.
cluster_arn :: Lens' Cluster (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the cluster was created.
cluster_createdAt :: Lens' Cluster (Maybe UTCTime)

-- | The platform version of your Amazon EKS cluster. For more information,
--   see <a>Platform Versions</a> in the /<i>Amazon EKS User Guide</i>/ .
cluster_platformVersion :: Lens' Cluster (Maybe Text)

-- | The Kubernetes network configuration for the cluster.
cluster_kubernetesNetworkConfig :: Lens' Cluster (Maybe KubernetesNetworkConfigResponse)

-- | The configuration used to connect to a cluster for registration.
cluster_connectorConfig :: Lens' Cluster (Maybe ConnectorConfigResponse)

-- | The <tt>certificate-authority-data</tt> for your cluster.
cluster_certificateAuthority :: Lens' Cluster (Maybe Certificate)

-- | The name of the cluster.
cluster_name :: Lens' Cluster (Maybe Text)

-- | The Kubernetes server version for the cluster.
cluster_version :: Lens' Cluster (Maybe Text)

-- | The encryption configuration for the cluster.
cluster_encryptionConfig :: Lens' Cluster (Maybe [EncryptionConfig])

-- | The endpoint for your Kubernetes API server.
cluster_endpoint :: Lens' Cluster (Maybe Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
cluster_clientRequestToken :: Lens' Cluster (Maybe Text)

-- | The logging configuration for your cluster.
cluster_logging :: Lens' Cluster (Maybe Logging)

-- | The identity provider information for the cluster.
cluster_identity :: Lens' Cluster (Maybe Identity)

-- | The VPC configuration used by the cluster control plane. Amazon EKS
--   VPC resources have specific requirements to work properly with
--   Kubernetes. For more information, see <a>Cluster VPC
--   Considerations</a> and <a>Cluster Security Group Considerations</a> in
--   the <i>Amazon EKS User Guide</i>.
cluster_resourcesVpcConfig :: Lens' Cluster (Maybe VpcConfigResponse)

-- | The metadata that you apply to the cluster to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Cluster tags do not
--   propagate to any other resources associated with the cluster.
cluster_tags :: Lens' Cluster (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the IAM role that provides
--   permissions for the Kubernetes control plane to make calls to Amazon
--   Web Services API operations on your behalf.
cluster_roleArn :: Lens' Cluster (Maybe Text)
instance GHC.Generics.Generic Network.AWS.EKS.Types.Cluster.Cluster
instance GHC.Show.Show Network.AWS.EKS.Types.Cluster.Cluster
instance GHC.Read.Read Network.AWS.EKS.Types.Cluster.Cluster
instance GHC.Classes.Eq Network.AWS.EKS.Types.Cluster.Cluster
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.EKS.Types.Cluster.Cluster
instance Data.Hashable.Class.Hashable Network.AWS.EKS.Types.Cluster.Cluster
instance Control.DeepSeq.NFData Network.AWS.EKS.Types.Cluster.Cluster


module Network.AWS.EKS.Types

-- | API version <tt>2017-11-01</tt> of the Amazon Elastic Kubernetes
--   Service SDK configuration.
defaultService :: Service

-- | The specified parameter is invalid. Review the available parameters
--   for the API request.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is invalid given the state of the cluster. Check the state
--   of the cluster and the associated operations.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | These errors are usually caused by a server-side issue.
_ServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one of your specified cluster subnets is in an Availability
--   Zone that does not support Amazon EKS. The exception output specifies
--   the supported Availability Zones for your account, from which you can
--   choose subnets for your cluster.
_UnsupportedAvailabilityZoneException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have encountered a service limit on the specified resource.
_ResourceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A service resource associated with the request could not be found.
--   Clients should not retry such requests.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is unavailable. Back off and retry the operation.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | These errors are usually caused by a client action. Actions can
--   include using an action or resource on behalf of a user that doesn't
--   have permissions to use the action or resource or specifying an
--   identifier that is not valid.
_ClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource could not be found. You can view your available
--   clusters with ListClusters. You can view your available managed node
--   groups with ListNodegroups. Amazon EKS clusters and node groups are
--   Region-specific.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown if the request contains a semantic error. The
--   precise meaning will depend on the API, and will be documented in the
--   error message.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype AMITypes
AMITypes' :: Text -> AMITypes
[fromAMITypes] :: AMITypes -> Text
pattern AMITypes_AL2_ARM_64 :: AMITypes
pattern AMITypes_AL2_x86_64 :: AMITypes
pattern AMITypes_AL2_x86_64_GPU :: AMITypes
pattern AMITypes_CUSTOM :: AMITypes
newtype AddonIssueCode
AddonIssueCode' :: Text -> AddonIssueCode
[fromAddonIssueCode] :: AddonIssueCode -> Text
pattern AddonIssueCode_AccessDenied :: AddonIssueCode
pattern AddonIssueCode_AdmissionRequestDenied :: AddonIssueCode
pattern AddonIssueCode_ClusterUnreachable :: AddonIssueCode
pattern AddonIssueCode_ConfigurationConflict :: AddonIssueCode
pattern AddonIssueCode_InsufficientNumberOfReplicas :: AddonIssueCode
pattern AddonIssueCode_InternalFailure :: AddonIssueCode
pattern AddonIssueCode_K8sResourceNotFound :: AddonIssueCode
pattern AddonIssueCode_UnsupportedAddonModification :: AddonIssueCode
newtype AddonStatus
AddonStatus' :: Text -> AddonStatus
[fromAddonStatus] :: AddonStatus -> Text
pattern AddonStatus_ACTIVE :: AddonStatus
pattern AddonStatus_CREATE_FAILED :: AddonStatus
pattern AddonStatus_CREATING :: AddonStatus
pattern AddonStatus_DEGRADED :: AddonStatus
pattern AddonStatus_DELETE_FAILED :: AddonStatus
pattern AddonStatus_DELETING :: AddonStatus
pattern AddonStatus_UPDATING :: AddonStatus
newtype CapacityTypes
CapacityTypes' :: Text -> CapacityTypes
[fromCapacityTypes] :: CapacityTypes -> Text
pattern CapacityTypes_ON_DEMAND :: CapacityTypes
pattern CapacityTypes_SPOT :: CapacityTypes
newtype ClusterStatus
ClusterStatus' :: Text -> ClusterStatus
[fromClusterStatus] :: ClusterStatus -> Text
pattern ClusterStatus_ACTIVE :: ClusterStatus
pattern ClusterStatus_CREATING :: ClusterStatus
pattern ClusterStatus_DELETING :: ClusterStatus
pattern ClusterStatus_FAILED :: ClusterStatus
pattern ClusterStatus_PENDING :: ClusterStatus
pattern ClusterStatus_UPDATING :: ClusterStatus
newtype ConfigStatus
ConfigStatus' :: Text -> ConfigStatus
[fromConfigStatus] :: ConfigStatus -> Text
pattern ConfigStatus_ACTIVE :: ConfigStatus
pattern ConfigStatus_CREATING :: ConfigStatus
pattern ConfigStatus_DELETING :: ConfigStatus
newtype ConnectorConfigProvider
ConnectorConfigProvider' :: Text -> ConnectorConfigProvider
[fromConnectorConfigProvider] :: ConnectorConfigProvider -> Text
pattern ConnectorConfigProvider_AKS :: ConnectorConfigProvider
pattern ConnectorConfigProvider_ANTHOS :: ConnectorConfigProvider
pattern ConnectorConfigProvider_EC2 :: ConnectorConfigProvider
pattern ConnectorConfigProvider_EKS_ANYWHERE :: ConnectorConfigProvider
pattern ConnectorConfigProvider_GKE :: ConnectorConfigProvider
pattern ConnectorConfigProvider_OPENSHIFT :: ConnectorConfigProvider
pattern ConnectorConfigProvider_OTHER :: ConnectorConfigProvider
pattern ConnectorConfigProvider_RANCHER :: ConnectorConfigProvider
pattern ConnectorConfigProvider_TANZU :: ConnectorConfigProvider
newtype EKSErrorCode
EKSErrorCode' :: Text -> EKSErrorCode
[fromEKSErrorCode] :: EKSErrorCode -> Text
pattern EKSErrorCode_AccessDenied :: EKSErrorCode
pattern EKSErrorCode_AdmissionRequestDenied :: EKSErrorCode
pattern EKSErrorCode_ClusterUnreachable :: EKSErrorCode
pattern EKSErrorCode_ConfigurationConflict :: EKSErrorCode
pattern EKSErrorCode_EniLimitReached :: EKSErrorCode
pattern EKSErrorCode_InsufficientFreeAddresses :: EKSErrorCode
pattern EKSErrorCode_InsufficientNumberOfReplicas :: EKSErrorCode
pattern EKSErrorCode_IpNotAvailable :: EKSErrorCode
pattern EKSErrorCode_K8sResourceNotFound :: EKSErrorCode
pattern EKSErrorCode_NodeCreationFailure :: EKSErrorCode
pattern EKSErrorCode_OperationNotPermitted :: EKSErrorCode
pattern EKSErrorCode_PodEvictionFailure :: EKSErrorCode
pattern EKSErrorCode_SecurityGroupNotFound :: EKSErrorCode
pattern EKSErrorCode_SubnetNotFound :: EKSErrorCode
pattern EKSErrorCode_Unknown :: EKSErrorCode
pattern EKSErrorCode_UnsupportedAddonModification :: EKSErrorCode
pattern EKSErrorCode_VpcIdNotFound :: EKSErrorCode
newtype FargateProfileStatus
FargateProfileStatus' :: Text -> FargateProfileStatus
[fromFargateProfileStatus] :: FargateProfileStatus -> Text
pattern FargateProfileStatus_ACTIVE :: FargateProfileStatus
pattern FargateProfileStatus_CREATE_FAILED :: FargateProfileStatus
pattern FargateProfileStatus_CREATING :: FargateProfileStatus
pattern FargateProfileStatus_DELETE_FAILED :: FargateProfileStatus
pattern FargateProfileStatus_DELETING :: FargateProfileStatus
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_Api :: LogType
pattern LogType_Audit :: LogType
pattern LogType_Authenticator :: LogType
pattern LogType_ControllerManager :: LogType
pattern LogType_Scheduler :: LogType
newtype NodegroupIssueCode
NodegroupIssueCode' :: Text -> NodegroupIssueCode
[fromNodegroupIssueCode] :: NodegroupIssueCode -> Text
pattern NodegroupIssueCode_AccessDenied :: NodegroupIssueCode
pattern NodegroupIssueCode_AsgInstanceLaunchFailures :: NodegroupIssueCode
pattern NodegroupIssueCode_AutoScalingGroupInvalidConfiguration :: NodegroupIssueCode
pattern NodegroupIssueCode_AutoScalingGroupNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_ClusterUnreachable :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2LaunchTemplateNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2LaunchTemplateVersionMismatch :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SecurityGroupDeletionFailure :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SecurityGroupNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SubnetInvalidConfiguration :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SubnetNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_IamInstanceProfileNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_IamLimitExceeded :: NodegroupIssueCode
pattern NodegroupIssueCode_IamNodeRoleNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_InstanceLimitExceeded :: NodegroupIssueCode
pattern NodegroupIssueCode_InsufficientFreeAddresses :: NodegroupIssueCode
pattern NodegroupIssueCode_InternalFailure :: NodegroupIssueCode
pattern NodegroupIssueCode_NodeCreationFailure :: NodegroupIssueCode
newtype NodegroupStatus
NodegroupStatus' :: Text -> NodegroupStatus
[fromNodegroupStatus] :: NodegroupStatus -> Text
pattern NodegroupStatus_ACTIVE :: NodegroupStatus
pattern NodegroupStatus_CREATE_FAILED :: NodegroupStatus
pattern NodegroupStatus_CREATING :: NodegroupStatus
pattern NodegroupStatus_DEGRADED :: NodegroupStatus
pattern NodegroupStatus_DELETE_FAILED :: NodegroupStatus
pattern NodegroupStatus_DELETING :: NodegroupStatus
pattern NodegroupStatus_UPDATING :: NodegroupStatus
newtype ResolveConflicts
ResolveConflicts' :: Text -> ResolveConflicts
[fromResolveConflicts] :: ResolveConflicts -> Text
pattern ResolveConflicts_NONE :: ResolveConflicts
pattern ResolveConflicts_OVERWRITE :: ResolveConflicts
newtype TaintEffect
TaintEffect' :: Text -> TaintEffect
[fromTaintEffect] :: TaintEffect -> Text
pattern TaintEffect_NO_EXECUTE :: TaintEffect
pattern TaintEffect_NO_SCHEDULE :: TaintEffect
pattern TaintEffect_PREFER_NO_SCHEDULE :: TaintEffect
newtype UpdateParamType
UpdateParamType' :: Text -> UpdateParamType
[fromUpdateParamType] :: UpdateParamType -> Text
pattern UpdateParamType_AddonVersion :: UpdateParamType
pattern UpdateParamType_ClusterLogging :: UpdateParamType
pattern UpdateParamType_DesiredSize :: UpdateParamType
pattern UpdateParamType_EncryptionConfig :: UpdateParamType
pattern UpdateParamType_EndpointPrivateAccess :: UpdateParamType
pattern UpdateParamType_EndpointPublicAccess :: UpdateParamType
pattern UpdateParamType_IdentityProviderConfig :: UpdateParamType
pattern UpdateParamType_LabelsToAdd :: UpdateParamType
pattern UpdateParamType_LabelsToRemove :: UpdateParamType
pattern UpdateParamType_LaunchTemplateName :: UpdateParamType
pattern UpdateParamType_LaunchTemplateVersion :: UpdateParamType
pattern UpdateParamType_MaxSize :: UpdateParamType
pattern UpdateParamType_MaxUnavailable :: UpdateParamType
pattern UpdateParamType_MaxUnavailablePercentage :: UpdateParamType
pattern UpdateParamType_MinSize :: UpdateParamType
pattern UpdateParamType_PlatformVersion :: UpdateParamType
pattern UpdateParamType_PublicAccessCidrs :: UpdateParamType
pattern UpdateParamType_ReleaseVersion :: UpdateParamType
pattern UpdateParamType_ResolveConflicts :: UpdateParamType
pattern UpdateParamType_ServiceAccountRoleArn :: UpdateParamType
pattern UpdateParamType_TaintsToAdd :: UpdateParamType
pattern UpdateParamType_TaintsToRemove :: UpdateParamType
pattern UpdateParamType_Version :: UpdateParamType
newtype UpdateStatus
UpdateStatus' :: Text -> UpdateStatus
[fromUpdateStatus] :: UpdateStatus -> Text
pattern UpdateStatus_Cancelled :: UpdateStatus
pattern UpdateStatus_Failed :: UpdateStatus
pattern UpdateStatus_InProgress :: UpdateStatus
pattern UpdateStatus_Successful :: UpdateStatus
newtype UpdateType
UpdateType' :: Text -> UpdateType
[fromUpdateType] :: UpdateType -> Text
pattern UpdateType_AddonUpdate :: UpdateType
pattern UpdateType_AssociateEncryptionConfig :: UpdateType
pattern UpdateType_AssociateIdentityProviderConfig :: UpdateType
pattern UpdateType_ConfigUpdate :: UpdateType
pattern UpdateType_DisassociateIdentityProviderConfig :: UpdateType
pattern UpdateType_EndpointAccessUpdate :: UpdateType
pattern UpdateType_LoggingUpdate :: UpdateType
pattern UpdateType_VersionUpdate :: UpdateType

-- | An Amazon EKS add-on.
--   
--   <i>See:</i> <a>newAddon</a> smart constructor.
data Addon
Addon' :: Maybe POSIX -> Maybe AddonStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe AddonHealth -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Addon

-- | The date and time that the add-on was last modified.
[$sel:modifiedAt:Addon'] :: Addon -> Maybe POSIX

-- | The status of the add-on.
[$sel:status:Addon'] :: Addon -> Maybe AddonStatus

-- | The name of the add-on.
[$sel:addonName:Addon'] :: Addon -> Maybe Text

-- | The version of the add-on.
[$sel:addonVersion:Addon'] :: Addon -> Maybe Text

-- | The date and time that the add-on was created.
[$sel:createdAt:Addon'] :: Addon -> Maybe POSIX

-- | The Amazon Resource Name (ARN) of the IAM role that is bound to the
--   Kubernetes service account used by the add-on.
[$sel:serviceAccountRoleArn:Addon'] :: Addon -> Maybe Text

-- | An object that represents the health of the add-on.
[$sel:health:Addon'] :: Addon -> Maybe AddonHealth

-- | The name of the cluster.
[$sel:clusterName:Addon'] :: Addon -> Maybe Text

-- | The Amazon Resource Name (ARN) of the add-on.
[$sel:addonArn:Addon'] :: Addon -> Maybe Text

-- | The metadata that you apply to the add-on to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Add-on tags do not propagate
--   to any other resources associated with the cluster.
[$sel:tags:Addon'] :: Addon -> Maybe (HashMap Text Text)

-- | Create a value of <a>Addon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modifiedAt:Addon'</a>, <a>addon_modifiedAt</a> - The date and
--   time that the add-on was last modified.
--   
--   <a>$sel:status:Addon'</a>, <a>addon_status</a> - The status of the
--   add-on.
--   
--   <a>$sel:addonName:Addon'</a>, <a>addon_addonName</a> - The name of the
--   add-on.
--   
--   <a>$sel:addonVersion:Addon'</a>, <a>addon_addonVersion</a> - The
--   version of the add-on.
--   
--   <a>$sel:createdAt:Addon'</a>, <a>addon_createdAt</a> - The date and
--   time that the add-on was created.
--   
--   <a>$sel:serviceAccountRoleArn:Addon'</a>,
--   <a>addon_serviceAccountRoleArn</a> - The Amazon Resource Name (ARN) of
--   the IAM role that is bound to the Kubernetes service account used by
--   the add-on.
--   
--   <a>$sel:health:Addon'</a>, <a>addon_health</a> - An object that
--   represents the health of the add-on.
--   
--   <a>$sel:clusterName:Addon'</a>, <a>addon_clusterName</a> - The name of
--   the cluster.
--   
--   <a>$sel:addonArn:Addon'</a>, <a>addon_addonArn</a> - The Amazon
--   Resource Name (ARN) of the add-on.
--   
--   <a>$sel:tags:Addon'</a>, <a>addon_tags</a> - The metadata that you
--   apply to the add-on to assist with categorization and organization.
--   Each tag consists of a key and an optional value, both of which you
--   define. Add-on tags do not propagate to any other resources associated
--   with the cluster.
newAddon :: Addon

-- | The date and time that the add-on was last modified.
addon_modifiedAt :: Lens' Addon (Maybe UTCTime)

-- | The status of the add-on.
addon_status :: Lens' Addon (Maybe AddonStatus)

-- | The name of the add-on.
addon_addonName :: Lens' Addon (Maybe Text)

-- | The version of the add-on.
addon_addonVersion :: Lens' Addon (Maybe Text)

-- | The date and time that the add-on was created.
addon_createdAt :: Lens' Addon (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the IAM role that is bound to the
--   Kubernetes service account used by the add-on.
addon_serviceAccountRoleArn :: Lens' Addon (Maybe Text)

-- | An object that represents the health of the add-on.
addon_health :: Lens' Addon (Maybe AddonHealth)

-- | The name of the cluster.
addon_clusterName :: Lens' Addon (Maybe Text)

-- | The Amazon Resource Name (ARN) of the add-on.
addon_addonArn :: Lens' Addon (Maybe Text)

-- | The metadata that you apply to the add-on to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Add-on tags do not propagate
--   to any other resources associated with the cluster.
addon_tags :: Lens' Addon (Maybe (HashMap Text Text))

-- | The health of the add-on.
--   
--   <i>See:</i> <a>newAddonHealth</a> smart constructor.
data AddonHealth
AddonHealth' :: Maybe [AddonIssue] -> AddonHealth

-- | An object that represents the add-on's health issues.
[$sel:issues:AddonHealth'] :: AddonHealth -> Maybe [AddonIssue]

-- | Create a value of <a>AddonHealth</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:issues:AddonHealth'</a>, <a>addonHealth_issues</a> - An object
--   that represents the add-on's health issues.
newAddonHealth :: AddonHealth

-- | An object that represents the add-on's health issues.
addonHealth_issues :: Lens' AddonHealth (Maybe [AddonIssue])

-- | Information about an add-on.
--   
--   <i>See:</i> <a>newAddonInfo</a> smart constructor.
data AddonInfo
AddonInfo' :: Maybe Text -> Maybe Text -> Maybe [AddonVersionInfo] -> AddonInfo

-- | The name of the add-on.
[$sel:addonName:AddonInfo'] :: AddonInfo -> Maybe Text

-- | The type of the add-on.
[$sel:type':AddonInfo'] :: AddonInfo -> Maybe Text

-- | An object that represents information about available add-on versions
--   and compatible Kubernetes versions.
[$sel:addonVersions:AddonInfo'] :: AddonInfo -> Maybe [AddonVersionInfo]

-- | Create a value of <a>AddonInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonName:AddonInfo'</a>, <a>addonInfo_addonName</a> - The
--   name of the add-on.
--   
--   <a>$sel:type':AddonInfo'</a>, <a>addonInfo_type</a> - The type of the
--   add-on.
--   
--   <a>$sel:addonVersions:AddonInfo'</a>, <a>addonInfo_addonVersions</a> -
--   An object that represents information about available add-on versions
--   and compatible Kubernetes versions.
newAddonInfo :: AddonInfo

-- | The name of the add-on.
addonInfo_addonName :: Lens' AddonInfo (Maybe Text)

-- | The type of the add-on.
addonInfo_type :: Lens' AddonInfo (Maybe Text)

-- | An object that represents information about available add-on versions
--   and compatible Kubernetes versions.
addonInfo_addonVersions :: Lens' AddonInfo (Maybe [AddonVersionInfo])

-- | An issue related to an add-on.
--   
--   <i>See:</i> <a>newAddonIssue</a> smart constructor.
data AddonIssue
AddonIssue' :: Maybe [Text] -> Maybe AddonIssueCode -> Maybe Text -> AddonIssue

-- | The resource IDs of the issue.
[$sel:resourceIds:AddonIssue'] :: AddonIssue -> Maybe [Text]

-- | A code that describes the type of issue.
[$sel:code:AddonIssue'] :: AddonIssue -> Maybe AddonIssueCode

-- | A message that provides details about the issue and what might cause
--   it.
[$sel:message:AddonIssue'] :: AddonIssue -> Maybe Text

-- | Create a value of <a>AddonIssue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:AddonIssue'</a>, <a>addonIssue_resourceIds</a> -
--   The resource IDs of the issue.
--   
--   <a>$sel:code:AddonIssue'</a>, <a>addonIssue_code</a> - A code that
--   describes the type of issue.
--   
--   <a>$sel:message:AddonIssue'</a>, <a>addonIssue_message</a> - A message
--   that provides details about the issue and what might cause it.
newAddonIssue :: AddonIssue

-- | The resource IDs of the issue.
addonIssue_resourceIds :: Lens' AddonIssue (Maybe [Text])

-- | A code that describes the type of issue.
addonIssue_code :: Lens' AddonIssue (Maybe AddonIssueCode)

-- | A message that provides details about the issue and what might cause
--   it.
addonIssue_message :: Lens' AddonIssue (Maybe Text)

-- | Information about an add-on version.
--   
--   <i>See:</i> <a>newAddonVersionInfo</a> smart constructor.
data AddonVersionInfo
AddonVersionInfo' :: Maybe Text -> Maybe [Text] -> Maybe [Compatibility] -> AddonVersionInfo

-- | The version of the add-on.
[$sel:addonVersion:AddonVersionInfo'] :: AddonVersionInfo -> Maybe Text

-- | The architectures that the version supports.
[$sel:architecture:AddonVersionInfo'] :: AddonVersionInfo -> Maybe [Text]

-- | An object that represents the compatibilities of a version.
[$sel:compatibilities:AddonVersionInfo'] :: AddonVersionInfo -> Maybe [Compatibility]

-- | Create a value of <a>AddonVersionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonVersion:AddonVersionInfo'</a>,
--   <a>addonVersionInfo_addonVersion</a> - The version of the add-on.
--   
--   <a>$sel:architecture:AddonVersionInfo'</a>,
--   <a>addonVersionInfo_architecture</a> - The architectures that the
--   version supports.
--   
--   <a>$sel:compatibilities:AddonVersionInfo'</a>,
--   <a>addonVersionInfo_compatibilities</a> - An object that represents
--   the compatibilities of a version.
newAddonVersionInfo :: AddonVersionInfo

-- | The version of the add-on.
addonVersionInfo_addonVersion :: Lens' AddonVersionInfo (Maybe Text)

-- | The architectures that the version supports.
addonVersionInfo_architecture :: Lens' AddonVersionInfo (Maybe [Text])

-- | An object that represents the compatibilities of a version.
addonVersionInfo_compatibilities :: Lens' AddonVersionInfo (Maybe [Compatibility])

-- | An Auto Scaling group that is associated with an Amazon EKS managed
--   node group.
--   
--   <i>See:</i> <a>newAutoScalingGroup</a> smart constructor.
data AutoScalingGroup
AutoScalingGroup' :: Maybe Text -> AutoScalingGroup

-- | The name of the Auto Scaling group associated with an Amazon EKS
--   managed node group.
[$sel:name:AutoScalingGroup'] :: AutoScalingGroup -> Maybe Text

-- | Create a value of <a>AutoScalingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AutoScalingGroup'</a>, <a>autoScalingGroup_name</a> - The
--   name of the Auto Scaling group associated with an Amazon EKS managed
--   node group.
newAutoScalingGroup :: AutoScalingGroup

-- | The name of the Auto Scaling group associated with an Amazon EKS
--   managed node group.
autoScalingGroup_name :: Lens' AutoScalingGroup (Maybe Text)

-- | An object representing the <tt>certificate-authority-data</tt> for
--   your cluster.
--   
--   <i>See:</i> <a>newCertificate</a> smart constructor.
data Certificate
Certificate' :: Maybe Text -> Certificate

-- | The Base64-encoded certificate data required to communicate with your
--   cluster. Add this to the <tt>certificate-authority-data</tt> section
--   of the <tt>kubeconfig</tt> file for your cluster.
[$sel:data':Certificate'] :: Certificate -> Maybe Text

-- | Create a value of <a>Certificate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':Certificate'</a>, <a>certificate_data</a> - The
--   Base64-encoded certificate data required to communicate with your
--   cluster. Add this to the <tt>certificate-authority-data</tt> section
--   of the <tt>kubeconfig</tt> file for your cluster.
newCertificate :: Certificate

-- | The Base64-encoded certificate data required to communicate with your
--   cluster. Add this to the <tt>certificate-authority-data</tt> section
--   of the <tt>kubeconfig</tt> file for your cluster.
certificate_data :: Lens' Certificate (Maybe Text)

-- | An object representing an Amazon EKS cluster.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe ClusterStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe KubernetesNetworkConfigResponse -> Maybe ConnectorConfigResponse -> Maybe Certificate -> Maybe Text -> Maybe Text -> Maybe [EncryptionConfig] -> Maybe Text -> Maybe Text -> Maybe Logging -> Maybe Identity -> Maybe VpcConfigResponse -> Maybe (HashMap Text Text) -> Maybe Text -> Cluster

-- | The current status of the cluster.
[$sel:status:Cluster'] :: Cluster -> Maybe ClusterStatus

-- | The Amazon Resource Name (ARN) of the cluster.
[$sel:arn:Cluster'] :: Cluster -> Maybe Text

-- | The Unix epoch timestamp in seconds for when the cluster was created.
[$sel:createdAt:Cluster'] :: Cluster -> Maybe POSIX

-- | The platform version of your Amazon EKS cluster. For more information,
--   see <a>Platform Versions</a> in the /<i>Amazon EKS User Guide</i>/ .
[$sel:platformVersion:Cluster'] :: Cluster -> Maybe Text

-- | The Kubernetes network configuration for the cluster.
[$sel:kubernetesNetworkConfig:Cluster'] :: Cluster -> Maybe KubernetesNetworkConfigResponse

-- | The configuration used to connect to a cluster for registration.
[$sel:connectorConfig:Cluster'] :: Cluster -> Maybe ConnectorConfigResponse

-- | The <tt>certificate-authority-data</tt> for your cluster.
[$sel:certificateAuthority:Cluster'] :: Cluster -> Maybe Certificate

-- | The name of the cluster.
[$sel:name:Cluster'] :: Cluster -> Maybe Text

-- | The Kubernetes server version for the cluster.
[$sel:version:Cluster'] :: Cluster -> Maybe Text

-- | The encryption configuration for the cluster.
[$sel:encryptionConfig:Cluster'] :: Cluster -> Maybe [EncryptionConfig]

-- | The endpoint for your Kubernetes API server.
[$sel:endpoint:Cluster'] :: Cluster -> Maybe Text

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:Cluster'] :: Cluster -> Maybe Text

-- | The logging configuration for your cluster.
[$sel:logging:Cluster'] :: Cluster -> Maybe Logging

-- | The identity provider information for the cluster.
[$sel:identity:Cluster'] :: Cluster -> Maybe Identity

-- | The VPC configuration used by the cluster control plane. Amazon EKS
--   VPC resources have specific requirements to work properly with
--   Kubernetes. For more information, see <a>Cluster VPC
--   Considerations</a> and <a>Cluster Security Group Considerations</a> in
--   the <i>Amazon EKS User Guide</i>.
[$sel:resourcesVpcConfig:Cluster'] :: Cluster -> Maybe VpcConfigResponse

-- | The metadata that you apply to the cluster to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Cluster tags do not
--   propagate to any other resources associated with the cluster.
[$sel:tags:Cluster'] :: Cluster -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the IAM role that provides
--   permissions for the Kubernetes control plane to make calls to Amazon
--   Web Services API operations on your behalf.
[$sel:roleArn:Cluster'] :: Cluster -> Maybe Text

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - The current
--   status of the cluster.
--   
--   <a>$sel:arn:Cluster'</a>, <a>cluster_arn</a> - The Amazon Resource
--   Name (ARN) of the cluster.
--   
--   <a>$sel:createdAt:Cluster'</a>, <a>cluster_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the cluster was created.
--   
--   <a>$sel:platformVersion:Cluster'</a>, <a>cluster_platformVersion</a> -
--   The platform version of your Amazon EKS cluster. For more information,
--   see <a>Platform Versions</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:kubernetesNetworkConfig:Cluster'</a>,
--   <a>cluster_kubernetesNetworkConfig</a> - The Kubernetes network
--   configuration for the cluster.
--   
--   <a>$sel:connectorConfig:Cluster'</a>, <a>cluster_connectorConfig</a> -
--   The configuration used to connect to a cluster for registration.
--   
--   <a>$sel:certificateAuthority:Cluster'</a>,
--   <a>cluster_certificateAuthority</a> - The
--   <tt>certificate-authority-data</tt> for your cluster.
--   
--   <a>$sel:name:Cluster'</a>, <a>cluster_name</a> - The name of the
--   cluster.
--   
--   <a>$sel:version:Cluster'</a>, <a>cluster_version</a> - The Kubernetes
--   server version for the cluster.
--   
--   <a>$sel:encryptionConfig:Cluster'</a>, <a>cluster_encryptionConfig</a>
--   - The encryption configuration for the cluster.
--   
--   <a>$sel:endpoint:Cluster'</a>, <a>cluster_endpoint</a> - The endpoint
--   for your Kubernetes API server.
--   
--   <a>$sel:clientRequestToken:Cluster'</a>,
--   <a>cluster_clientRequestToken</a> - Unique, case-sensitive identifier
--   that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:logging:Cluster'</a>, <a>cluster_logging</a> - The logging
--   configuration for your cluster.
--   
--   <a>$sel:identity:Cluster'</a>, <a>cluster_identity</a> - The identity
--   provider information for the cluster.
--   
--   <a>$sel:resourcesVpcConfig:Cluster'</a>,
--   <a>cluster_resourcesVpcConfig</a> - The VPC configuration used by the
--   cluster control plane. Amazon EKS VPC resources have specific
--   requirements to work properly with Kubernetes. For more information,
--   see <a>Cluster VPC Considerations</a> and <a>Cluster Security Group
--   Considerations</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:tags:Cluster'</a>, <a>cluster_tags</a> - The metadata that you
--   apply to the cluster to assist with categorization and organization.
--   Each tag consists of a key and an optional value, both of which you
--   define. Cluster tags do not propagate to any other resources
--   associated with the cluster.
--   
--   <a>$sel:roleArn:Cluster'</a>, <a>cluster_roleArn</a> - The Amazon
--   Resource Name (ARN) of the IAM role that provides permissions for the
--   Kubernetes control plane to make calls to Amazon Web Services API
--   operations on your behalf.
newCluster :: Cluster

-- | The current status of the cluster.
cluster_status :: Lens' Cluster (Maybe ClusterStatus)

-- | The Amazon Resource Name (ARN) of the cluster.
cluster_arn :: Lens' Cluster (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the cluster was created.
cluster_createdAt :: Lens' Cluster (Maybe UTCTime)

-- | The platform version of your Amazon EKS cluster. For more information,
--   see <a>Platform Versions</a> in the /<i>Amazon EKS User Guide</i>/ .
cluster_platformVersion :: Lens' Cluster (Maybe Text)

-- | The Kubernetes network configuration for the cluster.
cluster_kubernetesNetworkConfig :: Lens' Cluster (Maybe KubernetesNetworkConfigResponse)

-- | The configuration used to connect to a cluster for registration.
cluster_connectorConfig :: Lens' Cluster (Maybe ConnectorConfigResponse)

-- | The <tt>certificate-authority-data</tt> for your cluster.
cluster_certificateAuthority :: Lens' Cluster (Maybe Certificate)

-- | The name of the cluster.
cluster_name :: Lens' Cluster (Maybe Text)

-- | The Kubernetes server version for the cluster.
cluster_version :: Lens' Cluster (Maybe Text)

-- | The encryption configuration for the cluster.
cluster_encryptionConfig :: Lens' Cluster (Maybe [EncryptionConfig])

-- | The endpoint for your Kubernetes API server.
cluster_endpoint :: Lens' Cluster (Maybe Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
cluster_clientRequestToken :: Lens' Cluster (Maybe Text)

-- | The logging configuration for your cluster.
cluster_logging :: Lens' Cluster (Maybe Logging)

-- | The identity provider information for the cluster.
cluster_identity :: Lens' Cluster (Maybe Identity)

-- | The VPC configuration used by the cluster control plane. Amazon EKS
--   VPC resources have specific requirements to work properly with
--   Kubernetes. For more information, see <a>Cluster VPC
--   Considerations</a> and <a>Cluster Security Group Considerations</a> in
--   the <i>Amazon EKS User Guide</i>.
cluster_resourcesVpcConfig :: Lens' Cluster (Maybe VpcConfigResponse)

-- | The metadata that you apply to the cluster to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Cluster tags do not
--   propagate to any other resources associated with the cluster.
cluster_tags :: Lens' Cluster (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the IAM role that provides
--   permissions for the Kubernetes control plane to make calls to Amazon
--   Web Services API operations on your behalf.
cluster_roleArn :: Lens' Cluster (Maybe Text)

-- | Compatibility information.
--   
--   <i>See:</i> <a>newCompatibility</a> smart constructor.
data Compatibility
Compatibility' :: Maybe Bool -> Maybe Text -> Maybe [Text] -> Compatibility

-- | The supported default version.
[$sel:defaultVersion:Compatibility'] :: Compatibility -> Maybe Bool

-- | The supported Kubernetes version of the cluster.
[$sel:clusterVersion:Compatibility'] :: Compatibility -> Maybe Text

-- | The supported compute platform.
[$sel:platformVersions:Compatibility'] :: Compatibility -> Maybe [Text]

-- | Create a value of <a>Compatibility</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultVersion:Compatibility'</a>,
--   <a>compatibility_defaultVersion</a> - The supported default version.
--   
--   <a>$sel:clusterVersion:Compatibility'</a>,
--   <a>compatibility_clusterVersion</a> - The supported Kubernetes version
--   of the cluster.
--   
--   <a>$sel:platformVersions:Compatibility'</a>,
--   <a>compatibility_platformVersions</a> - The supported compute
--   platform.
newCompatibility :: Compatibility

-- | The supported default version.
compatibility_defaultVersion :: Lens' Compatibility (Maybe Bool)

-- | The supported Kubernetes version of the cluster.
compatibility_clusterVersion :: Lens' Compatibility (Maybe Text)

-- | The supported compute platform.
compatibility_platformVersions :: Lens' Compatibility (Maybe [Text])

-- | The configuration sent to a cluster for configuration.
--   
--   <i>See:</i> <a>newConnectorConfigRequest</a> smart constructor.
data ConnectorConfigRequest
ConnectorConfigRequest' :: Text -> ConnectorConfigProvider -> ConnectorConfigRequest

-- | The Amazon Resource Name (ARN) of the role that is authorized to
--   request the connector configuration.
[$sel:roleArn:ConnectorConfigRequest'] :: ConnectorConfigRequest -> Text

-- | The cloud provider for the target cluster to connect.
[$sel:provider:ConnectorConfigRequest'] :: ConnectorConfigRequest -> ConnectorConfigProvider

-- | Create a value of <a>ConnectorConfigRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:ConnectorConfigRequest'</a>,
--   <a>connectorConfigRequest_roleArn</a> - The Amazon Resource Name (ARN)
--   of the role that is authorized to request the connector configuration.
--   
--   <a>$sel:provider:ConnectorConfigRequest'</a>,
--   <a>connectorConfigRequest_provider</a> - The cloud provider for the
--   target cluster to connect.
newConnectorConfigRequest :: Text -> ConnectorConfigProvider -> ConnectorConfigRequest

-- | The Amazon Resource Name (ARN) of the role that is authorized to
--   request the connector configuration.
connectorConfigRequest_roleArn :: Lens' ConnectorConfigRequest Text

-- | The cloud provider for the target cluster to connect.
connectorConfigRequest_provider :: Lens' ConnectorConfigRequest ConnectorConfigProvider

-- | The full description of your connected cluster.
--   
--   <i>See:</i> <a>newConnectorConfigResponse</a> smart constructor.
data ConnectorConfigResponse
ConnectorConfigResponse' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> ConnectorConfigResponse

-- | A unique code associated with the cluster for registration purposes.
[$sel:activationCode:ConnectorConfigResponse'] :: ConnectorConfigResponse -> Maybe Text

-- | A unique ID associated with the cluster for registration purposes.
[$sel:activationId:ConnectorConfigResponse'] :: ConnectorConfigResponse -> Maybe Text

-- | The expiration time of the connected cluster. The cluster's YAML file
--   must be applied through the native provider.
[$sel:activationExpiry:ConnectorConfigResponse'] :: ConnectorConfigResponse -> Maybe POSIX

-- | The cluster's cloud service provider.
[$sel:provider:ConnectorConfigResponse'] :: ConnectorConfigResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the role that is used by the EKS
--   connector to communicate with AWS services from the connected
--   Kubernetes cluster.
[$sel:roleArn:ConnectorConfigResponse'] :: ConnectorConfigResponse -> Maybe Text

-- | Create a value of <a>ConnectorConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activationCode:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_activationCode</a> - A unique code
--   associated with the cluster for registration purposes.
--   
--   <a>$sel:activationId:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_activationId</a> - A unique ID associated
--   with the cluster for registration purposes.
--   
--   <a>$sel:activationExpiry:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_activationExpiry</a> - The expiration time
--   of the connected cluster. The cluster's YAML file must be applied
--   through the native provider.
--   
--   <a>$sel:provider:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_provider</a> - The cluster's cloud service
--   provider.
--   
--   <a>$sel:roleArn:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_roleArn</a> - The Amazon Resource Name
--   (ARN) of the role that is used by the EKS connector to communicate
--   with AWS services from the connected Kubernetes cluster.
newConnectorConfigResponse :: ConnectorConfigResponse

-- | A unique code associated with the cluster for registration purposes.
connectorConfigResponse_activationCode :: Lens' ConnectorConfigResponse (Maybe Text)

-- | A unique ID associated with the cluster for registration purposes.
connectorConfigResponse_activationId :: Lens' ConnectorConfigResponse (Maybe Text)

-- | The expiration time of the connected cluster. The cluster's YAML file
--   must be applied through the native provider.
connectorConfigResponse_activationExpiry :: Lens' ConnectorConfigResponse (Maybe UTCTime)

-- | The cluster's cloud service provider.
connectorConfigResponse_provider :: Lens' ConnectorConfigResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the role that is used by the EKS
--   connector to communicate with AWS services from the connected
--   Kubernetes cluster.
connectorConfigResponse_roleArn :: Lens' ConnectorConfigResponse (Maybe Text)

-- | The encryption configuration for the cluster.
--   
--   <i>See:</i> <a>newEncryptionConfig</a> smart constructor.
data EncryptionConfig
EncryptionConfig' :: Maybe [Text] -> Maybe Provider -> EncryptionConfig

-- | Specifies the resources to be encrypted. The only supported value is
--   "secrets".
[$sel:resources:EncryptionConfig'] :: EncryptionConfig -> Maybe [Text]

-- | Key Management Service (KMS) key. Either the ARN or the alias can be
--   used.
[$sel:provider:EncryptionConfig'] :: EncryptionConfig -> Maybe Provider

-- | Create a value of <a>EncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:EncryptionConfig'</a>,
--   <a>encryptionConfig_resources</a> - Specifies the resources to be
--   encrypted. The only supported value is "secrets".
--   
--   <a>$sel:provider:EncryptionConfig'</a>,
--   <a>encryptionConfig_provider</a> - Key Management Service (KMS) key.
--   Either the ARN or the alias can be used.
newEncryptionConfig :: EncryptionConfig

-- | Specifies the resources to be encrypted. The only supported value is
--   "secrets".
encryptionConfig_resources :: Lens' EncryptionConfig (Maybe [Text])

-- | Key Management Service (KMS) key. Either the ARN or the alias can be
--   used.
encryptionConfig_provider :: Lens' EncryptionConfig (Maybe Provider)

-- | An object representing an error when an asynchronous operation fails.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe [Text] -> Maybe EKSErrorCode -> Maybe Text -> ErrorDetail

-- | An optional field that contains the resource IDs associated with the
--   error.
[$sel:resourceIds:ErrorDetail'] :: ErrorDetail -> Maybe [Text]

-- | A brief description of the error.
--   
--   <ul>
--   <li><b>SubnetNotFound</b>: We couldn't find one of the subnets
--   associated with the cluster.</li>
--   <li><b>SecurityGroupNotFound</b>: We couldn't find one of the security
--   groups associated with the cluster.</li>
--   <li><b>EniLimitReached</b>: You have reached the elastic network
--   interface limit for your account.</li>
--   <li><b>IpNotAvailable</b>: A subnet associated with the cluster
--   doesn't have any free IP addresses.</li>
--   <li><b>AccessDenied</b>: You don't have permissions to perform the
--   specified operation.</li>
--   <li><b>OperationNotPermitted</b>: The service role associated with the
--   cluster doesn't have the required access permissions for Amazon
--   EKS.</li>
--   <li><b>VpcIdNotFound</b>: We couldn't find the VPC associated with the
--   cluster.</li>
--   </ul>
[$sel:errorCode:ErrorDetail'] :: ErrorDetail -> Maybe EKSErrorCode

-- | A more complete description of the error.
[$sel:errorMessage:ErrorDetail'] :: ErrorDetail -> Maybe Text

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:ErrorDetail'</a>, <a>errorDetail_resourceIds</a> -
--   An optional field that contains the resource IDs associated with the
--   error.
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - A
--   brief description of the error.
--   
--   <ul>
--   <li><b>SubnetNotFound</b>: We couldn't find one of the subnets
--   associated with the cluster.</li>
--   <li><b>SecurityGroupNotFound</b>: We couldn't find one of the security
--   groups associated with the cluster.</li>
--   <li><b>EniLimitReached</b>: You have reached the elastic network
--   interface limit for your account.</li>
--   <li><b>IpNotAvailable</b>: A subnet associated with the cluster
--   doesn't have any free IP addresses.</li>
--   <li><b>AccessDenied</b>: You don't have permissions to perform the
--   specified operation.</li>
--   <li><b>OperationNotPermitted</b>: The service role associated with the
--   cluster doesn't have the required access permissions for Amazon
--   EKS.</li>
--   <li><b>VpcIdNotFound</b>: We couldn't find the VPC associated with the
--   cluster.</li>
--   </ul>
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - A more complete description of the error.
newErrorDetail :: ErrorDetail

-- | An optional field that contains the resource IDs associated with the
--   error.
errorDetail_resourceIds :: Lens' ErrorDetail (Maybe [Text])

-- | A brief description of the error.
--   
--   <ul>
--   <li><b>SubnetNotFound</b>: We couldn't find one of the subnets
--   associated with the cluster.</li>
--   <li><b>SecurityGroupNotFound</b>: We couldn't find one of the security
--   groups associated with the cluster.</li>
--   <li><b>EniLimitReached</b>: You have reached the elastic network
--   interface limit for your account.</li>
--   <li><b>IpNotAvailable</b>: A subnet associated with the cluster
--   doesn't have any free IP addresses.</li>
--   <li><b>AccessDenied</b>: You don't have permissions to perform the
--   specified operation.</li>
--   <li><b>OperationNotPermitted</b>: The service role associated with the
--   cluster doesn't have the required access permissions for Amazon
--   EKS.</li>
--   <li><b>VpcIdNotFound</b>: We couldn't find the VPC associated with the
--   cluster.</li>
--   </ul>
errorDetail_errorCode :: Lens' ErrorDetail (Maybe EKSErrorCode)

-- | A more complete description of the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)

-- | An object representing an Fargate profile.
--   
--   <i>See:</i> <a>newFargateProfile</a> smart constructor.
data FargateProfile
FargateProfile' :: Maybe Text -> Maybe FargateProfileStatus -> Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [FargateProfileSelector] -> Maybe (HashMap Text Text) -> FargateProfile

-- | The full Amazon Resource Name (ARN) of the Fargate profile.
[$sel:fargateProfileArn:FargateProfile'] :: FargateProfile -> Maybe Text

-- | The current status of the Fargate profile.
[$sel:status:FargateProfile'] :: FargateProfile -> Maybe FargateProfileStatus

-- | The Unix epoch timestamp in seconds for when the Fargate profile was
--   created.
[$sel:createdAt:FargateProfile'] :: FargateProfile -> Maybe POSIX

-- | The IDs of subnets to launch pods into.
[$sel:subnets:FargateProfile'] :: FargateProfile -> Maybe [Text]

-- | The name of the Amazon EKS cluster that the Fargate profile belongs
--   to.
[$sel:clusterName:FargateProfile'] :: FargateProfile -> Maybe Text

-- | The Amazon Resource Name (ARN) of the pod execution role to use for
--   pods that match the selectors in the Fargate profile. For more
--   information, see <a>Pod Execution Role</a> in the <i>Amazon EKS User
--   Guide</i>.
[$sel:podExecutionRoleArn:FargateProfile'] :: FargateProfile -> Maybe Text

-- | The name of the Fargate profile.
[$sel:fargateProfileName:FargateProfile'] :: FargateProfile -> Maybe Text

-- | The selectors to match for pods to use this Fargate profile.
[$sel:selectors:FargateProfile'] :: FargateProfile -> Maybe [FargateProfileSelector]

-- | The metadata applied to the Fargate profile to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Fargate profile tags do not
--   propagate to any other resources associated with the Fargate profile,
--   such as the pods that are scheduled with it.
[$sel:tags:FargateProfile'] :: FargateProfile -> Maybe (HashMap Text Text)

-- | Create a value of <a>FargateProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fargateProfileArn:FargateProfile'</a>,
--   <a>fargateProfile_fargateProfileArn</a> - The full Amazon Resource
--   Name (ARN) of the Fargate profile.
--   
--   <a>$sel:status:FargateProfile'</a>, <a>fargateProfile_status</a> - The
--   current status of the Fargate profile.
--   
--   <a>$sel:createdAt:FargateProfile'</a>, <a>fargateProfile_createdAt</a>
--   - The Unix epoch timestamp in seconds for when the Fargate profile was
--   created.
--   
--   <a>$sel:subnets:FargateProfile'</a>, <a>fargateProfile_subnets</a> -
--   The IDs of subnets to launch pods into.
--   
--   <a>$sel:clusterName:FargateProfile'</a>,
--   <a>fargateProfile_clusterName</a> - The name of the Amazon EKS cluster
--   that the Fargate profile belongs to.
--   
--   <a>$sel:podExecutionRoleArn:FargateProfile'</a>,
--   <a>fargateProfile_podExecutionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the pod execution role to use for pods that match the
--   selectors in the Fargate profile. For more information, see <a>Pod
--   Execution Role</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:fargateProfileName:FargateProfile'</a>,
--   <a>fargateProfile_fargateProfileName</a> - The name of the Fargate
--   profile.
--   
--   <a>$sel:selectors:FargateProfile'</a>, <a>fargateProfile_selectors</a>
--   - The selectors to match for pods to use this Fargate profile.
--   
--   <a>$sel:tags:FargateProfile'</a>, <a>fargateProfile_tags</a> - The
--   metadata applied to the Fargate profile to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Fargate profile tags do not propagate to any
--   other resources associated with the Fargate profile, such as the pods
--   that are scheduled with it.
newFargateProfile :: FargateProfile

-- | The full Amazon Resource Name (ARN) of the Fargate profile.
fargateProfile_fargateProfileArn :: Lens' FargateProfile (Maybe Text)

-- | The current status of the Fargate profile.
fargateProfile_status :: Lens' FargateProfile (Maybe FargateProfileStatus)

-- | The Unix epoch timestamp in seconds for when the Fargate profile was
--   created.
fargateProfile_createdAt :: Lens' FargateProfile (Maybe UTCTime)

-- | The IDs of subnets to launch pods into.
fargateProfile_subnets :: Lens' FargateProfile (Maybe [Text])

-- | The name of the Amazon EKS cluster that the Fargate profile belongs
--   to.
fargateProfile_clusterName :: Lens' FargateProfile (Maybe Text)

-- | The Amazon Resource Name (ARN) of the pod execution role to use for
--   pods that match the selectors in the Fargate profile. For more
--   information, see <a>Pod Execution Role</a> in the <i>Amazon EKS User
--   Guide</i>.
fargateProfile_podExecutionRoleArn :: Lens' FargateProfile (Maybe Text)

-- | The name of the Fargate profile.
fargateProfile_fargateProfileName :: Lens' FargateProfile (Maybe Text)

-- | The selectors to match for pods to use this Fargate profile.
fargateProfile_selectors :: Lens' FargateProfile (Maybe [FargateProfileSelector])

-- | The metadata applied to the Fargate profile to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Fargate profile tags do not
--   propagate to any other resources associated with the Fargate profile,
--   such as the pods that are scheduled with it.
fargateProfile_tags :: Lens' FargateProfile (Maybe (HashMap Text Text))

-- | An object representing an Fargate profile selector.
--   
--   <i>See:</i> <a>newFargateProfileSelector</a> smart constructor.
data FargateProfileSelector
FargateProfileSelector' :: Maybe Text -> Maybe (HashMap Text Text) -> FargateProfileSelector

-- | The Kubernetes namespace that the selector should match.
[$sel:namespace:FargateProfileSelector'] :: FargateProfileSelector -> Maybe Text

-- | The Kubernetes labels that the selector should match. A pod must
--   contain all of the labels that are specified in the selector for it to
--   be considered a match.
[$sel:labels:FargateProfileSelector'] :: FargateProfileSelector -> Maybe (HashMap Text Text)

-- | Create a value of <a>FargateProfileSelector</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:FargateProfileSelector'</a>,
--   <a>fargateProfileSelector_namespace</a> - The Kubernetes namespace
--   that the selector should match.
--   
--   <a>$sel:labels:FargateProfileSelector'</a>,
--   <a>fargateProfileSelector_labels</a> - The Kubernetes labels that the
--   selector should match. A pod must contain all of the labels that are
--   specified in the selector for it to be considered a match.
newFargateProfileSelector :: FargateProfileSelector

-- | The Kubernetes namespace that the selector should match.
fargateProfileSelector_namespace :: Lens' FargateProfileSelector (Maybe Text)

-- | The Kubernetes labels that the selector should match. A pod must
--   contain all of the labels that are specified in the selector for it to
--   be considered a match.
fargateProfileSelector_labels :: Lens' FargateProfileSelector (Maybe (HashMap Text Text))

-- | An object representing an identity provider.
--   
--   <i>See:</i> <a>newIdentity</a> smart constructor.
data Identity
Identity' :: Maybe OIDC -> Identity

-- | An object representing the <a>OpenID Connect</a> identity provider
--   information.
[$sel:oidc:Identity'] :: Identity -> Maybe OIDC

-- | Create a value of <a>Identity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oidc:Identity'</a>, <a>identity_oidc</a> - An object
--   representing the <a>OpenID Connect</a> identity provider information.
newIdentity :: Identity

-- | An object representing the <a>OpenID Connect</a> identity provider
--   information.
identity_oidc :: Lens' Identity (Maybe OIDC)

-- | An object representing an identity provider configuration.
--   
--   <i>See:</i> <a>newIdentityProviderConfig</a> smart constructor.
data IdentityProviderConfig
IdentityProviderConfig' :: Text -> Text -> IdentityProviderConfig

-- | The type of the identity provider configuration.
[$sel:type':IdentityProviderConfig'] :: IdentityProviderConfig -> Text

-- | The name of the identity provider configuration.
[$sel:name:IdentityProviderConfig'] :: IdentityProviderConfig -> Text

-- | Create a value of <a>IdentityProviderConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':IdentityProviderConfig'</a>,
--   <a>identityProviderConfig_type</a> - The type of the identity provider
--   configuration.
--   
--   <a>$sel:name:IdentityProviderConfig'</a>,
--   <a>identityProviderConfig_name</a> - The name of the identity provider
--   configuration.
newIdentityProviderConfig :: Text -> Text -> IdentityProviderConfig

-- | The type of the identity provider configuration.
identityProviderConfig_type :: Lens' IdentityProviderConfig Text

-- | The name of the identity provider configuration.
identityProviderConfig_name :: Lens' IdentityProviderConfig Text

-- | The full description of your identity configuration.
--   
--   <i>See:</i> <a>newIdentityProviderConfigResponse</a> smart
--   constructor.
data IdentityProviderConfigResponse
IdentityProviderConfigResponse' :: Maybe OidcIdentityProviderConfig -> IdentityProviderConfigResponse

-- | An object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
[$sel:oidc:IdentityProviderConfigResponse'] :: IdentityProviderConfigResponse -> Maybe OidcIdentityProviderConfig

-- | Create a value of <a>IdentityProviderConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oidc:IdentityProviderConfigResponse'</a>,
--   <a>identityProviderConfigResponse_oidc</a> - An object that represents
--   an OpenID Connect (OIDC) identity provider configuration.
newIdentityProviderConfigResponse :: IdentityProviderConfigResponse

-- | An object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
identityProviderConfigResponse_oidc :: Lens' IdentityProviderConfigResponse (Maybe OidcIdentityProviderConfig)

-- | An object representing an issue with an Amazon EKS resource.
--   
--   <i>See:</i> <a>newIssue</a> smart constructor.
data Issue
Issue' :: Maybe [Text] -> Maybe NodegroupIssueCode -> Maybe Text -> Issue

-- | The Amazon Web Services resources that are afflicted by this issue.
[$sel:resourceIds:Issue'] :: Issue -> Maybe [Text]

-- | A brief description of the error.
--   
--   <ul>
--   <li><b>AccessDenied</b>: Amazon EKS or one or more of your managed
--   nodes is failing to authenticate or authorize with your Kubernetes
--   cluster API server.</li>
--   <li><b>AsgInstanceLaunchFailures</b>: Your Auto Scaling group is
--   experiencing failures while attempting to launch instances.</li>
--   <li><b>AutoScalingGroupNotFound</b>: We couldn't find the Auto Scaling
--   group associated with the managed node group. You may be able to
--   recreate an Auto Scaling group with the same settings to recover.</li>
--   <li><b>ClusterUnreachable</b>: Amazon EKS or one or more of your
--   managed nodes is unable to to communicate with your Kubernetes cluster
--   API server. This can happen if there are network disruptions or if API
--   servers are timing out processing requests.</li>
--   <li><b>Ec2LaunchTemplateNotFound</b>: We couldn't find the Amazon EC2
--   launch template for your managed node group. You may be able to
--   recreate a launch template with the same settings to recover.</li>
--   <li><b>Ec2LaunchTemplateVersionMismatch</b>: The Amazon EC2 launch
--   template version for your managed node group does not match the
--   version that Amazon EKS created. You may be able to revert to the
--   version that Amazon EKS created to recover.</li>
--   <li><b>Ec2SecurityGroupDeletionFailure</b>: We could not delete the
--   remote access security group for your managed node group. Remove any
--   dependencies from the security group.</li>
--   <li><b>Ec2SecurityGroupNotFound</b>: We couldn't find the cluster
--   security group for the cluster. You must recreate your cluster.</li>
--   <li><b>Ec2SubnetInvalidConfiguration</b>: One or more Amazon EC2
--   subnets specified for a node group do not automatically assign public
--   IP addresses to instances launched into it. If you want your instances
--   to be assigned a public IP address, then you need to enable the
--   <tt>auto-assign public IP address</tt> setting for the subnet. See
--   <a>Modifying the public IPv4 addressing attribute for your subnet</a>
--   in the Amazon VPC User Guide.</li>
--   <li><b>IamInstanceProfileNotFound</b>: We couldn't find the IAM
--   instance profile for your managed node group. You may be able to
--   recreate an instance profile with the same settings to recover.</li>
--   <li><b>IamNodeRoleNotFound</b>: We couldn't find the IAM role for your
--   managed node group. You may be able to recreate an IAM role with the
--   same settings to recover.</li>
--   <li><b>InstanceLimitExceeded</b>: Your Amazon Web Services account is
--   unable to launch any more instances of the specified instance type.
--   You may be able to request an Amazon EC2 instance limit increase to
--   recover.</li>
--   <li><b>InsufficientFreeAddresses</b>: One or more of the subnets
--   associated with your managed node group does not have enough available
--   IP addresses for new nodes.</li>
--   <li><b>InternalFailure</b>: These errors are usually caused by an
--   Amazon EKS server-side issue.</li>
--   <li><b>NodeCreationFailure</b>: Your launched instances are unable to
--   register with your Amazon EKS cluster. Common causes of this failure
--   are insufficient <a>node IAM role</a> permissions or lack of outbound
--   internet access for the nodes.</li>
--   </ul>
[$sel:code:Issue'] :: Issue -> Maybe NodegroupIssueCode

-- | The error message associated with the issue.
[$sel:message:Issue'] :: Issue -> Maybe Text

-- | Create a value of <a>Issue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:Issue'</a>, <a>issue_resourceIds</a> - The Amazon
--   Web Services resources that are afflicted by this issue.
--   
--   <a>$sel:code:Issue'</a>, <a>issue_code</a> - A brief description of
--   the error.
--   
--   <ul>
--   <li><b>AccessDenied</b>: Amazon EKS or one or more of your managed
--   nodes is failing to authenticate or authorize with your Kubernetes
--   cluster API server.</li>
--   <li><b>AsgInstanceLaunchFailures</b>: Your Auto Scaling group is
--   experiencing failures while attempting to launch instances.</li>
--   <li><b>AutoScalingGroupNotFound</b>: We couldn't find the Auto Scaling
--   group associated with the managed node group. You may be able to
--   recreate an Auto Scaling group with the same settings to recover.</li>
--   <li><b>ClusterUnreachable</b>: Amazon EKS or one or more of your
--   managed nodes is unable to to communicate with your Kubernetes cluster
--   API server. This can happen if there are network disruptions or if API
--   servers are timing out processing requests.</li>
--   <li><b>Ec2LaunchTemplateNotFound</b>: We couldn't find the Amazon EC2
--   launch template for your managed node group. You may be able to
--   recreate a launch template with the same settings to recover.</li>
--   <li><b>Ec2LaunchTemplateVersionMismatch</b>: The Amazon EC2 launch
--   template version for your managed node group does not match the
--   version that Amazon EKS created. You may be able to revert to the
--   version that Amazon EKS created to recover.</li>
--   <li><b>Ec2SecurityGroupDeletionFailure</b>: We could not delete the
--   remote access security group for your managed node group. Remove any
--   dependencies from the security group.</li>
--   <li><b>Ec2SecurityGroupNotFound</b>: We couldn't find the cluster
--   security group for the cluster. You must recreate your cluster.</li>
--   <li><b>Ec2SubnetInvalidConfiguration</b>: One or more Amazon EC2
--   subnets specified for a node group do not automatically assign public
--   IP addresses to instances launched into it. If you want your instances
--   to be assigned a public IP address, then you need to enable the
--   <tt>auto-assign public IP address</tt> setting for the subnet. See
--   <a>Modifying the public IPv4 addressing attribute for your subnet</a>
--   in the Amazon VPC User Guide.</li>
--   <li><b>IamInstanceProfileNotFound</b>: We couldn't find the IAM
--   instance profile for your managed node group. You may be able to
--   recreate an instance profile with the same settings to recover.</li>
--   <li><b>IamNodeRoleNotFound</b>: We couldn't find the IAM role for your
--   managed node group. You may be able to recreate an IAM role with the
--   same settings to recover.</li>
--   <li><b>InstanceLimitExceeded</b>: Your Amazon Web Services account is
--   unable to launch any more instances of the specified instance type.
--   You may be able to request an Amazon EC2 instance limit increase to
--   recover.</li>
--   <li><b>InsufficientFreeAddresses</b>: One or more of the subnets
--   associated with your managed node group does not have enough available
--   IP addresses for new nodes.</li>
--   <li><b>InternalFailure</b>: These errors are usually caused by an
--   Amazon EKS server-side issue.</li>
--   <li><b>NodeCreationFailure</b>: Your launched instances are unable to
--   register with your Amazon EKS cluster. Common causes of this failure
--   are insufficient <a>node IAM role</a> permissions or lack of outbound
--   internet access for the nodes.</li>
--   </ul>
--   
--   <a>$sel:message:Issue'</a>, <a>issue_message</a> - The error message
--   associated with the issue.
newIssue :: Issue

-- | The Amazon Web Services resources that are afflicted by this issue.
issue_resourceIds :: Lens' Issue (Maybe [Text])

-- | A brief description of the error.
--   
--   <ul>
--   <li><b>AccessDenied</b>: Amazon EKS or one or more of your managed
--   nodes is failing to authenticate or authorize with your Kubernetes
--   cluster API server.</li>
--   <li><b>AsgInstanceLaunchFailures</b>: Your Auto Scaling group is
--   experiencing failures while attempting to launch instances.</li>
--   <li><b>AutoScalingGroupNotFound</b>: We couldn't find the Auto Scaling
--   group associated with the managed node group. You may be able to
--   recreate an Auto Scaling group with the same settings to recover.</li>
--   <li><b>ClusterUnreachable</b>: Amazon EKS or one or more of your
--   managed nodes is unable to to communicate with your Kubernetes cluster
--   API server. This can happen if there are network disruptions or if API
--   servers are timing out processing requests.</li>
--   <li><b>Ec2LaunchTemplateNotFound</b>: We couldn't find the Amazon EC2
--   launch template for your managed node group. You may be able to
--   recreate a launch template with the same settings to recover.</li>
--   <li><b>Ec2LaunchTemplateVersionMismatch</b>: The Amazon EC2 launch
--   template version for your managed node group does not match the
--   version that Amazon EKS created. You may be able to revert to the
--   version that Amazon EKS created to recover.</li>
--   <li><b>Ec2SecurityGroupDeletionFailure</b>: We could not delete the
--   remote access security group for your managed node group. Remove any
--   dependencies from the security group.</li>
--   <li><b>Ec2SecurityGroupNotFound</b>: We couldn't find the cluster
--   security group for the cluster. You must recreate your cluster.</li>
--   <li><b>Ec2SubnetInvalidConfiguration</b>: One or more Amazon EC2
--   subnets specified for a node group do not automatically assign public
--   IP addresses to instances launched into it. If you want your instances
--   to be assigned a public IP address, then you need to enable the
--   <tt>auto-assign public IP address</tt> setting for the subnet. See
--   <a>Modifying the public IPv4 addressing attribute for your subnet</a>
--   in the Amazon VPC User Guide.</li>
--   <li><b>IamInstanceProfileNotFound</b>: We couldn't find the IAM
--   instance profile for your managed node group. You may be able to
--   recreate an instance profile with the same settings to recover.</li>
--   <li><b>IamNodeRoleNotFound</b>: We couldn't find the IAM role for your
--   managed node group. You may be able to recreate an IAM role with the
--   same settings to recover.</li>
--   <li><b>InstanceLimitExceeded</b>: Your Amazon Web Services account is
--   unable to launch any more instances of the specified instance type.
--   You may be able to request an Amazon EC2 instance limit increase to
--   recover.</li>
--   <li><b>InsufficientFreeAddresses</b>: One or more of the subnets
--   associated with your managed node group does not have enough available
--   IP addresses for new nodes.</li>
--   <li><b>InternalFailure</b>: These errors are usually caused by an
--   Amazon EKS server-side issue.</li>
--   <li><b>NodeCreationFailure</b>: Your launched instances are unable to
--   register with your Amazon EKS cluster. Common causes of this failure
--   are insufficient <a>node IAM role</a> permissions or lack of outbound
--   internet access for the nodes.</li>
--   </ul>
issue_code :: Lens' Issue (Maybe NodegroupIssueCode)

-- | The error message associated with the issue.
issue_message :: Lens' Issue (Maybe Text)

-- | The Kubernetes network configuration for the cluster.
--   
--   <i>See:</i> <a>newKubernetesNetworkConfigRequest</a> smart
--   constructor.
data KubernetesNetworkConfigRequest
KubernetesNetworkConfigRequest' :: Maybe Text -> KubernetesNetworkConfigRequest

-- | The CIDR block to assign Kubernetes service IP addresses from. If you
--   don't specify a block, Kubernetes assigns addresses from either the
--   10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you
--   specify a block that does not overlap with resources in other networks
--   that are peered or connected to your VPC. The block must meet the
--   following requirements:
--   
--   <ul>
--   <li>Within one of the following private IP address blocks: 10.0.0.0/8,
--   172.16.0.0.0/12, or 192.168.0.0/16.</li>
--   <li>Doesn't overlap with any CIDR block assigned to the VPC that you
--   selected for VPC.</li>
--   <li>Between /24 and /12.</li>
--   </ul>
--   
--   You can only specify a custom CIDR block when you create a cluster and
--   can't change this value once the cluster is created.
[$sel:serviceIpv4Cidr:KubernetesNetworkConfigRequest'] :: KubernetesNetworkConfigRequest -> Maybe Text

-- | Create a value of <a>KubernetesNetworkConfigRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIpv4Cidr:KubernetesNetworkConfigRequest'</a>,
--   <a>kubernetesNetworkConfigRequest_serviceIpv4Cidr</a> - The CIDR block
--   to assign Kubernetes service IP addresses from. If you don't specify a
--   block, Kubernetes assigns addresses from either the 10.100.0.0/16 or
--   172.20.0.0/16 CIDR blocks. We recommend that you specify a block that
--   does not overlap with resources in other networks that are peered or
--   connected to your VPC. The block must meet the following requirements:
--   
--   <ul>
--   <li>Within one of the following private IP address blocks: 10.0.0.0/8,
--   172.16.0.0.0/12, or 192.168.0.0/16.</li>
--   <li>Doesn't overlap with any CIDR block assigned to the VPC that you
--   selected for VPC.</li>
--   <li>Between /24 and /12.</li>
--   </ul>
--   
--   You can only specify a custom CIDR block when you create a cluster and
--   can't change this value once the cluster is created.
newKubernetesNetworkConfigRequest :: KubernetesNetworkConfigRequest

-- | The CIDR block to assign Kubernetes service IP addresses from. If you
--   don't specify a block, Kubernetes assigns addresses from either the
--   10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you
--   specify a block that does not overlap with resources in other networks
--   that are peered or connected to your VPC. The block must meet the
--   following requirements:
--   
--   <ul>
--   <li>Within one of the following private IP address blocks: 10.0.0.0/8,
--   172.16.0.0.0/12, or 192.168.0.0/16.</li>
--   <li>Doesn't overlap with any CIDR block assigned to the VPC that you
--   selected for VPC.</li>
--   <li>Between /24 and /12.</li>
--   </ul>
--   
--   You can only specify a custom CIDR block when you create a cluster and
--   can't change this value once the cluster is created.
kubernetesNetworkConfigRequest_serviceIpv4Cidr :: Lens' KubernetesNetworkConfigRequest (Maybe Text)

-- | The Kubernetes network configuration for the cluster.
--   
--   <i>See:</i> <a>newKubernetesNetworkConfigResponse</a> smart
--   constructor.
data KubernetesNetworkConfigResponse
KubernetesNetworkConfigResponse' :: Maybe Text -> KubernetesNetworkConfigResponse

-- | The CIDR block that Kubernetes service IP addresses are assigned from.
--   If you didn't specify a CIDR block when you created the cluster, then
--   Kubernetes assigns addresses from either the 10.100.0.0/16 or
--   172.20.0.0/16 CIDR blocks. If this was specified, then it was
--   specified when the cluster was created and it cannot be changed.
[$sel:serviceIpv4Cidr:KubernetesNetworkConfigResponse'] :: KubernetesNetworkConfigResponse -> Maybe Text

-- | Create a value of <a>KubernetesNetworkConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIpv4Cidr:KubernetesNetworkConfigResponse'</a>,
--   <a>kubernetesNetworkConfigResponse_serviceIpv4Cidr</a> - The CIDR
--   block that Kubernetes service IP addresses are assigned from. If you
--   didn't specify a CIDR block when you created the cluster, then
--   Kubernetes assigns addresses from either the 10.100.0.0/16 or
--   172.20.0.0/16 CIDR blocks. If this was specified, then it was
--   specified when the cluster was created and it cannot be changed.
newKubernetesNetworkConfigResponse :: KubernetesNetworkConfigResponse

-- | The CIDR block that Kubernetes service IP addresses are assigned from.
--   If you didn't specify a CIDR block when you created the cluster, then
--   Kubernetes assigns addresses from either the 10.100.0.0/16 or
--   172.20.0.0/16 CIDR blocks. If this was specified, then it was
--   specified when the cluster was created and it cannot be changed.
kubernetesNetworkConfigResponse_serviceIpv4Cidr :: Lens' KubernetesNetworkConfigResponse (Maybe Text)

-- | An object representing a node group launch template specification. The
--   launch template cannot include <a>SubnetId</a> ,
--   <a>IamInstanceProfile</a> , <a>RequestSpotInstances</a> ,
--   <a>HibernationOptions</a> , or <a>TerminateInstances</a> , or the node
--   group deployment or update will fail. For more information about
--   launch templates, see <a>CreateLaunchTemplate</a> in the Amazon EC2
--   API Reference. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
--   
--   Specify either <tt>name</tt> or <tt>id</tt>, but not both.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | The name of the launch template.
[$sel:name:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The version of the launch template to use. If no version is specified,
--   then the template's default version is used.
[$sel:version:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | The ID of the launch template.
[$sel:id:LaunchTemplateSpecification'] :: LaunchTemplateSpecification -> Maybe Text

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_name</a> - The name of the launch
--   template.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version of the launch
--   template to use. If no version is specified, then the template's
--   default version is used.
--   
--   <a>$sel:id:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_id</a> - The ID of the launch template.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | The name of the launch template.
launchTemplateSpecification_name :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version of the launch template to use. If no version is specified,
--   then the template's default version is used.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The ID of the launch template.
launchTemplateSpecification_id :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | An object representing the enabled or disabled Kubernetes control
--   plane logs for your cluster.
--   
--   <i>See:</i> <a>newLogSetup</a> smart constructor.
data LogSetup
LogSetup' :: Maybe Bool -> Maybe [LogType] -> LogSetup

-- | If a log type is enabled, that log type exports its control plane logs
--   to CloudWatch Logs. If a log type isn't enabled, that log type doesn't
--   export its control plane logs. Each individual log type can be enabled
--   or disabled independently.
[$sel:enabled:LogSetup'] :: LogSetup -> Maybe Bool

-- | The available cluster control plane log types.
[$sel:types:LogSetup'] :: LogSetup -> Maybe [LogType]

-- | Create a value of <a>LogSetup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:LogSetup'</a>, <a>logSetup_enabled</a> - If a log type
--   is enabled, that log type exports its control plane logs to CloudWatch
--   Logs. If a log type isn't enabled, that log type doesn't export its
--   control plane logs. Each individual log type can be enabled or
--   disabled independently.
--   
--   <a>$sel:types:LogSetup'</a>, <a>logSetup_types</a> - The available
--   cluster control plane log types.
newLogSetup :: LogSetup

-- | If a log type is enabled, that log type exports its control plane logs
--   to CloudWatch Logs. If a log type isn't enabled, that log type doesn't
--   export its control plane logs. Each individual log type can be enabled
--   or disabled independently.
logSetup_enabled :: Lens' LogSetup (Maybe Bool)

-- | The available cluster control plane log types.
logSetup_types :: Lens' LogSetup (Maybe [LogType])

-- | An object representing the logging configuration for resources in your
--   cluster.
--   
--   <i>See:</i> <a>newLogging</a> smart constructor.
data Logging
Logging' :: Maybe [LogSetup] -> Logging

-- | The cluster control plane logging configuration for your cluster.
[$sel:clusterLogging:Logging'] :: Logging -> Maybe [LogSetup]

-- | Create a value of <a>Logging</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterLogging:Logging'</a>, <a>logging_clusterLogging</a> -
--   The cluster control plane logging configuration for your cluster.
newLogging :: Logging

-- | The cluster control plane logging configuration for your cluster.
logging_clusterLogging :: Lens' Logging (Maybe [LogSetup])

-- | An object representing an Amazon EKS managed node group.
--   
--   <i>See:</i> <a>newNodegroup</a> smart constructor.
data Nodegroup
Nodegroup' :: Maybe POSIX -> Maybe CapacityTypes -> Maybe NodegroupStatus -> Maybe [Text] -> Maybe POSIX -> Maybe [Taint] -> Maybe [Text] -> Maybe RemoteAccessConfig -> Maybe Int -> Maybe Text -> Maybe NodegroupResources -> Maybe NodegroupHealth -> Maybe Text -> Maybe NodegroupScalingConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe (HashMap Text Text) -> Maybe AMITypes -> Maybe Text -> Maybe NodegroupUpdateConfig -> Maybe (HashMap Text Text) -> Nodegroup

-- | The Unix epoch timestamp in seconds for when the managed node group
--   was last modified.
[$sel:modifiedAt:Nodegroup'] :: Nodegroup -> Maybe POSIX

-- | The capacity type of your managed node group.
[$sel:capacityType:Nodegroup'] :: Nodegroup -> Maybe CapacityTypes

-- | The current status of the managed node group.
[$sel:status:Nodegroup'] :: Nodegroup -> Maybe NodegroupStatus

-- | If the node group wasn't deployed with a launch template, then this is
--   the instance type that is associated with the node group. If the node
--   group was deployed with a launch template, then this is <tt>null</tt>.
[$sel:instanceTypes:Nodegroup'] :: Nodegroup -> Maybe [Text]

-- | The Unix epoch timestamp in seconds for when the managed node group
--   was created.
[$sel:createdAt:Nodegroup'] :: Nodegroup -> Maybe POSIX

-- | The Kubernetes taints to be applied to the nodes in the node group
--   when they are created. Effect is one of <tt>No_Schedule</tt>,
--   <tt>Prefer_No_Schedule</tt>, or <tt>No_Execute</tt>. Kubernetes taints
--   can be used together with tolerations to control how workloads are
--   scheduled to your nodes.
[$sel:taints:Nodegroup'] :: Nodegroup -> Maybe [Taint]

-- | The subnets that were specified for the Auto Scaling group that is
--   associated with your node group.
[$sel:subnets:Nodegroup'] :: Nodegroup -> Maybe [Text]

-- | If the node group wasn't deployed with a launch template, then this is
--   the remote access configuration that is associated with the node
--   group. If the node group was deployed with a launch template, then
--   this is <tt>null</tt>.
[$sel:remoteAccess:Nodegroup'] :: Nodegroup -> Maybe RemoteAccessConfig

-- | If the node group wasn't deployed with a launch template, then this is
--   the disk size in the node group configuration. If the node group was
--   deployed with a launch template, then this is <tt>null</tt>.
[$sel:diskSize:Nodegroup'] :: Nodegroup -> Maybe Int

-- | If the node group was deployed using a launch template with a custom
--   AMI, then this is the AMI ID that was specified in the launch
--   template. For node groups that weren't deployed using a launch
--   template, this is the version of the Amazon EKS optimized AMI that the
--   node group was deployed with.
[$sel:releaseVersion:Nodegroup'] :: Nodegroup -> Maybe Text

-- | The resources associated with the node group, such as Auto Scaling
--   groups and security groups for remote access.
[$sel:resources:Nodegroup'] :: Nodegroup -> Maybe NodegroupResources

-- | The health status of the node group. If there are issues with your
--   node group's health, they are listed here.
[$sel:health:Nodegroup'] :: Nodegroup -> Maybe NodegroupHealth

-- | The IAM role associated with your node group. The Amazon EKS node
--   <tt>kubelet</tt> daemon makes calls to Amazon Web Services APIs on
--   your behalf. Nodes receive permissions for these API calls through an
--   IAM instance profile and associated policies.
[$sel:nodeRole:Nodegroup'] :: Nodegroup -> Maybe Text

-- | The scaling configuration details for the Auto Scaling group that is
--   associated with your node group.
[$sel:scalingConfig:Nodegroup'] :: Nodegroup -> Maybe NodegroupScalingConfig

-- | The Kubernetes version of the managed node group.
[$sel:version:Nodegroup'] :: Nodegroup -> Maybe Text

-- | The Amazon Resource Name (ARN) associated with the managed node group.
[$sel:nodegroupArn:Nodegroup'] :: Nodegroup -> Maybe Text

-- | The name of the cluster that the managed node group resides in.
[$sel:clusterName:Nodegroup'] :: Nodegroup -> Maybe Text

-- | If a launch template was used to create the node group, then this is
--   the launch template that was used.
[$sel:launchTemplate:Nodegroup'] :: Nodegroup -> Maybe LaunchTemplateSpecification

-- | The Kubernetes labels applied to the nodes in the node group.
--   
--   Only labels that are applied with the Amazon EKS API are shown here.
--   There may be other Kubernetes labels applied to the nodes in this
--   group.
[$sel:labels:Nodegroup'] :: Nodegroup -> Maybe (HashMap Text Text)

-- | If the node group was deployed using a launch template with a custom
--   AMI, then this is <tt>CUSTOM</tt>. For node groups that weren't
--   deployed using a launch template, this is the AMI type that was
--   specified in the node group configuration.
[$sel:amiType:Nodegroup'] :: Nodegroup -> Maybe AMITypes

-- | The name associated with an Amazon EKS managed node group.
[$sel:nodegroupName:Nodegroup'] :: Nodegroup -> Maybe Text

-- | The node group update configuration.
[$sel:updateConfig:Nodegroup'] :: Nodegroup -> Maybe NodegroupUpdateConfig

-- | The metadata applied to the node group to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Node group tags do not propagate to any
--   other resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
[$sel:tags:Nodegroup'] :: Nodegroup -> Maybe (HashMap Text Text)

-- | Create a value of <a>Nodegroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modifiedAt:Nodegroup'</a>, <a>nodegroup_modifiedAt</a> - The
--   Unix epoch timestamp in seconds for when the managed node group was
--   last modified.
--   
--   <a>$sel:capacityType:Nodegroup'</a>, <a>nodegroup_capacityType</a> -
--   The capacity type of your managed node group.
--   
--   <a>$sel:status:Nodegroup'</a>, <a>nodegroup_status</a> - The current
--   status of the managed node group.
--   
--   <a>$sel:instanceTypes:Nodegroup'</a>, <a>nodegroup_instanceTypes</a> -
--   If the node group wasn't deployed with a launch template, then this is
--   the instance type that is associated with the node group. If the node
--   group was deployed with a launch template, then this is <tt>null</tt>.
--   
--   <a>$sel:createdAt:Nodegroup'</a>, <a>nodegroup_createdAt</a> - The
--   Unix epoch timestamp in seconds for when the managed node group was
--   created.
--   
--   <a>$sel:taints:Nodegroup'</a>, <a>nodegroup_taints</a> - The
--   Kubernetes taints to be applied to the nodes in the node group when
--   they are created. Effect is one of <tt>No_Schedule</tt>,
--   <tt>Prefer_No_Schedule</tt>, or <tt>No_Execute</tt>. Kubernetes taints
--   can be used together with tolerations to control how workloads are
--   scheduled to your nodes.
--   
--   <a>$sel:subnets:Nodegroup'</a>, <a>nodegroup_subnets</a> - The subnets
--   that were specified for the Auto Scaling group that is associated with
--   your node group.
--   
--   <a>$sel:remoteAccess:Nodegroup'</a>, <a>nodegroup_remoteAccess</a> -
--   If the node group wasn't deployed with a launch template, then this is
--   the remote access configuration that is associated with the node
--   group. If the node group was deployed with a launch template, then
--   this is <tt>null</tt>.
--   
--   <a>$sel:diskSize:Nodegroup'</a>, <a>nodegroup_diskSize</a> - If the
--   node group wasn't deployed with a launch template, then this is the
--   disk size in the node group configuration. If the node group was
--   deployed with a launch template, then this is <tt>null</tt>.
--   
--   <a>$sel:releaseVersion:Nodegroup'</a>, <a>nodegroup_releaseVersion</a>
--   - If the node group was deployed using a launch template with a custom
--   AMI, then this is the AMI ID that was specified in the launch
--   template. For node groups that weren't deployed using a launch
--   template, this is the version of the Amazon EKS optimized AMI that the
--   node group was deployed with.
--   
--   <a>$sel:resources:Nodegroup'</a>, <a>nodegroup_resources</a> - The
--   resources associated with the node group, such as Auto Scaling groups
--   and security groups for remote access.
--   
--   <a>$sel:health:Nodegroup'</a>, <a>nodegroup_health</a> - The health
--   status of the node group. If there are issues with your node group's
--   health, they are listed here.
--   
--   <a>$sel:nodeRole:Nodegroup'</a>, <a>nodegroup_nodeRole</a> - The IAM
--   role associated with your node group. The Amazon EKS node
--   <tt>kubelet</tt> daemon makes calls to Amazon Web Services APIs on
--   your behalf. Nodes receive permissions for these API calls through an
--   IAM instance profile and associated policies.
--   
--   <a>$sel:scalingConfig:Nodegroup'</a>, <a>nodegroup_scalingConfig</a> -
--   The scaling configuration details for the Auto Scaling group that is
--   associated with your node group.
--   
--   <a>$sel:version:Nodegroup'</a>, <a>nodegroup_version</a> - The
--   Kubernetes version of the managed node group.
--   
--   <a>$sel:nodegroupArn:Nodegroup'</a>, <a>nodegroup_nodegroupArn</a> -
--   The Amazon Resource Name (ARN) associated with the managed node group.
--   
--   <a>$sel:clusterName:Nodegroup'</a>, <a>nodegroup_clusterName</a> - The
--   name of the cluster that the managed node group resides in.
--   
--   <a>$sel:launchTemplate:Nodegroup'</a>, <a>nodegroup_launchTemplate</a>
--   - If a launch template was used to create the node group, then this is
--   the launch template that was used.
--   
--   <a>$sel:labels:Nodegroup'</a>, <a>nodegroup_labels</a> - The
--   Kubernetes labels applied to the nodes in the node group.
--   
--   Only labels that are applied with the Amazon EKS API are shown here.
--   There may be other Kubernetes labels applied to the nodes in this
--   group.
--   
--   <a>$sel:amiType:Nodegroup'</a>, <a>nodegroup_amiType</a> - If the node
--   group was deployed using a launch template with a custom AMI, then
--   this is <tt>CUSTOM</tt>. For node groups that weren't deployed using a
--   launch template, this is the AMI type that was specified in the node
--   group configuration.
--   
--   <a>$sel:nodegroupName:Nodegroup'</a>, <a>nodegroup_nodegroupName</a> -
--   The name associated with an Amazon EKS managed node group.
--   
--   <a>$sel:updateConfig:Nodegroup'</a>, <a>nodegroup_updateConfig</a> -
--   The node group update configuration.
--   
--   <a>$sel:tags:Nodegroup'</a>, <a>nodegroup_tags</a> - The metadata
--   applied to the node group to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define. Node group tags do not propagate to any other
--   resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
newNodegroup :: Nodegroup

-- | The Unix epoch timestamp in seconds for when the managed node group
--   was last modified.
nodegroup_modifiedAt :: Lens' Nodegroup (Maybe UTCTime)

-- | The capacity type of your managed node group.
nodegroup_capacityType :: Lens' Nodegroup (Maybe CapacityTypes)

-- | The current status of the managed node group.
nodegroup_status :: Lens' Nodegroup (Maybe NodegroupStatus)

-- | If the node group wasn't deployed with a launch template, then this is
--   the instance type that is associated with the node group. If the node
--   group was deployed with a launch template, then this is <tt>null</tt>.
nodegroup_instanceTypes :: Lens' Nodegroup (Maybe [Text])

-- | The Unix epoch timestamp in seconds for when the managed node group
--   was created.
nodegroup_createdAt :: Lens' Nodegroup (Maybe UTCTime)

-- | The Kubernetes taints to be applied to the nodes in the node group
--   when they are created. Effect is one of <tt>No_Schedule</tt>,
--   <tt>Prefer_No_Schedule</tt>, or <tt>No_Execute</tt>. Kubernetes taints
--   can be used together with tolerations to control how workloads are
--   scheduled to your nodes.
nodegroup_taints :: Lens' Nodegroup (Maybe [Taint])

-- | The subnets that were specified for the Auto Scaling group that is
--   associated with your node group.
nodegroup_subnets :: Lens' Nodegroup (Maybe [Text])

-- | If the node group wasn't deployed with a launch template, then this is
--   the remote access configuration that is associated with the node
--   group. If the node group was deployed with a launch template, then
--   this is <tt>null</tt>.
nodegroup_remoteAccess :: Lens' Nodegroup (Maybe RemoteAccessConfig)

-- | If the node group wasn't deployed with a launch template, then this is
--   the disk size in the node group configuration. If the node group was
--   deployed with a launch template, then this is <tt>null</tt>.
nodegroup_diskSize :: Lens' Nodegroup (Maybe Int)

-- | If the node group was deployed using a launch template with a custom
--   AMI, then this is the AMI ID that was specified in the launch
--   template. For node groups that weren't deployed using a launch
--   template, this is the version of the Amazon EKS optimized AMI that the
--   node group was deployed with.
nodegroup_releaseVersion :: Lens' Nodegroup (Maybe Text)

-- | The resources associated with the node group, such as Auto Scaling
--   groups and security groups for remote access.
nodegroup_resources :: Lens' Nodegroup (Maybe NodegroupResources)

-- | The health status of the node group. If there are issues with your
--   node group's health, they are listed here.
nodegroup_health :: Lens' Nodegroup (Maybe NodegroupHealth)

-- | The IAM role associated with your node group. The Amazon EKS node
--   <tt>kubelet</tt> daemon makes calls to Amazon Web Services APIs on
--   your behalf. Nodes receive permissions for these API calls through an
--   IAM instance profile and associated policies.
nodegroup_nodeRole :: Lens' Nodegroup (Maybe Text)

-- | The scaling configuration details for the Auto Scaling group that is
--   associated with your node group.
nodegroup_scalingConfig :: Lens' Nodegroup (Maybe NodegroupScalingConfig)

-- | The Kubernetes version of the managed node group.
nodegroup_version :: Lens' Nodegroup (Maybe Text)

-- | The Amazon Resource Name (ARN) associated with the managed node group.
nodegroup_nodegroupArn :: Lens' Nodegroup (Maybe Text)

-- | The name of the cluster that the managed node group resides in.
nodegroup_clusterName :: Lens' Nodegroup (Maybe Text)

-- | If a launch template was used to create the node group, then this is
--   the launch template that was used.
nodegroup_launchTemplate :: Lens' Nodegroup (Maybe LaunchTemplateSpecification)

-- | The Kubernetes labels applied to the nodes in the node group.
--   
--   Only labels that are applied with the Amazon EKS API are shown here.
--   There may be other Kubernetes labels applied to the nodes in this
--   group.
nodegroup_labels :: Lens' Nodegroup (Maybe (HashMap Text Text))

-- | If the node group was deployed using a launch template with a custom
--   AMI, then this is <tt>CUSTOM</tt>. For node groups that weren't
--   deployed using a launch template, this is the AMI type that was
--   specified in the node group configuration.
nodegroup_amiType :: Lens' Nodegroup (Maybe AMITypes)

-- | The name associated with an Amazon EKS managed node group.
nodegroup_nodegroupName :: Lens' Nodegroup (Maybe Text)

-- | The node group update configuration.
nodegroup_updateConfig :: Lens' Nodegroup (Maybe NodegroupUpdateConfig)

-- | The metadata applied to the node group to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Node group tags do not propagate to any
--   other resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
nodegroup_tags :: Lens' Nodegroup (Maybe (HashMap Text Text))

-- | An object representing the health status of the node group.
--   
--   <i>See:</i> <a>newNodegroupHealth</a> smart constructor.
data NodegroupHealth
NodegroupHealth' :: Maybe [Issue] -> NodegroupHealth

-- | Any issues that are associated with the node group.
[$sel:issues:NodegroupHealth'] :: NodegroupHealth -> Maybe [Issue]

-- | Create a value of <a>NodegroupHealth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:issues:NodegroupHealth'</a>, <a>nodegroupHealth_issues</a> -
--   Any issues that are associated with the node group.
newNodegroupHealth :: NodegroupHealth

-- | Any issues that are associated with the node group.
nodegroupHealth_issues :: Lens' NodegroupHealth (Maybe [Issue])

-- | An object representing the resources associated with the node group,
--   such as Auto Scaling groups and security groups for remote access.
--   
--   <i>See:</i> <a>newNodegroupResources</a> smart constructor.
data NodegroupResources
NodegroupResources' :: Maybe Text -> Maybe [AutoScalingGroup] -> NodegroupResources

-- | The remote access security group associated with the node group. This
--   security group controls SSH access to the nodes.
[$sel:remoteAccessSecurityGroup:NodegroupResources'] :: NodegroupResources -> Maybe Text

-- | The Auto Scaling groups associated with the node group.
[$sel:autoScalingGroups:NodegroupResources'] :: NodegroupResources -> Maybe [AutoScalingGroup]

-- | Create a value of <a>NodegroupResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remoteAccessSecurityGroup:NodegroupResources'</a>,
--   <a>nodegroupResources_remoteAccessSecurityGroup</a> - The remote
--   access security group associated with the node group. This security
--   group controls SSH access to the nodes.
--   
--   <a>$sel:autoScalingGroups:NodegroupResources'</a>,
--   <a>nodegroupResources_autoScalingGroups</a> - The Auto Scaling groups
--   associated with the node group.
newNodegroupResources :: NodegroupResources

-- | The remote access security group associated with the node group. This
--   security group controls SSH access to the nodes.
nodegroupResources_remoteAccessSecurityGroup :: Lens' NodegroupResources (Maybe Text)

-- | The Auto Scaling groups associated with the node group.
nodegroupResources_autoScalingGroups :: Lens' NodegroupResources (Maybe [AutoScalingGroup])

-- | An object representing the scaling configuration details for the Auto
--   Scaling group that is associated with your node group. When creating a
--   node group, you must specify all or none of the properties. When
--   updating a node group, you can specify any or none of the properties.
--   
--   <i>See:</i> <a>newNodegroupScalingConfig</a> smart constructor.
data NodegroupScalingConfig
NodegroupScalingConfig' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> NodegroupScalingConfig

-- | The current number of nodes that the managed node group should
--   maintain.
[$sel:desiredSize:NodegroupScalingConfig'] :: NodegroupScalingConfig -> Maybe Natural

-- | The maximum number of nodes that the managed node group can scale out
--   to. For information about the maximum number that you can specify, see
--   <a>Amazon EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.
[$sel:maxSize:NodegroupScalingConfig'] :: NodegroupScalingConfig -> Maybe Natural

-- | The minimum number of nodes that the managed node group can scale in
--   to.
[$sel:minSize:NodegroupScalingConfig'] :: NodegroupScalingConfig -> Maybe Natural

-- | Create a value of <a>NodegroupScalingConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:desiredSize:NodegroupScalingConfig'</a>,
--   <a>nodegroupScalingConfig_desiredSize</a> - The current number of
--   nodes that the managed node group should maintain.
--   
--   <a>$sel:maxSize:NodegroupScalingConfig'</a>,
--   <a>nodegroupScalingConfig_maxSize</a> - The maximum number of nodes
--   that the managed node group can scale out to. For information about
--   the maximum number that you can specify, see <a>Amazon EKS service
--   quotas</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:minSize:NodegroupScalingConfig'</a>,
--   <a>nodegroupScalingConfig_minSize</a> - The minimum number of nodes
--   that the managed node group can scale in to.
newNodegroupScalingConfig :: NodegroupScalingConfig

-- | The current number of nodes that the managed node group should
--   maintain.
nodegroupScalingConfig_desiredSize :: Lens' NodegroupScalingConfig (Maybe Natural)

-- | The maximum number of nodes that the managed node group can scale out
--   to. For information about the maximum number that you can specify, see
--   <a>Amazon EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.
nodegroupScalingConfig_maxSize :: Lens' NodegroupScalingConfig (Maybe Natural)

-- | The minimum number of nodes that the managed node group can scale in
--   to.
nodegroupScalingConfig_minSize :: Lens' NodegroupScalingConfig (Maybe Natural)

-- | The node group update configuration.
--   
--   <i>See:</i> <a>newNodegroupUpdateConfig</a> smart constructor.
data NodegroupUpdateConfig
NodegroupUpdateConfig' :: Maybe Natural -> Maybe Natural -> NodegroupUpdateConfig

-- | The maximum number of nodes unavailable at once during a version
--   update. Nodes will be updated in parallel. This value or
--   <tt>maxUnavailablePercentage</tt> is required to have a value.The
--   maximum number is 100.
[$sel:maxUnavailable:NodegroupUpdateConfig'] :: NodegroupUpdateConfig -> Maybe Natural

-- | The maximum percentage of nodes unavailable during a version update.
--   This percentage of nodes will be updated in parallel, up to 100 nodes
--   at once. This value or <tt>maxUnavailable</tt> is required to have a
--   value.
[$sel:maxUnavailablePercentage:NodegroupUpdateConfig'] :: NodegroupUpdateConfig -> Maybe Natural

-- | Create a value of <a>NodegroupUpdateConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxUnavailable:NodegroupUpdateConfig'</a>,
--   <a>nodegroupUpdateConfig_maxUnavailable</a> - The maximum number of
--   nodes unavailable at once during a version update. Nodes will be
--   updated in parallel. This value or <tt>maxUnavailablePercentage</tt>
--   is required to have a value.The maximum number is 100.
--   
--   <a>$sel:maxUnavailablePercentage:NodegroupUpdateConfig'</a>,
--   <a>nodegroupUpdateConfig_maxUnavailablePercentage</a> - The maximum
--   percentage of nodes unavailable during a version update. This
--   percentage of nodes will be updated in parallel, up to 100 nodes at
--   once. This value or <tt>maxUnavailable</tt> is required to have a
--   value.
newNodegroupUpdateConfig :: NodegroupUpdateConfig

-- | The maximum number of nodes unavailable at once during a version
--   update. Nodes will be updated in parallel. This value or
--   <tt>maxUnavailablePercentage</tt> is required to have a value.The
--   maximum number is 100.
nodegroupUpdateConfig_maxUnavailable :: Lens' NodegroupUpdateConfig (Maybe Natural)

-- | The maximum percentage of nodes unavailable during a version update.
--   This percentage of nodes will be updated in parallel, up to 100 nodes
--   at once. This value or <tt>maxUnavailable</tt> is required to have a
--   value.
nodegroupUpdateConfig_maxUnavailablePercentage :: Lens' NodegroupUpdateConfig (Maybe Natural)

-- | An object representing the <a>OpenID Connect</a> (OIDC) identity
--   provider information for the cluster.
--   
--   <i>See:</i> <a>newOIDC</a> smart constructor.
data OIDC
OIDC' :: Maybe Text -> OIDC

-- | The issuer URL for the OIDC identity provider.
[$sel:issuer:OIDC'] :: OIDC -> Maybe Text

-- | Create a value of <a>OIDC</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:issuer:OIDC'</a>, <a>oidc_issuer</a> - The issuer URL for the
--   OIDC identity provider.
newOIDC :: OIDC

-- | The issuer URL for the OIDC identity provider.
oidc_issuer :: Lens' OIDC (Maybe Text)

-- | An object that represents the configuration for an OpenID Connect
--   (OIDC) identity provider.
--   
--   <i>See:</i> <a>newOidcIdentityProviderConfig</a> smart constructor.
data OidcIdentityProviderConfig
OidcIdentityProviderConfig' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConfigStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> OidcIdentityProviderConfig

-- | The prefix that is prepended to group claims to prevent clashes with
--   existing names (such as <tt>system:</tt> groups). For example, the
--   value<tt> oidc:</tt> creates group names like
--   <tt>oidc:engineering</tt> and <tt>oidc:infra</tt>. The prefix can't
--   contain <tt>system:</tt>
[$sel:groupsPrefix:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The JSON Web token (JWT) claim that is used as the username.
[$sel:usernameClaim:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | This is also known as <i>audience</i>. The ID of the client
--   application that makes authentication requests to the OIDC identity
--   provider.
[$sel:clientId:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The status of the OIDC identity provider.
[$sel:status:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe ConfigStatus

-- | The name of the configuration.
[$sel:identityProviderConfigName:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The ARN of the configuration.
[$sel:identityProviderConfigArn:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The URL of the OIDC identity provider that allows the API server to
--   discover public signing keys for verifying tokens.
[$sel:issuerUrl:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The key-value pairs that describe required claims in the identity
--   token. If set, each claim is verified to be present in the token with
--   a matching value.
[$sel:requiredClaims:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe (HashMap Text Text)

-- | The prefix that is prepended to username claims to prevent clashes
--   with existing names. The prefix can't contain <tt>system:</tt>
[$sel:usernamePrefix:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The JSON web token (JWT) claim that the provider uses to return your
--   groups.
[$sel:groupsClaim:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The cluster that the configuration is associated to.
[$sel:clusterName:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe Text

-- | The metadata to apply to the provider configuration to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you defined.
[$sel:tags:OidcIdentityProviderConfig'] :: OidcIdentityProviderConfig -> Maybe (HashMap Text Text)

-- | Create a value of <a>OidcIdentityProviderConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupsPrefix:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_groupsPrefix</a> - The prefix that is
--   prepended to group claims to prevent clashes with existing names (such
--   as <tt>system:</tt> groups). For example, the value<tt> oidc:</tt>
--   creates group names like <tt>oidc:engineering</tt> and
--   <tt>oidc:infra</tt>. The prefix can't contain <tt>system:</tt>
--   
--   <a>$sel:usernameClaim:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_usernameClaim</a> - The JSON Web token
--   (JWT) claim that is used as the username.
--   
--   <a>$sel:clientId:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_clientId</a> - This is also known as
--   <i>audience</i>. The ID of the client application that makes
--   authentication requests to the OIDC identity provider.
--   
--   <a>$sel:status:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_status</a> - The status of the OIDC
--   identity provider.
--   
--   <a>$sel:identityProviderConfigName:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_identityProviderConfigName</a> - The
--   name of the configuration.
--   
--   <a>$sel:identityProviderConfigArn:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_identityProviderConfigArn</a> - The ARN
--   of the configuration.
--   
--   <a>$sel:issuerUrl:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_issuerUrl</a> - The URL of the OIDC
--   identity provider that allows the API server to discover public
--   signing keys for verifying tokens.
--   
--   <a>$sel:requiredClaims:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_requiredClaims</a> - The key-value pairs
--   that describe required claims in the identity token. If set, each
--   claim is verified to be present in the token with a matching value.
--   
--   <a>$sel:usernamePrefix:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_usernamePrefix</a> - The prefix that is
--   prepended to username claims to prevent clashes with existing names.
--   The prefix can't contain <tt>system:</tt>
--   
--   <a>$sel:groupsClaim:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_groupsClaim</a> - The JSON web token
--   (JWT) claim that the provider uses to return your groups.
--   
--   <a>$sel:clusterName:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_clusterName</a> - The cluster that the
--   configuration is associated to.
--   
--   <a>$sel:tags:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_tags</a> - The metadata to apply to the
--   provider configuration to assist with categorization and organization.
--   Each tag consists of a key and an optional value, both of which you
--   defined.
newOidcIdentityProviderConfig :: OidcIdentityProviderConfig

-- | The prefix that is prepended to group claims to prevent clashes with
--   existing names (such as <tt>system:</tt> groups). For example, the
--   value<tt> oidc:</tt> creates group names like
--   <tt>oidc:engineering</tt> and <tt>oidc:infra</tt>. The prefix can't
--   contain <tt>system:</tt>
oidcIdentityProviderConfig_groupsPrefix :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The JSON Web token (JWT) claim that is used as the username.
oidcIdentityProviderConfig_usernameClaim :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | This is also known as <i>audience</i>. The ID of the client
--   application that makes authentication requests to the OIDC identity
--   provider.
oidcIdentityProviderConfig_clientId :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The status of the OIDC identity provider.
oidcIdentityProviderConfig_status :: Lens' OidcIdentityProviderConfig (Maybe ConfigStatus)

-- | The name of the configuration.
oidcIdentityProviderConfig_identityProviderConfigName :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The ARN of the configuration.
oidcIdentityProviderConfig_identityProviderConfigArn :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The URL of the OIDC identity provider that allows the API server to
--   discover public signing keys for verifying tokens.
oidcIdentityProviderConfig_issuerUrl :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The key-value pairs that describe required claims in the identity
--   token. If set, each claim is verified to be present in the token with
--   a matching value.
oidcIdentityProviderConfig_requiredClaims :: Lens' OidcIdentityProviderConfig (Maybe (HashMap Text Text))

-- | The prefix that is prepended to username claims to prevent clashes
--   with existing names. The prefix can't contain <tt>system:</tt>
oidcIdentityProviderConfig_usernamePrefix :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The JSON web token (JWT) claim that the provider uses to return your
--   groups.
oidcIdentityProviderConfig_groupsClaim :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The cluster that the configuration is associated to.
oidcIdentityProviderConfig_clusterName :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The metadata to apply to the provider configuration to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you defined.
oidcIdentityProviderConfig_tags :: Lens' OidcIdentityProviderConfig (Maybe (HashMap Text Text))

-- | An object representing an OpenID Connect (OIDC) configuration. Before
--   associating an OIDC identity provider to your cluster, review the
--   considerations in <a>Authenticating users for your cluster from an
--   OpenID Connect identity provider</a> in the <i>Amazon EKS User
--   Guide</i>.
--   
--   <i>See:</i> <a>newOidcIdentityProviderConfigRequest</a> smart
--   constructor.
data OidcIdentityProviderConfigRequest
OidcIdentityProviderConfigRequest' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> OidcIdentityProviderConfigRequest

-- | The prefix that is prepended to group claims to prevent clashes with
--   existing names (such as <tt>system:</tt> groups). For example, the
--   value<tt> oidc:</tt> will create group names like
--   <tt>oidc:engineering</tt> and <tt>oidc:infra</tt>.
[$sel:groupsPrefix:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Maybe Text

-- | The JSON Web Token (JWT) claim to use as the username. The default is
--   <tt>sub</tt>, which is expected to be a unique identifier of the end
--   user. You can choose other claims, such as <tt>email</tt> or
--   <tt>name</tt>, depending on the OpenID identity provider. Claims other
--   than <tt>email</tt> are prefixed with the issuer URL to prevent naming
--   clashes with other plug-ins.
[$sel:usernameClaim:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Maybe Text

-- | The key value pairs that describe required claims in the identity
--   token. If set, each claim is verified to be present in the token with
--   a matching value. For the maximum number of claims that you can
--   require, see <a>Amazon EKS service quotas</a> in the <i>Amazon EKS
--   User Guide</i>.
[$sel:requiredClaims:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Maybe (HashMap Text Text)

-- | The prefix that is prepended to username claims to prevent clashes
--   with existing names. If you do not provide this field, and
--   <tt>username</tt> is a value other than <tt>email</tt>, the prefix
--   defaults to <tt>issuerurl#</tt>. You can use the value <tt>-</tt> to
--   disable all prefixing.
[$sel:usernamePrefix:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Maybe Text

-- | The JWT claim that the provider uses to return your groups.
[$sel:groupsClaim:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Maybe Text

-- | The name of the OIDC provider configuration.
[$sel:identityProviderConfigName:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Text

-- | The URL of the OpenID identity provider that allows the API server to
--   discover public signing keys for verifying tokens. The URL must begin
--   with <tt>https://</tt> and should correspond to the <tt>iss</tt> claim
--   in the provider's OIDC ID tokens. Per the OIDC standard, path
--   components are allowed but query parameters are not. Typically the URL
--   consists of only a hostname, like <tt>https://server.example.org</tt>
--   or <tt>https://example.com</tt>. This URL should point to the level
--   below <tt>.well-known/openid-configuration</tt> and must be publicly
--   accessible over the internet.
[$sel:issuerUrl:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Text

-- | This is also known as <i>audience</i>. The ID for the client
--   application that makes authentication requests to the OpenID identity
--   provider.
[$sel:clientId:OidcIdentityProviderConfigRequest'] :: OidcIdentityProviderConfigRequest -> Text

-- | Create a value of <a>OidcIdentityProviderConfigRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupsPrefix:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_groupsPrefix</a> - The prefix
--   that is prepended to group claims to prevent clashes with existing
--   names (such as <tt>system:</tt> groups). For example, the value<tt>
--   oidc:</tt> will create group names like <tt>oidc:engineering</tt> and
--   <tt>oidc:infra</tt>.
--   
--   <a>$sel:usernameClaim:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_usernameClaim</a> - The JSON Web
--   Token (JWT) claim to use as the username. The default is <tt>sub</tt>,
--   which is expected to be a unique identifier of the end user. You can
--   choose other claims, such as <tt>email</tt> or <tt>name</tt>,
--   depending on the OpenID identity provider. Claims other than
--   <tt>email</tt> are prefixed with the issuer URL to prevent naming
--   clashes with other plug-ins.
--   
--   <a>$sel:requiredClaims:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_requiredClaims</a> - The key
--   value pairs that describe required claims in the identity token. If
--   set, each claim is verified to be present in the token with a matching
--   value. For the maximum number of claims that you can require, see
--   <a>Amazon EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:usernamePrefix:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_usernamePrefix</a> - The prefix
--   that is prepended to username claims to prevent clashes with existing
--   names. If you do not provide this field, and <tt>username</tt> is a
--   value other than <tt>email</tt>, the prefix defaults to
--   <tt>issuerurl#</tt>. You can use the value <tt>-</tt> to disable all
--   prefixing.
--   
--   <a>$sel:groupsClaim:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_groupsClaim</a> - The JWT claim
--   that the provider uses to return your groups.
--   
--   
--   <a>$sel:identityProviderConfigName:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_identityProviderConfigName</a> -
--   The name of the OIDC provider configuration.
--   
--   <a>$sel:issuerUrl:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_issuerUrl</a> - The URL of the
--   OpenID identity provider that allows the API server to discover public
--   signing keys for verifying tokens. The URL must begin with
--   <tt>https://</tt> and should correspond to the <tt>iss</tt> claim in
--   the provider's OIDC ID tokens. Per the OIDC standard, path components
--   are allowed but query parameters are not. Typically the URL consists
--   of only a hostname, like <tt>https://server.example.org</tt> or
--   <tt>https://example.com</tt>. This URL should point to the level below
--   <tt>.well-known/openid-configuration</tt> and must be publicly
--   accessible over the internet.
--   
--   <a>$sel:clientId:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_clientId</a> - This is also known
--   as <i>audience</i>. The ID for the client application that makes
--   authentication requests to the OpenID identity provider.
newOidcIdentityProviderConfigRequest :: Text -> Text -> Text -> OidcIdentityProviderConfigRequest

-- | The prefix that is prepended to group claims to prevent clashes with
--   existing names (such as <tt>system:</tt> groups). For example, the
--   value<tt> oidc:</tt> will create group names like
--   <tt>oidc:engineering</tt> and <tt>oidc:infra</tt>.
oidcIdentityProviderConfigRequest_groupsPrefix :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The JSON Web Token (JWT) claim to use as the username. The default is
--   <tt>sub</tt>, which is expected to be a unique identifier of the end
--   user. You can choose other claims, such as <tt>email</tt> or
--   <tt>name</tt>, depending on the OpenID identity provider. Claims other
--   than <tt>email</tt> are prefixed with the issuer URL to prevent naming
--   clashes with other plug-ins.
oidcIdentityProviderConfigRequest_usernameClaim :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The key value pairs that describe required claims in the identity
--   token. If set, each claim is verified to be present in the token with
--   a matching value. For the maximum number of claims that you can
--   require, see <a>Amazon EKS service quotas</a> in the <i>Amazon EKS
--   User Guide</i>.
oidcIdentityProviderConfigRequest_requiredClaims :: Lens' OidcIdentityProviderConfigRequest (Maybe (HashMap Text Text))

-- | The prefix that is prepended to username claims to prevent clashes
--   with existing names. If you do not provide this field, and
--   <tt>username</tt> is a value other than <tt>email</tt>, the prefix
--   defaults to <tt>issuerurl#</tt>. You can use the value <tt>-</tt> to
--   disable all prefixing.
oidcIdentityProviderConfigRequest_usernamePrefix :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The JWT claim that the provider uses to return your groups.
oidcIdentityProviderConfigRequest_groupsClaim :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The name of the OIDC provider configuration.
oidcIdentityProviderConfigRequest_identityProviderConfigName :: Lens' OidcIdentityProviderConfigRequest Text

-- | The URL of the OpenID identity provider that allows the API server to
--   discover public signing keys for verifying tokens. The URL must begin
--   with <tt>https://</tt> and should correspond to the <tt>iss</tt> claim
--   in the provider's OIDC ID tokens. Per the OIDC standard, path
--   components are allowed but query parameters are not. Typically the URL
--   consists of only a hostname, like <tt>https://server.example.org</tt>
--   or <tt>https://example.com</tt>. This URL should point to the level
--   below <tt>.well-known/openid-configuration</tt> and must be publicly
--   accessible over the internet.
oidcIdentityProviderConfigRequest_issuerUrl :: Lens' OidcIdentityProviderConfigRequest Text

-- | This is also known as <i>audience</i>. The ID for the client
--   application that makes authentication requests to the OpenID identity
--   provider.
oidcIdentityProviderConfigRequest_clientId :: Lens' OidcIdentityProviderConfigRequest Text

-- | Identifies the Key Management Service (KMS) key used to encrypt the
--   secrets.
--   
--   <i>See:</i> <a>newProvider</a> smart constructor.
data Provider
Provider' :: Maybe Text -> Provider

-- | Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must
--   be symmetric, created in the same region as the cluster, and if the
--   KMS key was created in a different account, the user must have access
--   to the KMS key. For more information, see <a>Allowing Users in Other
--   Accounts to Use a KMS key</a> in the <i>Key Management Service
--   Developer Guide</i>.
[$sel:keyArn:Provider'] :: Provider -> Maybe Text

-- | Create a value of <a>Provider</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyArn:Provider'</a>, <a>provider_keyArn</a> - Amazon Resource
--   Name (ARN) or alias of the KMS key. The KMS key must be symmetric,
--   created in the same region as the cluster, and if the KMS key was
--   created in a different account, the user must have access to the KMS
--   key. For more information, see <a>Allowing Users in Other Accounts to
--   Use a KMS key</a> in the <i>Key Management Service Developer
--   Guide</i>.
newProvider :: Provider

-- | Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must
--   be symmetric, created in the same region as the cluster, and if the
--   KMS key was created in a different account, the user must have access
--   to the KMS key. For more information, see <a>Allowing Users in Other
--   Accounts to Use a KMS key</a> in the <i>Key Management Service
--   Developer Guide</i>.
provider_keyArn :: Lens' Provider (Maybe Text)

-- | An object representing the remote access configuration for the managed
--   node group.
--   
--   <i>See:</i> <a>newRemoteAccessConfig</a> smart constructor.
data RemoteAccessConfig
RemoteAccessConfig' :: Maybe [Text] -> Maybe Text -> RemoteAccessConfig

-- | The security groups that are allowed SSH access (port 22) to the
--   nodes. If you specify an Amazon EC2 SSH key but do not specify a
--   source security group when you create a managed node group, then port
--   22 on the nodes is opened to the internet (0.0.0.0/0). For more
--   information, see <a>Security Groups for Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.
[$sel:sourceSecurityGroups:RemoteAccessConfig'] :: RemoteAccessConfig -> Maybe [Text]

-- | The Amazon EC2 SSH key that provides access for SSH communication with
--   the nodes in the managed node group. For more information, see
--   <a>Amazon EC2 key pairs and Linux instances</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide for Linux Instances</i>.
[$sel:ec2SshKey:RemoteAccessConfig'] :: RemoteAccessConfig -> Maybe Text

-- | Create a value of <a>RemoteAccessConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceSecurityGroups:RemoteAccessConfig'</a>,
--   <a>remoteAccessConfig_sourceSecurityGroups</a> - The security groups
--   that are allowed SSH access (port 22) to the nodes. If you specify an
--   Amazon EC2 SSH key but do not specify a source security group when you
--   create a managed node group, then port 22 on the nodes is opened to
--   the internet (0.0.0.0/0). For more information, see <a>Security Groups
--   for Your VPC</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
--   
--   <a>$sel:ec2SshKey:RemoteAccessConfig'</a>,
--   <a>remoteAccessConfig_ec2SshKey</a> - The Amazon EC2 SSH key that
--   provides access for SSH communication with the nodes in the managed
--   node group. For more information, see <a>Amazon EC2 key pairs and
--   Linux instances</a> in the <i>Amazon Elastic Compute Cloud User Guide
--   for Linux Instances</i>.
newRemoteAccessConfig :: RemoteAccessConfig

-- | The security groups that are allowed SSH access (port 22) to the
--   nodes. If you specify an Amazon EC2 SSH key but do not specify a
--   source security group when you create a managed node group, then port
--   22 on the nodes is opened to the internet (0.0.0.0/0). For more
--   information, see <a>Security Groups for Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.
remoteAccessConfig_sourceSecurityGroups :: Lens' RemoteAccessConfig (Maybe [Text])

-- | The Amazon EC2 SSH key that provides access for SSH communication with
--   the nodes in the managed node group. For more information, see
--   <a>Amazon EC2 key pairs and Linux instances</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide for Linux Instances</i>.
remoteAccessConfig_ec2SshKey :: Lens' RemoteAccessConfig (Maybe Text)

-- | A property that allows a node to repel a set of pods.
--   
--   <i>See:</i> <a>newTaint</a> smart constructor.
data Taint
Taint' :: Maybe TaintEffect -> Maybe Text -> Maybe Text -> Taint

-- | The effect of the taint.
[$sel:effect:Taint'] :: Taint -> Maybe TaintEffect

-- | The value of the taint.
[$sel:value:Taint'] :: Taint -> Maybe Text

-- | The key of the taint.
[$sel:key:Taint'] :: Taint -> Maybe Text

-- | Create a value of <a>Taint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:effect:Taint'</a>, <a>taint_effect</a> - The effect of the
--   taint.
--   
--   <a>$sel:value:Taint'</a>, <a>taint_value</a> - The value of the taint.
--   
--   <a>$sel:key:Taint'</a>, <a>taint_key</a> - The key of the taint.
newTaint :: Taint

-- | The effect of the taint.
taint_effect :: Lens' Taint (Maybe TaintEffect)

-- | The value of the taint.
taint_value :: Lens' Taint (Maybe Text)

-- | The key of the taint.
taint_key :: Lens' Taint (Maybe Text)

-- | An object representing an asynchronous update.
--   
--   <i>See:</i> <a>newUpdate</a> smart constructor.
data Update
Update' :: Maybe UpdateStatus -> Maybe POSIX -> Maybe [UpdateParam] -> Maybe Text -> Maybe UpdateType -> Maybe [ErrorDetail] -> Update

-- | The current status of the update.
[$sel:status:Update'] :: Update -> Maybe UpdateStatus

-- | The Unix epoch timestamp in seconds for when the update was created.
[$sel:createdAt:Update'] :: Update -> Maybe POSIX

-- | A key-value map that contains the parameters associated with the
--   update.
[$sel:params:Update'] :: Update -> Maybe [UpdateParam]

-- | A UUID that is used to track the update.
[$sel:id:Update'] :: Update -> Maybe Text

-- | The type of the update.
[$sel:type':Update'] :: Update -> Maybe UpdateType

-- | Any errors associated with a <tt>Failed</tt> update.
[$sel:errors:Update'] :: Update -> Maybe [ErrorDetail]

-- | Create a value of <a>Update</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Update'</a>, <a>update_status</a> - The current status
--   of the update.
--   
--   <a>$sel:createdAt:Update'</a>, <a>update_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the update was created.
--   
--   <a>$sel:params:Update'</a>, <a>update_params</a> - A key-value map
--   that contains the parameters associated with the update.
--   
--   <a>$sel:id:Update'</a>, <a>update_id</a> - A UUID that is used to
--   track the update.
--   
--   <a>$sel:type':Update'</a>, <a>update_type</a> - The type of the
--   update.
--   
--   <a>$sel:errors:Update'</a>, <a>update_errors</a> - Any errors
--   associated with a <tt>Failed</tt> update.
newUpdate :: Update

-- | The current status of the update.
update_status :: Lens' Update (Maybe UpdateStatus)

-- | The Unix epoch timestamp in seconds for when the update was created.
update_createdAt :: Lens' Update (Maybe UTCTime)

-- | A key-value map that contains the parameters associated with the
--   update.
update_params :: Lens' Update (Maybe [UpdateParam])

-- | A UUID that is used to track the update.
update_id :: Lens' Update (Maybe Text)

-- | The type of the update.
update_type :: Lens' Update (Maybe UpdateType)

-- | Any errors associated with a <tt>Failed</tt> update.
update_errors :: Lens' Update (Maybe [ErrorDetail])

-- | An object representing a Kubernetes label change for a managed node
--   group.
--   
--   <i>See:</i> <a>newUpdateLabelsPayload</a> smart constructor.
data UpdateLabelsPayload
UpdateLabelsPayload' :: Maybe [Text] -> Maybe (HashMap Text Text) -> UpdateLabelsPayload

-- | Kubernetes labels to be removed.
[$sel:removeLabels:UpdateLabelsPayload'] :: UpdateLabelsPayload -> Maybe [Text]

-- | Kubernetes labels to be added or updated.
[$sel:addOrUpdateLabels:UpdateLabelsPayload'] :: UpdateLabelsPayload -> Maybe (HashMap Text Text)

-- | Create a value of <a>UpdateLabelsPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:removeLabels:UpdateLabelsPayload'</a>,
--   <a>updateLabelsPayload_removeLabels</a> - Kubernetes labels to be
--   removed.
--   
--   <a>$sel:addOrUpdateLabels:UpdateLabelsPayload'</a>,
--   <a>updateLabelsPayload_addOrUpdateLabels</a> - Kubernetes labels to be
--   added or updated.
newUpdateLabelsPayload :: UpdateLabelsPayload

-- | Kubernetes labels to be removed.
updateLabelsPayload_removeLabels :: Lens' UpdateLabelsPayload (Maybe [Text])

-- | Kubernetes labels to be added or updated.
updateLabelsPayload_addOrUpdateLabels :: Lens' UpdateLabelsPayload (Maybe (HashMap Text Text))

-- | An object representing the details of an update request.
--   
--   <i>See:</i> <a>newUpdateParam</a> smart constructor.
data UpdateParam
UpdateParam' :: Maybe Text -> Maybe UpdateParamType -> UpdateParam

-- | The value of the keys submitted as part of an update request.
[$sel:value:UpdateParam'] :: UpdateParam -> Maybe Text

-- | The keys associated with an update request.
[$sel:type':UpdateParam'] :: UpdateParam -> Maybe UpdateParamType

-- | Create a value of <a>UpdateParam</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:UpdateParam'</a>, <a>updateParam_value</a> - The value
--   of the keys submitted as part of an update request.
--   
--   <a>$sel:type':UpdateParam'</a>, <a>updateParam_type</a> - The keys
--   associated with an update request.
newUpdateParam :: UpdateParam

-- | The value of the keys submitted as part of an update request.
updateParam_value :: Lens' UpdateParam (Maybe Text)

-- | The keys associated with an update request.
updateParam_type :: Lens' UpdateParam (Maybe UpdateParamType)

-- | An object representing the details of an update to a taints payload.
--   
--   <i>See:</i> <a>newUpdateTaintsPayload</a> smart constructor.
data UpdateTaintsPayload
UpdateTaintsPayload' :: Maybe [Taint] -> Maybe [Taint] -> UpdateTaintsPayload

-- | Kubernetes taints to be added or updated.
[$sel:addOrUpdateTaints:UpdateTaintsPayload'] :: UpdateTaintsPayload -> Maybe [Taint]

-- | Kubernetes taints to be removed.
[$sel:removeTaints:UpdateTaintsPayload'] :: UpdateTaintsPayload -> Maybe [Taint]

-- | Create a value of <a>UpdateTaintsPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addOrUpdateTaints:UpdateTaintsPayload'</a>,
--   <a>updateTaintsPayload_addOrUpdateTaints</a> - Kubernetes taints to be
--   added or updated.
--   
--   <a>$sel:removeTaints:UpdateTaintsPayload'</a>,
--   <a>updateTaintsPayload_removeTaints</a> - Kubernetes taints to be
--   removed.
newUpdateTaintsPayload :: UpdateTaintsPayload

-- | Kubernetes taints to be added or updated.
updateTaintsPayload_addOrUpdateTaints :: Lens' UpdateTaintsPayload (Maybe [Taint])

-- | Kubernetes taints to be removed.
updateTaintsPayload_removeTaints :: Lens' UpdateTaintsPayload (Maybe [Taint])

-- | An object representing the VPC configuration to use for an Amazon EKS
--   cluster.
--   
--   <i>See:</i> <a>newVpcConfigRequest</a> smart constructor.
data VpcConfigRequest
VpcConfigRequest' :: Maybe [Text] -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> VpcConfigRequest

-- | Specify one or more security groups for the cross-account elastic
--   network interfaces that Amazon EKS creates to use that allow
--   communication between your nodes and the Kubernetes control plane. If
--   you don't specify any security groups, then familiarize yourself with
--   the difference between Amazon EKS defaults for clusters deployed with
--   Kubernetes:
--   
--   <ul>
--   <li>1.14 Amazon EKS platform version <tt>eks.2</tt> and earlier</li>
--   <li>1.14 Amazon EKS platform version <tt>eks.3</tt> and later</li>
--   </ul>
--   
--   For more information, see <a>Amazon EKS security group
--   considerations</a> in the /<i>Amazon EKS User Guide</i>/ .
[$sel:securityGroupIds:VpcConfigRequest'] :: VpcConfigRequest -> Maybe [Text]

-- | Set this value to <tt>true</tt> to enable private access for your
--   cluster's Kubernetes API server endpoint. If you enable private
--   access, Kubernetes API requests from within your cluster's VPC use the
--   private VPC endpoint. The default value for this parameter is
--   <tt>false</tt>, which disables private access for your Kubernetes API
--   server. If you disable private access and you have nodes or Fargate
--   pods in the cluster, then ensure that <tt>publicAccessCidrs</tt>
--   includes the necessary CIDR blocks for communication with the nodes or
--   Fargate pods. For more information, see <a>Amazon EKS cluster endpoint
--   access control</a> in the /<i>Amazon EKS User Guide</i>/ .
[$sel:endpointPrivateAccess:VpcConfigRequest'] :: VpcConfigRequest -> Maybe Bool

-- | The CIDR blocks that are allowed access to your cluster's public
--   Kubernetes API server endpoint. Communication to the endpoint from
--   addresses outside of the CIDR blocks that you specify is denied. The
--   default value is <tt>0.0.0.0/0</tt>. If you've disabled private
--   endpoint access and you have nodes or Fargate pods in the cluster,
--   then ensure that you specify the necessary CIDR blocks. For more
--   information, see <a>Amazon EKS cluster endpoint access control</a> in
--   the /<i>Amazon EKS User Guide</i>/ .
[$sel:publicAccessCidrs:VpcConfigRequest'] :: VpcConfigRequest -> Maybe [Text]

-- | Specify subnets for your Amazon EKS nodes. Amazon EKS creates
--   cross-account elastic network interfaces in these subnets to allow
--   communication between your nodes and the Kubernetes control plane.
[$sel:subnetIds:VpcConfigRequest'] :: VpcConfigRequest -> Maybe [Text]

-- | Set this value to <tt>false</tt> to disable public access to your
--   cluster's Kubernetes API server endpoint. If you disable public
--   access, your cluster's Kubernetes API server can only receive requests
--   from within the cluster VPC. The default value for this parameter is
--   <tt>true</tt>, which enables public access for your Kubernetes API
--   server. For more information, see <a>Amazon EKS cluster endpoint
--   access control</a> in the /<i>Amazon EKS User Guide</i>/ .
[$sel:endpointPublicAccess:VpcConfigRequest'] :: VpcConfigRequest -> Maybe Bool

-- | Create a value of <a>VpcConfigRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_securityGroupIds</a> - Specify one or more
--   security groups for the cross-account elastic network interfaces that
--   Amazon EKS creates to use that allow communication between your nodes
--   and the Kubernetes control plane. If you don't specify any security
--   groups, then familiarize yourself with the difference between Amazon
--   EKS defaults for clusters deployed with Kubernetes:
--   
--   <ul>
--   <li>1.14 Amazon EKS platform version <tt>eks.2</tt> and earlier</li>
--   <li>1.14 Amazon EKS platform version <tt>eks.3</tt> and later</li>
--   </ul>
--   
--   For more information, see <a>Amazon EKS security group
--   considerations</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:endpointPrivateAccess:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_endpointPrivateAccess</a> - Set this value to
--   <tt>true</tt> to enable private access for your cluster's Kubernetes
--   API server endpoint. If you enable private access, Kubernetes API
--   requests from within your cluster's VPC use the private VPC endpoint.
--   The default value for this parameter is <tt>false</tt>, which disables
--   private access for your Kubernetes API server. If you disable private
--   access and you have nodes or Fargate pods in the cluster, then ensure
--   that <tt>publicAccessCidrs</tt> includes the necessary CIDR blocks for
--   communication with the nodes or Fargate pods. For more information,
--   see <a>Amazon EKS cluster endpoint access control</a> in the
--   /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:publicAccessCidrs:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_publicAccessCidrs</a> - The CIDR blocks that are
--   allowed access to your cluster's public Kubernetes API server
--   endpoint. Communication to the endpoint from addresses outside of the
--   CIDR blocks that you specify is denied. The default value is
--   <tt>0.0.0.0/0</tt>. If you've disabled private endpoint access and you
--   have nodes or Fargate pods in the cluster, then ensure that you
--   specify the necessary CIDR blocks. For more information, see <a>Amazon
--   EKS cluster endpoint access control</a> in the /<i>Amazon EKS User
--   Guide</i>/ .
--   
--   <a>$sel:subnetIds:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_subnetIds</a> - Specify subnets for your Amazon
--   EKS nodes. Amazon EKS creates cross-account elastic network interfaces
--   in these subnets to allow communication between your nodes and the
--   Kubernetes control plane.
--   
--   <a>$sel:endpointPublicAccess:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_endpointPublicAccess</a> - Set this value to
--   <tt>false</tt> to disable public access to your cluster's Kubernetes
--   API server endpoint. If you disable public access, your cluster's
--   Kubernetes API server can only receive requests from within the
--   cluster VPC. The default value for this parameter is <tt>true</tt>,
--   which enables public access for your Kubernetes API server. For more
--   information, see <a>Amazon EKS cluster endpoint access control</a> in
--   the /<i>Amazon EKS User Guide</i>/ .
newVpcConfigRequest :: VpcConfigRequest

-- | Specify one or more security groups for the cross-account elastic
--   network interfaces that Amazon EKS creates to use that allow
--   communication between your nodes and the Kubernetes control plane. If
--   you don't specify any security groups, then familiarize yourself with
--   the difference between Amazon EKS defaults for clusters deployed with
--   Kubernetes:
--   
--   <ul>
--   <li>1.14 Amazon EKS platform version <tt>eks.2</tt> and earlier</li>
--   <li>1.14 Amazon EKS platform version <tt>eks.3</tt> and later</li>
--   </ul>
--   
--   For more information, see <a>Amazon EKS security group
--   considerations</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_securityGroupIds :: Lens' VpcConfigRequest (Maybe [Text])

-- | Set this value to <tt>true</tt> to enable private access for your
--   cluster's Kubernetes API server endpoint. If you enable private
--   access, Kubernetes API requests from within your cluster's VPC use the
--   private VPC endpoint. The default value for this parameter is
--   <tt>false</tt>, which disables private access for your Kubernetes API
--   server. If you disable private access and you have nodes or Fargate
--   pods in the cluster, then ensure that <tt>publicAccessCidrs</tt>
--   includes the necessary CIDR blocks for communication with the nodes or
--   Fargate pods. For more information, see <a>Amazon EKS cluster endpoint
--   access control</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_endpointPrivateAccess :: Lens' VpcConfigRequest (Maybe Bool)

-- | The CIDR blocks that are allowed access to your cluster's public
--   Kubernetes API server endpoint. Communication to the endpoint from
--   addresses outside of the CIDR blocks that you specify is denied. The
--   default value is <tt>0.0.0.0/0</tt>. If you've disabled private
--   endpoint access and you have nodes or Fargate pods in the cluster,
--   then ensure that you specify the necessary CIDR blocks. For more
--   information, see <a>Amazon EKS cluster endpoint access control</a> in
--   the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_publicAccessCidrs :: Lens' VpcConfigRequest (Maybe [Text])

-- | Specify subnets for your Amazon EKS nodes. Amazon EKS creates
--   cross-account elastic network interfaces in these subnets to allow
--   communication between your nodes and the Kubernetes control plane.
vpcConfigRequest_subnetIds :: Lens' VpcConfigRequest (Maybe [Text])

-- | Set this value to <tt>false</tt> to disable public access to your
--   cluster's Kubernetes API server endpoint. If you disable public
--   access, your cluster's Kubernetes API server can only receive requests
--   from within the cluster VPC. The default value for this parameter is
--   <tt>true</tt>, which enables public access for your Kubernetes API
--   server. For more information, see <a>Amazon EKS cluster endpoint
--   access control</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_endpointPublicAccess :: Lens' VpcConfigRequest (Maybe Bool)

-- | An object representing an Amazon EKS cluster VPC configuration
--   response.
--   
--   <i>See:</i> <a>newVpcConfigResponse</a> smart constructor.
data VpcConfigResponse
VpcConfigResponse' :: Maybe [Text] -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Bool -> VpcConfigResponse

-- | The security groups associated with the cross-account elastic network
--   interfaces that are used to allow communication between your nodes and
--   the Kubernetes control plane.
[$sel:securityGroupIds:VpcConfigResponse'] :: VpcConfigResponse -> Maybe [Text]

-- | This parameter indicates whether the Amazon EKS private API server
--   endpoint is enabled. If the Amazon EKS private API server endpoint is
--   enabled, Kubernetes API requests that originate from within your
--   cluster's VPC use the private VPC endpoint instead of traversing the
--   internet. If this value is disabled and you have nodes or Fargate pods
--   in the cluster, then ensure that <tt>publicAccessCidrs</tt> includes
--   the necessary CIDR blocks for communication with the nodes or Fargate
--   pods. For more information, see <a>Amazon EKS cluster endpoint access
--   control</a> in the /<i>Amazon EKS User Guide</i>/ .
[$sel:endpointPrivateAccess:VpcConfigResponse'] :: VpcConfigResponse -> Maybe Bool

-- | The CIDR blocks that are allowed access to your cluster's public
--   Kubernetes API server endpoint. Communication to the endpoint from
--   addresses outside of the listed CIDR blocks is denied. The default
--   value is <tt>0.0.0.0/0</tt>. If you've disabled private endpoint
--   access and you have nodes or Fargate pods in the cluster, then ensure
--   that the necessary CIDR blocks are listed. For more information, see
--   <a>Amazon EKS cluster endpoint access control</a> in the /<i>Amazon
--   EKS User Guide</i>/ .
[$sel:publicAccessCidrs:VpcConfigResponse'] :: VpcConfigResponse -> Maybe [Text]

-- | The subnets associated with your cluster.
[$sel:subnetIds:VpcConfigResponse'] :: VpcConfigResponse -> Maybe [Text]

-- | The VPC associated with your cluster.
[$sel:vpcId:VpcConfigResponse'] :: VpcConfigResponse -> Maybe Text

-- | The cluster security group that was created by Amazon EKS for the
--   cluster. Managed node groups use this security group for
--   control-plane-to-data-plane communication.
[$sel:clusterSecurityGroupId:VpcConfigResponse'] :: VpcConfigResponse -> Maybe Text

-- | This parameter indicates whether the Amazon EKS public API server
--   endpoint is enabled. If the Amazon EKS public API server endpoint is
--   disabled, your cluster's Kubernetes API server can only receive
--   requests that originate from within the cluster VPC.
[$sel:endpointPublicAccess:VpcConfigResponse'] :: VpcConfigResponse -> Maybe Bool

-- | Create a value of <a>VpcConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_securityGroupIds</a> - The security groups
--   associated with the cross-account elastic network interfaces that are
--   used to allow communication between your nodes and the Kubernetes
--   control plane.
--   
--   <a>$sel:endpointPrivateAccess:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_endpointPrivateAccess</a> - This parameter
--   indicates whether the Amazon EKS private API server endpoint is
--   enabled. If the Amazon EKS private API server endpoint is enabled,
--   Kubernetes API requests that originate from within your cluster's VPC
--   use the private VPC endpoint instead of traversing the internet. If
--   this value is disabled and you have nodes or Fargate pods in the
--   cluster, then ensure that <tt>publicAccessCidrs</tt> includes the
--   necessary CIDR blocks for communication with the nodes or Fargate
--   pods. For more information, see <a>Amazon EKS cluster endpoint access
--   control</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:publicAccessCidrs:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_publicAccessCidrs</a> - The CIDR blocks that are
--   allowed access to your cluster's public Kubernetes API server
--   endpoint. Communication to the endpoint from addresses outside of the
--   listed CIDR blocks is denied. The default value is <tt>0.0.0.0/0</tt>.
--   If you've disabled private endpoint access and you have nodes or
--   Fargate pods in the cluster, then ensure that the necessary CIDR
--   blocks are listed. For more information, see <a>Amazon EKS cluster
--   endpoint access control</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:subnetIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_subnetIds</a> - The subnets associated with your
--   cluster.
--   
--   <a>$sel:vpcId:VpcConfigResponse'</a>, <a>vpcConfigResponse_vpcId</a> -
--   The VPC associated with your cluster.
--   
--   <a>$sel:clusterSecurityGroupId:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_clusterSecurityGroupId</a> - The cluster security
--   group that was created by Amazon EKS for the cluster. Managed node
--   groups use this security group for control-plane-to-data-plane
--   communication.
--   
--   <a>$sel:endpointPublicAccess:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_endpointPublicAccess</a> - This parameter
--   indicates whether the Amazon EKS public API server endpoint is
--   enabled. If the Amazon EKS public API server endpoint is disabled,
--   your cluster's Kubernetes API server can only receive requests that
--   originate from within the cluster VPC.
newVpcConfigResponse :: VpcConfigResponse

-- | The security groups associated with the cross-account elastic network
--   interfaces that are used to allow communication between your nodes and
--   the Kubernetes control plane.
vpcConfigResponse_securityGroupIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | This parameter indicates whether the Amazon EKS private API server
--   endpoint is enabled. If the Amazon EKS private API server endpoint is
--   enabled, Kubernetes API requests that originate from within your
--   cluster's VPC use the private VPC endpoint instead of traversing the
--   internet. If this value is disabled and you have nodes or Fargate pods
--   in the cluster, then ensure that <tt>publicAccessCidrs</tt> includes
--   the necessary CIDR blocks for communication with the nodes or Fargate
--   pods. For more information, see <a>Amazon EKS cluster endpoint access
--   control</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigResponse_endpointPrivateAccess :: Lens' VpcConfigResponse (Maybe Bool)

-- | The CIDR blocks that are allowed access to your cluster's public
--   Kubernetes API server endpoint. Communication to the endpoint from
--   addresses outside of the listed CIDR blocks is denied. The default
--   value is <tt>0.0.0.0/0</tt>. If you've disabled private endpoint
--   access and you have nodes or Fargate pods in the cluster, then ensure
--   that the necessary CIDR blocks are listed. For more information, see
--   <a>Amazon EKS cluster endpoint access control</a> in the /<i>Amazon
--   EKS User Guide</i>/ .
vpcConfigResponse_publicAccessCidrs :: Lens' VpcConfigResponse (Maybe [Text])

-- | The subnets associated with your cluster.
vpcConfigResponse_subnetIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | The VPC associated with your cluster.
vpcConfigResponse_vpcId :: Lens' VpcConfigResponse (Maybe Text)

-- | The cluster security group that was created by Amazon EKS for the
--   cluster. Managed node groups use this security group for
--   control-plane-to-data-plane communication.
vpcConfigResponse_clusterSecurityGroupId :: Lens' VpcConfigResponse (Maybe Text)

-- | This parameter indicates whether the Amazon EKS public API server
--   endpoint is enabled. If the Amazon EKS public API server endpoint is
--   disabled, your cluster's Kubernetes API server can only receive
--   requests that originate from within the cluster VPC.
vpcConfigResponse_endpointPublicAccess :: Lens' VpcConfigResponse (Maybe Bool)


-- | Associates the specified tags to a resource with the specified
--   <tt>resourceArn</tt>. If existing tags on a resource are not specified
--   in the request parameters, they are not changed. When a resource is
--   deleted, the tags associated with that resource are deleted as well.
--   Tags that you create for Amazon EKS resources do not propagate to any
--   other resources associated with the cluster. For example, if you tag a
--   cluster with this operation, that tag does not automatically propagate
--   to the subnets and nodes associated with the cluster.
module Network.AWS.EKS.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource to which to add tags.
--   Currently, the supported resources are Amazon EKS clusters and managed
--   node groups.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags to add to the resource. A tag is an array of key-value pairs.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource to which to add tags.
--   Currently, the supported resources are Amazon EKS clusters and managed
--   node groups.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   add to the resource. A tag is an array of key-value pairs.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource to which to add tags.
--   Currently, the supported resources are Amazon EKS clusters and managed
--   node groups.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to add to the resource. A tag is an array of key-value pairs.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.TagResource.TagResource
instance GHC.Show.Show Network.AWS.EKS.TagResource.TagResource
instance GHC.Read.Read Network.AWS.EKS.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.EKS.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.EKS.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.EKS.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.EKS.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.EKS.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.EKS.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.EKS.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.TagResource.TagResource


-- | Connects a Kubernetes cluster to the Amazon EKS control plane.
--   
--   Any Kubernetes cluster can be connected to the Amazon EKS control
--   plane to view current information about the cluster and its nodes.
--   
--   Cluster connection requires two steps. First, send a <tt>
--   RegisterClusterRequest </tt> to add it to the Amazon EKS control
--   plane.
--   
--   Second, a <a>Manifest</a> containing the <tt>activationID</tt> and
--   <tt>activationCode</tt> must be applied to the Kubernetes cluster
--   through it's native provider to provide visibility.
--   
--   After the Manifest is updated and applied, then the connected cluster
--   is visible to the Amazon EKS control plane. If the Manifest is not
--   applied within a set amount of time, then the connected cluster will
--   no longer be visible and must be deregistered. See DeregisterCluster.
module Network.AWS.EKS.RegisterCluster

-- | <i>See:</i> <a>newRegisterCluster</a> smart constructor.
data RegisterCluster
RegisterCluster' :: Maybe Text -> Text -> ConnectorConfigRequest -> RegisterCluster

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:RegisterCluster'] :: RegisterCluster -> Maybe Text

-- | Define a unique name for this cluster within your AWS account.
[$sel:name:RegisterCluster'] :: RegisterCluster -> Text

-- | The configuration settings required to connect the Kubernetes cluster
--   to the Amazon EKS control plane.
[$sel:connectorConfig:RegisterCluster'] :: RegisterCluster -> ConnectorConfigRequest

-- | Create a value of <a>RegisterCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:RegisterCluster'</a>,
--   <a>registerCluster_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:name:RegisterCluster'</a>, <a>registerCluster_name</a> -
--   Define a unique name for this cluster within your AWS account.
--   
--   <a>$sel:connectorConfig:RegisterCluster'</a>,
--   <a>registerCluster_connectorConfig</a> - The configuration settings
--   required to connect the Kubernetes cluster to the Amazon EKS control
--   plane.
newRegisterCluster :: Text -> ConnectorConfigRequest -> RegisterCluster

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
registerCluster_clientRequestToken :: Lens' RegisterCluster (Maybe Text)

-- | Define a unique name for this cluster within your AWS account.
registerCluster_name :: Lens' RegisterCluster Text

-- | The configuration settings required to connect the Kubernetes cluster
--   to the Amazon EKS control plane.
registerCluster_connectorConfig :: Lens' RegisterCluster ConnectorConfigRequest

-- | <i>See:</i> <a>newRegisterClusterResponse</a> smart constructor.
data RegisterClusterResponse
RegisterClusterResponse' :: Maybe Cluster -> Int -> RegisterClusterResponse
[$sel:cluster:RegisterClusterResponse'] :: RegisterClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:RegisterClusterResponse'] :: RegisterClusterResponse -> Int

-- | Create a value of <a>RegisterClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:RegisterClusterResponse'</a>,
--   <a>registerClusterResponse_cluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:RegisterClusterResponse'</a>,
--   <a>registerClusterResponse_httpStatus</a> - The response's http status
--   code.
newRegisterClusterResponse :: Int -> RegisterClusterResponse

-- | Undocumented member.
registerClusterResponse_cluster :: Lens' RegisterClusterResponse (Maybe Cluster)

-- | The response's http status code.
registerClusterResponse_httpStatus :: Lens' RegisterClusterResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.RegisterCluster.RegisterCluster
instance GHC.Show.Show Network.AWS.EKS.RegisterCluster.RegisterCluster
instance GHC.Read.Read Network.AWS.EKS.RegisterCluster.RegisterCluster
instance GHC.Classes.Eq Network.AWS.EKS.RegisterCluster.RegisterCluster
instance GHC.Generics.Generic Network.AWS.EKS.RegisterCluster.RegisterClusterResponse
instance GHC.Show.Show Network.AWS.EKS.RegisterCluster.RegisterClusterResponse
instance GHC.Read.Read Network.AWS.EKS.RegisterCluster.RegisterClusterResponse
instance GHC.Classes.Eq Network.AWS.EKS.RegisterCluster.RegisterClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.RegisterCluster.RegisterCluster
instance Control.DeepSeq.NFData Network.AWS.EKS.RegisterCluster.RegisterClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.RegisterCluster.RegisterCluster
instance Control.DeepSeq.NFData Network.AWS.EKS.RegisterCluster.RegisterCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.RegisterCluster.RegisterCluster
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.RegisterCluster.RegisterCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.RegisterCluster.RegisterCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.RegisterCluster.RegisterCluster


-- | Lists the updates associated with an Amazon EKS cluster or managed
--   node group in your Amazon Web Services account, in the specified
--   Region.
--   
--   This operation returns paginated results.
module Network.AWS.EKS.ListUpdates

-- | <i>See:</i> <a>newListUpdates</a> smart constructor.
data ListUpdates
ListUpdates' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListUpdates

-- | The names of the installed add-ons that have available updates.
[$sel:addonName:ListUpdates'] :: ListUpdates -> Maybe Text

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListUpdates</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
[$sel:nextToken:ListUpdates'] :: ListUpdates -> Maybe Text

-- | The name of the Amazon EKS managed node group to list updates for.
[$sel:nodegroupName:ListUpdates'] :: ListUpdates -> Maybe Text

-- | The maximum number of update results returned by <tt>ListUpdates</tt>
--   in paginated output. When you use this parameter, <tt>ListUpdates</tt>
--   returns only <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListUpdates</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListUpdates</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
[$sel:maxResults:ListUpdates'] :: ListUpdates -> Maybe Natural

-- | The name of the Amazon EKS cluster to list updates for.
[$sel:name:ListUpdates'] :: ListUpdates -> Text

-- | Create a value of <a>ListUpdates</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonName:ListUpdates'</a>, <a>listUpdates_addonName</a> - The
--   names of the installed add-ons that have available updates.
--   
--   <a>$sel:nextToken:ListUpdates'</a>, <a>listUpdates_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListUpdates</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   <a>$sel:nodegroupName:ListUpdates'</a>,
--   <a>listUpdates_nodegroupName</a> - The name of the Amazon EKS managed
--   node group to list updates for.
--   
--   <a>$sel:maxResults:ListUpdates'</a>, <a>listUpdates_maxResults</a> -
--   The maximum number of update results returned by <tt>ListUpdates</tt>
--   in paginated output. When you use this parameter, <tt>ListUpdates</tt>
--   returns only <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListUpdates</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListUpdates</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
--   
--   <a>$sel:name:ListUpdates'</a>, <a>listUpdates_name</a> - The name of
--   the Amazon EKS cluster to list updates for.
newListUpdates :: Text -> ListUpdates

-- | The names of the installed add-ons that have available updates.
listUpdates_addonName :: Lens' ListUpdates (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListUpdates</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listUpdates_nextToken :: Lens' ListUpdates (Maybe Text)

-- | The name of the Amazon EKS managed node group to list updates for.
listUpdates_nodegroupName :: Lens' ListUpdates (Maybe Text)

-- | The maximum number of update results returned by <tt>ListUpdates</tt>
--   in paginated output. When you use this parameter, <tt>ListUpdates</tt>
--   returns only <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListUpdates</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListUpdates</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
listUpdates_maxResults :: Lens' ListUpdates (Maybe Natural)

-- | The name of the Amazon EKS cluster to list updates for.
listUpdates_name :: Lens' ListUpdates Text

-- | <i>See:</i> <a>newListUpdatesResponse</a> smart constructor.
data ListUpdatesResponse
ListUpdatesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListUpdatesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListUpdates</tt> request. When the results of a
--   <tt>ListUpdates</tt> request exceed <tt>maxResults</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListUpdatesResponse'] :: ListUpdatesResponse -> Maybe Text

-- | A list of all the updates for the specified cluster and Region.
[$sel:updateIds:ListUpdatesResponse'] :: ListUpdatesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListUpdatesResponse'] :: ListUpdatesResponse -> Int

-- | Create a value of <a>ListUpdatesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUpdates'</a>,
--   <a>listUpdatesResponse_nextToken</a> - The <tt>nextToken</tt> value to
--   include in a future <tt>ListUpdates</tt> request. When the results of
--   a <tt>ListUpdates</tt> request exceed <tt>maxResults</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   <a>$sel:updateIds:ListUpdatesResponse'</a>,
--   <a>listUpdatesResponse_updateIds</a> - A list of all the updates for
--   the specified cluster and Region.
--   
--   <a>$sel:httpStatus:ListUpdatesResponse'</a>,
--   <a>listUpdatesResponse_httpStatus</a> - The response's http status
--   code.
newListUpdatesResponse :: Int -> ListUpdatesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListUpdates</tt> request. When the results of a
--   <tt>ListUpdates</tt> request exceed <tt>maxResults</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listUpdatesResponse_nextToken :: Lens' ListUpdatesResponse (Maybe Text)

-- | A list of all the updates for the specified cluster and Region.
listUpdatesResponse_updateIds :: Lens' ListUpdatesResponse (Maybe [Text])

-- | The response's http status code.
listUpdatesResponse_httpStatus :: Lens' ListUpdatesResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.ListUpdates.ListUpdates
instance GHC.Show.Show Network.AWS.EKS.ListUpdates.ListUpdates
instance GHC.Read.Read Network.AWS.EKS.ListUpdates.ListUpdates
instance GHC.Classes.Eq Network.AWS.EKS.ListUpdates.ListUpdates
instance GHC.Generics.Generic Network.AWS.EKS.ListUpdates.ListUpdatesResponse
instance GHC.Show.Show Network.AWS.EKS.ListUpdates.ListUpdatesResponse
instance GHC.Read.Read Network.AWS.EKS.ListUpdates.ListUpdatesResponse
instance GHC.Classes.Eq Network.AWS.EKS.ListUpdates.ListUpdatesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.ListUpdates.ListUpdates
instance Control.DeepSeq.NFData Network.AWS.EKS.ListUpdates.ListUpdatesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.EKS.ListUpdates.ListUpdates
instance Data.Hashable.Class.Hashable Network.AWS.EKS.ListUpdates.ListUpdates
instance Control.DeepSeq.NFData Network.AWS.EKS.ListUpdates.ListUpdates
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.ListUpdates.ListUpdates
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.ListUpdates.ListUpdates
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.ListUpdates.ListUpdates


-- | List the tags for an Amazon EKS resource.
module Network.AWS.EKS.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are Amazon EKS
--   clusters and managed node groups.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that identifies the resource for which to list the tags.
--   Currently, the supported resources are Amazon EKS clusters and managed
--   node groups.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are Amazon EKS
--   clusters and managed node groups.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The tags for the resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags for the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.EKS.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.EKS.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.EKS.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.EKS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.EKS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.EKS.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.EKS.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.EKS.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.EKS.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.ListTagsForResource.ListTagsForResource


-- | Lists the Amazon EKS managed node groups associated with the specified
--   cluster in your Amazon Web Services account in the specified Region.
--   Self-managed node groups are not listed.
--   
--   This operation returns paginated results.
module Network.AWS.EKS.ListNodegroups

-- | <i>See:</i> <a>newListNodegroups</a> smart constructor.
data ListNodegroups
ListNodegroups' :: Maybe Text -> Maybe Natural -> Text -> ListNodegroups

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListNodegroups</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
[$sel:nextToken:ListNodegroups'] :: ListNodegroups -> Maybe Text

-- | The maximum number of node group results returned by
--   <tt>ListNodegroups</tt> in paginated output. When you use this
--   parameter, <tt>ListNodegroups</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListNodegroups</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListNodegroups</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
[$sel:maxResults:ListNodegroups'] :: ListNodegroups -> Maybe Natural

-- | The name of the Amazon EKS cluster that you would like to list node
--   groups in.
[$sel:clusterName:ListNodegroups'] :: ListNodegroups -> Text

-- | Create a value of <a>ListNodegroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodegroups'</a>, <a>listNodegroups_nextToken</a>
--   - The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListNodegroups</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   <a>$sel:maxResults:ListNodegroups'</a>,
--   <a>listNodegroups_maxResults</a> - The maximum number of node group
--   results returned by <tt>ListNodegroups</tt> in paginated output. When
--   you use this parameter, <tt>ListNodegroups</tt> returns only
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListNodegroups</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListNodegroups</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:clusterName:ListNodegroups'</a>,
--   <a>listNodegroups_clusterName</a> - The name of the Amazon EKS cluster
--   that you would like to list node groups in.
newListNodegroups :: Text -> ListNodegroups

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListNodegroups</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listNodegroups_nextToken :: Lens' ListNodegroups (Maybe Text)

-- | The maximum number of node group results returned by
--   <tt>ListNodegroups</tt> in paginated output. When you use this
--   parameter, <tt>ListNodegroups</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListNodegroups</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListNodegroups</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
listNodegroups_maxResults :: Lens' ListNodegroups (Maybe Natural)

-- | The name of the Amazon EKS cluster that you would like to list node
--   groups in.
listNodegroups_clusterName :: Lens' ListNodegroups Text

-- | <i>See:</i> <a>newListNodegroupsResponse</a> smart constructor.
data ListNodegroupsResponse
ListNodegroupsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListNodegroupsResponse

-- | A list of all of the node groups associated with the specified
--   cluster.
[$sel:nodegroups:ListNodegroupsResponse'] :: ListNodegroupsResponse -> Maybe [Text]

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListNodegroups</tt> request. When the results of a
--   <tt>ListNodegroups</tt> request exceed <tt>maxResults</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListNodegroupsResponse'] :: ListNodegroupsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListNodegroupsResponse'] :: ListNodegroupsResponse -> Int

-- | Create a value of <a>ListNodegroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodegroups:ListNodegroupsResponse'</a>,
--   <a>listNodegroupsResponse_nodegroups</a> - A list of all of the node
--   groups associated with the specified cluster.
--   
--   <a>$sel:nextToken:ListNodegroups'</a>,
--   <a>listNodegroupsResponse_nextToken</a> - The <tt>nextToken</tt> value
--   to include in a future <tt>ListNodegroups</tt> request. When the
--   results of a <tt>ListNodegroups</tt> request exceed
--   <tt>maxResults</tt>, you can use this value to retrieve the next page
--   of results. This value is <tt>null</tt> when there are no more results
--   to return.
--   
--   <a>$sel:httpStatus:ListNodegroupsResponse'</a>,
--   <a>listNodegroupsResponse_httpStatus</a> - The response's http status
--   code.
newListNodegroupsResponse :: Int -> ListNodegroupsResponse

-- | A list of all of the node groups associated with the specified
--   cluster.
listNodegroupsResponse_nodegroups :: Lens' ListNodegroupsResponse (Maybe [Text])

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListNodegroups</tt> request. When the results of a
--   <tt>ListNodegroups</tt> request exceed <tt>maxResults</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listNodegroupsResponse_nextToken :: Lens' ListNodegroupsResponse (Maybe Text)

-- | The response's http status code.
listNodegroupsResponse_httpStatus :: Lens' ListNodegroupsResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.ListNodegroups.ListNodegroups
instance GHC.Show.Show Network.AWS.EKS.ListNodegroups.ListNodegroups
instance GHC.Read.Read Network.AWS.EKS.ListNodegroups.ListNodegroups
instance GHC.Classes.Eq Network.AWS.EKS.ListNodegroups.ListNodegroups
instance GHC.Generics.Generic Network.AWS.EKS.ListNodegroups.ListNodegroupsResponse
instance GHC.Show.Show Network.AWS.EKS.ListNodegroups.ListNodegroupsResponse
instance GHC.Read.Read Network.AWS.EKS.ListNodegroups.ListNodegroupsResponse
instance GHC.Classes.Eq Network.AWS.EKS.ListNodegroups.ListNodegroupsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.ListNodegroups.ListNodegroups
instance Control.DeepSeq.NFData Network.AWS.EKS.ListNodegroups.ListNodegroupsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.EKS.ListNodegroups.ListNodegroups
instance Data.Hashable.Class.Hashable Network.AWS.EKS.ListNodegroups.ListNodegroups
instance Control.DeepSeq.NFData Network.AWS.EKS.ListNodegroups.ListNodegroups
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.ListNodegroups.ListNodegroups
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.ListNodegroups.ListNodegroups
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.ListNodegroups.ListNodegroups


-- | A list of identity provider configurations.
--   
--   This operation returns paginated results.
module Network.AWS.EKS.ListIdentityProviderConfigs

-- | <i>See:</i> <a>newListIdentityProviderConfigs</a> smart constructor.
data ListIdentityProviderConfigs
ListIdentityProviderConfigs' :: Maybe Text -> Maybe Natural -> Text -> ListIdentityProviderConfigs

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>IdentityProviderConfigsRequest</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
[$sel:nextToken:ListIdentityProviderConfigs'] :: ListIdentityProviderConfigs -> Maybe Text

-- | The maximum number of identity provider configurations returned by
--   <tt>ListIdentityProviderConfigs</tt> in paginated output. When you use
--   this parameter, <tt>ListIdentityProviderConfigs</tt> returns only
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another
--   <tt>ListIdentityProviderConfigs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListIdentityProviderConfigs</tt> returns
--   up to 100 results and a <tt>nextToken</tt> value, if applicable.
[$sel:maxResults:ListIdentityProviderConfigs'] :: ListIdentityProviderConfigs -> Maybe Natural

-- | The cluster name that you want to list identity provider
--   configurations for.
[$sel:clusterName:ListIdentityProviderConfigs'] :: ListIdentityProviderConfigs -> Text

-- | Create a value of <a>ListIdentityProviderConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentityProviderConfigs'</a>,
--   <a>listIdentityProviderConfigs_nextToken</a> - The <tt>nextToken</tt>
--   value returned from a previous paginated
--   <tt>IdentityProviderConfigsRequest</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   <a>$sel:maxResults:ListIdentityProviderConfigs'</a>,
--   <a>listIdentityProviderConfigs_maxResults</a> - The maximum number of
--   identity provider configurations returned by
--   <tt>ListIdentityProviderConfigs</tt> in paginated output. When you use
--   this parameter, <tt>ListIdentityProviderConfigs</tt> returns only
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another
--   <tt>ListIdentityProviderConfigs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListIdentityProviderConfigs</tt> returns
--   up to 100 results and a <tt>nextToken</tt> value, if applicable.
--   
--   <a>$sel:clusterName:ListIdentityProviderConfigs'</a>,
--   <a>listIdentityProviderConfigs_clusterName</a> - The cluster name that
--   you want to list identity provider configurations for.
newListIdentityProviderConfigs :: Text -> ListIdentityProviderConfigs

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>IdentityProviderConfigsRequest</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listIdentityProviderConfigs_nextToken :: Lens' ListIdentityProviderConfigs (Maybe Text)

-- | The maximum number of identity provider configurations returned by
--   <tt>ListIdentityProviderConfigs</tt> in paginated output. When you use
--   this parameter, <tt>ListIdentityProviderConfigs</tt> returns only
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another
--   <tt>ListIdentityProviderConfigs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListIdentityProviderConfigs</tt> returns
--   up to 100 results and a <tt>nextToken</tt> value, if applicable.
listIdentityProviderConfigs_maxResults :: Lens' ListIdentityProviderConfigs (Maybe Natural)

-- | The cluster name that you want to list identity provider
--   configurations for.
listIdentityProviderConfigs_clusterName :: Lens' ListIdentityProviderConfigs Text

-- | <i>See:</i> <a>newListIdentityProviderConfigsResponse</a> smart
--   constructor.
data ListIdentityProviderConfigsResponse
ListIdentityProviderConfigsResponse' :: Maybe [IdentityProviderConfig] -> Maybe Text -> Int -> ListIdentityProviderConfigsResponse

-- | The identity provider configurations for the cluster.
[$sel:identityProviderConfigs:ListIdentityProviderConfigsResponse'] :: ListIdentityProviderConfigsResponse -> Maybe [IdentityProviderConfig]

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListIdentityProviderConfigsResponse</tt> where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value.
[$sel:nextToken:ListIdentityProviderConfigsResponse'] :: ListIdentityProviderConfigsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListIdentityProviderConfigsResponse'] :: ListIdentityProviderConfigsResponse -> Int

-- | Create a value of <a>ListIdentityProviderConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:identityProviderConfigs:ListIdentityProviderConfigsResponse'</a>,
--   <a>listIdentityProviderConfigsResponse_identityProviderConfigs</a> -
--   The identity provider configurations for the cluster.
--   
--   <a>$sel:nextToken:ListIdentityProviderConfigs'</a>,
--   <a>listIdentityProviderConfigsResponse_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListIdentityProviderConfigsResponse</tt> where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:httpStatus:ListIdentityProviderConfigsResponse'</a>,
--   <a>listIdentityProviderConfigsResponse_httpStatus</a> - The response's
--   http status code.
newListIdentityProviderConfigsResponse :: Int -> ListIdentityProviderConfigsResponse

-- | The identity provider configurations for the cluster.
listIdentityProviderConfigsResponse_identityProviderConfigs :: Lens' ListIdentityProviderConfigsResponse (Maybe [IdentityProviderConfig])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListIdentityProviderConfigsResponse</tt> where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value.
listIdentityProviderConfigsResponse_nextToken :: Lens' ListIdentityProviderConfigsResponse (Maybe Text)

-- | The response's http status code.
listIdentityProviderConfigsResponse_httpStatus :: Lens' ListIdentityProviderConfigsResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigs
instance GHC.Show.Show Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigs
instance GHC.Read.Read Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigs
instance GHC.Classes.Eq Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigs
instance GHC.Generics.Generic Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigsResponse
instance GHC.Show.Show Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigsResponse
instance GHC.Read.Read Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigsResponse
instance GHC.Classes.Eq Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigs
instance Control.DeepSeq.NFData Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigs
instance Data.Hashable.Class.Hashable Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigs
instance Control.DeepSeq.NFData Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigs
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigs
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigs
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.ListIdentityProviderConfigs.ListIdentityProviderConfigs


-- | Lists the Fargate profiles associated with the specified cluster in
--   your Amazon Web Services account in the specified Region.
--   
--   This operation returns paginated results.
module Network.AWS.EKS.ListFargateProfiles

-- | <i>See:</i> <a>newListFargateProfiles</a> smart constructor.
data ListFargateProfiles
ListFargateProfiles' :: Maybe Text -> Maybe Natural -> Text -> ListFargateProfiles

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListFargateProfiles</tt> request where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
[$sel:nextToken:ListFargateProfiles'] :: ListFargateProfiles -> Maybe Text

-- | The maximum number of Fargate profile results returned by
--   <tt>ListFargateProfiles</tt> in paginated output. When you use this
--   parameter, <tt>ListFargateProfiles</tt> returns only
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListFargateProfiles</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListFargateProfiles</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
[$sel:maxResults:ListFargateProfiles'] :: ListFargateProfiles -> Maybe Natural

-- | The name of the Amazon EKS cluster that you would like to list Fargate
--   profiles in.
[$sel:clusterName:ListFargateProfiles'] :: ListFargateProfiles -> Text

-- | Create a value of <a>ListFargateProfiles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFargateProfiles'</a>,
--   <a>listFargateProfiles_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListFargateProfiles</tt>
--   request where <tt>maxResults</tt> was used and the results exceeded
--   the value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:maxResults:ListFargateProfiles'</a>,
--   <a>listFargateProfiles_maxResults</a> - The maximum number of Fargate
--   profile results returned by <tt>ListFargateProfiles</tt> in paginated
--   output. When you use this parameter, <tt>ListFargateProfiles</tt>
--   returns only <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListFargateProfiles</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListFargateProfiles</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:clusterName:ListFargateProfiles'</a>,
--   <a>listFargateProfiles_clusterName</a> - The name of the Amazon EKS
--   cluster that you would like to list Fargate profiles in.
newListFargateProfiles :: Text -> ListFargateProfiles

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListFargateProfiles</tt> request where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listFargateProfiles_nextToken :: Lens' ListFargateProfiles (Maybe Text)

-- | The maximum number of Fargate profile results returned by
--   <tt>ListFargateProfiles</tt> in paginated output. When you use this
--   parameter, <tt>ListFargateProfiles</tt> returns only
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListFargateProfiles</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListFargateProfiles</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
listFargateProfiles_maxResults :: Lens' ListFargateProfiles (Maybe Natural)

-- | The name of the Amazon EKS cluster that you would like to list Fargate
--   profiles in.
listFargateProfiles_clusterName :: Lens' ListFargateProfiles Text

-- | <i>See:</i> <a>newListFargateProfilesResponse</a> smart constructor.
data ListFargateProfilesResponse
ListFargateProfilesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListFargateProfilesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListFargateProfiles</tt> request. When the results of a
--   <tt>ListFargateProfiles</tt> request exceed <tt>maxResults</tt>, you
--   can use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListFargateProfilesResponse'] :: ListFargateProfilesResponse -> Maybe Text

-- | A list of all of the Fargate profiles associated with the specified
--   cluster.
[$sel:fargateProfileNames:ListFargateProfilesResponse'] :: ListFargateProfilesResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListFargateProfilesResponse'] :: ListFargateProfilesResponse -> Int

-- | Create a value of <a>ListFargateProfilesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFargateProfiles'</a>,
--   <a>listFargateProfilesResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListFargateProfiles</tt> request.
--   When the results of a <tt>ListFargateProfiles</tt> request exceed
--   <tt>maxResults</tt>, you can use this value to retrieve the next page
--   of results. This value is <tt>null</tt> when there are no more results
--   to return.
--   
--   <a>$sel:fargateProfileNames:ListFargateProfilesResponse'</a>,
--   <a>listFargateProfilesResponse_fargateProfileNames</a> - A list of all
--   of the Fargate profiles associated with the specified cluster.
--   
--   <a>$sel:httpStatus:ListFargateProfilesResponse'</a>,
--   <a>listFargateProfilesResponse_httpStatus</a> - The response's http
--   status code.
newListFargateProfilesResponse :: Int -> ListFargateProfilesResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListFargateProfiles</tt> request. When the results of a
--   <tt>ListFargateProfiles</tt> request exceed <tt>maxResults</tt>, you
--   can use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listFargateProfilesResponse_nextToken :: Lens' ListFargateProfilesResponse (Maybe Text)

-- | A list of all of the Fargate profiles associated with the specified
--   cluster.
listFargateProfilesResponse_fargateProfileNames :: Lens' ListFargateProfilesResponse (Maybe [Text])

-- | The response's http status code.
listFargateProfilesResponse_httpStatus :: Lens' ListFargateProfilesResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.ListFargateProfiles.ListFargateProfiles
instance GHC.Show.Show Network.AWS.EKS.ListFargateProfiles.ListFargateProfiles
instance GHC.Read.Read Network.AWS.EKS.ListFargateProfiles.ListFargateProfiles
instance GHC.Classes.Eq Network.AWS.EKS.ListFargateProfiles.ListFargateProfiles
instance GHC.Generics.Generic Network.AWS.EKS.ListFargateProfiles.ListFargateProfilesResponse
instance GHC.Show.Show Network.AWS.EKS.ListFargateProfiles.ListFargateProfilesResponse
instance GHC.Read.Read Network.AWS.EKS.ListFargateProfiles.ListFargateProfilesResponse
instance GHC.Classes.Eq Network.AWS.EKS.ListFargateProfiles.ListFargateProfilesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.ListFargateProfiles.ListFargateProfiles
instance Control.DeepSeq.NFData Network.AWS.EKS.ListFargateProfiles.ListFargateProfilesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.EKS.ListFargateProfiles.ListFargateProfiles
instance Data.Hashable.Class.Hashable Network.AWS.EKS.ListFargateProfiles.ListFargateProfiles
instance Control.DeepSeq.NFData Network.AWS.EKS.ListFargateProfiles.ListFargateProfiles
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.ListFargateProfiles.ListFargateProfiles
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.ListFargateProfiles.ListFargateProfiles
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.ListFargateProfiles.ListFargateProfiles


-- | Lists the Amazon EKS clusters in your Amazon Web Services account in
--   the specified Region.
--   
--   This operation returns paginated results.
module Network.AWS.EKS.ListClusters

-- | <i>See:</i> <a>newListClusters</a> smart constructor.
data ListClusters
ListClusters' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> ListClusters

-- | Indicates whether connected clusters are included in the returned
--   list. Default value is 'ALL'.
[$sel:include:ListClusters'] :: ListClusters -> Maybe [Text]

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListClusters</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
[$sel:nextToken:ListClusters'] :: ListClusters -> Maybe Text

-- | The maximum number of cluster results returned by
--   <tt>ListClusters</tt> in paginated output. When you use this
--   parameter, <tt>ListClusters</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListClusters</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListClusters</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
[$sel:maxResults:ListClusters'] :: ListClusters -> Maybe Natural

-- | Create a value of <a>ListClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:include:ListClusters'</a>, <a>listClusters_include</a> -
--   Indicates whether connected clusters are included in the returned
--   list. Default value is 'ALL'.
--   
--   <a>$sel:nextToken:ListClusters'</a>, <a>listClusters_nextToken</a> -
--   The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListClusters</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:maxResults:ListClusters'</a>, <a>listClusters_maxResults</a> -
--   The maximum number of cluster results returned by
--   <tt>ListClusters</tt> in paginated output. When you use this
--   parameter, <tt>ListClusters</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListClusters</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListClusters</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
newListClusters :: ListClusters

-- | Indicates whether connected clusters are included in the returned
--   list. Default value is 'ALL'.
listClusters_include :: Lens' ListClusters (Maybe [Text])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListClusters</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listClusters_nextToken :: Lens' ListClusters (Maybe Text)

-- | The maximum number of cluster results returned by
--   <tt>ListClusters</tt> in paginated output. When you use this
--   parameter, <tt>ListClusters</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListClusters</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListClusters</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
listClusters_maxResults :: Lens' ListClusters (Maybe Natural)

-- | <i>See:</i> <a>newListClustersResponse</a> smart constructor.
data ListClustersResponse
ListClustersResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListClustersResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListClusters</tt> request. When the results of a
--   <tt>ListClusters</tt> request exceed <tt>maxResults</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
[$sel:nextToken:ListClustersResponse'] :: ListClustersResponse -> Maybe Text

-- | A list of all of the clusters for your account in the specified
--   Region.
[$sel:clusters:ListClustersResponse'] :: ListClustersResponse -> Maybe [Text]

-- | The response's http status code.
[$sel:httpStatus:ListClustersResponse'] :: ListClustersResponse -> Int

-- | Create a value of <a>ListClustersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusters'</a>,
--   <a>listClustersResponse_nextToken</a> - The <tt>nextToken</tt> value
--   to include in a future <tt>ListClusters</tt> request. When the results
--   of a <tt>ListClusters</tt> request exceed <tt>maxResults</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   <a>$sel:clusters:ListClustersResponse'</a>,
--   <a>listClustersResponse_clusters</a> - A list of all of the clusters
--   for your account in the specified Region.
--   
--   <a>$sel:httpStatus:ListClustersResponse'</a>,
--   <a>listClustersResponse_httpStatus</a> - The response's http status
--   code.
newListClustersResponse :: Int -> ListClustersResponse

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListClusters</tt> request. When the results of a
--   <tt>ListClusters</tt> request exceed <tt>maxResults</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listClustersResponse_nextToken :: Lens' ListClustersResponse (Maybe Text)

-- | A list of all of the clusters for your account in the specified
--   Region.
listClustersResponse_clusters :: Lens' ListClustersResponse (Maybe [Text])

-- | The response's http status code.
listClustersResponse_httpStatus :: Lens' ListClustersResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.ListClusters.ListClusters
instance GHC.Show.Show Network.AWS.EKS.ListClusters.ListClusters
instance GHC.Read.Read Network.AWS.EKS.ListClusters.ListClusters
instance GHC.Classes.Eq Network.AWS.EKS.ListClusters.ListClusters
instance GHC.Generics.Generic Network.AWS.EKS.ListClusters.ListClustersResponse
instance GHC.Show.Show Network.AWS.EKS.ListClusters.ListClustersResponse
instance GHC.Read.Read Network.AWS.EKS.ListClusters.ListClustersResponse
instance GHC.Classes.Eq Network.AWS.EKS.ListClusters.ListClustersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.ListClusters.ListClusters
instance Control.DeepSeq.NFData Network.AWS.EKS.ListClusters.ListClustersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.EKS.ListClusters.ListClusters
instance Data.Hashable.Class.Hashable Network.AWS.EKS.ListClusters.ListClusters
instance Control.DeepSeq.NFData Network.AWS.EKS.ListClusters.ListClusters
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.ListClusters.ListClusters
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.ListClusters.ListClusters
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.ListClusters.ListClusters


-- | Lists the available add-ons.
--   
--   This operation returns paginated results.
module Network.AWS.EKS.ListAddons

-- | <i>See:</i> <a>newListAddons</a> smart constructor.
data ListAddons
ListAddons' :: Maybe Text -> Maybe Natural -> Text -> ListAddons

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListAddonsRequest</tt> where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
[$sel:nextToken:ListAddons'] :: ListAddons -> Maybe Text

-- | The maximum number of add-on results returned by
--   <tt>ListAddonsRequest</tt> in paginated output. When you use this
--   parameter, <tt>ListAddonsRequest</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListAddonsRequest</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListAddonsRequest</tt> returns up to 100
--   results and a <tt>nextToken</tt> value, if applicable.
[$sel:maxResults:ListAddons'] :: ListAddons -> Maybe Natural

-- | The name of the cluster.
[$sel:clusterName:ListAddons'] :: ListAddons -> Text

-- | Create a value of <a>ListAddons</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAddons'</a>, <a>listAddons_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListAddonsRequest</tt> where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:maxResults:ListAddons'</a>, <a>listAddons_maxResults</a> - The
--   maximum number of add-on results returned by
--   <tt>ListAddonsRequest</tt> in paginated output. When you use this
--   parameter, <tt>ListAddonsRequest</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListAddonsRequest</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListAddonsRequest</tt> returns up to 100
--   results and a <tt>nextToken</tt> value, if applicable.
--   
--   <a>$sel:clusterName:ListAddons'</a>, <a>listAddons_clusterName</a> -
--   The name of the cluster.
newListAddons :: Text -> ListAddons

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListAddonsRequest</tt> where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listAddons_nextToken :: Lens' ListAddons (Maybe Text)

-- | The maximum number of add-on results returned by
--   <tt>ListAddonsRequest</tt> in paginated output. When you use this
--   parameter, <tt>ListAddonsRequest</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListAddonsRequest</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListAddonsRequest</tt> returns up to 100
--   results and a <tt>nextToken</tt> value, if applicable.
listAddons_maxResults :: Lens' ListAddons (Maybe Natural)

-- | The name of the cluster.
listAddons_clusterName :: Lens' ListAddons Text

-- | <i>See:</i> <a>newListAddonsResponse</a> smart constructor.
data ListAddonsResponse
ListAddonsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListAddonsResponse

-- | A list of available add-ons.
[$sel:addons:ListAddonsResponse'] :: ListAddonsResponse -> Maybe [Text]

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListAddonsResponse</tt> where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
[$sel:nextToken:ListAddonsResponse'] :: ListAddonsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListAddonsResponse'] :: ListAddonsResponse -> Int

-- | Create a value of <a>ListAddonsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addons:ListAddonsResponse'</a>,
--   <a>listAddonsResponse_addons</a> - A list of available add-ons.
--   
--   <a>$sel:nextToken:ListAddons'</a>, <a>listAddonsResponse_nextToken</a>
--   - The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListAddonsResponse</tt> where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:httpStatus:ListAddonsResponse'</a>,
--   <a>listAddonsResponse_httpStatus</a> - The response's http status
--   code.
newListAddonsResponse :: Int -> ListAddonsResponse

-- | A list of available add-ons.
listAddonsResponse_addons :: Lens' ListAddonsResponse (Maybe [Text])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListAddonsResponse</tt> where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listAddonsResponse_nextToken :: Lens' ListAddonsResponse (Maybe Text)

-- | The response's http status code.
listAddonsResponse_httpStatus :: Lens' ListAddonsResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.ListAddons.ListAddons
instance GHC.Show.Show Network.AWS.EKS.ListAddons.ListAddons
instance GHC.Read.Read Network.AWS.EKS.ListAddons.ListAddons
instance GHC.Classes.Eq Network.AWS.EKS.ListAddons.ListAddons
instance GHC.Generics.Generic Network.AWS.EKS.ListAddons.ListAddonsResponse
instance GHC.Show.Show Network.AWS.EKS.ListAddons.ListAddonsResponse
instance GHC.Read.Read Network.AWS.EKS.ListAddons.ListAddonsResponse
instance GHC.Classes.Eq Network.AWS.EKS.ListAddons.ListAddonsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.ListAddons.ListAddons
instance Control.DeepSeq.NFData Network.AWS.EKS.ListAddons.ListAddonsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.EKS.ListAddons.ListAddons
instance Data.Hashable.Class.Hashable Network.AWS.EKS.ListAddons.ListAddons
instance Control.DeepSeq.NFData Network.AWS.EKS.ListAddons.ListAddons
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.ListAddons.ListAddons
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.ListAddons.ListAddons
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.ListAddons.ListAddons


-- | Disassociates an identity provider configuration from a cluster. If
--   you disassociate an identity provider from your cluster, users
--   included in the provider can no longer access the cluster. However,
--   you can still access the cluster with Amazon Web Services IAM users.
module Network.AWS.EKS.DisassociateIdentityProviderConfig

-- | <i>See:</i> <a>newDisassociateIdentityProviderConfig</a> smart
--   constructor.
data DisassociateIdentityProviderConfig
DisassociateIdentityProviderConfig' :: Maybe Text -> Text -> IdentityProviderConfig -> DisassociateIdentityProviderConfig

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:DisassociateIdentityProviderConfig'] :: DisassociateIdentityProviderConfig -> Maybe Text

-- | The name of the cluster to disassociate an identity provider from.
[$sel:clusterName:DisassociateIdentityProviderConfig'] :: DisassociateIdentityProviderConfig -> Text

-- | An object that represents an identity provider configuration.
[$sel:identityProviderConfig:DisassociateIdentityProviderConfig'] :: DisassociateIdentityProviderConfig -> IdentityProviderConfig

-- | Create a value of <a>DisassociateIdentityProviderConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:DisassociateIdentityProviderConfig'</a>,
--   <a>disassociateIdentityProviderConfig_clientRequestToken</a> - A
--   unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
--   
--   <a>$sel:clusterName:DisassociateIdentityProviderConfig'</a>,
--   <a>disassociateIdentityProviderConfig_clusterName</a> - The name of
--   the cluster to disassociate an identity provider from.
--   
--   
--   <a>$sel:identityProviderConfig:DisassociateIdentityProviderConfig'</a>,
--   <a>disassociateIdentityProviderConfig_identityProviderConfig</a> - An
--   object that represents an identity provider configuration.
newDisassociateIdentityProviderConfig :: Text -> IdentityProviderConfig -> DisassociateIdentityProviderConfig

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
disassociateIdentityProviderConfig_clientRequestToken :: Lens' DisassociateIdentityProviderConfig (Maybe Text)

-- | The name of the cluster to disassociate an identity provider from.
disassociateIdentityProviderConfig_clusterName :: Lens' DisassociateIdentityProviderConfig Text

-- | An object that represents an identity provider configuration.
disassociateIdentityProviderConfig_identityProviderConfig :: Lens' DisassociateIdentityProviderConfig IdentityProviderConfig

-- | <i>See:</i> <a>newDisassociateIdentityProviderConfigResponse</a> smart
--   constructor.
data DisassociateIdentityProviderConfigResponse
DisassociateIdentityProviderConfigResponse' :: Maybe Update -> Int -> DisassociateIdentityProviderConfigResponse
[$sel:update:DisassociateIdentityProviderConfigResponse'] :: DisassociateIdentityProviderConfigResponse -> Maybe Update

-- | The response's http status code.
[$sel:httpStatus:DisassociateIdentityProviderConfigResponse'] :: DisassociateIdentityProviderConfigResponse -> Int

-- | Create a value of <a>DisassociateIdentityProviderConfigResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:DisassociateIdentityProviderConfigResponse'</a>,
--   <a>disassociateIdentityProviderConfigResponse_update</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:DisassociateIdentityProviderConfigResponse'</a>,
--   <a>disassociateIdentityProviderConfigResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateIdentityProviderConfigResponse :: Int -> DisassociateIdentityProviderConfigResponse

-- | Undocumented member.
disassociateIdentityProviderConfigResponse_update :: Lens' DisassociateIdentityProviderConfigResponse (Maybe Update)

-- | The response's http status code.
disassociateIdentityProviderConfigResponse_httpStatus :: Lens' DisassociateIdentityProviderConfigResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfig
instance GHC.Show.Show Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfig
instance GHC.Read.Read Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfig
instance GHC.Classes.Eq Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfig
instance GHC.Generics.Generic Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfigResponse
instance GHC.Show.Show Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfigResponse
instance GHC.Read.Read Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfigResponse
instance GHC.Classes.Eq Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DisassociateIdentityProviderConfig.DisassociateIdentityProviderConfig


-- | Returns descriptive information about an update against your Amazon
--   EKS cluster or associated managed node group.
--   
--   When the status of the update is <tt>Succeeded</tt>, the update is
--   complete. If an update fails, the status is <tt>Failed</tt>, and an
--   error detail explains the reason for the failure.
module Network.AWS.EKS.DescribeUpdate

-- | <i>See:</i> <a>newDescribeUpdate</a> smart constructor.
data DescribeUpdate
DescribeUpdate' :: Maybe Text -> Maybe Text -> Text -> Text -> DescribeUpdate

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
[$sel:addonName:DescribeUpdate'] :: DescribeUpdate -> Maybe Text

-- | The name of the Amazon EKS node group associated with the update.
[$sel:nodegroupName:DescribeUpdate'] :: DescribeUpdate -> Maybe Text

-- | The name of the Amazon EKS cluster associated with the update.
[$sel:name:DescribeUpdate'] :: DescribeUpdate -> Text

-- | The ID of the update to describe.
[$sel:updateId:DescribeUpdate'] :: DescribeUpdate -> Text

-- | Create a value of <a>DescribeUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonName:DescribeUpdate'</a>, <a>describeUpdate_addonName</a>
--   - The name of the add-on. The name must match one of the names
--   returned by <a>ListAddons</a> .
--   
--   <a>$sel:nodegroupName:DescribeUpdate'</a>,
--   <a>describeUpdate_nodegroupName</a> - The name of the Amazon EKS node
--   group associated with the update.
--   
--   <a>$sel:name:DescribeUpdate'</a>, <a>describeUpdate_name</a> - The
--   name of the Amazon EKS cluster associated with the update.
--   
--   <a>$sel:updateId:DescribeUpdate'</a>, <a>describeUpdate_updateId</a> -
--   The ID of the update to describe.
newDescribeUpdate :: Text -> Text -> DescribeUpdate

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
describeUpdate_addonName :: Lens' DescribeUpdate (Maybe Text)

-- | The name of the Amazon EKS node group associated with the update.
describeUpdate_nodegroupName :: Lens' DescribeUpdate (Maybe Text)

-- | The name of the Amazon EKS cluster associated with the update.
describeUpdate_name :: Lens' DescribeUpdate Text

-- | The ID of the update to describe.
describeUpdate_updateId :: Lens' DescribeUpdate Text

-- | <i>See:</i> <a>newDescribeUpdateResponse</a> smart constructor.
data DescribeUpdateResponse
DescribeUpdateResponse' :: Maybe Update -> Int -> DescribeUpdateResponse

-- | The full description of the specified update.
[$sel:update:DescribeUpdateResponse'] :: DescribeUpdateResponse -> Maybe Update

-- | The response's http status code.
[$sel:httpStatus:DescribeUpdateResponse'] :: DescribeUpdateResponse -> Int

-- | Create a value of <a>DescribeUpdateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:DescribeUpdateResponse'</a>,
--   <a>describeUpdateResponse_update</a> - The full description of the
--   specified update.
--   
--   <a>$sel:httpStatus:DescribeUpdateResponse'</a>,
--   <a>describeUpdateResponse_httpStatus</a> - The response's http status
--   code.
newDescribeUpdateResponse :: Int -> DescribeUpdateResponse

-- | The full description of the specified update.
describeUpdateResponse_update :: Lens' DescribeUpdateResponse (Maybe Update)

-- | The response's http status code.
describeUpdateResponse_httpStatus :: Lens' DescribeUpdateResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DescribeUpdate.DescribeUpdate
instance GHC.Show.Show Network.AWS.EKS.DescribeUpdate.DescribeUpdate
instance GHC.Read.Read Network.AWS.EKS.DescribeUpdate.DescribeUpdate
instance GHC.Classes.Eq Network.AWS.EKS.DescribeUpdate.DescribeUpdate
instance GHC.Generics.Generic Network.AWS.EKS.DescribeUpdate.DescribeUpdateResponse
instance GHC.Show.Show Network.AWS.EKS.DescribeUpdate.DescribeUpdateResponse
instance GHC.Read.Read Network.AWS.EKS.DescribeUpdate.DescribeUpdateResponse
instance GHC.Classes.Eq Network.AWS.EKS.DescribeUpdate.DescribeUpdateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DescribeUpdate.DescribeUpdate
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeUpdate.DescribeUpdateResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DescribeUpdate.DescribeUpdate
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeUpdate.DescribeUpdate
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DescribeUpdate.DescribeUpdate
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DescribeUpdate.DescribeUpdate
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DescribeUpdate.DescribeUpdate


-- | Returns descriptive information about an Amazon EKS node group.
module Network.AWS.EKS.DescribeNodegroup

-- | <i>See:</i> <a>newDescribeNodegroup</a> smart constructor.
data DescribeNodegroup
DescribeNodegroup' :: Text -> Text -> DescribeNodegroup

-- | The name of the Amazon EKS cluster associated with the node group.
[$sel:clusterName:DescribeNodegroup'] :: DescribeNodegroup -> Text

-- | The name of the node group to describe.
[$sel:nodegroupName:DescribeNodegroup'] :: DescribeNodegroup -> Text

-- | Create a value of <a>DescribeNodegroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DescribeNodegroup'</a>,
--   <a>describeNodegroup_clusterName</a> - The name of the Amazon EKS
--   cluster associated with the node group.
--   
--   <a>$sel:nodegroupName:DescribeNodegroup'</a>,
--   <a>describeNodegroup_nodegroupName</a> - The name of the node group to
--   describe.
newDescribeNodegroup :: Text -> Text -> DescribeNodegroup

-- | The name of the Amazon EKS cluster associated with the node group.
describeNodegroup_clusterName :: Lens' DescribeNodegroup Text

-- | The name of the node group to describe.
describeNodegroup_nodegroupName :: Lens' DescribeNodegroup Text

-- | <i>See:</i> <a>newDescribeNodegroupResponse</a> smart constructor.
data DescribeNodegroupResponse
DescribeNodegroupResponse' :: Maybe Nodegroup -> Int -> DescribeNodegroupResponse

-- | The full description of your node group.
[$sel:nodegroup:DescribeNodegroupResponse'] :: DescribeNodegroupResponse -> Maybe Nodegroup

-- | The response's http status code.
[$sel:httpStatus:DescribeNodegroupResponse'] :: DescribeNodegroupResponse -> Int

-- | Create a value of <a>DescribeNodegroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodegroup:DescribeNodegroupResponse'</a>,
--   <a>describeNodegroupResponse_nodegroup</a> - The full description of
--   your node group.
--   
--   <a>$sel:httpStatus:DescribeNodegroupResponse'</a>,
--   <a>describeNodegroupResponse_httpStatus</a> - The response's http
--   status code.
newDescribeNodegroupResponse :: Int -> DescribeNodegroupResponse

-- | The full description of your node group.
describeNodegroupResponse_nodegroup :: Lens' DescribeNodegroupResponse (Maybe Nodegroup)

-- | The response's http status code.
describeNodegroupResponse_httpStatus :: Lens' DescribeNodegroupResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DescribeNodegroup.DescribeNodegroup
instance GHC.Show.Show Network.AWS.EKS.DescribeNodegroup.DescribeNodegroup
instance GHC.Read.Read Network.AWS.EKS.DescribeNodegroup.DescribeNodegroup
instance GHC.Classes.Eq Network.AWS.EKS.DescribeNodegroup.DescribeNodegroup
instance GHC.Generics.Generic Network.AWS.EKS.DescribeNodegroup.DescribeNodegroupResponse
instance GHC.Show.Show Network.AWS.EKS.DescribeNodegroup.DescribeNodegroupResponse
instance GHC.Read.Read Network.AWS.EKS.DescribeNodegroup.DescribeNodegroupResponse
instance GHC.Classes.Eq Network.AWS.EKS.DescribeNodegroup.DescribeNodegroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DescribeNodegroup.DescribeNodegroup
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeNodegroup.DescribeNodegroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DescribeNodegroup.DescribeNodegroup
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeNodegroup.DescribeNodegroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DescribeNodegroup.DescribeNodegroup
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DescribeNodegroup.DescribeNodegroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DescribeNodegroup.DescribeNodegroup


-- | Returns descriptive information about an identity provider
--   configuration.
module Network.AWS.EKS.DescribeIdentityProviderConfig

-- | <i>See:</i> <a>newDescribeIdentityProviderConfig</a> smart
--   constructor.
data DescribeIdentityProviderConfig
DescribeIdentityProviderConfig' :: Text -> IdentityProviderConfig -> DescribeIdentityProviderConfig

-- | The cluster name that the identity provider configuration is
--   associated to.
[$sel:clusterName:DescribeIdentityProviderConfig'] :: DescribeIdentityProviderConfig -> Text

-- | An object that represents an identity provider configuration.
[$sel:identityProviderConfig:DescribeIdentityProviderConfig'] :: DescribeIdentityProviderConfig -> IdentityProviderConfig

-- | Create a value of <a>DescribeIdentityProviderConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DescribeIdentityProviderConfig'</a>,
--   <a>describeIdentityProviderConfig_clusterName</a> - The cluster name
--   that the identity provider configuration is associated to.
--   
--   <a>$sel:identityProviderConfig:DescribeIdentityProviderConfig'</a>,
--   <a>describeIdentityProviderConfig_identityProviderConfig</a> - An
--   object that represents an identity provider configuration.
newDescribeIdentityProviderConfig :: Text -> IdentityProviderConfig -> DescribeIdentityProviderConfig

-- | The cluster name that the identity provider configuration is
--   associated to.
describeIdentityProviderConfig_clusterName :: Lens' DescribeIdentityProviderConfig Text

-- | An object that represents an identity provider configuration.
describeIdentityProviderConfig_identityProviderConfig :: Lens' DescribeIdentityProviderConfig IdentityProviderConfig

-- | <i>See:</i> <a>newDescribeIdentityProviderConfigResponse</a> smart
--   constructor.
data DescribeIdentityProviderConfigResponse
DescribeIdentityProviderConfigResponse' :: Maybe IdentityProviderConfigResponse -> Int -> DescribeIdentityProviderConfigResponse

-- | The object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
[$sel:identityProviderConfig:DescribeIdentityProviderConfigResponse'] :: DescribeIdentityProviderConfigResponse -> Maybe IdentityProviderConfigResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeIdentityProviderConfigResponse'] :: DescribeIdentityProviderConfigResponse -> Int

-- | Create a value of <a>DescribeIdentityProviderConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityProviderConfig:DescribeIdentityProviderConfig'</a>,
--   <a>describeIdentityProviderConfigResponse_identityProviderConfig</a> -
--   The object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
--   
--   <a>$sel:httpStatus:DescribeIdentityProviderConfigResponse'</a>,
--   <a>describeIdentityProviderConfigResponse_httpStatus</a> - The
--   response's http status code.
newDescribeIdentityProviderConfigResponse :: Int -> DescribeIdentityProviderConfigResponse

-- | The object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
describeIdentityProviderConfigResponse_identityProviderConfig :: Lens' DescribeIdentityProviderConfigResponse (Maybe IdentityProviderConfigResponse)

-- | The response's http status code.
describeIdentityProviderConfigResponse_httpStatus :: Lens' DescribeIdentityProviderConfigResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfig
instance GHC.Show.Show Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfig
instance GHC.Read.Read Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfig
instance GHC.Classes.Eq Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfig
instance GHC.Generics.Generic Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfigResponse
instance GHC.Show.Show Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfigResponse
instance GHC.Read.Read Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfigResponse
instance GHC.Classes.Eq Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DescribeIdentityProviderConfig.DescribeIdentityProviderConfig


-- | Returns descriptive information about an Fargate profile.
module Network.AWS.EKS.DescribeFargateProfile

-- | <i>See:</i> <a>newDescribeFargateProfile</a> smart constructor.
data DescribeFargateProfile
DescribeFargateProfile' :: Text -> Text -> DescribeFargateProfile

-- | The name of the Amazon EKS cluster associated with the Fargate
--   profile.
[$sel:clusterName:DescribeFargateProfile'] :: DescribeFargateProfile -> Text

-- | The name of the Fargate profile to describe.
[$sel:fargateProfileName:DescribeFargateProfile'] :: DescribeFargateProfile -> Text

-- | Create a value of <a>DescribeFargateProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DescribeFargateProfile'</a>,
--   <a>describeFargateProfile_clusterName</a> - The name of the Amazon EKS
--   cluster associated with the Fargate profile.
--   
--   <a>$sel:fargateProfileName:DescribeFargateProfile'</a>,
--   <a>describeFargateProfile_fargateProfileName</a> - The name of the
--   Fargate profile to describe.
newDescribeFargateProfile :: Text -> Text -> DescribeFargateProfile

-- | The name of the Amazon EKS cluster associated with the Fargate
--   profile.
describeFargateProfile_clusterName :: Lens' DescribeFargateProfile Text

-- | The name of the Fargate profile to describe.
describeFargateProfile_fargateProfileName :: Lens' DescribeFargateProfile Text

-- | <i>See:</i> <a>newDescribeFargateProfileResponse</a> smart
--   constructor.
data DescribeFargateProfileResponse
DescribeFargateProfileResponse' :: Maybe FargateProfile -> Int -> DescribeFargateProfileResponse

-- | The full description of your Fargate profile.
[$sel:fargateProfile:DescribeFargateProfileResponse'] :: DescribeFargateProfileResponse -> Maybe FargateProfile

-- | The response's http status code.
[$sel:httpStatus:DescribeFargateProfileResponse'] :: DescribeFargateProfileResponse -> Int

-- | Create a value of <a>DescribeFargateProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fargateProfile:DescribeFargateProfileResponse'</a>,
--   <a>describeFargateProfileResponse_fargateProfile</a> - The full
--   description of your Fargate profile.
--   
--   <a>$sel:httpStatus:DescribeFargateProfileResponse'</a>,
--   <a>describeFargateProfileResponse_httpStatus</a> - The response's http
--   status code.
newDescribeFargateProfileResponse :: Int -> DescribeFargateProfileResponse

-- | The full description of your Fargate profile.
describeFargateProfileResponse_fargateProfile :: Lens' DescribeFargateProfileResponse (Maybe FargateProfile)

-- | The response's http status code.
describeFargateProfileResponse_httpStatus :: Lens' DescribeFargateProfileResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfile
instance GHC.Show.Show Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfile
instance GHC.Read.Read Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfile
instance GHC.Classes.Eq Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfile
instance GHC.Generics.Generic Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfileResponse
instance GHC.Show.Show Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfileResponse
instance GHC.Read.Read Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfileResponse
instance GHC.Classes.Eq Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfile
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfile
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DescribeFargateProfile.DescribeFargateProfile


-- | Returns descriptive information about an Amazon EKS cluster.
--   
--   The API server endpoint and certificate authority data returned by
--   this operation are required for <tt>kubelet</tt> and <tt>kubectl</tt>
--   to communicate with your Kubernetes API server. For more information,
--   see <a>Create a kubeconfig for Amazon EKS</a>.
--   
--   The API server endpoint and certificate authority data aren't
--   available until the cluster reaches the <tt>ACTIVE</tt> state.
module Network.AWS.EKS.DescribeCluster

-- | <i>See:</i> <a>newDescribeCluster</a> smart constructor.
data DescribeCluster
DescribeCluster' :: Text -> DescribeCluster

-- | The name of the cluster to describe.
[$sel:name:DescribeCluster'] :: DescribeCluster -> Text

-- | Create a value of <a>DescribeCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeCluster'</a>, <a>describeCluster_name</a> - The
--   name of the cluster to describe.
newDescribeCluster :: Text -> DescribeCluster

-- | The name of the cluster to describe.
describeCluster_name :: Lens' DescribeCluster Text

-- | <i>See:</i> <a>newDescribeClusterResponse</a> smart constructor.
data DescribeClusterResponse
DescribeClusterResponse' :: Maybe Cluster -> Int -> DescribeClusterResponse

-- | The full description of your specified cluster.
[$sel:cluster:DescribeClusterResponse'] :: DescribeClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:DescribeClusterResponse'] :: DescribeClusterResponse -> Int

-- | Create a value of <a>DescribeClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_cluster</a> - The full description of your
--   specified cluster.
--   
--   <a>$sel:httpStatus:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_httpStatus</a> - The response's http status
--   code.
newDescribeClusterResponse :: Int -> DescribeClusterResponse

-- | The full description of your specified cluster.
describeClusterResponse_cluster :: Lens' DescribeClusterResponse (Maybe Cluster)

-- | The response's http status code.
describeClusterResponse_httpStatus :: Lens' DescribeClusterResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DescribeCluster.DescribeCluster
instance GHC.Show.Show Network.AWS.EKS.DescribeCluster.DescribeCluster
instance GHC.Read.Read Network.AWS.EKS.DescribeCluster.DescribeCluster
instance GHC.Classes.Eq Network.AWS.EKS.DescribeCluster.DescribeCluster
instance GHC.Generics.Generic Network.AWS.EKS.DescribeCluster.DescribeClusterResponse
instance GHC.Show.Show Network.AWS.EKS.DescribeCluster.DescribeClusterResponse
instance GHC.Read.Read Network.AWS.EKS.DescribeCluster.DescribeClusterResponse
instance GHC.Classes.Eq Network.AWS.EKS.DescribeCluster.DescribeClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DescribeCluster.DescribeCluster
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeCluster.DescribeClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DescribeCluster.DescribeCluster
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeCluster.DescribeCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DescribeCluster.DescribeCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DescribeCluster.DescribeCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DescribeCluster.DescribeCluster


-- | Describes the Kubernetes versions that the add-on can be used with.
--   
--   This operation returns paginated results.
module Network.AWS.EKS.DescribeAddonVersions

-- | <i>See:</i> <a>newDescribeAddonVersions</a> smart constructor.
data DescribeAddonVersions
DescribeAddonVersions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeAddonVersions

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
[$sel:addonName:DescribeAddonVersions'] :: DescribeAddonVersions -> Maybe Text

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeAddonVersionsRequest</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
[$sel:nextToken:DescribeAddonVersions'] :: DescribeAddonVersions -> Maybe Text

-- | The Kubernetes versions that the add-on can be used with.
[$sel:kubernetesVersion:DescribeAddonVersions'] :: DescribeAddonVersions -> Maybe Text

-- | The maximum number of results to return.
[$sel:maxResults:DescribeAddonVersions'] :: DescribeAddonVersions -> Maybe Natural

-- | Create a value of <a>DescribeAddonVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonName:DescribeAddonVersions'</a>,
--   <a>describeAddonVersions_addonName</a> - The name of the add-on. The
--   name must match one of the names returned by <a>ListAddons</a> .
--   
--   <a>$sel:nextToken:DescribeAddonVersions'</a>,
--   <a>describeAddonVersions_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated
--   <tt>DescribeAddonVersionsRequest</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:kubernetesVersion:DescribeAddonVersions'</a>,
--   <a>describeAddonVersions_kubernetesVersion</a> - The Kubernetes
--   versions that the add-on can be used with.
--   
--   <a>$sel:maxResults:DescribeAddonVersions'</a>,
--   <a>describeAddonVersions_maxResults</a> - The maximum number of
--   results to return.
newDescribeAddonVersions :: DescribeAddonVersions

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
describeAddonVersions_addonName :: Lens' DescribeAddonVersions (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeAddonVersionsRequest</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
describeAddonVersions_nextToken :: Lens' DescribeAddonVersions (Maybe Text)

-- | The Kubernetes versions that the add-on can be used with.
describeAddonVersions_kubernetesVersion :: Lens' DescribeAddonVersions (Maybe Text)

-- | The maximum number of results to return.
describeAddonVersions_maxResults :: Lens' DescribeAddonVersions (Maybe Natural)

-- | <i>See:</i> <a>newDescribeAddonVersionsResponse</a> smart constructor.
data DescribeAddonVersionsResponse
DescribeAddonVersionsResponse' :: Maybe [AddonInfo] -> Maybe Text -> Int -> DescribeAddonVersionsResponse

-- | The list of available versions with Kubernetes version compatibility.
[$sel:addons:DescribeAddonVersionsResponse'] :: DescribeAddonVersionsResponse -> Maybe [AddonInfo]

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeAddonVersionsResponse</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
[$sel:nextToken:DescribeAddonVersionsResponse'] :: DescribeAddonVersionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DescribeAddonVersionsResponse'] :: DescribeAddonVersionsResponse -> Int

-- | Create a value of <a>DescribeAddonVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addons:DescribeAddonVersionsResponse'</a>,
--   <a>describeAddonVersionsResponse_addons</a> - The list of available
--   versions with Kubernetes version compatibility.
--   
--   <a>$sel:nextToken:DescribeAddonVersions'</a>,
--   <a>describeAddonVersionsResponse_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeAddonVersionsResponse</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:httpStatus:DescribeAddonVersionsResponse'</a>,
--   <a>describeAddonVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAddonVersionsResponse :: Int -> DescribeAddonVersionsResponse

-- | The list of available versions with Kubernetes version compatibility.
describeAddonVersionsResponse_addons :: Lens' DescribeAddonVersionsResponse (Maybe [AddonInfo])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeAddonVersionsResponse</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
describeAddonVersionsResponse_nextToken :: Lens' DescribeAddonVersionsResponse (Maybe Text)

-- | The response's http status code.
describeAddonVersionsResponse_httpStatus :: Lens' DescribeAddonVersionsResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersions
instance GHC.Show.Show Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersions
instance GHC.Read.Read Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersions
instance GHC.Classes.Eq Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersions
instance GHC.Generics.Generic Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersionsResponse
instance GHC.Show.Show Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersionsResponse
instance GHC.Read.Read Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersionsResponse
instance GHC.Classes.Eq Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersions
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersionsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersions
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersions
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersions
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersions
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DescribeAddonVersions.DescribeAddonVersions


-- | Describes an Amazon EKS add-on.
module Network.AWS.EKS.DescribeAddon

-- | <i>See:</i> <a>newDescribeAddon</a> smart constructor.
data DescribeAddon
DescribeAddon' :: Text -> Text -> DescribeAddon

-- | The name of the cluster.
[$sel:clusterName:DescribeAddon'] :: DescribeAddon -> Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
[$sel:addonName:DescribeAddon'] :: DescribeAddon -> Text

-- | Create a value of <a>DescribeAddon</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DescribeAddon'</a>,
--   <a>describeAddon_clusterName</a> - The name of the cluster.
--   
--   <a>$sel:addonName:DescribeAddon'</a>, <a>describeAddon_addonName</a> -
--   The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
newDescribeAddon :: Text -> Text -> DescribeAddon

-- | The name of the cluster.
describeAddon_clusterName :: Lens' DescribeAddon Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
describeAddon_addonName :: Lens' DescribeAddon Text

-- | <i>See:</i> <a>newDescribeAddonResponse</a> smart constructor.
data DescribeAddonResponse
DescribeAddonResponse' :: Maybe Addon -> Int -> DescribeAddonResponse
[$sel:addon:DescribeAddonResponse'] :: DescribeAddonResponse -> Maybe Addon

-- | The response's http status code.
[$sel:httpStatus:DescribeAddonResponse'] :: DescribeAddonResponse -> Int

-- | Create a value of <a>DescribeAddonResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addon:DescribeAddonResponse'</a>,
--   <a>describeAddonResponse_addon</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeAddonResponse'</a>,
--   <a>describeAddonResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAddonResponse :: Int -> DescribeAddonResponse

-- | Undocumented member.
describeAddonResponse_addon :: Lens' DescribeAddonResponse (Maybe Addon)

-- | The response's http status code.
describeAddonResponse_httpStatus :: Lens' DescribeAddonResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DescribeAddon.DescribeAddon
instance GHC.Show.Show Network.AWS.EKS.DescribeAddon.DescribeAddon
instance GHC.Read.Read Network.AWS.EKS.DescribeAddon.DescribeAddon
instance GHC.Classes.Eq Network.AWS.EKS.DescribeAddon.DescribeAddon
instance GHC.Generics.Generic Network.AWS.EKS.DescribeAddon.DescribeAddonResponse
instance GHC.Show.Show Network.AWS.EKS.DescribeAddon.DescribeAddonResponse
instance GHC.Read.Read Network.AWS.EKS.DescribeAddon.DescribeAddonResponse
instance GHC.Classes.Eq Network.AWS.EKS.DescribeAddon.DescribeAddonResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DescribeAddon.DescribeAddon
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeAddon.DescribeAddonResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DescribeAddon.DescribeAddon
instance Control.DeepSeq.NFData Network.AWS.EKS.DescribeAddon.DescribeAddon
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DescribeAddon.DescribeAddon
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DescribeAddon.DescribeAddon
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DescribeAddon.DescribeAddon


-- | Deregisters a connected cluster to remove it from the Amazon EKS
--   control plane.
module Network.AWS.EKS.DeregisterCluster

-- | <i>See:</i> <a>newDeregisterCluster</a> smart constructor.
data DeregisterCluster
DeregisterCluster' :: Text -> DeregisterCluster

-- | The name of the connected cluster to deregister.
[$sel:name:DeregisterCluster'] :: DeregisterCluster -> Text

-- | Create a value of <a>DeregisterCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeregisterCluster'</a>, <a>deregisterCluster_name</a> -
--   The name of the connected cluster to deregister.
newDeregisterCluster :: Text -> DeregisterCluster

-- | The name of the connected cluster to deregister.
deregisterCluster_name :: Lens' DeregisterCluster Text

-- | <i>See:</i> <a>newDeregisterClusterResponse</a> smart constructor.
data DeregisterClusterResponse
DeregisterClusterResponse' :: Maybe Cluster -> Int -> DeregisterClusterResponse
[$sel:cluster:DeregisterClusterResponse'] :: DeregisterClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:DeregisterClusterResponse'] :: DeregisterClusterResponse -> Int

-- | Create a value of <a>DeregisterClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DeregisterClusterResponse'</a>,
--   <a>deregisterClusterResponse_cluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DeregisterClusterResponse'</a>,
--   <a>deregisterClusterResponse_httpStatus</a> - The response's http
--   status code.
newDeregisterClusterResponse :: Int -> DeregisterClusterResponse

-- | Undocumented member.
deregisterClusterResponse_cluster :: Lens' DeregisterClusterResponse (Maybe Cluster)

-- | The response's http status code.
deregisterClusterResponse_httpStatus :: Lens' DeregisterClusterResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DeregisterCluster.DeregisterCluster
instance GHC.Show.Show Network.AWS.EKS.DeregisterCluster.DeregisterCluster
instance GHC.Read.Read Network.AWS.EKS.DeregisterCluster.DeregisterCluster
instance GHC.Classes.Eq Network.AWS.EKS.DeregisterCluster.DeregisterCluster
instance GHC.Generics.Generic Network.AWS.EKS.DeregisterCluster.DeregisterClusterResponse
instance GHC.Show.Show Network.AWS.EKS.DeregisterCluster.DeregisterClusterResponse
instance GHC.Read.Read Network.AWS.EKS.DeregisterCluster.DeregisterClusterResponse
instance GHC.Classes.Eq Network.AWS.EKS.DeregisterCluster.DeregisterClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DeregisterCluster.DeregisterCluster
instance Control.DeepSeq.NFData Network.AWS.EKS.DeregisterCluster.DeregisterClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DeregisterCluster.DeregisterCluster
instance Control.DeepSeq.NFData Network.AWS.EKS.DeregisterCluster.DeregisterCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DeregisterCluster.DeregisterCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DeregisterCluster.DeregisterCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DeregisterCluster.DeregisterCluster


-- | Deletes an Amazon EKS node group for a cluster.
module Network.AWS.EKS.DeleteNodegroup

-- | <i>See:</i> <a>newDeleteNodegroup</a> smart constructor.
data DeleteNodegroup
DeleteNodegroup' :: Text -> Text -> DeleteNodegroup

-- | The name of the Amazon EKS cluster that is associated with your node
--   group.
[$sel:clusterName:DeleteNodegroup'] :: DeleteNodegroup -> Text

-- | The name of the node group to delete.
[$sel:nodegroupName:DeleteNodegroup'] :: DeleteNodegroup -> Text

-- | Create a value of <a>DeleteNodegroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DeleteNodegroup'</a>,
--   <a>deleteNodegroup_clusterName</a> - The name of the Amazon EKS
--   cluster that is associated with your node group.
--   
--   <a>$sel:nodegroupName:DeleteNodegroup'</a>,
--   <a>deleteNodegroup_nodegroupName</a> - The name of the node group to
--   delete.
newDeleteNodegroup :: Text -> Text -> DeleteNodegroup

-- | The name of the Amazon EKS cluster that is associated with your node
--   group.
deleteNodegroup_clusterName :: Lens' DeleteNodegroup Text

-- | The name of the node group to delete.
deleteNodegroup_nodegroupName :: Lens' DeleteNodegroup Text

-- | <i>See:</i> <a>newDeleteNodegroupResponse</a> smart constructor.
data DeleteNodegroupResponse
DeleteNodegroupResponse' :: Maybe Nodegroup -> Int -> DeleteNodegroupResponse

-- | The full description of your deleted node group.
[$sel:nodegroup:DeleteNodegroupResponse'] :: DeleteNodegroupResponse -> Maybe Nodegroup

-- | The response's http status code.
[$sel:httpStatus:DeleteNodegroupResponse'] :: DeleteNodegroupResponse -> Int

-- | Create a value of <a>DeleteNodegroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodegroup:DeleteNodegroupResponse'</a>,
--   <a>deleteNodegroupResponse_nodegroup</a> - The full description of
--   your deleted node group.
--   
--   <a>$sel:httpStatus:DeleteNodegroupResponse'</a>,
--   <a>deleteNodegroupResponse_httpStatus</a> - The response's http status
--   code.
newDeleteNodegroupResponse :: Int -> DeleteNodegroupResponse

-- | The full description of your deleted node group.
deleteNodegroupResponse_nodegroup :: Lens' DeleteNodegroupResponse (Maybe Nodegroup)

-- | The response's http status code.
deleteNodegroupResponse_httpStatus :: Lens' DeleteNodegroupResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DeleteNodegroup.DeleteNodegroup
instance GHC.Show.Show Network.AWS.EKS.DeleteNodegroup.DeleteNodegroup
instance GHC.Read.Read Network.AWS.EKS.DeleteNodegroup.DeleteNodegroup
instance GHC.Classes.Eq Network.AWS.EKS.DeleteNodegroup.DeleteNodegroup
instance GHC.Generics.Generic Network.AWS.EKS.DeleteNodegroup.DeleteNodegroupResponse
instance GHC.Show.Show Network.AWS.EKS.DeleteNodegroup.DeleteNodegroupResponse
instance GHC.Read.Read Network.AWS.EKS.DeleteNodegroup.DeleteNodegroupResponse
instance GHC.Classes.Eq Network.AWS.EKS.DeleteNodegroup.DeleteNodegroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DeleteNodegroup.DeleteNodegroup
instance Control.DeepSeq.NFData Network.AWS.EKS.DeleteNodegroup.DeleteNodegroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DeleteNodegroup.DeleteNodegroup
instance Control.DeepSeq.NFData Network.AWS.EKS.DeleteNodegroup.DeleteNodegroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DeleteNodegroup.DeleteNodegroup
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DeleteNodegroup.DeleteNodegroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DeleteNodegroup.DeleteNodegroup


-- | Deletes an Fargate profile.
--   
--   When you delete a Fargate profile, any pods running on Fargate that
--   were created with the profile are deleted. If those pods match another
--   Fargate profile, then they are scheduled on Fargate with that profile.
--   If they no longer match any Fargate profiles, then they are not
--   scheduled on Fargate and they may remain in a pending state.
--   
--   Only one Fargate profile in a cluster can be in the <tt>DELETING</tt>
--   status at a time. You must wait for a Fargate profile to finish
--   deleting before you can delete any other profiles in that cluster.
module Network.AWS.EKS.DeleteFargateProfile

-- | <i>See:</i> <a>newDeleteFargateProfile</a> smart constructor.
data DeleteFargateProfile
DeleteFargateProfile' :: Text -> Text -> DeleteFargateProfile

-- | The name of the Amazon EKS cluster associated with the Fargate profile
--   to delete.
[$sel:clusterName:DeleteFargateProfile'] :: DeleteFargateProfile -> Text

-- | The name of the Fargate profile to delete.
[$sel:fargateProfileName:DeleteFargateProfile'] :: DeleteFargateProfile -> Text

-- | Create a value of <a>DeleteFargateProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DeleteFargateProfile'</a>,
--   <a>deleteFargateProfile_clusterName</a> - The name of the Amazon EKS
--   cluster associated with the Fargate profile to delete.
--   
--   <a>$sel:fargateProfileName:DeleteFargateProfile'</a>,
--   <a>deleteFargateProfile_fargateProfileName</a> - The name of the
--   Fargate profile to delete.
newDeleteFargateProfile :: Text -> Text -> DeleteFargateProfile

-- | The name of the Amazon EKS cluster associated with the Fargate profile
--   to delete.
deleteFargateProfile_clusterName :: Lens' DeleteFargateProfile Text

-- | The name of the Fargate profile to delete.
deleteFargateProfile_fargateProfileName :: Lens' DeleteFargateProfile Text

-- | <i>See:</i> <a>newDeleteFargateProfileResponse</a> smart constructor.
data DeleteFargateProfileResponse
DeleteFargateProfileResponse' :: Maybe FargateProfile -> Int -> DeleteFargateProfileResponse

-- | The deleted Fargate profile.
[$sel:fargateProfile:DeleteFargateProfileResponse'] :: DeleteFargateProfileResponse -> Maybe FargateProfile

-- | The response's http status code.
[$sel:httpStatus:DeleteFargateProfileResponse'] :: DeleteFargateProfileResponse -> Int

-- | Create a value of <a>DeleteFargateProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fargateProfile:DeleteFargateProfileResponse'</a>,
--   <a>deleteFargateProfileResponse_fargateProfile</a> - The deleted
--   Fargate profile.
--   
--   <a>$sel:httpStatus:DeleteFargateProfileResponse'</a>,
--   <a>deleteFargateProfileResponse_httpStatus</a> - The response's http
--   status code.
newDeleteFargateProfileResponse :: Int -> DeleteFargateProfileResponse

-- | The deleted Fargate profile.
deleteFargateProfileResponse_fargateProfile :: Lens' DeleteFargateProfileResponse (Maybe FargateProfile)

-- | The response's http status code.
deleteFargateProfileResponse_httpStatus :: Lens' DeleteFargateProfileResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfile
instance GHC.Show.Show Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfile
instance GHC.Read.Read Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfile
instance GHC.Classes.Eq Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfile
instance GHC.Generics.Generic Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfileResponse
instance GHC.Show.Show Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfileResponse
instance GHC.Read.Read Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfileResponse
instance GHC.Classes.Eq Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfile
instance Control.DeepSeq.NFData Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfile
instance Control.DeepSeq.NFData Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DeleteFargateProfile.DeleteFargateProfile


-- | Deletes the Amazon EKS cluster control plane.
--   
--   If you have active services in your cluster that are associated with a
--   load balancer, you must delete those services before deleting the
--   cluster so that the load balancers are deleted properly. Otherwise,
--   you can have orphaned resources in your VPC that prevent you from
--   being able to delete the VPC. For more information, see <a>Deleting a
--   Cluster</a> in the <i>Amazon EKS User Guide</i>.
--   
--   If you have managed node groups or Fargate profiles attached to the
--   cluster, you must delete them first. For more information, see
--   DeleteNodegroup and DeleteFargateProfile.
module Network.AWS.EKS.DeleteCluster

-- | <i>See:</i> <a>newDeleteCluster</a> smart constructor.
data DeleteCluster
DeleteCluster' :: Text -> DeleteCluster

-- | The name of the cluster to delete.
[$sel:name:DeleteCluster'] :: DeleteCluster -> Text

-- | Create a value of <a>DeleteCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteCluster'</a>, <a>deleteCluster_name</a> - The name
--   of the cluster to delete.
newDeleteCluster :: Text -> DeleteCluster

-- | The name of the cluster to delete.
deleteCluster_name :: Lens' DeleteCluster Text

-- | <i>See:</i> <a>newDeleteClusterResponse</a> smart constructor.
data DeleteClusterResponse
DeleteClusterResponse' :: Maybe Cluster -> Int -> DeleteClusterResponse

-- | The full description of the cluster to delete.
[$sel:cluster:DeleteClusterResponse'] :: DeleteClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:DeleteClusterResponse'] :: DeleteClusterResponse -> Int

-- | Create a value of <a>DeleteClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_cluster</a> - The full description of the
--   cluster to delete.
--   
--   <a>$sel:httpStatus:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_httpStatus</a> - The response's http status
--   code.
newDeleteClusterResponse :: Int -> DeleteClusterResponse

-- | The full description of the cluster to delete.
deleteClusterResponse_cluster :: Lens' DeleteClusterResponse (Maybe Cluster)

-- | The response's http status code.
deleteClusterResponse_httpStatus :: Lens' DeleteClusterResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DeleteCluster.DeleteCluster
instance GHC.Show.Show Network.AWS.EKS.DeleteCluster.DeleteCluster
instance GHC.Read.Read Network.AWS.EKS.DeleteCluster.DeleteCluster
instance GHC.Classes.Eq Network.AWS.EKS.DeleteCluster.DeleteCluster
instance GHC.Generics.Generic Network.AWS.EKS.DeleteCluster.DeleteClusterResponse
instance GHC.Show.Show Network.AWS.EKS.DeleteCluster.DeleteClusterResponse
instance GHC.Read.Read Network.AWS.EKS.DeleteCluster.DeleteClusterResponse
instance GHC.Classes.Eq Network.AWS.EKS.DeleteCluster.DeleteClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DeleteCluster.DeleteCluster
instance Control.DeepSeq.NFData Network.AWS.EKS.DeleteCluster.DeleteClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DeleteCluster.DeleteCluster
instance Control.DeepSeq.NFData Network.AWS.EKS.DeleteCluster.DeleteCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DeleteCluster.DeleteCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DeleteCluster.DeleteCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DeleteCluster.DeleteCluster


-- | Delete an Amazon EKS add-on.
--   
--   When you remove the add-on, it will also be deleted from the cluster.
--   You can always manually start an add-on on the cluster using the
--   Kubernetes API.
module Network.AWS.EKS.DeleteAddon

-- | <i>See:</i> <a>newDeleteAddon</a> smart constructor.
data DeleteAddon
DeleteAddon' :: Maybe Bool -> Text -> Text -> DeleteAddon

-- | Specifying this option preserves the add-on software on your cluster
--   but Amazon EKS stops managing any settings for the add-on. If an IAM
--   account is associated with the add-on, it is not removed.
[$sel:preserve:DeleteAddon'] :: DeleteAddon -> Maybe Bool

-- | The name of the cluster to delete the add-on from.
[$sel:clusterName:DeleteAddon'] :: DeleteAddon -> Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
[$sel:addonName:DeleteAddon'] :: DeleteAddon -> Text

-- | Create a value of <a>DeleteAddon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preserve:DeleteAddon'</a>, <a>deleteAddon_preserve</a> -
--   Specifying this option preserves the add-on software on your cluster
--   but Amazon EKS stops managing any settings for the add-on. If an IAM
--   account is associated with the add-on, it is not removed.
--   
--   <a>$sel:clusterName:DeleteAddon'</a>, <a>deleteAddon_clusterName</a> -
--   The name of the cluster to delete the add-on from.
--   
--   <a>$sel:addonName:DeleteAddon'</a>, <a>deleteAddon_addonName</a> - The
--   name of the add-on. The name must match one of the names returned by
--   <a>ListAddons</a> .
newDeleteAddon :: Text -> Text -> DeleteAddon

-- | Specifying this option preserves the add-on software on your cluster
--   but Amazon EKS stops managing any settings for the add-on. If an IAM
--   account is associated with the add-on, it is not removed.
deleteAddon_preserve :: Lens' DeleteAddon (Maybe Bool)

-- | The name of the cluster to delete the add-on from.
deleteAddon_clusterName :: Lens' DeleteAddon Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
deleteAddon_addonName :: Lens' DeleteAddon Text

-- | <i>See:</i> <a>newDeleteAddonResponse</a> smart constructor.
data DeleteAddonResponse
DeleteAddonResponse' :: Maybe Addon -> Int -> DeleteAddonResponse
[$sel:addon:DeleteAddonResponse'] :: DeleteAddonResponse -> Maybe Addon

-- | The response's http status code.
[$sel:httpStatus:DeleteAddonResponse'] :: DeleteAddonResponse -> Int

-- | Create a value of <a>DeleteAddonResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addon:DeleteAddonResponse'</a>,
--   <a>deleteAddonResponse_addon</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DeleteAddonResponse'</a>,
--   <a>deleteAddonResponse_httpStatus</a> - The response's http status
--   code.
newDeleteAddonResponse :: Int -> DeleteAddonResponse

-- | Undocumented member.
deleteAddonResponse_addon :: Lens' DeleteAddonResponse (Maybe Addon)

-- | The response's http status code.
deleteAddonResponse_httpStatus :: Lens' DeleteAddonResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.DeleteAddon.DeleteAddon
instance GHC.Show.Show Network.AWS.EKS.DeleteAddon.DeleteAddon
instance GHC.Read.Read Network.AWS.EKS.DeleteAddon.DeleteAddon
instance GHC.Classes.Eq Network.AWS.EKS.DeleteAddon.DeleteAddon
instance GHC.Generics.Generic Network.AWS.EKS.DeleteAddon.DeleteAddonResponse
instance GHC.Show.Show Network.AWS.EKS.DeleteAddon.DeleteAddonResponse
instance GHC.Read.Read Network.AWS.EKS.DeleteAddon.DeleteAddonResponse
instance GHC.Classes.Eq Network.AWS.EKS.DeleteAddon.DeleteAddonResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.DeleteAddon.DeleteAddon
instance Control.DeepSeq.NFData Network.AWS.EKS.DeleteAddon.DeleteAddonResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.DeleteAddon.DeleteAddon
instance Control.DeepSeq.NFData Network.AWS.EKS.DeleteAddon.DeleteAddon
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.DeleteAddon.DeleteAddon
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.DeleteAddon.DeleteAddon
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.DeleteAddon.DeleteAddon


-- | Creates a managed node group for an Amazon EKS cluster. You can only
--   create a node group for your cluster that is equal to the current
--   Kubernetes version for the cluster. All node groups are created with
--   the latest AMI release version for the respective minor Kubernetes
--   version of the cluster, unless you deploy a custom AMI using a launch
--   template. For more information about using launch templates, see
--   <a>Launch template support</a>.
--   
--   An Amazon EKS managed node group is an Amazon EC2 Auto Scaling group
--   and associated Amazon EC2 instances that are managed by Amazon Web
--   Services for an Amazon EKS cluster. Each node group uses a version of
--   the Amazon EKS optimized Amazon Linux 2 AMI. For more information, see
--   <a>Managed Node Groups</a> in the <i>Amazon EKS User Guide</i>.
module Network.AWS.EKS.CreateNodegroup

-- | <i>See:</i> <a>newCreateNodegroup</a> smart constructor.
data CreateNodegroup
CreateNodegroup' :: Maybe CapacityTypes -> Maybe [Text] -> Maybe [Taint] -> Maybe RemoteAccessConfig -> Maybe Int -> Maybe Text -> Maybe NodegroupScalingConfig -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe (HashMap Text Text) -> Maybe AMITypes -> Maybe Text -> Maybe NodegroupUpdateConfig -> Maybe (HashMap Text Text) -> Text -> Text -> [Text] -> Text -> CreateNodegroup

-- | The capacity type for your node group.
[$sel:capacityType:CreateNodegroup'] :: CreateNodegroup -> Maybe CapacityTypes

-- | Specify the instance types for a node group. If you specify a GPU
--   instance type, be sure to specify <tt>AL2_x86_64_GPU</tt> with the
--   <tt>amiType</tt> parameter. If you specify <tt>launchTemplate</tt>,
--   then you can specify zero or one instance type in your launch template
--   <i>or</i> you can specify 0-20 instance types for
--   <tt>instanceTypes</tt>. If however, you specify an instance type in
--   your launch template <i>and</i> specify any <tt>instanceTypes</tt>,
--   the node group deployment will fail. If you don't specify an instance
--   type in a launch template or for <tt>instanceTypes</tt>, then
--   <tt>t3.medium</tt> is used, by default. If you specify <tt>Spot</tt>
--   for <tt>capacityType</tt>, then we recommend specifying multiple
--   values for <tt>instanceTypes</tt>. For more information, see
--   <a>Managed node group capacity types</a> and <a>Launch template
--   support</a> in the <i>Amazon EKS User Guide</i>.
[$sel:instanceTypes:CreateNodegroup'] :: CreateNodegroup -> Maybe [Text]

-- | The Kubernetes taints to be applied to the nodes in the node group.
[$sel:taints:CreateNodegroup'] :: CreateNodegroup -> Maybe [Taint]

-- | The remote access (SSH) configuration to use with your node group. If
--   you specify <tt>launchTemplate</tt>, then don't specify
--   <tt>remoteAccess</tt>, or the node group deployment will fail. For
--   more information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
[$sel:remoteAccess:CreateNodegroup'] :: CreateNodegroup -> Maybe RemoteAccessConfig

-- | The root device disk size (in GiB) for your node group instances. The
--   default disk size is 20 GiB. If you specify <tt>launchTemplate</tt>,
--   then don't specify <tt>diskSize</tt>, or the node group deployment
--   will fail. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
[$sel:diskSize:CreateNodegroup'] :: CreateNodegroup -> Maybe Int

-- | The AMI version of the Amazon EKS optimized AMI to use with your node
--   group. By default, the latest available AMI version for the node
--   group's current Kubernetes version is used. For more information, see
--   <a>Amazon EKS optimized Amazon Linux 2 AMI versions</a> in the
--   <i>Amazon EKS User Guide</i>. If you specify <tt>launchTemplate</tt>,
--   and your launch template uses a custom AMI, then don't specify
--   <tt>releaseVersion</tt>, or the node group deployment will fail. For
--   more information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
[$sel:releaseVersion:CreateNodegroup'] :: CreateNodegroup -> Maybe Text

-- | The scaling configuration details for the Auto Scaling group that is
--   created for your node group.
[$sel:scalingConfig:CreateNodegroup'] :: CreateNodegroup -> Maybe NodegroupScalingConfig

-- | The Kubernetes version to use for your managed nodes. By default, the
--   Kubernetes version of the cluster is used, and this is the only
--   accepted specified value. If you specify <tt>launchTemplate</tt>, and
--   your launch template uses a custom AMI, then don't specify
--   <tt>version</tt>, or the node group deployment will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
[$sel:version:CreateNodegroup'] :: CreateNodegroup -> Maybe Text

-- | An object representing a node group's launch template specification.
--   If specified, then do not specify <tt>instanceTypes</tt>,
--   <tt>diskSize</tt>, or <tt>remoteAccess</tt> and make sure that the
--   launch template meets the requirements in
--   <tt>launchTemplateSpecification</tt>.
[$sel:launchTemplate:CreateNodegroup'] :: CreateNodegroup -> Maybe LaunchTemplateSpecification

-- | The Kubernetes labels to be applied to the nodes in the node group
--   when they are created.
[$sel:labels:CreateNodegroup'] :: CreateNodegroup -> Maybe (HashMap Text Text)

-- | The AMI type for your node group. GPU instance types should use the
--   <tt>AL2_x86_64_GPU</tt> AMI type. Non-GPU instances should use the
--   <tt>AL2_x86_64</tt> AMI type. Arm instances should use the
--   <tt>AL2_ARM_64</tt> AMI type. All types use the Amazon EKS optimized
--   Amazon Linux 2 AMI. If you specify <tt>launchTemplate</tt>, and your
--   launch template uses a custom AMI, then don't specify
--   <tt>amiType</tt>, or the node group deployment will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
[$sel:amiType:CreateNodegroup'] :: CreateNodegroup -> Maybe AMITypes

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateNodegroup'] :: CreateNodegroup -> Maybe Text

-- | The node group update configuration.
[$sel:updateConfig:CreateNodegroup'] :: CreateNodegroup -> Maybe NodegroupUpdateConfig

-- | The metadata to apply to the node group to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Node group tags do not propagate to any
--   other resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
[$sel:tags:CreateNodegroup'] :: CreateNodegroup -> Maybe (HashMap Text Text)

-- | The name of the cluster to create the node group in.
[$sel:clusterName:CreateNodegroup'] :: CreateNodegroup -> Text

-- | The unique name to give your node group.
[$sel:nodegroupName:CreateNodegroup'] :: CreateNodegroup -> Text

-- | The subnets to use for the Auto Scaling group that is created for your
--   node group. If you specify <tt>launchTemplate</tt>, then don't specify
--   <a>SubnetId</a> in your launch template, or the node group deployment
--   will fail. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
[$sel:subnets:CreateNodegroup'] :: CreateNodegroup -> [Text]

-- | The Amazon Resource Name (ARN) of the IAM role to associate with your
--   node group. The Amazon EKS worker node <tt>kubelet</tt> daemon makes
--   calls to Amazon Web Services APIs on your behalf. Nodes receive
--   permissions for these API calls through an IAM instance profile and
--   associated policies. Before you can launch nodes and register them
--   into a cluster, you must create an IAM role for those nodes to use
--   when they are launched. For more information, see <a>Amazon EKS node
--   IAM role</a> in the /<i>Amazon EKS User Guide</i>/ . If you specify
--   <tt>launchTemplate</tt>, then don't specify <a>IamInstanceProfile</a>
--   in your launch template, or the node group deployment will fail. For
--   more information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
[$sel:nodeRole:CreateNodegroup'] :: CreateNodegroup -> Text

-- | Create a value of <a>CreateNodegroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:capacityType:CreateNodegroup'</a>,
--   <a>createNodegroup_capacityType</a> - The capacity type for your node
--   group.
--   
--   <a>$sel:instanceTypes:CreateNodegroup'</a>,
--   <a>createNodegroup_instanceTypes</a> - Specify the instance types for
--   a node group. If you specify a GPU instance type, be sure to specify
--   <tt>AL2_x86_64_GPU</tt> with the <tt>amiType</tt> parameter. If you
--   specify <tt>launchTemplate</tt>, then you can specify zero or one
--   instance type in your launch template <i>or</i> you can specify 0-20
--   instance types for <tt>instanceTypes</tt>. If however, you specify an
--   instance type in your launch template <i>and</i> specify any
--   <tt>instanceTypes</tt>, the node group deployment will fail. If you
--   don't specify an instance type in a launch template or for
--   <tt>instanceTypes</tt>, then <tt>t3.medium</tt> is used, by default.
--   If you specify <tt>Spot</tt> for <tt>capacityType</tt>, then we
--   recommend specifying multiple values for <tt>instanceTypes</tt>. For
--   more information, see <a>Managed node group capacity types</a> and
--   <a>Launch template support</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:taints:CreateNodegroup'</a>, <a>createNodegroup_taints</a> -
--   The Kubernetes taints to be applied to the nodes in the node group.
--   
--   <a>$sel:remoteAccess:CreateNodegroup'</a>,
--   <a>createNodegroup_remoteAccess</a> - The remote access (SSH)
--   configuration to use with your node group. If you specify
--   <tt>launchTemplate</tt>, then don't specify <tt>remoteAccess</tt>, or
--   the node group deployment will fail. For more information about using
--   launch templates with Amazon EKS, see <a>Launch template support</a>
--   in the Amazon EKS User Guide.
--   
--   <a>$sel:diskSize:CreateNodegroup'</a>, <a>createNodegroup_diskSize</a>
--   - The root device disk size (in GiB) for your node group instances.
--   The default disk size is 20 GiB. If you specify
--   <tt>launchTemplate</tt>, then don't specify <tt>diskSize</tt>, or the
--   node group deployment will fail. For more information about using
--   launch templates with Amazon EKS, see <a>Launch template support</a>
--   in the Amazon EKS User Guide.
--   
--   <a>$sel:releaseVersion:CreateNodegroup'</a>,
--   <a>createNodegroup_releaseVersion</a> - The AMI version of the Amazon
--   EKS optimized AMI to use with your node group. By default, the latest
--   available AMI version for the node group's current Kubernetes version
--   is used. For more information, see <a>Amazon EKS optimized Amazon
--   Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>. If you
--   specify <tt>launchTemplate</tt>, and your launch template uses a
--   custom AMI, then don't specify <tt>releaseVersion</tt>, or the node
--   group deployment will fail. For more information about using launch
--   templates with Amazon EKS, see <a>Launch template support</a> in the
--   Amazon EKS User Guide.
--   
--   <a>$sel:scalingConfig:CreateNodegroup'</a>,
--   <a>createNodegroup_scalingConfig</a> - The scaling configuration
--   details for the Auto Scaling group that is created for your node
--   group.
--   
--   <a>$sel:version:CreateNodegroup'</a>, <a>createNodegroup_version</a> -
--   The Kubernetes version to use for your managed nodes. By default, the
--   Kubernetes version of the cluster is used, and this is the only
--   accepted specified value. If you specify <tt>launchTemplate</tt>, and
--   your launch template uses a custom AMI, then don't specify
--   <tt>version</tt>, or the node group deployment will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
--   
--   <a>$sel:launchTemplate:CreateNodegroup'</a>,
--   <a>createNodegroup_launchTemplate</a> - An object representing a node
--   group's launch template specification. If specified, then do not
--   specify <tt>instanceTypes</tt>, <tt>diskSize</tt>, or
--   <tt>remoteAccess</tt> and make sure that the launch template meets the
--   requirements in <tt>launchTemplateSpecification</tt>.
--   
--   <a>$sel:labels:CreateNodegroup'</a>, <a>createNodegroup_labels</a> -
--   The Kubernetes labels to be applied to the nodes in the node group
--   when they are created.
--   
--   <a>$sel:amiType:CreateNodegroup'</a>, <a>createNodegroup_amiType</a> -
--   The AMI type for your node group. GPU instance types should use the
--   <tt>AL2_x86_64_GPU</tt> AMI type. Non-GPU instances should use the
--   <tt>AL2_x86_64</tt> AMI type. Arm instances should use the
--   <tt>AL2_ARM_64</tt> AMI type. All types use the Amazon EKS optimized
--   Amazon Linux 2 AMI. If you specify <tt>launchTemplate</tt>, and your
--   launch template uses a custom AMI, then don't specify
--   <tt>amiType</tt>, or the node group deployment will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
--   
--   <a>$sel:clientRequestToken:CreateNodegroup'</a>,
--   <a>createNodegroup_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:updateConfig:CreateNodegroup'</a>,
--   <a>createNodegroup_updateConfig</a> - The node group update
--   configuration.
--   
--   <a>$sel:tags:CreateNodegroup'</a>, <a>createNodegroup_tags</a> - The
--   metadata to apply to the node group to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define. Node group tags do not propagate to any other
--   resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
--   
--   <a>$sel:clusterName:CreateNodegroup'</a>,
--   <a>createNodegroup_clusterName</a> - The name of the cluster to create
--   the node group in.
--   
--   <a>$sel:nodegroupName:CreateNodegroup'</a>,
--   <a>createNodegroup_nodegroupName</a> - The unique name to give your
--   node group.
--   
--   <a>$sel:subnets:CreateNodegroup'</a>, <a>createNodegroup_subnets</a> -
--   The subnets to use for the Auto Scaling group that is created for your
--   node group. If you specify <tt>launchTemplate</tt>, then don't specify
--   <a>SubnetId</a> in your launch template, or the node group deployment
--   will fail. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
--   
--   <a>$sel:nodeRole:CreateNodegroup'</a>, <a>createNodegroup_nodeRole</a>
--   - The Amazon Resource Name (ARN) of the IAM role to associate with
--   your node group. The Amazon EKS worker node <tt>kubelet</tt> daemon
--   makes calls to Amazon Web Services APIs on your behalf. Nodes receive
--   permissions for these API calls through an IAM instance profile and
--   associated policies. Before you can launch nodes and register them
--   into a cluster, you must create an IAM role for those nodes to use
--   when they are launched. For more information, see <a>Amazon EKS node
--   IAM role</a> in the /<i>Amazon EKS User Guide</i>/ . If you specify
--   <tt>launchTemplate</tt>, then don't specify <a>IamInstanceProfile</a>
--   in your launch template, or the node group deployment will fail. For
--   more information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
newCreateNodegroup :: Text -> Text -> Text -> CreateNodegroup

-- | The capacity type for your node group.
createNodegroup_capacityType :: Lens' CreateNodegroup (Maybe CapacityTypes)

-- | Specify the instance types for a node group. If you specify a GPU
--   instance type, be sure to specify <tt>AL2_x86_64_GPU</tt> with the
--   <tt>amiType</tt> parameter. If you specify <tt>launchTemplate</tt>,
--   then you can specify zero or one instance type in your launch template
--   <i>or</i> you can specify 0-20 instance types for
--   <tt>instanceTypes</tt>. If however, you specify an instance type in
--   your launch template <i>and</i> specify any <tt>instanceTypes</tt>,
--   the node group deployment will fail. If you don't specify an instance
--   type in a launch template or for <tt>instanceTypes</tt>, then
--   <tt>t3.medium</tt> is used, by default. If you specify <tt>Spot</tt>
--   for <tt>capacityType</tt>, then we recommend specifying multiple
--   values for <tt>instanceTypes</tt>. For more information, see
--   <a>Managed node group capacity types</a> and <a>Launch template
--   support</a> in the <i>Amazon EKS User Guide</i>.
createNodegroup_instanceTypes :: Lens' CreateNodegroup (Maybe [Text])

-- | The Kubernetes taints to be applied to the nodes in the node group.
createNodegroup_taints :: Lens' CreateNodegroup (Maybe [Taint])

-- | The remote access (SSH) configuration to use with your node group. If
--   you specify <tt>launchTemplate</tt>, then don't specify
--   <tt>remoteAccess</tt>, or the node group deployment will fail. For
--   more information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
createNodegroup_remoteAccess :: Lens' CreateNodegroup (Maybe RemoteAccessConfig)

-- | The root device disk size (in GiB) for your node group instances. The
--   default disk size is 20 GiB. If you specify <tt>launchTemplate</tt>,
--   then don't specify <tt>diskSize</tt>, or the node group deployment
--   will fail. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
createNodegroup_diskSize :: Lens' CreateNodegroup (Maybe Int)

-- | The AMI version of the Amazon EKS optimized AMI to use with your node
--   group. By default, the latest available AMI version for the node
--   group's current Kubernetes version is used. For more information, see
--   <a>Amazon EKS optimized Amazon Linux 2 AMI versions</a> in the
--   <i>Amazon EKS User Guide</i>. If you specify <tt>launchTemplate</tt>,
--   and your launch template uses a custom AMI, then don't specify
--   <tt>releaseVersion</tt>, or the node group deployment will fail. For
--   more information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
createNodegroup_releaseVersion :: Lens' CreateNodegroup (Maybe Text)

-- | The scaling configuration details for the Auto Scaling group that is
--   created for your node group.
createNodegroup_scalingConfig :: Lens' CreateNodegroup (Maybe NodegroupScalingConfig)

-- | The Kubernetes version to use for your managed nodes. By default, the
--   Kubernetes version of the cluster is used, and this is the only
--   accepted specified value. If you specify <tt>launchTemplate</tt>, and
--   your launch template uses a custom AMI, then don't specify
--   <tt>version</tt>, or the node group deployment will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
createNodegroup_version :: Lens' CreateNodegroup (Maybe Text)

-- | An object representing a node group's launch template specification.
--   If specified, then do not specify <tt>instanceTypes</tt>,
--   <tt>diskSize</tt>, or <tt>remoteAccess</tt> and make sure that the
--   launch template meets the requirements in
--   <tt>launchTemplateSpecification</tt>.
createNodegroup_launchTemplate :: Lens' CreateNodegroup (Maybe LaunchTemplateSpecification)

-- | The Kubernetes labels to be applied to the nodes in the node group
--   when they are created.
createNodegroup_labels :: Lens' CreateNodegroup (Maybe (HashMap Text Text))

-- | The AMI type for your node group. GPU instance types should use the
--   <tt>AL2_x86_64_GPU</tt> AMI type. Non-GPU instances should use the
--   <tt>AL2_x86_64</tt> AMI type. Arm instances should use the
--   <tt>AL2_ARM_64</tt> AMI type. All types use the Amazon EKS optimized
--   Amazon Linux 2 AMI. If you specify <tt>launchTemplate</tt>, and your
--   launch template uses a custom AMI, then don't specify
--   <tt>amiType</tt>, or the node group deployment will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
createNodegroup_amiType :: Lens' CreateNodegroup (Maybe AMITypes)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createNodegroup_clientRequestToken :: Lens' CreateNodegroup (Maybe Text)

-- | The node group update configuration.
createNodegroup_updateConfig :: Lens' CreateNodegroup (Maybe NodegroupUpdateConfig)

-- | The metadata to apply to the node group to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Node group tags do not propagate to any
--   other resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
createNodegroup_tags :: Lens' CreateNodegroup (Maybe (HashMap Text Text))

-- | The name of the cluster to create the node group in.
createNodegroup_clusterName :: Lens' CreateNodegroup Text

-- | The unique name to give your node group.
createNodegroup_nodegroupName :: Lens' CreateNodegroup Text

-- | The subnets to use for the Auto Scaling group that is created for your
--   node group. If you specify <tt>launchTemplate</tt>, then don't specify
--   <a>SubnetId</a> in your launch template, or the node group deployment
--   will fail. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
createNodegroup_subnets :: Lens' CreateNodegroup [Text]

-- | The Amazon Resource Name (ARN) of the IAM role to associate with your
--   node group. The Amazon EKS worker node <tt>kubelet</tt> daemon makes
--   calls to Amazon Web Services APIs on your behalf. Nodes receive
--   permissions for these API calls through an IAM instance profile and
--   associated policies. Before you can launch nodes and register them
--   into a cluster, you must create an IAM role for those nodes to use
--   when they are launched. For more information, see <a>Amazon EKS node
--   IAM role</a> in the /<i>Amazon EKS User Guide</i>/ . If you specify
--   <tt>launchTemplate</tt>, then don't specify <a>IamInstanceProfile</a>
--   in your launch template, or the node group deployment will fail. For
--   more information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
createNodegroup_nodeRole :: Lens' CreateNodegroup Text

-- | <i>See:</i> <a>newCreateNodegroupResponse</a> smart constructor.
data CreateNodegroupResponse
CreateNodegroupResponse' :: Maybe Nodegroup -> Int -> CreateNodegroupResponse

-- | The full description of your new node group.
[$sel:nodegroup:CreateNodegroupResponse'] :: CreateNodegroupResponse -> Maybe Nodegroup

-- | The response's http status code.
[$sel:httpStatus:CreateNodegroupResponse'] :: CreateNodegroupResponse -> Int

-- | Create a value of <a>CreateNodegroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodegroup:CreateNodegroupResponse'</a>,
--   <a>createNodegroupResponse_nodegroup</a> - The full description of
--   your new node group.
--   
--   <a>$sel:httpStatus:CreateNodegroupResponse'</a>,
--   <a>createNodegroupResponse_httpStatus</a> - The response's http status
--   code.
newCreateNodegroupResponse :: Int -> CreateNodegroupResponse

-- | The full description of your new node group.
createNodegroupResponse_nodegroup :: Lens' CreateNodegroupResponse (Maybe Nodegroup)

-- | The response's http status code.
createNodegroupResponse_httpStatus :: Lens' CreateNodegroupResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.CreateNodegroup.CreateNodegroup
instance GHC.Show.Show Network.AWS.EKS.CreateNodegroup.CreateNodegroup
instance GHC.Read.Read Network.AWS.EKS.CreateNodegroup.CreateNodegroup
instance GHC.Classes.Eq Network.AWS.EKS.CreateNodegroup.CreateNodegroup
instance GHC.Generics.Generic Network.AWS.EKS.CreateNodegroup.CreateNodegroupResponse
instance GHC.Show.Show Network.AWS.EKS.CreateNodegroup.CreateNodegroupResponse
instance GHC.Read.Read Network.AWS.EKS.CreateNodegroup.CreateNodegroupResponse
instance GHC.Classes.Eq Network.AWS.EKS.CreateNodegroup.CreateNodegroupResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.CreateNodegroup.CreateNodegroup
instance Control.DeepSeq.NFData Network.AWS.EKS.CreateNodegroup.CreateNodegroupResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.CreateNodegroup.CreateNodegroup
instance Control.DeepSeq.NFData Network.AWS.EKS.CreateNodegroup.CreateNodegroup
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.CreateNodegroup.CreateNodegroup
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.CreateNodegroup.CreateNodegroup
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.CreateNodegroup.CreateNodegroup
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.CreateNodegroup.CreateNodegroup


-- | Creates an Fargate profile for your Amazon EKS cluster. You must have
--   at least one Fargate profile in a cluster to be able to run pods on
--   Fargate.
--   
--   The Fargate profile allows an administrator to declare which pods run
--   on Fargate and specify which pods run on which Fargate profile. This
--   declaration is done through the profile’s selectors. Each profile can
--   have up to five selectors that contain a namespace and labels. A
--   namespace is required for every selector. The label field consists of
--   multiple optional key-value pairs. Pods that match the selectors are
--   scheduled on Fargate. If a to-be-scheduled pod matches any of the
--   selectors in the Fargate profile, then that pod is run on Fargate.
--   
--   When you create a Fargate profile, you must specify a pod execution
--   role to use with the pods that are scheduled with the profile. This
--   role is added to the cluster's Kubernetes <a>Role Based Access
--   Control</a> (RBAC) for authorization so that the <tt>kubelet</tt> that
--   is running on the Fargate infrastructure can register with your Amazon
--   EKS cluster so that it can appear in your cluster as a node. The pod
--   execution role also provides IAM permissions to the Fargate
--   infrastructure to allow read access to Amazon ECR image repositories.
--   For more information, see <a>Pod Execution Role</a> in the <i>Amazon
--   EKS User Guide</i>.
--   
--   Fargate profiles are immutable. However, you can create a new updated
--   profile to replace an existing profile and then delete the original
--   after the updated profile has finished creating.
--   
--   If any Fargate profiles in a cluster are in the <tt>DELETING</tt>
--   status, you must wait for that Fargate profile to finish deleting
--   before you can create any other profiles in that cluster.
--   
--   For more information, see <a>Fargate Profile</a> in the <i>Amazon EKS
--   User Guide</i>.
module Network.AWS.EKS.CreateFargateProfile

-- | <i>See:</i> <a>newCreateFargateProfile</a> smart constructor.
data CreateFargateProfile
CreateFargateProfile' :: Maybe [Text] -> Maybe Text -> Maybe [FargateProfileSelector] -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateFargateProfile

-- | The IDs of subnets to launch your pods into. At this time, pods
--   running on Fargate are not assigned public IP addresses, so only
--   private subnets (with no direct route to an Internet Gateway) are
--   accepted for this parameter.
[$sel:subnets:CreateFargateProfile'] :: CreateFargateProfile -> Maybe [Text]

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateFargateProfile'] :: CreateFargateProfile -> Maybe Text

-- | The selectors to match for pods to use this Fargate profile. Each
--   selector must have an associated namespace. Optionally, you can also
--   specify labels for a namespace. You may specify up to five selectors
--   in a Fargate profile.
[$sel:selectors:CreateFargateProfile'] :: CreateFargateProfile -> Maybe [FargateProfileSelector]

-- | The metadata to apply to the Fargate profile to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Fargate profile tags do not
--   propagate to any other resources associated with the Fargate profile,
--   such as the pods that are scheduled with it.
[$sel:tags:CreateFargateProfile'] :: CreateFargateProfile -> Maybe (HashMap Text Text)

-- | The name of the Fargate profile.
[$sel:fargateProfileName:CreateFargateProfile'] :: CreateFargateProfile -> Text

-- | The name of the Amazon EKS cluster to apply the Fargate profile to.
[$sel:clusterName:CreateFargateProfile'] :: CreateFargateProfile -> Text

-- | The Amazon Resource Name (ARN) of the pod execution role to use for
--   pods that match the selectors in the Fargate profile. The pod
--   execution role allows Fargate infrastructure to register with your
--   cluster as a node, and it provides read access to Amazon ECR image
--   repositories. For more information, see <a>Pod Execution Role</a> in
--   the <i>Amazon EKS User Guide</i>.
[$sel:podExecutionRoleArn:CreateFargateProfile'] :: CreateFargateProfile -> Text

-- | Create a value of <a>CreateFargateProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnets:CreateFargateProfile'</a>,
--   <a>createFargateProfile_subnets</a> - The IDs of subnets to launch
--   your pods into. At this time, pods running on Fargate are not assigned
--   public IP addresses, so only private subnets (with no direct route to
--   an Internet Gateway) are accepted for this parameter.
--   
--   <a>$sel:clientRequestToken:CreateFargateProfile'</a>,
--   <a>createFargateProfile_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:selectors:CreateFargateProfile'</a>,
--   <a>createFargateProfile_selectors</a> - The selectors to match for
--   pods to use this Fargate profile. Each selector must have an
--   associated namespace. Optionally, you can also specify labels for a
--   namespace. You may specify up to five selectors in a Fargate profile.
--   
--   <a>$sel:tags:CreateFargateProfile'</a>,
--   <a>createFargateProfile_tags</a> - The metadata to apply to the
--   Fargate profile to assist with categorization and organization. Each
--   tag consists of a key and an optional value, both of which you define.
--   Fargate profile tags do not propagate to any other resources
--   associated with the Fargate profile, such as the pods that are
--   scheduled with it.
--   
--   <a>$sel:fargateProfileName:CreateFargateProfile'</a>,
--   <a>createFargateProfile_fargateProfileName</a> - The name of the
--   Fargate profile.
--   
--   <a>$sel:clusterName:CreateFargateProfile'</a>,
--   <a>createFargateProfile_clusterName</a> - The name of the Amazon EKS
--   cluster to apply the Fargate profile to.
--   
--   <a>$sel:podExecutionRoleArn:CreateFargateProfile'</a>,
--   <a>createFargateProfile_podExecutionRoleArn</a> - The Amazon Resource
--   Name (ARN) of the pod execution role to use for pods that match the
--   selectors in the Fargate profile. The pod execution role allows
--   Fargate infrastructure to register with your cluster as a node, and it
--   provides read access to Amazon ECR image repositories. For more
--   information, see <a>Pod Execution Role</a> in the <i>Amazon EKS User
--   Guide</i>.
newCreateFargateProfile :: Text -> Text -> Text -> CreateFargateProfile

-- | The IDs of subnets to launch your pods into. At this time, pods
--   running on Fargate are not assigned public IP addresses, so only
--   private subnets (with no direct route to an Internet Gateway) are
--   accepted for this parameter.
createFargateProfile_subnets :: Lens' CreateFargateProfile (Maybe [Text])

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createFargateProfile_clientRequestToken :: Lens' CreateFargateProfile (Maybe Text)

-- | The selectors to match for pods to use this Fargate profile. Each
--   selector must have an associated namespace. Optionally, you can also
--   specify labels for a namespace. You may specify up to five selectors
--   in a Fargate profile.
createFargateProfile_selectors :: Lens' CreateFargateProfile (Maybe [FargateProfileSelector])

-- | The metadata to apply to the Fargate profile to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Fargate profile tags do not
--   propagate to any other resources associated with the Fargate profile,
--   such as the pods that are scheduled with it.
createFargateProfile_tags :: Lens' CreateFargateProfile (Maybe (HashMap Text Text))

-- | The name of the Fargate profile.
createFargateProfile_fargateProfileName :: Lens' CreateFargateProfile Text

-- | The name of the Amazon EKS cluster to apply the Fargate profile to.
createFargateProfile_clusterName :: Lens' CreateFargateProfile Text

-- | The Amazon Resource Name (ARN) of the pod execution role to use for
--   pods that match the selectors in the Fargate profile. The pod
--   execution role allows Fargate infrastructure to register with your
--   cluster as a node, and it provides read access to Amazon ECR image
--   repositories. For more information, see <a>Pod Execution Role</a> in
--   the <i>Amazon EKS User Guide</i>.
createFargateProfile_podExecutionRoleArn :: Lens' CreateFargateProfile Text

-- | <i>See:</i> <a>newCreateFargateProfileResponse</a> smart constructor.
data CreateFargateProfileResponse
CreateFargateProfileResponse' :: Maybe FargateProfile -> Int -> CreateFargateProfileResponse

-- | The full description of your new Fargate profile.
[$sel:fargateProfile:CreateFargateProfileResponse'] :: CreateFargateProfileResponse -> Maybe FargateProfile

-- | The response's http status code.
[$sel:httpStatus:CreateFargateProfileResponse'] :: CreateFargateProfileResponse -> Int

-- | Create a value of <a>CreateFargateProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fargateProfile:CreateFargateProfileResponse'</a>,
--   <a>createFargateProfileResponse_fargateProfile</a> - The full
--   description of your new Fargate profile.
--   
--   <a>$sel:httpStatus:CreateFargateProfileResponse'</a>,
--   <a>createFargateProfileResponse_httpStatus</a> - The response's http
--   status code.
newCreateFargateProfileResponse :: Int -> CreateFargateProfileResponse

-- | The full description of your new Fargate profile.
createFargateProfileResponse_fargateProfile :: Lens' CreateFargateProfileResponse (Maybe FargateProfile)

-- | The response's http status code.
createFargateProfileResponse_httpStatus :: Lens' CreateFargateProfileResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.CreateFargateProfile.CreateFargateProfile
instance GHC.Show.Show Network.AWS.EKS.CreateFargateProfile.CreateFargateProfile
instance GHC.Read.Read Network.AWS.EKS.CreateFargateProfile.CreateFargateProfile
instance GHC.Classes.Eq Network.AWS.EKS.CreateFargateProfile.CreateFargateProfile
instance GHC.Generics.Generic Network.AWS.EKS.CreateFargateProfile.CreateFargateProfileResponse
instance GHC.Show.Show Network.AWS.EKS.CreateFargateProfile.CreateFargateProfileResponse
instance GHC.Read.Read Network.AWS.EKS.CreateFargateProfile.CreateFargateProfileResponse
instance GHC.Classes.Eq Network.AWS.EKS.CreateFargateProfile.CreateFargateProfileResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.CreateFargateProfile.CreateFargateProfile
instance Control.DeepSeq.NFData Network.AWS.EKS.CreateFargateProfile.CreateFargateProfileResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.CreateFargateProfile.CreateFargateProfile
instance Control.DeepSeq.NFData Network.AWS.EKS.CreateFargateProfile.CreateFargateProfile
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.CreateFargateProfile.CreateFargateProfile
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.CreateFargateProfile.CreateFargateProfile
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.CreateFargateProfile.CreateFargateProfile
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.CreateFargateProfile.CreateFargateProfile


-- | Creates an Amazon EKS control plane.
--   
--   The Amazon EKS control plane consists of control plane instances that
--   run the Kubernetes software, such as <tt>etcd</tt> and the API server.
--   The control plane runs in an account managed by Amazon Web Services,
--   and the Kubernetes API is exposed via the Amazon EKS API server
--   endpoint. Each Amazon EKS cluster control plane is single-tenant and
--   unique and runs on its own set of Amazon EC2 instances.
--   
--   The cluster control plane is provisioned across multiple Availability
--   Zones and fronted by an Elastic Load Balancing Network Load Balancer.
--   Amazon EKS also provisions elastic network interfaces in your VPC
--   subnets to provide connectivity from the control plane instances to
--   the nodes (for example, to support <tt>kubectl exec</tt>,
--   <tt>logs</tt>, and <tt>proxy</tt> data flows).
--   
--   Amazon EKS nodes run in your Amazon Web Services account and connect
--   to your cluster's control plane via the Kubernetes API server endpoint
--   and a certificate file that is created for your cluster.
--   
--   Cluster creation typically takes several minutes. After you create an
--   Amazon EKS cluster, you must configure your Kubernetes tooling to
--   communicate with the API server and launch nodes into your cluster.
--   For more information, see <a>Managing Cluster Authentication</a> and
--   <a>Launching Amazon EKS nodes</a> in the <i>Amazon EKS User Guide</i>.
module Network.AWS.EKS.CreateCluster

-- | <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe KubernetesNetworkConfigRequest -> Maybe Text -> Maybe [EncryptionConfig] -> Maybe Text -> Maybe Logging -> Maybe (HashMap Text Text) -> Text -> Text -> VpcConfigRequest -> CreateCluster

-- | The Kubernetes network configuration for the cluster.
[$sel:kubernetesNetworkConfig:CreateCluster'] :: CreateCluster -> Maybe KubernetesNetworkConfigRequest

-- | The desired Kubernetes version for your cluster. If you don't specify
--   a value here, the latest version available in Amazon EKS is used.
[$sel:version:CreateCluster'] :: CreateCluster -> Maybe Text

-- | The encryption configuration for the cluster.
[$sel:encryptionConfig:CreateCluster'] :: CreateCluster -> Maybe [EncryptionConfig]

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateCluster'] :: CreateCluster -> Maybe Text

-- | Enable or disable exporting the Kubernetes control plane logs for your
--   cluster to CloudWatch Logs. By default, cluster control plane logs
--   aren't exported to CloudWatch Logs. For more information, see
--   <a>Amazon EKS Cluster control plane logs</a> in the /<i>Amazon EKS
--   User Guide</i>/ .
--   
--   CloudWatch Logs ingestion, archive storage, and data scanning rates
--   apply to exported control plane logs. For more information, see
--   <a>CloudWatch Pricing</a>.
[$sel:logging:CreateCluster'] :: CreateCluster -> Maybe Logging

-- | The metadata to apply to the cluster to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define.
[$sel:tags:CreateCluster'] :: CreateCluster -> Maybe (HashMap Text Text)

-- | The unique name to give to your cluster.
[$sel:name:CreateCluster'] :: CreateCluster -> Text

-- | The Amazon Resource Name (ARN) of the IAM role that provides
--   permissions for the Kubernetes control plane to make calls to Amazon
--   Web Services API operations on your behalf. For more information, see
--   <a>Amazon EKS Service IAM Role</a> in the /<i>Amazon EKS User
--   Guide</i>/ .
[$sel:roleArn:CreateCluster'] :: CreateCluster -> Text

-- | The VPC configuration used by the cluster control plane. Amazon EKS
--   VPC resources have specific requirements to work properly with
--   Kubernetes. For more information, see <a>Cluster VPC
--   Considerations</a> and <a>Cluster Security Group Considerations</a> in
--   the <i>Amazon EKS User Guide</i>. You must specify at least two
--   subnets. You can specify up to five security groups, but we recommend
--   that you use a dedicated security group for your cluster control
--   plane.
[$sel:resourcesVpcConfig:CreateCluster'] :: CreateCluster -> VpcConfigRequest

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kubernetesNetworkConfig:CreateCluster'</a>,
--   <a>createCluster_kubernetesNetworkConfig</a> - The Kubernetes network
--   configuration for the cluster.
--   
--   <a>$sel:version:CreateCluster'</a>, <a>createCluster_version</a> - The
--   desired Kubernetes version for your cluster. If you don't specify a
--   value here, the latest version available in Amazon EKS is used.
--   
--   <a>$sel:encryptionConfig:CreateCluster'</a>,
--   <a>createCluster_encryptionConfig</a> - The encryption configuration
--   for the cluster.
--   
--   <a>$sel:clientRequestToken:CreateCluster'</a>,
--   <a>createCluster_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:logging:CreateCluster'</a>, <a>createCluster_logging</a> -
--   Enable or disable exporting the Kubernetes control plane logs for your
--   cluster to CloudWatch Logs. By default, cluster control plane logs
--   aren't exported to CloudWatch Logs. For more information, see
--   <a>Amazon EKS Cluster control plane logs</a> in the /<i>Amazon EKS
--   User Guide</i>/ .
--   
--   CloudWatch Logs ingestion, archive storage, and data scanning rates
--   apply to exported control plane logs. For more information, see
--   <a>CloudWatch Pricing</a>.
--   
--   <a>$sel:tags:CreateCluster'</a>, <a>createCluster_tags</a> - The
--   metadata to apply to the cluster to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define.
--   
--   <a>$sel:name:CreateCluster'</a>, <a>createCluster_name</a> - The
--   unique name to give to your cluster.
--   
--   <a>$sel:roleArn:CreateCluster'</a>, <a>createCluster_roleArn</a> - The
--   Amazon Resource Name (ARN) of the IAM role that provides permissions
--   for the Kubernetes control plane to make calls to Amazon Web Services
--   API operations on your behalf. For more information, see <a>Amazon EKS
--   Service IAM Role</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:resourcesVpcConfig:CreateCluster'</a>,
--   <a>createCluster_resourcesVpcConfig</a> - The VPC configuration used
--   by the cluster control plane. Amazon EKS VPC resources have specific
--   requirements to work properly with Kubernetes. For more information,
--   see <a>Cluster VPC Considerations</a> and <a>Cluster Security Group
--   Considerations</a> in the <i>Amazon EKS User Guide</i>. You must
--   specify at least two subnets. You can specify up to five security
--   groups, but we recommend that you use a dedicated security group for
--   your cluster control plane.
newCreateCluster :: Text -> Text -> VpcConfigRequest -> CreateCluster

-- | The Kubernetes network configuration for the cluster.
createCluster_kubernetesNetworkConfig :: Lens' CreateCluster (Maybe KubernetesNetworkConfigRequest)

-- | The desired Kubernetes version for your cluster. If you don't specify
--   a value here, the latest version available in Amazon EKS is used.
createCluster_version :: Lens' CreateCluster (Maybe Text)

-- | The encryption configuration for the cluster.
createCluster_encryptionConfig :: Lens' CreateCluster (Maybe [EncryptionConfig])

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createCluster_clientRequestToken :: Lens' CreateCluster (Maybe Text)

-- | Enable or disable exporting the Kubernetes control plane logs for your
--   cluster to CloudWatch Logs. By default, cluster control plane logs
--   aren't exported to CloudWatch Logs. For more information, see
--   <a>Amazon EKS Cluster control plane logs</a> in the /<i>Amazon EKS
--   User Guide</i>/ .
--   
--   CloudWatch Logs ingestion, archive storage, and data scanning rates
--   apply to exported control plane logs. For more information, see
--   <a>CloudWatch Pricing</a>.
createCluster_logging :: Lens' CreateCluster (Maybe Logging)

-- | The metadata to apply to the cluster to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define.
createCluster_tags :: Lens' CreateCluster (Maybe (HashMap Text Text))

-- | The unique name to give to your cluster.
createCluster_name :: Lens' CreateCluster Text

-- | The Amazon Resource Name (ARN) of the IAM role that provides
--   permissions for the Kubernetes control plane to make calls to Amazon
--   Web Services API operations on your behalf. For more information, see
--   <a>Amazon EKS Service IAM Role</a> in the /<i>Amazon EKS User
--   Guide</i>/ .
createCluster_roleArn :: Lens' CreateCluster Text

-- | The VPC configuration used by the cluster control plane. Amazon EKS
--   VPC resources have specific requirements to work properly with
--   Kubernetes. For more information, see <a>Cluster VPC
--   Considerations</a> and <a>Cluster Security Group Considerations</a> in
--   the <i>Amazon EKS User Guide</i>. You must specify at least two
--   subnets. You can specify up to five security groups, but we recommend
--   that you use a dedicated security group for your cluster control
--   plane.
createCluster_resourcesVpcConfig :: Lens' CreateCluster VpcConfigRequest

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe Cluster -> Int -> CreateClusterResponse

-- | The full description of your new cluster.
[$sel:cluster:CreateClusterResponse'] :: CreateClusterResponse -> Maybe Cluster

-- | The response's http status code.
[$sel:httpStatus:CreateClusterResponse'] :: CreateClusterResponse -> Int

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:CreateClusterResponse'</a>,
--   <a>createClusterResponse_cluster</a> - The full description of your
--   new cluster.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | The full description of your new cluster.
createClusterResponse_cluster :: Lens' CreateClusterResponse (Maybe Cluster)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.CreateCluster.CreateCluster
instance GHC.Show.Show Network.AWS.EKS.CreateCluster.CreateCluster
instance GHC.Read.Read Network.AWS.EKS.CreateCluster.CreateCluster
instance GHC.Classes.Eq Network.AWS.EKS.CreateCluster.CreateCluster
instance GHC.Generics.Generic Network.AWS.EKS.CreateCluster.CreateClusterResponse
instance GHC.Show.Show Network.AWS.EKS.CreateCluster.CreateClusterResponse
instance GHC.Read.Read Network.AWS.EKS.CreateCluster.CreateClusterResponse
instance GHC.Classes.Eq Network.AWS.EKS.CreateCluster.CreateClusterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Network.AWS.EKS.CreateCluster.CreateClusterResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.CreateCluster.CreateCluster
instance Control.DeepSeq.NFData Network.AWS.EKS.CreateCluster.CreateCluster
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.CreateCluster.CreateCluster
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.CreateCluster.CreateCluster
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.CreateCluster.CreateCluster
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.CreateCluster.CreateCluster


-- | Creates an Amazon EKS add-on.
--   
--   Amazon EKS add-ons help to automate the provisioning and lifecycle
--   management of common operational software for Amazon EKS clusters.
--   Amazon EKS add-ons can only be used with Amazon EKS clusters running
--   version 1.18 with platform version <tt>eks.3</tt> or later because
--   add-ons rely on the Server-side Apply Kubernetes feature, which is
--   only available in Kubernetes 1.18 and later.
module Network.AWS.EKS.CreateAddon

-- | <i>See:</i> <a>newCreateAddon</a> smart constructor.
data CreateAddon
CreateAddon' :: Maybe Text -> Maybe Text -> Maybe ResolveConflicts -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateAddon

-- | The version of the add-on. The version must match one of the versions
--   returned by <a>DescribeAddonVersions</a> .
[$sel:addonVersion:CreateAddon'] :: CreateAddon -> Maybe Text

-- | The Amazon Resource Name (ARN) of an existing IAM role to bind to the
--   add-on's service account. The role must be assigned the IAM
--   permissions required by the add-on. If you don't specify an existing
--   IAM role, then the add-on uses the permissions assigned to the node
--   IAM role. For more information, see <a>Amazon EKS node IAM role</a> in
--   the <i>Amazon EKS User Guide</i>.
--   
--   To specify an existing IAM role, you must have an IAM OpenID Connect
--   (OIDC) provider created for your cluster. For more information, see
--   <a>Enabling IAM roles for service accounts on your cluster</a> in the
--   <i>Amazon EKS User Guide</i>.
[$sel:serviceAccountRoleArn:CreateAddon'] :: CreateAddon -> Maybe Text

-- | How to resolve parameter value conflicts when migrating an existing
--   add-on to an Amazon EKS add-on.
[$sel:resolveConflicts:CreateAddon'] :: CreateAddon -> Maybe ResolveConflicts

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:CreateAddon'] :: CreateAddon -> Maybe Text

-- | The metadata to apply to the cluster to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define.
[$sel:tags:CreateAddon'] :: CreateAddon -> Maybe (HashMap Text Text)

-- | The name of the cluster to create the add-on for.
[$sel:clusterName:CreateAddon'] :: CreateAddon -> Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>DescribeAddonVersions</a> .
[$sel:addonName:CreateAddon'] :: CreateAddon -> Text

-- | Create a value of <a>CreateAddon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonVersion:CreateAddon'</a>, <a>createAddon_addonVersion</a>
--   - The version of the add-on. The version must match one of the
--   versions returned by <a>DescribeAddonVersions</a> .
--   
--   <a>$sel:serviceAccountRoleArn:CreateAddon'</a>,
--   <a>createAddon_serviceAccountRoleArn</a> - The Amazon Resource Name
--   (ARN) of an existing IAM role to bind to the add-on's service account.
--   The role must be assigned the IAM permissions required by the add-on.
--   If you don't specify an existing IAM role, then the add-on uses the
--   permissions assigned to the node IAM role. For more information, see
--   <a>Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.
--   
--   To specify an existing IAM role, you must have an IAM OpenID Connect
--   (OIDC) provider created for your cluster. For more information, see
--   <a>Enabling IAM roles for service accounts on your cluster</a> in the
--   <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:resolveConflicts:CreateAddon'</a>,
--   <a>createAddon_resolveConflicts</a> - How to resolve parameter value
--   conflicts when migrating an existing add-on to an Amazon EKS add-on.
--   
--   <a>$sel:clientRequestToken:CreateAddon'</a>,
--   <a>createAddon_clientRequestToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:tags:CreateAddon'</a>, <a>createAddon_tags</a> - The metadata
--   to apply to the cluster to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define.
--   
--   <a>$sel:clusterName:CreateAddon'</a>, <a>createAddon_clusterName</a> -
--   The name of the cluster to create the add-on for.
--   
--   <a>$sel:addonName:CreateAddon'</a>, <a>createAddon_addonName</a> - The
--   name of the add-on. The name must match one of the names returned by
--   <a>DescribeAddonVersions</a> .
newCreateAddon :: Text -> Text -> CreateAddon

-- | The version of the add-on. The version must match one of the versions
--   returned by <a>DescribeAddonVersions</a> .
createAddon_addonVersion :: Lens' CreateAddon (Maybe Text)

-- | The Amazon Resource Name (ARN) of an existing IAM role to bind to the
--   add-on's service account. The role must be assigned the IAM
--   permissions required by the add-on. If you don't specify an existing
--   IAM role, then the add-on uses the permissions assigned to the node
--   IAM role. For more information, see <a>Amazon EKS node IAM role</a> in
--   the <i>Amazon EKS User Guide</i>.
--   
--   To specify an existing IAM role, you must have an IAM OpenID Connect
--   (OIDC) provider created for your cluster. For more information, see
--   <a>Enabling IAM roles for service accounts on your cluster</a> in the
--   <i>Amazon EKS User Guide</i>.
createAddon_serviceAccountRoleArn :: Lens' CreateAddon (Maybe Text)

-- | How to resolve parameter value conflicts when migrating an existing
--   add-on to an Amazon EKS add-on.
createAddon_resolveConflicts :: Lens' CreateAddon (Maybe ResolveConflicts)

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createAddon_clientRequestToken :: Lens' CreateAddon (Maybe Text)

-- | The metadata to apply to the cluster to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define.
createAddon_tags :: Lens' CreateAddon (Maybe (HashMap Text Text))

-- | The name of the cluster to create the add-on for.
createAddon_clusterName :: Lens' CreateAddon Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>DescribeAddonVersions</a> .
createAddon_addonName :: Lens' CreateAddon Text

-- | <i>See:</i> <a>newCreateAddonResponse</a> smart constructor.
data CreateAddonResponse
CreateAddonResponse' :: Maybe Addon -> Int -> CreateAddonResponse
[$sel:addon:CreateAddonResponse'] :: CreateAddonResponse -> Maybe Addon

-- | The response's http status code.
[$sel:httpStatus:CreateAddonResponse'] :: CreateAddonResponse -> Int

-- | Create a value of <a>CreateAddonResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addon:CreateAddonResponse'</a>,
--   <a>createAddonResponse_addon</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CreateAddonResponse'</a>,
--   <a>createAddonResponse_httpStatus</a> - The response's http status
--   code.
newCreateAddonResponse :: Int -> CreateAddonResponse

-- | Undocumented member.
createAddonResponse_addon :: Lens' CreateAddonResponse (Maybe Addon)

-- | The response's http status code.
createAddonResponse_httpStatus :: Lens' CreateAddonResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.CreateAddon.CreateAddon
instance GHC.Show.Show Network.AWS.EKS.CreateAddon.CreateAddon
instance GHC.Read.Read Network.AWS.EKS.CreateAddon.CreateAddon
instance GHC.Classes.Eq Network.AWS.EKS.CreateAddon.CreateAddon
instance GHC.Generics.Generic Network.AWS.EKS.CreateAddon.CreateAddonResponse
instance GHC.Show.Show Network.AWS.EKS.CreateAddon.CreateAddonResponse
instance GHC.Read.Read Network.AWS.EKS.CreateAddon.CreateAddonResponse
instance GHC.Classes.Eq Network.AWS.EKS.CreateAddon.CreateAddonResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.CreateAddon.CreateAddon
instance Control.DeepSeq.NFData Network.AWS.EKS.CreateAddon.CreateAddonResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.CreateAddon.CreateAddon
instance Control.DeepSeq.NFData Network.AWS.EKS.CreateAddon.CreateAddon
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.CreateAddon.CreateAddon
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.CreateAddon.CreateAddon
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.CreateAddon.CreateAddon
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.CreateAddon.CreateAddon


-- | Associate an identity provider configuration to a cluster.
--   
--   If you want to authenticate identities using an identity provider, you
--   can create an identity provider configuration and associate it to your
--   cluster. After configuring authentication to your cluster you can
--   create Kubernetes <tt>roles</tt> and <tt>clusterroles</tt> to assign
--   permissions to the roles, and then bind the roles to the identities
--   using Kubernetes <tt>rolebindings</tt> and
--   <tt>clusterrolebindings</tt>. For more information see <a>Using RBAC
--   Authorization</a> in the Kubernetes documentation.
module Network.AWS.EKS.AssociateIdentityProviderConfig

-- | <i>See:</i> <a>newAssociateIdentityProviderConfig</a> smart
--   constructor.
data AssociateIdentityProviderConfig
AssociateIdentityProviderConfig' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> OidcIdentityProviderConfigRequest -> AssociateIdentityProviderConfig

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:AssociateIdentityProviderConfig'] :: AssociateIdentityProviderConfig -> Maybe Text

-- | The metadata to apply to the configuration to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define.
[$sel:tags:AssociateIdentityProviderConfig'] :: AssociateIdentityProviderConfig -> Maybe (HashMap Text Text)

-- | The name of the cluster to associate the configuration to.
[$sel:clusterName:AssociateIdentityProviderConfig'] :: AssociateIdentityProviderConfig -> Text

-- | An object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
[$sel:oidc:AssociateIdentityProviderConfig'] :: AssociateIdentityProviderConfig -> OidcIdentityProviderConfigRequest

-- | Create a value of <a>AssociateIdentityProviderConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:AssociateIdentityProviderConfig'</a>,
--   <a>associateIdentityProviderConfig_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:AssociateIdentityProviderConfig'</a>,
--   <a>associateIdentityProviderConfig_tags</a> - The metadata to apply to
--   the configuration to assist with categorization and organization. Each
--   tag consists of a key and an optional value, both of which you define.
--   
--   <a>$sel:clusterName:AssociateIdentityProviderConfig'</a>,
--   <a>associateIdentityProviderConfig_clusterName</a> - The name of the
--   cluster to associate the configuration to.
--   
--   <a>$sel:oidc:AssociateIdentityProviderConfig'</a>,
--   <a>associateIdentityProviderConfig_oidc</a> - An object that
--   represents an OpenID Connect (OIDC) identity provider configuration.
newAssociateIdentityProviderConfig :: Text -> OidcIdentityProviderConfigRequest -> AssociateIdentityProviderConfig

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
associateIdentityProviderConfig_clientRequestToken :: Lens' AssociateIdentityProviderConfig (Maybe Text)

-- | The metadata to apply to the configuration to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define.
associateIdentityProviderConfig_tags :: Lens' AssociateIdentityProviderConfig (Maybe (HashMap Text Text))

-- | The name of the cluster to associate the configuration to.
associateIdentityProviderConfig_clusterName :: Lens' AssociateIdentityProviderConfig Text

-- | An object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
associateIdentityProviderConfig_oidc :: Lens' AssociateIdentityProviderConfig OidcIdentityProviderConfigRequest

-- | <i>See:</i> <a>newAssociateIdentityProviderConfigResponse</a> smart
--   constructor.
data AssociateIdentityProviderConfigResponse
AssociateIdentityProviderConfigResponse' :: Maybe Update -> Maybe (HashMap Text Text) -> Int -> AssociateIdentityProviderConfigResponse
[$sel:update:AssociateIdentityProviderConfigResponse'] :: AssociateIdentityProviderConfigResponse -> Maybe Update

-- | The tags for the resource.
[$sel:tags:AssociateIdentityProviderConfigResponse'] :: AssociateIdentityProviderConfigResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:AssociateIdentityProviderConfigResponse'] :: AssociateIdentityProviderConfigResponse -> Int

-- | Create a value of <a>AssociateIdentityProviderConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:AssociateIdentityProviderConfigResponse'</a>,
--   <a>associateIdentityProviderConfigResponse_update</a> - Undocumented
--   member.
--   
--   <a>$sel:tags:AssociateIdentityProviderConfig'</a>,
--   <a>associateIdentityProviderConfigResponse_tags</a> - The tags for the
--   resource.
--   
--   <a>$sel:httpStatus:AssociateIdentityProviderConfigResponse'</a>,
--   <a>associateIdentityProviderConfigResponse_httpStatus</a> - The
--   response's http status code.
newAssociateIdentityProviderConfigResponse :: Int -> AssociateIdentityProviderConfigResponse

-- | Undocumented member.
associateIdentityProviderConfigResponse_update :: Lens' AssociateIdentityProviderConfigResponse (Maybe Update)

-- | The tags for the resource.
associateIdentityProviderConfigResponse_tags :: Lens' AssociateIdentityProviderConfigResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
associateIdentityProviderConfigResponse_httpStatus :: Lens' AssociateIdentityProviderConfigResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfig
instance GHC.Show.Show Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfig
instance GHC.Read.Read Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfig
instance GHC.Classes.Eq Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfig
instance GHC.Generics.Generic Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfigResponse
instance GHC.Show.Show Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfigResponse
instance GHC.Read.Read Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfigResponse
instance GHC.Classes.Eq Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.AssociateIdentityProviderConfig.AssociateIdentityProviderConfig


-- | Associate encryption configuration to an existing cluster.
--   
--   You can use this API to enable encryption on existing clusters which
--   do not have encryption already enabled. This allows you to implement a
--   defense-in-depth security strategy without migrating applications to
--   new Amazon EKS clusters.
module Network.AWS.EKS.AssociateEncryptionConfig

-- | <i>See:</i> <a>newAssociateEncryptionConfig</a> smart constructor.
data AssociateEncryptionConfig
AssociateEncryptionConfig' :: Maybe Text -> Text -> [EncryptionConfig] -> AssociateEncryptionConfig

-- | The client request token you are using with the encryption
--   configuration.
[$sel:clientRequestToken:AssociateEncryptionConfig'] :: AssociateEncryptionConfig -> Maybe Text

-- | The name of the cluster that you are associating with encryption
--   configuration.
[$sel:clusterName:AssociateEncryptionConfig'] :: AssociateEncryptionConfig -> Text

-- | The configuration you are using for encryption.
[$sel:encryptionConfig:AssociateEncryptionConfig'] :: AssociateEncryptionConfig -> [EncryptionConfig]

-- | Create a value of <a>AssociateEncryptionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:AssociateEncryptionConfig'</a>,
--   <a>associateEncryptionConfig_clientRequestToken</a> - The client
--   request token you are using with the encryption configuration.
--   
--   <a>$sel:clusterName:AssociateEncryptionConfig'</a>,
--   <a>associateEncryptionConfig_clusterName</a> - The name of the cluster
--   that you are associating with encryption configuration.
--   
--   <a>$sel:encryptionConfig:AssociateEncryptionConfig'</a>,
--   <a>associateEncryptionConfig_encryptionConfig</a> - The configuration
--   you are using for encryption.
newAssociateEncryptionConfig :: Text -> AssociateEncryptionConfig

-- | The client request token you are using with the encryption
--   configuration.
associateEncryptionConfig_clientRequestToken :: Lens' AssociateEncryptionConfig (Maybe Text)

-- | The name of the cluster that you are associating with encryption
--   configuration.
associateEncryptionConfig_clusterName :: Lens' AssociateEncryptionConfig Text

-- | The configuration you are using for encryption.
associateEncryptionConfig_encryptionConfig :: Lens' AssociateEncryptionConfig [EncryptionConfig]

-- | <i>See:</i> <a>newAssociateEncryptionConfigResponse</a> smart
--   constructor.
data AssociateEncryptionConfigResponse
AssociateEncryptionConfigResponse' :: Maybe Update -> Int -> AssociateEncryptionConfigResponse
[$sel:update:AssociateEncryptionConfigResponse'] :: AssociateEncryptionConfigResponse -> Maybe Update

-- | The response's http status code.
[$sel:httpStatus:AssociateEncryptionConfigResponse'] :: AssociateEncryptionConfigResponse -> Int

-- | Create a value of <a>AssociateEncryptionConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:AssociateEncryptionConfigResponse'</a>,
--   <a>associateEncryptionConfigResponse_update</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:AssociateEncryptionConfigResponse'</a>,
--   <a>associateEncryptionConfigResponse_httpStatus</a> - The response's
--   http status code.
newAssociateEncryptionConfigResponse :: Int -> AssociateEncryptionConfigResponse

-- | Undocumented member.
associateEncryptionConfigResponse_update :: Lens' AssociateEncryptionConfigResponse (Maybe Update)

-- | The response's http status code.
associateEncryptionConfigResponse_httpStatus :: Lens' AssociateEncryptionConfigResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfig
instance GHC.Show.Show Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfig
instance GHC.Read.Read Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfig
instance GHC.Classes.Eq Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfig
instance GHC.Generics.Generic Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfigResponse
instance GHC.Show.Show Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfigResponse
instance GHC.Read.Read Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfigResponse
instance GHC.Classes.Eq Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.AssociateEncryptionConfig.AssociateEncryptionConfig


-- | Deletes specified tags from a resource.
module Network.AWS.EKS.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource from which to delete
--   tags. Currently, the supported resources are Amazon EKS clusters and
--   managed node groups.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The keys of the tags to be removed.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource from which to delete tags. Currently, the supported
--   resources are Amazon EKS clusters and managed node groups.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource from which to delete
--   tags. Currently, the supported resources are Amazon EKS clusters and
--   managed node groups.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.EKS.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.EKS.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.EKS.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.EKS.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.EKS.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.EKS.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.EKS.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.EKS.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.EKS.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.UntagResource.UntagResource


-- | Updates an Amazon EKS add-on.
module Network.AWS.EKS.UpdateAddon

-- | <i>See:</i> <a>newUpdateAddon</a> smart constructor.
data UpdateAddon
UpdateAddon' :: Maybe Text -> Maybe Text -> Maybe ResolveConflicts -> Maybe Text -> Text -> Text -> UpdateAddon

-- | The version of the add-on. The version must match one of the versions
--   returned by <a>DescribeAddonVersions</a> .
[$sel:addonVersion:UpdateAddon'] :: UpdateAddon -> Maybe Text

-- | The Amazon Resource Name (ARN) of an existing IAM role to bind to the
--   add-on's service account. The role must be assigned the IAM
--   permissions required by the add-on. If you don't specify an existing
--   IAM role, then the add-on uses the permissions assigned to the node
--   IAM role. For more information, see <a>Amazon EKS node IAM role</a> in
--   the <i>Amazon EKS User Guide</i>.
--   
--   To specify an existing IAM role, you must have an IAM OpenID Connect
--   (OIDC) provider created for your cluster. For more information, see
--   <a>Enabling IAM roles for service accounts on your cluster</a> in the
--   <i>Amazon EKS User Guide</i>.
[$sel:serviceAccountRoleArn:UpdateAddon'] :: UpdateAddon -> Maybe Text

-- | How to resolve parameter value conflicts when applying the new version
--   of the add-on to the cluster.
[$sel:resolveConflicts:UpdateAddon'] :: UpdateAddon -> Maybe ResolveConflicts

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:UpdateAddon'] :: UpdateAddon -> Maybe Text

-- | The name of the cluster.
[$sel:clusterName:UpdateAddon'] :: UpdateAddon -> Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
[$sel:addonName:UpdateAddon'] :: UpdateAddon -> Text

-- | Create a value of <a>UpdateAddon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonVersion:UpdateAddon'</a>, <a>updateAddon_addonVersion</a>
--   - The version of the add-on. The version must match one of the
--   versions returned by <a>DescribeAddonVersions</a> .
--   
--   <a>$sel:serviceAccountRoleArn:UpdateAddon'</a>,
--   <a>updateAddon_serviceAccountRoleArn</a> - The Amazon Resource Name
--   (ARN) of an existing IAM role to bind to the add-on's service account.
--   The role must be assigned the IAM permissions required by the add-on.
--   If you don't specify an existing IAM role, then the add-on uses the
--   permissions assigned to the node IAM role. For more information, see
--   <a>Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.
--   
--   To specify an existing IAM role, you must have an IAM OpenID Connect
--   (OIDC) provider created for your cluster. For more information, see
--   <a>Enabling IAM roles for service accounts on your cluster</a> in the
--   <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:resolveConflicts:UpdateAddon'</a>,
--   <a>updateAddon_resolveConflicts</a> - How to resolve parameter value
--   conflicts when applying the new version of the add-on to the cluster.
--   
--   <a>$sel:clientRequestToken:UpdateAddon'</a>,
--   <a>updateAddon_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:clusterName:UpdateAddon'</a>, <a>updateAddon_clusterName</a> -
--   The name of the cluster.
--   
--   <a>$sel:addonName:UpdateAddon'</a>, <a>updateAddon_addonName</a> - The
--   name of the add-on. The name must match one of the names returned by
--   <a>ListAddons</a> .
newUpdateAddon :: Text -> Text -> UpdateAddon

-- | The version of the add-on. The version must match one of the versions
--   returned by <a>DescribeAddonVersions</a> .
updateAddon_addonVersion :: Lens' UpdateAddon (Maybe Text)

-- | The Amazon Resource Name (ARN) of an existing IAM role to bind to the
--   add-on's service account. The role must be assigned the IAM
--   permissions required by the add-on. If you don't specify an existing
--   IAM role, then the add-on uses the permissions assigned to the node
--   IAM role. For more information, see <a>Amazon EKS node IAM role</a> in
--   the <i>Amazon EKS User Guide</i>.
--   
--   To specify an existing IAM role, you must have an IAM OpenID Connect
--   (OIDC) provider created for your cluster. For more information, see
--   <a>Enabling IAM roles for service accounts on your cluster</a> in the
--   <i>Amazon EKS User Guide</i>.
updateAddon_serviceAccountRoleArn :: Lens' UpdateAddon (Maybe Text)

-- | How to resolve parameter value conflicts when applying the new version
--   of the add-on to the cluster.
updateAddon_resolveConflicts :: Lens' UpdateAddon (Maybe ResolveConflicts)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
updateAddon_clientRequestToken :: Lens' UpdateAddon (Maybe Text)

-- | The name of the cluster.
updateAddon_clusterName :: Lens' UpdateAddon Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
updateAddon_addonName :: Lens' UpdateAddon Text

-- | <i>See:</i> <a>newUpdateAddonResponse</a> smart constructor.
data UpdateAddonResponse
UpdateAddonResponse' :: Maybe Update -> Int -> UpdateAddonResponse
[$sel:update:UpdateAddonResponse'] :: UpdateAddonResponse -> Maybe Update

-- | The response's http status code.
[$sel:httpStatus:UpdateAddonResponse'] :: UpdateAddonResponse -> Int

-- | Create a value of <a>UpdateAddonResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:UpdateAddonResponse'</a>,
--   <a>updateAddonResponse_update</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateAddonResponse'</a>,
--   <a>updateAddonResponse_httpStatus</a> - The response's http status
--   code.
newUpdateAddonResponse :: Int -> UpdateAddonResponse

-- | Undocumented member.
updateAddonResponse_update :: Lens' UpdateAddonResponse (Maybe Update)

-- | The response's http status code.
updateAddonResponse_httpStatus :: Lens' UpdateAddonResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.UpdateAddon.UpdateAddon
instance GHC.Show.Show Network.AWS.EKS.UpdateAddon.UpdateAddon
instance GHC.Read.Read Network.AWS.EKS.UpdateAddon.UpdateAddon
instance GHC.Classes.Eq Network.AWS.EKS.UpdateAddon.UpdateAddon
instance GHC.Generics.Generic Network.AWS.EKS.UpdateAddon.UpdateAddonResponse
instance GHC.Show.Show Network.AWS.EKS.UpdateAddon.UpdateAddonResponse
instance GHC.Read.Read Network.AWS.EKS.UpdateAddon.UpdateAddonResponse
instance GHC.Classes.Eq Network.AWS.EKS.UpdateAddon.UpdateAddonResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.UpdateAddon.UpdateAddon
instance Control.DeepSeq.NFData Network.AWS.EKS.UpdateAddon.UpdateAddonResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.UpdateAddon.UpdateAddon
instance Control.DeepSeq.NFData Network.AWS.EKS.UpdateAddon.UpdateAddon
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.UpdateAddon.UpdateAddon
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.UpdateAddon.UpdateAddon
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.UpdateAddon.UpdateAddon
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.UpdateAddon.UpdateAddon


-- | Updates an Amazon EKS cluster configuration. Your cluster continues to
--   function during the update. The response output includes an update ID
--   that you can use to track the status of your cluster update with the
--   DescribeUpdate API operation.
--   
--   You can use this API operation to enable or disable exporting the
--   Kubernetes control plane logs for your cluster to CloudWatch Logs. By
--   default, cluster control plane logs aren't exported to CloudWatch
--   Logs. For more information, see <a>Amazon EKS Cluster Control Plane
--   Logs</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   CloudWatch Logs ingestion, archive storage, and data scanning rates
--   apply to exported control plane logs. For more information, see
--   <a>CloudWatch Pricing</a>.
--   
--   You can also use this API operation to enable or disable public and
--   private access to your cluster's Kubernetes API server endpoint. By
--   default, public access is enabled, and private access is disabled. For
--   more information, see <a>Amazon EKS cluster endpoint access
--   control</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   You can't update the subnets or security group IDs for an existing
--   cluster.
--   
--   Cluster updates are asynchronous, and they should finish within a few
--   minutes. During an update, the cluster status moves to
--   <tt>UPDATING</tt> (this status transition is eventually consistent).
--   When the update is complete (either <tt>Failed</tt> or
--   <tt>Successful</tt>), the cluster status moves to <tt>Active</tt>.
module Network.AWS.EKS.UpdateClusterConfig

-- | <i>See:</i> <a>newUpdateClusterConfig</a> smart constructor.
data UpdateClusterConfig
UpdateClusterConfig' :: Maybe Text -> Maybe Logging -> Maybe VpcConfigRequest -> Text -> UpdateClusterConfig

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:UpdateClusterConfig'] :: UpdateClusterConfig -> Maybe Text

-- | Enable or disable exporting the Kubernetes control plane logs for your
--   cluster to CloudWatch Logs. By default, cluster control plane logs
--   aren't exported to CloudWatch Logs. For more information, see
--   <a>Amazon EKS cluster control plane logs</a> in the /<i>Amazon EKS
--   User Guide</i>/ .
--   
--   CloudWatch Logs ingestion, archive storage, and data scanning rates
--   apply to exported control plane logs. For more information, see
--   <a>CloudWatch Pricing</a>.
[$sel:logging:UpdateClusterConfig'] :: UpdateClusterConfig -> Maybe Logging
[$sel:resourcesVpcConfig:UpdateClusterConfig'] :: UpdateClusterConfig -> Maybe VpcConfigRequest

-- | The name of the Amazon EKS cluster to update.
[$sel:name:UpdateClusterConfig'] :: UpdateClusterConfig -> Text

-- | Create a value of <a>UpdateClusterConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:UpdateClusterConfig'</a>,
--   <a>updateClusterConfig_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:logging:UpdateClusterConfig'</a>,
--   <a>updateClusterConfig_logging</a> - Enable or disable exporting the
--   Kubernetes control plane logs for your cluster to CloudWatch Logs. By
--   default, cluster control plane logs aren't exported to CloudWatch
--   Logs. For more information, see <a>Amazon EKS cluster control plane
--   logs</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   CloudWatch Logs ingestion, archive storage, and data scanning rates
--   apply to exported control plane logs. For more information, see
--   <a>CloudWatch Pricing</a>.
--   
--   <a>$sel:resourcesVpcConfig:UpdateClusterConfig'</a>,
--   <a>updateClusterConfig_resourcesVpcConfig</a> - Undocumented member.
--   
--   <a>$sel:name:UpdateClusterConfig'</a>, <a>updateClusterConfig_name</a>
--   - The name of the Amazon EKS cluster to update.
newUpdateClusterConfig :: Text -> UpdateClusterConfig

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
updateClusterConfig_clientRequestToken :: Lens' UpdateClusterConfig (Maybe Text)

-- | Enable or disable exporting the Kubernetes control plane logs for your
--   cluster to CloudWatch Logs. By default, cluster control plane logs
--   aren't exported to CloudWatch Logs. For more information, see
--   <a>Amazon EKS cluster control plane logs</a> in the /<i>Amazon EKS
--   User Guide</i>/ .
--   
--   CloudWatch Logs ingestion, archive storage, and data scanning rates
--   apply to exported control plane logs. For more information, see
--   <a>CloudWatch Pricing</a>.
updateClusterConfig_logging :: Lens' UpdateClusterConfig (Maybe Logging)

-- | Undocumented member.
updateClusterConfig_resourcesVpcConfig :: Lens' UpdateClusterConfig (Maybe VpcConfigRequest)

-- | The name of the Amazon EKS cluster to update.
updateClusterConfig_name :: Lens' UpdateClusterConfig Text

-- | <i>See:</i> <a>newUpdateClusterConfigResponse</a> smart constructor.
data UpdateClusterConfigResponse
UpdateClusterConfigResponse' :: Maybe Update -> Int -> UpdateClusterConfigResponse
[$sel:update:UpdateClusterConfigResponse'] :: UpdateClusterConfigResponse -> Maybe Update

-- | The response's http status code.
[$sel:httpStatus:UpdateClusterConfigResponse'] :: UpdateClusterConfigResponse -> Int

-- | Create a value of <a>UpdateClusterConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:UpdateClusterConfigResponse'</a>,
--   <a>updateClusterConfigResponse_update</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateClusterConfigResponse'</a>,
--   <a>updateClusterConfigResponse_httpStatus</a> - The response's http
--   status code.
newUpdateClusterConfigResponse :: Int -> UpdateClusterConfigResponse

-- | Undocumented member.
updateClusterConfigResponse_update :: Lens' UpdateClusterConfigResponse (Maybe Update)

-- | The response's http status code.
updateClusterConfigResponse_httpStatus :: Lens' UpdateClusterConfigResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfig
instance GHC.Show.Show Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfig
instance GHC.Read.Read Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfig
instance GHC.Classes.Eq Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfig
instance GHC.Generics.Generic Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfigResponse
instance GHC.Show.Show Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfigResponse
instance GHC.Read.Read Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfigResponse
instance GHC.Classes.Eq Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.UpdateClusterConfig.UpdateClusterConfig


-- | Updates an Amazon EKS cluster to the specified Kubernetes version.
--   Your cluster continues to function during the update. The response
--   output includes an update ID that you can use to track the status of
--   your cluster update with the DescribeUpdate API operation.
--   
--   Cluster updates are asynchronous, and they should finish within a few
--   minutes. During an update, the cluster status moves to
--   <tt>UPDATING</tt> (this status transition is eventually consistent).
--   When the update is complete (either <tt>Failed</tt> or
--   <tt>Successful</tt>), the cluster status moves to <tt>Active</tt>.
--   
--   If your cluster has managed node groups attached to it, all of your
--   node groups’ Kubernetes versions must match the cluster’s Kubernetes
--   version in order to update the cluster to a new Kubernetes version.
module Network.AWS.EKS.UpdateClusterVersion

-- | <i>See:</i> <a>newUpdateClusterVersion</a> smart constructor.
data UpdateClusterVersion
UpdateClusterVersion' :: Maybe Text -> Text -> Text -> UpdateClusterVersion

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:UpdateClusterVersion'] :: UpdateClusterVersion -> Maybe Text

-- | The name of the Amazon EKS cluster to update.
[$sel:name:UpdateClusterVersion'] :: UpdateClusterVersion -> Text

-- | The desired Kubernetes version following a successful update.
[$sel:version:UpdateClusterVersion'] :: UpdateClusterVersion -> Text

-- | Create a value of <a>UpdateClusterVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:UpdateClusterVersion'</a>,
--   <a>updateClusterVersion_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:name:UpdateClusterVersion'</a>,
--   <a>updateClusterVersion_name</a> - The name of the Amazon EKS cluster
--   to update.
--   
--   <a>$sel:version:UpdateClusterVersion'</a>,
--   <a>updateClusterVersion_version</a> - The desired Kubernetes version
--   following a successful update.
newUpdateClusterVersion :: Text -> Text -> UpdateClusterVersion

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
updateClusterVersion_clientRequestToken :: Lens' UpdateClusterVersion (Maybe Text)

-- | The name of the Amazon EKS cluster to update.
updateClusterVersion_name :: Lens' UpdateClusterVersion Text

-- | The desired Kubernetes version following a successful update.
updateClusterVersion_version :: Lens' UpdateClusterVersion Text

-- | <i>See:</i> <a>newUpdateClusterVersionResponse</a> smart constructor.
data UpdateClusterVersionResponse
UpdateClusterVersionResponse' :: Maybe Update -> Int -> UpdateClusterVersionResponse

-- | The full description of the specified update
[$sel:update:UpdateClusterVersionResponse'] :: UpdateClusterVersionResponse -> Maybe Update

-- | The response's http status code.
[$sel:httpStatus:UpdateClusterVersionResponse'] :: UpdateClusterVersionResponse -> Int

-- | Create a value of <a>UpdateClusterVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:UpdateClusterVersionResponse'</a>,
--   <a>updateClusterVersionResponse_update</a> - The full description of
--   the specified update
--   
--   <a>$sel:httpStatus:UpdateClusterVersionResponse'</a>,
--   <a>updateClusterVersionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateClusterVersionResponse :: Int -> UpdateClusterVersionResponse

-- | The full description of the specified update
updateClusterVersionResponse_update :: Lens' UpdateClusterVersionResponse (Maybe Update)

-- | The response's http status code.
updateClusterVersionResponse_httpStatus :: Lens' UpdateClusterVersionResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersion
instance GHC.Show.Show Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersion
instance GHC.Read.Read Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersion
instance GHC.Classes.Eq Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersion
instance GHC.Generics.Generic Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersionResponse
instance GHC.Show.Show Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersionResponse
instance GHC.Read.Read Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersionResponse
instance GHC.Classes.Eq Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersion
instance Control.DeepSeq.NFData Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersion
instance Control.DeepSeq.NFData Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.UpdateClusterVersion.UpdateClusterVersion


-- | Updates an Amazon EKS managed node group configuration. Your node
--   group continues to function during the update. The response output
--   includes an update ID that you can use to track the status of your
--   node group update with the DescribeUpdate API operation. Currently you
--   can update the Kubernetes labels for a node group or the scaling
--   configuration.
module Network.AWS.EKS.UpdateNodegroupConfig

-- | <i>See:</i> <a>newUpdateNodegroupConfig</a> smart constructor.
data UpdateNodegroupConfig
UpdateNodegroupConfig' :: Maybe UpdateTaintsPayload -> Maybe NodegroupScalingConfig -> Maybe UpdateLabelsPayload -> Maybe Text -> Maybe NodegroupUpdateConfig -> Text -> Text -> UpdateNodegroupConfig

-- | The Kubernetes taints to be applied to the nodes in the node group
--   after the update.
[$sel:taints:UpdateNodegroupConfig'] :: UpdateNodegroupConfig -> Maybe UpdateTaintsPayload

-- | The scaling configuration details for the Auto Scaling group after the
--   update.
[$sel:scalingConfig:UpdateNodegroupConfig'] :: UpdateNodegroupConfig -> Maybe NodegroupScalingConfig

-- | The Kubernetes labels to be applied to the nodes in the node group
--   after the update.
[$sel:labels:UpdateNodegroupConfig'] :: UpdateNodegroupConfig -> Maybe UpdateLabelsPayload

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:UpdateNodegroupConfig'] :: UpdateNodegroupConfig -> Maybe Text

-- | The node group update configuration.
[$sel:updateConfig:UpdateNodegroupConfig'] :: UpdateNodegroupConfig -> Maybe NodegroupUpdateConfig

-- | The name of the Amazon EKS cluster that the managed node group resides
--   in.
[$sel:clusterName:UpdateNodegroupConfig'] :: UpdateNodegroupConfig -> Text

-- | The name of the managed node group to update.
[$sel:nodegroupName:UpdateNodegroupConfig'] :: UpdateNodegroupConfig -> Text

-- | Create a value of <a>UpdateNodegroupConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taints:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_taints</a> - The Kubernetes taints to be
--   applied to the nodes in the node group after the update.
--   
--   <a>$sel:scalingConfig:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_scalingConfig</a> - The scaling configuration
--   details for the Auto Scaling group after the update.
--   
--   <a>$sel:labels:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_labels</a> - The Kubernetes labels to be
--   applied to the nodes in the node group after the update.
--   
--   <a>$sel:clientRequestToken:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:updateConfig:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_updateConfig</a> - The node group update
--   configuration.
--   
--   <a>$sel:clusterName:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_clusterName</a> - The name of the Amazon EKS
--   cluster that the managed node group resides in.
--   
--   <a>$sel:nodegroupName:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_nodegroupName</a> - The name of the managed
--   node group to update.
newUpdateNodegroupConfig :: Text -> Text -> UpdateNodegroupConfig

-- | The Kubernetes taints to be applied to the nodes in the node group
--   after the update.
updateNodegroupConfig_taints :: Lens' UpdateNodegroupConfig (Maybe UpdateTaintsPayload)

-- | The scaling configuration details for the Auto Scaling group after the
--   update.
updateNodegroupConfig_scalingConfig :: Lens' UpdateNodegroupConfig (Maybe NodegroupScalingConfig)

-- | The Kubernetes labels to be applied to the nodes in the node group
--   after the update.
updateNodegroupConfig_labels :: Lens' UpdateNodegroupConfig (Maybe UpdateLabelsPayload)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
updateNodegroupConfig_clientRequestToken :: Lens' UpdateNodegroupConfig (Maybe Text)

-- | The node group update configuration.
updateNodegroupConfig_updateConfig :: Lens' UpdateNodegroupConfig (Maybe NodegroupUpdateConfig)

-- | The name of the Amazon EKS cluster that the managed node group resides
--   in.
updateNodegroupConfig_clusterName :: Lens' UpdateNodegroupConfig Text

-- | The name of the managed node group to update.
updateNodegroupConfig_nodegroupName :: Lens' UpdateNodegroupConfig Text

-- | <i>See:</i> <a>newUpdateNodegroupConfigResponse</a> smart constructor.
data UpdateNodegroupConfigResponse
UpdateNodegroupConfigResponse' :: Maybe Update -> Int -> UpdateNodegroupConfigResponse
[$sel:update:UpdateNodegroupConfigResponse'] :: UpdateNodegroupConfigResponse -> Maybe Update

-- | The response's http status code.
[$sel:httpStatus:UpdateNodegroupConfigResponse'] :: UpdateNodegroupConfigResponse -> Int

-- | Create a value of <a>UpdateNodegroupConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:UpdateNodegroupConfigResponse'</a>,
--   <a>updateNodegroupConfigResponse_update</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateNodegroupConfigResponse'</a>,
--   <a>updateNodegroupConfigResponse_httpStatus</a> - The response's http
--   status code.
newUpdateNodegroupConfigResponse :: Int -> UpdateNodegroupConfigResponse

-- | Undocumented member.
updateNodegroupConfigResponse_update :: Lens' UpdateNodegroupConfigResponse (Maybe Update)

-- | The response's http status code.
updateNodegroupConfigResponse_httpStatus :: Lens' UpdateNodegroupConfigResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfig
instance GHC.Show.Show Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfig
instance GHC.Read.Read Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfig
instance GHC.Classes.Eq Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfig
instance GHC.Generics.Generic Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfigResponse
instance GHC.Show.Show Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfigResponse
instance GHC.Read.Read Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfigResponse
instance GHC.Classes.Eq Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfigResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfigResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfig
instance Control.DeepSeq.NFData Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfig
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfig
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfig
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfig
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.UpdateNodegroupConfig.UpdateNodegroupConfig


-- | Updates the Kubernetes version or AMI version of an Amazon EKS managed
--   node group.
--   
--   You can update a node group using a launch template only if the node
--   group was originally deployed with a launch template. If you need to
--   update a custom AMI in a node group that was deployed with a launch
--   template, then update your custom AMI, specify the new ID in a new
--   version of the launch template, and then update the node group to the
--   new version of the launch template.
--   
--   If you update without a launch template, then you can update to the
--   latest available AMI version of a node group's current Kubernetes
--   version by not specifying a Kubernetes version in the request. You can
--   update to the latest AMI version of your cluster's current Kubernetes
--   version by specifying your cluster's Kubernetes version in the
--   request. For more information, see <a>Amazon EKS optimized Amazon
--   Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>.
--   
--   You cannot roll back a node group to an earlier Kubernetes version or
--   AMI version.
--   
--   When a node in a managed node group is terminated due to a scaling
--   action or update, the pods in that node are drained first. Amazon EKS
--   attempts to drain the nodes gracefully and will fail if it is unable
--   to do so. You can <tt>force</tt> the update if Amazon EKS is unable to
--   drain the nodes as a result of a pod disruption budget issue.
module Network.AWS.EKS.UpdateNodegroupVersion

-- | <i>See:</i> <a>newUpdateNodegroupVersion</a> smart constructor.
data UpdateNodegroupVersion
UpdateNodegroupVersion' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Text -> Text -> UpdateNodegroupVersion

-- | Force the update if the existing node group's pods are unable to be
--   drained due to a pod disruption budget issue. If an update fails
--   because pods could not be drained, you can force the update after it
--   fails to terminate the old node whether or not any pods are running on
--   the node.
[$sel:force:UpdateNodegroupVersion'] :: UpdateNodegroupVersion -> Maybe Bool

-- | The AMI version of the Amazon EKS optimized AMI to use for the update.
--   By default, the latest available AMI version for the node group's
--   Kubernetes version is used. For more information, see <a>Amazon EKS
--   optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User
--   Guide</i>. If you specify <tt>launchTemplate</tt>, and your launch
--   template uses a custom AMI, then don't specify
--   <tt>releaseVersion</tt>, or the node group update will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
[$sel:releaseVersion:UpdateNodegroupVersion'] :: UpdateNodegroupVersion -> Maybe Text

-- | The Kubernetes version to update to. If no version is specified, then
--   the Kubernetes version of the node group does not change. You can
--   specify the Kubernetes version of the cluster to update the node group
--   to the latest AMI version of the cluster's Kubernetes version. If you
--   specify <tt>launchTemplate</tt>, and your launch template uses a
--   custom AMI, then don't specify <tt>version</tt>, or the node group
--   update will fail. For more information about using launch templates
--   with Amazon EKS, see <a>Launch template support</a> in the Amazon EKS
--   User Guide.
[$sel:version:UpdateNodegroupVersion'] :: UpdateNodegroupVersion -> Maybe Text

-- | An object representing a node group's launch template specification.
--   You can only update a node group using a launch template if the node
--   group was originally deployed with a launch template.
[$sel:launchTemplate:UpdateNodegroupVersion'] :: UpdateNodegroupVersion -> Maybe LaunchTemplateSpecification

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
[$sel:clientRequestToken:UpdateNodegroupVersion'] :: UpdateNodegroupVersion -> Maybe Text

-- | The name of the Amazon EKS cluster that is associated with the managed
--   node group to update.
[$sel:clusterName:UpdateNodegroupVersion'] :: UpdateNodegroupVersion -> Text

-- | The name of the managed node group to update.
[$sel:nodegroupName:UpdateNodegroupVersion'] :: UpdateNodegroupVersion -> Text

-- | Create a value of <a>UpdateNodegroupVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:force:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_force</a> - Force the update if the existing
--   node group's pods are unable to be drained due to a pod disruption
--   budget issue. If an update fails because pods could not be drained,
--   you can force the update after it fails to terminate the old node
--   whether or not any pods are running on the node.
--   
--   <a>$sel:releaseVersion:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_releaseVersion</a> - The AMI version of the
--   Amazon EKS optimized AMI to use for the update. By default, the latest
--   available AMI version for the node group's Kubernetes version is used.
--   For more information, see <a>Amazon EKS optimized Amazon Linux 2 AMI
--   versions</a> in the <i>Amazon EKS User Guide</i>. If you specify
--   <tt>launchTemplate</tt>, and your launch template uses a custom AMI,
--   then don't specify <tt>releaseVersion</tt>, or the node group update
--   will fail. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
--   
--   <a>$sel:version:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_version</a> - The Kubernetes version to
--   update to. If no version is specified, then the Kubernetes version of
--   the node group does not change. You can specify the Kubernetes version
--   of the cluster to update the node group to the latest AMI version of
--   the cluster's Kubernetes version. If you specify
--   <tt>launchTemplate</tt>, and your launch template uses a custom AMI,
--   then don't specify <tt>version</tt>, or the node group update will
--   fail. For more information about using launch templates with Amazon
--   EKS, see <a>Launch template support</a> in the Amazon EKS User Guide.
--   
--   <a>$sel:launchTemplate:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_launchTemplate</a> - An object representing
--   a node group's launch template specification. You can only update a
--   node group using a launch template if the node group was originally
--   deployed with a launch template.
--   
--   <a>$sel:clientRequestToken:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:clusterName:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_clusterName</a> - The name of the Amazon EKS
--   cluster that is associated with the managed node group to update.
--   
--   <a>$sel:nodegroupName:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_nodegroupName</a> - The name of the managed
--   node group to update.
newUpdateNodegroupVersion :: Text -> Text -> UpdateNodegroupVersion

-- | Force the update if the existing node group's pods are unable to be
--   drained due to a pod disruption budget issue. If an update fails
--   because pods could not be drained, you can force the update after it
--   fails to terminate the old node whether or not any pods are running on
--   the node.
updateNodegroupVersion_force :: Lens' UpdateNodegroupVersion (Maybe Bool)

-- | The AMI version of the Amazon EKS optimized AMI to use for the update.
--   By default, the latest available AMI version for the node group's
--   Kubernetes version is used. For more information, see <a>Amazon EKS
--   optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User
--   Guide</i>. If you specify <tt>launchTemplate</tt>, and your launch
--   template uses a custom AMI, then don't specify
--   <tt>releaseVersion</tt>, or the node group update will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
updateNodegroupVersion_releaseVersion :: Lens' UpdateNodegroupVersion (Maybe Text)

-- | The Kubernetes version to update to. If no version is specified, then
--   the Kubernetes version of the node group does not change. You can
--   specify the Kubernetes version of the cluster to update the node group
--   to the latest AMI version of the cluster's Kubernetes version. If you
--   specify <tt>launchTemplate</tt>, and your launch template uses a
--   custom AMI, then don't specify <tt>version</tt>, or the node group
--   update will fail. For more information about using launch templates
--   with Amazon EKS, see <a>Launch template support</a> in the Amazon EKS
--   User Guide.
updateNodegroupVersion_version :: Lens' UpdateNodegroupVersion (Maybe Text)

-- | An object representing a node group's launch template specification.
--   You can only update a node group using a launch template if the node
--   group was originally deployed with a launch template.
updateNodegroupVersion_launchTemplate :: Lens' UpdateNodegroupVersion (Maybe LaunchTemplateSpecification)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
updateNodegroupVersion_clientRequestToken :: Lens' UpdateNodegroupVersion (Maybe Text)

-- | The name of the Amazon EKS cluster that is associated with the managed
--   node group to update.
updateNodegroupVersion_clusterName :: Lens' UpdateNodegroupVersion Text

-- | The name of the managed node group to update.
updateNodegroupVersion_nodegroupName :: Lens' UpdateNodegroupVersion Text

-- | <i>See:</i> <a>newUpdateNodegroupVersionResponse</a> smart
--   constructor.
data UpdateNodegroupVersionResponse
UpdateNodegroupVersionResponse' :: Maybe Update -> Int -> UpdateNodegroupVersionResponse
[$sel:update:UpdateNodegroupVersionResponse'] :: UpdateNodegroupVersionResponse -> Maybe Update

-- | The response's http status code.
[$sel:httpStatus:UpdateNodegroupVersionResponse'] :: UpdateNodegroupVersionResponse -> Int

-- | Create a value of <a>UpdateNodegroupVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:UpdateNodegroupVersionResponse'</a>,
--   <a>updateNodegroupVersionResponse_update</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateNodegroupVersionResponse'</a>,
--   <a>updateNodegroupVersionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateNodegroupVersionResponse :: Int -> UpdateNodegroupVersionResponse

-- | Undocumented member.
updateNodegroupVersionResponse_update :: Lens' UpdateNodegroupVersionResponse (Maybe Update)

-- | The response's http status code.
updateNodegroupVersionResponse_httpStatus :: Lens' UpdateNodegroupVersionResponse Int
instance GHC.Generics.Generic Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersion
instance GHC.Show.Show Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersion
instance GHC.Read.Read Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersion
instance GHC.Classes.Eq Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersion
instance GHC.Generics.Generic Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersionResponse
instance GHC.Show.Show Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersionResponse
instance GHC.Read.Read Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersionResponse
instance GHC.Classes.Eq Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersion
instance Control.DeepSeq.NFData Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersionResponse
instance Data.Hashable.Class.Hashable Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersion
instance Control.DeepSeq.NFData Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersion
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersion
instance Network.AWS.Data.Path.ToPath Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.EKS.UpdateNodegroupVersion.UpdateNodegroupVersion


module Network.AWS.EKS.Lens

-- | The version of the add-on. The version must match one of the versions
--   returned by <a>DescribeAddonVersions</a> .
createAddon_addonVersion :: Lens' CreateAddon (Maybe Text)

-- | The Amazon Resource Name (ARN) of an existing IAM role to bind to the
--   add-on's service account. The role must be assigned the IAM
--   permissions required by the add-on. If you don't specify an existing
--   IAM role, then the add-on uses the permissions assigned to the node
--   IAM role. For more information, see <a>Amazon EKS node IAM role</a> in
--   the <i>Amazon EKS User Guide</i>.
--   
--   To specify an existing IAM role, you must have an IAM OpenID Connect
--   (OIDC) provider created for your cluster. For more information, see
--   <a>Enabling IAM roles for service accounts on your cluster</a> in the
--   <i>Amazon EKS User Guide</i>.
createAddon_serviceAccountRoleArn :: Lens' CreateAddon (Maybe Text)

-- | How to resolve parameter value conflicts when migrating an existing
--   add-on to an Amazon EKS add-on.
createAddon_resolveConflicts :: Lens' CreateAddon (Maybe ResolveConflicts)

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createAddon_clientRequestToken :: Lens' CreateAddon (Maybe Text)

-- | The metadata to apply to the cluster to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define.
createAddon_tags :: Lens' CreateAddon (Maybe (HashMap Text Text))

-- | The name of the cluster to create the add-on for.
createAddon_clusterName :: Lens' CreateAddon Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>DescribeAddonVersions</a> .
createAddon_addonName :: Lens' CreateAddon Text

-- | Undocumented member.
createAddonResponse_addon :: Lens' CreateAddonResponse (Maybe Addon)

-- | The response's http status code.
createAddonResponse_httpStatus :: Lens' CreateAddonResponse Int

-- | The name of the Amazon EKS cluster associated with the Fargate
--   profile.
describeFargateProfile_clusterName :: Lens' DescribeFargateProfile Text

-- | The name of the Fargate profile to describe.
describeFargateProfile_fargateProfileName :: Lens' DescribeFargateProfile Text

-- | The full description of your Fargate profile.
describeFargateProfileResponse_fargateProfile :: Lens' DescribeFargateProfileResponse (Maybe FargateProfile)

-- | The response's http status code.
describeFargateProfileResponse_httpStatus :: Lens' DescribeFargateProfileResponse Int

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
describeUpdate_addonName :: Lens' DescribeUpdate (Maybe Text)

-- | The name of the Amazon EKS node group associated with the update.
describeUpdate_nodegroupName :: Lens' DescribeUpdate (Maybe Text)

-- | The name of the Amazon EKS cluster associated with the update.
describeUpdate_name :: Lens' DescribeUpdate Text

-- | The ID of the update to describe.
describeUpdate_updateId :: Lens' DescribeUpdate Text

-- | The full description of the specified update.
describeUpdateResponse_update :: Lens' DescribeUpdateResponse (Maybe Update)

-- | The response's http status code.
describeUpdateResponse_httpStatus :: Lens' DescribeUpdateResponse Int

-- | The Kubernetes taints to be applied to the nodes in the node group
--   after the update.
updateNodegroupConfig_taints :: Lens' UpdateNodegroupConfig (Maybe UpdateTaintsPayload)

-- | The scaling configuration details for the Auto Scaling group after the
--   update.
updateNodegroupConfig_scalingConfig :: Lens' UpdateNodegroupConfig (Maybe NodegroupScalingConfig)

-- | The Kubernetes labels to be applied to the nodes in the node group
--   after the update.
updateNodegroupConfig_labels :: Lens' UpdateNodegroupConfig (Maybe UpdateLabelsPayload)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
updateNodegroupConfig_clientRequestToken :: Lens' UpdateNodegroupConfig (Maybe Text)

-- | The node group update configuration.
updateNodegroupConfig_updateConfig :: Lens' UpdateNodegroupConfig (Maybe NodegroupUpdateConfig)

-- | The name of the Amazon EKS cluster that the managed node group resides
--   in.
updateNodegroupConfig_clusterName :: Lens' UpdateNodegroupConfig Text

-- | The name of the managed node group to update.
updateNodegroupConfig_nodegroupName :: Lens' UpdateNodegroupConfig Text

-- | Undocumented member.
updateNodegroupConfigResponse_update :: Lens' UpdateNodegroupConfigResponse (Maybe Update)

-- | The response's http status code.
updateNodegroupConfigResponse_httpStatus :: Lens' UpdateNodegroupConfigResponse Int

-- | The name of the cluster to describe.
describeCluster_name :: Lens' DescribeCluster Text

-- | The full description of your specified cluster.
describeClusterResponse_cluster :: Lens' DescribeClusterResponse (Maybe Cluster)

-- | The response's http status code.
describeClusterResponse_httpStatus :: Lens' DescribeClusterResponse Int

-- | The name of the connected cluster to deregister.
deregisterCluster_name :: Lens' DeregisterCluster Text

-- | Undocumented member.
deregisterClusterResponse_cluster :: Lens' DeregisterClusterResponse (Maybe Cluster)

-- | The response's http status code.
deregisterClusterResponse_httpStatus :: Lens' DeregisterClusterResponse Int

-- | The name of the Amazon EKS cluster associated with the node group.
describeNodegroup_clusterName :: Lens' DescribeNodegroup Text

-- | The name of the node group to describe.
describeNodegroup_nodegroupName :: Lens' DescribeNodegroup Text

-- | The full description of your node group.
describeNodegroupResponse_nodegroup :: Lens' DescribeNodegroupResponse (Maybe Nodegroup)

-- | The response's http status code.
describeNodegroupResponse_httpStatus :: Lens' DescribeNodegroupResponse Int

-- | The Amazon Resource Name (ARN) that identifies the resource for which
--   to list the tags. Currently, the supported resources are Amazon EKS
--   clusters and managed node groups.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags for the resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The IDs of subnets to launch your pods into. At this time, pods
--   running on Fargate are not assigned public IP addresses, so only
--   private subnets (with no direct route to an Internet Gateway) are
--   accepted for this parameter.
createFargateProfile_subnets :: Lens' CreateFargateProfile (Maybe [Text])

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createFargateProfile_clientRequestToken :: Lens' CreateFargateProfile (Maybe Text)

-- | The selectors to match for pods to use this Fargate profile. Each
--   selector must have an associated namespace. Optionally, you can also
--   specify labels for a namespace. You may specify up to five selectors
--   in a Fargate profile.
createFargateProfile_selectors :: Lens' CreateFargateProfile (Maybe [FargateProfileSelector])

-- | The metadata to apply to the Fargate profile to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Fargate profile tags do not
--   propagate to any other resources associated with the Fargate profile,
--   such as the pods that are scheduled with it.
createFargateProfile_tags :: Lens' CreateFargateProfile (Maybe (HashMap Text Text))

-- | The name of the Fargate profile.
createFargateProfile_fargateProfileName :: Lens' CreateFargateProfile Text

-- | The name of the Amazon EKS cluster to apply the Fargate profile to.
createFargateProfile_clusterName :: Lens' CreateFargateProfile Text

-- | The Amazon Resource Name (ARN) of the pod execution role to use for
--   pods that match the selectors in the Fargate profile. The pod
--   execution role allows Fargate infrastructure to register with your
--   cluster as a node, and it provides read access to Amazon ECR image
--   repositories. For more information, see <a>Pod Execution Role</a> in
--   the <i>Amazon EKS User Guide</i>.
createFargateProfile_podExecutionRoleArn :: Lens' CreateFargateProfile Text

-- | The full description of your new Fargate profile.
createFargateProfileResponse_fargateProfile :: Lens' CreateFargateProfileResponse (Maybe FargateProfile)

-- | The response's http status code.
createFargateProfileResponse_httpStatus :: Lens' CreateFargateProfileResponse Int

-- | The cluster name that the identity provider configuration is
--   associated to.
describeIdentityProviderConfig_clusterName :: Lens' DescribeIdentityProviderConfig Text

-- | An object that represents an identity provider configuration.
describeIdentityProviderConfig_identityProviderConfig :: Lens' DescribeIdentityProviderConfig IdentityProviderConfig

-- | The object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
describeIdentityProviderConfigResponse_identityProviderConfig :: Lens' DescribeIdentityProviderConfigResponse (Maybe IdentityProviderConfigResponse)

-- | The response's http status code.
describeIdentityProviderConfigResponse_httpStatus :: Lens' DescribeIdentityProviderConfigResponse Int

-- | The name of the Amazon EKS cluster associated with the Fargate profile
--   to delete.
deleteFargateProfile_clusterName :: Lens' DeleteFargateProfile Text

-- | The name of the Fargate profile to delete.
deleteFargateProfile_fargateProfileName :: Lens' DeleteFargateProfile Text

-- | The deleted Fargate profile.
deleteFargateProfileResponse_fargateProfile :: Lens' DeleteFargateProfileResponse (Maybe FargateProfile)

-- | The response's http status code.
deleteFargateProfileResponse_httpStatus :: Lens' DeleteFargateProfileResponse Int

-- | The name of the cluster to delete.
deleteCluster_name :: Lens' DeleteCluster Text

-- | The full description of the cluster to delete.
deleteClusterResponse_cluster :: Lens' DeleteClusterResponse (Maybe Cluster)

-- | The response's http status code.
deleteClusterResponse_httpStatus :: Lens' DeleteClusterResponse Int

-- | The Kubernetes network configuration for the cluster.
createCluster_kubernetesNetworkConfig :: Lens' CreateCluster (Maybe KubernetesNetworkConfigRequest)

-- | The desired Kubernetes version for your cluster. If you don't specify
--   a value here, the latest version available in Amazon EKS is used.
createCluster_version :: Lens' CreateCluster (Maybe Text)

-- | The encryption configuration for the cluster.
createCluster_encryptionConfig :: Lens' CreateCluster (Maybe [EncryptionConfig])

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createCluster_clientRequestToken :: Lens' CreateCluster (Maybe Text)

-- | Enable or disable exporting the Kubernetes control plane logs for your
--   cluster to CloudWatch Logs. By default, cluster control plane logs
--   aren't exported to CloudWatch Logs. For more information, see
--   <a>Amazon EKS Cluster control plane logs</a> in the /<i>Amazon EKS
--   User Guide</i>/ .
--   
--   CloudWatch Logs ingestion, archive storage, and data scanning rates
--   apply to exported control plane logs. For more information, see
--   <a>CloudWatch Pricing</a>.
createCluster_logging :: Lens' CreateCluster (Maybe Logging)

-- | The metadata to apply to the cluster to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define.
createCluster_tags :: Lens' CreateCluster (Maybe (HashMap Text Text))

-- | The unique name to give to your cluster.
createCluster_name :: Lens' CreateCluster Text

-- | The Amazon Resource Name (ARN) of the IAM role that provides
--   permissions for the Kubernetes control plane to make calls to Amazon
--   Web Services API operations on your behalf. For more information, see
--   <a>Amazon EKS Service IAM Role</a> in the /<i>Amazon EKS User
--   Guide</i>/ .
createCluster_roleArn :: Lens' CreateCluster Text

-- | The VPC configuration used by the cluster control plane. Amazon EKS
--   VPC resources have specific requirements to work properly with
--   Kubernetes. For more information, see <a>Cluster VPC
--   Considerations</a> and <a>Cluster Security Group Considerations</a> in
--   the <i>Amazon EKS User Guide</i>. You must specify at least two
--   subnets. You can specify up to five security groups, but we recommend
--   that you use a dedicated security group for your cluster control
--   plane.
createCluster_resourcesVpcConfig :: Lens' CreateCluster VpcConfigRequest

-- | The full description of your new cluster.
createClusterResponse_cluster :: Lens' CreateClusterResponse (Maybe Cluster)

-- | The response's http status code.
createClusterResponse_httpStatus :: Lens' CreateClusterResponse Int

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
updateClusterConfig_clientRequestToken :: Lens' UpdateClusterConfig (Maybe Text)

-- | Enable or disable exporting the Kubernetes control plane logs for your
--   cluster to CloudWatch Logs. By default, cluster control plane logs
--   aren't exported to CloudWatch Logs. For more information, see
--   <a>Amazon EKS cluster control plane logs</a> in the /<i>Amazon EKS
--   User Guide</i>/ .
--   
--   CloudWatch Logs ingestion, archive storage, and data scanning rates
--   apply to exported control plane logs. For more information, see
--   <a>CloudWatch Pricing</a>.
updateClusterConfig_logging :: Lens' UpdateClusterConfig (Maybe Logging)

-- | Undocumented member.
updateClusterConfig_resourcesVpcConfig :: Lens' UpdateClusterConfig (Maybe VpcConfigRequest)

-- | The name of the Amazon EKS cluster to update.
updateClusterConfig_name :: Lens' UpdateClusterConfig Text

-- | Undocumented member.
updateClusterConfigResponse_update :: Lens' UpdateClusterConfigResponse (Maybe Update)

-- | The response's http status code.
updateClusterConfigResponse_httpStatus :: Lens' UpdateClusterConfigResponse Int

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListAddonsRequest</tt> where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listAddons_nextToken :: Lens' ListAddons (Maybe Text)

-- | The maximum number of add-on results returned by
--   <tt>ListAddonsRequest</tt> in paginated output. When you use this
--   parameter, <tt>ListAddonsRequest</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListAddonsRequest</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListAddonsRequest</tt> returns up to 100
--   results and a <tt>nextToken</tt> value, if applicable.
listAddons_maxResults :: Lens' ListAddons (Maybe Natural)

-- | The name of the cluster.
listAddons_clusterName :: Lens' ListAddons Text

-- | A list of available add-ons.
listAddonsResponse_addons :: Lens' ListAddonsResponse (Maybe [Text])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListAddonsResponse</tt> where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listAddonsResponse_nextToken :: Lens' ListAddonsResponse (Maybe Text)

-- | The response's http status code.
listAddonsResponse_httpStatus :: Lens' ListAddonsResponse Int

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
updateClusterVersion_clientRequestToken :: Lens' UpdateClusterVersion (Maybe Text)

-- | The name of the Amazon EKS cluster to update.
updateClusterVersion_name :: Lens' UpdateClusterVersion Text

-- | The desired Kubernetes version following a successful update.
updateClusterVersion_version :: Lens' UpdateClusterVersion Text

-- | The full description of the specified update
updateClusterVersionResponse_update :: Lens' UpdateClusterVersionResponse (Maybe Update)

-- | The response's http status code.
updateClusterVersionResponse_httpStatus :: Lens' UpdateClusterVersionResponse Int

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
describeAddonVersions_addonName :: Lens' DescribeAddonVersions (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeAddonVersionsRequest</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
describeAddonVersions_nextToken :: Lens' DescribeAddonVersions (Maybe Text)

-- | The Kubernetes versions that the add-on can be used with.
describeAddonVersions_kubernetesVersion :: Lens' DescribeAddonVersions (Maybe Text)

-- | The maximum number of results to return.
describeAddonVersions_maxResults :: Lens' DescribeAddonVersions (Maybe Natural)

-- | The list of available versions with Kubernetes version compatibility.
describeAddonVersionsResponse_addons :: Lens' DescribeAddonVersionsResponse (Maybe [AddonInfo])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeAddonVersionsResponse</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
describeAddonVersionsResponse_nextToken :: Lens' DescribeAddonVersionsResponse (Maybe Text)

-- | The response's http status code.
describeAddonVersionsResponse_httpStatus :: Lens' DescribeAddonVersionsResponse Int

-- | Force the update if the existing node group's pods are unable to be
--   drained due to a pod disruption budget issue. If an update fails
--   because pods could not be drained, you can force the update after it
--   fails to terminate the old node whether or not any pods are running on
--   the node.
updateNodegroupVersion_force :: Lens' UpdateNodegroupVersion (Maybe Bool)

-- | The AMI version of the Amazon EKS optimized AMI to use for the update.
--   By default, the latest available AMI version for the node group's
--   Kubernetes version is used. For more information, see <a>Amazon EKS
--   optimized Amazon Linux 2 AMI versions</a> in the <i>Amazon EKS User
--   Guide</i>. If you specify <tt>launchTemplate</tt>, and your launch
--   template uses a custom AMI, then don't specify
--   <tt>releaseVersion</tt>, or the node group update will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
updateNodegroupVersion_releaseVersion :: Lens' UpdateNodegroupVersion (Maybe Text)

-- | The Kubernetes version to update to. If no version is specified, then
--   the Kubernetes version of the node group does not change. You can
--   specify the Kubernetes version of the cluster to update the node group
--   to the latest AMI version of the cluster's Kubernetes version. If you
--   specify <tt>launchTemplate</tt>, and your launch template uses a
--   custom AMI, then don't specify <tt>version</tt>, or the node group
--   update will fail. For more information about using launch templates
--   with Amazon EKS, see <a>Launch template support</a> in the Amazon EKS
--   User Guide.
updateNodegroupVersion_version :: Lens' UpdateNodegroupVersion (Maybe Text)

-- | An object representing a node group's launch template specification.
--   You can only update a node group using a launch template if the node
--   group was originally deployed with a launch template.
updateNodegroupVersion_launchTemplate :: Lens' UpdateNodegroupVersion (Maybe LaunchTemplateSpecification)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
updateNodegroupVersion_clientRequestToken :: Lens' UpdateNodegroupVersion (Maybe Text)

-- | The name of the Amazon EKS cluster that is associated with the managed
--   node group to update.
updateNodegroupVersion_clusterName :: Lens' UpdateNodegroupVersion Text

-- | The name of the managed node group to update.
updateNodegroupVersion_nodegroupName :: Lens' UpdateNodegroupVersion Text

-- | Undocumented member.
updateNodegroupVersionResponse_update :: Lens' UpdateNodegroupVersionResponse (Maybe Update)

-- | The response's http status code.
updateNodegroupVersionResponse_httpStatus :: Lens' UpdateNodegroupVersionResponse Int

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>IdentityProviderConfigsRequest</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listIdentityProviderConfigs_nextToken :: Lens' ListIdentityProviderConfigs (Maybe Text)

-- | The maximum number of identity provider configurations returned by
--   <tt>ListIdentityProviderConfigs</tt> in paginated output. When you use
--   this parameter, <tt>ListIdentityProviderConfigs</tt> returns only
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another
--   <tt>ListIdentityProviderConfigs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListIdentityProviderConfigs</tt> returns
--   up to 100 results and a <tt>nextToken</tt> value, if applicable.
listIdentityProviderConfigs_maxResults :: Lens' ListIdentityProviderConfigs (Maybe Natural)

-- | The cluster name that you want to list identity provider
--   configurations for.
listIdentityProviderConfigs_clusterName :: Lens' ListIdentityProviderConfigs Text

-- | The identity provider configurations for the cluster.
listIdentityProviderConfigsResponse_identityProviderConfigs :: Lens' ListIdentityProviderConfigsResponse (Maybe [IdentityProviderConfig])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListIdentityProviderConfigsResponse</tt> where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value.
listIdentityProviderConfigsResponse_nextToken :: Lens' ListIdentityProviderConfigsResponse (Maybe Text)

-- | The response's http status code.
listIdentityProviderConfigsResponse_httpStatus :: Lens' ListIdentityProviderConfigsResponse Int

-- | A unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
disassociateIdentityProviderConfig_clientRequestToken :: Lens' DisassociateIdentityProviderConfig (Maybe Text)

-- | The name of the cluster to disassociate an identity provider from.
disassociateIdentityProviderConfig_clusterName :: Lens' DisassociateIdentityProviderConfig Text

-- | An object that represents an identity provider configuration.
disassociateIdentityProviderConfig_identityProviderConfig :: Lens' DisassociateIdentityProviderConfig IdentityProviderConfig

-- | Undocumented member.
disassociateIdentityProviderConfigResponse_update :: Lens' DisassociateIdentityProviderConfigResponse (Maybe Update)

-- | The response's http status code.
disassociateIdentityProviderConfigResponse_httpStatus :: Lens' DisassociateIdentityProviderConfigResponse Int

-- | The name of the cluster.
describeAddon_clusterName :: Lens' DescribeAddon Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
describeAddon_addonName :: Lens' DescribeAddon Text

-- | Undocumented member.
describeAddonResponse_addon :: Lens' DescribeAddonResponse (Maybe Addon)

-- | The response's http status code.
describeAddonResponse_httpStatus :: Lens' DescribeAddonResponse Int

-- | The names of the installed add-ons that have available updates.
listUpdates_addonName :: Lens' ListUpdates (Maybe Text)

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListUpdates</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listUpdates_nextToken :: Lens' ListUpdates (Maybe Text)

-- | The name of the Amazon EKS managed node group to list updates for.
listUpdates_nodegroupName :: Lens' ListUpdates (Maybe Text)

-- | The maximum number of update results returned by <tt>ListUpdates</tt>
--   in paginated output. When you use this parameter, <tt>ListUpdates</tt>
--   returns only <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListUpdates</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListUpdates</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
listUpdates_maxResults :: Lens' ListUpdates (Maybe Natural)

-- | The name of the Amazon EKS cluster to list updates for.
listUpdates_name :: Lens' ListUpdates Text

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListUpdates</tt> request. When the results of a
--   <tt>ListUpdates</tt> request exceed <tt>maxResults</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listUpdatesResponse_nextToken :: Lens' ListUpdatesResponse (Maybe Text)

-- | A list of all the updates for the specified cluster and Region.
listUpdatesResponse_updateIds :: Lens' ListUpdatesResponse (Maybe [Text])

-- | The response's http status code.
listUpdatesResponse_httpStatus :: Lens' ListUpdatesResponse Int

-- | The Amazon Resource Name (ARN) of the resource to which to add tags.
--   Currently, the supported resources are Amazon EKS clusters and managed
--   node groups.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to add to the resource. A tag is an array of key-value pairs.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListFargateProfiles</tt> request where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listFargateProfiles_nextToken :: Lens' ListFargateProfiles (Maybe Text)

-- | The maximum number of Fargate profile results returned by
--   <tt>ListFargateProfiles</tt> in paginated output. When you use this
--   parameter, <tt>ListFargateProfiles</tt> returns only
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListFargateProfiles</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListFargateProfiles</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
listFargateProfiles_maxResults :: Lens' ListFargateProfiles (Maybe Natural)

-- | The name of the Amazon EKS cluster that you would like to list Fargate
--   profiles in.
listFargateProfiles_clusterName :: Lens' ListFargateProfiles Text

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListFargateProfiles</tt> request. When the results of a
--   <tt>ListFargateProfiles</tt> request exceed <tt>maxResults</tt>, you
--   can use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listFargateProfilesResponse_nextToken :: Lens' ListFargateProfilesResponse (Maybe Text)

-- | A list of all of the Fargate profiles associated with the specified
--   cluster.
listFargateProfilesResponse_fargateProfileNames :: Lens' ListFargateProfilesResponse (Maybe [Text])

-- | The response's http status code.
listFargateProfilesResponse_httpStatus :: Lens' ListFargateProfilesResponse Int

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
registerCluster_clientRequestToken :: Lens' RegisterCluster (Maybe Text)

-- | Define a unique name for this cluster within your AWS account.
registerCluster_name :: Lens' RegisterCluster Text

-- | The configuration settings required to connect the Kubernetes cluster
--   to the Amazon EKS control plane.
registerCluster_connectorConfig :: Lens' RegisterCluster ConnectorConfigRequest

-- | Undocumented member.
registerClusterResponse_cluster :: Lens' RegisterClusterResponse (Maybe Cluster)

-- | The response's http status code.
registerClusterResponse_httpStatus :: Lens' RegisterClusterResponse Int

-- | Indicates whether connected clusters are included in the returned
--   list. Default value is 'ALL'.
listClusters_include :: Lens' ListClusters (Maybe [Text])

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListClusters</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
listClusters_nextToken :: Lens' ListClusters (Maybe Text)

-- | The maximum number of cluster results returned by
--   <tt>ListClusters</tt> in paginated output. When you use this
--   parameter, <tt>ListClusters</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListClusters</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListClusters</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
listClusters_maxResults :: Lens' ListClusters (Maybe Natural)

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListClusters</tt> request. When the results of a
--   <tt>ListClusters</tt> request exceed <tt>maxResults</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listClustersResponse_nextToken :: Lens' ListClustersResponse (Maybe Text)

-- | A list of all of the clusters for your account in the specified
--   Region.
listClustersResponse_clusters :: Lens' ListClustersResponse (Maybe [Text])

-- | The response's http status code.
listClustersResponse_httpStatus :: Lens' ListClustersResponse Int

-- | The Amazon Resource Name (ARN) of the resource from which to delete
--   tags. Currently, the supported resources are Amazon EKS clusters and
--   managed node groups.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The keys of the tags to be removed.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The capacity type for your node group.
createNodegroup_capacityType :: Lens' CreateNodegroup (Maybe CapacityTypes)

-- | Specify the instance types for a node group. If you specify a GPU
--   instance type, be sure to specify <tt>AL2_x86_64_GPU</tt> with the
--   <tt>amiType</tt> parameter. If you specify <tt>launchTemplate</tt>,
--   then you can specify zero or one instance type in your launch template
--   <i>or</i> you can specify 0-20 instance types for
--   <tt>instanceTypes</tt>. If however, you specify an instance type in
--   your launch template <i>and</i> specify any <tt>instanceTypes</tt>,
--   the node group deployment will fail. If you don't specify an instance
--   type in a launch template or for <tt>instanceTypes</tt>, then
--   <tt>t3.medium</tt> is used, by default. If you specify <tt>Spot</tt>
--   for <tt>capacityType</tt>, then we recommend specifying multiple
--   values for <tt>instanceTypes</tt>. For more information, see
--   <a>Managed node group capacity types</a> and <a>Launch template
--   support</a> in the <i>Amazon EKS User Guide</i>.
createNodegroup_instanceTypes :: Lens' CreateNodegroup (Maybe [Text])

-- | The Kubernetes taints to be applied to the nodes in the node group.
createNodegroup_taints :: Lens' CreateNodegroup (Maybe [Taint])

-- | The remote access (SSH) configuration to use with your node group. If
--   you specify <tt>launchTemplate</tt>, then don't specify
--   <tt>remoteAccess</tt>, or the node group deployment will fail. For
--   more information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
createNodegroup_remoteAccess :: Lens' CreateNodegroup (Maybe RemoteAccessConfig)

-- | The root device disk size (in GiB) for your node group instances. The
--   default disk size is 20 GiB. If you specify <tt>launchTemplate</tt>,
--   then don't specify <tt>diskSize</tt>, or the node group deployment
--   will fail. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
createNodegroup_diskSize :: Lens' CreateNodegroup (Maybe Int)

-- | The AMI version of the Amazon EKS optimized AMI to use with your node
--   group. By default, the latest available AMI version for the node
--   group's current Kubernetes version is used. For more information, see
--   <a>Amazon EKS optimized Amazon Linux 2 AMI versions</a> in the
--   <i>Amazon EKS User Guide</i>. If you specify <tt>launchTemplate</tt>,
--   and your launch template uses a custom AMI, then don't specify
--   <tt>releaseVersion</tt>, or the node group deployment will fail. For
--   more information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
createNodegroup_releaseVersion :: Lens' CreateNodegroup (Maybe Text)

-- | The scaling configuration details for the Auto Scaling group that is
--   created for your node group.
createNodegroup_scalingConfig :: Lens' CreateNodegroup (Maybe NodegroupScalingConfig)

-- | The Kubernetes version to use for your managed nodes. By default, the
--   Kubernetes version of the cluster is used, and this is the only
--   accepted specified value. If you specify <tt>launchTemplate</tt>, and
--   your launch template uses a custom AMI, then don't specify
--   <tt>version</tt>, or the node group deployment will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
createNodegroup_version :: Lens' CreateNodegroup (Maybe Text)

-- | An object representing a node group's launch template specification.
--   If specified, then do not specify <tt>instanceTypes</tt>,
--   <tt>diskSize</tt>, or <tt>remoteAccess</tt> and make sure that the
--   launch template meets the requirements in
--   <tt>launchTemplateSpecification</tt>.
createNodegroup_launchTemplate :: Lens' CreateNodegroup (Maybe LaunchTemplateSpecification)

-- | The Kubernetes labels to be applied to the nodes in the node group
--   when they are created.
createNodegroup_labels :: Lens' CreateNodegroup (Maybe (HashMap Text Text))

-- | The AMI type for your node group. GPU instance types should use the
--   <tt>AL2_x86_64_GPU</tt> AMI type. Non-GPU instances should use the
--   <tt>AL2_x86_64</tt> AMI type. Arm instances should use the
--   <tt>AL2_ARM_64</tt> AMI type. All types use the Amazon EKS optimized
--   Amazon Linux 2 AMI. If you specify <tt>launchTemplate</tt>, and your
--   launch template uses a custom AMI, then don't specify
--   <tt>amiType</tt>, or the node group deployment will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
createNodegroup_amiType :: Lens' CreateNodegroup (Maybe AMITypes)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
createNodegroup_clientRequestToken :: Lens' CreateNodegroup (Maybe Text)

-- | The node group update configuration.
createNodegroup_updateConfig :: Lens' CreateNodegroup (Maybe NodegroupUpdateConfig)

-- | The metadata to apply to the node group to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Node group tags do not propagate to any
--   other resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
createNodegroup_tags :: Lens' CreateNodegroup (Maybe (HashMap Text Text))

-- | The name of the cluster to create the node group in.
createNodegroup_clusterName :: Lens' CreateNodegroup Text

-- | The unique name to give your node group.
createNodegroup_nodegroupName :: Lens' CreateNodegroup Text

-- | The subnets to use for the Auto Scaling group that is created for your
--   node group. If you specify <tt>launchTemplate</tt>, then don't specify
--   <a>SubnetId</a> in your launch template, or the node group deployment
--   will fail. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
createNodegroup_subnets :: Lens' CreateNodegroup [Text]

-- | The Amazon Resource Name (ARN) of the IAM role to associate with your
--   node group. The Amazon EKS worker node <tt>kubelet</tt> daemon makes
--   calls to Amazon Web Services APIs on your behalf. Nodes receive
--   permissions for these API calls through an IAM instance profile and
--   associated policies. Before you can launch nodes and register them
--   into a cluster, you must create an IAM role for those nodes to use
--   when they are launched. For more information, see <a>Amazon EKS node
--   IAM role</a> in the /<i>Amazon EKS User Guide</i>/ . If you specify
--   <tt>launchTemplate</tt>, then don't specify <a>IamInstanceProfile</a>
--   in your launch template, or the node group deployment will fail. For
--   more information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
createNodegroup_nodeRole :: Lens' CreateNodegroup Text

-- | The full description of your new node group.
createNodegroupResponse_nodegroup :: Lens' CreateNodegroupResponse (Maybe Nodegroup)

-- | The response's http status code.
createNodegroupResponse_httpStatus :: Lens' CreateNodegroupResponse Int

-- | The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListNodegroups</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
listNodegroups_nextToken :: Lens' ListNodegroups (Maybe Text)

-- | The maximum number of node group results returned by
--   <tt>ListNodegroups</tt> in paginated output. When you use this
--   parameter, <tt>ListNodegroups</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListNodegroups</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListNodegroups</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
listNodegroups_maxResults :: Lens' ListNodegroups (Maybe Natural)

-- | The name of the Amazon EKS cluster that you would like to list node
--   groups in.
listNodegroups_clusterName :: Lens' ListNodegroups Text

-- | A list of all of the node groups associated with the specified
--   cluster.
listNodegroupsResponse_nodegroups :: Lens' ListNodegroupsResponse (Maybe [Text])

-- | The <tt>nextToken</tt> value to include in a future
--   <tt>ListNodegroups</tt> request. When the results of a
--   <tt>ListNodegroups</tt> request exceed <tt>maxResults</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
listNodegroupsResponse_nextToken :: Lens' ListNodegroupsResponse (Maybe Text)

-- | The response's http status code.
listNodegroupsResponse_httpStatus :: Lens' ListNodegroupsResponse Int

-- | The name of the Amazon EKS cluster that is associated with your node
--   group.
deleteNodegroup_clusterName :: Lens' DeleteNodegroup Text

-- | The name of the node group to delete.
deleteNodegroup_nodegroupName :: Lens' DeleteNodegroup Text

-- | The full description of your deleted node group.
deleteNodegroupResponse_nodegroup :: Lens' DeleteNodegroupResponse (Maybe Nodegroup)

-- | The response's http status code.
deleteNodegroupResponse_httpStatus :: Lens' DeleteNodegroupResponse Int

-- | The client request token you are using with the encryption
--   configuration.
associateEncryptionConfig_clientRequestToken :: Lens' AssociateEncryptionConfig (Maybe Text)

-- | The name of the cluster that you are associating with encryption
--   configuration.
associateEncryptionConfig_clusterName :: Lens' AssociateEncryptionConfig Text

-- | The configuration you are using for encryption.
associateEncryptionConfig_encryptionConfig :: Lens' AssociateEncryptionConfig [EncryptionConfig]

-- | Undocumented member.
associateEncryptionConfigResponse_update :: Lens' AssociateEncryptionConfigResponse (Maybe Update)

-- | The response's http status code.
associateEncryptionConfigResponse_httpStatus :: Lens' AssociateEncryptionConfigResponse Int

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
associateIdentityProviderConfig_clientRequestToken :: Lens' AssociateIdentityProviderConfig (Maybe Text)

-- | The metadata to apply to the configuration to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define.
associateIdentityProviderConfig_tags :: Lens' AssociateIdentityProviderConfig (Maybe (HashMap Text Text))

-- | The name of the cluster to associate the configuration to.
associateIdentityProviderConfig_clusterName :: Lens' AssociateIdentityProviderConfig Text

-- | An object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
associateIdentityProviderConfig_oidc :: Lens' AssociateIdentityProviderConfig OidcIdentityProviderConfigRequest

-- | Undocumented member.
associateIdentityProviderConfigResponse_update :: Lens' AssociateIdentityProviderConfigResponse (Maybe Update)

-- | The tags for the resource.
associateIdentityProviderConfigResponse_tags :: Lens' AssociateIdentityProviderConfigResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
associateIdentityProviderConfigResponse_httpStatus :: Lens' AssociateIdentityProviderConfigResponse Int

-- | Specifying this option preserves the add-on software on your cluster
--   but Amazon EKS stops managing any settings for the add-on. If an IAM
--   account is associated with the add-on, it is not removed.
deleteAddon_preserve :: Lens' DeleteAddon (Maybe Bool)

-- | The name of the cluster to delete the add-on from.
deleteAddon_clusterName :: Lens' DeleteAddon Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
deleteAddon_addonName :: Lens' DeleteAddon Text

-- | Undocumented member.
deleteAddonResponse_addon :: Lens' DeleteAddonResponse (Maybe Addon)

-- | The response's http status code.
deleteAddonResponse_httpStatus :: Lens' DeleteAddonResponse Int

-- | The version of the add-on. The version must match one of the versions
--   returned by <a>DescribeAddonVersions</a> .
updateAddon_addonVersion :: Lens' UpdateAddon (Maybe Text)

-- | The Amazon Resource Name (ARN) of an existing IAM role to bind to the
--   add-on's service account. The role must be assigned the IAM
--   permissions required by the add-on. If you don't specify an existing
--   IAM role, then the add-on uses the permissions assigned to the node
--   IAM role. For more information, see <a>Amazon EKS node IAM role</a> in
--   the <i>Amazon EKS User Guide</i>.
--   
--   To specify an existing IAM role, you must have an IAM OpenID Connect
--   (OIDC) provider created for your cluster. For more information, see
--   <a>Enabling IAM roles for service accounts on your cluster</a> in the
--   <i>Amazon EKS User Guide</i>.
updateAddon_serviceAccountRoleArn :: Lens' UpdateAddon (Maybe Text)

-- | How to resolve parameter value conflicts when applying the new version
--   of the add-on to the cluster.
updateAddon_resolveConflicts :: Lens' UpdateAddon (Maybe ResolveConflicts)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
updateAddon_clientRequestToken :: Lens' UpdateAddon (Maybe Text)

-- | The name of the cluster.
updateAddon_clusterName :: Lens' UpdateAddon Text

-- | The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
updateAddon_addonName :: Lens' UpdateAddon Text

-- | Undocumented member.
updateAddonResponse_update :: Lens' UpdateAddonResponse (Maybe Update)

-- | The response's http status code.
updateAddonResponse_httpStatus :: Lens' UpdateAddonResponse Int

-- | The date and time that the add-on was last modified.
addon_modifiedAt :: Lens' Addon (Maybe UTCTime)

-- | The status of the add-on.
addon_status :: Lens' Addon (Maybe AddonStatus)

-- | The name of the add-on.
addon_addonName :: Lens' Addon (Maybe Text)

-- | The version of the add-on.
addon_addonVersion :: Lens' Addon (Maybe Text)

-- | The date and time that the add-on was created.
addon_createdAt :: Lens' Addon (Maybe UTCTime)

-- | The Amazon Resource Name (ARN) of the IAM role that is bound to the
--   Kubernetes service account used by the add-on.
addon_serviceAccountRoleArn :: Lens' Addon (Maybe Text)

-- | An object that represents the health of the add-on.
addon_health :: Lens' Addon (Maybe AddonHealth)

-- | The name of the cluster.
addon_clusterName :: Lens' Addon (Maybe Text)

-- | The Amazon Resource Name (ARN) of the add-on.
addon_addonArn :: Lens' Addon (Maybe Text)

-- | The metadata that you apply to the add-on to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Add-on tags do not propagate
--   to any other resources associated with the cluster.
addon_tags :: Lens' Addon (Maybe (HashMap Text Text))

-- | An object that represents the add-on's health issues.
addonHealth_issues :: Lens' AddonHealth (Maybe [AddonIssue])

-- | The name of the add-on.
addonInfo_addonName :: Lens' AddonInfo (Maybe Text)

-- | The type of the add-on.
addonInfo_type :: Lens' AddonInfo (Maybe Text)

-- | An object that represents information about available add-on versions
--   and compatible Kubernetes versions.
addonInfo_addonVersions :: Lens' AddonInfo (Maybe [AddonVersionInfo])

-- | The resource IDs of the issue.
addonIssue_resourceIds :: Lens' AddonIssue (Maybe [Text])

-- | A code that describes the type of issue.
addonIssue_code :: Lens' AddonIssue (Maybe AddonIssueCode)

-- | A message that provides details about the issue and what might cause
--   it.
addonIssue_message :: Lens' AddonIssue (Maybe Text)

-- | The version of the add-on.
addonVersionInfo_addonVersion :: Lens' AddonVersionInfo (Maybe Text)

-- | The architectures that the version supports.
addonVersionInfo_architecture :: Lens' AddonVersionInfo (Maybe [Text])

-- | An object that represents the compatibilities of a version.
addonVersionInfo_compatibilities :: Lens' AddonVersionInfo (Maybe [Compatibility])

-- | The name of the Auto Scaling group associated with an Amazon EKS
--   managed node group.
autoScalingGroup_name :: Lens' AutoScalingGroup (Maybe Text)

-- | The Base64-encoded certificate data required to communicate with your
--   cluster. Add this to the <tt>certificate-authority-data</tt> section
--   of the <tt>kubeconfig</tt> file for your cluster.
certificate_data :: Lens' Certificate (Maybe Text)

-- | The current status of the cluster.
cluster_status :: Lens' Cluster (Maybe ClusterStatus)

-- | The Amazon Resource Name (ARN) of the cluster.
cluster_arn :: Lens' Cluster (Maybe Text)

-- | The Unix epoch timestamp in seconds for when the cluster was created.
cluster_createdAt :: Lens' Cluster (Maybe UTCTime)

-- | The platform version of your Amazon EKS cluster. For more information,
--   see <a>Platform Versions</a> in the /<i>Amazon EKS User Guide</i>/ .
cluster_platformVersion :: Lens' Cluster (Maybe Text)

-- | The Kubernetes network configuration for the cluster.
cluster_kubernetesNetworkConfig :: Lens' Cluster (Maybe KubernetesNetworkConfigResponse)

-- | The configuration used to connect to a cluster for registration.
cluster_connectorConfig :: Lens' Cluster (Maybe ConnectorConfigResponse)

-- | The <tt>certificate-authority-data</tt> for your cluster.
cluster_certificateAuthority :: Lens' Cluster (Maybe Certificate)

-- | The name of the cluster.
cluster_name :: Lens' Cluster (Maybe Text)

-- | The Kubernetes server version for the cluster.
cluster_version :: Lens' Cluster (Maybe Text)

-- | The encryption configuration for the cluster.
cluster_encryptionConfig :: Lens' Cluster (Maybe [EncryptionConfig])

-- | The endpoint for your Kubernetes API server.
cluster_endpoint :: Lens' Cluster (Maybe Text)

-- | Unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
cluster_clientRequestToken :: Lens' Cluster (Maybe Text)

-- | The logging configuration for your cluster.
cluster_logging :: Lens' Cluster (Maybe Logging)

-- | The identity provider information for the cluster.
cluster_identity :: Lens' Cluster (Maybe Identity)

-- | The VPC configuration used by the cluster control plane. Amazon EKS
--   VPC resources have specific requirements to work properly with
--   Kubernetes. For more information, see <a>Cluster VPC
--   Considerations</a> and <a>Cluster Security Group Considerations</a> in
--   the <i>Amazon EKS User Guide</i>.
cluster_resourcesVpcConfig :: Lens' Cluster (Maybe VpcConfigResponse)

-- | The metadata that you apply to the cluster to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Cluster tags do not
--   propagate to any other resources associated with the cluster.
cluster_tags :: Lens' Cluster (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the IAM role that provides
--   permissions for the Kubernetes control plane to make calls to Amazon
--   Web Services API operations on your behalf.
cluster_roleArn :: Lens' Cluster (Maybe Text)

-- | The supported default version.
compatibility_defaultVersion :: Lens' Compatibility (Maybe Bool)

-- | The supported Kubernetes version of the cluster.
compatibility_clusterVersion :: Lens' Compatibility (Maybe Text)

-- | The supported compute platform.
compatibility_platformVersions :: Lens' Compatibility (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the role that is authorized to
--   request the connector configuration.
connectorConfigRequest_roleArn :: Lens' ConnectorConfigRequest Text

-- | The cloud provider for the target cluster to connect.
connectorConfigRequest_provider :: Lens' ConnectorConfigRequest ConnectorConfigProvider

-- | A unique code associated with the cluster for registration purposes.
connectorConfigResponse_activationCode :: Lens' ConnectorConfigResponse (Maybe Text)

-- | A unique ID associated with the cluster for registration purposes.
connectorConfigResponse_activationId :: Lens' ConnectorConfigResponse (Maybe Text)

-- | The expiration time of the connected cluster. The cluster's YAML file
--   must be applied through the native provider.
connectorConfigResponse_activationExpiry :: Lens' ConnectorConfigResponse (Maybe UTCTime)

-- | The cluster's cloud service provider.
connectorConfigResponse_provider :: Lens' ConnectorConfigResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the role that is used by the EKS
--   connector to communicate with AWS services from the connected
--   Kubernetes cluster.
connectorConfigResponse_roleArn :: Lens' ConnectorConfigResponse (Maybe Text)

-- | Specifies the resources to be encrypted. The only supported value is
--   "secrets".
encryptionConfig_resources :: Lens' EncryptionConfig (Maybe [Text])

-- | Key Management Service (KMS) key. Either the ARN or the alias can be
--   used.
encryptionConfig_provider :: Lens' EncryptionConfig (Maybe Provider)

-- | An optional field that contains the resource IDs associated with the
--   error.
errorDetail_resourceIds :: Lens' ErrorDetail (Maybe [Text])

-- | A brief description of the error.
--   
--   <ul>
--   <li><b>SubnetNotFound</b>: We couldn't find one of the subnets
--   associated with the cluster.</li>
--   <li><b>SecurityGroupNotFound</b>: We couldn't find one of the security
--   groups associated with the cluster.</li>
--   <li><b>EniLimitReached</b>: You have reached the elastic network
--   interface limit for your account.</li>
--   <li><b>IpNotAvailable</b>: A subnet associated with the cluster
--   doesn't have any free IP addresses.</li>
--   <li><b>AccessDenied</b>: You don't have permissions to perform the
--   specified operation.</li>
--   <li><b>OperationNotPermitted</b>: The service role associated with the
--   cluster doesn't have the required access permissions for Amazon
--   EKS.</li>
--   <li><b>VpcIdNotFound</b>: We couldn't find the VPC associated with the
--   cluster.</li>
--   </ul>
errorDetail_errorCode :: Lens' ErrorDetail (Maybe EKSErrorCode)

-- | A more complete description of the error.
errorDetail_errorMessage :: Lens' ErrorDetail (Maybe Text)

-- | The full Amazon Resource Name (ARN) of the Fargate profile.
fargateProfile_fargateProfileArn :: Lens' FargateProfile (Maybe Text)

-- | The current status of the Fargate profile.
fargateProfile_status :: Lens' FargateProfile (Maybe FargateProfileStatus)

-- | The Unix epoch timestamp in seconds for when the Fargate profile was
--   created.
fargateProfile_createdAt :: Lens' FargateProfile (Maybe UTCTime)

-- | The IDs of subnets to launch pods into.
fargateProfile_subnets :: Lens' FargateProfile (Maybe [Text])

-- | The name of the Amazon EKS cluster that the Fargate profile belongs
--   to.
fargateProfile_clusterName :: Lens' FargateProfile (Maybe Text)

-- | The Amazon Resource Name (ARN) of the pod execution role to use for
--   pods that match the selectors in the Fargate profile. For more
--   information, see <a>Pod Execution Role</a> in the <i>Amazon EKS User
--   Guide</i>.
fargateProfile_podExecutionRoleArn :: Lens' FargateProfile (Maybe Text)

-- | The name of the Fargate profile.
fargateProfile_fargateProfileName :: Lens' FargateProfile (Maybe Text)

-- | The selectors to match for pods to use this Fargate profile.
fargateProfile_selectors :: Lens' FargateProfile (Maybe [FargateProfileSelector])

-- | The metadata applied to the Fargate profile to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you define. Fargate profile tags do not
--   propagate to any other resources associated with the Fargate profile,
--   such as the pods that are scheduled with it.
fargateProfile_tags :: Lens' FargateProfile (Maybe (HashMap Text Text))

-- | The Kubernetes namespace that the selector should match.
fargateProfileSelector_namespace :: Lens' FargateProfileSelector (Maybe Text)

-- | The Kubernetes labels that the selector should match. A pod must
--   contain all of the labels that are specified in the selector for it to
--   be considered a match.
fargateProfileSelector_labels :: Lens' FargateProfileSelector (Maybe (HashMap Text Text))

-- | An object representing the <a>OpenID Connect</a> identity provider
--   information.
identity_oidc :: Lens' Identity (Maybe OIDC)

-- | The type of the identity provider configuration.
identityProviderConfig_type :: Lens' IdentityProviderConfig Text

-- | The name of the identity provider configuration.
identityProviderConfig_name :: Lens' IdentityProviderConfig Text

-- | An object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
identityProviderConfigResponse_oidc :: Lens' IdentityProviderConfigResponse (Maybe OidcIdentityProviderConfig)

-- | The Amazon Web Services resources that are afflicted by this issue.
issue_resourceIds :: Lens' Issue (Maybe [Text])

-- | A brief description of the error.
--   
--   <ul>
--   <li><b>AccessDenied</b>: Amazon EKS or one or more of your managed
--   nodes is failing to authenticate or authorize with your Kubernetes
--   cluster API server.</li>
--   <li><b>AsgInstanceLaunchFailures</b>: Your Auto Scaling group is
--   experiencing failures while attempting to launch instances.</li>
--   <li><b>AutoScalingGroupNotFound</b>: We couldn't find the Auto Scaling
--   group associated with the managed node group. You may be able to
--   recreate an Auto Scaling group with the same settings to recover.</li>
--   <li><b>ClusterUnreachable</b>: Amazon EKS or one or more of your
--   managed nodes is unable to to communicate with your Kubernetes cluster
--   API server. This can happen if there are network disruptions or if API
--   servers are timing out processing requests.</li>
--   <li><b>Ec2LaunchTemplateNotFound</b>: We couldn't find the Amazon EC2
--   launch template for your managed node group. You may be able to
--   recreate a launch template with the same settings to recover.</li>
--   <li><b>Ec2LaunchTemplateVersionMismatch</b>: The Amazon EC2 launch
--   template version for your managed node group does not match the
--   version that Amazon EKS created. You may be able to revert to the
--   version that Amazon EKS created to recover.</li>
--   <li><b>Ec2SecurityGroupDeletionFailure</b>: We could not delete the
--   remote access security group for your managed node group. Remove any
--   dependencies from the security group.</li>
--   <li><b>Ec2SecurityGroupNotFound</b>: We couldn't find the cluster
--   security group for the cluster. You must recreate your cluster.</li>
--   <li><b>Ec2SubnetInvalidConfiguration</b>: One or more Amazon EC2
--   subnets specified for a node group do not automatically assign public
--   IP addresses to instances launched into it. If you want your instances
--   to be assigned a public IP address, then you need to enable the
--   <tt>auto-assign public IP address</tt> setting for the subnet. See
--   <a>Modifying the public IPv4 addressing attribute for your subnet</a>
--   in the Amazon VPC User Guide.</li>
--   <li><b>IamInstanceProfileNotFound</b>: We couldn't find the IAM
--   instance profile for your managed node group. You may be able to
--   recreate an instance profile with the same settings to recover.</li>
--   <li><b>IamNodeRoleNotFound</b>: We couldn't find the IAM role for your
--   managed node group. You may be able to recreate an IAM role with the
--   same settings to recover.</li>
--   <li><b>InstanceLimitExceeded</b>: Your Amazon Web Services account is
--   unable to launch any more instances of the specified instance type.
--   You may be able to request an Amazon EC2 instance limit increase to
--   recover.</li>
--   <li><b>InsufficientFreeAddresses</b>: One or more of the subnets
--   associated with your managed node group does not have enough available
--   IP addresses for new nodes.</li>
--   <li><b>InternalFailure</b>: These errors are usually caused by an
--   Amazon EKS server-side issue.</li>
--   <li><b>NodeCreationFailure</b>: Your launched instances are unable to
--   register with your Amazon EKS cluster. Common causes of this failure
--   are insufficient <a>node IAM role</a> permissions or lack of outbound
--   internet access for the nodes.</li>
--   </ul>
issue_code :: Lens' Issue (Maybe NodegroupIssueCode)

-- | The error message associated with the issue.
issue_message :: Lens' Issue (Maybe Text)

-- | The CIDR block to assign Kubernetes service IP addresses from. If you
--   don't specify a block, Kubernetes assigns addresses from either the
--   10.100.0.0/16 or 172.20.0.0/16 CIDR blocks. We recommend that you
--   specify a block that does not overlap with resources in other networks
--   that are peered or connected to your VPC. The block must meet the
--   following requirements:
--   
--   <ul>
--   <li>Within one of the following private IP address blocks: 10.0.0.0/8,
--   172.16.0.0.0/12, or 192.168.0.0/16.</li>
--   <li>Doesn't overlap with any CIDR block assigned to the VPC that you
--   selected for VPC.</li>
--   <li>Between /24 and /12.</li>
--   </ul>
--   
--   You can only specify a custom CIDR block when you create a cluster and
--   can't change this value once the cluster is created.
kubernetesNetworkConfigRequest_serviceIpv4Cidr :: Lens' KubernetesNetworkConfigRequest (Maybe Text)

-- | The CIDR block that Kubernetes service IP addresses are assigned from.
--   If you didn't specify a CIDR block when you created the cluster, then
--   Kubernetes assigns addresses from either the 10.100.0.0/16 or
--   172.20.0.0/16 CIDR blocks. If this was specified, then it was
--   specified when the cluster was created and it cannot be changed.
kubernetesNetworkConfigResponse_serviceIpv4Cidr :: Lens' KubernetesNetworkConfigResponse (Maybe Text)

-- | The name of the launch template.
launchTemplateSpecification_name :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The version of the launch template to use. If no version is specified,
--   then the template's default version is used.
launchTemplateSpecification_version :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | The ID of the launch template.
launchTemplateSpecification_id :: Lens' LaunchTemplateSpecification (Maybe Text)

-- | If a log type is enabled, that log type exports its control plane logs
--   to CloudWatch Logs. If a log type isn't enabled, that log type doesn't
--   export its control plane logs. Each individual log type can be enabled
--   or disabled independently.
logSetup_enabled :: Lens' LogSetup (Maybe Bool)

-- | The available cluster control plane log types.
logSetup_types :: Lens' LogSetup (Maybe [LogType])

-- | The cluster control plane logging configuration for your cluster.
logging_clusterLogging :: Lens' Logging (Maybe [LogSetup])

-- | The Unix epoch timestamp in seconds for when the managed node group
--   was last modified.
nodegroup_modifiedAt :: Lens' Nodegroup (Maybe UTCTime)

-- | The capacity type of your managed node group.
nodegroup_capacityType :: Lens' Nodegroup (Maybe CapacityTypes)

-- | The current status of the managed node group.
nodegroup_status :: Lens' Nodegroup (Maybe NodegroupStatus)

-- | If the node group wasn't deployed with a launch template, then this is
--   the instance type that is associated with the node group. If the node
--   group was deployed with a launch template, then this is <tt>null</tt>.
nodegroup_instanceTypes :: Lens' Nodegroup (Maybe [Text])

-- | The Unix epoch timestamp in seconds for when the managed node group
--   was created.
nodegroup_createdAt :: Lens' Nodegroup (Maybe UTCTime)

-- | The Kubernetes taints to be applied to the nodes in the node group
--   when they are created. Effect is one of <tt>No_Schedule</tt>,
--   <tt>Prefer_No_Schedule</tt>, or <tt>No_Execute</tt>. Kubernetes taints
--   can be used together with tolerations to control how workloads are
--   scheduled to your nodes.
nodegroup_taints :: Lens' Nodegroup (Maybe [Taint])

-- | The subnets that were specified for the Auto Scaling group that is
--   associated with your node group.
nodegroup_subnets :: Lens' Nodegroup (Maybe [Text])

-- | If the node group wasn't deployed with a launch template, then this is
--   the remote access configuration that is associated with the node
--   group. If the node group was deployed with a launch template, then
--   this is <tt>null</tt>.
nodegroup_remoteAccess :: Lens' Nodegroup (Maybe RemoteAccessConfig)

-- | If the node group wasn't deployed with a launch template, then this is
--   the disk size in the node group configuration. If the node group was
--   deployed with a launch template, then this is <tt>null</tt>.
nodegroup_diskSize :: Lens' Nodegroup (Maybe Int)

-- | If the node group was deployed using a launch template with a custom
--   AMI, then this is the AMI ID that was specified in the launch
--   template. For node groups that weren't deployed using a launch
--   template, this is the version of the Amazon EKS optimized AMI that the
--   node group was deployed with.
nodegroup_releaseVersion :: Lens' Nodegroup (Maybe Text)

-- | The resources associated with the node group, such as Auto Scaling
--   groups and security groups for remote access.
nodegroup_resources :: Lens' Nodegroup (Maybe NodegroupResources)

-- | The health status of the node group. If there are issues with your
--   node group's health, they are listed here.
nodegroup_health :: Lens' Nodegroup (Maybe NodegroupHealth)

-- | The IAM role associated with your node group. The Amazon EKS node
--   <tt>kubelet</tt> daemon makes calls to Amazon Web Services APIs on
--   your behalf. Nodes receive permissions for these API calls through an
--   IAM instance profile and associated policies.
nodegroup_nodeRole :: Lens' Nodegroup (Maybe Text)

-- | The scaling configuration details for the Auto Scaling group that is
--   associated with your node group.
nodegroup_scalingConfig :: Lens' Nodegroup (Maybe NodegroupScalingConfig)

-- | The Kubernetes version of the managed node group.
nodegroup_version :: Lens' Nodegroup (Maybe Text)

-- | The Amazon Resource Name (ARN) associated with the managed node group.
nodegroup_nodegroupArn :: Lens' Nodegroup (Maybe Text)

-- | The name of the cluster that the managed node group resides in.
nodegroup_clusterName :: Lens' Nodegroup (Maybe Text)

-- | If a launch template was used to create the node group, then this is
--   the launch template that was used.
nodegroup_launchTemplate :: Lens' Nodegroup (Maybe LaunchTemplateSpecification)

-- | The Kubernetes labels applied to the nodes in the node group.
--   
--   Only labels that are applied with the Amazon EKS API are shown here.
--   There may be other Kubernetes labels applied to the nodes in this
--   group.
nodegroup_labels :: Lens' Nodegroup (Maybe (HashMap Text Text))

-- | If the node group was deployed using a launch template with a custom
--   AMI, then this is <tt>CUSTOM</tt>. For node groups that weren't
--   deployed using a launch template, this is the AMI type that was
--   specified in the node group configuration.
nodegroup_amiType :: Lens' Nodegroup (Maybe AMITypes)

-- | The name associated with an Amazon EKS managed node group.
nodegroup_nodegroupName :: Lens' Nodegroup (Maybe Text)

-- | The node group update configuration.
nodegroup_updateConfig :: Lens' Nodegroup (Maybe NodegroupUpdateConfig)

-- | The metadata applied to the node group to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Node group tags do not propagate to any
--   other resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
nodegroup_tags :: Lens' Nodegroup (Maybe (HashMap Text Text))

-- | Any issues that are associated with the node group.
nodegroupHealth_issues :: Lens' NodegroupHealth (Maybe [Issue])

-- | The remote access security group associated with the node group. This
--   security group controls SSH access to the nodes.
nodegroupResources_remoteAccessSecurityGroup :: Lens' NodegroupResources (Maybe Text)

-- | The Auto Scaling groups associated with the node group.
nodegroupResources_autoScalingGroups :: Lens' NodegroupResources (Maybe [AutoScalingGroup])

-- | The current number of nodes that the managed node group should
--   maintain.
nodegroupScalingConfig_desiredSize :: Lens' NodegroupScalingConfig (Maybe Natural)

-- | The maximum number of nodes that the managed node group can scale out
--   to. For information about the maximum number that you can specify, see
--   <a>Amazon EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.
nodegroupScalingConfig_maxSize :: Lens' NodegroupScalingConfig (Maybe Natural)

-- | The minimum number of nodes that the managed node group can scale in
--   to.
nodegroupScalingConfig_minSize :: Lens' NodegroupScalingConfig (Maybe Natural)

-- | The maximum number of nodes unavailable at once during a version
--   update. Nodes will be updated in parallel. This value or
--   <tt>maxUnavailablePercentage</tt> is required to have a value.The
--   maximum number is 100.
nodegroupUpdateConfig_maxUnavailable :: Lens' NodegroupUpdateConfig (Maybe Natural)

-- | The maximum percentage of nodes unavailable during a version update.
--   This percentage of nodes will be updated in parallel, up to 100 nodes
--   at once. This value or <tt>maxUnavailable</tt> is required to have a
--   value.
nodegroupUpdateConfig_maxUnavailablePercentage :: Lens' NodegroupUpdateConfig (Maybe Natural)

-- | The issuer URL for the OIDC identity provider.
oidc_issuer :: Lens' OIDC (Maybe Text)

-- | The prefix that is prepended to group claims to prevent clashes with
--   existing names (such as <tt>system:</tt> groups). For example, the
--   value<tt> oidc:</tt> creates group names like
--   <tt>oidc:engineering</tt> and <tt>oidc:infra</tt>. The prefix can't
--   contain <tt>system:</tt>
oidcIdentityProviderConfig_groupsPrefix :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The JSON Web token (JWT) claim that is used as the username.
oidcIdentityProviderConfig_usernameClaim :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | This is also known as <i>audience</i>. The ID of the client
--   application that makes authentication requests to the OIDC identity
--   provider.
oidcIdentityProviderConfig_clientId :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The status of the OIDC identity provider.
oidcIdentityProviderConfig_status :: Lens' OidcIdentityProviderConfig (Maybe ConfigStatus)

-- | The name of the configuration.
oidcIdentityProviderConfig_identityProviderConfigName :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The ARN of the configuration.
oidcIdentityProviderConfig_identityProviderConfigArn :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The URL of the OIDC identity provider that allows the API server to
--   discover public signing keys for verifying tokens.
oidcIdentityProviderConfig_issuerUrl :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The key-value pairs that describe required claims in the identity
--   token. If set, each claim is verified to be present in the token with
--   a matching value.
oidcIdentityProviderConfig_requiredClaims :: Lens' OidcIdentityProviderConfig (Maybe (HashMap Text Text))

-- | The prefix that is prepended to username claims to prevent clashes
--   with existing names. The prefix can't contain <tt>system:</tt>
oidcIdentityProviderConfig_usernamePrefix :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The JSON web token (JWT) claim that the provider uses to return your
--   groups.
oidcIdentityProviderConfig_groupsClaim :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The cluster that the configuration is associated to.
oidcIdentityProviderConfig_clusterName :: Lens' OidcIdentityProviderConfig (Maybe Text)

-- | The metadata to apply to the provider configuration to assist with
--   categorization and organization. Each tag consists of a key and an
--   optional value, both of which you defined.
oidcIdentityProviderConfig_tags :: Lens' OidcIdentityProviderConfig (Maybe (HashMap Text Text))

-- | The prefix that is prepended to group claims to prevent clashes with
--   existing names (such as <tt>system:</tt> groups). For example, the
--   value<tt> oidc:</tt> will create group names like
--   <tt>oidc:engineering</tt> and <tt>oidc:infra</tt>.
oidcIdentityProviderConfigRequest_groupsPrefix :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The JSON Web Token (JWT) claim to use as the username. The default is
--   <tt>sub</tt>, which is expected to be a unique identifier of the end
--   user. You can choose other claims, such as <tt>email</tt> or
--   <tt>name</tt>, depending on the OpenID identity provider. Claims other
--   than <tt>email</tt> are prefixed with the issuer URL to prevent naming
--   clashes with other plug-ins.
oidcIdentityProviderConfigRequest_usernameClaim :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The key value pairs that describe required claims in the identity
--   token. If set, each claim is verified to be present in the token with
--   a matching value. For the maximum number of claims that you can
--   require, see <a>Amazon EKS service quotas</a> in the <i>Amazon EKS
--   User Guide</i>.
oidcIdentityProviderConfigRequest_requiredClaims :: Lens' OidcIdentityProviderConfigRequest (Maybe (HashMap Text Text))

-- | The prefix that is prepended to username claims to prevent clashes
--   with existing names. If you do not provide this field, and
--   <tt>username</tt> is a value other than <tt>email</tt>, the prefix
--   defaults to <tt>issuerurl#</tt>. You can use the value <tt>-</tt> to
--   disable all prefixing.
oidcIdentityProviderConfigRequest_usernamePrefix :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The JWT claim that the provider uses to return your groups.
oidcIdentityProviderConfigRequest_groupsClaim :: Lens' OidcIdentityProviderConfigRequest (Maybe Text)

-- | The name of the OIDC provider configuration.
oidcIdentityProviderConfigRequest_identityProviderConfigName :: Lens' OidcIdentityProviderConfigRequest Text

-- | The URL of the OpenID identity provider that allows the API server to
--   discover public signing keys for verifying tokens. The URL must begin
--   with <tt>https://</tt> and should correspond to the <tt>iss</tt> claim
--   in the provider's OIDC ID tokens. Per the OIDC standard, path
--   components are allowed but query parameters are not. Typically the URL
--   consists of only a hostname, like <tt>https://server.example.org</tt>
--   or <tt>https://example.com</tt>. This URL should point to the level
--   below <tt>.well-known/openid-configuration</tt> and must be publicly
--   accessible over the internet.
oidcIdentityProviderConfigRequest_issuerUrl :: Lens' OidcIdentityProviderConfigRequest Text

-- | This is also known as <i>audience</i>. The ID for the client
--   application that makes authentication requests to the OpenID identity
--   provider.
oidcIdentityProviderConfigRequest_clientId :: Lens' OidcIdentityProviderConfigRequest Text

-- | Amazon Resource Name (ARN) or alias of the KMS key. The KMS key must
--   be symmetric, created in the same region as the cluster, and if the
--   KMS key was created in a different account, the user must have access
--   to the KMS key. For more information, see <a>Allowing Users in Other
--   Accounts to Use a KMS key</a> in the <i>Key Management Service
--   Developer Guide</i>.
provider_keyArn :: Lens' Provider (Maybe Text)

-- | The security groups that are allowed SSH access (port 22) to the
--   nodes. If you specify an Amazon EC2 SSH key but do not specify a
--   source security group when you create a managed node group, then port
--   22 on the nodes is opened to the internet (0.0.0.0/0). For more
--   information, see <a>Security Groups for Your VPC</a> in the <i>Amazon
--   Virtual Private Cloud User Guide</i>.
remoteAccessConfig_sourceSecurityGroups :: Lens' RemoteAccessConfig (Maybe [Text])

-- | The Amazon EC2 SSH key that provides access for SSH communication with
--   the nodes in the managed node group. For more information, see
--   <a>Amazon EC2 key pairs and Linux instances</a> in the <i>Amazon
--   Elastic Compute Cloud User Guide for Linux Instances</i>.
remoteAccessConfig_ec2SshKey :: Lens' RemoteAccessConfig (Maybe Text)

-- | The effect of the taint.
taint_effect :: Lens' Taint (Maybe TaintEffect)

-- | The value of the taint.
taint_value :: Lens' Taint (Maybe Text)

-- | The key of the taint.
taint_key :: Lens' Taint (Maybe Text)

-- | The current status of the update.
update_status :: Lens' Update (Maybe UpdateStatus)

-- | The Unix epoch timestamp in seconds for when the update was created.
update_createdAt :: Lens' Update (Maybe UTCTime)

-- | A key-value map that contains the parameters associated with the
--   update.
update_params :: Lens' Update (Maybe [UpdateParam])

-- | A UUID that is used to track the update.
update_id :: Lens' Update (Maybe Text)

-- | The type of the update.
update_type :: Lens' Update (Maybe UpdateType)

-- | Any errors associated with a <tt>Failed</tt> update.
update_errors :: Lens' Update (Maybe [ErrorDetail])

-- | Kubernetes labels to be removed.
updateLabelsPayload_removeLabels :: Lens' UpdateLabelsPayload (Maybe [Text])

-- | Kubernetes labels to be added or updated.
updateLabelsPayload_addOrUpdateLabels :: Lens' UpdateLabelsPayload (Maybe (HashMap Text Text))

-- | The value of the keys submitted as part of an update request.
updateParam_value :: Lens' UpdateParam (Maybe Text)

-- | The keys associated with an update request.
updateParam_type :: Lens' UpdateParam (Maybe UpdateParamType)

-- | Kubernetes taints to be added or updated.
updateTaintsPayload_addOrUpdateTaints :: Lens' UpdateTaintsPayload (Maybe [Taint])

-- | Kubernetes taints to be removed.
updateTaintsPayload_removeTaints :: Lens' UpdateTaintsPayload (Maybe [Taint])

-- | Specify one or more security groups for the cross-account elastic
--   network interfaces that Amazon EKS creates to use that allow
--   communication between your nodes and the Kubernetes control plane. If
--   you don't specify any security groups, then familiarize yourself with
--   the difference between Amazon EKS defaults for clusters deployed with
--   Kubernetes:
--   
--   <ul>
--   <li>1.14 Amazon EKS platform version <tt>eks.2</tt> and earlier</li>
--   <li>1.14 Amazon EKS platform version <tt>eks.3</tt> and later</li>
--   </ul>
--   
--   For more information, see <a>Amazon EKS security group
--   considerations</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_securityGroupIds :: Lens' VpcConfigRequest (Maybe [Text])

-- | Set this value to <tt>true</tt> to enable private access for your
--   cluster's Kubernetes API server endpoint. If you enable private
--   access, Kubernetes API requests from within your cluster's VPC use the
--   private VPC endpoint. The default value for this parameter is
--   <tt>false</tt>, which disables private access for your Kubernetes API
--   server. If you disable private access and you have nodes or Fargate
--   pods in the cluster, then ensure that <tt>publicAccessCidrs</tt>
--   includes the necessary CIDR blocks for communication with the nodes or
--   Fargate pods. For more information, see <a>Amazon EKS cluster endpoint
--   access control</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_endpointPrivateAccess :: Lens' VpcConfigRequest (Maybe Bool)

-- | The CIDR blocks that are allowed access to your cluster's public
--   Kubernetes API server endpoint. Communication to the endpoint from
--   addresses outside of the CIDR blocks that you specify is denied. The
--   default value is <tt>0.0.0.0/0</tt>. If you've disabled private
--   endpoint access and you have nodes or Fargate pods in the cluster,
--   then ensure that you specify the necessary CIDR blocks. For more
--   information, see <a>Amazon EKS cluster endpoint access control</a> in
--   the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_publicAccessCidrs :: Lens' VpcConfigRequest (Maybe [Text])

-- | Specify subnets for your Amazon EKS nodes. Amazon EKS creates
--   cross-account elastic network interfaces in these subnets to allow
--   communication between your nodes and the Kubernetes control plane.
vpcConfigRequest_subnetIds :: Lens' VpcConfigRequest (Maybe [Text])

-- | Set this value to <tt>false</tt> to disable public access to your
--   cluster's Kubernetes API server endpoint. If you disable public
--   access, your cluster's Kubernetes API server can only receive requests
--   from within the cluster VPC. The default value for this parameter is
--   <tt>true</tt>, which enables public access for your Kubernetes API
--   server. For more information, see <a>Amazon EKS cluster endpoint
--   access control</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigRequest_endpointPublicAccess :: Lens' VpcConfigRequest (Maybe Bool)

-- | The security groups associated with the cross-account elastic network
--   interfaces that are used to allow communication between your nodes and
--   the Kubernetes control plane.
vpcConfigResponse_securityGroupIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | This parameter indicates whether the Amazon EKS private API server
--   endpoint is enabled. If the Amazon EKS private API server endpoint is
--   enabled, Kubernetes API requests that originate from within your
--   cluster's VPC use the private VPC endpoint instead of traversing the
--   internet. If this value is disabled and you have nodes or Fargate pods
--   in the cluster, then ensure that <tt>publicAccessCidrs</tt> includes
--   the necessary CIDR blocks for communication with the nodes or Fargate
--   pods. For more information, see <a>Amazon EKS cluster endpoint access
--   control</a> in the /<i>Amazon EKS User Guide</i>/ .
vpcConfigResponse_endpointPrivateAccess :: Lens' VpcConfigResponse (Maybe Bool)

-- | The CIDR blocks that are allowed access to your cluster's public
--   Kubernetes API server endpoint. Communication to the endpoint from
--   addresses outside of the listed CIDR blocks is denied. The default
--   value is <tt>0.0.0.0/0</tt>. If you've disabled private endpoint
--   access and you have nodes or Fargate pods in the cluster, then ensure
--   that the necessary CIDR blocks are listed. For more information, see
--   <a>Amazon EKS cluster endpoint access control</a> in the /<i>Amazon
--   EKS User Guide</i>/ .
vpcConfigResponse_publicAccessCidrs :: Lens' VpcConfigResponse (Maybe [Text])

-- | The subnets associated with your cluster.
vpcConfigResponse_subnetIds :: Lens' VpcConfigResponse (Maybe [Text])

-- | The VPC associated with your cluster.
vpcConfigResponse_vpcId :: Lens' VpcConfigResponse (Maybe Text)

-- | The cluster security group that was created by Amazon EKS for the
--   cluster. Managed node groups use this security group for
--   control-plane-to-data-plane communication.
vpcConfigResponse_clusterSecurityGroupId :: Lens' VpcConfigResponse (Maybe Text)

-- | This parameter indicates whether the Amazon EKS public API server
--   endpoint is enabled. If the Amazon EKS public API server endpoint is
--   disabled, your cluster's Kubernetes API server can only receive
--   requests that originate from within the cluster VPC.
vpcConfigResponse_endpointPublicAccess :: Lens' VpcConfigResponse (Maybe Bool)


module Network.AWS.EKS.Waiters

-- | Polls <a>DescribeAddon</a> every 10 seconds until a successful state
--   is reached. An error is returned after 60 failed checks.
newAddonActive :: Wait DescribeAddon

-- | Polls <a>DescribeNodegroup</a> every 30 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newNodegroupDeleted :: Wait DescribeNodegroup

-- | Polls <a>DescribeFargateProfile</a> every 10 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newFargateProfileActive :: Wait DescribeFargateProfile

-- | Polls <a>DescribeAddon</a> every 10 seconds until a successful state
--   is reached. An error is returned after 60 failed checks.
newAddonDeleted :: Wait DescribeAddon

-- | Polls <a>DescribeCluster</a> every 30 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newClusterActive :: Wait DescribeCluster

-- | Polls <a>DescribeFargateProfile</a> every 30 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newFargateProfileDeleted :: Wait DescribeFargateProfile

-- | Polls <a>DescribeCluster</a> every 30 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newClusterDeleted :: Wait DescribeCluster

-- | Polls <a>DescribeNodegroup</a> every 30 seconds until a successful
--   state is reached. An error is returned after 80 failed checks.
newNodegroupActive :: Wait DescribeNodegroup


-- | Derived from API version <tt>2017-11-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Elastic Kubernetes Service (Amazon EKS) is a managed service
--   that makes it easy for you to run Kubernetes on Amazon Web Services
--   without needing to stand up or maintain your own Kubernetes control
--   plane. Kubernetes is an open-source system for automating the
--   deployment, scaling, and management of containerized applications.
--   
--   Amazon EKS runs up-to-date versions of the open-source Kubernetes
--   software, so you can use all the existing plugins and tooling from the
--   Kubernetes community. Applications running on Amazon EKS are fully
--   compatible with applications running on any standard Kubernetes
--   environment, whether running in on-premises data centers or public
--   clouds. This means that you can easily migrate any standard Kubernetes
--   application to Amazon EKS without any code modification required.
module Network.AWS.EKS

-- | API version <tt>2017-11-01</tt> of the Amazon Elastic Kubernetes
--   Service SDK configuration.
defaultService :: Service

-- | The specified parameter is invalid. Review the available parameters
--   for the API request.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is invalid given the state of the cluster. Check the state
--   of the cluster and the associated operations.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | These errors are usually caused by a server-side issue.
_ServerException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one of your specified cluster subnets is in an Availability
--   Zone that does not support Amazon EKS. The exception output specifies
--   the supported Availability Zones for your account, from which you can
--   choose subnets for your cluster.
_UnsupportedAvailabilityZoneException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have encountered a service limit on the specified resource.
_ResourceLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A service resource associated with the request could not be found.
--   Clients should not retry such requests.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is unavailable. Back off and retry the operation.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | These errors are usually caused by a client action. Actions can
--   include using an action or resource on behalf of a user that doesn't
--   have permissions to use the action or resource or specifying an
--   identifier that is not valid.
_ClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource could not be found. You can view your available
--   clusters with ListClusters. You can view your available managed node
--   groups with ListNodegroups. Amazon EKS clusters and node groups are
--   Region-specific.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown if the request contains a semantic error. The
--   precise meaning will depend on the API, and will be documented in the
--   error message.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource is in use.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Polls <a>DescribeAddon</a> every 10 seconds until a successful state
--   is reached. An error is returned after 60 failed checks.
newAddonActive :: Wait DescribeAddon

-- | Polls <a>DescribeNodegroup</a> every 30 seconds until a successful
--   state is reached. An error is returned after 40 failed checks.
newNodegroupDeleted :: Wait DescribeNodegroup

-- | Polls <a>DescribeFargateProfile</a> every 10 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newFargateProfileActive :: Wait DescribeFargateProfile

-- | Polls <a>DescribeAddon</a> every 10 seconds until a successful state
--   is reached. An error is returned after 60 failed checks.
newAddonDeleted :: Wait DescribeAddon

-- | Polls <a>DescribeCluster</a> every 30 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newClusterActive :: Wait DescribeCluster

-- | Polls <a>DescribeFargateProfile</a> every 30 seconds until a
--   successful state is reached. An error is returned after 60 failed
--   checks.
newFargateProfileDeleted :: Wait DescribeFargateProfile

-- | Polls <a>DescribeCluster</a> every 30 seconds until a successful state
--   is reached. An error is returned after 40 failed checks.
newClusterDeleted :: Wait DescribeCluster

-- | Polls <a>DescribeNodegroup</a> every 30 seconds until a successful
--   state is reached. An error is returned after 80 failed checks.
newNodegroupActive :: Wait DescribeNodegroup

-- | <i>See:</i> <a>newCreateAddon</a> smart constructor.
data CreateAddon
CreateAddon' :: Maybe Text -> Maybe Text -> Maybe ResolveConflicts -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateAddon

-- | Create a value of <a>CreateAddon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonVersion:CreateAddon'</a>, <a>createAddon_addonVersion</a>
--   - The version of the add-on. The version must match one of the
--   versions returned by <a>DescribeAddonVersions</a> .
--   
--   <a>$sel:serviceAccountRoleArn:CreateAddon'</a>,
--   <a>createAddon_serviceAccountRoleArn</a> - The Amazon Resource Name
--   (ARN) of an existing IAM role to bind to the add-on's service account.
--   The role must be assigned the IAM permissions required by the add-on.
--   If you don't specify an existing IAM role, then the add-on uses the
--   permissions assigned to the node IAM role. For more information, see
--   <a>Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.
--   
--   To specify an existing IAM role, you must have an IAM OpenID Connect
--   (OIDC) provider created for your cluster. For more information, see
--   <a>Enabling IAM roles for service accounts on your cluster</a> in the
--   <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:resolveConflicts:CreateAddon'</a>,
--   <a>createAddon_resolveConflicts</a> - How to resolve parameter value
--   conflicts when migrating an existing add-on to an Amazon EKS add-on.
--   
--   <a>$sel:clientRequestToken:CreateAddon'</a>,
--   <a>createAddon_clientRequestToken</a> - A unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:tags:CreateAddon'</a>, <a>createAddon_tags</a> - The metadata
--   to apply to the cluster to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define.
--   
--   <a>$sel:clusterName:CreateAddon'</a>, <a>createAddon_clusterName</a> -
--   The name of the cluster to create the add-on for.
--   
--   <a>$sel:addonName:CreateAddon'</a>, <a>createAddon_addonName</a> - The
--   name of the add-on. The name must match one of the names returned by
--   <a>DescribeAddonVersions</a> .
newCreateAddon :: Text -> Text -> CreateAddon

-- | <i>See:</i> <a>newCreateAddonResponse</a> smart constructor.
data CreateAddonResponse
CreateAddonResponse' :: Maybe Addon -> Int -> CreateAddonResponse

-- | Create a value of <a>CreateAddonResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addon:CreateAddonResponse'</a>,
--   <a>createAddonResponse_addon</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:CreateAddonResponse'</a>,
--   <a>createAddonResponse_httpStatus</a> - The response's http status
--   code.
newCreateAddonResponse :: Int -> CreateAddonResponse

-- | <i>See:</i> <a>newDescribeFargateProfile</a> smart constructor.
data DescribeFargateProfile
DescribeFargateProfile' :: Text -> Text -> DescribeFargateProfile

-- | Create a value of <a>DescribeFargateProfile</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DescribeFargateProfile'</a>,
--   <a>describeFargateProfile_clusterName</a> - The name of the Amazon EKS
--   cluster associated with the Fargate profile.
--   
--   <a>$sel:fargateProfileName:DescribeFargateProfile'</a>,
--   <a>describeFargateProfile_fargateProfileName</a> - The name of the
--   Fargate profile to describe.
newDescribeFargateProfile :: Text -> Text -> DescribeFargateProfile

-- | <i>See:</i> <a>newDescribeFargateProfileResponse</a> smart
--   constructor.
data DescribeFargateProfileResponse
DescribeFargateProfileResponse' :: Maybe FargateProfile -> Int -> DescribeFargateProfileResponse

-- | Create a value of <a>DescribeFargateProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fargateProfile:DescribeFargateProfileResponse'</a>,
--   <a>describeFargateProfileResponse_fargateProfile</a> - The full
--   description of your Fargate profile.
--   
--   <a>$sel:httpStatus:DescribeFargateProfileResponse'</a>,
--   <a>describeFargateProfileResponse_httpStatus</a> - The response's http
--   status code.
newDescribeFargateProfileResponse :: Int -> DescribeFargateProfileResponse

-- | <i>See:</i> <a>newDescribeUpdate</a> smart constructor.
data DescribeUpdate
DescribeUpdate' :: Maybe Text -> Maybe Text -> Text -> Text -> DescribeUpdate

-- | Create a value of <a>DescribeUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonName:DescribeUpdate'</a>, <a>describeUpdate_addonName</a>
--   - The name of the add-on. The name must match one of the names
--   returned by <a>ListAddons</a> .
--   
--   <a>$sel:nodegroupName:DescribeUpdate'</a>,
--   <a>describeUpdate_nodegroupName</a> - The name of the Amazon EKS node
--   group associated with the update.
--   
--   <a>$sel:name:DescribeUpdate'</a>, <a>describeUpdate_name</a> - The
--   name of the Amazon EKS cluster associated with the update.
--   
--   <a>$sel:updateId:DescribeUpdate'</a>, <a>describeUpdate_updateId</a> -
--   The ID of the update to describe.
newDescribeUpdate :: Text -> Text -> DescribeUpdate

-- | <i>See:</i> <a>newDescribeUpdateResponse</a> smart constructor.
data DescribeUpdateResponse
DescribeUpdateResponse' :: Maybe Update -> Int -> DescribeUpdateResponse

-- | Create a value of <a>DescribeUpdateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:DescribeUpdateResponse'</a>,
--   <a>describeUpdateResponse_update</a> - The full description of the
--   specified update.
--   
--   <a>$sel:httpStatus:DescribeUpdateResponse'</a>,
--   <a>describeUpdateResponse_httpStatus</a> - The response's http status
--   code.
newDescribeUpdateResponse :: Int -> DescribeUpdateResponse

-- | <i>See:</i> <a>newUpdateNodegroupConfig</a> smart constructor.
data UpdateNodegroupConfig
UpdateNodegroupConfig' :: Maybe UpdateTaintsPayload -> Maybe NodegroupScalingConfig -> Maybe UpdateLabelsPayload -> Maybe Text -> Maybe NodegroupUpdateConfig -> Text -> Text -> UpdateNodegroupConfig

-- | Create a value of <a>UpdateNodegroupConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taints:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_taints</a> - The Kubernetes taints to be
--   applied to the nodes in the node group after the update.
--   
--   <a>$sel:scalingConfig:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_scalingConfig</a> - The scaling configuration
--   details for the Auto Scaling group after the update.
--   
--   <a>$sel:labels:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_labels</a> - The Kubernetes labels to be
--   applied to the nodes in the node group after the update.
--   
--   <a>$sel:clientRequestToken:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:updateConfig:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_updateConfig</a> - The node group update
--   configuration.
--   
--   <a>$sel:clusterName:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_clusterName</a> - The name of the Amazon EKS
--   cluster that the managed node group resides in.
--   
--   <a>$sel:nodegroupName:UpdateNodegroupConfig'</a>,
--   <a>updateNodegroupConfig_nodegroupName</a> - The name of the managed
--   node group to update.
newUpdateNodegroupConfig :: Text -> Text -> UpdateNodegroupConfig

-- | <i>See:</i> <a>newUpdateNodegroupConfigResponse</a> smart constructor.
data UpdateNodegroupConfigResponse
UpdateNodegroupConfigResponse' :: Maybe Update -> Int -> UpdateNodegroupConfigResponse

-- | Create a value of <a>UpdateNodegroupConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:UpdateNodegroupConfigResponse'</a>,
--   <a>updateNodegroupConfigResponse_update</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateNodegroupConfigResponse'</a>,
--   <a>updateNodegroupConfigResponse_httpStatus</a> - The response's http
--   status code.
newUpdateNodegroupConfigResponse :: Int -> UpdateNodegroupConfigResponse

-- | <i>See:</i> <a>newDescribeCluster</a> smart constructor.
data DescribeCluster
DescribeCluster' :: Text -> DescribeCluster

-- | Create a value of <a>DescribeCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DescribeCluster'</a>, <a>describeCluster_name</a> - The
--   name of the cluster to describe.
newDescribeCluster :: Text -> DescribeCluster

-- | <i>See:</i> <a>newDescribeClusterResponse</a> smart constructor.
data DescribeClusterResponse
DescribeClusterResponse' :: Maybe Cluster -> Int -> DescribeClusterResponse

-- | Create a value of <a>DescribeClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_cluster</a> - The full description of your
--   specified cluster.
--   
--   <a>$sel:httpStatus:DescribeClusterResponse'</a>,
--   <a>describeClusterResponse_httpStatus</a> - The response's http status
--   code.
newDescribeClusterResponse :: Int -> DescribeClusterResponse

-- | <i>See:</i> <a>newDeregisterCluster</a> smart constructor.
data DeregisterCluster
DeregisterCluster' :: Text -> DeregisterCluster

-- | Create a value of <a>DeregisterCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeregisterCluster'</a>, <a>deregisterCluster_name</a> -
--   The name of the connected cluster to deregister.
newDeregisterCluster :: Text -> DeregisterCluster

-- | <i>See:</i> <a>newDeregisterClusterResponse</a> smart constructor.
data DeregisterClusterResponse
DeregisterClusterResponse' :: Maybe Cluster -> Int -> DeregisterClusterResponse

-- | Create a value of <a>DeregisterClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DeregisterClusterResponse'</a>,
--   <a>deregisterClusterResponse_cluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DeregisterClusterResponse'</a>,
--   <a>deregisterClusterResponse_httpStatus</a> - The response's http
--   status code.
newDeregisterClusterResponse :: Int -> DeregisterClusterResponse

-- | <i>See:</i> <a>newDescribeNodegroup</a> smart constructor.
data DescribeNodegroup
DescribeNodegroup' :: Text -> Text -> DescribeNodegroup

-- | Create a value of <a>DescribeNodegroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DescribeNodegroup'</a>,
--   <a>describeNodegroup_clusterName</a> - The name of the Amazon EKS
--   cluster associated with the node group.
--   
--   <a>$sel:nodegroupName:DescribeNodegroup'</a>,
--   <a>describeNodegroup_nodegroupName</a> - The name of the node group to
--   describe.
newDescribeNodegroup :: Text -> Text -> DescribeNodegroup

-- | <i>See:</i> <a>newDescribeNodegroupResponse</a> smart constructor.
data DescribeNodegroupResponse
DescribeNodegroupResponse' :: Maybe Nodegroup -> Int -> DescribeNodegroupResponse

-- | Create a value of <a>DescribeNodegroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodegroup:DescribeNodegroupResponse'</a>,
--   <a>describeNodegroupResponse_nodegroup</a> - The full description of
--   your node group.
--   
--   <a>$sel:httpStatus:DescribeNodegroupResponse'</a>,
--   <a>describeNodegroupResponse_httpStatus</a> - The response's http
--   status code.
newDescribeNodegroupResponse :: Int -> DescribeNodegroupResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) that identifies the resource for which to list the tags.
--   Currently, the supported resources are Amazon EKS clusters and managed
--   node groups.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newCreateFargateProfile</a> smart constructor.
data CreateFargateProfile
CreateFargateProfile' :: Maybe [Text] -> Maybe Text -> Maybe [FargateProfileSelector] -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateFargateProfile

-- | Create a value of <a>CreateFargateProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subnets:CreateFargateProfile'</a>,
--   <a>createFargateProfile_subnets</a> - The IDs of subnets to launch
--   your pods into. At this time, pods running on Fargate are not assigned
--   public IP addresses, so only private subnets (with no direct route to
--   an Internet Gateway) are accepted for this parameter.
--   
--   <a>$sel:clientRequestToken:CreateFargateProfile'</a>,
--   <a>createFargateProfile_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:selectors:CreateFargateProfile'</a>,
--   <a>createFargateProfile_selectors</a> - The selectors to match for
--   pods to use this Fargate profile. Each selector must have an
--   associated namespace. Optionally, you can also specify labels for a
--   namespace. You may specify up to five selectors in a Fargate profile.
--   
--   <a>$sel:tags:CreateFargateProfile'</a>,
--   <a>createFargateProfile_tags</a> - The metadata to apply to the
--   Fargate profile to assist with categorization and organization. Each
--   tag consists of a key and an optional value, both of which you define.
--   Fargate profile tags do not propagate to any other resources
--   associated with the Fargate profile, such as the pods that are
--   scheduled with it.
--   
--   <a>$sel:fargateProfileName:CreateFargateProfile'</a>,
--   <a>createFargateProfile_fargateProfileName</a> - The name of the
--   Fargate profile.
--   
--   <a>$sel:clusterName:CreateFargateProfile'</a>,
--   <a>createFargateProfile_clusterName</a> - The name of the Amazon EKS
--   cluster to apply the Fargate profile to.
--   
--   <a>$sel:podExecutionRoleArn:CreateFargateProfile'</a>,
--   <a>createFargateProfile_podExecutionRoleArn</a> - The Amazon Resource
--   Name (ARN) of the pod execution role to use for pods that match the
--   selectors in the Fargate profile. The pod execution role allows
--   Fargate infrastructure to register with your cluster as a node, and it
--   provides read access to Amazon ECR image repositories. For more
--   information, see <a>Pod Execution Role</a> in the <i>Amazon EKS User
--   Guide</i>.
newCreateFargateProfile :: Text -> Text -> Text -> CreateFargateProfile

-- | <i>See:</i> <a>newCreateFargateProfileResponse</a> smart constructor.
data CreateFargateProfileResponse
CreateFargateProfileResponse' :: Maybe FargateProfile -> Int -> CreateFargateProfileResponse

-- | Create a value of <a>CreateFargateProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fargateProfile:CreateFargateProfileResponse'</a>,
--   <a>createFargateProfileResponse_fargateProfile</a> - The full
--   description of your new Fargate profile.
--   
--   <a>$sel:httpStatus:CreateFargateProfileResponse'</a>,
--   <a>createFargateProfileResponse_httpStatus</a> - The response's http
--   status code.
newCreateFargateProfileResponse :: Int -> CreateFargateProfileResponse

-- | <i>See:</i> <a>newDescribeIdentityProviderConfig</a> smart
--   constructor.
data DescribeIdentityProviderConfig
DescribeIdentityProviderConfig' :: Text -> IdentityProviderConfig -> DescribeIdentityProviderConfig

-- | Create a value of <a>DescribeIdentityProviderConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DescribeIdentityProviderConfig'</a>,
--   <a>describeIdentityProviderConfig_clusterName</a> - The cluster name
--   that the identity provider configuration is associated to.
--   
--   <a>$sel:identityProviderConfig:DescribeIdentityProviderConfig'</a>,
--   <a>describeIdentityProviderConfig_identityProviderConfig</a> - An
--   object that represents an identity provider configuration.
newDescribeIdentityProviderConfig :: Text -> IdentityProviderConfig -> DescribeIdentityProviderConfig

-- | <i>See:</i> <a>newDescribeIdentityProviderConfigResponse</a> smart
--   constructor.
data DescribeIdentityProviderConfigResponse
DescribeIdentityProviderConfigResponse' :: Maybe IdentityProviderConfigResponse -> Int -> DescribeIdentityProviderConfigResponse

-- | Create a value of <a>DescribeIdentityProviderConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:identityProviderConfig:DescribeIdentityProviderConfig'</a>,
--   <a>describeIdentityProviderConfigResponse_identityProviderConfig</a> -
--   The object that represents an OpenID Connect (OIDC) identity provider
--   configuration.
--   
--   <a>$sel:httpStatus:DescribeIdentityProviderConfigResponse'</a>,
--   <a>describeIdentityProviderConfigResponse_httpStatus</a> - The
--   response's http status code.
newDescribeIdentityProviderConfigResponse :: Int -> DescribeIdentityProviderConfigResponse

-- | <i>See:</i> <a>newDeleteFargateProfile</a> smart constructor.
data DeleteFargateProfile
DeleteFargateProfile' :: Text -> Text -> DeleteFargateProfile

-- | Create a value of <a>DeleteFargateProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DeleteFargateProfile'</a>,
--   <a>deleteFargateProfile_clusterName</a> - The name of the Amazon EKS
--   cluster associated with the Fargate profile to delete.
--   
--   <a>$sel:fargateProfileName:DeleteFargateProfile'</a>,
--   <a>deleteFargateProfile_fargateProfileName</a> - The name of the
--   Fargate profile to delete.
newDeleteFargateProfile :: Text -> Text -> DeleteFargateProfile

-- | <i>See:</i> <a>newDeleteFargateProfileResponse</a> smart constructor.
data DeleteFargateProfileResponse
DeleteFargateProfileResponse' :: Maybe FargateProfile -> Int -> DeleteFargateProfileResponse

-- | Create a value of <a>DeleteFargateProfileResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fargateProfile:DeleteFargateProfileResponse'</a>,
--   <a>deleteFargateProfileResponse_fargateProfile</a> - The deleted
--   Fargate profile.
--   
--   <a>$sel:httpStatus:DeleteFargateProfileResponse'</a>,
--   <a>deleteFargateProfileResponse_httpStatus</a> - The response's http
--   status code.
newDeleteFargateProfileResponse :: Int -> DeleteFargateProfileResponse

-- | <i>See:</i> <a>newDeleteCluster</a> smart constructor.
data DeleteCluster
DeleteCluster' :: Text -> DeleteCluster

-- | Create a value of <a>DeleteCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteCluster'</a>, <a>deleteCluster_name</a> - The name
--   of the cluster to delete.
newDeleteCluster :: Text -> DeleteCluster

-- | <i>See:</i> <a>newDeleteClusterResponse</a> smart constructor.
data DeleteClusterResponse
DeleteClusterResponse' :: Maybe Cluster -> Int -> DeleteClusterResponse

-- | Create a value of <a>DeleteClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_cluster</a> - The full description of the
--   cluster to delete.
--   
--   <a>$sel:httpStatus:DeleteClusterResponse'</a>,
--   <a>deleteClusterResponse_httpStatus</a> - The response's http status
--   code.
newDeleteClusterResponse :: Int -> DeleteClusterResponse

-- | <i>See:</i> <a>newCreateCluster</a> smart constructor.
data CreateCluster
CreateCluster' :: Maybe KubernetesNetworkConfigRequest -> Maybe Text -> Maybe [EncryptionConfig] -> Maybe Text -> Maybe Logging -> Maybe (HashMap Text Text) -> Text -> Text -> VpcConfigRequest -> CreateCluster

-- | Create a value of <a>CreateCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kubernetesNetworkConfig:CreateCluster'</a>,
--   <a>createCluster_kubernetesNetworkConfig</a> - The Kubernetes network
--   configuration for the cluster.
--   
--   <a>$sel:version:CreateCluster'</a>, <a>createCluster_version</a> - The
--   desired Kubernetes version for your cluster. If you don't specify a
--   value here, the latest version available in Amazon EKS is used.
--   
--   <a>$sel:encryptionConfig:CreateCluster'</a>,
--   <a>createCluster_encryptionConfig</a> - The encryption configuration
--   for the cluster.
--   
--   <a>$sel:clientRequestToken:CreateCluster'</a>,
--   <a>createCluster_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:logging:CreateCluster'</a>, <a>createCluster_logging</a> -
--   Enable or disable exporting the Kubernetes control plane logs for your
--   cluster to CloudWatch Logs. By default, cluster control plane logs
--   aren't exported to CloudWatch Logs. For more information, see
--   <a>Amazon EKS Cluster control plane logs</a> in the /<i>Amazon EKS
--   User Guide</i>/ .
--   
--   CloudWatch Logs ingestion, archive storage, and data scanning rates
--   apply to exported control plane logs. For more information, see
--   <a>CloudWatch Pricing</a>.
--   
--   <a>$sel:tags:CreateCluster'</a>, <a>createCluster_tags</a> - The
--   metadata to apply to the cluster to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define.
--   
--   <a>$sel:name:CreateCluster'</a>, <a>createCluster_name</a> - The
--   unique name to give to your cluster.
--   
--   <a>$sel:roleArn:CreateCluster'</a>, <a>createCluster_roleArn</a> - The
--   Amazon Resource Name (ARN) of the IAM role that provides permissions
--   for the Kubernetes control plane to make calls to Amazon Web Services
--   API operations on your behalf. For more information, see <a>Amazon EKS
--   Service IAM Role</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:resourcesVpcConfig:CreateCluster'</a>,
--   <a>createCluster_resourcesVpcConfig</a> - The VPC configuration used
--   by the cluster control plane. Amazon EKS VPC resources have specific
--   requirements to work properly with Kubernetes. For more information,
--   see <a>Cluster VPC Considerations</a> and <a>Cluster Security Group
--   Considerations</a> in the <i>Amazon EKS User Guide</i>. You must
--   specify at least two subnets. You can specify up to five security
--   groups, but we recommend that you use a dedicated security group for
--   your cluster control plane.
newCreateCluster :: Text -> Text -> VpcConfigRequest -> CreateCluster

-- | <i>See:</i> <a>newCreateClusterResponse</a> smart constructor.
data CreateClusterResponse
CreateClusterResponse' :: Maybe Cluster -> Int -> CreateClusterResponse

-- | Create a value of <a>CreateClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:CreateClusterResponse'</a>,
--   <a>createClusterResponse_cluster</a> - The full description of your
--   new cluster.
--   
--   <a>$sel:httpStatus:CreateClusterResponse'</a>,
--   <a>createClusterResponse_httpStatus</a> - The response's http status
--   code.
newCreateClusterResponse :: Int -> CreateClusterResponse

-- | <i>See:</i> <a>newUpdateClusterConfig</a> smart constructor.
data UpdateClusterConfig
UpdateClusterConfig' :: Maybe Text -> Maybe Logging -> Maybe VpcConfigRequest -> Text -> UpdateClusterConfig

-- | Create a value of <a>UpdateClusterConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:UpdateClusterConfig'</a>,
--   <a>updateClusterConfig_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:logging:UpdateClusterConfig'</a>,
--   <a>updateClusterConfig_logging</a> - Enable or disable exporting the
--   Kubernetes control plane logs for your cluster to CloudWatch Logs. By
--   default, cluster control plane logs aren't exported to CloudWatch
--   Logs. For more information, see <a>Amazon EKS cluster control plane
--   logs</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   CloudWatch Logs ingestion, archive storage, and data scanning rates
--   apply to exported control plane logs. For more information, see
--   <a>CloudWatch Pricing</a>.
--   
--   <a>$sel:resourcesVpcConfig:UpdateClusterConfig'</a>,
--   <a>updateClusterConfig_resourcesVpcConfig</a> - Undocumented member.
--   
--   <a>$sel:name:UpdateClusterConfig'</a>, <a>updateClusterConfig_name</a>
--   - The name of the Amazon EKS cluster to update.
newUpdateClusterConfig :: Text -> UpdateClusterConfig

-- | <i>See:</i> <a>newUpdateClusterConfigResponse</a> smart constructor.
data UpdateClusterConfigResponse
UpdateClusterConfigResponse' :: Maybe Update -> Int -> UpdateClusterConfigResponse

-- | Create a value of <a>UpdateClusterConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:UpdateClusterConfigResponse'</a>,
--   <a>updateClusterConfigResponse_update</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateClusterConfigResponse'</a>,
--   <a>updateClusterConfigResponse_httpStatus</a> - The response's http
--   status code.
newUpdateClusterConfigResponse :: Int -> UpdateClusterConfigResponse

-- | <i>See:</i> <a>newListAddons</a> smart constructor.
data ListAddons
ListAddons' :: Maybe Text -> Maybe Natural -> Text -> ListAddons

-- | Create a value of <a>ListAddons</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAddons'</a>, <a>listAddons_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListAddonsRequest</tt> where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:maxResults:ListAddons'</a>, <a>listAddons_maxResults</a> - The
--   maximum number of add-on results returned by
--   <tt>ListAddonsRequest</tt> in paginated output. When you use this
--   parameter, <tt>ListAddonsRequest</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListAddonsRequest</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListAddonsRequest</tt> returns up to 100
--   results and a <tt>nextToken</tt> value, if applicable.
--   
--   <a>$sel:clusterName:ListAddons'</a>, <a>listAddons_clusterName</a> -
--   The name of the cluster.
newListAddons :: Text -> ListAddons

-- | <i>See:</i> <a>newListAddonsResponse</a> smart constructor.
data ListAddonsResponse
ListAddonsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListAddonsResponse

-- | Create a value of <a>ListAddonsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addons:ListAddonsResponse'</a>,
--   <a>listAddonsResponse_addons</a> - A list of available add-ons.
--   
--   <a>$sel:nextToken:ListAddons'</a>, <a>listAddonsResponse_nextToken</a>
--   - The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListAddonsResponse</tt> where <tt>maxResults</tt> was used and the
--   results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:httpStatus:ListAddonsResponse'</a>,
--   <a>listAddonsResponse_httpStatus</a> - The response's http status
--   code.
newListAddonsResponse :: Int -> ListAddonsResponse

-- | <i>See:</i> <a>newUpdateClusterVersion</a> smart constructor.
data UpdateClusterVersion
UpdateClusterVersion' :: Maybe Text -> Text -> Text -> UpdateClusterVersion

-- | Create a value of <a>UpdateClusterVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:UpdateClusterVersion'</a>,
--   <a>updateClusterVersion_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:name:UpdateClusterVersion'</a>,
--   <a>updateClusterVersion_name</a> - The name of the Amazon EKS cluster
--   to update.
--   
--   <a>$sel:version:UpdateClusterVersion'</a>,
--   <a>updateClusterVersion_version</a> - The desired Kubernetes version
--   following a successful update.
newUpdateClusterVersion :: Text -> Text -> UpdateClusterVersion

-- | <i>See:</i> <a>newUpdateClusterVersionResponse</a> smart constructor.
data UpdateClusterVersionResponse
UpdateClusterVersionResponse' :: Maybe Update -> Int -> UpdateClusterVersionResponse

-- | Create a value of <a>UpdateClusterVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:UpdateClusterVersionResponse'</a>,
--   <a>updateClusterVersionResponse_update</a> - The full description of
--   the specified update
--   
--   <a>$sel:httpStatus:UpdateClusterVersionResponse'</a>,
--   <a>updateClusterVersionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateClusterVersionResponse :: Int -> UpdateClusterVersionResponse

-- | <i>See:</i> <a>newDescribeAddonVersions</a> smart constructor.
data DescribeAddonVersions
DescribeAddonVersions' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> DescribeAddonVersions

-- | Create a value of <a>DescribeAddonVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonName:DescribeAddonVersions'</a>,
--   <a>describeAddonVersions_addonName</a> - The name of the add-on. The
--   name must match one of the names returned by <a>ListAddons</a> .
--   
--   <a>$sel:nextToken:DescribeAddonVersions'</a>,
--   <a>describeAddonVersions_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated
--   <tt>DescribeAddonVersionsRequest</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:kubernetesVersion:DescribeAddonVersions'</a>,
--   <a>describeAddonVersions_kubernetesVersion</a> - The Kubernetes
--   versions that the add-on can be used with.
--   
--   <a>$sel:maxResults:DescribeAddonVersions'</a>,
--   <a>describeAddonVersions_maxResults</a> - The maximum number of
--   results to return.
newDescribeAddonVersions :: DescribeAddonVersions

-- | <i>See:</i> <a>newDescribeAddonVersionsResponse</a> smart constructor.
data DescribeAddonVersionsResponse
DescribeAddonVersionsResponse' :: Maybe [AddonInfo] -> Maybe Text -> Int -> DescribeAddonVersionsResponse

-- | Create a value of <a>DescribeAddonVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addons:DescribeAddonVersionsResponse'</a>,
--   <a>describeAddonVersionsResponse_addons</a> - The list of available
--   versions with Kubernetes version compatibility.
--   
--   <a>$sel:nextToken:DescribeAddonVersions'</a>,
--   <a>describeAddonVersionsResponse_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>DescribeAddonVersionsResponse</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:httpStatus:DescribeAddonVersionsResponse'</a>,
--   <a>describeAddonVersionsResponse_httpStatus</a> - The response's http
--   status code.
newDescribeAddonVersionsResponse :: Int -> DescribeAddonVersionsResponse

-- | <i>See:</i> <a>newUpdateNodegroupVersion</a> smart constructor.
data UpdateNodegroupVersion
UpdateNodegroupVersion' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe Text -> Text -> Text -> UpdateNodegroupVersion

-- | Create a value of <a>UpdateNodegroupVersion</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:force:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_force</a> - Force the update if the existing
--   node group's pods are unable to be drained due to a pod disruption
--   budget issue. If an update fails because pods could not be drained,
--   you can force the update after it fails to terminate the old node
--   whether or not any pods are running on the node.
--   
--   <a>$sel:releaseVersion:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_releaseVersion</a> - The AMI version of the
--   Amazon EKS optimized AMI to use for the update. By default, the latest
--   available AMI version for the node group's Kubernetes version is used.
--   For more information, see <a>Amazon EKS optimized Amazon Linux 2 AMI
--   versions</a> in the <i>Amazon EKS User Guide</i>. If you specify
--   <tt>launchTemplate</tt>, and your launch template uses a custom AMI,
--   then don't specify <tt>releaseVersion</tt>, or the node group update
--   will fail. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
--   
--   <a>$sel:version:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_version</a> - The Kubernetes version to
--   update to. If no version is specified, then the Kubernetes version of
--   the node group does not change. You can specify the Kubernetes version
--   of the cluster to update the node group to the latest AMI version of
--   the cluster's Kubernetes version. If you specify
--   <tt>launchTemplate</tt>, and your launch template uses a custom AMI,
--   then don't specify <tt>version</tt>, or the node group update will
--   fail. For more information about using launch templates with Amazon
--   EKS, see <a>Launch template support</a> in the Amazon EKS User Guide.
--   
--   <a>$sel:launchTemplate:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_launchTemplate</a> - An object representing
--   a node group's launch template specification. You can only update a
--   node group using a launch template if the node group was originally
--   deployed with a launch template.
--   
--   <a>$sel:clientRequestToken:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:clusterName:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_clusterName</a> - The name of the Amazon EKS
--   cluster that is associated with the managed node group to update.
--   
--   <a>$sel:nodegroupName:UpdateNodegroupVersion'</a>,
--   <a>updateNodegroupVersion_nodegroupName</a> - The name of the managed
--   node group to update.
newUpdateNodegroupVersion :: Text -> Text -> UpdateNodegroupVersion

-- | <i>See:</i> <a>newUpdateNodegroupVersionResponse</a> smart
--   constructor.
data UpdateNodegroupVersionResponse
UpdateNodegroupVersionResponse' :: Maybe Update -> Int -> UpdateNodegroupVersionResponse

-- | Create a value of <a>UpdateNodegroupVersionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:UpdateNodegroupVersionResponse'</a>,
--   <a>updateNodegroupVersionResponse_update</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateNodegroupVersionResponse'</a>,
--   <a>updateNodegroupVersionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateNodegroupVersionResponse :: Int -> UpdateNodegroupVersionResponse

-- | <i>See:</i> <a>newListIdentityProviderConfigs</a> smart constructor.
data ListIdentityProviderConfigs
ListIdentityProviderConfigs' :: Maybe Text -> Maybe Natural -> Text -> ListIdentityProviderConfigs

-- | Create a value of <a>ListIdentityProviderConfigs</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListIdentityProviderConfigs'</a>,
--   <a>listIdentityProviderConfigs_nextToken</a> - The <tt>nextToken</tt>
--   value returned from a previous paginated
--   <tt>IdentityProviderConfigsRequest</tt> where <tt>maxResults</tt> was
--   used and the results exceeded the value of that parameter. Pagination
--   continues from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   <a>$sel:maxResults:ListIdentityProviderConfigs'</a>,
--   <a>listIdentityProviderConfigs_maxResults</a> - The maximum number of
--   identity provider configurations returned by
--   <tt>ListIdentityProviderConfigs</tt> in paginated output. When you use
--   this parameter, <tt>ListIdentityProviderConfigs</tt> returns only
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another
--   <tt>ListIdentityProviderConfigs</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListIdentityProviderConfigs</tt> returns
--   up to 100 results and a <tt>nextToken</tt> value, if applicable.
--   
--   <a>$sel:clusterName:ListIdentityProviderConfigs'</a>,
--   <a>listIdentityProviderConfigs_clusterName</a> - The cluster name that
--   you want to list identity provider configurations for.
newListIdentityProviderConfigs :: Text -> ListIdentityProviderConfigs

-- | <i>See:</i> <a>newListIdentityProviderConfigsResponse</a> smart
--   constructor.
data ListIdentityProviderConfigsResponse
ListIdentityProviderConfigsResponse' :: Maybe [IdentityProviderConfig] -> Maybe Text -> Int -> ListIdentityProviderConfigsResponse

-- | Create a value of <a>ListIdentityProviderConfigsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:identityProviderConfigs:ListIdentityProviderConfigsResponse'</a>,
--   <a>listIdentityProviderConfigsResponse_identityProviderConfigs</a> -
--   The identity provider configurations for the cluster.
--   
--   <a>$sel:nextToken:ListIdentityProviderConfigs'</a>,
--   <a>listIdentityProviderConfigsResponse_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListIdentityProviderConfigsResponse</tt> where <tt>maxResults</tt>
--   was used and the results exceeded the value of that parameter.
--   Pagination continues from the end of the previous results that
--   returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:httpStatus:ListIdentityProviderConfigsResponse'</a>,
--   <a>listIdentityProviderConfigsResponse_httpStatus</a> - The response's
--   http status code.
newListIdentityProviderConfigsResponse :: Int -> ListIdentityProviderConfigsResponse

-- | <i>See:</i> <a>newDisassociateIdentityProviderConfig</a> smart
--   constructor.
data DisassociateIdentityProviderConfig
DisassociateIdentityProviderConfig' :: Maybe Text -> Text -> IdentityProviderConfig -> DisassociateIdentityProviderConfig

-- | Create a value of <a>DisassociateIdentityProviderConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:DisassociateIdentityProviderConfig'</a>,
--   <a>disassociateIdentityProviderConfig_clientRequestToken</a> - A
--   unique, case-sensitive identifier that you provide to ensure the
--   idempotency of the request.
--   
--   <a>$sel:clusterName:DisassociateIdentityProviderConfig'</a>,
--   <a>disassociateIdentityProviderConfig_clusterName</a> - The name of
--   the cluster to disassociate an identity provider from.
--   
--   
--   <a>$sel:identityProviderConfig:DisassociateIdentityProviderConfig'</a>,
--   <a>disassociateIdentityProviderConfig_identityProviderConfig</a> - An
--   object that represents an identity provider configuration.
newDisassociateIdentityProviderConfig :: Text -> IdentityProviderConfig -> DisassociateIdentityProviderConfig

-- | <i>See:</i> <a>newDisassociateIdentityProviderConfigResponse</a> smart
--   constructor.
data DisassociateIdentityProviderConfigResponse
DisassociateIdentityProviderConfigResponse' :: Maybe Update -> Int -> DisassociateIdentityProviderConfigResponse

-- | Create a value of <a>DisassociateIdentityProviderConfigResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:DisassociateIdentityProviderConfigResponse'</a>,
--   <a>disassociateIdentityProviderConfigResponse_update</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:DisassociateIdentityProviderConfigResponse'</a>,
--   <a>disassociateIdentityProviderConfigResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateIdentityProviderConfigResponse :: Int -> DisassociateIdentityProviderConfigResponse

-- | <i>See:</i> <a>newDescribeAddon</a> smart constructor.
data DescribeAddon
DescribeAddon' :: Text -> Text -> DescribeAddon

-- | Create a value of <a>DescribeAddon</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DescribeAddon'</a>,
--   <a>describeAddon_clusterName</a> - The name of the cluster.
--   
--   <a>$sel:addonName:DescribeAddon'</a>, <a>describeAddon_addonName</a> -
--   The name of the add-on. The name must match one of the names returned
--   by <a>ListAddons</a> .
newDescribeAddon :: Text -> Text -> DescribeAddon

-- | <i>See:</i> <a>newDescribeAddonResponse</a> smart constructor.
data DescribeAddonResponse
DescribeAddonResponse' :: Maybe Addon -> Int -> DescribeAddonResponse

-- | Create a value of <a>DescribeAddonResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addon:DescribeAddonResponse'</a>,
--   <a>describeAddonResponse_addon</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DescribeAddonResponse'</a>,
--   <a>describeAddonResponse_httpStatus</a> - The response's http status
--   code.
newDescribeAddonResponse :: Int -> DescribeAddonResponse

-- | <i>See:</i> <a>newListUpdates</a> smart constructor.
data ListUpdates
ListUpdates' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> Text -> ListUpdates

-- | Create a value of <a>ListUpdates</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonName:ListUpdates'</a>, <a>listUpdates_addonName</a> - The
--   names of the installed add-ons that have available updates.
--   
--   <a>$sel:nextToken:ListUpdates'</a>, <a>listUpdates_nextToken</a> - The
--   <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListUpdates</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   <a>$sel:nodegroupName:ListUpdates'</a>,
--   <a>listUpdates_nodegroupName</a> - The name of the Amazon EKS managed
--   node group to list updates for.
--   
--   <a>$sel:maxResults:ListUpdates'</a>, <a>listUpdates_maxResults</a> -
--   The maximum number of update results returned by <tt>ListUpdates</tt>
--   in paginated output. When you use this parameter, <tt>ListUpdates</tt>
--   returns only <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListUpdates</tt> request
--   with the returned <tt>nextToken</tt> value. This value can be between
--   1 and 100. If you don't use this parameter, <tt>ListUpdates</tt>
--   returns up to 100 results and a <tt>nextToken</tt> value if
--   applicable.
--   
--   <a>$sel:name:ListUpdates'</a>, <a>listUpdates_name</a> - The name of
--   the Amazon EKS cluster to list updates for.
newListUpdates :: Text -> ListUpdates

-- | <i>See:</i> <a>newListUpdatesResponse</a> smart constructor.
data ListUpdatesResponse
ListUpdatesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListUpdatesResponse

-- | Create a value of <a>ListUpdatesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListUpdates'</a>,
--   <a>listUpdatesResponse_nextToken</a> - The <tt>nextToken</tt> value to
--   include in a future <tt>ListUpdates</tt> request. When the results of
--   a <tt>ListUpdates</tt> request exceed <tt>maxResults</tt>, you can use
--   this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   <a>$sel:updateIds:ListUpdatesResponse'</a>,
--   <a>listUpdatesResponse_updateIds</a> - A list of all the updates for
--   the specified cluster and Region.
--   
--   <a>$sel:httpStatus:ListUpdatesResponse'</a>,
--   <a>listUpdatesResponse_httpStatus</a> - The response's http status
--   code.
newListUpdatesResponse :: Int -> ListUpdatesResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource to which to add tags.
--   Currently, the supported resources are Amazon EKS clusters and managed
--   node groups.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   add to the resource. A tag is an array of key-value pairs.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newListFargateProfiles</a> smart constructor.
data ListFargateProfiles
ListFargateProfiles' :: Maybe Text -> Maybe Natural -> Text -> ListFargateProfiles

-- | Create a value of <a>ListFargateProfiles</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFargateProfiles'</a>,
--   <a>listFargateProfiles_nextToken</a> - The <tt>nextToken</tt> value
--   returned from a previous paginated <tt>ListFargateProfiles</tt>
--   request where <tt>maxResults</tt> was used and the results exceeded
--   the value of that parameter. Pagination continues from the end of the
--   previous results that returned the <tt>nextToken</tt> value.
--   
--   <a>$sel:maxResults:ListFargateProfiles'</a>,
--   <a>listFargateProfiles_maxResults</a> - The maximum number of Fargate
--   profile results returned by <tt>ListFargateProfiles</tt> in paginated
--   output. When you use this parameter, <tt>ListFargateProfiles</tt>
--   returns only <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListFargateProfiles</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListFargateProfiles</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:clusterName:ListFargateProfiles'</a>,
--   <a>listFargateProfiles_clusterName</a> - The name of the Amazon EKS
--   cluster that you would like to list Fargate profiles in.
newListFargateProfiles :: Text -> ListFargateProfiles

-- | <i>See:</i> <a>newListFargateProfilesResponse</a> smart constructor.
data ListFargateProfilesResponse
ListFargateProfilesResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListFargateProfilesResponse

-- | Create a value of <a>ListFargateProfilesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListFargateProfiles'</a>,
--   <a>listFargateProfilesResponse_nextToken</a> - The <tt>nextToken</tt>
--   value to include in a future <tt>ListFargateProfiles</tt> request.
--   When the results of a <tt>ListFargateProfiles</tt> request exceed
--   <tt>maxResults</tt>, you can use this value to retrieve the next page
--   of results. This value is <tt>null</tt> when there are no more results
--   to return.
--   
--   <a>$sel:fargateProfileNames:ListFargateProfilesResponse'</a>,
--   <a>listFargateProfilesResponse_fargateProfileNames</a> - A list of all
--   of the Fargate profiles associated with the specified cluster.
--   
--   <a>$sel:httpStatus:ListFargateProfilesResponse'</a>,
--   <a>listFargateProfilesResponse_httpStatus</a> - The response's http
--   status code.
newListFargateProfilesResponse :: Int -> ListFargateProfilesResponse

-- | <i>See:</i> <a>newRegisterCluster</a> smart constructor.
data RegisterCluster
RegisterCluster' :: Maybe Text -> Text -> ConnectorConfigRequest -> RegisterCluster

-- | Create a value of <a>RegisterCluster</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:RegisterCluster'</a>,
--   <a>registerCluster_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:name:RegisterCluster'</a>, <a>registerCluster_name</a> -
--   Define a unique name for this cluster within your AWS account.
--   
--   <a>$sel:connectorConfig:RegisterCluster'</a>,
--   <a>registerCluster_connectorConfig</a> - The configuration settings
--   required to connect the Kubernetes cluster to the Amazon EKS control
--   plane.
newRegisterCluster :: Text -> ConnectorConfigRequest -> RegisterCluster

-- | <i>See:</i> <a>newRegisterClusterResponse</a> smart constructor.
data RegisterClusterResponse
RegisterClusterResponse' :: Maybe Cluster -> Int -> RegisterClusterResponse

-- | Create a value of <a>RegisterClusterResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cluster:RegisterClusterResponse'</a>,
--   <a>registerClusterResponse_cluster</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:RegisterClusterResponse'</a>,
--   <a>registerClusterResponse_httpStatus</a> - The response's http status
--   code.
newRegisterClusterResponse :: Int -> RegisterClusterResponse

-- | <i>See:</i> <a>newListClusters</a> smart constructor.
data ListClusters
ListClusters' :: Maybe [Text] -> Maybe Text -> Maybe Natural -> ListClusters

-- | Create a value of <a>ListClusters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:include:ListClusters'</a>, <a>listClusters_include</a> -
--   Indicates whether connected clusters are included in the returned
--   list. Default value is 'ALL'.
--   
--   <a>$sel:nextToken:ListClusters'</a>, <a>listClusters_nextToken</a> -
--   The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListClusters</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   This token should be treated as an opaque identifier that is used only
--   to retrieve the next items in a list and not for other programmatic
--   purposes.
--   
--   <a>$sel:maxResults:ListClusters'</a>, <a>listClusters_maxResults</a> -
--   The maximum number of cluster results returned by
--   <tt>ListClusters</tt> in paginated output. When you use this
--   parameter, <tt>ListClusters</tt> returns only <tt>maxResults</tt>
--   results in a single page along with a <tt>nextToken</tt> response
--   element. You can see the remaining results of the initial request by
--   sending another <tt>ListClusters</tt> request with the returned
--   <tt>nextToken</tt> value. This value can be between 1 and 100. If you
--   don't use this parameter, <tt>ListClusters</tt> returns up to 100
--   results and a <tt>nextToken</tt> value if applicable.
newListClusters :: ListClusters

-- | <i>See:</i> <a>newListClustersResponse</a> smart constructor.
data ListClustersResponse
ListClustersResponse' :: Maybe Text -> Maybe [Text] -> Int -> ListClustersResponse

-- | Create a value of <a>ListClustersResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListClusters'</a>,
--   <a>listClustersResponse_nextToken</a> - The <tt>nextToken</tt> value
--   to include in a future <tt>ListClusters</tt> request. When the results
--   of a <tt>ListClusters</tt> request exceed <tt>maxResults</tt>, you can
--   use this value to retrieve the next page of results. This value is
--   <tt>null</tt> when there are no more results to return.
--   
--   <a>$sel:clusters:ListClustersResponse'</a>,
--   <a>listClustersResponse_clusters</a> - A list of all of the clusters
--   for your account in the specified Region.
--   
--   <a>$sel:httpStatus:ListClustersResponse'</a>,
--   <a>listClustersResponse_httpStatus</a> - The response's http status
--   code.
newListClustersResponse :: Int -> ListClustersResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource from which to delete tags. Currently, the supported
--   resources are Amazon EKS clusters and managed node groups.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   keys of the tags to be removed.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newCreateNodegroup</a> smart constructor.
data CreateNodegroup
CreateNodegroup' :: Maybe CapacityTypes -> Maybe [Text] -> Maybe [Taint] -> Maybe RemoteAccessConfig -> Maybe Int -> Maybe Text -> Maybe NodegroupScalingConfig -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe (HashMap Text Text) -> Maybe AMITypes -> Maybe Text -> Maybe NodegroupUpdateConfig -> Maybe (HashMap Text Text) -> Text -> Text -> [Text] -> Text -> CreateNodegroup

-- | Create a value of <a>CreateNodegroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:capacityType:CreateNodegroup'</a>,
--   <a>createNodegroup_capacityType</a> - The capacity type for your node
--   group.
--   
--   <a>$sel:instanceTypes:CreateNodegroup'</a>,
--   <a>createNodegroup_instanceTypes</a> - Specify the instance types for
--   a node group. If you specify a GPU instance type, be sure to specify
--   <tt>AL2_x86_64_GPU</tt> with the <tt>amiType</tt> parameter. If you
--   specify <tt>launchTemplate</tt>, then you can specify zero or one
--   instance type in your launch template <i>or</i> you can specify 0-20
--   instance types for <tt>instanceTypes</tt>. If however, you specify an
--   instance type in your launch template <i>and</i> specify any
--   <tt>instanceTypes</tt>, the node group deployment will fail. If you
--   don't specify an instance type in a launch template or for
--   <tt>instanceTypes</tt>, then <tt>t3.medium</tt> is used, by default.
--   If you specify <tt>Spot</tt> for <tt>capacityType</tt>, then we
--   recommend specifying multiple values for <tt>instanceTypes</tt>. For
--   more information, see <a>Managed node group capacity types</a> and
--   <a>Launch template support</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:taints:CreateNodegroup'</a>, <a>createNodegroup_taints</a> -
--   The Kubernetes taints to be applied to the nodes in the node group.
--   
--   <a>$sel:remoteAccess:CreateNodegroup'</a>,
--   <a>createNodegroup_remoteAccess</a> - The remote access (SSH)
--   configuration to use with your node group. If you specify
--   <tt>launchTemplate</tt>, then don't specify <tt>remoteAccess</tt>, or
--   the node group deployment will fail. For more information about using
--   launch templates with Amazon EKS, see <a>Launch template support</a>
--   in the Amazon EKS User Guide.
--   
--   <a>$sel:diskSize:CreateNodegroup'</a>, <a>createNodegroup_diskSize</a>
--   - The root device disk size (in GiB) for your node group instances.
--   The default disk size is 20 GiB. If you specify
--   <tt>launchTemplate</tt>, then don't specify <tt>diskSize</tt>, or the
--   node group deployment will fail. For more information about using
--   launch templates with Amazon EKS, see <a>Launch template support</a>
--   in the Amazon EKS User Guide.
--   
--   <a>$sel:releaseVersion:CreateNodegroup'</a>,
--   <a>createNodegroup_releaseVersion</a> - The AMI version of the Amazon
--   EKS optimized AMI to use with your node group. By default, the latest
--   available AMI version for the node group's current Kubernetes version
--   is used. For more information, see <a>Amazon EKS optimized Amazon
--   Linux 2 AMI versions</a> in the <i>Amazon EKS User Guide</i>. If you
--   specify <tt>launchTemplate</tt>, and your launch template uses a
--   custom AMI, then don't specify <tt>releaseVersion</tt>, or the node
--   group deployment will fail. For more information about using launch
--   templates with Amazon EKS, see <a>Launch template support</a> in the
--   Amazon EKS User Guide.
--   
--   <a>$sel:scalingConfig:CreateNodegroup'</a>,
--   <a>createNodegroup_scalingConfig</a> - The scaling configuration
--   details for the Auto Scaling group that is created for your node
--   group.
--   
--   <a>$sel:version:CreateNodegroup'</a>, <a>createNodegroup_version</a> -
--   The Kubernetes version to use for your managed nodes. By default, the
--   Kubernetes version of the cluster is used, and this is the only
--   accepted specified value. If you specify <tt>launchTemplate</tt>, and
--   your launch template uses a custom AMI, then don't specify
--   <tt>version</tt>, or the node group deployment will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
--   
--   <a>$sel:launchTemplate:CreateNodegroup'</a>,
--   <a>createNodegroup_launchTemplate</a> - An object representing a node
--   group's launch template specification. If specified, then do not
--   specify <tt>instanceTypes</tt>, <tt>diskSize</tt>, or
--   <tt>remoteAccess</tt> and make sure that the launch template meets the
--   requirements in <tt>launchTemplateSpecification</tt>.
--   
--   <a>$sel:labels:CreateNodegroup'</a>, <a>createNodegroup_labels</a> -
--   The Kubernetes labels to be applied to the nodes in the node group
--   when they are created.
--   
--   <a>$sel:amiType:CreateNodegroup'</a>, <a>createNodegroup_amiType</a> -
--   The AMI type for your node group. GPU instance types should use the
--   <tt>AL2_x86_64_GPU</tt> AMI type. Non-GPU instances should use the
--   <tt>AL2_x86_64</tt> AMI type. Arm instances should use the
--   <tt>AL2_ARM_64</tt> AMI type. All types use the Amazon EKS optimized
--   Amazon Linux 2 AMI. If you specify <tt>launchTemplate</tt>, and your
--   launch template uses a custom AMI, then don't specify
--   <tt>amiType</tt>, or the node group deployment will fail. For more
--   information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
--   
--   <a>$sel:clientRequestToken:CreateNodegroup'</a>,
--   <a>createNodegroup_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:updateConfig:CreateNodegroup'</a>,
--   <a>createNodegroup_updateConfig</a> - The node group update
--   configuration.
--   
--   <a>$sel:tags:CreateNodegroup'</a>, <a>createNodegroup_tags</a> - The
--   metadata to apply to the node group to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define. Node group tags do not propagate to any other
--   resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
--   
--   <a>$sel:clusterName:CreateNodegroup'</a>,
--   <a>createNodegroup_clusterName</a> - The name of the cluster to create
--   the node group in.
--   
--   <a>$sel:nodegroupName:CreateNodegroup'</a>,
--   <a>createNodegroup_nodegroupName</a> - The unique name to give your
--   node group.
--   
--   <a>$sel:subnets:CreateNodegroup'</a>, <a>createNodegroup_subnets</a> -
--   The subnets to use for the Auto Scaling group that is created for your
--   node group. If you specify <tt>launchTemplate</tt>, then don't specify
--   <a>SubnetId</a> in your launch template, or the node group deployment
--   will fail. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
--   
--   <a>$sel:nodeRole:CreateNodegroup'</a>, <a>createNodegroup_nodeRole</a>
--   - The Amazon Resource Name (ARN) of the IAM role to associate with
--   your node group. The Amazon EKS worker node <tt>kubelet</tt> daemon
--   makes calls to Amazon Web Services APIs on your behalf. Nodes receive
--   permissions for these API calls through an IAM instance profile and
--   associated policies. Before you can launch nodes and register them
--   into a cluster, you must create an IAM role for those nodes to use
--   when they are launched. For more information, see <a>Amazon EKS node
--   IAM role</a> in the /<i>Amazon EKS User Guide</i>/ . If you specify
--   <tt>launchTemplate</tt>, then don't specify <a>IamInstanceProfile</a>
--   in your launch template, or the node group deployment will fail. For
--   more information about using launch templates with Amazon EKS, see
--   <a>Launch template support</a> in the Amazon EKS User Guide.
newCreateNodegroup :: Text -> Text -> Text -> CreateNodegroup

-- | <i>See:</i> <a>newCreateNodegroupResponse</a> smart constructor.
data CreateNodegroupResponse
CreateNodegroupResponse' :: Maybe Nodegroup -> Int -> CreateNodegroupResponse

-- | Create a value of <a>CreateNodegroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodegroup:CreateNodegroupResponse'</a>,
--   <a>createNodegroupResponse_nodegroup</a> - The full description of
--   your new node group.
--   
--   <a>$sel:httpStatus:CreateNodegroupResponse'</a>,
--   <a>createNodegroupResponse_httpStatus</a> - The response's http status
--   code.
newCreateNodegroupResponse :: Int -> CreateNodegroupResponse

-- | <i>See:</i> <a>newListNodegroups</a> smart constructor.
data ListNodegroups
ListNodegroups' :: Maybe Text -> Maybe Natural -> Text -> ListNodegroups

-- | Create a value of <a>ListNodegroups</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListNodegroups'</a>, <a>listNodegroups_nextToken</a>
--   - The <tt>nextToken</tt> value returned from a previous paginated
--   <tt>ListNodegroups</tt> request where <tt>maxResults</tt> was used and
--   the results exceeded the value of that parameter. Pagination continues
--   from the end of the previous results that returned the
--   <tt>nextToken</tt> value.
--   
--   <a>$sel:maxResults:ListNodegroups'</a>,
--   <a>listNodegroups_maxResults</a> - The maximum number of node group
--   results returned by <tt>ListNodegroups</tt> in paginated output. When
--   you use this parameter, <tt>ListNodegroups</tt> returns only
--   <tt>maxResults</tt> results in a single page along with a
--   <tt>nextToken</tt> response element. You can see the remaining results
--   of the initial request by sending another <tt>ListNodegroups</tt>
--   request with the returned <tt>nextToken</tt> value. This value can be
--   between 1 and 100. If you don't use this parameter,
--   <tt>ListNodegroups</tt> returns up to 100 results and a
--   <tt>nextToken</tt> value if applicable.
--   
--   <a>$sel:clusterName:ListNodegroups'</a>,
--   <a>listNodegroups_clusterName</a> - The name of the Amazon EKS cluster
--   that you would like to list node groups in.
newListNodegroups :: Text -> ListNodegroups

-- | <i>See:</i> <a>newListNodegroupsResponse</a> smart constructor.
data ListNodegroupsResponse
ListNodegroupsResponse' :: Maybe [Text] -> Maybe Text -> Int -> ListNodegroupsResponse

-- | Create a value of <a>ListNodegroupsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodegroups:ListNodegroupsResponse'</a>,
--   <a>listNodegroupsResponse_nodegroups</a> - A list of all of the node
--   groups associated with the specified cluster.
--   
--   <a>$sel:nextToken:ListNodegroups'</a>,
--   <a>listNodegroupsResponse_nextToken</a> - The <tt>nextToken</tt> value
--   to include in a future <tt>ListNodegroups</tt> request. When the
--   results of a <tt>ListNodegroups</tt> request exceed
--   <tt>maxResults</tt>, you can use this value to retrieve the next page
--   of results. This value is <tt>null</tt> when there are no more results
--   to return.
--   
--   <a>$sel:httpStatus:ListNodegroupsResponse'</a>,
--   <a>listNodegroupsResponse_httpStatus</a> - The response's http status
--   code.
newListNodegroupsResponse :: Int -> ListNodegroupsResponse

-- | <i>See:</i> <a>newDeleteNodegroup</a> smart constructor.
data DeleteNodegroup
DeleteNodegroup' :: Text -> Text -> DeleteNodegroup

-- | Create a value of <a>DeleteNodegroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterName:DeleteNodegroup'</a>,
--   <a>deleteNodegroup_clusterName</a> - The name of the Amazon EKS
--   cluster that is associated with your node group.
--   
--   <a>$sel:nodegroupName:DeleteNodegroup'</a>,
--   <a>deleteNodegroup_nodegroupName</a> - The name of the node group to
--   delete.
newDeleteNodegroup :: Text -> Text -> DeleteNodegroup

-- | <i>See:</i> <a>newDeleteNodegroupResponse</a> smart constructor.
data DeleteNodegroupResponse
DeleteNodegroupResponse' :: Maybe Nodegroup -> Int -> DeleteNodegroupResponse

-- | Create a value of <a>DeleteNodegroupResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nodegroup:DeleteNodegroupResponse'</a>,
--   <a>deleteNodegroupResponse_nodegroup</a> - The full description of
--   your deleted node group.
--   
--   <a>$sel:httpStatus:DeleteNodegroupResponse'</a>,
--   <a>deleteNodegroupResponse_httpStatus</a> - The response's http status
--   code.
newDeleteNodegroupResponse :: Int -> DeleteNodegroupResponse

-- | <i>See:</i> <a>newAssociateEncryptionConfig</a> smart constructor.
data AssociateEncryptionConfig
AssociateEncryptionConfig' :: Maybe Text -> Text -> [EncryptionConfig] -> AssociateEncryptionConfig

-- | Create a value of <a>AssociateEncryptionConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:AssociateEncryptionConfig'</a>,
--   <a>associateEncryptionConfig_clientRequestToken</a> - The client
--   request token you are using with the encryption configuration.
--   
--   <a>$sel:clusterName:AssociateEncryptionConfig'</a>,
--   <a>associateEncryptionConfig_clusterName</a> - The name of the cluster
--   that you are associating with encryption configuration.
--   
--   <a>$sel:encryptionConfig:AssociateEncryptionConfig'</a>,
--   <a>associateEncryptionConfig_encryptionConfig</a> - The configuration
--   you are using for encryption.
newAssociateEncryptionConfig :: Text -> AssociateEncryptionConfig

-- | <i>See:</i> <a>newAssociateEncryptionConfigResponse</a> smart
--   constructor.
data AssociateEncryptionConfigResponse
AssociateEncryptionConfigResponse' :: Maybe Update -> Int -> AssociateEncryptionConfigResponse

-- | Create a value of <a>AssociateEncryptionConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:AssociateEncryptionConfigResponse'</a>,
--   <a>associateEncryptionConfigResponse_update</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:AssociateEncryptionConfigResponse'</a>,
--   <a>associateEncryptionConfigResponse_httpStatus</a> - The response's
--   http status code.
newAssociateEncryptionConfigResponse :: Int -> AssociateEncryptionConfigResponse

-- | <i>See:</i> <a>newAssociateIdentityProviderConfig</a> smart
--   constructor.
data AssociateIdentityProviderConfig
AssociateIdentityProviderConfig' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> OidcIdentityProviderConfigRequest -> AssociateIdentityProviderConfig

-- | Create a value of <a>AssociateIdentityProviderConfig</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clientRequestToken:AssociateIdentityProviderConfig'</a>,
--   <a>associateIdentityProviderConfig_clientRequestToken</a> - Unique,
--   case-sensitive identifier that you provide to ensure the idempotency
--   of the request.
--   
--   <a>$sel:tags:AssociateIdentityProviderConfig'</a>,
--   <a>associateIdentityProviderConfig_tags</a> - The metadata to apply to
--   the configuration to assist with categorization and organization. Each
--   tag consists of a key and an optional value, both of which you define.
--   
--   <a>$sel:clusterName:AssociateIdentityProviderConfig'</a>,
--   <a>associateIdentityProviderConfig_clusterName</a> - The name of the
--   cluster to associate the configuration to.
--   
--   <a>$sel:oidc:AssociateIdentityProviderConfig'</a>,
--   <a>associateIdentityProviderConfig_oidc</a> - An object that
--   represents an OpenID Connect (OIDC) identity provider configuration.
newAssociateIdentityProviderConfig :: Text -> OidcIdentityProviderConfigRequest -> AssociateIdentityProviderConfig

-- | <i>See:</i> <a>newAssociateIdentityProviderConfigResponse</a> smart
--   constructor.
data AssociateIdentityProviderConfigResponse
AssociateIdentityProviderConfigResponse' :: Maybe Update -> Maybe (HashMap Text Text) -> Int -> AssociateIdentityProviderConfigResponse

-- | Create a value of <a>AssociateIdentityProviderConfigResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:AssociateIdentityProviderConfigResponse'</a>,
--   <a>associateIdentityProviderConfigResponse_update</a> - Undocumented
--   member.
--   
--   <a>$sel:tags:AssociateIdentityProviderConfig'</a>,
--   <a>associateIdentityProviderConfigResponse_tags</a> - The tags for the
--   resource.
--   
--   <a>$sel:httpStatus:AssociateIdentityProviderConfigResponse'</a>,
--   <a>associateIdentityProviderConfigResponse_httpStatus</a> - The
--   response's http status code.
newAssociateIdentityProviderConfigResponse :: Int -> AssociateIdentityProviderConfigResponse

-- | <i>See:</i> <a>newDeleteAddon</a> smart constructor.
data DeleteAddon
DeleteAddon' :: Maybe Bool -> Text -> Text -> DeleteAddon

-- | Create a value of <a>DeleteAddon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:preserve:DeleteAddon'</a>, <a>deleteAddon_preserve</a> -
--   Specifying this option preserves the add-on software on your cluster
--   but Amazon EKS stops managing any settings for the add-on. If an IAM
--   account is associated with the add-on, it is not removed.
--   
--   <a>$sel:clusterName:DeleteAddon'</a>, <a>deleteAddon_clusterName</a> -
--   The name of the cluster to delete the add-on from.
--   
--   <a>$sel:addonName:DeleteAddon'</a>, <a>deleteAddon_addonName</a> - The
--   name of the add-on. The name must match one of the names returned by
--   <a>ListAddons</a> .
newDeleteAddon :: Text -> Text -> DeleteAddon

-- | <i>See:</i> <a>newDeleteAddonResponse</a> smart constructor.
data DeleteAddonResponse
DeleteAddonResponse' :: Maybe Addon -> Int -> DeleteAddonResponse

-- | Create a value of <a>DeleteAddonResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addon:DeleteAddonResponse'</a>,
--   <a>deleteAddonResponse_addon</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:DeleteAddonResponse'</a>,
--   <a>deleteAddonResponse_httpStatus</a> - The response's http status
--   code.
newDeleteAddonResponse :: Int -> DeleteAddonResponse

-- | <i>See:</i> <a>newUpdateAddon</a> smart constructor.
data UpdateAddon
UpdateAddon' :: Maybe Text -> Maybe Text -> Maybe ResolveConflicts -> Maybe Text -> Text -> Text -> UpdateAddon

-- | Create a value of <a>UpdateAddon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonVersion:UpdateAddon'</a>, <a>updateAddon_addonVersion</a>
--   - The version of the add-on. The version must match one of the
--   versions returned by <a>DescribeAddonVersions</a> .
--   
--   <a>$sel:serviceAccountRoleArn:UpdateAddon'</a>,
--   <a>updateAddon_serviceAccountRoleArn</a> - The Amazon Resource Name
--   (ARN) of an existing IAM role to bind to the add-on's service account.
--   The role must be assigned the IAM permissions required by the add-on.
--   If you don't specify an existing IAM role, then the add-on uses the
--   permissions assigned to the node IAM role. For more information, see
--   <a>Amazon EKS node IAM role</a> in the <i>Amazon EKS User Guide</i>.
--   
--   To specify an existing IAM role, you must have an IAM OpenID Connect
--   (OIDC) provider created for your cluster. For more information, see
--   <a>Enabling IAM roles for service accounts on your cluster</a> in the
--   <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:resolveConflicts:UpdateAddon'</a>,
--   <a>updateAddon_resolveConflicts</a> - How to resolve parameter value
--   conflicts when applying the new version of the add-on to the cluster.
--   
--   <a>$sel:clientRequestToken:UpdateAddon'</a>,
--   <a>updateAddon_clientRequestToken</a> - Unique, case-sensitive
--   identifier that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:clusterName:UpdateAddon'</a>, <a>updateAddon_clusterName</a> -
--   The name of the cluster.
--   
--   <a>$sel:addonName:UpdateAddon'</a>, <a>updateAddon_addonName</a> - The
--   name of the add-on. The name must match one of the names returned by
--   <a>ListAddons</a> .
newUpdateAddon :: Text -> Text -> UpdateAddon

-- | <i>See:</i> <a>newUpdateAddonResponse</a> smart constructor.
data UpdateAddonResponse
UpdateAddonResponse' :: Maybe Update -> Int -> UpdateAddonResponse

-- | Create a value of <a>UpdateAddonResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:update:UpdateAddonResponse'</a>,
--   <a>updateAddonResponse_update</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:UpdateAddonResponse'</a>,
--   <a>updateAddonResponse_httpStatus</a> - The response's http status
--   code.
newUpdateAddonResponse :: Int -> UpdateAddonResponse
newtype AMITypes
AMITypes' :: Text -> AMITypes
[fromAMITypes] :: AMITypes -> Text
pattern AMITypes_AL2_ARM_64 :: AMITypes
pattern AMITypes_AL2_x86_64 :: AMITypes
pattern AMITypes_AL2_x86_64_GPU :: AMITypes
pattern AMITypes_CUSTOM :: AMITypes
newtype AddonIssueCode
AddonIssueCode' :: Text -> AddonIssueCode
[fromAddonIssueCode] :: AddonIssueCode -> Text
pattern AddonIssueCode_AccessDenied :: AddonIssueCode
pattern AddonIssueCode_AdmissionRequestDenied :: AddonIssueCode
pattern AddonIssueCode_ClusterUnreachable :: AddonIssueCode
pattern AddonIssueCode_ConfigurationConflict :: AddonIssueCode
pattern AddonIssueCode_InsufficientNumberOfReplicas :: AddonIssueCode
pattern AddonIssueCode_InternalFailure :: AddonIssueCode
pattern AddonIssueCode_K8sResourceNotFound :: AddonIssueCode
pattern AddonIssueCode_UnsupportedAddonModification :: AddonIssueCode
newtype AddonStatus
AddonStatus' :: Text -> AddonStatus
[fromAddonStatus] :: AddonStatus -> Text
pattern AddonStatus_ACTIVE :: AddonStatus
pattern AddonStatus_CREATE_FAILED :: AddonStatus
pattern AddonStatus_CREATING :: AddonStatus
pattern AddonStatus_DEGRADED :: AddonStatus
pattern AddonStatus_DELETE_FAILED :: AddonStatus
pattern AddonStatus_DELETING :: AddonStatus
pattern AddonStatus_UPDATING :: AddonStatus
newtype CapacityTypes
CapacityTypes' :: Text -> CapacityTypes
[fromCapacityTypes] :: CapacityTypes -> Text
pattern CapacityTypes_ON_DEMAND :: CapacityTypes
pattern CapacityTypes_SPOT :: CapacityTypes
newtype ClusterStatus
ClusterStatus' :: Text -> ClusterStatus
[fromClusterStatus] :: ClusterStatus -> Text
pattern ClusterStatus_ACTIVE :: ClusterStatus
pattern ClusterStatus_CREATING :: ClusterStatus
pattern ClusterStatus_DELETING :: ClusterStatus
pattern ClusterStatus_FAILED :: ClusterStatus
pattern ClusterStatus_PENDING :: ClusterStatus
pattern ClusterStatus_UPDATING :: ClusterStatus
newtype ConfigStatus
ConfigStatus' :: Text -> ConfigStatus
[fromConfigStatus] :: ConfigStatus -> Text
pattern ConfigStatus_ACTIVE :: ConfigStatus
pattern ConfigStatus_CREATING :: ConfigStatus
pattern ConfigStatus_DELETING :: ConfigStatus
newtype ConnectorConfigProvider
ConnectorConfigProvider' :: Text -> ConnectorConfigProvider
[fromConnectorConfigProvider] :: ConnectorConfigProvider -> Text
pattern ConnectorConfigProvider_AKS :: ConnectorConfigProvider
pattern ConnectorConfigProvider_ANTHOS :: ConnectorConfigProvider
pattern ConnectorConfigProvider_EC2 :: ConnectorConfigProvider
pattern ConnectorConfigProvider_EKS_ANYWHERE :: ConnectorConfigProvider
pattern ConnectorConfigProvider_GKE :: ConnectorConfigProvider
pattern ConnectorConfigProvider_OPENSHIFT :: ConnectorConfigProvider
pattern ConnectorConfigProvider_OTHER :: ConnectorConfigProvider
pattern ConnectorConfigProvider_RANCHER :: ConnectorConfigProvider
pattern ConnectorConfigProvider_TANZU :: ConnectorConfigProvider
newtype EKSErrorCode
EKSErrorCode' :: Text -> EKSErrorCode
[fromEKSErrorCode] :: EKSErrorCode -> Text
pattern EKSErrorCode_AccessDenied :: EKSErrorCode
pattern EKSErrorCode_AdmissionRequestDenied :: EKSErrorCode
pattern EKSErrorCode_ClusterUnreachable :: EKSErrorCode
pattern EKSErrorCode_ConfigurationConflict :: EKSErrorCode
pattern EKSErrorCode_EniLimitReached :: EKSErrorCode
pattern EKSErrorCode_InsufficientFreeAddresses :: EKSErrorCode
pattern EKSErrorCode_InsufficientNumberOfReplicas :: EKSErrorCode
pattern EKSErrorCode_IpNotAvailable :: EKSErrorCode
pattern EKSErrorCode_K8sResourceNotFound :: EKSErrorCode
pattern EKSErrorCode_NodeCreationFailure :: EKSErrorCode
pattern EKSErrorCode_OperationNotPermitted :: EKSErrorCode
pattern EKSErrorCode_PodEvictionFailure :: EKSErrorCode
pattern EKSErrorCode_SecurityGroupNotFound :: EKSErrorCode
pattern EKSErrorCode_SubnetNotFound :: EKSErrorCode
pattern EKSErrorCode_Unknown :: EKSErrorCode
pattern EKSErrorCode_UnsupportedAddonModification :: EKSErrorCode
pattern EKSErrorCode_VpcIdNotFound :: EKSErrorCode
newtype FargateProfileStatus
FargateProfileStatus' :: Text -> FargateProfileStatus
[fromFargateProfileStatus] :: FargateProfileStatus -> Text
pattern FargateProfileStatus_ACTIVE :: FargateProfileStatus
pattern FargateProfileStatus_CREATE_FAILED :: FargateProfileStatus
pattern FargateProfileStatus_CREATING :: FargateProfileStatus
pattern FargateProfileStatus_DELETE_FAILED :: FargateProfileStatus
pattern FargateProfileStatus_DELETING :: FargateProfileStatus
newtype LogType
LogType' :: Text -> LogType
[fromLogType] :: LogType -> Text
pattern LogType_Api :: LogType
pattern LogType_Audit :: LogType
pattern LogType_Authenticator :: LogType
pattern LogType_ControllerManager :: LogType
pattern LogType_Scheduler :: LogType
newtype NodegroupIssueCode
NodegroupIssueCode' :: Text -> NodegroupIssueCode
[fromNodegroupIssueCode] :: NodegroupIssueCode -> Text
pattern NodegroupIssueCode_AccessDenied :: NodegroupIssueCode
pattern NodegroupIssueCode_AsgInstanceLaunchFailures :: NodegroupIssueCode
pattern NodegroupIssueCode_AutoScalingGroupInvalidConfiguration :: NodegroupIssueCode
pattern NodegroupIssueCode_AutoScalingGroupNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_ClusterUnreachable :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2LaunchTemplateNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2LaunchTemplateVersionMismatch :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SecurityGroupDeletionFailure :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SecurityGroupNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SubnetInvalidConfiguration :: NodegroupIssueCode
pattern NodegroupIssueCode_Ec2SubnetNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_IamInstanceProfileNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_IamLimitExceeded :: NodegroupIssueCode
pattern NodegroupIssueCode_IamNodeRoleNotFound :: NodegroupIssueCode
pattern NodegroupIssueCode_InstanceLimitExceeded :: NodegroupIssueCode
pattern NodegroupIssueCode_InsufficientFreeAddresses :: NodegroupIssueCode
pattern NodegroupIssueCode_InternalFailure :: NodegroupIssueCode
pattern NodegroupIssueCode_NodeCreationFailure :: NodegroupIssueCode
newtype NodegroupStatus
NodegroupStatus' :: Text -> NodegroupStatus
[fromNodegroupStatus] :: NodegroupStatus -> Text
pattern NodegroupStatus_ACTIVE :: NodegroupStatus
pattern NodegroupStatus_CREATE_FAILED :: NodegroupStatus
pattern NodegroupStatus_CREATING :: NodegroupStatus
pattern NodegroupStatus_DEGRADED :: NodegroupStatus
pattern NodegroupStatus_DELETE_FAILED :: NodegroupStatus
pattern NodegroupStatus_DELETING :: NodegroupStatus
pattern NodegroupStatus_UPDATING :: NodegroupStatus
newtype ResolveConflicts
ResolveConflicts' :: Text -> ResolveConflicts
[fromResolveConflicts] :: ResolveConflicts -> Text
pattern ResolveConflicts_NONE :: ResolveConflicts
pattern ResolveConflicts_OVERWRITE :: ResolveConflicts
newtype TaintEffect
TaintEffect' :: Text -> TaintEffect
[fromTaintEffect] :: TaintEffect -> Text
pattern TaintEffect_NO_EXECUTE :: TaintEffect
pattern TaintEffect_NO_SCHEDULE :: TaintEffect
pattern TaintEffect_PREFER_NO_SCHEDULE :: TaintEffect
newtype UpdateParamType
UpdateParamType' :: Text -> UpdateParamType
[fromUpdateParamType] :: UpdateParamType -> Text
pattern UpdateParamType_AddonVersion :: UpdateParamType
pattern UpdateParamType_ClusterLogging :: UpdateParamType
pattern UpdateParamType_DesiredSize :: UpdateParamType
pattern UpdateParamType_EncryptionConfig :: UpdateParamType
pattern UpdateParamType_EndpointPrivateAccess :: UpdateParamType
pattern UpdateParamType_EndpointPublicAccess :: UpdateParamType
pattern UpdateParamType_IdentityProviderConfig :: UpdateParamType
pattern UpdateParamType_LabelsToAdd :: UpdateParamType
pattern UpdateParamType_LabelsToRemove :: UpdateParamType
pattern UpdateParamType_LaunchTemplateName :: UpdateParamType
pattern UpdateParamType_LaunchTemplateVersion :: UpdateParamType
pattern UpdateParamType_MaxSize :: UpdateParamType
pattern UpdateParamType_MaxUnavailable :: UpdateParamType
pattern UpdateParamType_MaxUnavailablePercentage :: UpdateParamType
pattern UpdateParamType_MinSize :: UpdateParamType
pattern UpdateParamType_PlatformVersion :: UpdateParamType
pattern UpdateParamType_PublicAccessCidrs :: UpdateParamType
pattern UpdateParamType_ReleaseVersion :: UpdateParamType
pattern UpdateParamType_ResolveConflicts :: UpdateParamType
pattern UpdateParamType_ServiceAccountRoleArn :: UpdateParamType
pattern UpdateParamType_TaintsToAdd :: UpdateParamType
pattern UpdateParamType_TaintsToRemove :: UpdateParamType
pattern UpdateParamType_Version :: UpdateParamType
newtype UpdateStatus
UpdateStatus' :: Text -> UpdateStatus
[fromUpdateStatus] :: UpdateStatus -> Text
pattern UpdateStatus_Cancelled :: UpdateStatus
pattern UpdateStatus_Failed :: UpdateStatus
pattern UpdateStatus_InProgress :: UpdateStatus
pattern UpdateStatus_Successful :: UpdateStatus
newtype UpdateType
UpdateType' :: Text -> UpdateType
[fromUpdateType] :: UpdateType -> Text
pattern UpdateType_AddonUpdate :: UpdateType
pattern UpdateType_AssociateEncryptionConfig :: UpdateType
pattern UpdateType_AssociateIdentityProviderConfig :: UpdateType
pattern UpdateType_ConfigUpdate :: UpdateType
pattern UpdateType_DisassociateIdentityProviderConfig :: UpdateType
pattern UpdateType_EndpointAccessUpdate :: UpdateType
pattern UpdateType_LoggingUpdate :: UpdateType
pattern UpdateType_VersionUpdate :: UpdateType

-- | An Amazon EKS add-on.
--   
--   <i>See:</i> <a>newAddon</a> smart constructor.
data Addon
Addon' :: Maybe POSIX -> Maybe AddonStatus -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe AddonHealth -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Addon

-- | Create a value of <a>Addon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modifiedAt:Addon'</a>, <a>addon_modifiedAt</a> - The date and
--   time that the add-on was last modified.
--   
--   <a>$sel:status:Addon'</a>, <a>addon_status</a> - The status of the
--   add-on.
--   
--   <a>$sel:addonName:Addon'</a>, <a>addon_addonName</a> - The name of the
--   add-on.
--   
--   <a>$sel:addonVersion:Addon'</a>, <a>addon_addonVersion</a> - The
--   version of the add-on.
--   
--   <a>$sel:createdAt:Addon'</a>, <a>addon_createdAt</a> - The date and
--   time that the add-on was created.
--   
--   <a>$sel:serviceAccountRoleArn:Addon'</a>,
--   <a>addon_serviceAccountRoleArn</a> - The Amazon Resource Name (ARN) of
--   the IAM role that is bound to the Kubernetes service account used by
--   the add-on.
--   
--   <a>$sel:health:Addon'</a>, <a>addon_health</a> - An object that
--   represents the health of the add-on.
--   
--   <a>$sel:clusterName:Addon'</a>, <a>addon_clusterName</a> - The name of
--   the cluster.
--   
--   <a>$sel:addonArn:Addon'</a>, <a>addon_addonArn</a> - The Amazon
--   Resource Name (ARN) of the add-on.
--   
--   <a>$sel:tags:Addon'</a>, <a>addon_tags</a> - The metadata that you
--   apply to the add-on to assist with categorization and organization.
--   Each tag consists of a key and an optional value, both of which you
--   define. Add-on tags do not propagate to any other resources associated
--   with the cluster.
newAddon :: Addon

-- | The health of the add-on.
--   
--   <i>See:</i> <a>newAddonHealth</a> smart constructor.
data AddonHealth
AddonHealth' :: Maybe [AddonIssue] -> AddonHealth

-- | Create a value of <a>AddonHealth</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:issues:AddonHealth'</a>, <a>addonHealth_issues</a> - An object
--   that represents the add-on's health issues.
newAddonHealth :: AddonHealth

-- | Information about an add-on.
--   
--   <i>See:</i> <a>newAddonInfo</a> smart constructor.
data AddonInfo
AddonInfo' :: Maybe Text -> Maybe Text -> Maybe [AddonVersionInfo] -> AddonInfo

-- | Create a value of <a>AddonInfo</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonName:AddonInfo'</a>, <a>addonInfo_addonName</a> - The
--   name of the add-on.
--   
--   <a>$sel:type':AddonInfo'</a>, <a>addonInfo_type</a> - The type of the
--   add-on.
--   
--   <a>$sel:addonVersions:AddonInfo'</a>, <a>addonInfo_addonVersions</a> -
--   An object that represents information about available add-on versions
--   and compatible Kubernetes versions.
newAddonInfo :: AddonInfo

-- | An issue related to an add-on.
--   
--   <i>See:</i> <a>newAddonIssue</a> smart constructor.
data AddonIssue
AddonIssue' :: Maybe [Text] -> Maybe AddonIssueCode -> Maybe Text -> AddonIssue

-- | Create a value of <a>AddonIssue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:AddonIssue'</a>, <a>addonIssue_resourceIds</a> -
--   The resource IDs of the issue.
--   
--   <a>$sel:code:AddonIssue'</a>, <a>addonIssue_code</a> - A code that
--   describes the type of issue.
--   
--   <a>$sel:message:AddonIssue'</a>, <a>addonIssue_message</a> - A message
--   that provides details about the issue and what might cause it.
newAddonIssue :: AddonIssue

-- | Information about an add-on version.
--   
--   <i>See:</i> <a>newAddonVersionInfo</a> smart constructor.
data AddonVersionInfo
AddonVersionInfo' :: Maybe Text -> Maybe [Text] -> Maybe [Compatibility] -> AddonVersionInfo

-- | Create a value of <a>AddonVersionInfo</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addonVersion:AddonVersionInfo'</a>,
--   <a>addonVersionInfo_addonVersion</a> - The version of the add-on.
--   
--   <a>$sel:architecture:AddonVersionInfo'</a>,
--   <a>addonVersionInfo_architecture</a> - The architectures that the
--   version supports.
--   
--   <a>$sel:compatibilities:AddonVersionInfo'</a>,
--   <a>addonVersionInfo_compatibilities</a> - An object that represents
--   the compatibilities of a version.
newAddonVersionInfo :: AddonVersionInfo

-- | An Auto Scaling group that is associated with an Amazon EKS managed
--   node group.
--   
--   <i>See:</i> <a>newAutoScalingGroup</a> smart constructor.
data AutoScalingGroup
AutoScalingGroup' :: Maybe Text -> AutoScalingGroup

-- | Create a value of <a>AutoScalingGroup</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:AutoScalingGroup'</a>, <a>autoScalingGroup_name</a> - The
--   name of the Auto Scaling group associated with an Amazon EKS managed
--   node group.
newAutoScalingGroup :: AutoScalingGroup

-- | An object representing the <tt>certificate-authority-data</tt> for
--   your cluster.
--   
--   <i>See:</i> <a>newCertificate</a> smart constructor.
data Certificate
Certificate' :: Maybe Text -> Certificate

-- | Create a value of <a>Certificate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':Certificate'</a>, <a>certificate_data</a> - The
--   Base64-encoded certificate data required to communicate with your
--   cluster. Add this to the <tt>certificate-authority-data</tt> section
--   of the <tt>kubeconfig</tt> file for your cluster.
newCertificate :: Certificate

-- | An object representing an Amazon EKS cluster.
--   
--   <i>See:</i> <a>newCluster</a> smart constructor.
data Cluster
Cluster' :: Maybe ClusterStatus -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe KubernetesNetworkConfigResponse -> Maybe ConnectorConfigResponse -> Maybe Certificate -> Maybe Text -> Maybe Text -> Maybe [EncryptionConfig] -> Maybe Text -> Maybe Text -> Maybe Logging -> Maybe Identity -> Maybe VpcConfigResponse -> Maybe (HashMap Text Text) -> Maybe Text -> Cluster

-- | Create a value of <a>Cluster</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Cluster'</a>, <a>cluster_status</a> - The current
--   status of the cluster.
--   
--   <a>$sel:arn:Cluster'</a>, <a>cluster_arn</a> - The Amazon Resource
--   Name (ARN) of the cluster.
--   
--   <a>$sel:createdAt:Cluster'</a>, <a>cluster_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the cluster was created.
--   
--   <a>$sel:platformVersion:Cluster'</a>, <a>cluster_platformVersion</a> -
--   The platform version of your Amazon EKS cluster. For more information,
--   see <a>Platform Versions</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:kubernetesNetworkConfig:Cluster'</a>,
--   <a>cluster_kubernetesNetworkConfig</a> - The Kubernetes network
--   configuration for the cluster.
--   
--   <a>$sel:connectorConfig:Cluster'</a>, <a>cluster_connectorConfig</a> -
--   The configuration used to connect to a cluster for registration.
--   
--   <a>$sel:certificateAuthority:Cluster'</a>,
--   <a>cluster_certificateAuthority</a> - The
--   <tt>certificate-authority-data</tt> for your cluster.
--   
--   <a>$sel:name:Cluster'</a>, <a>cluster_name</a> - The name of the
--   cluster.
--   
--   <a>$sel:version:Cluster'</a>, <a>cluster_version</a> - The Kubernetes
--   server version for the cluster.
--   
--   <a>$sel:encryptionConfig:Cluster'</a>, <a>cluster_encryptionConfig</a>
--   - The encryption configuration for the cluster.
--   
--   <a>$sel:endpoint:Cluster'</a>, <a>cluster_endpoint</a> - The endpoint
--   for your Kubernetes API server.
--   
--   <a>$sel:clientRequestToken:Cluster'</a>,
--   <a>cluster_clientRequestToken</a> - Unique, case-sensitive identifier
--   that you provide to ensure the idempotency of the request.
--   
--   <a>$sel:logging:Cluster'</a>, <a>cluster_logging</a> - The logging
--   configuration for your cluster.
--   
--   <a>$sel:identity:Cluster'</a>, <a>cluster_identity</a> - The identity
--   provider information for the cluster.
--   
--   <a>$sel:resourcesVpcConfig:Cluster'</a>,
--   <a>cluster_resourcesVpcConfig</a> - The VPC configuration used by the
--   cluster control plane. Amazon EKS VPC resources have specific
--   requirements to work properly with Kubernetes. For more information,
--   see <a>Cluster VPC Considerations</a> and <a>Cluster Security Group
--   Considerations</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:tags:Cluster'</a>, <a>cluster_tags</a> - The metadata that you
--   apply to the cluster to assist with categorization and organization.
--   Each tag consists of a key and an optional value, both of which you
--   define. Cluster tags do not propagate to any other resources
--   associated with the cluster.
--   
--   <a>$sel:roleArn:Cluster'</a>, <a>cluster_roleArn</a> - The Amazon
--   Resource Name (ARN) of the IAM role that provides permissions for the
--   Kubernetes control plane to make calls to Amazon Web Services API
--   operations on your behalf.
newCluster :: Cluster

-- | Compatibility information.
--   
--   <i>See:</i> <a>newCompatibility</a> smart constructor.
data Compatibility
Compatibility' :: Maybe Bool -> Maybe Text -> Maybe [Text] -> Compatibility

-- | Create a value of <a>Compatibility</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultVersion:Compatibility'</a>,
--   <a>compatibility_defaultVersion</a> - The supported default version.
--   
--   <a>$sel:clusterVersion:Compatibility'</a>,
--   <a>compatibility_clusterVersion</a> - The supported Kubernetes version
--   of the cluster.
--   
--   <a>$sel:platformVersions:Compatibility'</a>,
--   <a>compatibility_platformVersions</a> - The supported compute
--   platform.
newCompatibility :: Compatibility

-- | The configuration sent to a cluster for configuration.
--   
--   <i>See:</i> <a>newConnectorConfigRequest</a> smart constructor.
data ConnectorConfigRequest
ConnectorConfigRequest' :: Text -> ConnectorConfigProvider -> ConnectorConfigRequest

-- | Create a value of <a>ConnectorConfigRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleArn:ConnectorConfigRequest'</a>,
--   <a>connectorConfigRequest_roleArn</a> - The Amazon Resource Name (ARN)
--   of the role that is authorized to request the connector configuration.
--   
--   <a>$sel:provider:ConnectorConfigRequest'</a>,
--   <a>connectorConfigRequest_provider</a> - The cloud provider for the
--   target cluster to connect.
newConnectorConfigRequest :: Text -> ConnectorConfigProvider -> ConnectorConfigRequest

-- | The full description of your connected cluster.
--   
--   <i>See:</i> <a>newConnectorConfigResponse</a> smart constructor.
data ConnectorConfigResponse
ConnectorConfigResponse' :: Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> ConnectorConfigResponse

-- | Create a value of <a>ConnectorConfigResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:activationCode:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_activationCode</a> - A unique code
--   associated with the cluster for registration purposes.
--   
--   <a>$sel:activationId:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_activationId</a> - A unique ID associated
--   with the cluster for registration purposes.
--   
--   <a>$sel:activationExpiry:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_activationExpiry</a> - The expiration time
--   of the connected cluster. The cluster's YAML file must be applied
--   through the native provider.
--   
--   <a>$sel:provider:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_provider</a> - The cluster's cloud service
--   provider.
--   
--   <a>$sel:roleArn:ConnectorConfigResponse'</a>,
--   <a>connectorConfigResponse_roleArn</a> - The Amazon Resource Name
--   (ARN) of the role that is used by the EKS connector to communicate
--   with AWS services from the connected Kubernetes cluster.
newConnectorConfigResponse :: ConnectorConfigResponse

-- | The encryption configuration for the cluster.
--   
--   <i>See:</i> <a>newEncryptionConfig</a> smart constructor.
data EncryptionConfig
EncryptionConfig' :: Maybe [Text] -> Maybe Provider -> EncryptionConfig

-- | Create a value of <a>EncryptionConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resources:EncryptionConfig'</a>,
--   <a>encryptionConfig_resources</a> - Specifies the resources to be
--   encrypted. The only supported value is "secrets".
--   
--   <a>$sel:provider:EncryptionConfig'</a>,
--   <a>encryptionConfig_provider</a> - Key Management Service (KMS) key.
--   Either the ARN or the alias can be used.
newEncryptionConfig :: EncryptionConfig

-- | An object representing an error when an asynchronous operation fails.
--   
--   <i>See:</i> <a>newErrorDetail</a> smart constructor.
data ErrorDetail
ErrorDetail' :: Maybe [Text] -> Maybe EKSErrorCode -> Maybe Text -> ErrorDetail

-- | Create a value of <a>ErrorDetail</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:ErrorDetail'</a>, <a>errorDetail_resourceIds</a> -
--   An optional field that contains the resource IDs associated with the
--   error.
--   
--   <a>$sel:errorCode:ErrorDetail'</a>, <a>errorDetail_errorCode</a> - A
--   brief description of the error.
--   
--   <ul>
--   <li><b>SubnetNotFound</b>: We couldn't find one of the subnets
--   associated with the cluster.</li>
--   <li><b>SecurityGroupNotFound</b>: We couldn't find one of the security
--   groups associated with the cluster.</li>
--   <li><b>EniLimitReached</b>: You have reached the elastic network
--   interface limit for your account.</li>
--   <li><b>IpNotAvailable</b>: A subnet associated with the cluster
--   doesn't have any free IP addresses.</li>
--   <li><b>AccessDenied</b>: You don't have permissions to perform the
--   specified operation.</li>
--   <li><b>OperationNotPermitted</b>: The service role associated with the
--   cluster doesn't have the required access permissions for Amazon
--   EKS.</li>
--   <li><b>VpcIdNotFound</b>: We couldn't find the VPC associated with the
--   cluster.</li>
--   </ul>
--   
--   <a>$sel:errorMessage:ErrorDetail'</a>, <a>errorDetail_errorMessage</a>
--   - A more complete description of the error.
newErrorDetail :: ErrorDetail

-- | An object representing an Fargate profile.
--   
--   <i>See:</i> <a>newFargateProfile</a> smart constructor.
data FargateProfile
FargateProfile' :: Maybe Text -> Maybe FargateProfileStatus -> Maybe POSIX -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [FargateProfileSelector] -> Maybe (HashMap Text Text) -> FargateProfile

-- | Create a value of <a>FargateProfile</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fargateProfileArn:FargateProfile'</a>,
--   <a>fargateProfile_fargateProfileArn</a> - The full Amazon Resource
--   Name (ARN) of the Fargate profile.
--   
--   <a>$sel:status:FargateProfile'</a>, <a>fargateProfile_status</a> - The
--   current status of the Fargate profile.
--   
--   <a>$sel:createdAt:FargateProfile'</a>, <a>fargateProfile_createdAt</a>
--   - The Unix epoch timestamp in seconds for when the Fargate profile was
--   created.
--   
--   <a>$sel:subnets:FargateProfile'</a>, <a>fargateProfile_subnets</a> -
--   The IDs of subnets to launch pods into.
--   
--   <a>$sel:clusterName:FargateProfile'</a>,
--   <a>fargateProfile_clusterName</a> - The name of the Amazon EKS cluster
--   that the Fargate profile belongs to.
--   
--   <a>$sel:podExecutionRoleArn:FargateProfile'</a>,
--   <a>fargateProfile_podExecutionRoleArn</a> - The Amazon Resource Name
--   (ARN) of the pod execution role to use for pods that match the
--   selectors in the Fargate profile. For more information, see <a>Pod
--   Execution Role</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:fargateProfileName:FargateProfile'</a>,
--   <a>fargateProfile_fargateProfileName</a> - The name of the Fargate
--   profile.
--   
--   <a>$sel:selectors:FargateProfile'</a>, <a>fargateProfile_selectors</a>
--   - The selectors to match for pods to use this Fargate profile.
--   
--   <a>$sel:tags:FargateProfile'</a>, <a>fargateProfile_tags</a> - The
--   metadata applied to the Fargate profile to assist with categorization
--   and organization. Each tag consists of a key and an optional value,
--   both of which you define. Fargate profile tags do not propagate to any
--   other resources associated with the Fargate profile, such as the pods
--   that are scheduled with it.
newFargateProfile :: FargateProfile

-- | An object representing an Fargate profile selector.
--   
--   <i>See:</i> <a>newFargateProfileSelector</a> smart constructor.
data FargateProfileSelector
FargateProfileSelector' :: Maybe Text -> Maybe (HashMap Text Text) -> FargateProfileSelector

-- | Create a value of <a>FargateProfileSelector</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:namespace:FargateProfileSelector'</a>,
--   <a>fargateProfileSelector_namespace</a> - The Kubernetes namespace
--   that the selector should match.
--   
--   <a>$sel:labels:FargateProfileSelector'</a>,
--   <a>fargateProfileSelector_labels</a> - The Kubernetes labels that the
--   selector should match. A pod must contain all of the labels that are
--   specified in the selector for it to be considered a match.
newFargateProfileSelector :: FargateProfileSelector

-- | An object representing an identity provider.
--   
--   <i>See:</i> <a>newIdentity</a> smart constructor.
data Identity
Identity' :: Maybe OIDC -> Identity

-- | Create a value of <a>Identity</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oidc:Identity'</a>, <a>identity_oidc</a> - An object
--   representing the <a>OpenID Connect</a> identity provider information.
newIdentity :: Identity

-- | An object representing an identity provider configuration.
--   
--   <i>See:</i> <a>newIdentityProviderConfig</a> smart constructor.
data IdentityProviderConfig
IdentityProviderConfig' :: Text -> Text -> IdentityProviderConfig

-- | Create a value of <a>IdentityProviderConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:type':IdentityProviderConfig'</a>,
--   <a>identityProviderConfig_type</a> - The type of the identity provider
--   configuration.
--   
--   <a>$sel:name:IdentityProviderConfig'</a>,
--   <a>identityProviderConfig_name</a> - The name of the identity provider
--   configuration.
newIdentityProviderConfig :: Text -> Text -> IdentityProviderConfig

-- | The full description of your identity configuration.
--   
--   <i>See:</i> <a>newIdentityProviderConfigResponse</a> smart
--   constructor.
data IdentityProviderConfigResponse
IdentityProviderConfigResponse' :: Maybe OidcIdentityProviderConfig -> IdentityProviderConfigResponse

-- | Create a value of <a>IdentityProviderConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:oidc:IdentityProviderConfigResponse'</a>,
--   <a>identityProviderConfigResponse_oidc</a> - An object that represents
--   an OpenID Connect (OIDC) identity provider configuration.
newIdentityProviderConfigResponse :: IdentityProviderConfigResponse

-- | An object representing an issue with an Amazon EKS resource.
--   
--   <i>See:</i> <a>newIssue</a> smart constructor.
data Issue
Issue' :: Maybe [Text] -> Maybe NodegroupIssueCode -> Maybe Text -> Issue

-- | Create a value of <a>Issue</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceIds:Issue'</a>, <a>issue_resourceIds</a> - The Amazon
--   Web Services resources that are afflicted by this issue.
--   
--   <a>$sel:code:Issue'</a>, <a>issue_code</a> - A brief description of
--   the error.
--   
--   <ul>
--   <li><b>AccessDenied</b>: Amazon EKS or one or more of your managed
--   nodes is failing to authenticate or authorize with your Kubernetes
--   cluster API server.</li>
--   <li><b>AsgInstanceLaunchFailures</b>: Your Auto Scaling group is
--   experiencing failures while attempting to launch instances.</li>
--   <li><b>AutoScalingGroupNotFound</b>: We couldn't find the Auto Scaling
--   group associated with the managed node group. You may be able to
--   recreate an Auto Scaling group with the same settings to recover.</li>
--   <li><b>ClusterUnreachable</b>: Amazon EKS or one or more of your
--   managed nodes is unable to to communicate with your Kubernetes cluster
--   API server. This can happen if there are network disruptions or if API
--   servers are timing out processing requests.</li>
--   <li><b>Ec2LaunchTemplateNotFound</b>: We couldn't find the Amazon EC2
--   launch template for your managed node group. You may be able to
--   recreate a launch template with the same settings to recover.</li>
--   <li><b>Ec2LaunchTemplateVersionMismatch</b>: The Amazon EC2 launch
--   template version for your managed node group does not match the
--   version that Amazon EKS created. You may be able to revert to the
--   version that Amazon EKS created to recover.</li>
--   <li><b>Ec2SecurityGroupDeletionFailure</b>: We could not delete the
--   remote access security group for your managed node group. Remove any
--   dependencies from the security group.</li>
--   <li><b>Ec2SecurityGroupNotFound</b>: We couldn't find the cluster
--   security group for the cluster. You must recreate your cluster.</li>
--   <li><b>Ec2SubnetInvalidConfiguration</b>: One or more Amazon EC2
--   subnets specified for a node group do not automatically assign public
--   IP addresses to instances launched into it. If you want your instances
--   to be assigned a public IP address, then you need to enable the
--   <tt>auto-assign public IP address</tt> setting for the subnet. See
--   <a>Modifying the public IPv4 addressing attribute for your subnet</a>
--   in the Amazon VPC User Guide.</li>
--   <li><b>IamInstanceProfileNotFound</b>: We couldn't find the IAM
--   instance profile for your managed node group. You may be able to
--   recreate an instance profile with the same settings to recover.</li>
--   <li><b>IamNodeRoleNotFound</b>: We couldn't find the IAM role for your
--   managed node group. You may be able to recreate an IAM role with the
--   same settings to recover.</li>
--   <li><b>InstanceLimitExceeded</b>: Your Amazon Web Services account is
--   unable to launch any more instances of the specified instance type.
--   You may be able to request an Amazon EC2 instance limit increase to
--   recover.</li>
--   <li><b>InsufficientFreeAddresses</b>: One or more of the subnets
--   associated with your managed node group does not have enough available
--   IP addresses for new nodes.</li>
--   <li><b>InternalFailure</b>: These errors are usually caused by an
--   Amazon EKS server-side issue.</li>
--   <li><b>NodeCreationFailure</b>: Your launched instances are unable to
--   register with your Amazon EKS cluster. Common causes of this failure
--   are insufficient <a>node IAM role</a> permissions or lack of outbound
--   internet access for the nodes.</li>
--   </ul>
--   
--   <a>$sel:message:Issue'</a>, <a>issue_message</a> - The error message
--   associated with the issue.
newIssue :: Issue

-- | The Kubernetes network configuration for the cluster.
--   
--   <i>See:</i> <a>newKubernetesNetworkConfigRequest</a> smart
--   constructor.
data KubernetesNetworkConfigRequest
KubernetesNetworkConfigRequest' :: Maybe Text -> KubernetesNetworkConfigRequest

-- | Create a value of <a>KubernetesNetworkConfigRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIpv4Cidr:KubernetesNetworkConfigRequest'</a>,
--   <a>kubernetesNetworkConfigRequest_serviceIpv4Cidr</a> - The CIDR block
--   to assign Kubernetes service IP addresses from. If you don't specify a
--   block, Kubernetes assigns addresses from either the 10.100.0.0/16 or
--   172.20.0.0/16 CIDR blocks. We recommend that you specify a block that
--   does not overlap with resources in other networks that are peered or
--   connected to your VPC. The block must meet the following requirements:
--   
--   <ul>
--   <li>Within one of the following private IP address blocks: 10.0.0.0/8,
--   172.16.0.0.0/12, or 192.168.0.0/16.</li>
--   <li>Doesn't overlap with any CIDR block assigned to the VPC that you
--   selected for VPC.</li>
--   <li>Between /24 and /12.</li>
--   </ul>
--   
--   You can only specify a custom CIDR block when you create a cluster and
--   can't change this value once the cluster is created.
newKubernetesNetworkConfigRequest :: KubernetesNetworkConfigRequest

-- | The Kubernetes network configuration for the cluster.
--   
--   <i>See:</i> <a>newKubernetesNetworkConfigResponse</a> smart
--   constructor.
data KubernetesNetworkConfigResponse
KubernetesNetworkConfigResponse' :: Maybe Text -> KubernetesNetworkConfigResponse

-- | Create a value of <a>KubernetesNetworkConfigResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serviceIpv4Cidr:KubernetesNetworkConfigResponse'</a>,
--   <a>kubernetesNetworkConfigResponse_serviceIpv4Cidr</a> - The CIDR
--   block that Kubernetes service IP addresses are assigned from. If you
--   didn't specify a CIDR block when you created the cluster, then
--   Kubernetes assigns addresses from either the 10.100.0.0/16 or
--   172.20.0.0/16 CIDR blocks. If this was specified, then it was
--   specified when the cluster was created and it cannot be changed.
newKubernetesNetworkConfigResponse :: KubernetesNetworkConfigResponse

-- | An object representing a node group launch template specification. The
--   launch template cannot include <a>SubnetId</a> ,
--   <a>IamInstanceProfile</a> , <a>RequestSpotInstances</a> ,
--   <a>HibernationOptions</a> , or <a>TerminateInstances</a> , or the node
--   group deployment or update will fail. For more information about
--   launch templates, see <a>CreateLaunchTemplate</a> in the Amazon EC2
--   API Reference. For more information about using launch templates with
--   Amazon EKS, see <a>Launch template support</a> in the Amazon EKS User
--   Guide.
--   
--   Specify either <tt>name</tt> or <tt>id</tt>, but not both.
--   
--   <i>See:</i> <a>newLaunchTemplateSpecification</a> smart constructor.
data LaunchTemplateSpecification
LaunchTemplateSpecification' :: Maybe Text -> Maybe Text -> Maybe Text -> LaunchTemplateSpecification

-- | Create a value of <a>LaunchTemplateSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_name</a> - The name of the launch
--   template.
--   
--   <a>$sel:version:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_version</a> - The version of the launch
--   template to use. If no version is specified, then the template's
--   default version is used.
--   
--   <a>$sel:id:LaunchTemplateSpecification'</a>,
--   <a>launchTemplateSpecification_id</a> - The ID of the launch template.
newLaunchTemplateSpecification :: LaunchTemplateSpecification

-- | An object representing the enabled or disabled Kubernetes control
--   plane logs for your cluster.
--   
--   <i>See:</i> <a>newLogSetup</a> smart constructor.
data LogSetup
LogSetup' :: Maybe Bool -> Maybe [LogType] -> LogSetup

-- | Create a value of <a>LogSetup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:enabled:LogSetup'</a>, <a>logSetup_enabled</a> - If a log type
--   is enabled, that log type exports its control plane logs to CloudWatch
--   Logs. If a log type isn't enabled, that log type doesn't export its
--   control plane logs. Each individual log type can be enabled or
--   disabled independently.
--   
--   <a>$sel:types:LogSetup'</a>, <a>logSetup_types</a> - The available
--   cluster control plane log types.
newLogSetup :: LogSetup

-- | An object representing the logging configuration for resources in your
--   cluster.
--   
--   <i>See:</i> <a>newLogging</a> smart constructor.
data Logging
Logging' :: Maybe [LogSetup] -> Logging

-- | Create a value of <a>Logging</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:clusterLogging:Logging'</a>, <a>logging_clusterLogging</a> -
--   The cluster control plane logging configuration for your cluster.
newLogging :: Logging

-- | An object representing an Amazon EKS managed node group.
--   
--   <i>See:</i> <a>newNodegroup</a> smart constructor.
data Nodegroup
Nodegroup' :: Maybe POSIX -> Maybe CapacityTypes -> Maybe NodegroupStatus -> Maybe [Text] -> Maybe POSIX -> Maybe [Taint] -> Maybe [Text] -> Maybe RemoteAccessConfig -> Maybe Int -> Maybe Text -> Maybe NodegroupResources -> Maybe NodegroupHealth -> Maybe Text -> Maybe NodegroupScalingConfig -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe LaunchTemplateSpecification -> Maybe (HashMap Text Text) -> Maybe AMITypes -> Maybe Text -> Maybe NodegroupUpdateConfig -> Maybe (HashMap Text Text) -> Nodegroup

-- | Create a value of <a>Nodegroup</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modifiedAt:Nodegroup'</a>, <a>nodegroup_modifiedAt</a> - The
--   Unix epoch timestamp in seconds for when the managed node group was
--   last modified.
--   
--   <a>$sel:capacityType:Nodegroup'</a>, <a>nodegroup_capacityType</a> -
--   The capacity type of your managed node group.
--   
--   <a>$sel:status:Nodegroup'</a>, <a>nodegroup_status</a> - The current
--   status of the managed node group.
--   
--   <a>$sel:instanceTypes:Nodegroup'</a>, <a>nodegroup_instanceTypes</a> -
--   If the node group wasn't deployed with a launch template, then this is
--   the instance type that is associated with the node group. If the node
--   group was deployed with a launch template, then this is <tt>null</tt>.
--   
--   <a>$sel:createdAt:Nodegroup'</a>, <a>nodegroup_createdAt</a> - The
--   Unix epoch timestamp in seconds for when the managed node group was
--   created.
--   
--   <a>$sel:taints:Nodegroup'</a>, <a>nodegroup_taints</a> - The
--   Kubernetes taints to be applied to the nodes in the node group when
--   they are created. Effect is one of <tt>No_Schedule</tt>,
--   <tt>Prefer_No_Schedule</tt>, or <tt>No_Execute</tt>. Kubernetes taints
--   can be used together with tolerations to control how workloads are
--   scheduled to your nodes.
--   
--   <a>$sel:subnets:Nodegroup'</a>, <a>nodegroup_subnets</a> - The subnets
--   that were specified for the Auto Scaling group that is associated with
--   your node group.
--   
--   <a>$sel:remoteAccess:Nodegroup'</a>, <a>nodegroup_remoteAccess</a> -
--   If the node group wasn't deployed with a launch template, then this is
--   the remote access configuration that is associated with the node
--   group. If the node group was deployed with a launch template, then
--   this is <tt>null</tt>.
--   
--   <a>$sel:diskSize:Nodegroup'</a>, <a>nodegroup_diskSize</a> - If the
--   node group wasn't deployed with a launch template, then this is the
--   disk size in the node group configuration. If the node group was
--   deployed with a launch template, then this is <tt>null</tt>.
--   
--   <a>$sel:releaseVersion:Nodegroup'</a>, <a>nodegroup_releaseVersion</a>
--   - If the node group was deployed using a launch template with a custom
--   AMI, then this is the AMI ID that was specified in the launch
--   template. For node groups that weren't deployed using a launch
--   template, this is the version of the Amazon EKS optimized AMI that the
--   node group was deployed with.
--   
--   <a>$sel:resources:Nodegroup'</a>, <a>nodegroup_resources</a> - The
--   resources associated with the node group, such as Auto Scaling groups
--   and security groups for remote access.
--   
--   <a>$sel:health:Nodegroup'</a>, <a>nodegroup_health</a> - The health
--   status of the node group. If there are issues with your node group's
--   health, they are listed here.
--   
--   <a>$sel:nodeRole:Nodegroup'</a>, <a>nodegroup_nodeRole</a> - The IAM
--   role associated with your node group. The Amazon EKS node
--   <tt>kubelet</tt> daemon makes calls to Amazon Web Services APIs on
--   your behalf. Nodes receive permissions for these API calls through an
--   IAM instance profile and associated policies.
--   
--   <a>$sel:scalingConfig:Nodegroup'</a>, <a>nodegroup_scalingConfig</a> -
--   The scaling configuration details for the Auto Scaling group that is
--   associated with your node group.
--   
--   <a>$sel:version:Nodegroup'</a>, <a>nodegroup_version</a> - The
--   Kubernetes version of the managed node group.
--   
--   <a>$sel:nodegroupArn:Nodegroup'</a>, <a>nodegroup_nodegroupArn</a> -
--   The Amazon Resource Name (ARN) associated with the managed node group.
--   
--   <a>$sel:clusterName:Nodegroup'</a>, <a>nodegroup_clusterName</a> - The
--   name of the cluster that the managed node group resides in.
--   
--   <a>$sel:launchTemplate:Nodegroup'</a>, <a>nodegroup_launchTemplate</a>
--   - If a launch template was used to create the node group, then this is
--   the launch template that was used.
--   
--   <a>$sel:labels:Nodegroup'</a>, <a>nodegroup_labels</a> - The
--   Kubernetes labels applied to the nodes in the node group.
--   
--   Only labels that are applied with the Amazon EKS API are shown here.
--   There may be other Kubernetes labels applied to the nodes in this
--   group.
--   
--   <a>$sel:amiType:Nodegroup'</a>, <a>nodegroup_amiType</a> - If the node
--   group was deployed using a launch template with a custom AMI, then
--   this is <tt>CUSTOM</tt>. For node groups that weren't deployed using a
--   launch template, this is the AMI type that was specified in the node
--   group configuration.
--   
--   <a>$sel:nodegroupName:Nodegroup'</a>, <a>nodegroup_nodegroupName</a> -
--   The name associated with an Amazon EKS managed node group.
--   
--   <a>$sel:updateConfig:Nodegroup'</a>, <a>nodegroup_updateConfig</a> -
--   The node group update configuration.
--   
--   <a>$sel:tags:Nodegroup'</a>, <a>nodegroup_tags</a> - The metadata
--   applied to the node group to assist with categorization and
--   organization. Each tag consists of a key and an optional value, both
--   of which you define. Node group tags do not propagate to any other
--   resources associated with the node group, such as the Amazon EC2
--   instances or subnets.
newNodegroup :: Nodegroup

-- | An object representing the health status of the node group.
--   
--   <i>See:</i> <a>newNodegroupHealth</a> smart constructor.
data NodegroupHealth
NodegroupHealth' :: Maybe [Issue] -> NodegroupHealth

-- | Create a value of <a>NodegroupHealth</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:issues:NodegroupHealth'</a>, <a>nodegroupHealth_issues</a> -
--   Any issues that are associated with the node group.
newNodegroupHealth :: NodegroupHealth

-- | An object representing the resources associated with the node group,
--   such as Auto Scaling groups and security groups for remote access.
--   
--   <i>See:</i> <a>newNodegroupResources</a> smart constructor.
data NodegroupResources
NodegroupResources' :: Maybe Text -> Maybe [AutoScalingGroup] -> NodegroupResources

-- | Create a value of <a>NodegroupResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:remoteAccessSecurityGroup:NodegroupResources'</a>,
--   <a>nodegroupResources_remoteAccessSecurityGroup</a> - The remote
--   access security group associated with the node group. This security
--   group controls SSH access to the nodes.
--   
--   <a>$sel:autoScalingGroups:NodegroupResources'</a>,
--   <a>nodegroupResources_autoScalingGroups</a> - The Auto Scaling groups
--   associated with the node group.
newNodegroupResources :: NodegroupResources

-- | An object representing the scaling configuration details for the Auto
--   Scaling group that is associated with your node group. When creating a
--   node group, you must specify all or none of the properties. When
--   updating a node group, you can specify any or none of the properties.
--   
--   <i>See:</i> <a>newNodegroupScalingConfig</a> smart constructor.
data NodegroupScalingConfig
NodegroupScalingConfig' :: Maybe Natural -> Maybe Natural -> Maybe Natural -> NodegroupScalingConfig

-- | Create a value of <a>NodegroupScalingConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:desiredSize:NodegroupScalingConfig'</a>,
--   <a>nodegroupScalingConfig_desiredSize</a> - The current number of
--   nodes that the managed node group should maintain.
--   
--   <a>$sel:maxSize:NodegroupScalingConfig'</a>,
--   <a>nodegroupScalingConfig_maxSize</a> - The maximum number of nodes
--   that the managed node group can scale out to. For information about
--   the maximum number that you can specify, see <a>Amazon EKS service
--   quotas</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:minSize:NodegroupScalingConfig'</a>,
--   <a>nodegroupScalingConfig_minSize</a> - The minimum number of nodes
--   that the managed node group can scale in to.
newNodegroupScalingConfig :: NodegroupScalingConfig

-- | The node group update configuration.
--   
--   <i>See:</i> <a>newNodegroupUpdateConfig</a> smart constructor.
data NodegroupUpdateConfig
NodegroupUpdateConfig' :: Maybe Natural -> Maybe Natural -> NodegroupUpdateConfig

-- | Create a value of <a>NodegroupUpdateConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxUnavailable:NodegroupUpdateConfig'</a>,
--   <a>nodegroupUpdateConfig_maxUnavailable</a> - The maximum number of
--   nodes unavailable at once during a version update. Nodes will be
--   updated in parallel. This value or <tt>maxUnavailablePercentage</tt>
--   is required to have a value.The maximum number is 100.
--   
--   <a>$sel:maxUnavailablePercentage:NodegroupUpdateConfig'</a>,
--   <a>nodegroupUpdateConfig_maxUnavailablePercentage</a> - The maximum
--   percentage of nodes unavailable during a version update. This
--   percentage of nodes will be updated in parallel, up to 100 nodes at
--   once. This value or <tt>maxUnavailable</tt> is required to have a
--   value.
newNodegroupUpdateConfig :: NodegroupUpdateConfig

-- | An object representing the <a>OpenID Connect</a> (OIDC) identity
--   provider information for the cluster.
--   
--   <i>See:</i> <a>newOIDC</a> smart constructor.
data OIDC
OIDC' :: Maybe Text -> OIDC

-- | Create a value of <a>OIDC</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:issuer:OIDC'</a>, <a>oidc_issuer</a> - The issuer URL for the
--   OIDC identity provider.
newOIDC :: OIDC

-- | An object that represents the configuration for an OpenID Connect
--   (OIDC) identity provider.
--   
--   <i>See:</i> <a>newOidcIdentityProviderConfig</a> smart constructor.
data OidcIdentityProviderConfig
OidcIdentityProviderConfig' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ConfigStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> OidcIdentityProviderConfig

-- | Create a value of <a>OidcIdentityProviderConfig</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupsPrefix:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_groupsPrefix</a> - The prefix that is
--   prepended to group claims to prevent clashes with existing names (such
--   as <tt>system:</tt> groups). For example, the value<tt> oidc:</tt>
--   creates group names like <tt>oidc:engineering</tt> and
--   <tt>oidc:infra</tt>. The prefix can't contain <tt>system:</tt>
--   
--   <a>$sel:usernameClaim:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_usernameClaim</a> - The JSON Web token
--   (JWT) claim that is used as the username.
--   
--   <a>$sel:clientId:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_clientId</a> - This is also known as
--   <i>audience</i>. The ID of the client application that makes
--   authentication requests to the OIDC identity provider.
--   
--   <a>$sel:status:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_status</a> - The status of the OIDC
--   identity provider.
--   
--   <a>$sel:identityProviderConfigName:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_identityProviderConfigName</a> - The
--   name of the configuration.
--   
--   <a>$sel:identityProviderConfigArn:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_identityProviderConfigArn</a> - The ARN
--   of the configuration.
--   
--   <a>$sel:issuerUrl:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_issuerUrl</a> - The URL of the OIDC
--   identity provider that allows the API server to discover public
--   signing keys for verifying tokens.
--   
--   <a>$sel:requiredClaims:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_requiredClaims</a> - The key-value pairs
--   that describe required claims in the identity token. If set, each
--   claim is verified to be present in the token with a matching value.
--   
--   <a>$sel:usernamePrefix:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_usernamePrefix</a> - The prefix that is
--   prepended to username claims to prevent clashes with existing names.
--   The prefix can't contain <tt>system:</tt>
--   
--   <a>$sel:groupsClaim:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_groupsClaim</a> - The JSON web token
--   (JWT) claim that the provider uses to return your groups.
--   
--   <a>$sel:clusterName:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_clusterName</a> - The cluster that the
--   configuration is associated to.
--   
--   <a>$sel:tags:OidcIdentityProviderConfig'</a>,
--   <a>oidcIdentityProviderConfig_tags</a> - The metadata to apply to the
--   provider configuration to assist with categorization and organization.
--   Each tag consists of a key and an optional value, both of which you
--   defined.
newOidcIdentityProviderConfig :: OidcIdentityProviderConfig

-- | An object representing an OpenID Connect (OIDC) configuration. Before
--   associating an OIDC identity provider to your cluster, review the
--   considerations in <a>Authenticating users for your cluster from an
--   OpenID Connect identity provider</a> in the <i>Amazon EKS User
--   Guide</i>.
--   
--   <i>See:</i> <a>newOidcIdentityProviderConfigRequest</a> smart
--   constructor.
data OidcIdentityProviderConfigRequest
OidcIdentityProviderConfigRequest' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> OidcIdentityProviderConfigRequest

-- | Create a value of <a>OidcIdentityProviderConfigRequest</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:groupsPrefix:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_groupsPrefix</a> - The prefix
--   that is prepended to group claims to prevent clashes with existing
--   names (such as <tt>system:</tt> groups). For example, the value<tt>
--   oidc:</tt> will create group names like <tt>oidc:engineering</tt> and
--   <tt>oidc:infra</tt>.
--   
--   <a>$sel:usernameClaim:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_usernameClaim</a> - The JSON Web
--   Token (JWT) claim to use as the username. The default is <tt>sub</tt>,
--   which is expected to be a unique identifier of the end user. You can
--   choose other claims, such as <tt>email</tt> or <tt>name</tt>,
--   depending on the OpenID identity provider. Claims other than
--   <tt>email</tt> are prefixed with the issuer URL to prevent naming
--   clashes with other plug-ins.
--   
--   <a>$sel:requiredClaims:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_requiredClaims</a> - The key
--   value pairs that describe required claims in the identity token. If
--   set, each claim is verified to be present in the token with a matching
--   value. For the maximum number of claims that you can require, see
--   <a>Amazon EKS service quotas</a> in the <i>Amazon EKS User Guide</i>.
--   
--   <a>$sel:usernamePrefix:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_usernamePrefix</a> - The prefix
--   that is prepended to username claims to prevent clashes with existing
--   names. If you do not provide this field, and <tt>username</tt> is a
--   value other than <tt>email</tt>, the prefix defaults to
--   <tt>issuerurl#</tt>. You can use the value <tt>-</tt> to disable all
--   prefixing.
--   
--   <a>$sel:groupsClaim:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_groupsClaim</a> - The JWT claim
--   that the provider uses to return your groups.
--   
--   
--   <a>$sel:identityProviderConfigName:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_identityProviderConfigName</a> -
--   The name of the OIDC provider configuration.
--   
--   <a>$sel:issuerUrl:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_issuerUrl</a> - The URL of the
--   OpenID identity provider that allows the API server to discover public
--   signing keys for verifying tokens. The URL must begin with
--   <tt>https://</tt> and should correspond to the <tt>iss</tt> claim in
--   the provider's OIDC ID tokens. Per the OIDC standard, path components
--   are allowed but query parameters are not. Typically the URL consists
--   of only a hostname, like <tt>https://server.example.org</tt> or
--   <tt>https://example.com</tt>. This URL should point to the level below
--   <tt>.well-known/openid-configuration</tt> and must be publicly
--   accessible over the internet.
--   
--   <a>$sel:clientId:OidcIdentityProviderConfigRequest'</a>,
--   <a>oidcIdentityProviderConfigRequest_clientId</a> - This is also known
--   as <i>audience</i>. The ID for the client application that makes
--   authentication requests to the OpenID identity provider.
newOidcIdentityProviderConfigRequest :: Text -> Text -> Text -> OidcIdentityProviderConfigRequest

-- | Identifies the Key Management Service (KMS) key used to encrypt the
--   secrets.
--   
--   <i>See:</i> <a>newProvider</a> smart constructor.
data Provider
Provider' :: Maybe Text -> Provider

-- | Create a value of <a>Provider</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:keyArn:Provider'</a>, <a>provider_keyArn</a> - Amazon Resource
--   Name (ARN) or alias of the KMS key. The KMS key must be symmetric,
--   created in the same region as the cluster, and if the KMS key was
--   created in a different account, the user must have access to the KMS
--   key. For more information, see <a>Allowing Users in Other Accounts to
--   Use a KMS key</a> in the <i>Key Management Service Developer
--   Guide</i>.
newProvider :: Provider

-- | An object representing the remote access configuration for the managed
--   node group.
--   
--   <i>See:</i> <a>newRemoteAccessConfig</a> smart constructor.
data RemoteAccessConfig
RemoteAccessConfig' :: Maybe [Text] -> Maybe Text -> RemoteAccessConfig

-- | Create a value of <a>RemoteAccessConfig</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:sourceSecurityGroups:RemoteAccessConfig'</a>,
--   <a>remoteAccessConfig_sourceSecurityGroups</a> - The security groups
--   that are allowed SSH access (port 22) to the nodes. If you specify an
--   Amazon EC2 SSH key but do not specify a source security group when you
--   create a managed node group, then port 22 on the nodes is opened to
--   the internet (0.0.0.0/0). For more information, see <a>Security Groups
--   for Your VPC</a> in the <i>Amazon Virtual Private Cloud User
--   Guide</i>.
--   
--   <a>$sel:ec2SshKey:RemoteAccessConfig'</a>,
--   <a>remoteAccessConfig_ec2SshKey</a> - The Amazon EC2 SSH key that
--   provides access for SSH communication with the nodes in the managed
--   node group. For more information, see <a>Amazon EC2 key pairs and
--   Linux instances</a> in the <i>Amazon Elastic Compute Cloud User Guide
--   for Linux Instances</i>.
newRemoteAccessConfig :: RemoteAccessConfig

-- | A property that allows a node to repel a set of pods.
--   
--   <i>See:</i> <a>newTaint</a> smart constructor.
data Taint
Taint' :: Maybe TaintEffect -> Maybe Text -> Maybe Text -> Taint

-- | Create a value of <a>Taint</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:effect:Taint'</a>, <a>taint_effect</a> - The effect of the
--   taint.
--   
--   <a>$sel:value:Taint'</a>, <a>taint_value</a> - The value of the taint.
--   
--   <a>$sel:key:Taint'</a>, <a>taint_key</a> - The key of the taint.
newTaint :: Taint

-- | An object representing an asynchronous update.
--   
--   <i>See:</i> <a>newUpdate</a> smart constructor.
data Update
Update' :: Maybe UpdateStatus -> Maybe POSIX -> Maybe [UpdateParam] -> Maybe Text -> Maybe UpdateType -> Maybe [ErrorDetail] -> Update

-- | Create a value of <a>Update</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Update'</a>, <a>update_status</a> - The current status
--   of the update.
--   
--   <a>$sel:createdAt:Update'</a>, <a>update_createdAt</a> - The Unix
--   epoch timestamp in seconds for when the update was created.
--   
--   <a>$sel:params:Update'</a>, <a>update_params</a> - A key-value map
--   that contains the parameters associated with the update.
--   
--   <a>$sel:id:Update'</a>, <a>update_id</a> - A UUID that is used to
--   track the update.
--   
--   <a>$sel:type':Update'</a>, <a>update_type</a> - The type of the
--   update.
--   
--   <a>$sel:errors:Update'</a>, <a>update_errors</a> - Any errors
--   associated with a <tt>Failed</tt> update.
newUpdate :: Update

-- | An object representing a Kubernetes label change for a managed node
--   group.
--   
--   <i>See:</i> <a>newUpdateLabelsPayload</a> smart constructor.
data UpdateLabelsPayload
UpdateLabelsPayload' :: Maybe [Text] -> Maybe (HashMap Text Text) -> UpdateLabelsPayload

-- | Create a value of <a>UpdateLabelsPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:removeLabels:UpdateLabelsPayload'</a>,
--   <a>updateLabelsPayload_removeLabels</a> - Kubernetes labels to be
--   removed.
--   
--   <a>$sel:addOrUpdateLabels:UpdateLabelsPayload'</a>,
--   <a>updateLabelsPayload_addOrUpdateLabels</a> - Kubernetes labels to be
--   added or updated.
newUpdateLabelsPayload :: UpdateLabelsPayload

-- | An object representing the details of an update request.
--   
--   <i>See:</i> <a>newUpdateParam</a> smart constructor.
data UpdateParam
UpdateParam' :: Maybe Text -> Maybe UpdateParamType -> UpdateParam

-- | Create a value of <a>UpdateParam</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:UpdateParam'</a>, <a>updateParam_value</a> - The value
--   of the keys submitted as part of an update request.
--   
--   <a>$sel:type':UpdateParam'</a>, <a>updateParam_type</a> - The keys
--   associated with an update request.
newUpdateParam :: UpdateParam

-- | An object representing the details of an update to a taints payload.
--   
--   <i>See:</i> <a>newUpdateTaintsPayload</a> smart constructor.
data UpdateTaintsPayload
UpdateTaintsPayload' :: Maybe [Taint] -> Maybe [Taint] -> UpdateTaintsPayload

-- | Create a value of <a>UpdateTaintsPayload</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:addOrUpdateTaints:UpdateTaintsPayload'</a>,
--   <a>updateTaintsPayload_addOrUpdateTaints</a> - Kubernetes taints to be
--   added or updated.
--   
--   <a>$sel:removeTaints:UpdateTaintsPayload'</a>,
--   <a>updateTaintsPayload_removeTaints</a> - Kubernetes taints to be
--   removed.
newUpdateTaintsPayload :: UpdateTaintsPayload

-- | An object representing the VPC configuration to use for an Amazon EKS
--   cluster.
--   
--   <i>See:</i> <a>newVpcConfigRequest</a> smart constructor.
data VpcConfigRequest
VpcConfigRequest' :: Maybe [Text] -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> VpcConfigRequest

-- | Create a value of <a>VpcConfigRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_securityGroupIds</a> - Specify one or more
--   security groups for the cross-account elastic network interfaces that
--   Amazon EKS creates to use that allow communication between your nodes
--   and the Kubernetes control plane. If you don't specify any security
--   groups, then familiarize yourself with the difference between Amazon
--   EKS defaults for clusters deployed with Kubernetes:
--   
--   <ul>
--   <li>1.14 Amazon EKS platform version <tt>eks.2</tt> and earlier</li>
--   <li>1.14 Amazon EKS platform version <tt>eks.3</tt> and later</li>
--   </ul>
--   
--   For more information, see <a>Amazon EKS security group
--   considerations</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:endpointPrivateAccess:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_endpointPrivateAccess</a> - Set this value to
--   <tt>true</tt> to enable private access for your cluster's Kubernetes
--   API server endpoint. If you enable private access, Kubernetes API
--   requests from within your cluster's VPC use the private VPC endpoint.
--   The default value for this parameter is <tt>false</tt>, which disables
--   private access for your Kubernetes API server. If you disable private
--   access and you have nodes or Fargate pods in the cluster, then ensure
--   that <tt>publicAccessCidrs</tt> includes the necessary CIDR blocks for
--   communication with the nodes or Fargate pods. For more information,
--   see <a>Amazon EKS cluster endpoint access control</a> in the
--   /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:publicAccessCidrs:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_publicAccessCidrs</a> - The CIDR blocks that are
--   allowed access to your cluster's public Kubernetes API server
--   endpoint. Communication to the endpoint from addresses outside of the
--   CIDR blocks that you specify is denied. The default value is
--   <tt>0.0.0.0/0</tt>. If you've disabled private endpoint access and you
--   have nodes or Fargate pods in the cluster, then ensure that you
--   specify the necessary CIDR blocks. For more information, see <a>Amazon
--   EKS cluster endpoint access control</a> in the /<i>Amazon EKS User
--   Guide</i>/ .
--   
--   <a>$sel:subnetIds:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_subnetIds</a> - Specify subnets for your Amazon
--   EKS nodes. Amazon EKS creates cross-account elastic network interfaces
--   in these subnets to allow communication between your nodes and the
--   Kubernetes control plane.
--   
--   <a>$sel:endpointPublicAccess:VpcConfigRequest'</a>,
--   <a>vpcConfigRequest_endpointPublicAccess</a> - Set this value to
--   <tt>false</tt> to disable public access to your cluster's Kubernetes
--   API server endpoint. If you disable public access, your cluster's
--   Kubernetes API server can only receive requests from within the
--   cluster VPC. The default value for this parameter is <tt>true</tt>,
--   which enables public access for your Kubernetes API server. For more
--   information, see <a>Amazon EKS cluster endpoint access control</a> in
--   the /<i>Amazon EKS User Guide</i>/ .
newVpcConfigRequest :: VpcConfigRequest

-- | An object representing an Amazon EKS cluster VPC configuration
--   response.
--   
--   <i>See:</i> <a>newVpcConfigResponse</a> smart constructor.
data VpcConfigResponse
VpcConfigResponse' :: Maybe [Text] -> Maybe Bool -> Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Bool -> VpcConfigResponse

-- | Create a value of <a>VpcConfigResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_securityGroupIds</a> - The security groups
--   associated with the cross-account elastic network interfaces that are
--   used to allow communication between your nodes and the Kubernetes
--   control plane.
--   
--   <a>$sel:endpointPrivateAccess:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_endpointPrivateAccess</a> - This parameter
--   indicates whether the Amazon EKS private API server endpoint is
--   enabled. If the Amazon EKS private API server endpoint is enabled,
--   Kubernetes API requests that originate from within your cluster's VPC
--   use the private VPC endpoint instead of traversing the internet. If
--   this value is disabled and you have nodes or Fargate pods in the
--   cluster, then ensure that <tt>publicAccessCidrs</tt> includes the
--   necessary CIDR blocks for communication with the nodes or Fargate
--   pods. For more information, see <a>Amazon EKS cluster endpoint access
--   control</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:publicAccessCidrs:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_publicAccessCidrs</a> - The CIDR blocks that are
--   allowed access to your cluster's public Kubernetes API server
--   endpoint. Communication to the endpoint from addresses outside of the
--   listed CIDR blocks is denied. The default value is <tt>0.0.0.0/0</tt>.
--   If you've disabled private endpoint access and you have nodes or
--   Fargate pods in the cluster, then ensure that the necessary CIDR
--   blocks are listed. For more information, see <a>Amazon EKS cluster
--   endpoint access control</a> in the /<i>Amazon EKS User Guide</i>/ .
--   
--   <a>$sel:subnetIds:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_subnetIds</a> - The subnets associated with your
--   cluster.
--   
--   <a>$sel:vpcId:VpcConfigResponse'</a>, <a>vpcConfigResponse_vpcId</a> -
--   The VPC associated with your cluster.
--   
--   <a>$sel:clusterSecurityGroupId:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_clusterSecurityGroupId</a> - The cluster security
--   group that was created by Amazon EKS for the cluster. Managed node
--   groups use this security group for control-plane-to-data-plane
--   communication.
--   
--   <a>$sel:endpointPublicAccess:VpcConfigResponse'</a>,
--   <a>vpcConfigResponse_endpointPublicAccess</a> - This parameter
--   indicates whether the Amazon EKS public API server endpoint is
--   enabled. If the Amazon EKS public API server endpoint is disabled,
--   your cluster's Kubernetes API server can only receive requests that
--   originate from within the cluster VPC.
newVpcConfigResponse :: VpcConfigResponse
