-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-imagebuilderZSamazonka-imagebuilder
@version 2.0


module Amazonka.ImageBuilder.Types.ComponentFormat
newtype ComponentFormat
ComponentFormat' :: Text -> ComponentFormat
[fromComponentFormat] :: ComponentFormat -> Text
pattern ComponentFormat_SHELL :: ComponentFormat
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ComponentFormat.ComponentFormat


module Amazonka.ImageBuilder.Types.ComponentParameter

-- | Contains a key/value pair that sets the named component parameter.
--   
--   <i>See:</i> <a>newComponentParameter</a> smart constructor.
data ComponentParameter
ComponentParameter' :: Text -> [Text] -> ComponentParameter

-- | The name of the component parameter to set.
[$sel:name:ComponentParameter'] :: ComponentParameter -> Text

-- | Sets the value for the named component parameter.
[$sel:value:ComponentParameter'] :: ComponentParameter -> [Text]

-- | Create a value of <a>ComponentParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ComponentParameter'</a>, <a>componentParameter_name</a> -
--   The name of the component parameter to set.
--   
--   <a>$sel:value:ComponentParameter'</a>, <a>componentParameter_value</a>
--   - Sets the value for the named component parameter.
newComponentParameter :: Text -> ComponentParameter

-- | The name of the component parameter to set.
componentParameter_name :: Lens' ComponentParameter Text

-- | Sets the value for the named component parameter.
componentParameter_value :: Lens' ComponentParameter [Text]
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ComponentParameter.ComponentParameter
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ComponentParameter.ComponentParameter
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ComponentParameter.ComponentParameter
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ComponentParameter.ComponentParameter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ComponentParameter.ComponentParameter
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ComponentParameter.ComponentParameter
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ComponentParameter.ComponentParameter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.ComponentParameter.ComponentParameter


module Amazonka.ImageBuilder.Types.ComponentConfiguration

-- | Configuration details of the component.
--   
--   <i>See:</i> <a>newComponentConfiguration</a> smart constructor.
data ComponentConfiguration
ComponentConfiguration' :: Maybe (NonEmpty ComponentParameter) -> Text -> ComponentConfiguration

-- | A group of parameter settings that are used to configure the component
--   for a specific recipe.
[$sel:parameters:ComponentConfiguration'] :: ComponentConfiguration -> Maybe (NonEmpty ComponentParameter)

-- | The Amazon Resource Name (ARN) of the component.
[$sel:componentArn:ComponentConfiguration'] :: ComponentConfiguration -> Text

-- | Create a value of <a>ComponentConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ComponentConfiguration'</a>,
--   <a>componentConfiguration_parameters</a> - A group of parameter
--   settings that are used to configure the component for a specific
--   recipe.
--   
--   <a>$sel:componentArn:ComponentConfiguration'</a>,
--   <a>componentConfiguration_componentArn</a> - The Amazon Resource Name
--   (ARN) of the component.
newComponentConfiguration :: Text -> ComponentConfiguration

-- | A group of parameter settings that are used to configure the component
--   for a specific recipe.
componentConfiguration_parameters :: Lens' ComponentConfiguration (Maybe (NonEmpty ComponentParameter))

-- | The Amazon Resource Name (ARN) of the component.
componentConfiguration_componentArn :: Lens' ComponentConfiguration Text
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ComponentConfiguration.ComponentConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ComponentConfiguration.ComponentConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ComponentConfiguration.ComponentConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ComponentConfiguration.ComponentConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ComponentConfiguration.ComponentConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ComponentConfiguration.ComponentConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ComponentConfiguration.ComponentConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.ComponentConfiguration.ComponentConfiguration


module Amazonka.ImageBuilder.Types.ComponentParameterDetail

-- | Defines a parameter that is used to provide configuration details for
--   the component.
--   
--   <i>See:</i> <a>newComponentParameterDetail</a> smart constructor.
data ComponentParameterDetail
ComponentParameterDetail' :: Maybe [Text] -> Maybe Text -> Text -> Text -> ComponentParameterDetail

-- | The default value of this parameter if no input is provided.
[$sel:defaultValue:ComponentParameterDetail'] :: ComponentParameterDetail -> Maybe [Text]

-- | Describes this parameter.
[$sel:description:ComponentParameterDetail'] :: ComponentParameterDetail -> Maybe Text

-- | The name of this input parameter.
[$sel:name:ComponentParameterDetail'] :: ComponentParameterDetail -> Text

-- | The type of input this parameter provides. The currently supported
--   value is "string".
[$sel:type':ComponentParameterDetail'] :: ComponentParameterDetail -> Text

-- | Create a value of <a>ComponentParameterDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValue:ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_defaultValue</a> - The default value of
--   this parameter if no input is provided.
--   
--   <a>$sel:description:ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_description</a> - Describes this
--   parameter.
--   
--   <a>$sel:name:ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_name</a> - The name of this input
--   parameter.
--   
--   <a>$sel:type':ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_type</a> - The type of input this
--   parameter provides. The currently supported value is "string".
newComponentParameterDetail :: Text -> Text -> ComponentParameterDetail

-- | The default value of this parameter if no input is provided.
componentParameterDetail_defaultValue :: Lens' ComponentParameterDetail (Maybe [Text])

-- | Describes this parameter.
componentParameterDetail_description :: Lens' ComponentParameterDetail (Maybe Text)

-- | The name of this input parameter.
componentParameterDetail_name :: Lens' ComponentParameterDetail Text

-- | The type of input this parameter provides. The currently supported
--   value is "string".
componentParameterDetail_type :: Lens' ComponentParameterDetail Text
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ComponentParameterDetail.ComponentParameterDetail
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ComponentParameterDetail.ComponentParameterDetail
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ComponentParameterDetail.ComponentParameterDetail
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ComponentParameterDetail.ComponentParameterDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ComponentParameterDetail.ComponentParameterDetail
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ComponentParameterDetail.ComponentParameterDetail
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ComponentParameterDetail.ComponentParameterDetail


module Amazonka.ImageBuilder.Types.ComponentStatus
newtype ComponentStatus
ComponentStatus' :: Text -> ComponentStatus
[fromComponentStatus] :: ComponentStatus -> Text
pattern ComponentStatus_DEPRECATED :: ComponentStatus
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ComponentStatus.ComponentStatus


module Amazonka.ImageBuilder.Types.ComponentState

-- | A group of fields that describe the current status of components that
--   are no longer active.
--   
--   <i>See:</i> <a>newComponentState</a> smart constructor.
data ComponentState
ComponentState' :: Maybe ComponentStatus -> Maybe Text -> ComponentState

-- | The current state of the component.
[$sel:status:ComponentState'] :: ComponentState -> Maybe ComponentStatus

-- | Describes how or why the component changed state.
[$sel:reason:ComponentState'] :: ComponentState -> Maybe Text

-- | Create a value of <a>ComponentState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ComponentState'</a>, <a>componentState_status</a> - The
--   current state of the component.
--   
--   <a>$sel:reason:ComponentState'</a>, <a>componentState_reason</a> -
--   Describes how or why the component changed state.
newComponentState :: ComponentState

-- | The current state of the component.
componentState_status :: Lens' ComponentState (Maybe ComponentStatus)

-- | Describes how or why the component changed state.
componentState_reason :: Lens' ComponentState (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ComponentState.ComponentState
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ComponentState.ComponentState
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ComponentState.ComponentState
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ComponentState.ComponentState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ComponentState.ComponentState
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ComponentState.ComponentState
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ComponentState.ComponentState


module Amazonka.ImageBuilder.Types.ComponentType
newtype ComponentType
ComponentType' :: Text -> ComponentType
[fromComponentType] :: ComponentType -> Text
pattern ComponentType_BUILD :: ComponentType
pattern ComponentType_TEST :: ComponentType
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ComponentType.ComponentType
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ComponentType.ComponentType


module Amazonka.ImageBuilder.Types.Container

-- | A container encapsulates the runtime environment for an application.
--   
--   <i>See:</i> <a>newContainer</a> smart constructor.
data Container
Container' :: Maybe [Text] -> Maybe Text -> Container

-- | A list of URIs for containers created in the context Region.
[$sel:imageUris:Container'] :: Container -> Maybe [Text]

-- | Containers and container images are Region-specific. This is the
--   Region context for the container.
[$sel:region:Container'] :: Container -> Maybe Text

-- | Create a value of <a>Container</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageUris:Container'</a>, <a>container_imageUris</a> - A list
--   of URIs for containers created in the context Region.
--   
--   <a>$sel:region:Container'</a>, <a>container_region</a> - Containers
--   and container images are Region-specific. This is the Region context
--   for the container.
newContainer :: Container

-- | A list of URIs for containers created in the context Region.
container_imageUris :: Lens' Container (Maybe [Text])

-- | Containers and container images are Region-specific. This is the
--   Region context for the container.
container_region :: Lens' Container (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.Container.Container
instance GHC.Show.Show Amazonka.ImageBuilder.Types.Container.Container
instance GHC.Read.Read Amazonka.ImageBuilder.Types.Container.Container
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.Container.Container
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.Container.Container
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.Container.Container
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.Container.Container


module Amazonka.ImageBuilder.Types.ContainerRepositoryService
newtype ContainerRepositoryService
ContainerRepositoryService' :: Text -> ContainerRepositoryService
[fromContainerRepositoryService] :: ContainerRepositoryService -> Text
pattern ContainerRepositoryService_ECR :: ContainerRepositoryService
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ContainerRepositoryService.ContainerRepositoryService


module Amazonka.ImageBuilder.Types.ContainerType
newtype ContainerType
ContainerType' :: Text -> ContainerType
[fromContainerType] :: ContainerType -> Text
pattern ContainerType_DOCKER :: ContainerType
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ContainerType.ContainerType
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ContainerType.ContainerType


module Amazonka.ImageBuilder.Types.DistributionConfigurationSummary

-- | A high-level overview of a distribution configuration.
--   
--   <i>See:</i> <a>newDistributionConfigurationSummary</a> smart
--   constructor.
data DistributionConfigurationSummary
DistributionConfigurationSummary' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> DistributionConfigurationSummary

-- | The Amazon Resource Name (ARN) of the distribution configuration.
[$sel:arn:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe Text

-- | A list of Regions where the container image is distributed to.
[$sel:regions:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe [Text]

-- | The date on which the distribution configuration was updated.
[$sel:dateUpdated:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe Text

-- | The date on which the distribution configuration was created.
[$sel:dateCreated:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe Text

-- | The name of the distribution configuration.
[$sel:name:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe Text

-- | The description of the distribution configuration.
[$sel:description:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe Text

-- | The tags associated with the distribution configuration.
[$sel:tags:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>DistributionConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_arn</a> - The Amazon Resource Name
--   (ARN) of the distribution configuration.
--   
--   <a>$sel:regions:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_regions</a> - A list of Regions
--   where the container image is distributed to.
--   
--   <a>$sel:dateUpdated:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_dateUpdated</a> - The date on
--   which the distribution configuration was updated.
--   
--   <a>$sel:dateCreated:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_dateCreated</a> - The date on
--   which the distribution configuration was created.
--   
--   <a>$sel:name:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_name</a> - The name of the
--   distribution configuration.
--   
--   <a>$sel:description:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_description</a> - The description
--   of the distribution configuration.
--   
--   <a>$sel:tags:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_tags</a> - The tags associated
--   with the distribution configuration.
newDistributionConfigurationSummary :: DistributionConfigurationSummary

-- | The Amazon Resource Name (ARN) of the distribution configuration.
distributionConfigurationSummary_arn :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | A list of Regions where the container image is distributed to.
distributionConfigurationSummary_regions :: Lens' DistributionConfigurationSummary (Maybe [Text])

-- | The date on which the distribution configuration was updated.
distributionConfigurationSummary_dateUpdated :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The date on which the distribution configuration was created.
distributionConfigurationSummary_dateCreated :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The name of the distribution configuration.
distributionConfigurationSummary_name :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The description of the distribution configuration.
distributionConfigurationSummary_description :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The tags associated with the distribution configuration.
distributionConfigurationSummary_tags :: Lens' DistributionConfigurationSummary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.DistributionConfigurationSummary.DistributionConfigurationSummary
instance GHC.Show.Show Amazonka.ImageBuilder.Types.DistributionConfigurationSummary.DistributionConfigurationSummary
instance GHC.Read.Read Amazonka.ImageBuilder.Types.DistributionConfigurationSummary.DistributionConfigurationSummary
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.DistributionConfigurationSummary.DistributionConfigurationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.DistributionConfigurationSummary.DistributionConfigurationSummary
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.DistributionConfigurationSummary.DistributionConfigurationSummary
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.DistributionConfigurationSummary.DistributionConfigurationSummary


module Amazonka.ImageBuilder.Types.EbsVolumeType
newtype EbsVolumeType
EbsVolumeType' :: Text -> EbsVolumeType
[fromEbsVolumeType] :: EbsVolumeType -> Text
pattern EbsVolumeType_Gp2 :: EbsVolumeType
pattern EbsVolumeType_Gp3 :: EbsVolumeType
pattern EbsVolumeType_Io1 :: EbsVolumeType
pattern EbsVolumeType_Io2 :: EbsVolumeType
pattern EbsVolumeType_Sc1 :: EbsVolumeType
pattern EbsVolumeType_St1 :: EbsVolumeType
pattern EbsVolumeType_Standard :: EbsVolumeType
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance GHC.Read.Read Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType
instance GHC.Show.Show Amazonka.ImageBuilder.Types.EbsVolumeType.EbsVolumeType


module Amazonka.ImageBuilder.Types.EbsInstanceBlockDeviceSpecification

-- | Amazon EBS-specific block device mapping specifications.
--   
--   <i>See:</i> <a>newEbsInstanceBlockDeviceSpecification</a> smart
--   constructor.
data EbsInstanceBlockDeviceSpecification
EbsInstanceBlockDeviceSpecification' :: Maybe Bool -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Bool -> Maybe Text -> Maybe EbsVolumeType -> Maybe Text -> EbsInstanceBlockDeviceSpecification

-- | Use to configure delete on termination of the associated device.
[$sel:deleteOnTermination:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Bool

-- | <b>For GP3 volumes only</b> – The throughput in MiB/s that the volume
--   supports.
[$sel:throughput:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Natural

-- | Use to override the device's volume size.
[$sel:volumeSize:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Natural

-- | Use to configure device IOPS.
[$sel:iops:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Natural

-- | Use to configure device encryption.
[$sel:encrypted:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Bool

-- | Use to configure the KMS key to use when encrypting the device.
[$sel:kmsKeyId:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Text

-- | Use to override the device's volume type.
[$sel:volumeType:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe EbsVolumeType

-- | The snapshot that defines the device contents.
[$sel:snapshotId:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Text

-- | Create a value of <a>EbsInstanceBlockDeviceSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteOnTermination:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_deleteOnTermination</a> - Use
--   to configure delete on termination of the associated device.
--   
--   <a>$sel:throughput:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_throughput</a> - <b>For GP3
--   volumes only</b> – The throughput in MiB/s that the volume supports.
--   
--   <a>$sel:volumeSize:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_volumeSize</a> - Use to
--   override the device's volume size.
--   
--   <a>$sel:iops:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_iops</a> - Use to configure
--   device IOPS.
--   
--   <a>$sel:encrypted:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_encrypted</a> - Use to
--   configure device encryption.
--   
--   <a>$sel:kmsKeyId:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_kmsKeyId</a> - Use to configure
--   the KMS key to use when encrypting the device.
--   
--   <a>$sel:volumeType:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_volumeType</a> - Use to
--   override the device's volume type.
--   
--   <a>$sel:snapshotId:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_snapshotId</a> - The snapshot
--   that defines the device contents.
newEbsInstanceBlockDeviceSpecification :: EbsInstanceBlockDeviceSpecification

-- | Use to configure delete on termination of the associated device.
ebsInstanceBlockDeviceSpecification_deleteOnTermination :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Bool)

-- | <b>For GP3 volumes only</b> – The throughput in MiB/s that the volume
--   supports.
ebsInstanceBlockDeviceSpecification_throughput :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Natural)

-- | Use to override the device's volume size.
ebsInstanceBlockDeviceSpecification_volumeSize :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Natural)

-- | Use to configure device IOPS.
ebsInstanceBlockDeviceSpecification_iops :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Natural)

-- | Use to configure device encryption.
ebsInstanceBlockDeviceSpecification_encrypted :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Bool)

-- | Use to configure the KMS key to use when encrypting the device.
ebsInstanceBlockDeviceSpecification_kmsKeyId :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Text)

-- | Use to override the device's volume type.
ebsInstanceBlockDeviceSpecification_volumeType :: Lens' EbsInstanceBlockDeviceSpecification (Maybe EbsVolumeType)

-- | The snapshot that defines the device contents.
ebsInstanceBlockDeviceSpecification_snapshotId :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.EbsInstanceBlockDeviceSpecification.EbsInstanceBlockDeviceSpecification
instance GHC.Show.Show Amazonka.ImageBuilder.Types.EbsInstanceBlockDeviceSpecification.EbsInstanceBlockDeviceSpecification
instance GHC.Read.Read Amazonka.ImageBuilder.Types.EbsInstanceBlockDeviceSpecification.EbsInstanceBlockDeviceSpecification
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.EbsInstanceBlockDeviceSpecification.EbsInstanceBlockDeviceSpecification
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.EbsInstanceBlockDeviceSpecification.EbsInstanceBlockDeviceSpecification
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.EbsInstanceBlockDeviceSpecification.EbsInstanceBlockDeviceSpecification
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.EbsInstanceBlockDeviceSpecification.EbsInstanceBlockDeviceSpecification
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.EbsInstanceBlockDeviceSpecification.EbsInstanceBlockDeviceSpecification


module Amazonka.ImageBuilder.Types.Filter

-- | A filter name and value pair that is used to return a more specific
--   list of results from a list operation. Filters can be used to match a
--   set of resources by specific criteria, such as tags, attributes, or
--   IDs.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe (NonEmpty Text) -> Maybe Text -> Filter

-- | The filter values. Filter values are case-sensitive.
[$sel:values:Filter'] :: Filter -> Maybe (NonEmpty Text)

-- | The name of the filter. Filter names are case-sensitive.
[$sel:name:Filter'] :: Filter -> Maybe Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - The filter values.
--   Filter values are case-sensitive.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   Filter names are case-sensitive.
newFilter :: Filter

-- | The filter values. Filter values are case-sensitive.
filter_values :: Lens' Filter (Maybe (NonEmpty Text))

-- | The name of the filter. Filter names are case-sensitive.
filter_name :: Lens' Filter (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.Filter.Filter
instance GHC.Show.Show Amazonka.ImageBuilder.Types.Filter.Filter
instance GHC.Read.Read Amazonka.ImageBuilder.Types.Filter.Filter
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.Filter.Filter
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.Filter.Filter
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.Filter.Filter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.Filter.Filter


module Amazonka.ImageBuilder.Types.ImagePackage

-- | Represents a package installed on an Image Builder image.
--   
--   <i>See:</i> <a>newImagePackage</a> smart constructor.
data ImagePackage
ImagePackage' :: Maybe Text -> Maybe Text -> ImagePackage

-- | The name of the package as reported to the operating system package
--   manager.
[$sel:packageName:ImagePackage'] :: ImagePackage -> Maybe Text

-- | The version of the package as reported to the operating system package
--   manager.
[$sel:packageVersion:ImagePackage'] :: ImagePackage -> Maybe Text

-- | Create a value of <a>ImagePackage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageName:ImagePackage'</a>, <a>imagePackage_packageName</a>
--   - The name of the package as reported to the operating system package
--   manager.
--   
--   <a>$sel:packageVersion:ImagePackage'</a>,
--   <a>imagePackage_packageVersion</a> - The version of the package as
--   reported to the operating system package manager.
newImagePackage :: ImagePackage

-- | The name of the package as reported to the operating system package
--   manager.
imagePackage_packageName :: Lens' ImagePackage (Maybe Text)

-- | The version of the package as reported to the operating system package
--   manager.
imagePackage_packageVersion :: Lens' ImagePackage (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ImagePackage.ImagePackage
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ImagePackage.ImagePackage
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ImagePackage.ImagePackage
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ImagePackage.ImagePackage
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ImagePackage.ImagePackage
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ImagePackage.ImagePackage
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ImagePackage.ImagePackage


module Amazonka.ImageBuilder.Types.ImageStatus
newtype ImageStatus
ImageStatus' :: Text -> ImageStatus
[fromImageStatus] :: ImageStatus -> Text
pattern ImageStatus_AVAILABLE :: ImageStatus
pattern ImageStatus_BUILDING :: ImageStatus
pattern ImageStatus_CANCELLED :: ImageStatus
pattern ImageStatus_CREATING :: ImageStatus
pattern ImageStatus_DELETED :: ImageStatus
pattern ImageStatus_DEPRECATED :: ImageStatus
pattern ImageStatus_DISTRIBUTING :: ImageStatus
pattern ImageStatus_FAILED :: ImageStatus
pattern ImageStatus_INTEGRATING :: ImageStatus
pattern ImageStatus_PENDING :: ImageStatus
pattern ImageStatus_TESTING :: ImageStatus
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ImageStatus.ImageStatus


module Amazonka.ImageBuilder.Types.ImageState

-- | Image state shows the image status and the reason for that status.
--   
--   <i>See:</i> <a>newImageState</a> smart constructor.
data ImageState
ImageState' :: Maybe ImageStatus -> Maybe Text -> ImageState

-- | The status of the image.
[$sel:status:ImageState'] :: ImageState -> Maybe ImageStatus

-- | The reason for the image's status.
[$sel:reason:ImageState'] :: ImageState -> Maybe Text

-- | Create a value of <a>ImageState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ImageState'</a>, <a>imageState_status</a> - The status
--   of the image.
--   
--   <a>$sel:reason:ImageState'</a>, <a>imageState_reason</a> - The reason
--   for the image's status.
newImageState :: ImageState

-- | The status of the image.
imageState_status :: Lens' ImageState (Maybe ImageStatus)

-- | The reason for the image's status.
imageState_reason :: Lens' ImageState (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ImageState.ImageState
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ImageState.ImageState
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ImageState.ImageState
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ImageState.ImageState
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ImageState.ImageState
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ImageState.ImageState
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ImageState.ImageState


module Amazonka.ImageBuilder.Types.Ami

-- | Details of an Amazon EC2 AMI.
--   
--   <i>See:</i> <a>newAmi</a> smart constructor.
data Ami
Ami' :: Maybe Text -> Maybe ImageState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Ami

-- | The AMI ID of the Amazon EC2 AMI.
[$sel:image:Ami'] :: Ami -> Maybe Text
[$sel:state:Ami'] :: Ami -> Maybe ImageState

-- | The account ID of the owner of the AMI.
[$sel:accountId:Ami'] :: Ami -> Maybe Text

-- | The name of the Amazon EC2 AMI.
[$sel:name:Ami'] :: Ami -> Maybe Text

-- | The Amazon Web Services Region of the Amazon EC2 AMI.
[$sel:region:Ami'] :: Ami -> Maybe Text

-- | The description of the Amazon EC2 AMI. Minimum and maximum length are
--   in characters.
[$sel:description:Ami'] :: Ami -> Maybe Text

-- | Create a value of <a>Ami</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:Ami'</a>, <a>ami_image</a> - The AMI ID of the Amazon
--   EC2 AMI.
--   
--   <a>$sel:state:Ami'</a>, <a>ami_state</a> - Undocumented member.
--   
--   <a>$sel:accountId:Ami'</a>, <a>ami_accountId</a> - The account ID of
--   the owner of the AMI.
--   
--   <a>$sel:name:Ami'</a>, <a>ami_name</a> - The name of the Amazon EC2
--   AMI.
--   
--   <a>$sel:region:Ami'</a>, <a>ami_region</a> - The Amazon Web Services
--   Region of the Amazon EC2 AMI.
--   
--   <a>$sel:description:Ami'</a>, <a>ami_description</a> - The description
--   of the Amazon EC2 AMI. Minimum and maximum length are in characters.
newAmi :: Ami

-- | The AMI ID of the Amazon EC2 AMI.
ami_image :: Lens' Ami (Maybe Text)

-- | Undocumented member.
ami_state :: Lens' Ami (Maybe ImageState)

-- | The account ID of the owner of the AMI.
ami_accountId :: Lens' Ami (Maybe Text)

-- | The name of the Amazon EC2 AMI.
ami_name :: Lens' Ami (Maybe Text)

-- | The Amazon Web Services Region of the Amazon EC2 AMI.
ami_region :: Lens' Ami (Maybe Text)

-- | The description of the Amazon EC2 AMI. Minimum and maximum length are
--   in characters.
ami_description :: Lens' Ami (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.Ami.Ami
instance GHC.Show.Show Amazonka.ImageBuilder.Types.Ami.Ami
instance GHC.Read.Read Amazonka.ImageBuilder.Types.Ami.Ami
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.Ami.Ami
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.Ami.Ami
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.Ami.Ami
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.Ami.Ami


module Amazonka.ImageBuilder.Types.ImageTestsConfiguration

-- | Image tests configuration.
--   
--   <i>See:</i> <a>newImageTestsConfiguration</a> smart constructor.
data ImageTestsConfiguration
ImageTestsConfiguration' :: Maybe Natural -> Maybe Bool -> ImageTestsConfiguration

-- | The maximum time in minutes that tests are permitted to run.
[$sel:timeoutMinutes:ImageTestsConfiguration'] :: ImageTestsConfiguration -> Maybe Natural

-- | Defines if tests should be executed when building this image.
[$sel:imageTestsEnabled:ImageTestsConfiguration'] :: ImageTestsConfiguration -> Maybe Bool

-- | Create a value of <a>ImageTestsConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutMinutes:ImageTestsConfiguration'</a>,
--   <a>imageTestsConfiguration_timeoutMinutes</a> - The maximum time in
--   minutes that tests are permitted to run.
--   
--   <a>$sel:imageTestsEnabled:ImageTestsConfiguration'</a>,
--   <a>imageTestsConfiguration_imageTestsEnabled</a> - Defines if tests
--   should be executed when building this image.
newImageTestsConfiguration :: ImageTestsConfiguration

-- | The maximum time in minutes that tests are permitted to run.
imageTestsConfiguration_timeoutMinutes :: Lens' ImageTestsConfiguration (Maybe Natural)

-- | Defines if tests should be executed when building this image.
imageTestsConfiguration_imageTestsEnabled :: Lens' ImageTestsConfiguration (Maybe Bool)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ImageTestsConfiguration.ImageTestsConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ImageTestsConfiguration.ImageTestsConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ImageTestsConfiguration.ImageTestsConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ImageTestsConfiguration.ImageTestsConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ImageTestsConfiguration.ImageTestsConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ImageTestsConfiguration.ImageTestsConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ImageTestsConfiguration.ImageTestsConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.ImageTestsConfiguration.ImageTestsConfiguration


module Amazonka.ImageBuilder.Types.ImageType
newtype ImageType
ImageType' :: Text -> ImageType
[fromImageType] :: ImageType -> Text
pattern ImageType_AMI :: ImageType
pattern ImageType_DOCKER :: ImageType
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ImageType.ImageType
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ImageType.ImageType
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ImageType.ImageType
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.ImageType.ImageType
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ImageType.ImageType
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ImageType.ImageType
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ImageType.ImageType


module Amazonka.ImageBuilder.Types.InfrastructureConfigurationSummary

-- | The infrastructure used when building Amazon EC2 AMIs.
--   
--   <i>See:</i> <a>newInfrastructureConfigurationSummary</a> smart
--   constructor.
data InfrastructureConfigurationSummary
InfrastructureConfigurationSummary' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> InfrastructureConfigurationSummary

-- | The instance types of the infrastructure configuration.
[$sel:instanceTypes:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the infrastructure configuration.
[$sel:arn:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The tags attached to the image created by Image Builder.
[$sel:resourceTags:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe (HashMap Text Text)

-- | The date on which the infrastructure configuration was last updated.
[$sel:dateUpdated:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The date on which the infrastructure configuration was created.
[$sel:dateCreated:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The name of the infrastructure configuration.
[$sel:name:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The instance profile of the infrastructure configuration.
[$sel:instanceProfileName:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The description of the infrastructure configuration.
[$sel:description:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The tags of the infrastructure configuration.
[$sel:tags:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>InfrastructureConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceTypes:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_instanceTypes</a> - The instance
--   types of the infrastructure configuration.
--   
--   <a>$sel:arn:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_arn</a> - The Amazon Resource
--   Name (ARN) of the infrastructure configuration.
--   
--   <a>$sel:resourceTags:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_resourceTags</a> - The tags
--   attached to the image created by Image Builder.
--   
--   <a>$sel:dateUpdated:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_dateUpdated</a> - The date on
--   which the infrastructure configuration was last updated.
--   
--   <a>$sel:dateCreated:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_dateCreated</a> - The date on
--   which the infrastructure configuration was created.
--   
--   <a>$sel:name:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_name</a> - The name of the
--   infrastructure configuration.
--   
--   <a>$sel:instanceProfileName:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_instanceProfileName</a> - The
--   instance profile of the infrastructure configuration.
--   
--   <a>$sel:description:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_description</a> - The
--   description of the infrastructure configuration.
--   
--   <a>$sel:tags:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_tags</a> - The tags of the
--   infrastructure configuration.
newInfrastructureConfigurationSummary :: InfrastructureConfigurationSummary

-- | The instance types of the infrastructure configuration.
infrastructureConfigurationSummary_instanceTypes :: Lens' InfrastructureConfigurationSummary (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the infrastructure configuration.
infrastructureConfigurationSummary_arn :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The tags attached to the image created by Image Builder.
infrastructureConfigurationSummary_resourceTags :: Lens' InfrastructureConfigurationSummary (Maybe (HashMap Text Text))

-- | The date on which the infrastructure configuration was last updated.
infrastructureConfigurationSummary_dateUpdated :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The date on which the infrastructure configuration was created.
infrastructureConfigurationSummary_dateCreated :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The name of the infrastructure configuration.
infrastructureConfigurationSummary_name :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The instance profile of the infrastructure configuration.
infrastructureConfigurationSummary_instanceProfileName :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The description of the infrastructure configuration.
infrastructureConfigurationSummary_description :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The tags of the infrastructure configuration.
infrastructureConfigurationSummary_tags :: Lens' InfrastructureConfigurationSummary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.InfrastructureConfigurationSummary.InfrastructureConfigurationSummary
instance GHC.Show.Show Amazonka.ImageBuilder.Types.InfrastructureConfigurationSummary.InfrastructureConfigurationSummary
instance GHC.Read.Read Amazonka.ImageBuilder.Types.InfrastructureConfigurationSummary.InfrastructureConfigurationSummary
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.InfrastructureConfigurationSummary.InfrastructureConfigurationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.InfrastructureConfigurationSummary.InfrastructureConfigurationSummary
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.InfrastructureConfigurationSummary.InfrastructureConfigurationSummary
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.InfrastructureConfigurationSummary.InfrastructureConfigurationSummary


module Amazonka.ImageBuilder.Types.InstanceBlockDeviceMapping

-- | Defines block device mappings for the instance used to configure your
--   image.
--   
--   <i>See:</i> <a>newInstanceBlockDeviceMapping</a> smart constructor.
data InstanceBlockDeviceMapping
InstanceBlockDeviceMapping' :: Maybe Text -> Maybe Text -> Maybe EbsInstanceBlockDeviceSpecification -> Maybe Text -> InstanceBlockDeviceMapping

-- | Use to manage instance ephemeral devices.
[$sel:virtualName:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe Text

-- | Use to remove a mapping from the base image.
[$sel:noDevice:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe Text

-- | Use to manage Amazon EBS-specific configuration for this mapping.
[$sel:ebs:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe EbsInstanceBlockDeviceSpecification

-- | The device to which these mappings apply.
[$sel:deviceName:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe Text

-- | Create a value of <a>InstanceBlockDeviceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualName:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_virtualName</a> - Use to manage instance
--   ephemeral devices.
--   
--   <a>$sel:noDevice:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_noDevice</a> - Use to remove a mapping
--   from the base image.
--   
--   <a>$sel:ebs:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_ebs</a> - Use to manage Amazon
--   EBS-specific configuration for this mapping.
--   
--   <a>$sel:deviceName:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_deviceName</a> - The device to which
--   these mappings apply.
newInstanceBlockDeviceMapping :: InstanceBlockDeviceMapping

-- | Use to manage instance ephemeral devices.
instanceBlockDeviceMapping_virtualName :: Lens' InstanceBlockDeviceMapping (Maybe Text)

-- | Use to remove a mapping from the base image.
instanceBlockDeviceMapping_noDevice :: Lens' InstanceBlockDeviceMapping (Maybe Text)

-- | Use to manage Amazon EBS-specific configuration for this mapping.
instanceBlockDeviceMapping_ebs :: Lens' InstanceBlockDeviceMapping (Maybe EbsInstanceBlockDeviceSpecification)

-- | The device to which these mappings apply.
instanceBlockDeviceMapping_deviceName :: Lens' InstanceBlockDeviceMapping (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance GHC.Show.Show Amazonka.ImageBuilder.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance GHC.Read.Read Amazonka.ImageBuilder.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.InstanceBlockDeviceMapping.InstanceBlockDeviceMapping


module Amazonka.ImageBuilder.Types.InstanceConfiguration

-- | Defines a custom base AMI and block device mapping configurations of
--   an instance used for building and testing container images.
--   
--   <i>See:</i> <a>newInstanceConfiguration</a> smart constructor.
data InstanceConfiguration
InstanceConfiguration' :: Maybe Text -> Maybe [InstanceBlockDeviceMapping] -> InstanceConfiguration

-- | The AMI ID to use as the base image for a container build and test
--   instance. If not specified, Image Builder will use the appropriate
--   ECS-optimized AMI as a base image.
[$sel:image:InstanceConfiguration'] :: InstanceConfiguration -> Maybe Text

-- | Defines the block devices to attach for building an instance from this
--   Image Builder AMI.
[$sel:blockDeviceMappings:InstanceConfiguration'] :: InstanceConfiguration -> Maybe [InstanceBlockDeviceMapping]

-- | Create a value of <a>InstanceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_image</a> - The AMI ID to use as the base
--   image for a container build and test instance. If not specified, Image
--   Builder will use the appropriate ECS-optimized AMI as a base image.
--   
--   <a>$sel:blockDeviceMappings:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_blockDeviceMappings</a> - Defines the block
--   devices to attach for building an instance from this Image Builder
--   AMI.
newInstanceConfiguration :: InstanceConfiguration

-- | The AMI ID to use as the base image for a container build and test
--   instance. If not specified, Image Builder will use the appropriate
--   ECS-optimized AMI as a base image.
instanceConfiguration_image :: Lens' InstanceConfiguration (Maybe Text)

-- | Defines the block devices to attach for building an instance from this
--   Image Builder AMI.
instanceConfiguration_blockDeviceMappings :: Lens' InstanceConfiguration (Maybe [InstanceBlockDeviceMapping])
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.InstanceConfiguration.InstanceConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.Types.InstanceConfiguration.InstanceConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.Types.InstanceConfiguration.InstanceConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.InstanceConfiguration.InstanceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.InstanceConfiguration.InstanceConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.InstanceConfiguration.InstanceConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.InstanceConfiguration.InstanceConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.InstanceConfiguration.InstanceConfiguration


module Amazonka.ImageBuilder.Types.InstanceMetadataOptions

-- | The instance metadata options that apply to the HTTP requests that
--   pipeline builds use to launch EC2 build and test instances. For more
--   information about instance metadata options, see <a>Configure the
--   instance metadata options</a> in the /<i>Amazon EC2 User Guide</i>/
--   for Linux instances, or <a>Configure the instance metadata options</a>
--   in the /<i>Amazon EC2 Windows Guide</i>/ for Windows instances.
--   
--   <i>See:</i> <a>newInstanceMetadataOptions</a> smart constructor.
data InstanceMetadataOptions
InstanceMetadataOptions' :: Maybe Natural -> Maybe Text -> InstanceMetadataOptions

-- | Limit the number of hops that an instance metadata request can
--   traverse to reach its destination.
[$sel:httpPutResponseHopLimit:InstanceMetadataOptions'] :: InstanceMetadataOptions -> Maybe Natural

-- | Indicates whether a signed token header is required for instance
--   metadata retrieval requests. The values affect the response as
--   follows:
--   
--   <ul>
--   <li><b>required</b> – When you retrieve the IAM role credentials,
--   version 2.0 credentials are returned in all cases.</li>
--   <li><b>optional</b> – You can include a signed token header in your
--   request to retrieve instance metadata, or you can leave it out. If you
--   include it, version 2.0 credentials are returned for the IAM role.
--   Otherwise, version 1.0 credentials are returned.</li>
--   </ul>
--   
--   The default setting is <b>optional</b>.
[$sel:httpTokens:InstanceMetadataOptions'] :: InstanceMetadataOptions -> Maybe Text

-- | Create a value of <a>InstanceMetadataOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpPutResponseHopLimit:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpPutResponseHopLimit</a> - Limit the
--   number of hops that an instance metadata request can traverse to reach
--   its destination.
--   
--   <a>$sel:httpTokens:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpTokens</a> - Indicates whether a signed
--   token header is required for instance metadata retrieval requests. The
--   values affect the response as follows:
--   
--   <ul>
--   <li><b>required</b> – When you retrieve the IAM role credentials,
--   version 2.0 credentials are returned in all cases.</li>
--   <li><b>optional</b> – You can include a signed token header in your
--   request to retrieve instance metadata, or you can leave it out. If you
--   include it, version 2.0 credentials are returned for the IAM role.
--   Otherwise, version 1.0 credentials are returned.</li>
--   </ul>
--   
--   The default setting is <b>optional</b>.
newInstanceMetadataOptions :: InstanceMetadataOptions

-- | Limit the number of hops that an instance metadata request can
--   traverse to reach its destination.
instanceMetadataOptions_httpPutResponseHopLimit :: Lens' InstanceMetadataOptions (Maybe Natural)

-- | Indicates whether a signed token header is required for instance
--   metadata retrieval requests. The values affect the response as
--   follows:
--   
--   <ul>
--   <li><b>required</b> – When you retrieve the IAM role credentials,
--   version 2.0 credentials are returned in all cases.</li>
--   <li><b>optional</b> – You can include a signed token header in your
--   request to retrieve instance metadata, or you can leave it out. If you
--   include it, version 2.0 credentials are returned for the IAM role.
--   Otherwise, version 1.0 credentials are returned.</li>
--   </ul>
--   
--   The default setting is <b>optional</b>.
instanceMetadataOptions_httpTokens :: Lens' InstanceMetadataOptions (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance GHC.Show.Show Amazonka.ImageBuilder.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance GHC.Read.Read Amazonka.ImageBuilder.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.InstanceMetadataOptions.InstanceMetadataOptions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.InstanceMetadataOptions.InstanceMetadataOptions


module Amazonka.ImageBuilder.Types.LaunchPermissionConfiguration

-- | Describes the configuration for a launch permission. The launch
--   permission modification request is sent to the <a>Amazon EC2
--   ModifyImageAttribute</a> API on behalf of the user for each Region
--   they have selected to distribute the AMI. To make an AMI public, set
--   the launch permission authorized accounts to <tt>all</tt>. See the
--   examples for making an AMI public at <a>Amazon EC2
--   ModifyImageAttribute</a>.
--   
--   <i>See:</i> <a>newLaunchPermissionConfiguration</a> smart constructor.
data LaunchPermissionConfiguration
LaunchPermissionConfiguration' :: Maybe (NonEmpty Text) -> Maybe [Text] -> LaunchPermissionConfiguration

-- | The Amazon Web Services account ID.
[$sel:userIds:LaunchPermissionConfiguration'] :: LaunchPermissionConfiguration -> Maybe (NonEmpty Text)

-- | The name of the group.
[$sel:userGroups:LaunchPermissionConfiguration'] :: LaunchPermissionConfiguration -> Maybe [Text]

-- | Create a value of <a>LaunchPermissionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIds:LaunchPermissionConfiguration'</a>,
--   <a>launchPermissionConfiguration_userIds</a> - The Amazon Web Services
--   account ID.
--   
--   <a>$sel:userGroups:LaunchPermissionConfiguration'</a>,
--   <a>launchPermissionConfiguration_userGroups</a> - The name of the
--   group.
newLaunchPermissionConfiguration :: LaunchPermissionConfiguration

-- | The Amazon Web Services account ID.
launchPermissionConfiguration_userIds :: Lens' LaunchPermissionConfiguration (Maybe (NonEmpty Text))

-- | The name of the group.
launchPermissionConfiguration_userGroups :: Lens' LaunchPermissionConfiguration (Maybe [Text])
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.LaunchPermissionConfiguration.LaunchPermissionConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.Types.LaunchPermissionConfiguration.LaunchPermissionConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.Types.LaunchPermissionConfiguration.LaunchPermissionConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.LaunchPermissionConfiguration.LaunchPermissionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.LaunchPermissionConfiguration.LaunchPermissionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.LaunchPermissionConfiguration.LaunchPermissionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.LaunchPermissionConfiguration.LaunchPermissionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.LaunchPermissionConfiguration.LaunchPermissionConfiguration


module Amazonka.ImageBuilder.Types.AmiDistributionConfiguration

-- | Define and configure the output AMIs of the pipeline.
--   
--   <i>See:</i> <a>newAmiDistributionConfiguration</a> smart constructor.
data AmiDistributionConfiguration
AmiDistributionConfiguration' :: Maybe LaunchPermissionConfiguration -> Maybe (NonEmpty Text) -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> AmiDistributionConfiguration

-- | Launch permissions can be used to configure which Amazon Web Services
--   accounts can use the AMI to launch instances.
[$sel:launchPermission:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe LaunchPermissionConfiguration

-- | The ID of an account to which you want to distribute an image.
[$sel:targetAccountIds:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe (NonEmpty Text)

-- | The tags to apply to AMIs distributed to this Region.
[$sel:amiTags:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe (HashMap Text Text)

-- | The name of the output AMI.
[$sel:name:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe Text

-- | The KMS key identifier used to encrypt the distributed image.
[$sel:kmsKeyId:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe Text

-- | The description of the distribution configuration. Minimum and maximum
--   length are in characters.
[$sel:description:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe Text

-- | Create a value of <a>AmiDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchPermission:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_launchPermission</a> - Launch
--   permissions can be used to configure which Amazon Web Services
--   accounts can use the AMI to launch instances.
--   
--   <a>$sel:targetAccountIds:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_targetAccountIds</a> - The ID of an
--   account to which you want to distribute an image.
--   
--   <a>$sel:amiTags:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_amiTags</a> - The tags to apply to
--   AMIs distributed to this Region.
--   
--   <a>$sel:name:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_name</a> - The name of the output AMI.
--   
--   <a>$sel:kmsKeyId:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_kmsKeyId</a> - The KMS key identifier
--   used to encrypt the distributed image.
--   
--   <a>$sel:description:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_description</a> - The description of
--   the distribution configuration. Minimum and maximum length are in
--   characters.
newAmiDistributionConfiguration :: AmiDistributionConfiguration

-- | Launch permissions can be used to configure which Amazon Web Services
--   accounts can use the AMI to launch instances.
amiDistributionConfiguration_launchPermission :: Lens' AmiDistributionConfiguration (Maybe LaunchPermissionConfiguration)

-- | The ID of an account to which you want to distribute an image.
amiDistributionConfiguration_targetAccountIds :: Lens' AmiDistributionConfiguration (Maybe (NonEmpty Text))

-- | The tags to apply to AMIs distributed to this Region.
amiDistributionConfiguration_amiTags :: Lens' AmiDistributionConfiguration (Maybe (HashMap Text Text))

-- | The name of the output AMI.
amiDistributionConfiguration_name :: Lens' AmiDistributionConfiguration (Maybe Text)

-- | The KMS key identifier used to encrypt the distributed image.
amiDistributionConfiguration_kmsKeyId :: Lens' AmiDistributionConfiguration (Maybe Text)

-- | The description of the distribution configuration. Minimum and maximum
--   length are in characters.
amiDistributionConfiguration_description :: Lens' AmiDistributionConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.AmiDistributionConfiguration.AmiDistributionConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.Types.AmiDistributionConfiguration.AmiDistributionConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.Types.AmiDistributionConfiguration.AmiDistributionConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.AmiDistributionConfiguration.AmiDistributionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.AmiDistributionConfiguration.AmiDistributionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.AmiDistributionConfiguration.AmiDistributionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.AmiDistributionConfiguration.AmiDistributionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.AmiDistributionConfiguration.AmiDistributionConfiguration


module Amazonka.ImageBuilder.Types.LaunchTemplateConfiguration

-- | Identifies an Amazon EC2 launch template to use for a specific
--   account.
--   
--   <i>See:</i> <a>newLaunchTemplateConfiguration</a> smart constructor.
data LaunchTemplateConfiguration
LaunchTemplateConfiguration' :: Maybe Bool -> Maybe Text -> Text -> LaunchTemplateConfiguration

-- | Set the specified Amazon EC2 launch template as the default launch
--   template for the specified account.
[$sel:setDefaultVersion:LaunchTemplateConfiguration'] :: LaunchTemplateConfiguration -> Maybe Bool

-- | The account ID that this configuration applies to.
[$sel:accountId:LaunchTemplateConfiguration'] :: LaunchTemplateConfiguration -> Maybe Text

-- | Identifies the Amazon EC2 launch template to use.
[$sel:launchTemplateId:LaunchTemplateConfiguration'] :: LaunchTemplateConfiguration -> Text

-- | Create a value of <a>LaunchTemplateConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:setDefaultVersion:LaunchTemplateConfiguration'</a>,
--   <a>launchTemplateConfiguration_setDefaultVersion</a> - Set the
--   specified Amazon EC2 launch template as the default launch template
--   for the specified account.
--   
--   <a>$sel:accountId:LaunchTemplateConfiguration'</a>,
--   <a>launchTemplateConfiguration_accountId</a> - The account ID that
--   this configuration applies to.
--   
--   <a>$sel:launchTemplateId:LaunchTemplateConfiguration'</a>,
--   <a>launchTemplateConfiguration_launchTemplateId</a> - Identifies the
--   Amazon EC2 launch template to use.
newLaunchTemplateConfiguration :: Text -> LaunchTemplateConfiguration

-- | Set the specified Amazon EC2 launch template as the default launch
--   template for the specified account.
launchTemplateConfiguration_setDefaultVersion :: Lens' LaunchTemplateConfiguration (Maybe Bool)

-- | The account ID that this configuration applies to.
launchTemplateConfiguration_accountId :: Lens' LaunchTemplateConfiguration (Maybe Text)

-- | Identifies the Amazon EC2 launch template to use.
launchTemplateConfiguration_launchTemplateId :: Lens' LaunchTemplateConfiguration Text
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.LaunchTemplateConfiguration.LaunchTemplateConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.Types.LaunchTemplateConfiguration.LaunchTemplateConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.Types.LaunchTemplateConfiguration.LaunchTemplateConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.LaunchTemplateConfiguration.LaunchTemplateConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.LaunchTemplateConfiguration.LaunchTemplateConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.LaunchTemplateConfiguration.LaunchTemplateConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.LaunchTemplateConfiguration.LaunchTemplateConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.LaunchTemplateConfiguration.LaunchTemplateConfiguration


module Amazonka.ImageBuilder.Types.OutputResources

-- | The resources produced by this image.
--   
--   <i>See:</i> <a>newOutputResources</a> smart constructor.
data OutputResources
OutputResources' :: Maybe [Container] -> Maybe [Ami] -> OutputResources

-- | Container images that the pipeline has generated and stored in the
--   output repository.
[$sel:containers:OutputResources'] :: OutputResources -> Maybe [Container]

-- | The Amazon EC2 AMIs created by this image.
[$sel:amis:OutputResources'] :: OutputResources -> Maybe [Ami]

-- | Create a value of <a>OutputResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containers:OutputResources'</a>,
--   <a>outputResources_containers</a> - Container images that the pipeline
--   has generated and stored in the output repository.
--   
--   <a>$sel:amis:OutputResources'</a>, <a>outputResources_amis</a> - The
--   Amazon EC2 AMIs created by this image.
newOutputResources :: OutputResources

-- | Container images that the pipeline has generated and stored in the
--   output repository.
outputResources_containers :: Lens' OutputResources (Maybe [Container])

-- | The Amazon EC2 AMIs created by this image.
outputResources_amis :: Lens' OutputResources (Maybe [Ami])
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.OutputResources.OutputResources
instance GHC.Show.Show Amazonka.ImageBuilder.Types.OutputResources.OutputResources
instance GHC.Read.Read Amazonka.ImageBuilder.Types.OutputResources.OutputResources
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.OutputResources.OutputResources
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.OutputResources.OutputResources
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.OutputResources.OutputResources
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.OutputResources.OutputResources


module Amazonka.ImageBuilder.Types.Ownership
newtype Ownership
Ownership' :: Text -> Ownership
[fromOwnership] :: Ownership -> Text
pattern Ownership_Amazon :: Ownership
pattern Ownership_Self :: Ownership
pattern Ownership_Shared :: Ownership
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.Ownership.Ownership
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.Ownership.Ownership
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.Ownership.Ownership
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.Ownership.Ownership
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.Ownership.Ownership
instance GHC.Read.Read Amazonka.ImageBuilder.Types.Ownership.Ownership
instance GHC.Show.Show Amazonka.ImageBuilder.Types.Ownership.Ownership


module Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition
newtype PipelineExecutionStartCondition
PipelineExecutionStartCondition' :: Text -> PipelineExecutionStartCondition
[fromPipelineExecutionStartCondition] :: PipelineExecutionStartCondition -> Text
pattern PipelineExecutionStartCondition_EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE :: PipelineExecutionStartCondition
pattern PipelineExecutionStartCondition_EXPRESSION_MATCH_ONLY :: PipelineExecutionStartCondition
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance GHC.Read.Read Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition
instance GHC.Show.Show Amazonka.ImageBuilder.Types.PipelineExecutionStartCondition.PipelineExecutionStartCondition


module Amazonka.ImageBuilder.Types.PipelineStatus
newtype PipelineStatus
PipelineStatus' :: Text -> PipelineStatus
[fromPipelineStatus] :: PipelineStatus -> Text
pattern PipelineStatus_DISABLED :: PipelineStatus
pattern PipelineStatus_ENABLED :: PipelineStatus
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance GHC.Read.Read Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus
instance GHC.Show.Show Amazonka.ImageBuilder.Types.PipelineStatus.PipelineStatus


module Amazonka.ImageBuilder.Types.Platform
newtype Platform
Platform' :: Text -> Platform
[fromPlatform] :: Platform -> Text
pattern Platform_Linux :: Platform
pattern Platform_Windows :: Platform
instance Amazonka.Data.XML.ToXML Amazonka.ImageBuilder.Types.Platform.Platform
instance Amazonka.Data.XML.FromXML Amazonka.ImageBuilder.Types.Platform.Platform
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.ImageBuilder.Types.Platform.Platform
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.Platform.Platform
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.ImageBuilder.Types.Platform.Platform
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.Platform.Platform
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.Types.Platform.Platform
instance Amazonka.Data.Headers.ToHeader Amazonka.ImageBuilder.Types.Platform.Platform
instance Amazonka.Data.Log.ToLog Amazonka.ImageBuilder.Types.Platform.Platform
instance Amazonka.Data.ByteString.ToByteString Amazonka.ImageBuilder.Types.Platform.Platform
instance Amazonka.Data.Text.ToText Amazonka.ImageBuilder.Types.Platform.Platform
instance Amazonka.Data.Text.FromText Amazonka.ImageBuilder.Types.Platform.Platform
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.Platform.Platform
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.Platform.Platform
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.Platform.Platform
instance GHC.Classes.Ord Amazonka.ImageBuilder.Types.Platform.Platform
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.Platform.Platform
instance GHC.Read.Read Amazonka.ImageBuilder.Types.Platform.Platform
instance GHC.Show.Show Amazonka.ImageBuilder.Types.Platform.Platform


module Amazonka.ImageBuilder.Types.ImageVersion

-- | The defining characteristics of a specific version of an Image Builder
--   image.
--   
--   <i>See:</i> <a>newImageVersion</a> smart constructor.
data ImageVersion
ImageVersion' :: Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ImageType -> Maybe Text -> ImageVersion

-- | The platform of the image version, for example "Windows" or "Linux".
[$sel:platform:ImageVersion'] :: ImageVersion -> Maybe Platform

-- | The Amazon Resource Name (ARN) of a specific version of an Image
--   Builder image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
[$sel:arn:ImageVersion'] :: ImageVersion -> Maybe Text

-- | The owner of the image version.
[$sel:owner:ImageVersion'] :: ImageVersion -> Maybe Text

-- | The date on which this specific version of the Image Builder image was
--   created.
[$sel:dateCreated:ImageVersion'] :: ImageVersion -> Maybe Text

-- | The name of this specific version of an Image Builder image.
[$sel:name:ImageVersion'] :: ImageVersion -> Maybe Text

-- | Details for a specific version of an Image Builder image. This version
--   follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
[$sel:version:ImageVersion'] :: ImageVersion -> Maybe Text

-- | Specifies whether this image is an AMI or a container image.
[$sel:type':ImageVersion'] :: ImageVersion -> Maybe ImageType

-- | The operating system version of the Amazon EC2 build instance. For
--   example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
[$sel:osVersion:ImageVersion'] :: ImageVersion -> Maybe Text

-- | Create a value of <a>ImageVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:ImageVersion'</a>, <a>imageVersion_platform</a> - The
--   platform of the image version, for example "Windows" or "Linux".
--   
--   <a>$sel:arn:ImageVersion'</a>, <a>imageVersion_arn</a> - The Amazon
--   Resource Name (ARN) of a specific version of an Image Builder image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:owner:ImageVersion'</a>, <a>imageVersion_owner</a> - The owner
--   of the image version.
--   
--   <a>$sel:dateCreated:ImageVersion'</a>, <a>imageVersion_dateCreated</a>
--   - The date on which this specific version of the Image Builder image
--   was created.
--   
--   <a>$sel:name:ImageVersion'</a>, <a>imageVersion_name</a> - The name of
--   this specific version of an Image Builder image.
--   
--   <a>$sel:version:ImageVersion'</a>, <a>imageVersion_version</a> -
--   Details for a specific version of an Image Builder image. This version
--   follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:type':ImageVersion'</a>, <a>imageVersion_type</a> - Specifies
--   whether this image is an AMI or a container image.
--   
--   <a>$sel:osVersion:ImageVersion'</a>, <a>imageVersion_osVersion</a> -
--   The operating system version of the Amazon EC2 build instance. For
--   example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
newImageVersion :: ImageVersion

-- | The platform of the image version, for example "Windows" or "Linux".
imageVersion_platform :: Lens' ImageVersion (Maybe Platform)

-- | The Amazon Resource Name (ARN) of a specific version of an Image
--   Builder image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
imageVersion_arn :: Lens' ImageVersion (Maybe Text)

-- | The owner of the image version.
imageVersion_owner :: Lens' ImageVersion (Maybe Text)

-- | The date on which this specific version of the Image Builder image was
--   created.
imageVersion_dateCreated :: Lens' ImageVersion (Maybe Text)

-- | The name of this specific version of an Image Builder image.
imageVersion_name :: Lens' ImageVersion (Maybe Text)

-- | Details for a specific version of an Image Builder image. This version
--   follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
imageVersion_version :: Lens' ImageVersion (Maybe Text)

-- | Specifies whether this image is an AMI or a container image.
imageVersion_type :: Lens' ImageVersion (Maybe ImageType)

-- | The operating system version of the Amazon EC2 build instance. For
--   example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
imageVersion_osVersion :: Lens' ImageVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ImageVersion.ImageVersion
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ImageVersion.ImageVersion
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ImageVersion.ImageVersion
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ImageVersion.ImageVersion
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ImageVersion.ImageVersion
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ImageVersion.ImageVersion
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ImageVersion.ImageVersion


module Amazonka.ImageBuilder.Types.ImageSummary

-- | An image summary.
--   
--   <i>See:</i> <a>newImageSummary</a> smart constructor.
data ImageSummary
ImageSummary' :: Maybe ImageState -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ImageType -> Maybe OutputResources -> Maybe Text -> Maybe (HashMap Text Text) -> ImageSummary

-- | The state of the image.
[$sel:state:ImageSummary'] :: ImageSummary -> Maybe ImageState

-- | The platform of the image.
[$sel:platform:ImageSummary'] :: ImageSummary -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the image.
[$sel:arn:ImageSummary'] :: ImageSummary -> Maybe Text

-- | The owner of the image.
[$sel:owner:ImageSummary'] :: ImageSummary -> Maybe Text

-- | The date on which this image was created.
[$sel:dateCreated:ImageSummary'] :: ImageSummary -> Maybe Text

-- | The name of the image.
[$sel:name:ImageSummary'] :: ImageSummary -> Maybe Text

-- | The version of the image.
[$sel:version:ImageSummary'] :: ImageSummary -> Maybe Text

-- | Specifies whether this is an AMI or container image.
[$sel:type':ImageSummary'] :: ImageSummary -> Maybe ImageType

-- | The output resources produced when creating this image.
[$sel:outputResources:ImageSummary'] :: ImageSummary -> Maybe OutputResources

-- | The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
[$sel:osVersion:ImageSummary'] :: ImageSummary -> Maybe Text

-- | The tags of the image.
[$sel:tags:ImageSummary'] :: ImageSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>ImageSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ImageSummary'</a>, <a>imageSummary_state</a> - The state
--   of the image.
--   
--   <a>$sel:platform:ImageSummary'</a>, <a>imageSummary_platform</a> - The
--   platform of the image.
--   
--   <a>$sel:arn:ImageSummary'</a>, <a>imageSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the image.
--   
--   <a>$sel:owner:ImageSummary'</a>, <a>imageSummary_owner</a> - The owner
--   of the image.
--   
--   <a>$sel:dateCreated:ImageSummary'</a>, <a>imageSummary_dateCreated</a>
--   - The date on which this image was created.
--   
--   <a>$sel:name:ImageSummary'</a>, <a>imageSummary_name</a> - The name of
--   the image.
--   
--   <a>$sel:version:ImageSummary'</a>, <a>imageSummary_version</a> - The
--   version of the image.
--   
--   <a>$sel:type':ImageSummary'</a>, <a>imageSummary_type</a> - Specifies
--   whether this is an AMI or container image.
--   
--   <a>$sel:outputResources:ImageSummary'</a>,
--   <a>imageSummary_outputResources</a> - The output resources produced
--   when creating this image.
--   
--   <a>$sel:osVersion:ImageSummary'</a>, <a>imageSummary_osVersion</a> -
--   The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
--   
--   <a>$sel:tags:ImageSummary'</a>, <a>imageSummary_tags</a> - The tags of
--   the image.
newImageSummary :: ImageSummary

-- | The state of the image.
imageSummary_state :: Lens' ImageSummary (Maybe ImageState)

-- | The platform of the image.
imageSummary_platform :: Lens' ImageSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the image.
imageSummary_arn :: Lens' ImageSummary (Maybe Text)

-- | The owner of the image.
imageSummary_owner :: Lens' ImageSummary (Maybe Text)

-- | The date on which this image was created.
imageSummary_dateCreated :: Lens' ImageSummary (Maybe Text)

-- | The name of the image.
imageSummary_name :: Lens' ImageSummary (Maybe Text)

-- | The version of the image.
imageSummary_version :: Lens' ImageSummary (Maybe Text)

-- | Specifies whether this is an AMI or container image.
imageSummary_type :: Lens' ImageSummary (Maybe ImageType)

-- | The output resources produced when creating this image.
imageSummary_outputResources :: Lens' ImageSummary (Maybe OutputResources)

-- | The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
imageSummary_osVersion :: Lens' ImageSummary (Maybe Text)

-- | The tags of the image.
imageSummary_tags :: Lens' ImageSummary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ImageSummary.ImageSummary
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ImageSummary.ImageSummary
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ImageSummary.ImageSummary
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ImageSummary.ImageSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ImageSummary.ImageSummary
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ImageSummary.ImageSummary
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ImageSummary.ImageSummary


module Amazonka.ImageBuilder.Types.ImageRecipeSummary

-- | A summary of an image recipe.
--   
--   <i>See:</i> <a>newImageRecipeSummary</a> smart constructor.
data ImageRecipeSummary
ImageRecipeSummary' :: Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ImageRecipeSummary

-- | The platform of the image recipe.
[$sel:platform:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the image recipe.
[$sel:arn:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Text

-- | The base image of the image recipe.
[$sel:parentImage:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Text

-- | The owner of the image recipe.
[$sel:owner:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Text

-- | The date on which this image recipe was created.
[$sel:dateCreated:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Text

-- | The name of the image recipe.
[$sel:name:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Text

-- | The tags of the image recipe.
[$sel:tags:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>ImageRecipeSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:ImageRecipeSummary'</a>,
--   <a>imageRecipeSummary_platform</a> - The platform of the image recipe.
--   
--   <a>$sel:arn:ImageRecipeSummary'</a>, <a>imageRecipeSummary_arn</a> -
--   The Amazon Resource Name (ARN) of the image recipe.
--   
--   <a>$sel:parentImage:ImageRecipeSummary'</a>,
--   <a>imageRecipeSummary_parentImage</a> - The base image of the image
--   recipe.
--   
--   <a>$sel:owner:ImageRecipeSummary'</a>, <a>imageRecipeSummary_owner</a>
--   - The owner of the image recipe.
--   
--   <a>$sel:dateCreated:ImageRecipeSummary'</a>,
--   <a>imageRecipeSummary_dateCreated</a> - The date on which this image
--   recipe was created.
--   
--   <a>$sel:name:ImageRecipeSummary'</a>, <a>imageRecipeSummary_name</a> -
--   The name of the image recipe.
--   
--   <a>$sel:tags:ImageRecipeSummary'</a>, <a>imageRecipeSummary_tags</a> -
--   The tags of the image recipe.
newImageRecipeSummary :: ImageRecipeSummary

-- | The platform of the image recipe.
imageRecipeSummary_platform :: Lens' ImageRecipeSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the image recipe.
imageRecipeSummary_arn :: Lens' ImageRecipeSummary (Maybe Text)

-- | The base image of the image recipe.
imageRecipeSummary_parentImage :: Lens' ImageRecipeSummary (Maybe Text)

-- | The owner of the image recipe.
imageRecipeSummary_owner :: Lens' ImageRecipeSummary (Maybe Text)

-- | The date on which this image recipe was created.
imageRecipeSummary_dateCreated :: Lens' ImageRecipeSummary (Maybe Text)

-- | The name of the image recipe.
imageRecipeSummary_name :: Lens' ImageRecipeSummary (Maybe Text)

-- | The tags of the image recipe.
imageRecipeSummary_tags :: Lens' ImageRecipeSummary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ImageRecipeSummary.ImageRecipeSummary
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ImageRecipeSummary.ImageRecipeSummary
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ImageRecipeSummary.ImageRecipeSummary
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ImageRecipeSummary.ImageRecipeSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ImageRecipeSummary.ImageRecipeSummary
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ImageRecipeSummary.ImageRecipeSummary
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ImageRecipeSummary.ImageRecipeSummary


module Amazonka.ImageBuilder.Types.ContainerRecipeSummary

-- | A summary of a container recipe
--   
--   <i>See:</i> <a>newContainerRecipeSummary</a> smart constructor.
data ContainerRecipeSummary
ContainerRecipeSummary' :: Maybe ContainerType -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ContainerRecipeSummary

-- | Specifies the type of container, such as "Docker".
[$sel:containerType:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe ContainerType

-- | The system platform for the container, such as Windows or Linux.
[$sel:platform:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the container recipe.
[$sel:arn:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Text

-- | The base image for the container recipe.
[$sel:parentImage:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Text

-- | The owner of the container recipe.
[$sel:owner:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Text

-- | The date when this container recipe was created.
[$sel:dateCreated:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Text

-- | The name of the container recipe.
[$sel:name:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Text

-- | Tags that are attached to the container recipe.
[$sel:tags:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>ContainerRecipeSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerType:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_containerType</a> - Specifies the type of
--   container, such as "Docker".
--   
--   <a>$sel:platform:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_platform</a> - The system platform for the
--   container, such as Windows or Linux.
--   
--   <a>$sel:arn:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_arn</a> - The Amazon Resource Name (ARN) of
--   the container recipe.
--   
--   <a>$sel:parentImage:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_parentImage</a> - The base image for the
--   container recipe.
--   
--   <a>$sel:owner:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_owner</a> - The owner of the container
--   recipe.
--   
--   <a>$sel:dateCreated:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_dateCreated</a> - The date when this
--   container recipe was created.
--   
--   <a>$sel:name:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_name</a> - The name of the container recipe.
--   
--   <a>$sel:tags:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_tags</a> - Tags that are attached to the
--   container recipe.
newContainerRecipeSummary :: ContainerRecipeSummary

-- | Specifies the type of container, such as "Docker".
containerRecipeSummary_containerType :: Lens' ContainerRecipeSummary (Maybe ContainerType)

-- | The system platform for the container, such as Windows or Linux.
containerRecipeSummary_platform :: Lens' ContainerRecipeSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the container recipe.
containerRecipeSummary_arn :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The base image for the container recipe.
containerRecipeSummary_parentImage :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The owner of the container recipe.
containerRecipeSummary_owner :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The date when this container recipe was created.
containerRecipeSummary_dateCreated :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The name of the container recipe.
containerRecipeSummary_name :: Lens' ContainerRecipeSummary (Maybe Text)

-- | Tags that are attached to the container recipe.
containerRecipeSummary_tags :: Lens' ContainerRecipeSummary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ContainerRecipeSummary.ContainerRecipeSummary
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ContainerRecipeSummary.ContainerRecipeSummary
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ContainerRecipeSummary.ContainerRecipeSummary
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ContainerRecipeSummary.ContainerRecipeSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ContainerRecipeSummary.ContainerRecipeSummary
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ContainerRecipeSummary.ContainerRecipeSummary
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ContainerRecipeSummary.ContainerRecipeSummary


module Amazonka.ImageBuilder.Types.ComponentVersion

-- | The defining characteristics of a specific version of an Amazon Web
--   Services TOE component.
--   
--   <i>See:</i> <a>newComponentVersion</a> smart constructor.
data ComponentVersion
ComponentVersion' :: Maybe Platform -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ComponentType -> Maybe Text -> ComponentVersion

-- | The platform of the component.
[$sel:platform:ComponentVersion'] :: ComponentVersion -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the component.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
[$sel:arn:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | he operating system (OS) version supported by the component. If the OS
--   information is available, a prefix match is performed against the base
--   image OS version during image recipe creation.
[$sel:supportedOsVersions:ComponentVersion'] :: ComponentVersion -> Maybe (NonEmpty Text)

-- | The owner of the component.
[$sel:owner:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | The date that the component was created.
[$sel:dateCreated:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | The name of the component.
[$sel:name:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | The semantic version of the component.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
[$sel:version:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
[$sel:type':ComponentVersion'] :: ComponentVersion -> Maybe ComponentType

-- | The description of the component.
[$sel:description:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | Create a value of <a>ComponentVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:ComponentVersion'</a>,
--   <a>componentVersion_platform</a> - The platform of the component.
--   
--   <a>$sel:arn:ComponentVersion'</a>, <a>componentVersion_arn</a> - The
--   Amazon Resource Name (ARN) of the component.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:supportedOsVersions:ComponentVersion'</a>,
--   <a>componentVersion_supportedOsVersions</a> - he operating system (OS)
--   version supported by the component. If the OS information is
--   available, a prefix match is performed against the base image OS
--   version during image recipe creation.
--   
--   <a>$sel:owner:ComponentVersion'</a>, <a>componentVersion_owner</a> -
--   The owner of the component.
--   
--   <a>$sel:dateCreated:ComponentVersion'</a>,
--   <a>componentVersion_dateCreated</a> - The date that the component was
--   created.
--   
--   <a>$sel:name:ComponentVersion'</a>, <a>componentVersion_name</a> - The
--   name of the component.
--   
--   <a>$sel:version:ComponentVersion'</a>, <a>componentVersion_version</a>
--   - The semantic version of the component.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:type':ComponentVersion'</a>, <a>componentVersion_type</a> -
--   The type of the component denotes whether the component is used to
--   build the image or only to test it.
--   
--   <a>$sel:description:ComponentVersion'</a>,
--   <a>componentVersion_description</a> - The description of the
--   component.
newComponentVersion :: ComponentVersion

-- | The platform of the component.
componentVersion_platform :: Lens' ComponentVersion (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the component.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
componentVersion_arn :: Lens' ComponentVersion (Maybe Text)

-- | he operating system (OS) version supported by the component. If the OS
--   information is available, a prefix match is performed against the base
--   image OS version during image recipe creation.
componentVersion_supportedOsVersions :: Lens' ComponentVersion (Maybe (NonEmpty Text))

-- | The owner of the component.
componentVersion_owner :: Lens' ComponentVersion (Maybe Text)

-- | The date that the component was created.
componentVersion_dateCreated :: Lens' ComponentVersion (Maybe Text)

-- | The name of the component.
componentVersion_name :: Lens' ComponentVersion (Maybe Text)

-- | The semantic version of the component.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
componentVersion_version :: Lens' ComponentVersion (Maybe Text)

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
componentVersion_type :: Lens' ComponentVersion (Maybe ComponentType)

-- | The description of the component.
componentVersion_description :: Lens' ComponentVersion (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ComponentVersion.ComponentVersion
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ComponentVersion.ComponentVersion
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ComponentVersion.ComponentVersion
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ComponentVersion.ComponentVersion
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ComponentVersion.ComponentVersion
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ComponentVersion.ComponentVersion
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ComponentVersion.ComponentVersion


module Amazonka.ImageBuilder.Types.ComponentSummary

-- | A high-level summary of a component.
--   
--   <i>See:</i> <a>newComponentSummary</a> smart constructor.
data ComponentSummary
ComponentSummary' :: Maybe ComponentState -> Maybe Platform -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ComponentType -> Maybe Text -> Maybe (HashMap Text Text) -> ComponentSummary

-- | Describes the current status of the component.
[$sel:state:ComponentSummary'] :: ComponentSummary -> Maybe ComponentState

-- | The platform of the component.
[$sel:platform:ComponentSummary'] :: ComponentSummary -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the component.
[$sel:arn:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
[$sel:supportedOsVersions:ComponentSummary'] :: ComponentSummary -> Maybe (NonEmpty Text)

-- | The owner of the component.
[$sel:owner:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The date that the component was created.
[$sel:dateCreated:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The name of the component.
[$sel:name:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The version of the component.
[$sel:version:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The change description of the component.
[$sel:changeDescription:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
[$sel:type':ComponentSummary'] :: ComponentSummary -> Maybe ComponentType

-- | The description of the component.
[$sel:description:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The tags associated with the component.
[$sel:tags:ComponentSummary'] :: ComponentSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>ComponentSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ComponentSummary'</a>, <a>componentSummary_state</a> -
--   Describes the current status of the component.
--   
--   <a>$sel:platform:ComponentSummary'</a>,
--   <a>componentSummary_platform</a> - The platform of the component.
--   
--   <a>$sel:arn:ComponentSummary'</a>, <a>componentSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the component.
--   
--   <a>$sel:supportedOsVersions:ComponentSummary'</a>,
--   <a>componentSummary_supportedOsVersions</a> - The operating system
--   (OS) version supported by the component. If the OS information is
--   available, a prefix match is performed against the base image OS
--   version during image recipe creation.
--   
--   <a>$sel:owner:ComponentSummary'</a>, <a>componentSummary_owner</a> -
--   The owner of the component.
--   
--   <a>$sel:dateCreated:ComponentSummary'</a>,
--   <a>componentSummary_dateCreated</a> - The date that the component was
--   created.
--   
--   <a>$sel:name:ComponentSummary'</a>, <a>componentSummary_name</a> - The
--   name of the component.
--   
--   <a>$sel:version:ComponentSummary'</a>, <a>componentSummary_version</a>
--   - The version of the component.
--   
--   <a>$sel:changeDescription:ComponentSummary'</a>,
--   <a>componentSummary_changeDescription</a> - The change description of
--   the component.
--   
--   <a>$sel:type':ComponentSummary'</a>, <a>componentSummary_type</a> -
--   The type of the component denotes whether the component is used to
--   build the image or only to test it.
--   
--   <a>$sel:description:ComponentSummary'</a>,
--   <a>componentSummary_description</a> - The description of the
--   component.
--   
--   <a>$sel:tags:ComponentSummary'</a>, <a>componentSummary_tags</a> - The
--   tags associated with the component.
newComponentSummary :: ComponentSummary

-- | Describes the current status of the component.
componentSummary_state :: Lens' ComponentSummary (Maybe ComponentState)

-- | The platform of the component.
componentSummary_platform :: Lens' ComponentSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the component.
componentSummary_arn :: Lens' ComponentSummary (Maybe Text)

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
componentSummary_supportedOsVersions :: Lens' ComponentSummary (Maybe (NonEmpty Text))

-- | The owner of the component.
componentSummary_owner :: Lens' ComponentSummary (Maybe Text)

-- | The date that the component was created.
componentSummary_dateCreated :: Lens' ComponentSummary (Maybe Text)

-- | The name of the component.
componentSummary_name :: Lens' ComponentSummary (Maybe Text)

-- | The version of the component.
componentSummary_version :: Lens' ComponentSummary (Maybe Text)

-- | The change description of the component.
componentSummary_changeDescription :: Lens' ComponentSummary (Maybe Text)

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
componentSummary_type :: Lens' ComponentSummary (Maybe ComponentType)

-- | The description of the component.
componentSummary_description :: Lens' ComponentSummary (Maybe Text)

-- | The tags associated with the component.
componentSummary_tags :: Lens' ComponentSummary (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ComponentSummary.ComponentSummary
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ComponentSummary.ComponentSummary
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ComponentSummary.ComponentSummary
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ComponentSummary.ComponentSummary
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ComponentSummary.ComponentSummary
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ComponentSummary.ComponentSummary
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ComponentSummary.ComponentSummary


module Amazonka.ImageBuilder.Types.Component

-- | A detailed view of a component.
--   
--   <i>See:</i> <a>newComponent</a> smart constructor.
data Component
Component' :: Maybe ComponentState -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ComponentParameterDetail] -> Maybe Text -> Maybe ComponentType -> Maybe Text -> Maybe (HashMap Text Text) -> Component

-- | Describes the current status of the component. This is used for
--   components that are no longer active.
[$sel:state:Component'] :: Component -> Maybe ComponentState

-- | The platform of the component.
[$sel:platform:Component'] :: Component -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the component.
[$sel:arn:Component'] :: Component -> Maybe Text

-- | The data of the component.
[$sel:data':Component'] :: Component -> Maybe Text

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
[$sel:supportedOsVersions:Component'] :: Component -> Maybe (NonEmpty Text)

-- | The encryption status of the component.
[$sel:encrypted:Component'] :: Component -> Maybe Bool

-- | The owner of the component.
[$sel:owner:Component'] :: Component -> Maybe Text

-- | The date that the component was created.
[$sel:dateCreated:Component'] :: Component -> Maybe Text

-- | The name of the component.
[$sel:name:Component'] :: Component -> Maybe Text

-- | The KMS key identifier used to encrypt the component.
[$sel:kmsKeyId:Component'] :: Component -> Maybe Text

-- | The version of the component.
[$sel:version:Component'] :: Component -> Maybe Text

-- | Contains parameter details for each of the parameters that are defined
--   for the component.
[$sel:parameters:Component'] :: Component -> Maybe [ComponentParameterDetail]

-- | The change description of the component.
[$sel:changeDescription:Component'] :: Component -> Maybe Text

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
[$sel:type':Component'] :: Component -> Maybe ComponentType

-- | The description of the component.
[$sel:description:Component'] :: Component -> Maybe Text

-- | The tags associated with the component.
[$sel:tags:Component'] :: Component -> Maybe (HashMap Text Text)

-- | Create a value of <a>Component</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Component'</a>, <a>component_state</a> - Describes the
--   current status of the component. This is used for components that are
--   no longer active.
--   
--   <a>$sel:platform:Component'</a>, <a>component_platform</a> - The
--   platform of the component.
--   
--   <a>$sel:arn:Component'</a>, <a>component_arn</a> - The Amazon Resource
--   Name (ARN) of the component.
--   
--   <a>$sel:data':Component'</a>, <a>component_data</a> - The data of the
--   component.
--   
--   <a>$sel:supportedOsVersions:Component'</a>,
--   <a>component_supportedOsVersions</a> - The operating system (OS)
--   version supported by the component. If the OS information is
--   available, a prefix match is performed against the base image OS
--   version during image recipe creation.
--   
--   <a>$sel:encrypted:Component'</a>, <a>component_encrypted</a> - The
--   encryption status of the component.
--   
--   <a>$sel:owner:Component'</a>, <a>component_owner</a> - The owner of
--   the component.
--   
--   <a>$sel:dateCreated:Component'</a>, <a>component_dateCreated</a> - The
--   date that the component was created.
--   
--   <a>$sel:name:Component'</a>, <a>component_name</a> - The name of the
--   component.
--   
--   <a>$sel:kmsKeyId:Component'</a>, <a>component_kmsKeyId</a> - The KMS
--   key identifier used to encrypt the component.
--   
--   <a>$sel:version:Component'</a>, <a>component_version</a> - The version
--   of the component.
--   
--   <a>$sel:parameters:Component'</a>, <a>component_parameters</a> -
--   Contains parameter details for each of the parameters that are defined
--   for the component.
--   
--   <a>$sel:changeDescription:Component'</a>,
--   <a>component_changeDescription</a> - The change description of the
--   component.
--   
--   <a>$sel:type':Component'</a>, <a>component_type</a> - The type of the
--   component denotes whether the component is used to build the image or
--   only to test it.
--   
--   <a>$sel:description:Component'</a>, <a>component_description</a> - The
--   description of the component.
--   
--   <a>$sel:tags:Component'</a>, <a>component_tags</a> - The tags
--   associated with the component.
newComponent :: Component

-- | Describes the current status of the component. This is used for
--   components that are no longer active.
component_state :: Lens' Component (Maybe ComponentState)

-- | The platform of the component.
component_platform :: Lens' Component (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the component.
component_arn :: Lens' Component (Maybe Text)

-- | The data of the component.
component_data :: Lens' Component (Maybe Text)

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
component_supportedOsVersions :: Lens' Component (Maybe (NonEmpty Text))

-- | The encryption status of the component.
component_encrypted :: Lens' Component (Maybe Bool)

-- | The owner of the component.
component_owner :: Lens' Component (Maybe Text)

-- | The date that the component was created.
component_dateCreated :: Lens' Component (Maybe Text)

-- | The name of the component.
component_name :: Lens' Component (Maybe Text)

-- | The KMS key identifier used to encrypt the component.
component_kmsKeyId :: Lens' Component (Maybe Text)

-- | The version of the component.
component_version :: Lens' Component (Maybe Text)

-- | Contains parameter details for each of the parameters that are defined
--   for the component.
component_parameters :: Lens' Component (Maybe [ComponentParameterDetail])

-- | The change description of the component.
component_changeDescription :: Lens' Component (Maybe Text)

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
component_type :: Lens' Component (Maybe ComponentType)

-- | The description of the component.
component_description :: Lens' Component (Maybe Text)

-- | The tags associated with the component.
component_tags :: Lens' Component (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.Component.Component
instance GHC.Show.Show Amazonka.ImageBuilder.Types.Component.Component
instance GHC.Read.Read Amazonka.ImageBuilder.Types.Component.Component
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.Component.Component
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.Component.Component
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.Component.Component
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.Component.Component


module Amazonka.ImageBuilder.Types.S3Logs

-- | Amazon S3 logging configuration.
--   
--   <i>See:</i> <a>newS3Logs</a> smart constructor.
data S3Logs
S3Logs' :: Maybe Text -> Maybe Text -> S3Logs

-- | The Amazon S3 path in which to store the logs.
[$sel:s3KeyPrefix:S3Logs'] :: S3Logs -> Maybe Text

-- | The Amazon S3 bucket in which to store the logs.
[$sel:s3BucketName:S3Logs'] :: S3Logs -> Maybe Text

-- | Create a value of <a>S3Logs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3KeyPrefix:S3Logs'</a>, <a>s3Logs_s3KeyPrefix</a> - The
--   Amazon S3 path in which to store the logs.
--   
--   <a>$sel:s3BucketName:S3Logs'</a>, <a>s3Logs_s3BucketName</a> - The
--   Amazon S3 bucket in which to store the logs.
newS3Logs :: S3Logs

-- | The Amazon S3 path in which to store the logs.
s3Logs_s3KeyPrefix :: Lens' S3Logs (Maybe Text)

-- | The Amazon S3 bucket in which to store the logs.
s3Logs_s3BucketName :: Lens' S3Logs (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.S3Logs.S3Logs
instance GHC.Show.Show Amazonka.ImageBuilder.Types.S3Logs.S3Logs
instance GHC.Read.Read Amazonka.ImageBuilder.Types.S3Logs.S3Logs
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.S3Logs.S3Logs
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.S3Logs.S3Logs
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.S3Logs.S3Logs
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.S3Logs.S3Logs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.S3Logs.S3Logs


module Amazonka.ImageBuilder.Types.Logging

-- | Logging configuration defines where Image Builder uploads your logs.
--   
--   <i>See:</i> <a>newLogging</a> smart constructor.
data Logging
Logging' :: Maybe S3Logs -> Logging

-- | The Amazon S3 logging configuration.
[$sel:s3Logs:Logging'] :: Logging -> Maybe S3Logs

-- | Create a value of <a>Logging</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Logs:Logging'</a>, <a>logging_s3Logs</a> - The Amazon S3
--   logging configuration.
newLogging :: Logging

-- | The Amazon S3 logging configuration.
logging_s3Logs :: Lens' Logging (Maybe S3Logs)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.Logging.Logging
instance GHC.Show.Show Amazonka.ImageBuilder.Types.Logging.Logging
instance GHC.Read.Read Amazonka.ImageBuilder.Types.Logging.Logging
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.Logging.Logging
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.Logging.Logging
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.Logging.Logging
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.Logging.Logging
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.Logging.Logging


module Amazonka.ImageBuilder.Types.InfrastructureConfiguration

-- | Details of the infrastructure configuration.
--   
--   <i>See:</i> <a>newInfrastructureConfiguration</a> smart constructor.
data InfrastructureConfiguration
InfrastructureConfiguration' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe InstanceMetadataOptions -> Maybe Text -> Maybe Text -> Maybe Logging -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> InfrastructureConfiguration

-- | The security group IDs of the infrastructure configuration.
[$sel:securityGroupIds:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe [Text]

-- | The SNS topic Amazon Resource Name (ARN) of the infrastructure
--   configuration.
[$sel:snsTopicArn:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The instance types of the infrastructure configuration.
[$sel:instanceTypes:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the infrastructure configuration.
[$sel:arn:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The Amazon EC2 key pair of the infrastructure configuration.
[$sel:keyPair:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The tags attached to the resource created by Image Builder.
[$sel:resourceTags:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe (HashMap Text Text)

-- | The subnet ID of the infrastructure configuration.
[$sel:subnetId:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The date on which the infrastructure configuration was last updated.
[$sel:dateUpdated:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The date on which the infrastructure configuration was created.
[$sel:dateCreated:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The instance metadata option settings for the infrastructure
--   configuration.
[$sel:instanceMetadataOptions:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe InstanceMetadataOptions

-- | The name of the infrastructure configuration.
[$sel:name:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The instance profile of the infrastructure configuration.
[$sel:instanceProfileName:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The logging configuration of the infrastructure configuration.
[$sel:logging:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Logging

-- | The description of the infrastructure configuration.
[$sel:description:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The tags of the infrastructure configuration.
[$sel:tags:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe (HashMap Text Text)

-- | The terminate instance on failure configuration of the infrastructure
--   configuration.
[$sel:terminateInstanceOnFailure:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Bool

-- | Create a value of <a>InfrastructureConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_securityGroupIds</a> - The security
--   group IDs of the infrastructure configuration.
--   
--   <a>$sel:snsTopicArn:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_snsTopicArn</a> - The SNS topic Amazon
--   Resource Name (ARN) of the infrastructure configuration.
--   
--   <a>$sel:instanceTypes:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_instanceTypes</a> - The instance types
--   of the infrastructure configuration.
--   
--   <a>$sel:arn:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_arn</a> - The Amazon Resource Name
--   (ARN) of the infrastructure configuration.
--   
--   <a>$sel:keyPair:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_keyPair</a> - The Amazon EC2 key pair
--   of the infrastructure configuration.
--   
--   <a>$sel:resourceTags:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_resourceTags</a> - The tags attached to
--   the resource created by Image Builder.
--   
--   <a>$sel:subnetId:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_subnetId</a> - The subnet ID of the
--   infrastructure configuration.
--   
--   <a>$sel:dateUpdated:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_dateUpdated</a> - The date on which the
--   infrastructure configuration was last updated.
--   
--   <a>$sel:dateCreated:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_dateCreated</a> - The date on which the
--   infrastructure configuration was created.
--   
--   <a>$sel:instanceMetadataOptions:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_instanceMetadataOptions</a> - The
--   instance metadata option settings for the infrastructure
--   configuration.
--   
--   <a>$sel:name:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_name</a> - The name of the
--   infrastructure configuration.
--   
--   <a>$sel:instanceProfileName:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_instanceProfileName</a> - The instance
--   profile of the infrastructure configuration.
--   
--   <a>$sel:logging:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_logging</a> - The logging configuration
--   of the infrastructure configuration.
--   
--   <a>$sel:description:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_description</a> - The description of
--   the infrastructure configuration.
--   
--   <a>$sel:tags:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_tags</a> - The tags of the
--   infrastructure configuration.
--   
--   <a>$sel:terminateInstanceOnFailure:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_terminateInstanceOnFailure</a> - The
--   terminate instance on failure configuration of the infrastructure
--   configuration.
newInfrastructureConfiguration :: InfrastructureConfiguration

-- | The security group IDs of the infrastructure configuration.
infrastructureConfiguration_securityGroupIds :: Lens' InfrastructureConfiguration (Maybe [Text])

-- | The SNS topic Amazon Resource Name (ARN) of the infrastructure
--   configuration.
infrastructureConfiguration_snsTopicArn :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The instance types of the infrastructure configuration.
infrastructureConfiguration_instanceTypes :: Lens' InfrastructureConfiguration (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the infrastructure configuration.
infrastructureConfiguration_arn :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The Amazon EC2 key pair of the infrastructure configuration.
infrastructureConfiguration_keyPair :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The tags attached to the resource created by Image Builder.
infrastructureConfiguration_resourceTags :: Lens' InfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The subnet ID of the infrastructure configuration.
infrastructureConfiguration_subnetId :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The date on which the infrastructure configuration was last updated.
infrastructureConfiguration_dateUpdated :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The date on which the infrastructure configuration was created.
infrastructureConfiguration_dateCreated :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The instance metadata option settings for the infrastructure
--   configuration.
infrastructureConfiguration_instanceMetadataOptions :: Lens' InfrastructureConfiguration (Maybe InstanceMetadataOptions)

-- | The name of the infrastructure configuration.
infrastructureConfiguration_name :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The instance profile of the infrastructure configuration.
infrastructureConfiguration_instanceProfileName :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The logging configuration of the infrastructure configuration.
infrastructureConfiguration_logging :: Lens' InfrastructureConfiguration (Maybe Logging)

-- | The description of the infrastructure configuration.
infrastructureConfiguration_description :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The tags of the infrastructure configuration.
infrastructureConfiguration_tags :: Lens' InfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The terminate instance on failure configuration of the infrastructure
--   configuration.
infrastructureConfiguration_terminateInstanceOnFailure :: Lens' InfrastructureConfiguration (Maybe Bool)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.InfrastructureConfiguration.InfrastructureConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.Types.InfrastructureConfiguration.InfrastructureConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.Types.InfrastructureConfiguration.InfrastructureConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.InfrastructureConfiguration.InfrastructureConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.InfrastructureConfiguration.InfrastructureConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.InfrastructureConfiguration.InfrastructureConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.InfrastructureConfiguration.InfrastructureConfiguration


module Amazonka.ImageBuilder.Types.Schedule

-- | A schedule configures how often and when a pipeline will automatically
--   create a new image.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe Text -> Maybe PipelineExecutionStartCondition -> Maybe Text -> Schedule

-- | The cron expression determines how often EC2 Image Builder evaluates
--   your <tt>pipelineExecutionStartCondition</tt>.
--   
--   For information on how to format a cron expression in Image Builder,
--   see <a>Use cron expressions in EC2 Image Builder</a>.
[$sel:scheduleExpression:Schedule'] :: Schedule -> Maybe Text

-- | The condition configures when the pipeline should trigger a new image
--   build. When the <tt>pipelineExecutionStartCondition</tt> is set to
--   <tt>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</tt>, and you
--   use semantic version filters on the base image or components in your
--   image recipe, EC2 Image Builder will build a new image only when there
--   are new versions of the image or components in your recipe that match
--   the semantic version filter. When it is set to
--   <tt>EXPRESSION_MATCH_ONLY</tt>, it will build a new image every time
--   the CRON expression matches the current time. For semantic version
--   syntax, see <a>CreateComponent</a> in the <i>EC2 Image Builder API
--   Reference</i>.
[$sel:pipelineExecutionStartCondition:Schedule'] :: Schedule -> Maybe PipelineExecutionStartCondition

-- | The timezone that applies to the scheduling expression. For example,
--   "Etc/UTC", "America/Los_Angeles" in the <a>IANA timezone format</a>.
--   If not specified this defaults to UTC.
[$sel:timezone:Schedule'] :: Schedule -> Maybe Text

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduleExpression:Schedule'</a>,
--   <a>schedule_scheduleExpression</a> - The cron expression determines
--   how often EC2 Image Builder evaluates your
--   <tt>pipelineExecutionStartCondition</tt>.
--   
--   For information on how to format a cron expression in Image Builder,
--   see <a>Use cron expressions in EC2 Image Builder</a>.
--   
--   <a>$sel:pipelineExecutionStartCondition:Schedule'</a>,
--   <a>schedule_pipelineExecutionStartCondition</a> - The condition
--   configures when the pipeline should trigger a new image build. When
--   the <tt>pipelineExecutionStartCondition</tt> is set to
--   <tt>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</tt>, and you
--   use semantic version filters on the base image or components in your
--   image recipe, EC2 Image Builder will build a new image only when there
--   are new versions of the image or components in your recipe that match
--   the semantic version filter. When it is set to
--   <tt>EXPRESSION_MATCH_ONLY</tt>, it will build a new image every time
--   the CRON expression matches the current time. For semantic version
--   syntax, see <a>CreateComponent</a> in the <i>EC2 Image Builder API
--   Reference</i>.
--   
--   <a>$sel:timezone:Schedule'</a>, <a>schedule_timezone</a> - The
--   timezone that applies to the scheduling expression. For example,
--   "Etc/UTC", "America/Los_Angeles" in the <a>IANA timezone format</a>.
--   If not specified this defaults to UTC.
newSchedule :: Schedule

-- | The cron expression determines how often EC2 Image Builder evaluates
--   your <tt>pipelineExecutionStartCondition</tt>.
--   
--   For information on how to format a cron expression in Image Builder,
--   see <a>Use cron expressions in EC2 Image Builder</a>.
schedule_scheduleExpression :: Lens' Schedule (Maybe Text)

-- | The condition configures when the pipeline should trigger a new image
--   build. When the <tt>pipelineExecutionStartCondition</tt> is set to
--   <tt>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</tt>, and you
--   use semantic version filters on the base image or components in your
--   image recipe, EC2 Image Builder will build a new image only when there
--   are new versions of the image or components in your recipe that match
--   the semantic version filter. When it is set to
--   <tt>EXPRESSION_MATCH_ONLY</tt>, it will build a new image every time
--   the CRON expression matches the current time. For semantic version
--   syntax, see <a>CreateComponent</a> in the <i>EC2 Image Builder API
--   Reference</i>.
schedule_pipelineExecutionStartCondition :: Lens' Schedule (Maybe PipelineExecutionStartCondition)

-- | The timezone that applies to the scheduling expression. For example,
--   "Etc/UTC", "America/Los_Angeles" in the <a>IANA timezone format</a>.
--   If not specified this defaults to UTC.
schedule_timezone :: Lens' Schedule (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.Schedule.Schedule
instance GHC.Show.Show Amazonka.ImageBuilder.Types.Schedule.Schedule
instance GHC.Read.Read Amazonka.ImageBuilder.Types.Schedule.Schedule
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.Schedule.Schedule
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.Schedule.Schedule
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.Schedule.Schedule
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.Schedule.Schedule
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.Schedule.Schedule


module Amazonka.ImageBuilder.Types.ImagePipeline

-- | Details of an image pipeline.
--   
--   <i>See:</i> <a>newImagePipeline</a> smart constructor.
data ImagePipeline
ImagePipeline' :: Maybe PipelineStatus -> Maybe Text -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe ImageTestsConfiguration -> Maybe Text -> Maybe Text -> Maybe Schedule -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ImagePipeline

-- | The status of the image pipeline.
[$sel:status:ImagePipeline'] :: ImagePipeline -> Maybe PipelineStatus

-- | The date on which this image pipeline was last run.
[$sel:dateLastRun:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The platform of the image pipeline.
[$sel:platform:ImagePipeline'] :: ImagePipeline -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   associated with this image pipeline.
[$sel:infrastructureConfigurationArn:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The Amazon Resource Name (ARN) of the container recipe that is used
--   for this pipeline.
[$sel:containerRecipeArn:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The image tests configuration of the image pipeline.
[$sel:imageTestsConfiguration:ImagePipeline'] :: ImagePipeline -> Maybe ImageTestsConfiguration

-- | The date on which this image pipeline will next be run.
[$sel:dateNextRun:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image pipeline.
[$sel:arn:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The schedule of the image pipeline.
[$sel:schedule:ImagePipeline'] :: ImagePipeline -> Maybe Schedule

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
[$sel:enhancedImageMetadataEnabled:ImagePipeline'] :: ImagePipeline -> Maybe Bool

-- | The date on which this image pipeline was last updated.
[$sel:dateUpdated:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The date on which this image pipeline was created.
[$sel:dateCreated:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The name of the image pipeline.
[$sel:name:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The Amazon Resource Name (ARN) of the distribution configuration
--   associated with this image pipeline.
[$sel:distributionConfigurationArn:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image recipe associated with
--   this image pipeline.
[$sel:imageRecipeArn:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The description of the image pipeline.
[$sel:description:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The tags of this image pipeline.
[$sel:tags:ImagePipeline'] :: ImagePipeline -> Maybe (HashMap Text Text)

-- | Create a value of <a>ImagePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ImagePipeline'</a>, <a>imagePipeline_status</a> - The
--   status of the image pipeline.
--   
--   <a>$sel:dateLastRun:ImagePipeline'</a>,
--   <a>imagePipeline_dateLastRun</a> - The date on which this image
--   pipeline was last run.
--   
--   <a>$sel:platform:ImagePipeline'</a>, <a>imagePipeline_platform</a> -
--   The platform of the image pipeline.
--   
--   <a>$sel:infrastructureConfigurationArn:ImagePipeline'</a>,
--   <a>imagePipeline_infrastructureConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the infrastructure configuration associated
--   with this image pipeline.
--   
--   <a>$sel:containerRecipeArn:ImagePipeline'</a>,
--   <a>imagePipeline_containerRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the container recipe that is used for this pipeline.
--   
--   <a>$sel:imageTestsConfiguration:ImagePipeline'</a>,
--   <a>imagePipeline_imageTestsConfiguration</a> - The image tests
--   configuration of the image pipeline.
--   
--   <a>$sel:dateNextRun:ImagePipeline'</a>,
--   <a>imagePipeline_dateNextRun</a> - The date on which this image
--   pipeline will next be run.
--   
--   <a>$sel:arn:ImagePipeline'</a>, <a>imagePipeline_arn</a> - The Amazon
--   Resource Name (ARN) of the image pipeline.
--   
--   <a>$sel:schedule:ImagePipeline'</a>, <a>imagePipeline_schedule</a> -
--   The schedule of the image pipeline.
--   
--   <a>$sel:enhancedImageMetadataEnabled:ImagePipeline'</a>,
--   <a>imagePipeline_enhancedImageMetadataEnabled</a> - Collects
--   additional information about the image being created, including the
--   operating system (OS) version and package list. This information is
--   used to enhance the overall experience of using EC2 Image Builder.
--   Enabled by default.
--   
--   <a>$sel:dateUpdated:ImagePipeline'</a>,
--   <a>imagePipeline_dateUpdated</a> - The date on which this image
--   pipeline was last updated.
--   
--   <a>$sel:dateCreated:ImagePipeline'</a>,
--   <a>imagePipeline_dateCreated</a> - The date on which this image
--   pipeline was created.
--   
--   <a>$sel:name:ImagePipeline'</a>, <a>imagePipeline_name</a> - The name
--   of the image pipeline.
--   
--   <a>$sel:distributionConfigurationArn:ImagePipeline'</a>,
--   <a>imagePipeline_distributionConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the distribution configuration associated with
--   this image pipeline.
--   
--   <a>$sel:imageRecipeArn:ImagePipeline'</a>,
--   <a>imagePipeline_imageRecipeArn</a> - The Amazon Resource Name (ARN)
--   of the image recipe associated with this image pipeline.
--   
--   <a>$sel:description:ImagePipeline'</a>,
--   <a>imagePipeline_description</a> - The description of the image
--   pipeline.
--   
--   <a>$sel:tags:ImagePipeline'</a>, <a>imagePipeline_tags</a> - The tags
--   of this image pipeline.
newImagePipeline :: ImagePipeline

-- | The status of the image pipeline.
imagePipeline_status :: Lens' ImagePipeline (Maybe PipelineStatus)

-- | The date on which this image pipeline was last run.
imagePipeline_dateLastRun :: Lens' ImagePipeline (Maybe Text)

-- | The platform of the image pipeline.
imagePipeline_platform :: Lens' ImagePipeline (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   associated with this image pipeline.
imagePipeline_infrastructureConfigurationArn :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the container recipe that is used
--   for this pipeline.
imagePipeline_containerRecipeArn :: Lens' ImagePipeline (Maybe Text)

-- | The image tests configuration of the image pipeline.
imagePipeline_imageTestsConfiguration :: Lens' ImagePipeline (Maybe ImageTestsConfiguration)

-- | The date on which this image pipeline will next be run.
imagePipeline_dateNextRun :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image pipeline.
imagePipeline_arn :: Lens' ImagePipeline (Maybe Text)

-- | The schedule of the image pipeline.
imagePipeline_schedule :: Lens' ImagePipeline (Maybe Schedule)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
imagePipeline_enhancedImageMetadataEnabled :: Lens' ImagePipeline (Maybe Bool)

-- | The date on which this image pipeline was last updated.
imagePipeline_dateUpdated :: Lens' ImagePipeline (Maybe Text)

-- | The date on which this image pipeline was created.
imagePipeline_dateCreated :: Lens' ImagePipeline (Maybe Text)

-- | The name of the image pipeline.
imagePipeline_name :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the distribution configuration
--   associated with this image pipeline.
imagePipeline_distributionConfigurationArn :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe associated with
--   this image pipeline.
imagePipeline_imageRecipeArn :: Lens' ImagePipeline (Maybe Text)

-- | The description of the image pipeline.
imagePipeline_description :: Lens' ImagePipeline (Maybe Text)

-- | The tags of this image pipeline.
imagePipeline_tags :: Lens' ImagePipeline (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ImagePipeline.ImagePipeline
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ImagePipeline.ImagePipeline
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ImagePipeline.ImagePipeline
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ImagePipeline.ImagePipeline
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ImagePipeline.ImagePipeline
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ImagePipeline.ImagePipeline
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ImagePipeline.ImagePipeline


module Amazonka.ImageBuilder.Types.SystemsManagerAgent

-- | Contains settings for the Systems Manager agent on your build
--   instance.
--   
--   <i>See:</i> <a>newSystemsManagerAgent</a> smart constructor.
data SystemsManagerAgent
SystemsManagerAgent' :: Maybe Bool -> SystemsManagerAgent

-- | Controls whether the Systems Manager agent is removed from your final
--   build image, prior to creating the new AMI. If this is set to true,
--   then the agent is removed from the final image. If it's set to false,
--   then the agent is left in, so that it is included in the new AMI. The
--   default value is false.
[$sel:uninstallAfterBuild:SystemsManagerAgent'] :: SystemsManagerAgent -> Maybe Bool

-- | Create a value of <a>SystemsManagerAgent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uninstallAfterBuild:SystemsManagerAgent'</a>,
--   <a>systemsManagerAgent_uninstallAfterBuild</a> - Controls whether the
--   Systems Manager agent is removed from your final build image, prior to
--   creating the new AMI. If this is set to true, then the agent is
--   removed from the final image. If it's set to false, then the agent is
--   left in, so that it is included in the new AMI. The default value is
--   false.
newSystemsManagerAgent :: SystemsManagerAgent

-- | Controls whether the Systems Manager agent is removed from your final
--   build image, prior to creating the new AMI. If this is set to true,
--   then the agent is removed from the final image. If it's set to false,
--   then the agent is left in, so that it is included in the new AMI. The
--   default value is false.
systemsManagerAgent_uninstallAfterBuild :: Lens' SystemsManagerAgent (Maybe Bool)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.SystemsManagerAgent.SystemsManagerAgent
instance GHC.Show.Show Amazonka.ImageBuilder.Types.SystemsManagerAgent.SystemsManagerAgent
instance GHC.Read.Read Amazonka.ImageBuilder.Types.SystemsManagerAgent.SystemsManagerAgent
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.SystemsManagerAgent.SystemsManagerAgent
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.SystemsManagerAgent.SystemsManagerAgent
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.SystemsManagerAgent.SystemsManagerAgent
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.SystemsManagerAgent.SystemsManagerAgent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.SystemsManagerAgent.SystemsManagerAgent


module Amazonka.ImageBuilder.Types.AdditionalInstanceConfiguration

-- | In addition to your infrastruction configuration, these settings
--   provide an extra layer of control over your build instances. For
--   instances where Image Builder installs the Systems Manager agent, you
--   can choose whether to keep it for the AMI that you create. You can
--   also specify commands to run on launch for all of your build
--   instances.
--   
--   <i>See:</i> <a>newAdditionalInstanceConfiguration</a> smart
--   constructor.
data AdditionalInstanceConfiguration
AdditionalInstanceConfiguration' :: Maybe SystemsManagerAgent -> Maybe Text -> AdditionalInstanceConfiguration

-- | Contains settings for the Systems Manager agent on your build
--   instance.
[$sel:systemsManagerAgent:AdditionalInstanceConfiguration'] :: AdditionalInstanceConfiguration -> Maybe SystemsManagerAgent

-- | Use this property to provide commands or a command script to run when
--   you launch your build instance.
--   
--   The userDataOverride property replaces any commands that Image Builder
--   might have added to ensure that Systems Manager is installed on your
--   Linux build instance. If you override the user data, make sure that
--   you add commands to install Systems Manager, if it is not
--   pre-installed on your base image.
[$sel:userDataOverride:AdditionalInstanceConfiguration'] :: AdditionalInstanceConfiguration -> Maybe Text

-- | Create a value of <a>AdditionalInstanceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:systemsManagerAgent:AdditionalInstanceConfiguration'</a>,
--   <a>additionalInstanceConfiguration_systemsManagerAgent</a> - Contains
--   settings for the Systems Manager agent on your build instance.
--   
--   <a>$sel:userDataOverride:AdditionalInstanceConfiguration'</a>,
--   <a>additionalInstanceConfiguration_userDataOverride</a> - Use this
--   property to provide commands or a command script to run when you
--   launch your build instance.
--   
--   The userDataOverride property replaces any commands that Image Builder
--   might have added to ensure that Systems Manager is installed on your
--   Linux build instance. If you override the user data, make sure that
--   you add commands to install Systems Manager, if it is not
--   pre-installed on your base image.
newAdditionalInstanceConfiguration :: AdditionalInstanceConfiguration

-- | Contains settings for the Systems Manager agent on your build
--   instance.
additionalInstanceConfiguration_systemsManagerAgent :: Lens' AdditionalInstanceConfiguration (Maybe SystemsManagerAgent)

-- | Use this property to provide commands or a command script to run when
--   you launch your build instance.
--   
--   The userDataOverride property replaces any commands that Image Builder
--   might have added to ensure that Systems Manager is installed on your
--   Linux build instance. If you override the user data, make sure that
--   you add commands to install Systems Manager, if it is not
--   pre-installed on your base image.
additionalInstanceConfiguration_userDataOverride :: Lens' AdditionalInstanceConfiguration (Maybe Text)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.AdditionalInstanceConfiguration.AdditionalInstanceConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.Types.AdditionalInstanceConfiguration.AdditionalInstanceConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.Types.AdditionalInstanceConfiguration.AdditionalInstanceConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.AdditionalInstanceConfiguration.AdditionalInstanceConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.AdditionalInstanceConfiguration.AdditionalInstanceConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.AdditionalInstanceConfiguration.AdditionalInstanceConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.AdditionalInstanceConfiguration.AdditionalInstanceConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.AdditionalInstanceConfiguration.AdditionalInstanceConfiguration


module Amazonka.ImageBuilder.Types.ImageRecipe

-- | An image recipe.
--   
--   <i>See:</i> <a>newImageRecipe</a> smart constructor.
data ImageRecipe
ImageRecipe' :: Maybe (NonEmpty ComponentConfiguration) -> Maybe Platform -> Maybe Text -> Maybe AdditionalInstanceConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ImageType -> Maybe [InstanceBlockDeviceMapping] -> Maybe Text -> Maybe (HashMap Text Text) -> ImageRecipe

-- | The components of the image recipe.
[$sel:components:ImageRecipe'] :: ImageRecipe -> Maybe (NonEmpty ComponentConfiguration)

-- | The platform of the image recipe.
[$sel:platform:ImageRecipe'] :: ImageRecipe -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the image recipe.
[$sel:arn:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | Before you create a new AMI, Image Builder launches temporary Amazon
--   EC2 instances to build and test your image configuration. Instance
--   configuration adds a layer of control over those instances. You can
--   define settings and add scripts to run when an instance is launched
--   from your AMI.
[$sel:additionalInstanceConfiguration:ImageRecipe'] :: ImageRecipe -> Maybe AdditionalInstanceConfiguration

-- | The working directory to be used during build and test workflows.
[$sel:workingDirectory:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The base image of the image recipe.
[$sel:parentImage:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The owner of the image recipe.
[$sel:owner:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The date on which this image recipe was created.
[$sel:dateCreated:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The name of the image recipe.
[$sel:name:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The version of the image recipe.
[$sel:version:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | Specifies which type of image is created by the recipe - an AMI or a
--   container image.
[$sel:type':ImageRecipe'] :: ImageRecipe -> Maybe ImageType

-- | The block device mappings to apply when creating images from this
--   recipe.
[$sel:blockDeviceMappings:ImageRecipe'] :: ImageRecipe -> Maybe [InstanceBlockDeviceMapping]

-- | The description of the image recipe.
[$sel:description:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The tags of the image recipe.
[$sel:tags:ImageRecipe'] :: ImageRecipe -> Maybe (HashMap Text Text)

-- | Create a value of <a>ImageRecipe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:components:ImageRecipe'</a>, <a>imageRecipe_components</a> -
--   The components of the image recipe.
--   
--   <a>$sel:platform:ImageRecipe'</a>, <a>imageRecipe_platform</a> - The
--   platform of the image recipe.
--   
--   <a>$sel:arn:ImageRecipe'</a>, <a>imageRecipe_arn</a> - The Amazon
--   Resource Name (ARN) of the image recipe.
--   
--   <a>$sel:additionalInstanceConfiguration:ImageRecipe'</a>,
--   <a>imageRecipe_additionalInstanceConfiguration</a> - Before you create
--   a new AMI, Image Builder launches temporary Amazon EC2 instances to
--   build and test your image configuration. Instance configuration adds a
--   layer of control over those instances. You can define settings and add
--   scripts to run when an instance is launched from your AMI.
--   
--   <a>$sel:workingDirectory:ImageRecipe'</a>,
--   <a>imageRecipe_workingDirectory</a> - The working directory to be used
--   during build and test workflows.
--   
--   <a>$sel:parentImage:ImageRecipe'</a>, <a>imageRecipe_parentImage</a> -
--   The base image of the image recipe.
--   
--   <a>$sel:owner:ImageRecipe'</a>, <a>imageRecipe_owner</a> - The owner
--   of the image recipe.
--   
--   <a>$sel:dateCreated:ImageRecipe'</a>, <a>imageRecipe_dateCreated</a> -
--   The date on which this image recipe was created.
--   
--   <a>$sel:name:ImageRecipe'</a>, <a>imageRecipe_name</a> - The name of
--   the image recipe.
--   
--   <a>$sel:version:ImageRecipe'</a>, <a>imageRecipe_version</a> - The
--   version of the image recipe.
--   
--   <a>$sel:type':ImageRecipe'</a>, <a>imageRecipe_type</a> - Specifies
--   which type of image is created by the recipe - an AMI or a container
--   image.
--   
--   <a>$sel:blockDeviceMappings:ImageRecipe'</a>,
--   <a>imageRecipe_blockDeviceMappings</a> - The block device mappings to
--   apply when creating images from this recipe.
--   
--   <a>$sel:description:ImageRecipe'</a>, <a>imageRecipe_description</a> -
--   The description of the image recipe.
--   
--   <a>$sel:tags:ImageRecipe'</a>, <a>imageRecipe_tags</a> - The tags of
--   the image recipe.
newImageRecipe :: ImageRecipe

-- | The components of the image recipe.
imageRecipe_components :: Lens' ImageRecipe (Maybe (NonEmpty ComponentConfiguration))

-- | The platform of the image recipe.
imageRecipe_platform :: Lens' ImageRecipe (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the image recipe.
imageRecipe_arn :: Lens' ImageRecipe (Maybe Text)

-- | Before you create a new AMI, Image Builder launches temporary Amazon
--   EC2 instances to build and test your image configuration. Instance
--   configuration adds a layer of control over those instances. You can
--   define settings and add scripts to run when an instance is launched
--   from your AMI.
imageRecipe_additionalInstanceConfiguration :: Lens' ImageRecipe (Maybe AdditionalInstanceConfiguration)

-- | The working directory to be used during build and test workflows.
imageRecipe_workingDirectory :: Lens' ImageRecipe (Maybe Text)

-- | The base image of the image recipe.
imageRecipe_parentImage :: Lens' ImageRecipe (Maybe Text)

-- | The owner of the image recipe.
imageRecipe_owner :: Lens' ImageRecipe (Maybe Text)

-- | The date on which this image recipe was created.
imageRecipe_dateCreated :: Lens' ImageRecipe (Maybe Text)

-- | The name of the image recipe.
imageRecipe_name :: Lens' ImageRecipe (Maybe Text)

-- | The version of the image recipe.
imageRecipe_version :: Lens' ImageRecipe (Maybe Text)

-- | Specifies which type of image is created by the recipe - an AMI or a
--   container image.
imageRecipe_type :: Lens' ImageRecipe (Maybe ImageType)

-- | The block device mappings to apply when creating images from this
--   recipe.
imageRecipe_blockDeviceMappings :: Lens' ImageRecipe (Maybe [InstanceBlockDeviceMapping])

-- | The description of the image recipe.
imageRecipe_description :: Lens' ImageRecipe (Maybe Text)

-- | The tags of the image recipe.
imageRecipe_tags :: Lens' ImageRecipe (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ImageRecipe.ImageRecipe
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ImageRecipe.ImageRecipe
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ImageRecipe.ImageRecipe
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ImageRecipe.ImageRecipe
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ImageRecipe.ImageRecipe
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ImageRecipe.ImageRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ImageRecipe.ImageRecipe


module Amazonka.ImageBuilder.Types.TargetContainerRepository

-- | The container repository where the output container image is stored.
--   
--   <i>See:</i> <a>newTargetContainerRepository</a> smart constructor.
data TargetContainerRepository
TargetContainerRepository' :: ContainerRepositoryService -> Text -> TargetContainerRepository

-- | Specifies the service in which this image was registered.
[$sel:service:TargetContainerRepository'] :: TargetContainerRepository -> ContainerRepositoryService

-- | The name of the container repository where the output container image
--   is stored. This name is prefixed by the repository location.
[$sel:repositoryName:TargetContainerRepository'] :: TargetContainerRepository -> Text

-- | Create a value of <a>TargetContainerRepository</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:service:TargetContainerRepository'</a>,
--   <a>targetContainerRepository_service</a> - Specifies the service in
--   which this image was registered.
--   
--   <a>$sel:repositoryName:TargetContainerRepository'</a>,
--   <a>targetContainerRepository_repositoryName</a> - The name of the
--   container repository where the output container image is stored. This
--   name is prefixed by the repository location.
newTargetContainerRepository :: ContainerRepositoryService -> Text -> TargetContainerRepository

-- | Specifies the service in which this image was registered.
targetContainerRepository_service :: Lens' TargetContainerRepository ContainerRepositoryService

-- | The name of the container repository where the output container image
--   is stored. This name is prefixed by the repository location.
targetContainerRepository_repositoryName :: Lens' TargetContainerRepository Text
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.TargetContainerRepository.TargetContainerRepository
instance GHC.Show.Show Amazonka.ImageBuilder.Types.TargetContainerRepository.TargetContainerRepository
instance GHC.Read.Read Amazonka.ImageBuilder.Types.TargetContainerRepository.TargetContainerRepository
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.TargetContainerRepository.TargetContainerRepository
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.TargetContainerRepository.TargetContainerRepository
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.TargetContainerRepository.TargetContainerRepository
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.TargetContainerRepository.TargetContainerRepository
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.TargetContainerRepository.TargetContainerRepository


module Amazonka.ImageBuilder.Types.ContainerRecipe

-- | A container recipe.
--   
--   <i>See:</i> <a>newContainerRecipe</a> smart constructor.
data ContainerRecipe
ContainerRecipe' :: Maybe (NonEmpty ComponentConfiguration) -> Maybe ContainerType -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TargetContainerRepository -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe InstanceConfiguration -> ContainerRecipe

-- | Components for build and test that are included in the container
--   recipe.
[$sel:components:ContainerRecipe'] :: ContainerRecipe -> Maybe (NonEmpty ComponentConfiguration)

-- | Specifies the type of container, such as Docker.
[$sel:containerType:ContainerRecipe'] :: ContainerRecipe -> Maybe ContainerType

-- | The system platform for the container, such as Windows or Linux.
[$sel:platform:ContainerRecipe'] :: ContainerRecipe -> Maybe Platform

-- | Dockerfiles are text documents that are used to build Docker
--   containers, and ensure that they contain all of the elements required
--   by the application running inside. The template data consists of
--   contextual variables where Image Builder places build information or
--   scripts, based on your container image recipe.
[$sel:dockerfileTemplateData:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The Amazon Resource Name (ARN) of the container recipe.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
[$sel:arn:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The working directory for use during build and test workflows.
[$sel:workingDirectory:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The base image for the container recipe.
[$sel:parentImage:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | A flag that indicates if the target container is encrypted.
[$sel:encrypted:ContainerRecipe'] :: ContainerRecipe -> Maybe Bool

-- | The owner of the container recipe.
[$sel:owner:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The date when this container recipe was created.
[$sel:dateCreated:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The name of the container recipe.
[$sel:name:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | Identifies which KMS key is used to encrypt the container image for
--   distribution to the target Region.
[$sel:kmsKeyId:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The semantic version of the container recipe.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
[$sel:version:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The destination repository for the container image.
[$sel:targetRepository:ContainerRecipe'] :: ContainerRecipe -> Maybe TargetContainerRepository

-- | The description of the container recipe.
[$sel:description:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | Tags that are attached to the container recipe.
[$sel:tags:ContainerRecipe'] :: ContainerRecipe -> Maybe (HashMap Text Text)

-- | A group of options that can be used to configure an instance for
--   building and testing container images.
[$sel:instanceConfiguration:ContainerRecipe'] :: ContainerRecipe -> Maybe InstanceConfiguration

-- | Create a value of <a>ContainerRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:components:ContainerRecipe'</a>,
--   <a>containerRecipe_components</a> - Components for build and test that
--   are included in the container recipe.
--   
--   <a>$sel:containerType:ContainerRecipe'</a>,
--   <a>containerRecipe_containerType</a> - Specifies the type of
--   container, such as Docker.
--   
--   <a>$sel:platform:ContainerRecipe'</a>, <a>containerRecipe_platform</a>
--   - The system platform for the container, such as Windows or Linux.
--   
--   <a>$sel:dockerfileTemplateData:ContainerRecipe'</a>,
--   <a>containerRecipe_dockerfileTemplateData</a> - Dockerfiles are text
--   documents that are used to build Docker containers, and ensure that
--   they contain all of the elements required by the application running
--   inside. The template data consists of contextual variables where Image
--   Builder places build information or scripts, based on your container
--   image recipe.
--   
--   <a>$sel:arn:ContainerRecipe'</a>, <a>containerRecipe_arn</a> - The
--   Amazon Resource Name (ARN) of the container recipe.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:workingDirectory:ContainerRecipe'</a>,
--   <a>containerRecipe_workingDirectory</a> - The working directory for
--   use during build and test workflows.
--   
--   <a>$sel:parentImage:ContainerRecipe'</a>,
--   <a>containerRecipe_parentImage</a> - The base image for the container
--   recipe.
--   
--   <a>$sel:encrypted:ContainerRecipe'</a>,
--   <a>containerRecipe_encrypted</a> - A flag that indicates if the target
--   container is encrypted.
--   
--   <a>$sel:owner:ContainerRecipe'</a>, <a>containerRecipe_owner</a> - The
--   owner of the container recipe.
--   
--   <a>$sel:dateCreated:ContainerRecipe'</a>,
--   <a>containerRecipe_dateCreated</a> - The date when this container
--   recipe was created.
--   
--   <a>$sel:name:ContainerRecipe'</a>, <a>containerRecipe_name</a> - The
--   name of the container recipe.
--   
--   <a>$sel:kmsKeyId:ContainerRecipe'</a>, <a>containerRecipe_kmsKeyId</a>
--   - Identifies which KMS key is used to encrypt the container image for
--   distribution to the target Region.
--   
--   <a>$sel:version:ContainerRecipe'</a>, <a>containerRecipe_version</a> -
--   The semantic version of the container recipe.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:targetRepository:ContainerRecipe'</a>,
--   <a>containerRecipe_targetRepository</a> - The destination repository
--   for the container image.
--   
--   <a>$sel:description:ContainerRecipe'</a>,
--   <a>containerRecipe_description</a> - The description of the container
--   recipe.
--   
--   <a>$sel:tags:ContainerRecipe'</a>, <a>containerRecipe_tags</a> - Tags
--   that are attached to the container recipe.
--   
--   <a>$sel:instanceConfiguration:ContainerRecipe'</a>,
--   <a>containerRecipe_instanceConfiguration</a> - A group of options that
--   can be used to configure an instance for building and testing
--   container images.
newContainerRecipe :: ContainerRecipe

-- | Components for build and test that are included in the container
--   recipe.
containerRecipe_components :: Lens' ContainerRecipe (Maybe (NonEmpty ComponentConfiguration))

-- | Specifies the type of container, such as Docker.
containerRecipe_containerType :: Lens' ContainerRecipe (Maybe ContainerType)

-- | The system platform for the container, such as Windows or Linux.
containerRecipe_platform :: Lens' ContainerRecipe (Maybe Platform)

-- | Dockerfiles are text documents that are used to build Docker
--   containers, and ensure that they contain all of the elements required
--   by the application running inside. The template data consists of
--   contextual variables where Image Builder places build information or
--   scripts, based on your container image recipe.
containerRecipe_dockerfileTemplateData :: Lens' ContainerRecipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the container recipe.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
containerRecipe_arn :: Lens' ContainerRecipe (Maybe Text)

-- | The working directory for use during build and test workflows.
containerRecipe_workingDirectory :: Lens' ContainerRecipe (Maybe Text)

-- | The base image for the container recipe.
containerRecipe_parentImage :: Lens' ContainerRecipe (Maybe Text)

-- | A flag that indicates if the target container is encrypted.
containerRecipe_encrypted :: Lens' ContainerRecipe (Maybe Bool)

-- | The owner of the container recipe.
containerRecipe_owner :: Lens' ContainerRecipe (Maybe Text)

-- | The date when this container recipe was created.
containerRecipe_dateCreated :: Lens' ContainerRecipe (Maybe Text)

-- | The name of the container recipe.
containerRecipe_name :: Lens' ContainerRecipe (Maybe Text)

-- | Identifies which KMS key is used to encrypt the container image for
--   distribution to the target Region.
containerRecipe_kmsKeyId :: Lens' ContainerRecipe (Maybe Text)

-- | The semantic version of the container recipe.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
containerRecipe_version :: Lens' ContainerRecipe (Maybe Text)

-- | The destination repository for the container image.
containerRecipe_targetRepository :: Lens' ContainerRecipe (Maybe TargetContainerRepository)

-- | The description of the container recipe.
containerRecipe_description :: Lens' ContainerRecipe (Maybe Text)

-- | Tags that are attached to the container recipe.
containerRecipe_tags :: Lens' ContainerRecipe (Maybe (HashMap Text Text))

-- | A group of options that can be used to configure an instance for
--   building and testing container images.
containerRecipe_instanceConfiguration :: Lens' ContainerRecipe (Maybe InstanceConfiguration)
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ContainerRecipe.ContainerRecipe
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ContainerRecipe.ContainerRecipe
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ContainerRecipe.ContainerRecipe
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ContainerRecipe.ContainerRecipe
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ContainerRecipe.ContainerRecipe
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ContainerRecipe.ContainerRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ContainerRecipe.ContainerRecipe


module Amazonka.ImageBuilder.Types.ContainerDistributionConfiguration

-- | Container distribution settings for encryption, licensing, and sharing
--   in a specific Region.
--   
--   <i>See:</i> <a>newContainerDistributionConfiguration</a> smart
--   constructor.
data ContainerDistributionConfiguration
ContainerDistributionConfiguration' :: Maybe [Text] -> Maybe Text -> TargetContainerRepository -> ContainerDistributionConfiguration

-- | Tags that are attached to the container distribution configuration.
[$sel:containerTags:ContainerDistributionConfiguration'] :: ContainerDistributionConfiguration -> Maybe [Text]

-- | The description of the container distribution configuration.
[$sel:description:ContainerDistributionConfiguration'] :: ContainerDistributionConfiguration -> Maybe Text

-- | The destination repository for the container distribution
--   configuration.
[$sel:targetRepository:ContainerDistributionConfiguration'] :: ContainerDistributionConfiguration -> TargetContainerRepository

-- | Create a value of <a>ContainerDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerTags:ContainerDistributionConfiguration'</a>,
--   <a>containerDistributionConfiguration_containerTags</a> - Tags that
--   are attached to the container distribution configuration.
--   
--   <a>$sel:description:ContainerDistributionConfiguration'</a>,
--   <a>containerDistributionConfiguration_description</a> - The
--   description of the container distribution configuration.
--   
--   <a>$sel:targetRepository:ContainerDistributionConfiguration'</a>,
--   <a>containerDistributionConfiguration_targetRepository</a> - The
--   destination repository for the container distribution configuration.
newContainerDistributionConfiguration :: TargetContainerRepository -> ContainerDistributionConfiguration

-- | Tags that are attached to the container distribution configuration.
containerDistributionConfiguration_containerTags :: Lens' ContainerDistributionConfiguration (Maybe [Text])

-- | The description of the container distribution configuration.
containerDistributionConfiguration_description :: Lens' ContainerDistributionConfiguration (Maybe Text)

-- | The destination repository for the container distribution
--   configuration.
containerDistributionConfiguration_targetRepository :: Lens' ContainerDistributionConfiguration TargetContainerRepository
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.ContainerDistributionConfiguration.ContainerDistributionConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.Types.ContainerDistributionConfiguration.ContainerDistributionConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.Types.ContainerDistributionConfiguration.ContainerDistributionConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.ContainerDistributionConfiguration.ContainerDistributionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.ContainerDistributionConfiguration.ContainerDistributionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.ContainerDistributionConfiguration.ContainerDistributionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.ContainerDistributionConfiguration.ContainerDistributionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.ContainerDistributionConfiguration.ContainerDistributionConfiguration


module Amazonka.ImageBuilder.Types.Distribution

-- | Defines the settings for a specific Region.
--   
--   <i>See:</i> <a>newDistribution</a> smart constructor.
data Distribution
Distribution' :: Maybe AmiDistributionConfiguration -> Maybe (NonEmpty LaunchTemplateConfiguration) -> Maybe (NonEmpty Text) -> Maybe ContainerDistributionConfiguration -> Text -> Distribution

-- | The specific AMI settings; for example, launch permissions or AMI
--   tags.
[$sel:amiDistributionConfiguration:Distribution'] :: Distribution -> Maybe AmiDistributionConfiguration

-- | A group of launchTemplateConfiguration settings that apply to image
--   distribution for specified accounts.
[$sel:launchTemplateConfigurations:Distribution'] :: Distribution -> Maybe (NonEmpty LaunchTemplateConfiguration)

-- | The License Manager Configuration to associate with the AMI in the
--   specified Region.
[$sel:licenseConfigurationArns:Distribution'] :: Distribution -> Maybe (NonEmpty Text)

-- | Container distribution settings for encryption, licensing, and sharing
--   in a specific Region.
[$sel:containerDistributionConfiguration:Distribution'] :: Distribution -> Maybe ContainerDistributionConfiguration

-- | The target Region.
[$sel:region:Distribution'] :: Distribution -> Text

-- | Create a value of <a>Distribution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amiDistributionConfiguration:Distribution'</a>,
--   <a>distribution_amiDistributionConfiguration</a> - The specific AMI
--   settings; for example, launch permissions or AMI tags.
--   
--   <a>$sel:launchTemplateConfigurations:Distribution'</a>,
--   <a>distribution_launchTemplateConfigurations</a> - A group of
--   launchTemplateConfiguration settings that apply to image distribution
--   for specified accounts.
--   
--   <a>$sel:licenseConfigurationArns:Distribution'</a>,
--   <a>distribution_licenseConfigurationArns</a> - The License Manager
--   Configuration to associate with the AMI in the specified Region.
--   
--   <a>$sel:containerDistributionConfiguration:Distribution'</a>,
--   <a>distribution_containerDistributionConfiguration</a> - Container
--   distribution settings for encryption, licensing, and sharing in a
--   specific Region.
--   
--   <a>$sel:region:Distribution'</a>, <a>distribution_region</a> - The
--   target Region.
newDistribution :: Text -> Distribution

-- | The specific AMI settings; for example, launch permissions or AMI
--   tags.
distribution_amiDistributionConfiguration :: Lens' Distribution (Maybe AmiDistributionConfiguration)

-- | A group of launchTemplateConfiguration settings that apply to image
--   distribution for specified accounts.
distribution_launchTemplateConfigurations :: Lens' Distribution (Maybe (NonEmpty LaunchTemplateConfiguration))

-- | The License Manager Configuration to associate with the AMI in the
--   specified Region.
distribution_licenseConfigurationArns :: Lens' Distribution (Maybe (NonEmpty Text))

-- | Container distribution settings for encryption, licensing, and sharing
--   in a specific Region.
distribution_containerDistributionConfiguration :: Lens' Distribution (Maybe ContainerDistributionConfiguration)

-- | The target Region.
distribution_region :: Lens' Distribution Text
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.Distribution.Distribution
instance GHC.Show.Show Amazonka.ImageBuilder.Types.Distribution.Distribution
instance GHC.Read.Read Amazonka.ImageBuilder.Types.Distribution.Distribution
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.Distribution.Distribution
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.Distribution.Distribution
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.Distribution.Distribution
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.Distribution.Distribution
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.Types.Distribution.Distribution


module Amazonka.ImageBuilder.Types.DistributionConfiguration

-- | A distribution configuration.
--   
--   <i>See:</i> <a>newDistributionConfiguration</a> smart constructor.
data DistributionConfiguration
DistributionConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Distribution] -> Maybe (HashMap Text Text) -> Natural -> DistributionConfiguration

-- | The Amazon Resource Name (ARN) of the distribution configuration.
[$sel:arn:DistributionConfiguration'] :: DistributionConfiguration -> Maybe Text

-- | The date on which this distribution configuration was last updated.
[$sel:dateUpdated:DistributionConfiguration'] :: DistributionConfiguration -> Maybe Text

-- | The date on which this distribution configuration was created.
[$sel:dateCreated:DistributionConfiguration'] :: DistributionConfiguration -> Maybe Text

-- | The name of the distribution configuration.
[$sel:name:DistributionConfiguration'] :: DistributionConfiguration -> Maybe Text

-- | The description of the distribution configuration.
[$sel:description:DistributionConfiguration'] :: DistributionConfiguration -> Maybe Text

-- | The distribution objects that apply Region-specific settings for the
--   deployment of the image to targeted Regions.
[$sel:distributions:DistributionConfiguration'] :: DistributionConfiguration -> Maybe [Distribution]

-- | The tags of the distribution configuration.
[$sel:tags:DistributionConfiguration'] :: DistributionConfiguration -> Maybe (HashMap Text Text)

-- | The maximum duration in minutes for this distribution configuration.
[$sel:timeoutMinutes:DistributionConfiguration'] :: DistributionConfiguration -> Natural

-- | Create a value of <a>DistributionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_arn</a> - The Amazon Resource Name (ARN)
--   of the distribution configuration.
--   
--   <a>$sel:dateUpdated:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_dateUpdated</a> - The date on which this
--   distribution configuration was last updated.
--   
--   <a>$sel:dateCreated:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_dateCreated</a> - The date on which this
--   distribution configuration was created.
--   
--   <a>$sel:name:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_name</a> - The name of the distribution
--   configuration.
--   
--   <a>$sel:description:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_description</a> - The description of the
--   distribution configuration.
--   
--   <a>$sel:distributions:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_distributions</a> - The distribution
--   objects that apply Region-specific settings for the deployment of the
--   image to targeted Regions.
--   
--   <a>$sel:tags:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_tags</a> - The tags of the distribution
--   configuration.
--   
--   <a>$sel:timeoutMinutes:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_timeoutMinutes</a> - The maximum duration
--   in minutes for this distribution configuration.
newDistributionConfiguration :: Natural -> DistributionConfiguration

-- | The Amazon Resource Name (ARN) of the distribution configuration.
distributionConfiguration_arn :: Lens' DistributionConfiguration (Maybe Text)

-- | The date on which this distribution configuration was last updated.
distributionConfiguration_dateUpdated :: Lens' DistributionConfiguration (Maybe Text)

-- | The date on which this distribution configuration was created.
distributionConfiguration_dateCreated :: Lens' DistributionConfiguration (Maybe Text)

-- | The name of the distribution configuration.
distributionConfiguration_name :: Lens' DistributionConfiguration (Maybe Text)

-- | The description of the distribution configuration.
distributionConfiguration_description :: Lens' DistributionConfiguration (Maybe Text)

-- | The distribution objects that apply Region-specific settings for the
--   deployment of the image to targeted Regions.
distributionConfiguration_distributions :: Lens' DistributionConfiguration (Maybe [Distribution])

-- | The tags of the distribution configuration.
distributionConfiguration_tags :: Lens' DistributionConfiguration (Maybe (HashMap Text Text))

-- | The maximum duration in minutes for this distribution configuration.
distributionConfiguration_timeoutMinutes :: Lens' DistributionConfiguration Natural
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.DistributionConfiguration.DistributionConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.Types.DistributionConfiguration.DistributionConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.Types.DistributionConfiguration.DistributionConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.DistributionConfiguration.DistributionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.DistributionConfiguration.DistributionConfiguration
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.DistributionConfiguration.DistributionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.DistributionConfiguration.DistributionConfiguration


module Amazonka.ImageBuilder.Types.Image

-- | An Image Builder image. You must specify exactly one recipe for the
--   image – either a container recipe (<tt>containerRecipe</tt>), which
--   creates a container image, or an image recipe (<tt>imageRecipe</tt>),
--   which creates an AMI.
--   
--   <i>See:</i> <a>newImage</a> smart constructor.
data Image
Image' :: Maybe ImageRecipe -> Maybe ImageState -> Maybe Platform -> Maybe ImageTestsConfiguration -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe ContainerRecipe -> Maybe Text -> Maybe InfrastructureConfiguration -> Maybe Text -> Maybe DistributionConfiguration -> Maybe Text -> Maybe ImageType -> Maybe Text -> Maybe OutputResources -> Maybe Text -> Maybe (HashMap Text Text) -> Image

-- | The image recipe used when creating the image.
[$sel:imageRecipe:Image'] :: Image -> Maybe ImageRecipe

-- | The state of the image.
[$sel:state:Image'] :: Image -> Maybe ImageState

-- | The platform of the image.
[$sel:platform:Image'] :: Image -> Maybe Platform

-- | The image tests configuration used when creating this image.
[$sel:imageTestsConfiguration:Image'] :: Image -> Maybe ImageTestsConfiguration

-- | The Amazon Resource Name (ARN) of the image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
[$sel:arn:Image'] :: Image -> Maybe Text

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
[$sel:enhancedImageMetadataEnabled:Image'] :: Image -> Maybe Bool

-- | The date on which this image was created.
[$sel:dateCreated:Image'] :: Image -> Maybe Text

-- | The recipe that is used to create an Image Builder container image.
[$sel:containerRecipe:Image'] :: Image -> Maybe ContainerRecipe

-- | The name of the image.
[$sel:name:Image'] :: Image -> Maybe Text

-- | The infrastructure used when creating this image.
[$sel:infrastructureConfiguration:Image'] :: Image -> Maybe InfrastructureConfiguration

-- | The semantic version of the image.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
[$sel:version:Image'] :: Image -> Maybe Text

-- | The distribution configuration used when creating this image.
[$sel:distributionConfiguration:Image'] :: Image -> Maybe DistributionConfiguration

-- | The Amazon Resource Name (ARN) of the image pipeline that created this
--   image.
[$sel:sourcePipelineArn:Image'] :: Image -> Maybe Text

-- | Specifies whether this is an AMI or container image.
[$sel:type':Image'] :: Image -> Maybe ImageType

-- | The name of the image pipeline that created this image.
[$sel:sourcePipelineName:Image'] :: Image -> Maybe Text

-- | The output resources produced when creating this image.
[$sel:outputResources:Image'] :: Image -> Maybe OutputResources

-- | The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
[$sel:osVersion:Image'] :: Image -> Maybe Text

-- | The tags of the image.
[$sel:tags:Image'] :: Image -> Maybe (HashMap Text Text)

-- | Create a value of <a>Image</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRecipe:Image'</a>, <a>image_imageRecipe</a> - The image
--   recipe used when creating the image.
--   
--   <a>$sel:state:Image'</a>, <a>image_state</a> - The state of the image.
--   
--   <a>$sel:platform:Image'</a>, <a>image_platform</a> - The platform of
--   the image.
--   
--   <a>$sel:imageTestsConfiguration:Image'</a>,
--   <a>image_imageTestsConfiguration</a> - The image tests configuration
--   used when creating this image.
--   
--   <a>$sel:arn:Image'</a>, <a>image_arn</a> - The Amazon Resource Name
--   (ARN) of the image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:enhancedImageMetadataEnabled:Image'</a>,
--   <a>image_enhancedImageMetadataEnabled</a> - Collects additional
--   information about the image being created, including the operating
--   system (OS) version and package list. This information is used to
--   enhance the overall experience of using EC2 Image Builder. Enabled by
--   default.
--   
--   <a>$sel:dateCreated:Image'</a>, <a>image_dateCreated</a> - The date on
--   which this image was created.
--   
--   <a>$sel:containerRecipe:Image'</a>, <a>image_containerRecipe</a> - The
--   recipe that is used to create an Image Builder container image.
--   
--   <a>$sel:name:Image'</a>, <a>image_name</a> - The name of the image.
--   
--   <a>$sel:infrastructureConfiguration:Image'</a>,
--   <a>image_infrastructureConfiguration</a> - The infrastructure used
--   when creating this image.
--   
--   <a>$sel:version:Image'</a>, <a>image_version</a> - The semantic
--   version of the image.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:distributionConfiguration:Image'</a>,
--   <a>image_distributionConfiguration</a> - The distribution
--   configuration used when creating this image.
--   
--   <a>$sel:sourcePipelineArn:Image'</a>, <a>image_sourcePipelineArn</a> -
--   The Amazon Resource Name (ARN) of the image pipeline that created this
--   image.
--   
--   <a>$sel:type':Image'</a>, <a>image_type</a> - Specifies whether this
--   is an AMI or container image.
--   
--   <a>$sel:sourcePipelineName:Image'</a>, <a>image_sourcePipelineName</a>
--   - The name of the image pipeline that created this image.
--   
--   <a>$sel:outputResources:Image'</a>, <a>image_outputResources</a> - The
--   output resources produced when creating this image.
--   
--   <a>$sel:osVersion:Image'</a>, <a>image_osVersion</a> - The operating
--   system version of the instance. For example, Amazon Linux 2, Ubuntu
--   18, or Microsoft Windows Server 2019.
--   
--   <a>$sel:tags:Image'</a>, <a>image_tags</a> - The tags of the image.
newImage :: Image

-- | The image recipe used when creating the image.
image_imageRecipe :: Lens' Image (Maybe ImageRecipe)

-- | The state of the image.
image_state :: Lens' Image (Maybe ImageState)

-- | The platform of the image.
image_platform :: Lens' Image (Maybe Platform)

-- | The image tests configuration used when creating this image.
image_imageTestsConfiguration :: Lens' Image (Maybe ImageTestsConfiguration)

-- | The Amazon Resource Name (ARN) of the image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
image_arn :: Lens' Image (Maybe Text)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
image_enhancedImageMetadataEnabled :: Lens' Image (Maybe Bool)

-- | The date on which this image was created.
image_dateCreated :: Lens' Image (Maybe Text)

-- | The recipe that is used to create an Image Builder container image.
image_containerRecipe :: Lens' Image (Maybe ContainerRecipe)

-- | The name of the image.
image_name :: Lens' Image (Maybe Text)

-- | The infrastructure used when creating this image.
image_infrastructureConfiguration :: Lens' Image (Maybe InfrastructureConfiguration)

-- | The semantic version of the image.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
image_version :: Lens' Image (Maybe Text)

-- | The distribution configuration used when creating this image.
image_distributionConfiguration :: Lens' Image (Maybe DistributionConfiguration)

-- | The Amazon Resource Name (ARN) of the image pipeline that created this
--   image.
image_sourcePipelineArn :: Lens' Image (Maybe Text)

-- | Specifies whether this is an AMI or container image.
image_type :: Lens' Image (Maybe ImageType)

-- | The name of the image pipeline that created this image.
image_sourcePipelineName :: Lens' Image (Maybe Text)

-- | The output resources produced when creating this image.
image_outputResources :: Lens' Image (Maybe OutputResources)

-- | The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
image_osVersion :: Lens' Image (Maybe Text)

-- | The tags of the image.
image_tags :: Lens' Image (Maybe (HashMap Text Text))
instance GHC.Generics.Generic Amazonka.ImageBuilder.Types.Image.Image
instance GHC.Show.Show Amazonka.ImageBuilder.Types.Image.Image
instance GHC.Read.Read Amazonka.ImageBuilder.Types.Image.Image
instance GHC.Classes.Eq Amazonka.ImageBuilder.Types.Image.Image
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.ImageBuilder.Types.Image.Image
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.Types.Image.Image
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.Types.Image.Image


module Amazonka.ImageBuilder.Types

-- | API version <tt>2019-12-02</tt> of the Amazon EC2 Image Builder SDK
--   configuration.
defaultService :: Service

-- | The specified parameter is invalid. Review the available parameters
--   for the API request.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have made a request for an action that is not supported by the
--   service.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you are trying to create already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded the permitted request rate for the specific
--   operation.
_CallRateLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You are not authorized to perform the requested operation.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value that you provided for the specified parameter is invalid.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your version number is out of bounds or does not follow the required
--   syntax.
_InvalidVersionNumberException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded the number of permitted resources or operations for
--   this service. For service quotas, see <a>EC2 Image Builder endpoints
--   and quotas</a>.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the service encounters an unrecoverable
--   exception.
_ServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have attempted to mutate or delete a resource with a dependency
--   that prohibits this action. See the error message for more details.
_ResourceDependencyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is unable to process your request at this time.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a client token for an operation using parameter
--   values that differ from a previous request that used the same client
--   token.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | These errors are usually caused by a client action, such as using an
--   action or resource on behalf of a user that doesn't have permissions
--   to use the action or resource, or specifying an invalid resource
--   identifier.
_ClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one of the resources referenced by your request does not
--   exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified two or more mutually exclusive parameters. Review
--   the error message for details.
_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have provided an invalid pagination token in your request.
_InvalidPaginationTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you are trying to operate on is currently in use.
--   Review the message details and retry later.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ComponentFormat
ComponentFormat' :: Text -> ComponentFormat
[fromComponentFormat] :: ComponentFormat -> Text
pattern ComponentFormat_SHELL :: ComponentFormat
newtype ComponentStatus
ComponentStatus' :: Text -> ComponentStatus
[fromComponentStatus] :: ComponentStatus -> Text
pattern ComponentStatus_DEPRECATED :: ComponentStatus
newtype ComponentType
ComponentType' :: Text -> ComponentType
[fromComponentType] :: ComponentType -> Text
pattern ComponentType_BUILD :: ComponentType
pattern ComponentType_TEST :: ComponentType
newtype ContainerRepositoryService
ContainerRepositoryService' :: Text -> ContainerRepositoryService
[fromContainerRepositoryService] :: ContainerRepositoryService -> Text
pattern ContainerRepositoryService_ECR :: ContainerRepositoryService
newtype ContainerType
ContainerType' :: Text -> ContainerType
[fromContainerType] :: ContainerType -> Text
pattern ContainerType_DOCKER :: ContainerType
newtype EbsVolumeType
EbsVolumeType' :: Text -> EbsVolumeType
[fromEbsVolumeType] :: EbsVolumeType -> Text
pattern EbsVolumeType_Gp2 :: EbsVolumeType
pattern EbsVolumeType_Gp3 :: EbsVolumeType
pattern EbsVolumeType_Io1 :: EbsVolumeType
pattern EbsVolumeType_Io2 :: EbsVolumeType
pattern EbsVolumeType_Sc1 :: EbsVolumeType
pattern EbsVolumeType_St1 :: EbsVolumeType
pattern EbsVolumeType_Standard :: EbsVolumeType
newtype ImageStatus
ImageStatus' :: Text -> ImageStatus
[fromImageStatus] :: ImageStatus -> Text
pattern ImageStatus_AVAILABLE :: ImageStatus
pattern ImageStatus_BUILDING :: ImageStatus
pattern ImageStatus_CANCELLED :: ImageStatus
pattern ImageStatus_CREATING :: ImageStatus
pattern ImageStatus_DELETED :: ImageStatus
pattern ImageStatus_DEPRECATED :: ImageStatus
pattern ImageStatus_DISTRIBUTING :: ImageStatus
pattern ImageStatus_FAILED :: ImageStatus
pattern ImageStatus_INTEGRATING :: ImageStatus
pattern ImageStatus_PENDING :: ImageStatus
pattern ImageStatus_TESTING :: ImageStatus
newtype ImageType
ImageType' :: Text -> ImageType
[fromImageType] :: ImageType -> Text
pattern ImageType_AMI :: ImageType
pattern ImageType_DOCKER :: ImageType
newtype Ownership
Ownership' :: Text -> Ownership
[fromOwnership] :: Ownership -> Text
pattern Ownership_Amazon :: Ownership
pattern Ownership_Self :: Ownership
pattern Ownership_Shared :: Ownership
newtype PipelineExecutionStartCondition
PipelineExecutionStartCondition' :: Text -> PipelineExecutionStartCondition
[fromPipelineExecutionStartCondition] :: PipelineExecutionStartCondition -> Text
pattern PipelineExecutionStartCondition_EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE :: PipelineExecutionStartCondition
pattern PipelineExecutionStartCondition_EXPRESSION_MATCH_ONLY :: PipelineExecutionStartCondition
newtype PipelineStatus
PipelineStatus' :: Text -> PipelineStatus
[fromPipelineStatus] :: PipelineStatus -> Text
pattern PipelineStatus_DISABLED :: PipelineStatus
pattern PipelineStatus_ENABLED :: PipelineStatus
newtype Platform
Platform' :: Text -> Platform
[fromPlatform] :: Platform -> Text
pattern Platform_Linux :: Platform
pattern Platform_Windows :: Platform

-- | In addition to your infrastruction configuration, these settings
--   provide an extra layer of control over your build instances. For
--   instances where Image Builder installs the Systems Manager agent, you
--   can choose whether to keep it for the AMI that you create. You can
--   also specify commands to run on launch for all of your build
--   instances.
--   
--   <i>See:</i> <a>newAdditionalInstanceConfiguration</a> smart
--   constructor.
data AdditionalInstanceConfiguration
AdditionalInstanceConfiguration' :: Maybe SystemsManagerAgent -> Maybe Text -> AdditionalInstanceConfiguration

-- | Contains settings for the Systems Manager agent on your build
--   instance.
[$sel:systemsManagerAgent:AdditionalInstanceConfiguration'] :: AdditionalInstanceConfiguration -> Maybe SystemsManagerAgent

-- | Use this property to provide commands or a command script to run when
--   you launch your build instance.
--   
--   The userDataOverride property replaces any commands that Image Builder
--   might have added to ensure that Systems Manager is installed on your
--   Linux build instance. If you override the user data, make sure that
--   you add commands to install Systems Manager, if it is not
--   pre-installed on your base image.
[$sel:userDataOverride:AdditionalInstanceConfiguration'] :: AdditionalInstanceConfiguration -> Maybe Text

-- | Create a value of <a>AdditionalInstanceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:systemsManagerAgent:AdditionalInstanceConfiguration'</a>,
--   <a>additionalInstanceConfiguration_systemsManagerAgent</a> - Contains
--   settings for the Systems Manager agent on your build instance.
--   
--   <a>$sel:userDataOverride:AdditionalInstanceConfiguration'</a>,
--   <a>additionalInstanceConfiguration_userDataOverride</a> - Use this
--   property to provide commands or a command script to run when you
--   launch your build instance.
--   
--   The userDataOverride property replaces any commands that Image Builder
--   might have added to ensure that Systems Manager is installed on your
--   Linux build instance. If you override the user data, make sure that
--   you add commands to install Systems Manager, if it is not
--   pre-installed on your base image.
newAdditionalInstanceConfiguration :: AdditionalInstanceConfiguration

-- | Contains settings for the Systems Manager agent on your build
--   instance.
additionalInstanceConfiguration_systemsManagerAgent :: Lens' AdditionalInstanceConfiguration (Maybe SystemsManagerAgent)

-- | Use this property to provide commands or a command script to run when
--   you launch your build instance.
--   
--   The userDataOverride property replaces any commands that Image Builder
--   might have added to ensure that Systems Manager is installed on your
--   Linux build instance. If you override the user data, make sure that
--   you add commands to install Systems Manager, if it is not
--   pre-installed on your base image.
additionalInstanceConfiguration_userDataOverride :: Lens' AdditionalInstanceConfiguration (Maybe Text)

-- | Details of an Amazon EC2 AMI.
--   
--   <i>See:</i> <a>newAmi</a> smart constructor.
data Ami
Ami' :: Maybe Text -> Maybe ImageState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Ami

-- | The AMI ID of the Amazon EC2 AMI.
[$sel:image:Ami'] :: Ami -> Maybe Text
[$sel:state:Ami'] :: Ami -> Maybe ImageState

-- | The account ID of the owner of the AMI.
[$sel:accountId:Ami'] :: Ami -> Maybe Text

-- | The name of the Amazon EC2 AMI.
[$sel:name:Ami'] :: Ami -> Maybe Text

-- | The Amazon Web Services Region of the Amazon EC2 AMI.
[$sel:region:Ami'] :: Ami -> Maybe Text

-- | The description of the Amazon EC2 AMI. Minimum and maximum length are
--   in characters.
[$sel:description:Ami'] :: Ami -> Maybe Text

-- | Create a value of <a>Ami</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:Ami'</a>, <a>ami_image</a> - The AMI ID of the Amazon
--   EC2 AMI.
--   
--   <a>$sel:state:Ami'</a>, <a>ami_state</a> - Undocumented member.
--   
--   <a>$sel:accountId:Ami'</a>, <a>ami_accountId</a> - The account ID of
--   the owner of the AMI.
--   
--   <a>$sel:name:Ami'</a>, <a>ami_name</a> - The name of the Amazon EC2
--   AMI.
--   
--   <a>$sel:region:Ami'</a>, <a>ami_region</a> - The Amazon Web Services
--   Region of the Amazon EC2 AMI.
--   
--   <a>$sel:description:Ami'</a>, <a>ami_description</a> - The description
--   of the Amazon EC2 AMI. Minimum and maximum length are in characters.
newAmi :: Ami

-- | The AMI ID of the Amazon EC2 AMI.
ami_image :: Lens' Ami (Maybe Text)

-- | Undocumented member.
ami_state :: Lens' Ami (Maybe ImageState)

-- | The account ID of the owner of the AMI.
ami_accountId :: Lens' Ami (Maybe Text)

-- | The name of the Amazon EC2 AMI.
ami_name :: Lens' Ami (Maybe Text)

-- | The Amazon Web Services Region of the Amazon EC2 AMI.
ami_region :: Lens' Ami (Maybe Text)

-- | The description of the Amazon EC2 AMI. Minimum and maximum length are
--   in characters.
ami_description :: Lens' Ami (Maybe Text)

-- | Define and configure the output AMIs of the pipeline.
--   
--   <i>See:</i> <a>newAmiDistributionConfiguration</a> smart constructor.
data AmiDistributionConfiguration
AmiDistributionConfiguration' :: Maybe LaunchPermissionConfiguration -> Maybe (NonEmpty Text) -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> AmiDistributionConfiguration

-- | Launch permissions can be used to configure which Amazon Web Services
--   accounts can use the AMI to launch instances.
[$sel:launchPermission:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe LaunchPermissionConfiguration

-- | The ID of an account to which you want to distribute an image.
[$sel:targetAccountIds:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe (NonEmpty Text)

-- | The tags to apply to AMIs distributed to this Region.
[$sel:amiTags:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe (HashMap Text Text)

-- | The name of the output AMI.
[$sel:name:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe Text

-- | The KMS key identifier used to encrypt the distributed image.
[$sel:kmsKeyId:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe Text

-- | The description of the distribution configuration. Minimum and maximum
--   length are in characters.
[$sel:description:AmiDistributionConfiguration'] :: AmiDistributionConfiguration -> Maybe Text

-- | Create a value of <a>AmiDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchPermission:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_launchPermission</a> - Launch
--   permissions can be used to configure which Amazon Web Services
--   accounts can use the AMI to launch instances.
--   
--   <a>$sel:targetAccountIds:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_targetAccountIds</a> - The ID of an
--   account to which you want to distribute an image.
--   
--   <a>$sel:amiTags:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_amiTags</a> - The tags to apply to
--   AMIs distributed to this Region.
--   
--   <a>$sel:name:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_name</a> - The name of the output AMI.
--   
--   <a>$sel:kmsKeyId:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_kmsKeyId</a> - The KMS key identifier
--   used to encrypt the distributed image.
--   
--   <a>$sel:description:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_description</a> - The description of
--   the distribution configuration. Minimum and maximum length are in
--   characters.
newAmiDistributionConfiguration :: AmiDistributionConfiguration

-- | Launch permissions can be used to configure which Amazon Web Services
--   accounts can use the AMI to launch instances.
amiDistributionConfiguration_launchPermission :: Lens' AmiDistributionConfiguration (Maybe LaunchPermissionConfiguration)

-- | The ID of an account to which you want to distribute an image.
amiDistributionConfiguration_targetAccountIds :: Lens' AmiDistributionConfiguration (Maybe (NonEmpty Text))

-- | The tags to apply to AMIs distributed to this Region.
amiDistributionConfiguration_amiTags :: Lens' AmiDistributionConfiguration (Maybe (HashMap Text Text))

-- | The name of the output AMI.
amiDistributionConfiguration_name :: Lens' AmiDistributionConfiguration (Maybe Text)

-- | The KMS key identifier used to encrypt the distributed image.
amiDistributionConfiguration_kmsKeyId :: Lens' AmiDistributionConfiguration (Maybe Text)

-- | The description of the distribution configuration. Minimum and maximum
--   length are in characters.
amiDistributionConfiguration_description :: Lens' AmiDistributionConfiguration (Maybe Text)

-- | A detailed view of a component.
--   
--   <i>See:</i> <a>newComponent</a> smart constructor.
data Component
Component' :: Maybe ComponentState -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ComponentParameterDetail] -> Maybe Text -> Maybe ComponentType -> Maybe Text -> Maybe (HashMap Text Text) -> Component

-- | Describes the current status of the component. This is used for
--   components that are no longer active.
[$sel:state:Component'] :: Component -> Maybe ComponentState

-- | The platform of the component.
[$sel:platform:Component'] :: Component -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the component.
[$sel:arn:Component'] :: Component -> Maybe Text

-- | The data of the component.
[$sel:data':Component'] :: Component -> Maybe Text

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
[$sel:supportedOsVersions:Component'] :: Component -> Maybe (NonEmpty Text)

-- | The encryption status of the component.
[$sel:encrypted:Component'] :: Component -> Maybe Bool

-- | The owner of the component.
[$sel:owner:Component'] :: Component -> Maybe Text

-- | The date that the component was created.
[$sel:dateCreated:Component'] :: Component -> Maybe Text

-- | The name of the component.
[$sel:name:Component'] :: Component -> Maybe Text

-- | The KMS key identifier used to encrypt the component.
[$sel:kmsKeyId:Component'] :: Component -> Maybe Text

-- | The version of the component.
[$sel:version:Component'] :: Component -> Maybe Text

-- | Contains parameter details for each of the parameters that are defined
--   for the component.
[$sel:parameters:Component'] :: Component -> Maybe [ComponentParameterDetail]

-- | The change description of the component.
[$sel:changeDescription:Component'] :: Component -> Maybe Text

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
[$sel:type':Component'] :: Component -> Maybe ComponentType

-- | The description of the component.
[$sel:description:Component'] :: Component -> Maybe Text

-- | The tags associated with the component.
[$sel:tags:Component'] :: Component -> Maybe (HashMap Text Text)

-- | Create a value of <a>Component</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Component'</a>, <a>component_state</a> - Describes the
--   current status of the component. This is used for components that are
--   no longer active.
--   
--   <a>$sel:platform:Component'</a>, <a>component_platform</a> - The
--   platform of the component.
--   
--   <a>$sel:arn:Component'</a>, <a>component_arn</a> - The Amazon Resource
--   Name (ARN) of the component.
--   
--   <a>$sel:data':Component'</a>, <a>component_data</a> - The data of the
--   component.
--   
--   <a>$sel:supportedOsVersions:Component'</a>,
--   <a>component_supportedOsVersions</a> - The operating system (OS)
--   version supported by the component. If the OS information is
--   available, a prefix match is performed against the base image OS
--   version during image recipe creation.
--   
--   <a>$sel:encrypted:Component'</a>, <a>component_encrypted</a> - The
--   encryption status of the component.
--   
--   <a>$sel:owner:Component'</a>, <a>component_owner</a> - The owner of
--   the component.
--   
--   <a>$sel:dateCreated:Component'</a>, <a>component_dateCreated</a> - The
--   date that the component was created.
--   
--   <a>$sel:name:Component'</a>, <a>component_name</a> - The name of the
--   component.
--   
--   <a>$sel:kmsKeyId:Component'</a>, <a>component_kmsKeyId</a> - The KMS
--   key identifier used to encrypt the component.
--   
--   <a>$sel:version:Component'</a>, <a>component_version</a> - The version
--   of the component.
--   
--   <a>$sel:parameters:Component'</a>, <a>component_parameters</a> -
--   Contains parameter details for each of the parameters that are defined
--   for the component.
--   
--   <a>$sel:changeDescription:Component'</a>,
--   <a>component_changeDescription</a> - The change description of the
--   component.
--   
--   <a>$sel:type':Component'</a>, <a>component_type</a> - The type of the
--   component denotes whether the component is used to build the image or
--   only to test it.
--   
--   <a>$sel:description:Component'</a>, <a>component_description</a> - The
--   description of the component.
--   
--   <a>$sel:tags:Component'</a>, <a>component_tags</a> - The tags
--   associated with the component.
newComponent :: Component

-- | Describes the current status of the component. This is used for
--   components that are no longer active.
component_state :: Lens' Component (Maybe ComponentState)

-- | The platform of the component.
component_platform :: Lens' Component (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the component.
component_arn :: Lens' Component (Maybe Text)

-- | The data of the component.
component_data :: Lens' Component (Maybe Text)

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
component_supportedOsVersions :: Lens' Component (Maybe (NonEmpty Text))

-- | The encryption status of the component.
component_encrypted :: Lens' Component (Maybe Bool)

-- | The owner of the component.
component_owner :: Lens' Component (Maybe Text)

-- | The date that the component was created.
component_dateCreated :: Lens' Component (Maybe Text)

-- | The name of the component.
component_name :: Lens' Component (Maybe Text)

-- | The KMS key identifier used to encrypt the component.
component_kmsKeyId :: Lens' Component (Maybe Text)

-- | The version of the component.
component_version :: Lens' Component (Maybe Text)

-- | Contains parameter details for each of the parameters that are defined
--   for the component.
component_parameters :: Lens' Component (Maybe [ComponentParameterDetail])

-- | The change description of the component.
component_changeDescription :: Lens' Component (Maybe Text)

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
component_type :: Lens' Component (Maybe ComponentType)

-- | The description of the component.
component_description :: Lens' Component (Maybe Text)

-- | The tags associated with the component.
component_tags :: Lens' Component (Maybe (HashMap Text Text))

-- | Configuration details of the component.
--   
--   <i>See:</i> <a>newComponentConfiguration</a> smart constructor.
data ComponentConfiguration
ComponentConfiguration' :: Maybe (NonEmpty ComponentParameter) -> Text -> ComponentConfiguration

-- | A group of parameter settings that are used to configure the component
--   for a specific recipe.
[$sel:parameters:ComponentConfiguration'] :: ComponentConfiguration -> Maybe (NonEmpty ComponentParameter)

-- | The Amazon Resource Name (ARN) of the component.
[$sel:componentArn:ComponentConfiguration'] :: ComponentConfiguration -> Text

-- | Create a value of <a>ComponentConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ComponentConfiguration'</a>,
--   <a>componentConfiguration_parameters</a> - A group of parameter
--   settings that are used to configure the component for a specific
--   recipe.
--   
--   <a>$sel:componentArn:ComponentConfiguration'</a>,
--   <a>componentConfiguration_componentArn</a> - The Amazon Resource Name
--   (ARN) of the component.
newComponentConfiguration :: Text -> ComponentConfiguration

-- | A group of parameter settings that are used to configure the component
--   for a specific recipe.
componentConfiguration_parameters :: Lens' ComponentConfiguration (Maybe (NonEmpty ComponentParameter))

-- | The Amazon Resource Name (ARN) of the component.
componentConfiguration_componentArn :: Lens' ComponentConfiguration Text

-- | Contains a key/value pair that sets the named component parameter.
--   
--   <i>See:</i> <a>newComponentParameter</a> smart constructor.
data ComponentParameter
ComponentParameter' :: Text -> [Text] -> ComponentParameter

-- | The name of the component parameter to set.
[$sel:name:ComponentParameter'] :: ComponentParameter -> Text

-- | Sets the value for the named component parameter.
[$sel:value:ComponentParameter'] :: ComponentParameter -> [Text]

-- | Create a value of <a>ComponentParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ComponentParameter'</a>, <a>componentParameter_name</a> -
--   The name of the component parameter to set.
--   
--   <a>$sel:value:ComponentParameter'</a>, <a>componentParameter_value</a>
--   - Sets the value for the named component parameter.
newComponentParameter :: Text -> ComponentParameter

-- | The name of the component parameter to set.
componentParameter_name :: Lens' ComponentParameter Text

-- | Sets the value for the named component parameter.
componentParameter_value :: Lens' ComponentParameter [Text]

-- | Defines a parameter that is used to provide configuration details for
--   the component.
--   
--   <i>See:</i> <a>newComponentParameterDetail</a> smart constructor.
data ComponentParameterDetail
ComponentParameterDetail' :: Maybe [Text] -> Maybe Text -> Text -> Text -> ComponentParameterDetail

-- | The default value of this parameter if no input is provided.
[$sel:defaultValue:ComponentParameterDetail'] :: ComponentParameterDetail -> Maybe [Text]

-- | Describes this parameter.
[$sel:description:ComponentParameterDetail'] :: ComponentParameterDetail -> Maybe Text

-- | The name of this input parameter.
[$sel:name:ComponentParameterDetail'] :: ComponentParameterDetail -> Text

-- | The type of input this parameter provides. The currently supported
--   value is "string".
[$sel:type':ComponentParameterDetail'] :: ComponentParameterDetail -> Text

-- | Create a value of <a>ComponentParameterDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValue:ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_defaultValue</a> - The default value of
--   this parameter if no input is provided.
--   
--   <a>$sel:description:ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_description</a> - Describes this
--   parameter.
--   
--   <a>$sel:name:ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_name</a> - The name of this input
--   parameter.
--   
--   <a>$sel:type':ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_type</a> - The type of input this
--   parameter provides. The currently supported value is "string".
newComponentParameterDetail :: Text -> Text -> ComponentParameterDetail

-- | The default value of this parameter if no input is provided.
componentParameterDetail_defaultValue :: Lens' ComponentParameterDetail (Maybe [Text])

-- | Describes this parameter.
componentParameterDetail_description :: Lens' ComponentParameterDetail (Maybe Text)

-- | The name of this input parameter.
componentParameterDetail_name :: Lens' ComponentParameterDetail Text

-- | The type of input this parameter provides. The currently supported
--   value is "string".
componentParameterDetail_type :: Lens' ComponentParameterDetail Text

-- | A group of fields that describe the current status of components that
--   are no longer active.
--   
--   <i>See:</i> <a>newComponentState</a> smart constructor.
data ComponentState
ComponentState' :: Maybe ComponentStatus -> Maybe Text -> ComponentState

-- | The current state of the component.
[$sel:status:ComponentState'] :: ComponentState -> Maybe ComponentStatus

-- | Describes how or why the component changed state.
[$sel:reason:ComponentState'] :: ComponentState -> Maybe Text

-- | Create a value of <a>ComponentState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ComponentState'</a>, <a>componentState_status</a> - The
--   current state of the component.
--   
--   <a>$sel:reason:ComponentState'</a>, <a>componentState_reason</a> -
--   Describes how or why the component changed state.
newComponentState :: ComponentState

-- | The current state of the component.
componentState_status :: Lens' ComponentState (Maybe ComponentStatus)

-- | Describes how or why the component changed state.
componentState_reason :: Lens' ComponentState (Maybe Text)

-- | A high-level summary of a component.
--   
--   <i>See:</i> <a>newComponentSummary</a> smart constructor.
data ComponentSummary
ComponentSummary' :: Maybe ComponentState -> Maybe Platform -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ComponentType -> Maybe Text -> Maybe (HashMap Text Text) -> ComponentSummary

-- | Describes the current status of the component.
[$sel:state:ComponentSummary'] :: ComponentSummary -> Maybe ComponentState

-- | The platform of the component.
[$sel:platform:ComponentSummary'] :: ComponentSummary -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the component.
[$sel:arn:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
[$sel:supportedOsVersions:ComponentSummary'] :: ComponentSummary -> Maybe (NonEmpty Text)

-- | The owner of the component.
[$sel:owner:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The date that the component was created.
[$sel:dateCreated:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The name of the component.
[$sel:name:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The version of the component.
[$sel:version:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The change description of the component.
[$sel:changeDescription:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
[$sel:type':ComponentSummary'] :: ComponentSummary -> Maybe ComponentType

-- | The description of the component.
[$sel:description:ComponentSummary'] :: ComponentSummary -> Maybe Text

-- | The tags associated with the component.
[$sel:tags:ComponentSummary'] :: ComponentSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>ComponentSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ComponentSummary'</a>, <a>componentSummary_state</a> -
--   Describes the current status of the component.
--   
--   <a>$sel:platform:ComponentSummary'</a>,
--   <a>componentSummary_platform</a> - The platform of the component.
--   
--   <a>$sel:arn:ComponentSummary'</a>, <a>componentSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the component.
--   
--   <a>$sel:supportedOsVersions:ComponentSummary'</a>,
--   <a>componentSummary_supportedOsVersions</a> - The operating system
--   (OS) version supported by the component. If the OS information is
--   available, a prefix match is performed against the base image OS
--   version during image recipe creation.
--   
--   <a>$sel:owner:ComponentSummary'</a>, <a>componentSummary_owner</a> -
--   The owner of the component.
--   
--   <a>$sel:dateCreated:ComponentSummary'</a>,
--   <a>componentSummary_dateCreated</a> - The date that the component was
--   created.
--   
--   <a>$sel:name:ComponentSummary'</a>, <a>componentSummary_name</a> - The
--   name of the component.
--   
--   <a>$sel:version:ComponentSummary'</a>, <a>componentSummary_version</a>
--   - The version of the component.
--   
--   <a>$sel:changeDescription:ComponentSummary'</a>,
--   <a>componentSummary_changeDescription</a> - The change description of
--   the component.
--   
--   <a>$sel:type':ComponentSummary'</a>, <a>componentSummary_type</a> -
--   The type of the component denotes whether the component is used to
--   build the image or only to test it.
--   
--   <a>$sel:description:ComponentSummary'</a>,
--   <a>componentSummary_description</a> - The description of the
--   component.
--   
--   <a>$sel:tags:ComponentSummary'</a>, <a>componentSummary_tags</a> - The
--   tags associated with the component.
newComponentSummary :: ComponentSummary

-- | Describes the current status of the component.
componentSummary_state :: Lens' ComponentSummary (Maybe ComponentState)

-- | The platform of the component.
componentSummary_platform :: Lens' ComponentSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the component.
componentSummary_arn :: Lens' ComponentSummary (Maybe Text)

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
componentSummary_supportedOsVersions :: Lens' ComponentSummary (Maybe (NonEmpty Text))

-- | The owner of the component.
componentSummary_owner :: Lens' ComponentSummary (Maybe Text)

-- | The date that the component was created.
componentSummary_dateCreated :: Lens' ComponentSummary (Maybe Text)

-- | The name of the component.
componentSummary_name :: Lens' ComponentSummary (Maybe Text)

-- | The version of the component.
componentSummary_version :: Lens' ComponentSummary (Maybe Text)

-- | The change description of the component.
componentSummary_changeDescription :: Lens' ComponentSummary (Maybe Text)

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
componentSummary_type :: Lens' ComponentSummary (Maybe ComponentType)

-- | The description of the component.
componentSummary_description :: Lens' ComponentSummary (Maybe Text)

-- | The tags associated with the component.
componentSummary_tags :: Lens' ComponentSummary (Maybe (HashMap Text Text))

-- | The defining characteristics of a specific version of an Amazon Web
--   Services TOE component.
--   
--   <i>See:</i> <a>newComponentVersion</a> smart constructor.
data ComponentVersion
ComponentVersion' :: Maybe Platform -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ComponentType -> Maybe Text -> ComponentVersion

-- | The platform of the component.
[$sel:platform:ComponentVersion'] :: ComponentVersion -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the component.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
[$sel:arn:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | he operating system (OS) version supported by the component. If the OS
--   information is available, a prefix match is performed against the base
--   image OS version during image recipe creation.
[$sel:supportedOsVersions:ComponentVersion'] :: ComponentVersion -> Maybe (NonEmpty Text)

-- | The owner of the component.
[$sel:owner:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | The date that the component was created.
[$sel:dateCreated:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | The name of the component.
[$sel:name:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | The semantic version of the component.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
[$sel:version:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
[$sel:type':ComponentVersion'] :: ComponentVersion -> Maybe ComponentType

-- | The description of the component.
[$sel:description:ComponentVersion'] :: ComponentVersion -> Maybe Text

-- | Create a value of <a>ComponentVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:ComponentVersion'</a>,
--   <a>componentVersion_platform</a> - The platform of the component.
--   
--   <a>$sel:arn:ComponentVersion'</a>, <a>componentVersion_arn</a> - The
--   Amazon Resource Name (ARN) of the component.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:supportedOsVersions:ComponentVersion'</a>,
--   <a>componentVersion_supportedOsVersions</a> - he operating system (OS)
--   version supported by the component. If the OS information is
--   available, a prefix match is performed against the base image OS
--   version during image recipe creation.
--   
--   <a>$sel:owner:ComponentVersion'</a>, <a>componentVersion_owner</a> -
--   The owner of the component.
--   
--   <a>$sel:dateCreated:ComponentVersion'</a>,
--   <a>componentVersion_dateCreated</a> - The date that the component was
--   created.
--   
--   <a>$sel:name:ComponentVersion'</a>, <a>componentVersion_name</a> - The
--   name of the component.
--   
--   <a>$sel:version:ComponentVersion'</a>, <a>componentVersion_version</a>
--   - The semantic version of the component.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:type':ComponentVersion'</a>, <a>componentVersion_type</a> -
--   The type of the component denotes whether the component is used to
--   build the image or only to test it.
--   
--   <a>$sel:description:ComponentVersion'</a>,
--   <a>componentVersion_description</a> - The description of the
--   component.
newComponentVersion :: ComponentVersion

-- | The platform of the component.
componentVersion_platform :: Lens' ComponentVersion (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the component.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
componentVersion_arn :: Lens' ComponentVersion (Maybe Text)

-- | he operating system (OS) version supported by the component. If the OS
--   information is available, a prefix match is performed against the base
--   image OS version during image recipe creation.
componentVersion_supportedOsVersions :: Lens' ComponentVersion (Maybe (NonEmpty Text))

-- | The owner of the component.
componentVersion_owner :: Lens' ComponentVersion (Maybe Text)

-- | The date that the component was created.
componentVersion_dateCreated :: Lens' ComponentVersion (Maybe Text)

-- | The name of the component.
componentVersion_name :: Lens' ComponentVersion (Maybe Text)

-- | The semantic version of the component.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
componentVersion_version :: Lens' ComponentVersion (Maybe Text)

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
componentVersion_type :: Lens' ComponentVersion (Maybe ComponentType)

-- | The description of the component.
componentVersion_description :: Lens' ComponentVersion (Maybe Text)

-- | A container encapsulates the runtime environment for an application.
--   
--   <i>See:</i> <a>newContainer</a> smart constructor.
data Container
Container' :: Maybe [Text] -> Maybe Text -> Container

-- | A list of URIs for containers created in the context Region.
[$sel:imageUris:Container'] :: Container -> Maybe [Text]

-- | Containers and container images are Region-specific. This is the
--   Region context for the container.
[$sel:region:Container'] :: Container -> Maybe Text

-- | Create a value of <a>Container</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageUris:Container'</a>, <a>container_imageUris</a> - A list
--   of URIs for containers created in the context Region.
--   
--   <a>$sel:region:Container'</a>, <a>container_region</a> - Containers
--   and container images are Region-specific. This is the Region context
--   for the container.
newContainer :: Container

-- | A list of URIs for containers created in the context Region.
container_imageUris :: Lens' Container (Maybe [Text])

-- | Containers and container images are Region-specific. This is the
--   Region context for the container.
container_region :: Lens' Container (Maybe Text)

-- | Container distribution settings for encryption, licensing, and sharing
--   in a specific Region.
--   
--   <i>See:</i> <a>newContainerDistributionConfiguration</a> smart
--   constructor.
data ContainerDistributionConfiguration
ContainerDistributionConfiguration' :: Maybe [Text] -> Maybe Text -> TargetContainerRepository -> ContainerDistributionConfiguration

-- | Tags that are attached to the container distribution configuration.
[$sel:containerTags:ContainerDistributionConfiguration'] :: ContainerDistributionConfiguration -> Maybe [Text]

-- | The description of the container distribution configuration.
[$sel:description:ContainerDistributionConfiguration'] :: ContainerDistributionConfiguration -> Maybe Text

-- | The destination repository for the container distribution
--   configuration.
[$sel:targetRepository:ContainerDistributionConfiguration'] :: ContainerDistributionConfiguration -> TargetContainerRepository

-- | Create a value of <a>ContainerDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerTags:ContainerDistributionConfiguration'</a>,
--   <a>containerDistributionConfiguration_containerTags</a> - Tags that
--   are attached to the container distribution configuration.
--   
--   <a>$sel:description:ContainerDistributionConfiguration'</a>,
--   <a>containerDistributionConfiguration_description</a> - The
--   description of the container distribution configuration.
--   
--   <a>$sel:targetRepository:ContainerDistributionConfiguration'</a>,
--   <a>containerDistributionConfiguration_targetRepository</a> - The
--   destination repository for the container distribution configuration.
newContainerDistributionConfiguration :: TargetContainerRepository -> ContainerDistributionConfiguration

-- | Tags that are attached to the container distribution configuration.
containerDistributionConfiguration_containerTags :: Lens' ContainerDistributionConfiguration (Maybe [Text])

-- | The description of the container distribution configuration.
containerDistributionConfiguration_description :: Lens' ContainerDistributionConfiguration (Maybe Text)

-- | The destination repository for the container distribution
--   configuration.
containerDistributionConfiguration_targetRepository :: Lens' ContainerDistributionConfiguration TargetContainerRepository

-- | A container recipe.
--   
--   <i>See:</i> <a>newContainerRecipe</a> smart constructor.
data ContainerRecipe
ContainerRecipe' :: Maybe (NonEmpty ComponentConfiguration) -> Maybe ContainerType -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TargetContainerRepository -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe InstanceConfiguration -> ContainerRecipe

-- | Components for build and test that are included in the container
--   recipe.
[$sel:components:ContainerRecipe'] :: ContainerRecipe -> Maybe (NonEmpty ComponentConfiguration)

-- | Specifies the type of container, such as Docker.
[$sel:containerType:ContainerRecipe'] :: ContainerRecipe -> Maybe ContainerType

-- | The system platform for the container, such as Windows or Linux.
[$sel:platform:ContainerRecipe'] :: ContainerRecipe -> Maybe Platform

-- | Dockerfiles are text documents that are used to build Docker
--   containers, and ensure that they contain all of the elements required
--   by the application running inside. The template data consists of
--   contextual variables where Image Builder places build information or
--   scripts, based on your container image recipe.
[$sel:dockerfileTemplateData:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The Amazon Resource Name (ARN) of the container recipe.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
[$sel:arn:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The working directory for use during build and test workflows.
[$sel:workingDirectory:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The base image for the container recipe.
[$sel:parentImage:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | A flag that indicates if the target container is encrypted.
[$sel:encrypted:ContainerRecipe'] :: ContainerRecipe -> Maybe Bool

-- | The owner of the container recipe.
[$sel:owner:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The date when this container recipe was created.
[$sel:dateCreated:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The name of the container recipe.
[$sel:name:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | Identifies which KMS key is used to encrypt the container image for
--   distribution to the target Region.
[$sel:kmsKeyId:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The semantic version of the container recipe.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
[$sel:version:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | The destination repository for the container image.
[$sel:targetRepository:ContainerRecipe'] :: ContainerRecipe -> Maybe TargetContainerRepository

-- | The description of the container recipe.
[$sel:description:ContainerRecipe'] :: ContainerRecipe -> Maybe Text

-- | Tags that are attached to the container recipe.
[$sel:tags:ContainerRecipe'] :: ContainerRecipe -> Maybe (HashMap Text Text)

-- | A group of options that can be used to configure an instance for
--   building and testing container images.
[$sel:instanceConfiguration:ContainerRecipe'] :: ContainerRecipe -> Maybe InstanceConfiguration

-- | Create a value of <a>ContainerRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:components:ContainerRecipe'</a>,
--   <a>containerRecipe_components</a> - Components for build and test that
--   are included in the container recipe.
--   
--   <a>$sel:containerType:ContainerRecipe'</a>,
--   <a>containerRecipe_containerType</a> - Specifies the type of
--   container, such as Docker.
--   
--   <a>$sel:platform:ContainerRecipe'</a>, <a>containerRecipe_platform</a>
--   - The system platform for the container, such as Windows or Linux.
--   
--   <a>$sel:dockerfileTemplateData:ContainerRecipe'</a>,
--   <a>containerRecipe_dockerfileTemplateData</a> - Dockerfiles are text
--   documents that are used to build Docker containers, and ensure that
--   they contain all of the elements required by the application running
--   inside. The template data consists of contextual variables where Image
--   Builder places build information or scripts, based on your container
--   image recipe.
--   
--   <a>$sel:arn:ContainerRecipe'</a>, <a>containerRecipe_arn</a> - The
--   Amazon Resource Name (ARN) of the container recipe.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:workingDirectory:ContainerRecipe'</a>,
--   <a>containerRecipe_workingDirectory</a> - The working directory for
--   use during build and test workflows.
--   
--   <a>$sel:parentImage:ContainerRecipe'</a>,
--   <a>containerRecipe_parentImage</a> - The base image for the container
--   recipe.
--   
--   <a>$sel:encrypted:ContainerRecipe'</a>,
--   <a>containerRecipe_encrypted</a> - A flag that indicates if the target
--   container is encrypted.
--   
--   <a>$sel:owner:ContainerRecipe'</a>, <a>containerRecipe_owner</a> - The
--   owner of the container recipe.
--   
--   <a>$sel:dateCreated:ContainerRecipe'</a>,
--   <a>containerRecipe_dateCreated</a> - The date when this container
--   recipe was created.
--   
--   <a>$sel:name:ContainerRecipe'</a>, <a>containerRecipe_name</a> - The
--   name of the container recipe.
--   
--   <a>$sel:kmsKeyId:ContainerRecipe'</a>, <a>containerRecipe_kmsKeyId</a>
--   - Identifies which KMS key is used to encrypt the container image for
--   distribution to the target Region.
--   
--   <a>$sel:version:ContainerRecipe'</a>, <a>containerRecipe_version</a> -
--   The semantic version of the container recipe.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:targetRepository:ContainerRecipe'</a>,
--   <a>containerRecipe_targetRepository</a> - The destination repository
--   for the container image.
--   
--   <a>$sel:description:ContainerRecipe'</a>,
--   <a>containerRecipe_description</a> - The description of the container
--   recipe.
--   
--   <a>$sel:tags:ContainerRecipe'</a>, <a>containerRecipe_tags</a> - Tags
--   that are attached to the container recipe.
--   
--   <a>$sel:instanceConfiguration:ContainerRecipe'</a>,
--   <a>containerRecipe_instanceConfiguration</a> - A group of options that
--   can be used to configure an instance for building and testing
--   container images.
newContainerRecipe :: ContainerRecipe

-- | Components for build and test that are included in the container
--   recipe.
containerRecipe_components :: Lens' ContainerRecipe (Maybe (NonEmpty ComponentConfiguration))

-- | Specifies the type of container, such as Docker.
containerRecipe_containerType :: Lens' ContainerRecipe (Maybe ContainerType)

-- | The system platform for the container, such as Windows or Linux.
containerRecipe_platform :: Lens' ContainerRecipe (Maybe Platform)

-- | Dockerfiles are text documents that are used to build Docker
--   containers, and ensure that they contain all of the elements required
--   by the application running inside. The template data consists of
--   contextual variables where Image Builder places build information or
--   scripts, based on your container image recipe.
containerRecipe_dockerfileTemplateData :: Lens' ContainerRecipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the container recipe.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
containerRecipe_arn :: Lens' ContainerRecipe (Maybe Text)

-- | The working directory for use during build and test workflows.
containerRecipe_workingDirectory :: Lens' ContainerRecipe (Maybe Text)

-- | The base image for the container recipe.
containerRecipe_parentImage :: Lens' ContainerRecipe (Maybe Text)

-- | A flag that indicates if the target container is encrypted.
containerRecipe_encrypted :: Lens' ContainerRecipe (Maybe Bool)

-- | The owner of the container recipe.
containerRecipe_owner :: Lens' ContainerRecipe (Maybe Text)

-- | The date when this container recipe was created.
containerRecipe_dateCreated :: Lens' ContainerRecipe (Maybe Text)

-- | The name of the container recipe.
containerRecipe_name :: Lens' ContainerRecipe (Maybe Text)

-- | Identifies which KMS key is used to encrypt the container image for
--   distribution to the target Region.
containerRecipe_kmsKeyId :: Lens' ContainerRecipe (Maybe Text)

-- | The semantic version of the container recipe.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
containerRecipe_version :: Lens' ContainerRecipe (Maybe Text)

-- | The destination repository for the container image.
containerRecipe_targetRepository :: Lens' ContainerRecipe (Maybe TargetContainerRepository)

-- | The description of the container recipe.
containerRecipe_description :: Lens' ContainerRecipe (Maybe Text)

-- | Tags that are attached to the container recipe.
containerRecipe_tags :: Lens' ContainerRecipe (Maybe (HashMap Text Text))

-- | A group of options that can be used to configure an instance for
--   building and testing container images.
containerRecipe_instanceConfiguration :: Lens' ContainerRecipe (Maybe InstanceConfiguration)

-- | A summary of a container recipe
--   
--   <i>See:</i> <a>newContainerRecipeSummary</a> smart constructor.
data ContainerRecipeSummary
ContainerRecipeSummary' :: Maybe ContainerType -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ContainerRecipeSummary

-- | Specifies the type of container, such as "Docker".
[$sel:containerType:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe ContainerType

-- | The system platform for the container, such as Windows or Linux.
[$sel:platform:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the container recipe.
[$sel:arn:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Text

-- | The base image for the container recipe.
[$sel:parentImage:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Text

-- | The owner of the container recipe.
[$sel:owner:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Text

-- | The date when this container recipe was created.
[$sel:dateCreated:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Text

-- | The name of the container recipe.
[$sel:name:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe Text

-- | Tags that are attached to the container recipe.
[$sel:tags:ContainerRecipeSummary'] :: ContainerRecipeSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>ContainerRecipeSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerType:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_containerType</a> - Specifies the type of
--   container, such as "Docker".
--   
--   <a>$sel:platform:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_platform</a> - The system platform for the
--   container, such as Windows or Linux.
--   
--   <a>$sel:arn:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_arn</a> - The Amazon Resource Name (ARN) of
--   the container recipe.
--   
--   <a>$sel:parentImage:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_parentImage</a> - The base image for the
--   container recipe.
--   
--   <a>$sel:owner:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_owner</a> - The owner of the container
--   recipe.
--   
--   <a>$sel:dateCreated:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_dateCreated</a> - The date when this
--   container recipe was created.
--   
--   <a>$sel:name:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_name</a> - The name of the container recipe.
--   
--   <a>$sel:tags:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_tags</a> - Tags that are attached to the
--   container recipe.
newContainerRecipeSummary :: ContainerRecipeSummary

-- | Specifies the type of container, such as "Docker".
containerRecipeSummary_containerType :: Lens' ContainerRecipeSummary (Maybe ContainerType)

-- | The system platform for the container, such as Windows or Linux.
containerRecipeSummary_platform :: Lens' ContainerRecipeSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the container recipe.
containerRecipeSummary_arn :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The base image for the container recipe.
containerRecipeSummary_parentImage :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The owner of the container recipe.
containerRecipeSummary_owner :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The date when this container recipe was created.
containerRecipeSummary_dateCreated :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The name of the container recipe.
containerRecipeSummary_name :: Lens' ContainerRecipeSummary (Maybe Text)

-- | Tags that are attached to the container recipe.
containerRecipeSummary_tags :: Lens' ContainerRecipeSummary (Maybe (HashMap Text Text))

-- | Defines the settings for a specific Region.
--   
--   <i>See:</i> <a>newDistribution</a> smart constructor.
data Distribution
Distribution' :: Maybe AmiDistributionConfiguration -> Maybe (NonEmpty LaunchTemplateConfiguration) -> Maybe (NonEmpty Text) -> Maybe ContainerDistributionConfiguration -> Text -> Distribution

-- | The specific AMI settings; for example, launch permissions or AMI
--   tags.
[$sel:amiDistributionConfiguration:Distribution'] :: Distribution -> Maybe AmiDistributionConfiguration

-- | A group of launchTemplateConfiguration settings that apply to image
--   distribution for specified accounts.
[$sel:launchTemplateConfigurations:Distribution'] :: Distribution -> Maybe (NonEmpty LaunchTemplateConfiguration)

-- | The License Manager Configuration to associate with the AMI in the
--   specified Region.
[$sel:licenseConfigurationArns:Distribution'] :: Distribution -> Maybe (NonEmpty Text)

-- | Container distribution settings for encryption, licensing, and sharing
--   in a specific Region.
[$sel:containerDistributionConfiguration:Distribution'] :: Distribution -> Maybe ContainerDistributionConfiguration

-- | The target Region.
[$sel:region:Distribution'] :: Distribution -> Text

-- | Create a value of <a>Distribution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amiDistributionConfiguration:Distribution'</a>,
--   <a>distribution_amiDistributionConfiguration</a> - The specific AMI
--   settings; for example, launch permissions or AMI tags.
--   
--   <a>$sel:launchTemplateConfigurations:Distribution'</a>,
--   <a>distribution_launchTemplateConfigurations</a> - A group of
--   launchTemplateConfiguration settings that apply to image distribution
--   for specified accounts.
--   
--   <a>$sel:licenseConfigurationArns:Distribution'</a>,
--   <a>distribution_licenseConfigurationArns</a> - The License Manager
--   Configuration to associate with the AMI in the specified Region.
--   
--   <a>$sel:containerDistributionConfiguration:Distribution'</a>,
--   <a>distribution_containerDistributionConfiguration</a> - Container
--   distribution settings for encryption, licensing, and sharing in a
--   specific Region.
--   
--   <a>$sel:region:Distribution'</a>, <a>distribution_region</a> - The
--   target Region.
newDistribution :: Text -> Distribution

-- | The specific AMI settings; for example, launch permissions or AMI
--   tags.
distribution_amiDistributionConfiguration :: Lens' Distribution (Maybe AmiDistributionConfiguration)

-- | A group of launchTemplateConfiguration settings that apply to image
--   distribution for specified accounts.
distribution_launchTemplateConfigurations :: Lens' Distribution (Maybe (NonEmpty LaunchTemplateConfiguration))

-- | The License Manager Configuration to associate with the AMI in the
--   specified Region.
distribution_licenseConfigurationArns :: Lens' Distribution (Maybe (NonEmpty Text))

-- | Container distribution settings for encryption, licensing, and sharing
--   in a specific Region.
distribution_containerDistributionConfiguration :: Lens' Distribution (Maybe ContainerDistributionConfiguration)

-- | The target Region.
distribution_region :: Lens' Distribution Text

-- | A distribution configuration.
--   
--   <i>See:</i> <a>newDistributionConfiguration</a> smart constructor.
data DistributionConfiguration
DistributionConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Distribution] -> Maybe (HashMap Text Text) -> Natural -> DistributionConfiguration

-- | The Amazon Resource Name (ARN) of the distribution configuration.
[$sel:arn:DistributionConfiguration'] :: DistributionConfiguration -> Maybe Text

-- | The date on which this distribution configuration was last updated.
[$sel:dateUpdated:DistributionConfiguration'] :: DistributionConfiguration -> Maybe Text

-- | The date on which this distribution configuration was created.
[$sel:dateCreated:DistributionConfiguration'] :: DistributionConfiguration -> Maybe Text

-- | The name of the distribution configuration.
[$sel:name:DistributionConfiguration'] :: DistributionConfiguration -> Maybe Text

-- | The description of the distribution configuration.
[$sel:description:DistributionConfiguration'] :: DistributionConfiguration -> Maybe Text

-- | The distribution objects that apply Region-specific settings for the
--   deployment of the image to targeted Regions.
[$sel:distributions:DistributionConfiguration'] :: DistributionConfiguration -> Maybe [Distribution]

-- | The tags of the distribution configuration.
[$sel:tags:DistributionConfiguration'] :: DistributionConfiguration -> Maybe (HashMap Text Text)

-- | The maximum duration in minutes for this distribution configuration.
[$sel:timeoutMinutes:DistributionConfiguration'] :: DistributionConfiguration -> Natural

-- | Create a value of <a>DistributionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_arn</a> - The Amazon Resource Name (ARN)
--   of the distribution configuration.
--   
--   <a>$sel:dateUpdated:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_dateUpdated</a> - The date on which this
--   distribution configuration was last updated.
--   
--   <a>$sel:dateCreated:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_dateCreated</a> - The date on which this
--   distribution configuration was created.
--   
--   <a>$sel:name:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_name</a> - The name of the distribution
--   configuration.
--   
--   <a>$sel:description:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_description</a> - The description of the
--   distribution configuration.
--   
--   <a>$sel:distributions:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_distributions</a> - The distribution
--   objects that apply Region-specific settings for the deployment of the
--   image to targeted Regions.
--   
--   <a>$sel:tags:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_tags</a> - The tags of the distribution
--   configuration.
--   
--   <a>$sel:timeoutMinutes:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_timeoutMinutes</a> - The maximum duration
--   in minutes for this distribution configuration.
newDistributionConfiguration :: Natural -> DistributionConfiguration

-- | The Amazon Resource Name (ARN) of the distribution configuration.
distributionConfiguration_arn :: Lens' DistributionConfiguration (Maybe Text)

-- | The date on which this distribution configuration was last updated.
distributionConfiguration_dateUpdated :: Lens' DistributionConfiguration (Maybe Text)

-- | The date on which this distribution configuration was created.
distributionConfiguration_dateCreated :: Lens' DistributionConfiguration (Maybe Text)

-- | The name of the distribution configuration.
distributionConfiguration_name :: Lens' DistributionConfiguration (Maybe Text)

-- | The description of the distribution configuration.
distributionConfiguration_description :: Lens' DistributionConfiguration (Maybe Text)

-- | The distribution objects that apply Region-specific settings for the
--   deployment of the image to targeted Regions.
distributionConfiguration_distributions :: Lens' DistributionConfiguration (Maybe [Distribution])

-- | The tags of the distribution configuration.
distributionConfiguration_tags :: Lens' DistributionConfiguration (Maybe (HashMap Text Text))

-- | The maximum duration in minutes for this distribution configuration.
distributionConfiguration_timeoutMinutes :: Lens' DistributionConfiguration Natural

-- | A high-level overview of a distribution configuration.
--   
--   <i>See:</i> <a>newDistributionConfigurationSummary</a> smart
--   constructor.
data DistributionConfigurationSummary
DistributionConfigurationSummary' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> DistributionConfigurationSummary

-- | The Amazon Resource Name (ARN) of the distribution configuration.
[$sel:arn:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe Text

-- | A list of Regions where the container image is distributed to.
[$sel:regions:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe [Text]

-- | The date on which the distribution configuration was updated.
[$sel:dateUpdated:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe Text

-- | The date on which the distribution configuration was created.
[$sel:dateCreated:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe Text

-- | The name of the distribution configuration.
[$sel:name:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe Text

-- | The description of the distribution configuration.
[$sel:description:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe Text

-- | The tags associated with the distribution configuration.
[$sel:tags:DistributionConfigurationSummary'] :: DistributionConfigurationSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>DistributionConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_arn</a> - The Amazon Resource Name
--   (ARN) of the distribution configuration.
--   
--   <a>$sel:regions:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_regions</a> - A list of Regions
--   where the container image is distributed to.
--   
--   <a>$sel:dateUpdated:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_dateUpdated</a> - The date on
--   which the distribution configuration was updated.
--   
--   <a>$sel:dateCreated:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_dateCreated</a> - The date on
--   which the distribution configuration was created.
--   
--   <a>$sel:name:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_name</a> - The name of the
--   distribution configuration.
--   
--   <a>$sel:description:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_description</a> - The description
--   of the distribution configuration.
--   
--   <a>$sel:tags:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_tags</a> - The tags associated
--   with the distribution configuration.
newDistributionConfigurationSummary :: DistributionConfigurationSummary

-- | The Amazon Resource Name (ARN) of the distribution configuration.
distributionConfigurationSummary_arn :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | A list of Regions where the container image is distributed to.
distributionConfigurationSummary_regions :: Lens' DistributionConfigurationSummary (Maybe [Text])

-- | The date on which the distribution configuration was updated.
distributionConfigurationSummary_dateUpdated :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The date on which the distribution configuration was created.
distributionConfigurationSummary_dateCreated :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The name of the distribution configuration.
distributionConfigurationSummary_name :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The description of the distribution configuration.
distributionConfigurationSummary_description :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The tags associated with the distribution configuration.
distributionConfigurationSummary_tags :: Lens' DistributionConfigurationSummary (Maybe (HashMap Text Text))

-- | Amazon EBS-specific block device mapping specifications.
--   
--   <i>See:</i> <a>newEbsInstanceBlockDeviceSpecification</a> smart
--   constructor.
data EbsInstanceBlockDeviceSpecification
EbsInstanceBlockDeviceSpecification' :: Maybe Bool -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Bool -> Maybe Text -> Maybe EbsVolumeType -> Maybe Text -> EbsInstanceBlockDeviceSpecification

-- | Use to configure delete on termination of the associated device.
[$sel:deleteOnTermination:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Bool

-- | <b>For GP3 volumes only</b> – The throughput in MiB/s that the volume
--   supports.
[$sel:throughput:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Natural

-- | Use to override the device's volume size.
[$sel:volumeSize:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Natural

-- | Use to configure device IOPS.
[$sel:iops:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Natural

-- | Use to configure device encryption.
[$sel:encrypted:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Bool

-- | Use to configure the KMS key to use when encrypting the device.
[$sel:kmsKeyId:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Text

-- | Use to override the device's volume type.
[$sel:volumeType:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe EbsVolumeType

-- | The snapshot that defines the device contents.
[$sel:snapshotId:EbsInstanceBlockDeviceSpecification'] :: EbsInstanceBlockDeviceSpecification -> Maybe Text

-- | Create a value of <a>EbsInstanceBlockDeviceSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteOnTermination:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_deleteOnTermination</a> - Use
--   to configure delete on termination of the associated device.
--   
--   <a>$sel:throughput:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_throughput</a> - <b>For GP3
--   volumes only</b> – The throughput in MiB/s that the volume supports.
--   
--   <a>$sel:volumeSize:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_volumeSize</a> - Use to
--   override the device's volume size.
--   
--   <a>$sel:iops:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_iops</a> - Use to configure
--   device IOPS.
--   
--   <a>$sel:encrypted:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_encrypted</a> - Use to
--   configure device encryption.
--   
--   <a>$sel:kmsKeyId:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_kmsKeyId</a> - Use to configure
--   the KMS key to use when encrypting the device.
--   
--   <a>$sel:volumeType:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_volumeType</a> - Use to
--   override the device's volume type.
--   
--   <a>$sel:snapshotId:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_snapshotId</a> - The snapshot
--   that defines the device contents.
newEbsInstanceBlockDeviceSpecification :: EbsInstanceBlockDeviceSpecification

-- | Use to configure delete on termination of the associated device.
ebsInstanceBlockDeviceSpecification_deleteOnTermination :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Bool)

-- | <b>For GP3 volumes only</b> – The throughput in MiB/s that the volume
--   supports.
ebsInstanceBlockDeviceSpecification_throughput :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Natural)

-- | Use to override the device's volume size.
ebsInstanceBlockDeviceSpecification_volumeSize :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Natural)

-- | Use to configure device IOPS.
ebsInstanceBlockDeviceSpecification_iops :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Natural)

-- | Use to configure device encryption.
ebsInstanceBlockDeviceSpecification_encrypted :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Bool)

-- | Use to configure the KMS key to use when encrypting the device.
ebsInstanceBlockDeviceSpecification_kmsKeyId :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Text)

-- | Use to override the device's volume type.
ebsInstanceBlockDeviceSpecification_volumeType :: Lens' EbsInstanceBlockDeviceSpecification (Maybe EbsVolumeType)

-- | The snapshot that defines the device contents.
ebsInstanceBlockDeviceSpecification_snapshotId :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Text)

-- | A filter name and value pair that is used to return a more specific
--   list of results from a list operation. Filters can be used to match a
--   set of resources by specific criteria, such as tags, attributes, or
--   IDs.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe (NonEmpty Text) -> Maybe Text -> Filter

-- | The filter values. Filter values are case-sensitive.
[$sel:values:Filter'] :: Filter -> Maybe (NonEmpty Text)

-- | The name of the filter. Filter names are case-sensitive.
[$sel:name:Filter'] :: Filter -> Maybe Text

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - The filter values.
--   Filter values are case-sensitive.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   Filter names are case-sensitive.
newFilter :: Filter

-- | The filter values. Filter values are case-sensitive.
filter_values :: Lens' Filter (Maybe (NonEmpty Text))

-- | The name of the filter. Filter names are case-sensitive.
filter_name :: Lens' Filter (Maybe Text)

-- | An Image Builder image. You must specify exactly one recipe for the
--   image – either a container recipe (<tt>containerRecipe</tt>), which
--   creates a container image, or an image recipe (<tt>imageRecipe</tt>),
--   which creates an AMI.
--   
--   <i>See:</i> <a>newImage</a> smart constructor.
data Image
Image' :: Maybe ImageRecipe -> Maybe ImageState -> Maybe Platform -> Maybe ImageTestsConfiguration -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe ContainerRecipe -> Maybe Text -> Maybe InfrastructureConfiguration -> Maybe Text -> Maybe DistributionConfiguration -> Maybe Text -> Maybe ImageType -> Maybe Text -> Maybe OutputResources -> Maybe Text -> Maybe (HashMap Text Text) -> Image

-- | The image recipe used when creating the image.
[$sel:imageRecipe:Image'] :: Image -> Maybe ImageRecipe

-- | The state of the image.
[$sel:state:Image'] :: Image -> Maybe ImageState

-- | The platform of the image.
[$sel:platform:Image'] :: Image -> Maybe Platform

-- | The image tests configuration used when creating this image.
[$sel:imageTestsConfiguration:Image'] :: Image -> Maybe ImageTestsConfiguration

-- | The Amazon Resource Name (ARN) of the image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
[$sel:arn:Image'] :: Image -> Maybe Text

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
[$sel:enhancedImageMetadataEnabled:Image'] :: Image -> Maybe Bool

-- | The date on which this image was created.
[$sel:dateCreated:Image'] :: Image -> Maybe Text

-- | The recipe that is used to create an Image Builder container image.
[$sel:containerRecipe:Image'] :: Image -> Maybe ContainerRecipe

-- | The name of the image.
[$sel:name:Image'] :: Image -> Maybe Text

-- | The infrastructure used when creating this image.
[$sel:infrastructureConfiguration:Image'] :: Image -> Maybe InfrastructureConfiguration

-- | The semantic version of the image.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
[$sel:version:Image'] :: Image -> Maybe Text

-- | The distribution configuration used when creating this image.
[$sel:distributionConfiguration:Image'] :: Image -> Maybe DistributionConfiguration

-- | The Amazon Resource Name (ARN) of the image pipeline that created this
--   image.
[$sel:sourcePipelineArn:Image'] :: Image -> Maybe Text

-- | Specifies whether this is an AMI or container image.
[$sel:type':Image'] :: Image -> Maybe ImageType

-- | The name of the image pipeline that created this image.
[$sel:sourcePipelineName:Image'] :: Image -> Maybe Text

-- | The output resources produced when creating this image.
[$sel:outputResources:Image'] :: Image -> Maybe OutputResources

-- | The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
[$sel:osVersion:Image'] :: Image -> Maybe Text

-- | The tags of the image.
[$sel:tags:Image'] :: Image -> Maybe (HashMap Text Text)

-- | Create a value of <a>Image</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRecipe:Image'</a>, <a>image_imageRecipe</a> - The image
--   recipe used when creating the image.
--   
--   <a>$sel:state:Image'</a>, <a>image_state</a> - The state of the image.
--   
--   <a>$sel:platform:Image'</a>, <a>image_platform</a> - The platform of
--   the image.
--   
--   <a>$sel:imageTestsConfiguration:Image'</a>,
--   <a>image_imageTestsConfiguration</a> - The image tests configuration
--   used when creating this image.
--   
--   <a>$sel:arn:Image'</a>, <a>image_arn</a> - The Amazon Resource Name
--   (ARN) of the image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:enhancedImageMetadataEnabled:Image'</a>,
--   <a>image_enhancedImageMetadataEnabled</a> - Collects additional
--   information about the image being created, including the operating
--   system (OS) version and package list. This information is used to
--   enhance the overall experience of using EC2 Image Builder. Enabled by
--   default.
--   
--   <a>$sel:dateCreated:Image'</a>, <a>image_dateCreated</a> - The date on
--   which this image was created.
--   
--   <a>$sel:containerRecipe:Image'</a>, <a>image_containerRecipe</a> - The
--   recipe that is used to create an Image Builder container image.
--   
--   <a>$sel:name:Image'</a>, <a>image_name</a> - The name of the image.
--   
--   <a>$sel:infrastructureConfiguration:Image'</a>,
--   <a>image_infrastructureConfiguration</a> - The infrastructure used
--   when creating this image.
--   
--   <a>$sel:version:Image'</a>, <a>image_version</a> - The semantic
--   version of the image.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:distributionConfiguration:Image'</a>,
--   <a>image_distributionConfiguration</a> - The distribution
--   configuration used when creating this image.
--   
--   <a>$sel:sourcePipelineArn:Image'</a>, <a>image_sourcePipelineArn</a> -
--   The Amazon Resource Name (ARN) of the image pipeline that created this
--   image.
--   
--   <a>$sel:type':Image'</a>, <a>image_type</a> - Specifies whether this
--   is an AMI or container image.
--   
--   <a>$sel:sourcePipelineName:Image'</a>, <a>image_sourcePipelineName</a>
--   - The name of the image pipeline that created this image.
--   
--   <a>$sel:outputResources:Image'</a>, <a>image_outputResources</a> - The
--   output resources produced when creating this image.
--   
--   <a>$sel:osVersion:Image'</a>, <a>image_osVersion</a> - The operating
--   system version of the instance. For example, Amazon Linux 2, Ubuntu
--   18, or Microsoft Windows Server 2019.
--   
--   <a>$sel:tags:Image'</a>, <a>image_tags</a> - The tags of the image.
newImage :: Image

-- | The image recipe used when creating the image.
image_imageRecipe :: Lens' Image (Maybe ImageRecipe)

-- | The state of the image.
image_state :: Lens' Image (Maybe ImageState)

-- | The platform of the image.
image_platform :: Lens' Image (Maybe Platform)

-- | The image tests configuration used when creating this image.
image_imageTestsConfiguration :: Lens' Image (Maybe ImageTestsConfiguration)

-- | The Amazon Resource Name (ARN) of the image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
image_arn :: Lens' Image (Maybe Text)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
image_enhancedImageMetadataEnabled :: Lens' Image (Maybe Bool)

-- | The date on which this image was created.
image_dateCreated :: Lens' Image (Maybe Text)

-- | The recipe that is used to create an Image Builder container image.
image_containerRecipe :: Lens' Image (Maybe ContainerRecipe)

-- | The name of the image.
image_name :: Lens' Image (Maybe Text)

-- | The infrastructure used when creating this image.
image_infrastructureConfiguration :: Lens' Image (Maybe InfrastructureConfiguration)

-- | The semantic version of the image.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
image_version :: Lens' Image (Maybe Text)

-- | The distribution configuration used when creating this image.
image_distributionConfiguration :: Lens' Image (Maybe DistributionConfiguration)

-- | The Amazon Resource Name (ARN) of the image pipeline that created this
--   image.
image_sourcePipelineArn :: Lens' Image (Maybe Text)

-- | Specifies whether this is an AMI or container image.
image_type :: Lens' Image (Maybe ImageType)

-- | The name of the image pipeline that created this image.
image_sourcePipelineName :: Lens' Image (Maybe Text)

-- | The output resources produced when creating this image.
image_outputResources :: Lens' Image (Maybe OutputResources)

-- | The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
image_osVersion :: Lens' Image (Maybe Text)

-- | The tags of the image.
image_tags :: Lens' Image (Maybe (HashMap Text Text))

-- | Represents a package installed on an Image Builder image.
--   
--   <i>See:</i> <a>newImagePackage</a> smart constructor.
data ImagePackage
ImagePackage' :: Maybe Text -> Maybe Text -> ImagePackage

-- | The name of the package as reported to the operating system package
--   manager.
[$sel:packageName:ImagePackage'] :: ImagePackage -> Maybe Text

-- | The version of the package as reported to the operating system package
--   manager.
[$sel:packageVersion:ImagePackage'] :: ImagePackage -> Maybe Text

-- | Create a value of <a>ImagePackage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageName:ImagePackage'</a>, <a>imagePackage_packageName</a>
--   - The name of the package as reported to the operating system package
--   manager.
--   
--   <a>$sel:packageVersion:ImagePackage'</a>,
--   <a>imagePackage_packageVersion</a> - The version of the package as
--   reported to the operating system package manager.
newImagePackage :: ImagePackage

-- | The name of the package as reported to the operating system package
--   manager.
imagePackage_packageName :: Lens' ImagePackage (Maybe Text)

-- | The version of the package as reported to the operating system package
--   manager.
imagePackage_packageVersion :: Lens' ImagePackage (Maybe Text)

-- | Details of an image pipeline.
--   
--   <i>See:</i> <a>newImagePipeline</a> smart constructor.
data ImagePipeline
ImagePipeline' :: Maybe PipelineStatus -> Maybe Text -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe ImageTestsConfiguration -> Maybe Text -> Maybe Text -> Maybe Schedule -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ImagePipeline

-- | The status of the image pipeline.
[$sel:status:ImagePipeline'] :: ImagePipeline -> Maybe PipelineStatus

-- | The date on which this image pipeline was last run.
[$sel:dateLastRun:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The platform of the image pipeline.
[$sel:platform:ImagePipeline'] :: ImagePipeline -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   associated with this image pipeline.
[$sel:infrastructureConfigurationArn:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The Amazon Resource Name (ARN) of the container recipe that is used
--   for this pipeline.
[$sel:containerRecipeArn:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The image tests configuration of the image pipeline.
[$sel:imageTestsConfiguration:ImagePipeline'] :: ImagePipeline -> Maybe ImageTestsConfiguration

-- | The date on which this image pipeline will next be run.
[$sel:dateNextRun:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image pipeline.
[$sel:arn:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The schedule of the image pipeline.
[$sel:schedule:ImagePipeline'] :: ImagePipeline -> Maybe Schedule

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
[$sel:enhancedImageMetadataEnabled:ImagePipeline'] :: ImagePipeline -> Maybe Bool

-- | The date on which this image pipeline was last updated.
[$sel:dateUpdated:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The date on which this image pipeline was created.
[$sel:dateCreated:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The name of the image pipeline.
[$sel:name:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The Amazon Resource Name (ARN) of the distribution configuration
--   associated with this image pipeline.
[$sel:distributionConfigurationArn:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image recipe associated with
--   this image pipeline.
[$sel:imageRecipeArn:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The description of the image pipeline.
[$sel:description:ImagePipeline'] :: ImagePipeline -> Maybe Text

-- | The tags of this image pipeline.
[$sel:tags:ImagePipeline'] :: ImagePipeline -> Maybe (HashMap Text Text)

-- | Create a value of <a>ImagePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ImagePipeline'</a>, <a>imagePipeline_status</a> - The
--   status of the image pipeline.
--   
--   <a>$sel:dateLastRun:ImagePipeline'</a>,
--   <a>imagePipeline_dateLastRun</a> - The date on which this image
--   pipeline was last run.
--   
--   <a>$sel:platform:ImagePipeline'</a>, <a>imagePipeline_platform</a> -
--   The platform of the image pipeline.
--   
--   <a>$sel:infrastructureConfigurationArn:ImagePipeline'</a>,
--   <a>imagePipeline_infrastructureConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the infrastructure configuration associated
--   with this image pipeline.
--   
--   <a>$sel:containerRecipeArn:ImagePipeline'</a>,
--   <a>imagePipeline_containerRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the container recipe that is used for this pipeline.
--   
--   <a>$sel:imageTestsConfiguration:ImagePipeline'</a>,
--   <a>imagePipeline_imageTestsConfiguration</a> - The image tests
--   configuration of the image pipeline.
--   
--   <a>$sel:dateNextRun:ImagePipeline'</a>,
--   <a>imagePipeline_dateNextRun</a> - The date on which this image
--   pipeline will next be run.
--   
--   <a>$sel:arn:ImagePipeline'</a>, <a>imagePipeline_arn</a> - The Amazon
--   Resource Name (ARN) of the image pipeline.
--   
--   <a>$sel:schedule:ImagePipeline'</a>, <a>imagePipeline_schedule</a> -
--   The schedule of the image pipeline.
--   
--   <a>$sel:enhancedImageMetadataEnabled:ImagePipeline'</a>,
--   <a>imagePipeline_enhancedImageMetadataEnabled</a> - Collects
--   additional information about the image being created, including the
--   operating system (OS) version and package list. This information is
--   used to enhance the overall experience of using EC2 Image Builder.
--   Enabled by default.
--   
--   <a>$sel:dateUpdated:ImagePipeline'</a>,
--   <a>imagePipeline_dateUpdated</a> - The date on which this image
--   pipeline was last updated.
--   
--   <a>$sel:dateCreated:ImagePipeline'</a>,
--   <a>imagePipeline_dateCreated</a> - The date on which this image
--   pipeline was created.
--   
--   <a>$sel:name:ImagePipeline'</a>, <a>imagePipeline_name</a> - The name
--   of the image pipeline.
--   
--   <a>$sel:distributionConfigurationArn:ImagePipeline'</a>,
--   <a>imagePipeline_distributionConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the distribution configuration associated with
--   this image pipeline.
--   
--   <a>$sel:imageRecipeArn:ImagePipeline'</a>,
--   <a>imagePipeline_imageRecipeArn</a> - The Amazon Resource Name (ARN)
--   of the image recipe associated with this image pipeline.
--   
--   <a>$sel:description:ImagePipeline'</a>,
--   <a>imagePipeline_description</a> - The description of the image
--   pipeline.
--   
--   <a>$sel:tags:ImagePipeline'</a>, <a>imagePipeline_tags</a> - The tags
--   of this image pipeline.
newImagePipeline :: ImagePipeline

-- | The status of the image pipeline.
imagePipeline_status :: Lens' ImagePipeline (Maybe PipelineStatus)

-- | The date on which this image pipeline was last run.
imagePipeline_dateLastRun :: Lens' ImagePipeline (Maybe Text)

-- | The platform of the image pipeline.
imagePipeline_platform :: Lens' ImagePipeline (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   associated with this image pipeline.
imagePipeline_infrastructureConfigurationArn :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the container recipe that is used
--   for this pipeline.
imagePipeline_containerRecipeArn :: Lens' ImagePipeline (Maybe Text)

-- | The image tests configuration of the image pipeline.
imagePipeline_imageTestsConfiguration :: Lens' ImagePipeline (Maybe ImageTestsConfiguration)

-- | The date on which this image pipeline will next be run.
imagePipeline_dateNextRun :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image pipeline.
imagePipeline_arn :: Lens' ImagePipeline (Maybe Text)

-- | The schedule of the image pipeline.
imagePipeline_schedule :: Lens' ImagePipeline (Maybe Schedule)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
imagePipeline_enhancedImageMetadataEnabled :: Lens' ImagePipeline (Maybe Bool)

-- | The date on which this image pipeline was last updated.
imagePipeline_dateUpdated :: Lens' ImagePipeline (Maybe Text)

-- | The date on which this image pipeline was created.
imagePipeline_dateCreated :: Lens' ImagePipeline (Maybe Text)

-- | The name of the image pipeline.
imagePipeline_name :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the distribution configuration
--   associated with this image pipeline.
imagePipeline_distributionConfigurationArn :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe associated with
--   this image pipeline.
imagePipeline_imageRecipeArn :: Lens' ImagePipeline (Maybe Text)

-- | The description of the image pipeline.
imagePipeline_description :: Lens' ImagePipeline (Maybe Text)

-- | The tags of this image pipeline.
imagePipeline_tags :: Lens' ImagePipeline (Maybe (HashMap Text Text))

-- | An image recipe.
--   
--   <i>See:</i> <a>newImageRecipe</a> smart constructor.
data ImageRecipe
ImageRecipe' :: Maybe (NonEmpty ComponentConfiguration) -> Maybe Platform -> Maybe Text -> Maybe AdditionalInstanceConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ImageType -> Maybe [InstanceBlockDeviceMapping] -> Maybe Text -> Maybe (HashMap Text Text) -> ImageRecipe

-- | The components of the image recipe.
[$sel:components:ImageRecipe'] :: ImageRecipe -> Maybe (NonEmpty ComponentConfiguration)

-- | The platform of the image recipe.
[$sel:platform:ImageRecipe'] :: ImageRecipe -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the image recipe.
[$sel:arn:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | Before you create a new AMI, Image Builder launches temporary Amazon
--   EC2 instances to build and test your image configuration. Instance
--   configuration adds a layer of control over those instances. You can
--   define settings and add scripts to run when an instance is launched
--   from your AMI.
[$sel:additionalInstanceConfiguration:ImageRecipe'] :: ImageRecipe -> Maybe AdditionalInstanceConfiguration

-- | The working directory to be used during build and test workflows.
[$sel:workingDirectory:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The base image of the image recipe.
[$sel:parentImage:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The owner of the image recipe.
[$sel:owner:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The date on which this image recipe was created.
[$sel:dateCreated:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The name of the image recipe.
[$sel:name:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The version of the image recipe.
[$sel:version:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | Specifies which type of image is created by the recipe - an AMI or a
--   container image.
[$sel:type':ImageRecipe'] :: ImageRecipe -> Maybe ImageType

-- | The block device mappings to apply when creating images from this
--   recipe.
[$sel:blockDeviceMappings:ImageRecipe'] :: ImageRecipe -> Maybe [InstanceBlockDeviceMapping]

-- | The description of the image recipe.
[$sel:description:ImageRecipe'] :: ImageRecipe -> Maybe Text

-- | The tags of the image recipe.
[$sel:tags:ImageRecipe'] :: ImageRecipe -> Maybe (HashMap Text Text)

-- | Create a value of <a>ImageRecipe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:components:ImageRecipe'</a>, <a>imageRecipe_components</a> -
--   The components of the image recipe.
--   
--   <a>$sel:platform:ImageRecipe'</a>, <a>imageRecipe_platform</a> - The
--   platform of the image recipe.
--   
--   <a>$sel:arn:ImageRecipe'</a>, <a>imageRecipe_arn</a> - The Amazon
--   Resource Name (ARN) of the image recipe.
--   
--   <a>$sel:additionalInstanceConfiguration:ImageRecipe'</a>,
--   <a>imageRecipe_additionalInstanceConfiguration</a> - Before you create
--   a new AMI, Image Builder launches temporary Amazon EC2 instances to
--   build and test your image configuration. Instance configuration adds a
--   layer of control over those instances. You can define settings and add
--   scripts to run when an instance is launched from your AMI.
--   
--   <a>$sel:workingDirectory:ImageRecipe'</a>,
--   <a>imageRecipe_workingDirectory</a> - The working directory to be used
--   during build and test workflows.
--   
--   <a>$sel:parentImage:ImageRecipe'</a>, <a>imageRecipe_parentImage</a> -
--   The base image of the image recipe.
--   
--   <a>$sel:owner:ImageRecipe'</a>, <a>imageRecipe_owner</a> - The owner
--   of the image recipe.
--   
--   <a>$sel:dateCreated:ImageRecipe'</a>, <a>imageRecipe_dateCreated</a> -
--   The date on which this image recipe was created.
--   
--   <a>$sel:name:ImageRecipe'</a>, <a>imageRecipe_name</a> - The name of
--   the image recipe.
--   
--   <a>$sel:version:ImageRecipe'</a>, <a>imageRecipe_version</a> - The
--   version of the image recipe.
--   
--   <a>$sel:type':ImageRecipe'</a>, <a>imageRecipe_type</a> - Specifies
--   which type of image is created by the recipe - an AMI or a container
--   image.
--   
--   <a>$sel:blockDeviceMappings:ImageRecipe'</a>,
--   <a>imageRecipe_blockDeviceMappings</a> - The block device mappings to
--   apply when creating images from this recipe.
--   
--   <a>$sel:description:ImageRecipe'</a>, <a>imageRecipe_description</a> -
--   The description of the image recipe.
--   
--   <a>$sel:tags:ImageRecipe'</a>, <a>imageRecipe_tags</a> - The tags of
--   the image recipe.
newImageRecipe :: ImageRecipe

-- | The components of the image recipe.
imageRecipe_components :: Lens' ImageRecipe (Maybe (NonEmpty ComponentConfiguration))

-- | The platform of the image recipe.
imageRecipe_platform :: Lens' ImageRecipe (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the image recipe.
imageRecipe_arn :: Lens' ImageRecipe (Maybe Text)

-- | Before you create a new AMI, Image Builder launches temporary Amazon
--   EC2 instances to build and test your image configuration. Instance
--   configuration adds a layer of control over those instances. You can
--   define settings and add scripts to run when an instance is launched
--   from your AMI.
imageRecipe_additionalInstanceConfiguration :: Lens' ImageRecipe (Maybe AdditionalInstanceConfiguration)

-- | The working directory to be used during build and test workflows.
imageRecipe_workingDirectory :: Lens' ImageRecipe (Maybe Text)

-- | The base image of the image recipe.
imageRecipe_parentImage :: Lens' ImageRecipe (Maybe Text)

-- | The owner of the image recipe.
imageRecipe_owner :: Lens' ImageRecipe (Maybe Text)

-- | The date on which this image recipe was created.
imageRecipe_dateCreated :: Lens' ImageRecipe (Maybe Text)

-- | The name of the image recipe.
imageRecipe_name :: Lens' ImageRecipe (Maybe Text)

-- | The version of the image recipe.
imageRecipe_version :: Lens' ImageRecipe (Maybe Text)

-- | Specifies which type of image is created by the recipe - an AMI or a
--   container image.
imageRecipe_type :: Lens' ImageRecipe (Maybe ImageType)

-- | The block device mappings to apply when creating images from this
--   recipe.
imageRecipe_blockDeviceMappings :: Lens' ImageRecipe (Maybe [InstanceBlockDeviceMapping])

-- | The description of the image recipe.
imageRecipe_description :: Lens' ImageRecipe (Maybe Text)

-- | The tags of the image recipe.
imageRecipe_tags :: Lens' ImageRecipe (Maybe (HashMap Text Text))

-- | A summary of an image recipe.
--   
--   <i>See:</i> <a>newImageRecipeSummary</a> smart constructor.
data ImageRecipeSummary
ImageRecipeSummary' :: Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ImageRecipeSummary

-- | The platform of the image recipe.
[$sel:platform:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the image recipe.
[$sel:arn:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Text

-- | The base image of the image recipe.
[$sel:parentImage:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Text

-- | The owner of the image recipe.
[$sel:owner:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Text

-- | The date on which this image recipe was created.
[$sel:dateCreated:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Text

-- | The name of the image recipe.
[$sel:name:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe Text

-- | The tags of the image recipe.
[$sel:tags:ImageRecipeSummary'] :: ImageRecipeSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>ImageRecipeSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:ImageRecipeSummary'</a>,
--   <a>imageRecipeSummary_platform</a> - The platform of the image recipe.
--   
--   <a>$sel:arn:ImageRecipeSummary'</a>, <a>imageRecipeSummary_arn</a> -
--   The Amazon Resource Name (ARN) of the image recipe.
--   
--   <a>$sel:parentImage:ImageRecipeSummary'</a>,
--   <a>imageRecipeSummary_parentImage</a> - The base image of the image
--   recipe.
--   
--   <a>$sel:owner:ImageRecipeSummary'</a>, <a>imageRecipeSummary_owner</a>
--   - The owner of the image recipe.
--   
--   <a>$sel:dateCreated:ImageRecipeSummary'</a>,
--   <a>imageRecipeSummary_dateCreated</a> - The date on which this image
--   recipe was created.
--   
--   <a>$sel:name:ImageRecipeSummary'</a>, <a>imageRecipeSummary_name</a> -
--   The name of the image recipe.
--   
--   <a>$sel:tags:ImageRecipeSummary'</a>, <a>imageRecipeSummary_tags</a> -
--   The tags of the image recipe.
newImageRecipeSummary :: ImageRecipeSummary

-- | The platform of the image recipe.
imageRecipeSummary_platform :: Lens' ImageRecipeSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the image recipe.
imageRecipeSummary_arn :: Lens' ImageRecipeSummary (Maybe Text)

-- | The base image of the image recipe.
imageRecipeSummary_parentImage :: Lens' ImageRecipeSummary (Maybe Text)

-- | The owner of the image recipe.
imageRecipeSummary_owner :: Lens' ImageRecipeSummary (Maybe Text)

-- | The date on which this image recipe was created.
imageRecipeSummary_dateCreated :: Lens' ImageRecipeSummary (Maybe Text)

-- | The name of the image recipe.
imageRecipeSummary_name :: Lens' ImageRecipeSummary (Maybe Text)

-- | The tags of the image recipe.
imageRecipeSummary_tags :: Lens' ImageRecipeSummary (Maybe (HashMap Text Text))

-- | Image state shows the image status and the reason for that status.
--   
--   <i>See:</i> <a>newImageState</a> smart constructor.
data ImageState
ImageState' :: Maybe ImageStatus -> Maybe Text -> ImageState

-- | The status of the image.
[$sel:status:ImageState'] :: ImageState -> Maybe ImageStatus

-- | The reason for the image's status.
[$sel:reason:ImageState'] :: ImageState -> Maybe Text

-- | Create a value of <a>ImageState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ImageState'</a>, <a>imageState_status</a> - The status
--   of the image.
--   
--   <a>$sel:reason:ImageState'</a>, <a>imageState_reason</a> - The reason
--   for the image's status.
newImageState :: ImageState

-- | The status of the image.
imageState_status :: Lens' ImageState (Maybe ImageStatus)

-- | The reason for the image's status.
imageState_reason :: Lens' ImageState (Maybe Text)

-- | An image summary.
--   
--   <i>See:</i> <a>newImageSummary</a> smart constructor.
data ImageSummary
ImageSummary' :: Maybe ImageState -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ImageType -> Maybe OutputResources -> Maybe Text -> Maybe (HashMap Text Text) -> ImageSummary

-- | The state of the image.
[$sel:state:ImageSummary'] :: ImageSummary -> Maybe ImageState

-- | The platform of the image.
[$sel:platform:ImageSummary'] :: ImageSummary -> Maybe Platform

-- | The Amazon Resource Name (ARN) of the image.
[$sel:arn:ImageSummary'] :: ImageSummary -> Maybe Text

-- | The owner of the image.
[$sel:owner:ImageSummary'] :: ImageSummary -> Maybe Text

-- | The date on which this image was created.
[$sel:dateCreated:ImageSummary'] :: ImageSummary -> Maybe Text

-- | The name of the image.
[$sel:name:ImageSummary'] :: ImageSummary -> Maybe Text

-- | The version of the image.
[$sel:version:ImageSummary'] :: ImageSummary -> Maybe Text

-- | Specifies whether this is an AMI or container image.
[$sel:type':ImageSummary'] :: ImageSummary -> Maybe ImageType

-- | The output resources produced when creating this image.
[$sel:outputResources:ImageSummary'] :: ImageSummary -> Maybe OutputResources

-- | The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
[$sel:osVersion:ImageSummary'] :: ImageSummary -> Maybe Text

-- | The tags of the image.
[$sel:tags:ImageSummary'] :: ImageSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>ImageSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ImageSummary'</a>, <a>imageSummary_state</a> - The state
--   of the image.
--   
--   <a>$sel:platform:ImageSummary'</a>, <a>imageSummary_platform</a> - The
--   platform of the image.
--   
--   <a>$sel:arn:ImageSummary'</a>, <a>imageSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the image.
--   
--   <a>$sel:owner:ImageSummary'</a>, <a>imageSummary_owner</a> - The owner
--   of the image.
--   
--   <a>$sel:dateCreated:ImageSummary'</a>, <a>imageSummary_dateCreated</a>
--   - The date on which this image was created.
--   
--   <a>$sel:name:ImageSummary'</a>, <a>imageSummary_name</a> - The name of
--   the image.
--   
--   <a>$sel:version:ImageSummary'</a>, <a>imageSummary_version</a> - The
--   version of the image.
--   
--   <a>$sel:type':ImageSummary'</a>, <a>imageSummary_type</a> - Specifies
--   whether this is an AMI or container image.
--   
--   <a>$sel:outputResources:ImageSummary'</a>,
--   <a>imageSummary_outputResources</a> - The output resources produced
--   when creating this image.
--   
--   <a>$sel:osVersion:ImageSummary'</a>, <a>imageSummary_osVersion</a> -
--   The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
--   
--   <a>$sel:tags:ImageSummary'</a>, <a>imageSummary_tags</a> - The tags of
--   the image.
newImageSummary :: ImageSummary

-- | The state of the image.
imageSummary_state :: Lens' ImageSummary (Maybe ImageState)

-- | The platform of the image.
imageSummary_platform :: Lens' ImageSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the image.
imageSummary_arn :: Lens' ImageSummary (Maybe Text)

-- | The owner of the image.
imageSummary_owner :: Lens' ImageSummary (Maybe Text)

-- | The date on which this image was created.
imageSummary_dateCreated :: Lens' ImageSummary (Maybe Text)

-- | The name of the image.
imageSummary_name :: Lens' ImageSummary (Maybe Text)

-- | The version of the image.
imageSummary_version :: Lens' ImageSummary (Maybe Text)

-- | Specifies whether this is an AMI or container image.
imageSummary_type :: Lens' ImageSummary (Maybe ImageType)

-- | The output resources produced when creating this image.
imageSummary_outputResources :: Lens' ImageSummary (Maybe OutputResources)

-- | The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
imageSummary_osVersion :: Lens' ImageSummary (Maybe Text)

-- | The tags of the image.
imageSummary_tags :: Lens' ImageSummary (Maybe (HashMap Text Text))

-- | Image tests configuration.
--   
--   <i>See:</i> <a>newImageTestsConfiguration</a> smart constructor.
data ImageTestsConfiguration
ImageTestsConfiguration' :: Maybe Natural -> Maybe Bool -> ImageTestsConfiguration

-- | The maximum time in minutes that tests are permitted to run.
[$sel:timeoutMinutes:ImageTestsConfiguration'] :: ImageTestsConfiguration -> Maybe Natural

-- | Defines if tests should be executed when building this image.
[$sel:imageTestsEnabled:ImageTestsConfiguration'] :: ImageTestsConfiguration -> Maybe Bool

-- | Create a value of <a>ImageTestsConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutMinutes:ImageTestsConfiguration'</a>,
--   <a>imageTestsConfiguration_timeoutMinutes</a> - The maximum time in
--   minutes that tests are permitted to run.
--   
--   <a>$sel:imageTestsEnabled:ImageTestsConfiguration'</a>,
--   <a>imageTestsConfiguration_imageTestsEnabled</a> - Defines if tests
--   should be executed when building this image.
newImageTestsConfiguration :: ImageTestsConfiguration

-- | The maximum time in minutes that tests are permitted to run.
imageTestsConfiguration_timeoutMinutes :: Lens' ImageTestsConfiguration (Maybe Natural)

-- | Defines if tests should be executed when building this image.
imageTestsConfiguration_imageTestsEnabled :: Lens' ImageTestsConfiguration (Maybe Bool)

-- | The defining characteristics of a specific version of an Image Builder
--   image.
--   
--   <i>See:</i> <a>newImageVersion</a> smart constructor.
data ImageVersion
ImageVersion' :: Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ImageType -> Maybe Text -> ImageVersion

-- | The platform of the image version, for example "Windows" or "Linux".
[$sel:platform:ImageVersion'] :: ImageVersion -> Maybe Platform

-- | The Amazon Resource Name (ARN) of a specific version of an Image
--   Builder image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
[$sel:arn:ImageVersion'] :: ImageVersion -> Maybe Text

-- | The owner of the image version.
[$sel:owner:ImageVersion'] :: ImageVersion -> Maybe Text

-- | The date on which this specific version of the Image Builder image was
--   created.
[$sel:dateCreated:ImageVersion'] :: ImageVersion -> Maybe Text

-- | The name of this specific version of an Image Builder image.
[$sel:name:ImageVersion'] :: ImageVersion -> Maybe Text

-- | Details for a specific version of an Image Builder image. This version
--   follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
[$sel:version:ImageVersion'] :: ImageVersion -> Maybe Text

-- | Specifies whether this image is an AMI or a container image.
[$sel:type':ImageVersion'] :: ImageVersion -> Maybe ImageType

-- | The operating system version of the Amazon EC2 build instance. For
--   example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
[$sel:osVersion:ImageVersion'] :: ImageVersion -> Maybe Text

-- | Create a value of <a>ImageVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:ImageVersion'</a>, <a>imageVersion_platform</a> - The
--   platform of the image version, for example "Windows" or "Linux".
--   
--   <a>$sel:arn:ImageVersion'</a>, <a>imageVersion_arn</a> - The Amazon
--   Resource Name (ARN) of a specific version of an Image Builder image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:owner:ImageVersion'</a>, <a>imageVersion_owner</a> - The owner
--   of the image version.
--   
--   <a>$sel:dateCreated:ImageVersion'</a>, <a>imageVersion_dateCreated</a>
--   - The date on which this specific version of the Image Builder image
--   was created.
--   
--   <a>$sel:name:ImageVersion'</a>, <a>imageVersion_name</a> - The name of
--   this specific version of an Image Builder image.
--   
--   <a>$sel:version:ImageVersion'</a>, <a>imageVersion_version</a> -
--   Details for a specific version of an Image Builder image. This version
--   follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:type':ImageVersion'</a>, <a>imageVersion_type</a> - Specifies
--   whether this image is an AMI or a container image.
--   
--   <a>$sel:osVersion:ImageVersion'</a>, <a>imageVersion_osVersion</a> -
--   The operating system version of the Amazon EC2 build instance. For
--   example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
newImageVersion :: ImageVersion

-- | The platform of the image version, for example "Windows" or "Linux".
imageVersion_platform :: Lens' ImageVersion (Maybe Platform)

-- | The Amazon Resource Name (ARN) of a specific version of an Image
--   Builder image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
imageVersion_arn :: Lens' ImageVersion (Maybe Text)

-- | The owner of the image version.
imageVersion_owner :: Lens' ImageVersion (Maybe Text)

-- | The date on which this specific version of the Image Builder image was
--   created.
imageVersion_dateCreated :: Lens' ImageVersion (Maybe Text)

-- | The name of this specific version of an Image Builder image.
imageVersion_name :: Lens' ImageVersion (Maybe Text)

-- | Details for a specific version of an Image Builder image. This version
--   follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
imageVersion_version :: Lens' ImageVersion (Maybe Text)

-- | Specifies whether this image is an AMI or a container image.
imageVersion_type :: Lens' ImageVersion (Maybe ImageType)

-- | The operating system version of the Amazon EC2 build instance. For
--   example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
imageVersion_osVersion :: Lens' ImageVersion (Maybe Text)

-- | Details of the infrastructure configuration.
--   
--   <i>See:</i> <a>newInfrastructureConfiguration</a> smart constructor.
data InfrastructureConfiguration
InfrastructureConfiguration' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe InstanceMetadataOptions -> Maybe Text -> Maybe Text -> Maybe Logging -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> InfrastructureConfiguration

-- | The security group IDs of the infrastructure configuration.
[$sel:securityGroupIds:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe [Text]

-- | The SNS topic Amazon Resource Name (ARN) of the infrastructure
--   configuration.
[$sel:snsTopicArn:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The instance types of the infrastructure configuration.
[$sel:instanceTypes:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the infrastructure configuration.
[$sel:arn:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The Amazon EC2 key pair of the infrastructure configuration.
[$sel:keyPair:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The tags attached to the resource created by Image Builder.
[$sel:resourceTags:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe (HashMap Text Text)

-- | The subnet ID of the infrastructure configuration.
[$sel:subnetId:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The date on which the infrastructure configuration was last updated.
[$sel:dateUpdated:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The date on which the infrastructure configuration was created.
[$sel:dateCreated:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The instance metadata option settings for the infrastructure
--   configuration.
[$sel:instanceMetadataOptions:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe InstanceMetadataOptions

-- | The name of the infrastructure configuration.
[$sel:name:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The instance profile of the infrastructure configuration.
[$sel:instanceProfileName:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The logging configuration of the infrastructure configuration.
[$sel:logging:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Logging

-- | The description of the infrastructure configuration.
[$sel:description:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Text

-- | The tags of the infrastructure configuration.
[$sel:tags:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe (HashMap Text Text)

-- | The terminate instance on failure configuration of the infrastructure
--   configuration.
[$sel:terminateInstanceOnFailure:InfrastructureConfiguration'] :: InfrastructureConfiguration -> Maybe Bool

-- | Create a value of <a>InfrastructureConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_securityGroupIds</a> - The security
--   group IDs of the infrastructure configuration.
--   
--   <a>$sel:snsTopicArn:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_snsTopicArn</a> - The SNS topic Amazon
--   Resource Name (ARN) of the infrastructure configuration.
--   
--   <a>$sel:instanceTypes:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_instanceTypes</a> - The instance types
--   of the infrastructure configuration.
--   
--   <a>$sel:arn:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_arn</a> - The Amazon Resource Name
--   (ARN) of the infrastructure configuration.
--   
--   <a>$sel:keyPair:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_keyPair</a> - The Amazon EC2 key pair
--   of the infrastructure configuration.
--   
--   <a>$sel:resourceTags:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_resourceTags</a> - The tags attached to
--   the resource created by Image Builder.
--   
--   <a>$sel:subnetId:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_subnetId</a> - The subnet ID of the
--   infrastructure configuration.
--   
--   <a>$sel:dateUpdated:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_dateUpdated</a> - The date on which the
--   infrastructure configuration was last updated.
--   
--   <a>$sel:dateCreated:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_dateCreated</a> - The date on which the
--   infrastructure configuration was created.
--   
--   <a>$sel:instanceMetadataOptions:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_instanceMetadataOptions</a> - The
--   instance metadata option settings for the infrastructure
--   configuration.
--   
--   <a>$sel:name:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_name</a> - The name of the
--   infrastructure configuration.
--   
--   <a>$sel:instanceProfileName:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_instanceProfileName</a> - The instance
--   profile of the infrastructure configuration.
--   
--   <a>$sel:logging:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_logging</a> - The logging configuration
--   of the infrastructure configuration.
--   
--   <a>$sel:description:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_description</a> - The description of
--   the infrastructure configuration.
--   
--   <a>$sel:tags:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_tags</a> - The tags of the
--   infrastructure configuration.
--   
--   <a>$sel:terminateInstanceOnFailure:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_terminateInstanceOnFailure</a> - The
--   terminate instance on failure configuration of the infrastructure
--   configuration.
newInfrastructureConfiguration :: InfrastructureConfiguration

-- | The security group IDs of the infrastructure configuration.
infrastructureConfiguration_securityGroupIds :: Lens' InfrastructureConfiguration (Maybe [Text])

-- | The SNS topic Amazon Resource Name (ARN) of the infrastructure
--   configuration.
infrastructureConfiguration_snsTopicArn :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The instance types of the infrastructure configuration.
infrastructureConfiguration_instanceTypes :: Lens' InfrastructureConfiguration (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the infrastructure configuration.
infrastructureConfiguration_arn :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The Amazon EC2 key pair of the infrastructure configuration.
infrastructureConfiguration_keyPair :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The tags attached to the resource created by Image Builder.
infrastructureConfiguration_resourceTags :: Lens' InfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The subnet ID of the infrastructure configuration.
infrastructureConfiguration_subnetId :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The date on which the infrastructure configuration was last updated.
infrastructureConfiguration_dateUpdated :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The date on which the infrastructure configuration was created.
infrastructureConfiguration_dateCreated :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The instance metadata option settings for the infrastructure
--   configuration.
infrastructureConfiguration_instanceMetadataOptions :: Lens' InfrastructureConfiguration (Maybe InstanceMetadataOptions)

-- | The name of the infrastructure configuration.
infrastructureConfiguration_name :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The instance profile of the infrastructure configuration.
infrastructureConfiguration_instanceProfileName :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The logging configuration of the infrastructure configuration.
infrastructureConfiguration_logging :: Lens' InfrastructureConfiguration (Maybe Logging)

-- | The description of the infrastructure configuration.
infrastructureConfiguration_description :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The tags of the infrastructure configuration.
infrastructureConfiguration_tags :: Lens' InfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The terminate instance on failure configuration of the infrastructure
--   configuration.
infrastructureConfiguration_terminateInstanceOnFailure :: Lens' InfrastructureConfiguration (Maybe Bool)

-- | The infrastructure used when building Amazon EC2 AMIs.
--   
--   <i>See:</i> <a>newInfrastructureConfigurationSummary</a> smart
--   constructor.
data InfrastructureConfigurationSummary
InfrastructureConfigurationSummary' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> InfrastructureConfigurationSummary

-- | The instance types of the infrastructure configuration.
[$sel:instanceTypes:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe [Text]

-- | The Amazon Resource Name (ARN) of the infrastructure configuration.
[$sel:arn:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The tags attached to the image created by Image Builder.
[$sel:resourceTags:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe (HashMap Text Text)

-- | The date on which the infrastructure configuration was last updated.
[$sel:dateUpdated:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The date on which the infrastructure configuration was created.
[$sel:dateCreated:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The name of the infrastructure configuration.
[$sel:name:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The instance profile of the infrastructure configuration.
[$sel:instanceProfileName:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The description of the infrastructure configuration.
[$sel:description:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe Text

-- | The tags of the infrastructure configuration.
[$sel:tags:InfrastructureConfigurationSummary'] :: InfrastructureConfigurationSummary -> Maybe (HashMap Text Text)

-- | Create a value of <a>InfrastructureConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceTypes:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_instanceTypes</a> - The instance
--   types of the infrastructure configuration.
--   
--   <a>$sel:arn:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_arn</a> - The Amazon Resource
--   Name (ARN) of the infrastructure configuration.
--   
--   <a>$sel:resourceTags:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_resourceTags</a> - The tags
--   attached to the image created by Image Builder.
--   
--   <a>$sel:dateUpdated:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_dateUpdated</a> - The date on
--   which the infrastructure configuration was last updated.
--   
--   <a>$sel:dateCreated:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_dateCreated</a> - The date on
--   which the infrastructure configuration was created.
--   
--   <a>$sel:name:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_name</a> - The name of the
--   infrastructure configuration.
--   
--   <a>$sel:instanceProfileName:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_instanceProfileName</a> - The
--   instance profile of the infrastructure configuration.
--   
--   <a>$sel:description:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_description</a> - The
--   description of the infrastructure configuration.
--   
--   <a>$sel:tags:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_tags</a> - The tags of the
--   infrastructure configuration.
newInfrastructureConfigurationSummary :: InfrastructureConfigurationSummary

-- | The instance types of the infrastructure configuration.
infrastructureConfigurationSummary_instanceTypes :: Lens' InfrastructureConfigurationSummary (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the infrastructure configuration.
infrastructureConfigurationSummary_arn :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The tags attached to the image created by Image Builder.
infrastructureConfigurationSummary_resourceTags :: Lens' InfrastructureConfigurationSummary (Maybe (HashMap Text Text))

-- | The date on which the infrastructure configuration was last updated.
infrastructureConfigurationSummary_dateUpdated :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The date on which the infrastructure configuration was created.
infrastructureConfigurationSummary_dateCreated :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The name of the infrastructure configuration.
infrastructureConfigurationSummary_name :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The instance profile of the infrastructure configuration.
infrastructureConfigurationSummary_instanceProfileName :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The description of the infrastructure configuration.
infrastructureConfigurationSummary_description :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The tags of the infrastructure configuration.
infrastructureConfigurationSummary_tags :: Lens' InfrastructureConfigurationSummary (Maybe (HashMap Text Text))

-- | Defines block device mappings for the instance used to configure your
--   image.
--   
--   <i>See:</i> <a>newInstanceBlockDeviceMapping</a> smart constructor.
data InstanceBlockDeviceMapping
InstanceBlockDeviceMapping' :: Maybe Text -> Maybe Text -> Maybe EbsInstanceBlockDeviceSpecification -> Maybe Text -> InstanceBlockDeviceMapping

-- | Use to manage instance ephemeral devices.
[$sel:virtualName:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe Text

-- | Use to remove a mapping from the base image.
[$sel:noDevice:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe Text

-- | Use to manage Amazon EBS-specific configuration for this mapping.
[$sel:ebs:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe EbsInstanceBlockDeviceSpecification

-- | The device to which these mappings apply.
[$sel:deviceName:InstanceBlockDeviceMapping'] :: InstanceBlockDeviceMapping -> Maybe Text

-- | Create a value of <a>InstanceBlockDeviceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualName:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_virtualName</a> - Use to manage instance
--   ephemeral devices.
--   
--   <a>$sel:noDevice:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_noDevice</a> - Use to remove a mapping
--   from the base image.
--   
--   <a>$sel:ebs:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_ebs</a> - Use to manage Amazon
--   EBS-specific configuration for this mapping.
--   
--   <a>$sel:deviceName:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_deviceName</a> - The device to which
--   these mappings apply.
newInstanceBlockDeviceMapping :: InstanceBlockDeviceMapping

-- | Use to manage instance ephemeral devices.
instanceBlockDeviceMapping_virtualName :: Lens' InstanceBlockDeviceMapping (Maybe Text)

-- | Use to remove a mapping from the base image.
instanceBlockDeviceMapping_noDevice :: Lens' InstanceBlockDeviceMapping (Maybe Text)

-- | Use to manage Amazon EBS-specific configuration for this mapping.
instanceBlockDeviceMapping_ebs :: Lens' InstanceBlockDeviceMapping (Maybe EbsInstanceBlockDeviceSpecification)

-- | The device to which these mappings apply.
instanceBlockDeviceMapping_deviceName :: Lens' InstanceBlockDeviceMapping (Maybe Text)

-- | Defines a custom base AMI and block device mapping configurations of
--   an instance used for building and testing container images.
--   
--   <i>See:</i> <a>newInstanceConfiguration</a> smart constructor.
data InstanceConfiguration
InstanceConfiguration' :: Maybe Text -> Maybe [InstanceBlockDeviceMapping] -> InstanceConfiguration

-- | The AMI ID to use as the base image for a container build and test
--   instance. If not specified, Image Builder will use the appropriate
--   ECS-optimized AMI as a base image.
[$sel:image:InstanceConfiguration'] :: InstanceConfiguration -> Maybe Text

-- | Defines the block devices to attach for building an instance from this
--   Image Builder AMI.
[$sel:blockDeviceMappings:InstanceConfiguration'] :: InstanceConfiguration -> Maybe [InstanceBlockDeviceMapping]

-- | Create a value of <a>InstanceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_image</a> - The AMI ID to use as the base
--   image for a container build and test instance. If not specified, Image
--   Builder will use the appropriate ECS-optimized AMI as a base image.
--   
--   <a>$sel:blockDeviceMappings:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_blockDeviceMappings</a> - Defines the block
--   devices to attach for building an instance from this Image Builder
--   AMI.
newInstanceConfiguration :: InstanceConfiguration

-- | The AMI ID to use as the base image for a container build and test
--   instance. If not specified, Image Builder will use the appropriate
--   ECS-optimized AMI as a base image.
instanceConfiguration_image :: Lens' InstanceConfiguration (Maybe Text)

-- | Defines the block devices to attach for building an instance from this
--   Image Builder AMI.
instanceConfiguration_blockDeviceMappings :: Lens' InstanceConfiguration (Maybe [InstanceBlockDeviceMapping])

-- | The instance metadata options that apply to the HTTP requests that
--   pipeline builds use to launch EC2 build and test instances. For more
--   information about instance metadata options, see <a>Configure the
--   instance metadata options</a> in the /<i>Amazon EC2 User Guide</i>/
--   for Linux instances, or <a>Configure the instance metadata options</a>
--   in the /<i>Amazon EC2 Windows Guide</i>/ for Windows instances.
--   
--   <i>See:</i> <a>newInstanceMetadataOptions</a> smart constructor.
data InstanceMetadataOptions
InstanceMetadataOptions' :: Maybe Natural -> Maybe Text -> InstanceMetadataOptions

-- | Limit the number of hops that an instance metadata request can
--   traverse to reach its destination.
[$sel:httpPutResponseHopLimit:InstanceMetadataOptions'] :: InstanceMetadataOptions -> Maybe Natural

-- | Indicates whether a signed token header is required for instance
--   metadata retrieval requests. The values affect the response as
--   follows:
--   
--   <ul>
--   <li><b>required</b> – When you retrieve the IAM role credentials,
--   version 2.0 credentials are returned in all cases.</li>
--   <li><b>optional</b> – You can include a signed token header in your
--   request to retrieve instance metadata, or you can leave it out. If you
--   include it, version 2.0 credentials are returned for the IAM role.
--   Otherwise, version 1.0 credentials are returned.</li>
--   </ul>
--   
--   The default setting is <b>optional</b>.
[$sel:httpTokens:InstanceMetadataOptions'] :: InstanceMetadataOptions -> Maybe Text

-- | Create a value of <a>InstanceMetadataOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpPutResponseHopLimit:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpPutResponseHopLimit</a> - Limit the
--   number of hops that an instance metadata request can traverse to reach
--   its destination.
--   
--   <a>$sel:httpTokens:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpTokens</a> - Indicates whether a signed
--   token header is required for instance metadata retrieval requests. The
--   values affect the response as follows:
--   
--   <ul>
--   <li><b>required</b> – When you retrieve the IAM role credentials,
--   version 2.0 credentials are returned in all cases.</li>
--   <li><b>optional</b> – You can include a signed token header in your
--   request to retrieve instance metadata, or you can leave it out. If you
--   include it, version 2.0 credentials are returned for the IAM role.
--   Otherwise, version 1.0 credentials are returned.</li>
--   </ul>
--   
--   The default setting is <b>optional</b>.
newInstanceMetadataOptions :: InstanceMetadataOptions

-- | Limit the number of hops that an instance metadata request can
--   traverse to reach its destination.
instanceMetadataOptions_httpPutResponseHopLimit :: Lens' InstanceMetadataOptions (Maybe Natural)

-- | Indicates whether a signed token header is required for instance
--   metadata retrieval requests. The values affect the response as
--   follows:
--   
--   <ul>
--   <li><b>required</b> – When you retrieve the IAM role credentials,
--   version 2.0 credentials are returned in all cases.</li>
--   <li><b>optional</b> – You can include a signed token header in your
--   request to retrieve instance metadata, or you can leave it out. If you
--   include it, version 2.0 credentials are returned for the IAM role.
--   Otherwise, version 1.0 credentials are returned.</li>
--   </ul>
--   
--   The default setting is <b>optional</b>.
instanceMetadataOptions_httpTokens :: Lens' InstanceMetadataOptions (Maybe Text)

-- | Describes the configuration for a launch permission. The launch
--   permission modification request is sent to the <a>Amazon EC2
--   ModifyImageAttribute</a> API on behalf of the user for each Region
--   they have selected to distribute the AMI. To make an AMI public, set
--   the launch permission authorized accounts to <tt>all</tt>. See the
--   examples for making an AMI public at <a>Amazon EC2
--   ModifyImageAttribute</a>.
--   
--   <i>See:</i> <a>newLaunchPermissionConfiguration</a> smart constructor.
data LaunchPermissionConfiguration
LaunchPermissionConfiguration' :: Maybe (NonEmpty Text) -> Maybe [Text] -> LaunchPermissionConfiguration

-- | The Amazon Web Services account ID.
[$sel:userIds:LaunchPermissionConfiguration'] :: LaunchPermissionConfiguration -> Maybe (NonEmpty Text)

-- | The name of the group.
[$sel:userGroups:LaunchPermissionConfiguration'] :: LaunchPermissionConfiguration -> Maybe [Text]

-- | Create a value of <a>LaunchPermissionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIds:LaunchPermissionConfiguration'</a>,
--   <a>launchPermissionConfiguration_userIds</a> - The Amazon Web Services
--   account ID.
--   
--   <a>$sel:userGroups:LaunchPermissionConfiguration'</a>,
--   <a>launchPermissionConfiguration_userGroups</a> - The name of the
--   group.
newLaunchPermissionConfiguration :: LaunchPermissionConfiguration

-- | The Amazon Web Services account ID.
launchPermissionConfiguration_userIds :: Lens' LaunchPermissionConfiguration (Maybe (NonEmpty Text))

-- | The name of the group.
launchPermissionConfiguration_userGroups :: Lens' LaunchPermissionConfiguration (Maybe [Text])

-- | Identifies an Amazon EC2 launch template to use for a specific
--   account.
--   
--   <i>See:</i> <a>newLaunchTemplateConfiguration</a> smart constructor.
data LaunchTemplateConfiguration
LaunchTemplateConfiguration' :: Maybe Bool -> Maybe Text -> Text -> LaunchTemplateConfiguration

-- | Set the specified Amazon EC2 launch template as the default launch
--   template for the specified account.
[$sel:setDefaultVersion:LaunchTemplateConfiguration'] :: LaunchTemplateConfiguration -> Maybe Bool

-- | The account ID that this configuration applies to.
[$sel:accountId:LaunchTemplateConfiguration'] :: LaunchTemplateConfiguration -> Maybe Text

-- | Identifies the Amazon EC2 launch template to use.
[$sel:launchTemplateId:LaunchTemplateConfiguration'] :: LaunchTemplateConfiguration -> Text

-- | Create a value of <a>LaunchTemplateConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:setDefaultVersion:LaunchTemplateConfiguration'</a>,
--   <a>launchTemplateConfiguration_setDefaultVersion</a> - Set the
--   specified Amazon EC2 launch template as the default launch template
--   for the specified account.
--   
--   <a>$sel:accountId:LaunchTemplateConfiguration'</a>,
--   <a>launchTemplateConfiguration_accountId</a> - The account ID that
--   this configuration applies to.
--   
--   <a>$sel:launchTemplateId:LaunchTemplateConfiguration'</a>,
--   <a>launchTemplateConfiguration_launchTemplateId</a> - Identifies the
--   Amazon EC2 launch template to use.
newLaunchTemplateConfiguration :: Text -> LaunchTemplateConfiguration

-- | Set the specified Amazon EC2 launch template as the default launch
--   template for the specified account.
launchTemplateConfiguration_setDefaultVersion :: Lens' LaunchTemplateConfiguration (Maybe Bool)

-- | The account ID that this configuration applies to.
launchTemplateConfiguration_accountId :: Lens' LaunchTemplateConfiguration (Maybe Text)

-- | Identifies the Amazon EC2 launch template to use.
launchTemplateConfiguration_launchTemplateId :: Lens' LaunchTemplateConfiguration Text

-- | Logging configuration defines where Image Builder uploads your logs.
--   
--   <i>See:</i> <a>newLogging</a> smart constructor.
data Logging
Logging' :: Maybe S3Logs -> Logging

-- | The Amazon S3 logging configuration.
[$sel:s3Logs:Logging'] :: Logging -> Maybe S3Logs

-- | Create a value of <a>Logging</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Logs:Logging'</a>, <a>logging_s3Logs</a> - The Amazon S3
--   logging configuration.
newLogging :: Logging

-- | The Amazon S3 logging configuration.
logging_s3Logs :: Lens' Logging (Maybe S3Logs)

-- | The resources produced by this image.
--   
--   <i>See:</i> <a>newOutputResources</a> smart constructor.
data OutputResources
OutputResources' :: Maybe [Container] -> Maybe [Ami] -> OutputResources

-- | Container images that the pipeline has generated and stored in the
--   output repository.
[$sel:containers:OutputResources'] :: OutputResources -> Maybe [Container]

-- | The Amazon EC2 AMIs created by this image.
[$sel:amis:OutputResources'] :: OutputResources -> Maybe [Ami]

-- | Create a value of <a>OutputResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containers:OutputResources'</a>,
--   <a>outputResources_containers</a> - Container images that the pipeline
--   has generated and stored in the output repository.
--   
--   <a>$sel:amis:OutputResources'</a>, <a>outputResources_amis</a> - The
--   Amazon EC2 AMIs created by this image.
newOutputResources :: OutputResources

-- | Container images that the pipeline has generated and stored in the
--   output repository.
outputResources_containers :: Lens' OutputResources (Maybe [Container])

-- | The Amazon EC2 AMIs created by this image.
outputResources_amis :: Lens' OutputResources (Maybe [Ami])

-- | Amazon S3 logging configuration.
--   
--   <i>See:</i> <a>newS3Logs</a> smart constructor.
data S3Logs
S3Logs' :: Maybe Text -> Maybe Text -> S3Logs

-- | The Amazon S3 path in which to store the logs.
[$sel:s3KeyPrefix:S3Logs'] :: S3Logs -> Maybe Text

-- | The Amazon S3 bucket in which to store the logs.
[$sel:s3BucketName:S3Logs'] :: S3Logs -> Maybe Text

-- | Create a value of <a>S3Logs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3KeyPrefix:S3Logs'</a>, <a>s3Logs_s3KeyPrefix</a> - The
--   Amazon S3 path in which to store the logs.
--   
--   <a>$sel:s3BucketName:S3Logs'</a>, <a>s3Logs_s3BucketName</a> - The
--   Amazon S3 bucket in which to store the logs.
newS3Logs :: S3Logs

-- | The Amazon S3 path in which to store the logs.
s3Logs_s3KeyPrefix :: Lens' S3Logs (Maybe Text)

-- | The Amazon S3 bucket in which to store the logs.
s3Logs_s3BucketName :: Lens' S3Logs (Maybe Text)

-- | A schedule configures how often and when a pipeline will automatically
--   create a new image.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe Text -> Maybe PipelineExecutionStartCondition -> Maybe Text -> Schedule

-- | The cron expression determines how often EC2 Image Builder evaluates
--   your <tt>pipelineExecutionStartCondition</tt>.
--   
--   For information on how to format a cron expression in Image Builder,
--   see <a>Use cron expressions in EC2 Image Builder</a>.
[$sel:scheduleExpression:Schedule'] :: Schedule -> Maybe Text

-- | The condition configures when the pipeline should trigger a new image
--   build. When the <tt>pipelineExecutionStartCondition</tt> is set to
--   <tt>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</tt>, and you
--   use semantic version filters on the base image or components in your
--   image recipe, EC2 Image Builder will build a new image only when there
--   are new versions of the image or components in your recipe that match
--   the semantic version filter. When it is set to
--   <tt>EXPRESSION_MATCH_ONLY</tt>, it will build a new image every time
--   the CRON expression matches the current time. For semantic version
--   syntax, see <a>CreateComponent</a> in the <i>EC2 Image Builder API
--   Reference</i>.
[$sel:pipelineExecutionStartCondition:Schedule'] :: Schedule -> Maybe PipelineExecutionStartCondition

-- | The timezone that applies to the scheduling expression. For example,
--   "Etc/UTC", "America/Los_Angeles" in the <a>IANA timezone format</a>.
--   If not specified this defaults to UTC.
[$sel:timezone:Schedule'] :: Schedule -> Maybe Text

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduleExpression:Schedule'</a>,
--   <a>schedule_scheduleExpression</a> - The cron expression determines
--   how often EC2 Image Builder evaluates your
--   <tt>pipelineExecutionStartCondition</tt>.
--   
--   For information on how to format a cron expression in Image Builder,
--   see <a>Use cron expressions in EC2 Image Builder</a>.
--   
--   <a>$sel:pipelineExecutionStartCondition:Schedule'</a>,
--   <a>schedule_pipelineExecutionStartCondition</a> - The condition
--   configures when the pipeline should trigger a new image build. When
--   the <tt>pipelineExecutionStartCondition</tt> is set to
--   <tt>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</tt>, and you
--   use semantic version filters on the base image or components in your
--   image recipe, EC2 Image Builder will build a new image only when there
--   are new versions of the image or components in your recipe that match
--   the semantic version filter. When it is set to
--   <tt>EXPRESSION_MATCH_ONLY</tt>, it will build a new image every time
--   the CRON expression matches the current time. For semantic version
--   syntax, see <a>CreateComponent</a> in the <i>EC2 Image Builder API
--   Reference</i>.
--   
--   <a>$sel:timezone:Schedule'</a>, <a>schedule_timezone</a> - The
--   timezone that applies to the scheduling expression. For example,
--   "Etc/UTC", "America/Los_Angeles" in the <a>IANA timezone format</a>.
--   If not specified this defaults to UTC.
newSchedule :: Schedule

-- | The cron expression determines how often EC2 Image Builder evaluates
--   your <tt>pipelineExecutionStartCondition</tt>.
--   
--   For information on how to format a cron expression in Image Builder,
--   see <a>Use cron expressions in EC2 Image Builder</a>.
schedule_scheduleExpression :: Lens' Schedule (Maybe Text)

-- | The condition configures when the pipeline should trigger a new image
--   build. When the <tt>pipelineExecutionStartCondition</tt> is set to
--   <tt>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</tt>, and you
--   use semantic version filters on the base image or components in your
--   image recipe, EC2 Image Builder will build a new image only when there
--   are new versions of the image or components in your recipe that match
--   the semantic version filter. When it is set to
--   <tt>EXPRESSION_MATCH_ONLY</tt>, it will build a new image every time
--   the CRON expression matches the current time. For semantic version
--   syntax, see <a>CreateComponent</a> in the <i>EC2 Image Builder API
--   Reference</i>.
schedule_pipelineExecutionStartCondition :: Lens' Schedule (Maybe PipelineExecutionStartCondition)

-- | The timezone that applies to the scheduling expression. For example,
--   "Etc/UTC", "America/Los_Angeles" in the <a>IANA timezone format</a>.
--   If not specified this defaults to UTC.
schedule_timezone :: Lens' Schedule (Maybe Text)

-- | Contains settings for the Systems Manager agent on your build
--   instance.
--   
--   <i>See:</i> <a>newSystemsManagerAgent</a> smart constructor.
data SystemsManagerAgent
SystemsManagerAgent' :: Maybe Bool -> SystemsManagerAgent

-- | Controls whether the Systems Manager agent is removed from your final
--   build image, prior to creating the new AMI. If this is set to true,
--   then the agent is removed from the final image. If it's set to false,
--   then the agent is left in, so that it is included in the new AMI. The
--   default value is false.
[$sel:uninstallAfterBuild:SystemsManagerAgent'] :: SystemsManagerAgent -> Maybe Bool

-- | Create a value of <a>SystemsManagerAgent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uninstallAfterBuild:SystemsManagerAgent'</a>,
--   <a>systemsManagerAgent_uninstallAfterBuild</a> - Controls whether the
--   Systems Manager agent is removed from your final build image, prior to
--   creating the new AMI. If this is set to true, then the agent is
--   removed from the final image. If it's set to false, then the agent is
--   left in, so that it is included in the new AMI. The default value is
--   false.
newSystemsManagerAgent :: SystemsManagerAgent

-- | Controls whether the Systems Manager agent is removed from your final
--   build image, prior to creating the new AMI. If this is set to true,
--   then the agent is removed from the final image. If it's set to false,
--   then the agent is left in, so that it is included in the new AMI. The
--   default value is false.
systemsManagerAgent_uninstallAfterBuild :: Lens' SystemsManagerAgent (Maybe Bool)

-- | The container repository where the output container image is stored.
--   
--   <i>See:</i> <a>newTargetContainerRepository</a> smart constructor.
data TargetContainerRepository
TargetContainerRepository' :: ContainerRepositoryService -> Text -> TargetContainerRepository

-- | Specifies the service in which this image was registered.
[$sel:service:TargetContainerRepository'] :: TargetContainerRepository -> ContainerRepositoryService

-- | The name of the container repository where the output container image
--   is stored. This name is prefixed by the repository location.
[$sel:repositoryName:TargetContainerRepository'] :: TargetContainerRepository -> Text

-- | Create a value of <a>TargetContainerRepository</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:service:TargetContainerRepository'</a>,
--   <a>targetContainerRepository_service</a> - Specifies the service in
--   which this image was registered.
--   
--   <a>$sel:repositoryName:TargetContainerRepository'</a>,
--   <a>targetContainerRepository_repositoryName</a> - The name of the
--   container repository where the output container image is stored. This
--   name is prefixed by the repository location.
newTargetContainerRepository :: ContainerRepositoryService -> Text -> TargetContainerRepository

-- | Specifies the service in which this image was registered.
targetContainerRepository_service :: Lens' TargetContainerRepository ContainerRepositoryService

-- | The name of the container repository where the output container image
--   is stored. This name is prefixed by the repository location.
targetContainerRepository_repositoryName :: Lens' TargetContainerRepository Text


-- | Adds a tag to a resource.
module Amazonka.ImageBuilder.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to tag.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags to apply to the resource.
[$sel:tags:TagResource'] :: TagResource -> HashMap Text Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource that you want to tag.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   apply to the resource.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to tag.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to apply to the resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.TagResource.TagResource
instance GHC.Show.Show Amazonka.ImageBuilder.TagResource.TagResource
instance GHC.Read.Read Amazonka.ImageBuilder.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.ImageBuilder.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.ImageBuilder.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.ImageBuilder.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.ImageBuilder.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.TagResource.TagResource


-- | Manually triggers a pipeline to create an image.
module Amazonka.ImageBuilder.StartImagePipelineExecution

-- | <i>See:</i> <a>newStartImagePipelineExecution</a> smart constructor.
data StartImagePipelineExecution
StartImagePipelineExecution' :: Text -> Text -> StartImagePipelineExecution

-- | The Amazon Resource Name (ARN) of the image pipeline that you want to
--   manually invoke.
[$sel:imagePipelineArn:StartImagePipelineExecution'] :: StartImagePipelineExecution -> Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:StartImagePipelineExecution'] :: StartImagePipelineExecution -> Text

-- | Create a value of <a>StartImagePipelineExecution</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePipelineArn:StartImagePipelineExecution'</a>,
--   <a>startImagePipelineExecution_imagePipelineArn</a> - The Amazon
--   Resource Name (ARN) of the image pipeline that you want to manually
--   invoke.
--   
--   <a>$sel:clientToken:StartImagePipelineExecution'</a>,
--   <a>startImagePipelineExecution_clientToken</a> - The idempotency token
--   used to make this request idempotent.
newStartImagePipelineExecution :: Text -> Text -> StartImagePipelineExecution

-- | The Amazon Resource Name (ARN) of the image pipeline that you want to
--   manually invoke.
startImagePipelineExecution_imagePipelineArn :: Lens' StartImagePipelineExecution Text

-- | The idempotency token used to make this request idempotent.
startImagePipelineExecution_clientToken :: Lens' StartImagePipelineExecution Text

-- | <i>See:</i> <a>newStartImagePipelineExecutionResponse</a> smart
--   constructor.
data StartImagePipelineExecutionResponse
StartImagePipelineExecutionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> StartImagePipelineExecutionResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:StartImagePipelineExecutionResponse'] :: StartImagePipelineExecutionResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:StartImagePipelineExecutionResponse'] :: StartImagePipelineExecutionResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image that was created by this
--   request.
[$sel:imageBuildVersionArn:StartImagePipelineExecutionResponse'] :: StartImagePipelineExecutionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:StartImagePipelineExecutionResponse'] :: StartImagePipelineExecutionResponse -> Int

-- | Create a value of <a>StartImagePipelineExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:StartImagePipelineExecutionResponse'</a>,
--   <a>startImagePipelineExecutionResponse_requestId</a> - The request ID
--   that uniquely identifies this request.
--   
--   <a>$sel:clientToken:StartImagePipelineExecution'</a>,
--   <a>startImagePipelineExecutionResponse_clientToken</a> - The
--   idempotency token used to make this request idempotent.
--   
--   <a>$sel:imageBuildVersionArn:StartImagePipelineExecutionResponse'</a>,
--   <a>startImagePipelineExecutionResponse_imageBuildVersionArn</a> - The
--   Amazon Resource Name (ARN) of the image that was created by this
--   request.
--   
--   <a>$sel:httpStatus:StartImagePipelineExecutionResponse'</a>,
--   <a>startImagePipelineExecutionResponse_httpStatus</a> - The response's
--   http status code.
newStartImagePipelineExecutionResponse :: Int -> StartImagePipelineExecutionResponse

-- | The request ID that uniquely identifies this request.
startImagePipelineExecutionResponse_requestId :: Lens' StartImagePipelineExecutionResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
startImagePipelineExecutionResponse_clientToken :: Lens' StartImagePipelineExecutionResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image that was created by this
--   request.
startImagePipelineExecutionResponse_imageBuildVersionArn :: Lens' StartImagePipelineExecutionResponse (Maybe Text)

-- | The response's http status code.
startImagePipelineExecutionResponse_httpStatus :: Lens' StartImagePipelineExecutionResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecution
instance GHC.Show.Show Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecution
instance GHC.Read.Read Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecution
instance GHC.Classes.Eq Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecution
instance GHC.Generics.Generic Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecutionResponse
instance GHC.Show.Show Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecutionResponse
instance GHC.Read.Read Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecutionResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecutionResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecution
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecutionResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecution
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecution
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecution
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecution
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecution
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.StartImagePipelineExecution.StartImagePipelineExecution


-- | Applies a policy to an image recipe. We recommend that you call the
--   RAM API <a>CreateResourceShare</a> to share resources. If you call the
--   Image Builder API <tt>PutImageRecipePolicy</tt>, you must also call
--   the RAM API <a>PromoteResourceShareCreatedFromPolicy</a> in order for
--   the resource to be visible to all principals with whom the resource is
--   shared.
module Amazonka.ImageBuilder.PutImageRecipePolicy

-- | <i>See:</i> <a>newPutImageRecipePolicy</a> smart constructor.
data PutImageRecipePolicy
PutImageRecipePolicy' :: Text -> Text -> PutImageRecipePolicy

-- | The Amazon Resource Name (ARN) of the image recipe that this policy
--   should be applied to.
[$sel:imageRecipeArn:PutImageRecipePolicy'] :: PutImageRecipePolicy -> Text

-- | The policy to apply.
[$sel:policy:PutImageRecipePolicy'] :: PutImageRecipePolicy -> Text

-- | Create a value of <a>PutImageRecipePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRecipeArn:PutImageRecipePolicy'</a>,
--   <a>putImageRecipePolicy_imageRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the image recipe that this policy should be applied to.
--   
--   <a>$sel:policy:PutImageRecipePolicy'</a>,
--   <a>putImageRecipePolicy_policy</a> - The policy to apply.
newPutImageRecipePolicy :: Text -> Text -> PutImageRecipePolicy

-- | The Amazon Resource Name (ARN) of the image recipe that this policy
--   should be applied to.
putImageRecipePolicy_imageRecipeArn :: Lens' PutImageRecipePolicy Text

-- | The policy to apply.
putImageRecipePolicy_policy :: Lens' PutImageRecipePolicy Text

-- | <i>See:</i> <a>newPutImageRecipePolicyResponse</a> smart constructor.
data PutImageRecipePolicyResponse
PutImageRecipePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> PutImageRecipePolicyResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:PutImageRecipePolicyResponse'] :: PutImageRecipePolicyResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image recipe that this policy
--   was applied to.
[$sel:imageRecipeArn:PutImageRecipePolicyResponse'] :: PutImageRecipePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutImageRecipePolicyResponse'] :: PutImageRecipePolicyResponse -> Int

-- | Create a value of <a>PutImageRecipePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:PutImageRecipePolicyResponse'</a>,
--   <a>putImageRecipePolicyResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:imageRecipeArn:PutImageRecipePolicy'</a>,
--   <a>putImageRecipePolicyResponse_imageRecipeArn</a> - The Amazon
--   Resource Name (ARN) of the image recipe that this policy was applied
--   to.
--   
--   <a>$sel:httpStatus:PutImageRecipePolicyResponse'</a>,
--   <a>putImageRecipePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutImageRecipePolicyResponse :: Int -> PutImageRecipePolicyResponse

-- | The request ID that uniquely identifies this request.
putImageRecipePolicyResponse_requestId :: Lens' PutImageRecipePolicyResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that this policy
--   was applied to.
putImageRecipePolicyResponse_imageRecipeArn :: Lens' PutImageRecipePolicyResponse (Maybe Text)

-- | The response's http status code.
putImageRecipePolicyResponse_httpStatus :: Lens' PutImageRecipePolicyResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicy
instance GHC.Show.Show Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicy
instance GHC.Read.Read Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicy
instance GHC.Classes.Eq Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicy
instance GHC.Generics.Generic Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicyResponse
instance GHC.Show.Show Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicyResponse
instance GHC.Read.Read Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicyResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicy
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.PutImageRecipePolicy.PutImageRecipePolicy


-- | Applies a policy to an image. We recommend that you call the RAM API
--   <a>CreateResourceShare</a> to share resources. If you call the Image
--   Builder API <tt>PutImagePolicy</tt>, you must also call the RAM API
--   <a>PromoteResourceShareCreatedFromPolicy</a> in order for the resource
--   to be visible to all principals with whom the resource is shared.
module Amazonka.ImageBuilder.PutImagePolicy

-- | <i>See:</i> <a>newPutImagePolicy</a> smart constructor.
data PutImagePolicy
PutImagePolicy' :: Text -> Text -> PutImagePolicy

-- | The Amazon Resource Name (ARN) of the image that this policy should be
--   applied to.
[$sel:imageArn:PutImagePolicy'] :: PutImagePolicy -> Text

-- | The policy to apply.
[$sel:policy:PutImagePolicy'] :: PutImagePolicy -> Text

-- | Create a value of <a>PutImagePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageArn:PutImagePolicy'</a>, <a>putImagePolicy_imageArn</a> -
--   The Amazon Resource Name (ARN) of the image that this policy should be
--   applied to.
--   
--   <a>$sel:policy:PutImagePolicy'</a>, <a>putImagePolicy_policy</a> - The
--   policy to apply.
newPutImagePolicy :: Text -> Text -> PutImagePolicy

-- | The Amazon Resource Name (ARN) of the image that this policy should be
--   applied to.
putImagePolicy_imageArn :: Lens' PutImagePolicy Text

-- | The policy to apply.
putImagePolicy_policy :: Lens' PutImagePolicy Text

-- | <i>See:</i> <a>newPutImagePolicyResponse</a> smart constructor.
data PutImagePolicyResponse
PutImagePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> PutImagePolicyResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:PutImagePolicyResponse'] :: PutImagePolicyResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image that this policy was
--   applied to.
[$sel:imageArn:PutImagePolicyResponse'] :: PutImagePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutImagePolicyResponse'] :: PutImagePolicyResponse -> Int

-- | Create a value of <a>PutImagePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:PutImagePolicyResponse'</a>,
--   <a>putImagePolicyResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:imageArn:PutImagePolicy'</a>,
--   <a>putImagePolicyResponse_imageArn</a> - The Amazon Resource Name
--   (ARN) of the image that this policy was applied to.
--   
--   <a>$sel:httpStatus:PutImagePolicyResponse'</a>,
--   <a>putImagePolicyResponse_httpStatus</a> - The response's http status
--   code.
newPutImagePolicyResponse :: Int -> PutImagePolicyResponse

-- | The request ID that uniquely identifies this request.
putImagePolicyResponse_requestId :: Lens' PutImagePolicyResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image that this policy was
--   applied to.
putImagePolicyResponse_imageArn :: Lens' PutImagePolicyResponse (Maybe Text)

-- | The response's http status code.
putImagePolicyResponse_httpStatus :: Lens' PutImagePolicyResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicy
instance GHC.Show.Show Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicy
instance GHC.Read.Read Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicy
instance GHC.Classes.Eq Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicy
instance GHC.Generics.Generic Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicyResponse
instance GHC.Show.Show Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicyResponse
instance GHC.Read.Read Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicyResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicy
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.PutImagePolicy.PutImagePolicy


-- | Applies a policy to a container image. We recommend that you call the
--   RAM API CreateResourceShare
--   (https://docs.aws.amazon.com/ram/latest/APIReference/API_CreateResourceShare.html)
--   to share resources. If you call the Image Builder API
--   <tt>PutContainerImagePolicy</tt>, you must also call the RAM API
--   PromoteResourceShareCreatedFromPolicy
--   (https://docs.aws.amazon.com/ram/latest/APIReference/API_PromoteResourceShareCreatedFromPolicy.html)
--   in order for the resource to be visible to all principals with whom
--   the resource is shared.
module Amazonka.ImageBuilder.PutContainerRecipePolicy

-- | <i>See:</i> <a>newPutContainerRecipePolicy</a> smart constructor.
data PutContainerRecipePolicy
PutContainerRecipePolicy' :: Text -> Text -> PutContainerRecipePolicy

-- | The Amazon Resource Name (ARN) of the container recipe that this
--   policy should be applied to.
[$sel:containerRecipeArn:PutContainerRecipePolicy'] :: PutContainerRecipePolicy -> Text

-- | The policy to apply to the container recipe.
[$sel:policy:PutContainerRecipePolicy'] :: PutContainerRecipePolicy -> Text

-- | Create a value of <a>PutContainerRecipePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerRecipeArn:PutContainerRecipePolicy'</a>,
--   <a>putContainerRecipePolicy_containerRecipeArn</a> - The Amazon
--   Resource Name (ARN) of the container recipe that this policy should be
--   applied to.
--   
--   <a>$sel:policy:PutContainerRecipePolicy'</a>,
--   <a>putContainerRecipePolicy_policy</a> - The policy to apply to the
--   container recipe.
newPutContainerRecipePolicy :: Text -> Text -> PutContainerRecipePolicy

-- | The Amazon Resource Name (ARN) of the container recipe that this
--   policy should be applied to.
putContainerRecipePolicy_containerRecipeArn :: Lens' PutContainerRecipePolicy Text

-- | The policy to apply to the container recipe.
putContainerRecipePolicy_policy :: Lens' PutContainerRecipePolicy Text

-- | <i>See:</i> <a>newPutContainerRecipePolicyResponse</a> smart
--   constructor.
data PutContainerRecipePolicyResponse
PutContainerRecipePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> PutContainerRecipePolicyResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:PutContainerRecipePolicyResponse'] :: PutContainerRecipePolicyResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the container recipe that this
--   policy was applied to.
[$sel:containerRecipeArn:PutContainerRecipePolicyResponse'] :: PutContainerRecipePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutContainerRecipePolicyResponse'] :: PutContainerRecipePolicyResponse -> Int

-- | Create a value of <a>PutContainerRecipePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:PutContainerRecipePolicyResponse'</a>,
--   <a>putContainerRecipePolicyResponse_requestId</a> - The request ID
--   that uniquely identifies this request.
--   
--   <a>$sel:containerRecipeArn:PutContainerRecipePolicy'</a>,
--   <a>putContainerRecipePolicyResponse_containerRecipeArn</a> - The
--   Amazon Resource Name (ARN) of the container recipe that this policy
--   was applied to.
--   
--   <a>$sel:httpStatus:PutContainerRecipePolicyResponse'</a>,
--   <a>putContainerRecipePolicyResponse_httpStatus</a> - The response's
--   http status code.
newPutContainerRecipePolicyResponse :: Int -> PutContainerRecipePolicyResponse

-- | The request ID that uniquely identifies this request.
putContainerRecipePolicyResponse_requestId :: Lens' PutContainerRecipePolicyResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the container recipe that this
--   policy was applied to.
putContainerRecipePolicyResponse_containerRecipeArn :: Lens' PutContainerRecipePolicyResponse (Maybe Text)

-- | The response's http status code.
putContainerRecipePolicyResponse_httpStatus :: Lens' PutContainerRecipePolicyResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicy
instance GHC.Show.Show Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicy
instance GHC.Read.Read Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicy
instance GHC.Classes.Eq Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicy
instance GHC.Generics.Generic Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicyResponse
instance GHC.Show.Show Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicyResponse
instance GHC.Read.Read Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicyResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicy
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.PutContainerRecipePolicy.PutContainerRecipePolicy


-- | Applies a policy to a component. We recommend that you call the RAM
--   API <a>CreateResourceShare</a> to share resources. If you call the
--   Image Builder API <tt>PutComponentPolicy</tt>, you must also call the
--   RAM API <a>PromoteResourceShareCreatedFromPolicy</a> in order for the
--   resource to be visible to all principals with whom the resource is
--   shared.
module Amazonka.ImageBuilder.PutComponentPolicy

-- | <i>See:</i> <a>newPutComponentPolicy</a> smart constructor.
data PutComponentPolicy
PutComponentPolicy' :: Text -> Text -> PutComponentPolicy

-- | The Amazon Resource Name (ARN) of the component that this policy
--   should be applied to.
[$sel:componentArn:PutComponentPolicy'] :: PutComponentPolicy -> Text

-- | The policy to apply.
[$sel:policy:PutComponentPolicy'] :: PutComponentPolicy -> Text

-- | Create a value of <a>PutComponentPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:componentArn:PutComponentPolicy'</a>,
--   <a>putComponentPolicy_componentArn</a> - The Amazon Resource Name
--   (ARN) of the component that this policy should be applied to.
--   
--   <a>$sel:policy:PutComponentPolicy'</a>,
--   <a>putComponentPolicy_policy</a> - The policy to apply.
newPutComponentPolicy :: Text -> Text -> PutComponentPolicy

-- | The Amazon Resource Name (ARN) of the component that this policy
--   should be applied to.
putComponentPolicy_componentArn :: Lens' PutComponentPolicy Text

-- | The policy to apply.
putComponentPolicy_policy :: Lens' PutComponentPolicy Text

-- | <i>See:</i> <a>newPutComponentPolicyResponse</a> smart constructor.
data PutComponentPolicyResponse
PutComponentPolicyResponse' :: Maybe Text -> Maybe Text -> Int -> PutComponentPolicyResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:PutComponentPolicyResponse'] :: PutComponentPolicyResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the component that this policy was
--   applied to.
[$sel:componentArn:PutComponentPolicyResponse'] :: PutComponentPolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:PutComponentPolicyResponse'] :: PutComponentPolicyResponse -> Int

-- | Create a value of <a>PutComponentPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:PutComponentPolicyResponse'</a>,
--   <a>putComponentPolicyResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:componentArn:PutComponentPolicy'</a>,
--   <a>putComponentPolicyResponse_componentArn</a> - The Amazon Resource
--   Name (ARN) of the component that this policy was applied to.
--   
--   <a>$sel:httpStatus:PutComponentPolicyResponse'</a>,
--   <a>putComponentPolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutComponentPolicyResponse :: Int -> PutComponentPolicyResponse

-- | The request ID that uniquely identifies this request.
putComponentPolicyResponse_requestId :: Lens' PutComponentPolicyResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the component that this policy was
--   applied to.
putComponentPolicyResponse_componentArn :: Lens' PutComponentPolicyResponse (Maybe Text)

-- | The response's http status code.
putComponentPolicyResponse_httpStatus :: Lens' PutComponentPolicyResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicy
instance GHC.Show.Show Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicy
instance GHC.Read.Read Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicy
instance GHC.Classes.Eq Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicy
instance GHC.Generics.Generic Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicyResponse
instance GHC.Show.Show Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicyResponse
instance GHC.Read.Read Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicyResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicy
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.PutComponentPolicy.PutComponentPolicy


-- | Returns the list of tags for the specified resource.
module Amazonka.ImageBuilder.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource whose tags you want to
--   retrieve.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource whose tags you want to retrieve.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource whose tags you want to
--   retrieve.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | The tags for the specified resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the specified
--   resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The tags for the specified resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListTagsForResource.ListTagsForResource


-- | Returns a list of infrastructure configurations.
module Amazonka.ImageBuilder.ListInfrastructureConfigurations

-- | <i>See:</i> <a>newListInfrastructureConfigurations</a> smart
--   constructor.
data ListInfrastructureConfigurations
ListInfrastructureConfigurations' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Natural -> ListInfrastructureConfigurations

-- | You can filter on <tt>name</tt> to streamline results.
[$sel:filters:ListInfrastructureConfigurations'] :: ListInfrastructureConfigurations -> Maybe (NonEmpty Filter)

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
[$sel:nextToken:ListInfrastructureConfigurations'] :: ListInfrastructureConfigurations -> Maybe Text

-- | The maximum items to return in a request.
[$sel:maxResults:ListInfrastructureConfigurations'] :: ListInfrastructureConfigurations -> Maybe Natural

-- | Create a value of <a>ListInfrastructureConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListInfrastructureConfigurations'</a>,
--   <a>listInfrastructureConfigurations_filters</a> - You can filter on
--   <tt>name</tt> to streamline results.
--   
--   <a>$sel:nextToken:ListInfrastructureConfigurations'</a>,
--   <a>listInfrastructureConfigurations_nextToken</a> - A token to specify
--   where to start paginating. This is the NextToken from a previously
--   truncated response.
--   
--   <a>$sel:maxResults:ListInfrastructureConfigurations'</a>,
--   <a>listInfrastructureConfigurations_maxResults</a> - The maximum items
--   to return in a request.
newListInfrastructureConfigurations :: ListInfrastructureConfigurations

-- | You can filter on <tt>name</tt> to streamline results.
listInfrastructureConfigurations_filters :: Lens' ListInfrastructureConfigurations (Maybe (NonEmpty Filter))

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listInfrastructureConfigurations_nextToken :: Lens' ListInfrastructureConfigurations (Maybe Text)

-- | The maximum items to return in a request.
listInfrastructureConfigurations_maxResults :: Lens' ListInfrastructureConfigurations (Maybe Natural)

-- | <i>See:</i> <a>newListInfrastructureConfigurationsResponse</a> smart
--   constructor.
data ListInfrastructureConfigurationsResponse
ListInfrastructureConfigurationsResponse' :: Maybe Text -> Maybe [InfrastructureConfigurationSummary] -> Maybe Text -> Int -> ListInfrastructureConfigurationsResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ListInfrastructureConfigurationsResponse'] :: ListInfrastructureConfigurationsResponse -> Maybe Text

-- | The list of infrastructure configurations.
[$sel:infrastructureConfigurationSummaryList:ListInfrastructureConfigurationsResponse'] :: ListInfrastructureConfigurationsResponse -> Maybe [InfrastructureConfigurationSummary]

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
[$sel:nextToken:ListInfrastructureConfigurationsResponse'] :: ListInfrastructureConfigurationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListInfrastructureConfigurationsResponse'] :: ListInfrastructureConfigurationsResponse -> Int

-- | Create a value of <a>ListInfrastructureConfigurationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListInfrastructureConfigurationsResponse'</a>,
--   <a>listInfrastructureConfigurationsResponse_requestId</a> - The
--   request ID that uniquely identifies this request.
--   
--   
--   <a>$sel:infrastructureConfigurationSummaryList:ListInfrastructureConfigurationsResponse'</a>,
--   <a>listInfrastructureConfigurationsResponse_infrastructureConfigurationSummaryList</a>
--   - The list of infrastructure configurations.
--   
--   <a>$sel:nextToken:ListInfrastructureConfigurations'</a>,
--   <a>listInfrastructureConfigurationsResponse_nextToken</a> - The next
--   token used for paginated responses. When this is not empty, there are
--   additional elements that the service has not included in this request.
--   Use this token with the next request to retrieve additional objects.
--   
--   <a>$sel:httpStatus:ListInfrastructureConfigurationsResponse'</a>,
--   <a>listInfrastructureConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newListInfrastructureConfigurationsResponse :: Int -> ListInfrastructureConfigurationsResponse

-- | The request ID that uniquely identifies this request.
listInfrastructureConfigurationsResponse_requestId :: Lens' ListInfrastructureConfigurationsResponse (Maybe Text)

-- | The list of infrastructure configurations.
listInfrastructureConfigurationsResponse_infrastructureConfigurationSummaryList :: Lens' ListInfrastructureConfigurationsResponse (Maybe [InfrastructureConfigurationSummary])

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listInfrastructureConfigurationsResponse_nextToken :: Lens' ListInfrastructureConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listInfrastructureConfigurationsResponse_httpStatus :: Lens' ListInfrastructureConfigurationsResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurations
instance GHC.Show.Show Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurations
instance GHC.Read.Read Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurations
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurations
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurationsResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurationsResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurationsResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurationsResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurations
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurationsResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurations
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurations
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurations
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurations
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListInfrastructureConfigurations.ListInfrastructureConfigurations


-- | Returns the list of images that you have access to.
module Amazonka.ImageBuilder.ListImages

-- | <i>See:</i> <a>newListImages</a> smart constructor.
data ListImages
ListImages' :: Maybe (NonEmpty Filter) -> Maybe Ownership -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Natural -> ListImages

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>osVersion</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
[$sel:filters:ListImages'] :: ListImages -> Maybe (NonEmpty Filter)

-- | The owner defines which images you want to list. By default, this
--   request will only show images owned by your account. You can use this
--   field to specify if you want to view images owned by yourself, by
--   Amazon, or those images that have been shared with you by other
--   customers.
[$sel:owner:ListImages'] :: ListImages -> Maybe Ownership

-- | Requests a list of images with a specific recipe name.
[$sel:byName:ListImages'] :: ListImages -> Maybe Bool

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
[$sel:nextToken:ListImages'] :: ListImages -> Maybe Text

-- | Includes deprecated images in the response list.
[$sel:includeDeprecated:ListImages'] :: ListImages -> Maybe Bool

-- | The maximum items to return in a request.
[$sel:maxResults:ListImages'] :: ListImages -> Maybe Natural

-- | Create a value of <a>ListImages</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListImages'</a>, <a>listImages_filters</a> - Use the
--   following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>osVersion</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
--   
--   <a>$sel:owner:ListImages'</a>, <a>listImages_owner</a> - The owner
--   defines which images you want to list. By default, this request will
--   only show images owned by your account. You can use this field to
--   specify if you want to view images owned by yourself, by Amazon, or
--   those images that have been shared with you by other customers.
--   
--   <a>$sel:byName:ListImages'</a>, <a>listImages_byName</a> - Requests a
--   list of images with a specific recipe name.
--   
--   <a>$sel:nextToken:ListImages'</a>, <a>listImages_nextToken</a> - A
--   token to specify where to start paginating. This is the NextToken from
--   a previously truncated response.
--   
--   <a>$sel:includeDeprecated:ListImages'</a>,
--   <a>listImages_includeDeprecated</a> - Includes deprecated images in
--   the response list.
--   
--   <a>$sel:maxResults:ListImages'</a>, <a>listImages_maxResults</a> - The
--   maximum items to return in a request.
newListImages :: ListImages

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>osVersion</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
listImages_filters :: Lens' ListImages (Maybe (NonEmpty Filter))

-- | The owner defines which images you want to list. By default, this
--   request will only show images owned by your account. You can use this
--   field to specify if you want to view images owned by yourself, by
--   Amazon, or those images that have been shared with you by other
--   customers.
listImages_owner :: Lens' ListImages (Maybe Ownership)

-- | Requests a list of images with a specific recipe name.
listImages_byName :: Lens' ListImages (Maybe Bool)

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImages_nextToken :: Lens' ListImages (Maybe Text)

-- | Includes deprecated images in the response list.
listImages_includeDeprecated :: Lens' ListImages (Maybe Bool)

-- | The maximum items to return in a request.
listImages_maxResults :: Lens' ListImages (Maybe Natural)

-- | <i>See:</i> <a>newListImagesResponse</a> smart constructor.
data ListImagesResponse
ListImagesResponse' :: Maybe Text -> Maybe [ImageVersion] -> Maybe Text -> Int -> ListImagesResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ListImagesResponse'] :: ListImagesResponse -> Maybe Text

-- | The list of image semantic versions.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
[$sel:imageVersionList:ListImagesResponse'] :: ListImagesResponse -> Maybe [ImageVersion]

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
[$sel:nextToken:ListImagesResponse'] :: ListImagesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListImagesResponse'] :: ListImagesResponse -> Int

-- | Create a value of <a>ListImagesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImagesResponse'</a>,
--   <a>listImagesResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:imageVersionList:ListImagesResponse'</a>,
--   <a>listImagesResponse_imageVersionList</a> - The list of image
--   semantic versions.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:nextToken:ListImages'</a>, <a>listImagesResponse_nextToken</a>
--   - The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
--   
--   <a>$sel:httpStatus:ListImagesResponse'</a>,
--   <a>listImagesResponse_httpStatus</a> - The response's http status
--   code.
newListImagesResponse :: Int -> ListImagesResponse

-- | The request ID that uniquely identifies this request.
listImagesResponse_requestId :: Lens' ListImagesResponse (Maybe Text)

-- | The list of image semantic versions.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
listImagesResponse_imageVersionList :: Lens' ListImagesResponse (Maybe [ImageVersion])

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listImagesResponse_nextToken :: Lens' ListImagesResponse (Maybe Text)

-- | The response's http status code.
listImagesResponse_httpStatus :: Lens' ListImagesResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImages.ListImages
instance GHC.Show.Show Amazonka.ImageBuilder.ListImages.ListImages
instance GHC.Read.Read Amazonka.ImageBuilder.ListImages.ListImages
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImages.ListImages
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImages.ListImagesResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListImages.ListImagesResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListImages.ListImagesResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImages.ListImagesResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListImages.ListImages
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImages.ListImagesResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListImages.ListImages
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImages.ListImages
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListImages.ListImages
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ListImages.ListImages
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListImages.ListImages
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListImages.ListImages


-- | Returns a list of image recipes.
module Amazonka.ImageBuilder.ListImageRecipes

-- | <i>See:</i> <a>newListImageRecipes</a> smart constructor.
data ListImageRecipes
ListImageRecipes' :: Maybe (NonEmpty Filter) -> Maybe Ownership -> Maybe Text -> Maybe Natural -> ListImageRecipes

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>parentImage</pre></li>
--   <li><pre>platform</pre></li>
--   </ul>
[$sel:filters:ListImageRecipes'] :: ListImageRecipes -> Maybe (NonEmpty Filter)

-- | The owner defines which image recipes you want to list. By default,
--   this request will only show image recipes owned by your account. You
--   can use this field to specify if you want to view image recipes owned
--   by yourself, by Amazon, or those image recipes that have been shared
--   with you by other customers.
[$sel:owner:ListImageRecipes'] :: ListImageRecipes -> Maybe Ownership

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
[$sel:nextToken:ListImageRecipes'] :: ListImageRecipes -> Maybe Text

-- | The maximum items to return in a request.
[$sel:maxResults:ListImageRecipes'] :: ListImageRecipes -> Maybe Natural

-- | Create a value of <a>ListImageRecipes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListImageRecipes'</a>, <a>listImageRecipes_filters</a>
--   - Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>parentImage</pre></li>
--   <li><pre>platform</pre></li>
--   </ul>
--   
--   <a>$sel:owner:ListImageRecipes'</a>, <a>listImageRecipes_owner</a> -
--   The owner defines which image recipes you want to list. By default,
--   this request will only show image recipes owned by your account. You
--   can use this field to specify if you want to view image recipes owned
--   by yourself, by Amazon, or those image recipes that have been shared
--   with you by other customers.
--   
--   <a>$sel:nextToken:ListImageRecipes'</a>,
--   <a>listImageRecipes_nextToken</a> - A token to specify where to start
--   paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListImageRecipes'</a>,
--   <a>listImageRecipes_maxResults</a> - The maximum items to return in a
--   request.
newListImageRecipes :: ListImageRecipes

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>parentImage</pre></li>
--   <li><pre>platform</pre></li>
--   </ul>
listImageRecipes_filters :: Lens' ListImageRecipes (Maybe (NonEmpty Filter))

-- | The owner defines which image recipes you want to list. By default,
--   this request will only show image recipes owned by your account. You
--   can use this field to specify if you want to view image recipes owned
--   by yourself, by Amazon, or those image recipes that have been shared
--   with you by other customers.
listImageRecipes_owner :: Lens' ListImageRecipes (Maybe Ownership)

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImageRecipes_nextToken :: Lens' ListImageRecipes (Maybe Text)

-- | The maximum items to return in a request.
listImageRecipes_maxResults :: Lens' ListImageRecipes (Maybe Natural)

-- | <i>See:</i> <a>newListImageRecipesResponse</a> smart constructor.
data ListImageRecipesResponse
ListImageRecipesResponse' :: Maybe Text -> Maybe Text -> Maybe [ImageRecipeSummary] -> Int -> ListImageRecipesResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ListImageRecipesResponse'] :: ListImageRecipesResponse -> Maybe Text

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
[$sel:nextToken:ListImageRecipesResponse'] :: ListImageRecipesResponse -> Maybe Text

-- | The list of image pipelines.
[$sel:imageRecipeSummaryList:ListImageRecipesResponse'] :: ListImageRecipesResponse -> Maybe [ImageRecipeSummary]

-- | The response's http status code.
[$sel:httpStatus:ListImageRecipesResponse'] :: ListImageRecipesResponse -> Int

-- | Create a value of <a>ListImageRecipesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImageRecipesResponse'</a>,
--   <a>listImageRecipesResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:nextToken:ListImageRecipes'</a>,
--   <a>listImageRecipesResponse_nextToken</a> - The next token used for
--   paginated responses. When this is not empty, there are additional
--   elements that the service has not included in this request. Use this
--   token with the next request to retrieve additional objects.
--   
--   <a>$sel:imageRecipeSummaryList:ListImageRecipesResponse'</a>,
--   <a>listImageRecipesResponse_imageRecipeSummaryList</a> - The list of
--   image pipelines.
--   
--   <a>$sel:httpStatus:ListImageRecipesResponse'</a>,
--   <a>listImageRecipesResponse_httpStatus</a> - The response's http
--   status code.
newListImageRecipesResponse :: Int -> ListImageRecipesResponse

-- | The request ID that uniquely identifies this request.
listImageRecipesResponse_requestId :: Lens' ListImageRecipesResponse (Maybe Text)

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listImageRecipesResponse_nextToken :: Lens' ListImageRecipesResponse (Maybe Text)

-- | The list of image pipelines.
listImageRecipesResponse_imageRecipeSummaryList :: Lens' ListImageRecipesResponse (Maybe [ImageRecipeSummary])

-- | The response's http status code.
listImageRecipesResponse_httpStatus :: Lens' ListImageRecipesResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipes
instance GHC.Show.Show Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipes
instance GHC.Read.Read Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipes
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipes
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipesResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipesResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipesResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipesResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipes
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipesResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipes
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipes
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipes
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipes
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipes
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListImageRecipes.ListImageRecipes


-- | Returns a list of image pipelines.
module Amazonka.ImageBuilder.ListImagePipelines

-- | <i>See:</i> <a>newListImagePipelines</a> smart constructor.
data ListImagePipelines
ListImagePipelines' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Natural -> ListImagePipelines

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>description</pre></li>
--   <li><pre>distributionConfigurationArn</pre></li>
--   <li><pre>imageRecipeArn</pre></li>
--   <li><pre>infrastructureConfigurationArn</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>status</pre></li>
--   </ul>
[$sel:filters:ListImagePipelines'] :: ListImagePipelines -> Maybe (NonEmpty Filter)

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
[$sel:nextToken:ListImagePipelines'] :: ListImagePipelines -> Maybe Text

-- | The maximum items to return in a request.
[$sel:maxResults:ListImagePipelines'] :: ListImagePipelines -> Maybe Natural

-- | Create a value of <a>ListImagePipelines</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListImagePipelines'</a>,
--   <a>listImagePipelines_filters</a> - Use the following filters to
--   streamline results:
--   
--   <ul>
--   <li><pre>description</pre></li>
--   <li><pre>distributionConfigurationArn</pre></li>
--   <li><pre>imageRecipeArn</pre></li>
--   <li><pre>infrastructureConfigurationArn</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>status</pre></li>
--   </ul>
--   
--   <a>$sel:nextToken:ListImagePipelines'</a>,
--   <a>listImagePipelines_nextToken</a> - A token to specify where to
--   start paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListImagePipelines'</a>,
--   <a>listImagePipelines_maxResults</a> - The maximum items to return in
--   a request.
newListImagePipelines :: ListImagePipelines

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>description</pre></li>
--   <li><pre>distributionConfigurationArn</pre></li>
--   <li><pre>imageRecipeArn</pre></li>
--   <li><pre>infrastructureConfigurationArn</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>status</pre></li>
--   </ul>
listImagePipelines_filters :: Lens' ListImagePipelines (Maybe (NonEmpty Filter))

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImagePipelines_nextToken :: Lens' ListImagePipelines (Maybe Text)

-- | The maximum items to return in a request.
listImagePipelines_maxResults :: Lens' ListImagePipelines (Maybe Natural)

-- | <i>See:</i> <a>newListImagePipelinesResponse</a> smart constructor.
data ListImagePipelinesResponse
ListImagePipelinesResponse' :: Maybe Text -> Maybe Text -> Maybe [ImagePipeline] -> Int -> ListImagePipelinesResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ListImagePipelinesResponse'] :: ListImagePipelinesResponse -> Maybe Text

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
[$sel:nextToken:ListImagePipelinesResponse'] :: ListImagePipelinesResponse -> Maybe Text

-- | The list of image pipelines.
[$sel:imagePipelineList:ListImagePipelinesResponse'] :: ListImagePipelinesResponse -> Maybe [ImagePipeline]

-- | The response's http status code.
[$sel:httpStatus:ListImagePipelinesResponse'] :: ListImagePipelinesResponse -> Int

-- | Create a value of <a>ListImagePipelinesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImagePipelinesResponse'</a>,
--   <a>listImagePipelinesResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:nextToken:ListImagePipelines'</a>,
--   <a>listImagePipelinesResponse_nextToken</a> - The next token used for
--   paginated responses. When this is not empty, there are additional
--   elements that the service has not included in this request. Use this
--   token with the next request to retrieve additional objects.
--   
--   <a>$sel:imagePipelineList:ListImagePipelinesResponse'</a>,
--   <a>listImagePipelinesResponse_imagePipelineList</a> - The list of
--   image pipelines.
--   
--   <a>$sel:httpStatus:ListImagePipelinesResponse'</a>,
--   <a>listImagePipelinesResponse_httpStatus</a> - The response's http
--   status code.
newListImagePipelinesResponse :: Int -> ListImagePipelinesResponse

-- | The request ID that uniquely identifies this request.
listImagePipelinesResponse_requestId :: Lens' ListImagePipelinesResponse (Maybe Text)

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listImagePipelinesResponse_nextToken :: Lens' ListImagePipelinesResponse (Maybe Text)

-- | The list of image pipelines.
listImagePipelinesResponse_imagePipelineList :: Lens' ListImagePipelinesResponse (Maybe [ImagePipeline])

-- | The response's http status code.
listImagePipelinesResponse_httpStatus :: Lens' ListImagePipelinesResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelines
instance GHC.Show.Show Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelines
instance GHC.Read.Read Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelines
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelines
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelinesResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelinesResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelinesResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelinesResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelines
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelinesResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelines
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelines
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelines
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelines
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelines
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListImagePipelines.ListImagePipelines


-- | Returns a list of images created by the specified pipeline.
module Amazonka.ImageBuilder.ListImagePipelineImages

-- | <i>See:</i> <a>newListImagePipelineImages</a> smart constructor.
data ListImagePipelineImages
ListImagePipelineImages' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Natural -> Text -> ListImagePipelineImages

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
[$sel:filters:ListImagePipelineImages'] :: ListImagePipelineImages -> Maybe (NonEmpty Filter)

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
[$sel:nextToken:ListImagePipelineImages'] :: ListImagePipelineImages -> Maybe Text

-- | The maximum items to return in a request.
[$sel:maxResults:ListImagePipelineImages'] :: ListImagePipelineImages -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the image pipeline whose images you
--   want to view.
[$sel:imagePipelineArn:ListImagePipelineImages'] :: ListImagePipelineImages -> Text

-- | Create a value of <a>ListImagePipelineImages</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListImagePipelineImages'</a>,
--   <a>listImagePipelineImages_filters</a> - Use the following filters to
--   streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
--   
--   <a>$sel:nextToken:ListImagePipelineImages'</a>,
--   <a>listImagePipelineImages_nextToken</a> - A token to specify where to
--   start paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListImagePipelineImages'</a>,
--   <a>listImagePipelineImages_maxResults</a> - The maximum items to
--   return in a request.
--   
--   <a>$sel:imagePipelineArn:ListImagePipelineImages'</a>,
--   <a>listImagePipelineImages_imagePipelineArn</a> - The Amazon Resource
--   Name (ARN) of the image pipeline whose images you want to view.
newListImagePipelineImages :: Text -> ListImagePipelineImages

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
listImagePipelineImages_filters :: Lens' ListImagePipelineImages (Maybe (NonEmpty Filter))

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImagePipelineImages_nextToken :: Lens' ListImagePipelineImages (Maybe Text)

-- | The maximum items to return in a request.
listImagePipelineImages_maxResults :: Lens' ListImagePipelineImages (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the image pipeline whose images you
--   want to view.
listImagePipelineImages_imagePipelineArn :: Lens' ListImagePipelineImages Text

-- | <i>See:</i> <a>newListImagePipelineImagesResponse</a> smart
--   constructor.
data ListImagePipelineImagesResponse
ListImagePipelineImagesResponse' :: Maybe Text -> Maybe Text -> Maybe [ImageSummary] -> Int -> ListImagePipelineImagesResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ListImagePipelineImagesResponse'] :: ListImagePipelineImagesResponse -> Maybe Text

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
[$sel:nextToken:ListImagePipelineImagesResponse'] :: ListImagePipelineImagesResponse -> Maybe Text

-- | The list of images built by this pipeline.
[$sel:imageSummaryList:ListImagePipelineImagesResponse'] :: ListImagePipelineImagesResponse -> Maybe [ImageSummary]

-- | The response's http status code.
[$sel:httpStatus:ListImagePipelineImagesResponse'] :: ListImagePipelineImagesResponse -> Int

-- | Create a value of <a>ListImagePipelineImagesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImagePipelineImagesResponse'</a>,
--   <a>listImagePipelineImagesResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:nextToken:ListImagePipelineImages'</a>,
--   <a>listImagePipelineImagesResponse_nextToken</a> - The next token used
--   for paginated responses. When this is not empty, there are additional
--   elements that the service has not included in this request. Use this
--   token with the next request to retrieve additional objects.
--   
--   <a>$sel:imageSummaryList:ListImagePipelineImagesResponse'</a>,
--   <a>listImagePipelineImagesResponse_imageSummaryList</a> - The list of
--   images built by this pipeline.
--   
--   <a>$sel:httpStatus:ListImagePipelineImagesResponse'</a>,
--   <a>listImagePipelineImagesResponse_httpStatus</a> - The response's
--   http status code.
newListImagePipelineImagesResponse :: Int -> ListImagePipelineImagesResponse

-- | The request ID that uniquely identifies this request.
listImagePipelineImagesResponse_requestId :: Lens' ListImagePipelineImagesResponse (Maybe Text)

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listImagePipelineImagesResponse_nextToken :: Lens' ListImagePipelineImagesResponse (Maybe Text)

-- | The list of images built by this pipeline.
listImagePipelineImagesResponse_imageSummaryList :: Lens' ListImagePipelineImagesResponse (Maybe [ImageSummary])

-- | The response's http status code.
listImagePipelineImagesResponse_httpStatus :: Lens' ListImagePipelineImagesResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImages
instance GHC.Show.Show Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImages
instance GHC.Read.Read Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImages
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImages
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImagesResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImagesResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImagesResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImagesResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImages
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImagesResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImages
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImages
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImages
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImages
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImages
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListImagePipelineImages.ListImagePipelineImages


-- | List the Packages that are associated with an Image Build Version, as
--   determined by Amazon Web Services Systems Manager Inventory at build
--   time.
module Amazonka.ImageBuilder.ListImagePackages

-- | <i>See:</i> <a>newListImagePackages</a> smart constructor.
data ListImagePackages
ListImagePackages' :: Maybe Text -> Maybe Natural -> Text -> ListImagePackages

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
[$sel:nextToken:ListImagePackages'] :: ListImagePackages -> Maybe Text

-- | The maxiumum number of results to return from the ListImagePackages
--   request.
[$sel:maxResults:ListImagePackages'] :: ListImagePackages -> Maybe Natural

-- | Filter results for the ListImagePackages request by the Image Build
--   Version ARN
[$sel:imageBuildVersionArn:ListImagePackages'] :: ListImagePackages -> Text

-- | Create a value of <a>ListImagePackages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListImagePackages'</a>,
--   <a>listImagePackages_nextToken</a> - A token to specify where to start
--   paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListImagePackages'</a>,
--   <a>listImagePackages_maxResults</a> - The maxiumum number of results
--   to return from the ListImagePackages request.
--   
--   <a>$sel:imageBuildVersionArn:ListImagePackages'</a>,
--   <a>listImagePackages_imageBuildVersionArn</a> - Filter results for the
--   ListImagePackages request by the Image Build Version ARN
newListImagePackages :: Text -> ListImagePackages

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImagePackages_nextToken :: Lens' ListImagePackages (Maybe Text)

-- | The maxiumum number of results to return from the ListImagePackages
--   request.
listImagePackages_maxResults :: Lens' ListImagePackages (Maybe Natural)

-- | Filter results for the ListImagePackages request by the Image Build
--   Version ARN
listImagePackages_imageBuildVersionArn :: Lens' ListImagePackages Text

-- | <i>See:</i> <a>newListImagePackagesResponse</a> smart constructor.
data ListImagePackagesResponse
ListImagePackagesResponse' :: Maybe Text -> Maybe [ImagePackage] -> Maybe Text -> Int -> ListImagePackagesResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ListImagePackagesResponse'] :: ListImagePackagesResponse -> Maybe Text

-- | The list of Image Packages returned in the response.
[$sel:imagePackageList:ListImagePackagesResponse'] :: ListImagePackagesResponse -> Maybe [ImagePackage]

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
[$sel:nextToken:ListImagePackagesResponse'] :: ListImagePackagesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListImagePackagesResponse'] :: ListImagePackagesResponse -> Int

-- | Create a value of <a>ListImagePackagesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImagePackagesResponse'</a>,
--   <a>listImagePackagesResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:imagePackageList:ListImagePackagesResponse'</a>,
--   <a>listImagePackagesResponse_imagePackageList</a> - The list of Image
--   Packages returned in the response.
--   
--   <a>$sel:nextToken:ListImagePackages'</a>,
--   <a>listImagePackagesResponse_nextToken</a> - A token to specify where
--   to start paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:httpStatus:ListImagePackagesResponse'</a>,
--   <a>listImagePackagesResponse_httpStatus</a> - The response's http
--   status code.
newListImagePackagesResponse :: Int -> ListImagePackagesResponse

-- | The request ID that uniquely identifies this request.
listImagePackagesResponse_requestId :: Lens' ListImagePackagesResponse (Maybe Text)

-- | The list of Image Packages returned in the response.
listImagePackagesResponse_imagePackageList :: Lens' ListImagePackagesResponse (Maybe [ImagePackage])

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImagePackagesResponse_nextToken :: Lens' ListImagePackagesResponse (Maybe Text)

-- | The response's http status code.
listImagePackagesResponse_httpStatus :: Lens' ListImagePackagesResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImagePackages.ListImagePackages
instance GHC.Show.Show Amazonka.ImageBuilder.ListImagePackages.ListImagePackages
instance GHC.Read.Read Amazonka.ImageBuilder.ListImagePackages.ListImagePackages
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImagePackages.ListImagePackages
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImagePackages.ListImagePackagesResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListImagePackages.ListImagePackagesResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListImagePackages.ListImagePackagesResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImagePackages.ListImagePackagesResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListImagePackages.ListImagePackages
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImagePackages.ListImagePackagesResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListImagePackages.ListImagePackages
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImagePackages.ListImagePackages
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListImagePackages.ListImagePackages
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ListImagePackages.ListImagePackages
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListImagePackages.ListImagePackages
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListImagePackages.ListImagePackages


-- | Returns a list of image build versions.
module Amazonka.ImageBuilder.ListImageBuildVersions

-- | <i>See:</i> <a>newListImageBuildVersions</a> smart constructor.
data ListImageBuildVersions
ListImageBuildVersions' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Natural -> Text -> ListImageBuildVersions

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>osVersion</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
[$sel:filters:ListImageBuildVersions'] :: ListImageBuildVersions -> Maybe (NonEmpty Filter)

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
[$sel:nextToken:ListImageBuildVersions'] :: ListImageBuildVersions -> Maybe Text

-- | The maximum items to return in a request.
[$sel:maxResults:ListImageBuildVersions'] :: ListImageBuildVersions -> Maybe Natural

-- | The Amazon Resource Name (ARN) of the image whose build versions you
--   want to retrieve.
[$sel:imageVersionArn:ListImageBuildVersions'] :: ListImageBuildVersions -> Text

-- | Create a value of <a>ListImageBuildVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListImageBuildVersions'</a>,
--   <a>listImageBuildVersions_filters</a> - Use the following filters to
--   streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>osVersion</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
--   
--   <a>$sel:nextToken:ListImageBuildVersions'</a>,
--   <a>listImageBuildVersions_nextToken</a> - A token to specify where to
--   start paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListImageBuildVersions'</a>,
--   <a>listImageBuildVersions_maxResults</a> - The maximum items to return
--   in a request.
--   
--   <a>$sel:imageVersionArn:ListImageBuildVersions'</a>,
--   <a>listImageBuildVersions_imageVersionArn</a> - The Amazon Resource
--   Name (ARN) of the image whose build versions you want to retrieve.
newListImageBuildVersions :: Text -> ListImageBuildVersions

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>osVersion</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
listImageBuildVersions_filters :: Lens' ListImageBuildVersions (Maybe (NonEmpty Filter))

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImageBuildVersions_nextToken :: Lens' ListImageBuildVersions (Maybe Text)

-- | The maximum items to return in a request.
listImageBuildVersions_maxResults :: Lens' ListImageBuildVersions (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the image whose build versions you
--   want to retrieve.
listImageBuildVersions_imageVersionArn :: Lens' ListImageBuildVersions Text

-- | <i>See:</i> <a>newListImageBuildVersionsResponse</a> smart
--   constructor.
data ListImageBuildVersionsResponse
ListImageBuildVersionsResponse' :: Maybe Text -> Maybe Text -> Maybe [ImageSummary] -> Int -> ListImageBuildVersionsResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ListImageBuildVersionsResponse'] :: ListImageBuildVersionsResponse -> Maybe Text

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
[$sel:nextToken:ListImageBuildVersionsResponse'] :: ListImageBuildVersionsResponse -> Maybe Text

-- | The list of image build versions.
[$sel:imageSummaryList:ListImageBuildVersionsResponse'] :: ListImageBuildVersionsResponse -> Maybe [ImageSummary]

-- | The response's http status code.
[$sel:httpStatus:ListImageBuildVersionsResponse'] :: ListImageBuildVersionsResponse -> Int

-- | Create a value of <a>ListImageBuildVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImageBuildVersionsResponse'</a>,
--   <a>listImageBuildVersionsResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:nextToken:ListImageBuildVersions'</a>,
--   <a>listImageBuildVersionsResponse_nextToken</a> - The next token used
--   for paginated responses. When this is not empty, there are additional
--   elements that the service has not included in this request. Use this
--   token with the next request to retrieve additional objects.
--   
--   <a>$sel:imageSummaryList:ListImageBuildVersionsResponse'</a>,
--   <a>listImageBuildVersionsResponse_imageSummaryList</a> - The list of
--   image build versions.
--   
--   <a>$sel:httpStatus:ListImageBuildVersionsResponse'</a>,
--   <a>listImageBuildVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListImageBuildVersionsResponse :: Int -> ListImageBuildVersionsResponse

-- | The request ID that uniquely identifies this request.
listImageBuildVersionsResponse_requestId :: Lens' ListImageBuildVersionsResponse (Maybe Text)

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listImageBuildVersionsResponse_nextToken :: Lens' ListImageBuildVersionsResponse (Maybe Text)

-- | The list of image build versions.
listImageBuildVersionsResponse_imageSummaryList :: Lens' ListImageBuildVersionsResponse (Maybe [ImageSummary])

-- | The response's http status code.
listImageBuildVersionsResponse_httpStatus :: Lens' ListImageBuildVersionsResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersions
instance GHC.Show.Show Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersions
instance GHC.Read.Read Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersions
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersions
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersionsResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersionsResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersionsResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersions
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersionsResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersions
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersions
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersions
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListImageBuildVersions.ListImageBuildVersions


-- | Returns a list of distribution configurations.
module Amazonka.ImageBuilder.ListDistributionConfigurations

-- | <i>See:</i> <a>newListDistributionConfigurations</a> smart
--   constructor.
data ListDistributionConfigurations
ListDistributionConfigurations' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Natural -> ListDistributionConfigurations

-- | You can filter on <tt>name</tt> to streamline results.
[$sel:filters:ListDistributionConfigurations'] :: ListDistributionConfigurations -> Maybe (NonEmpty Filter)

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
[$sel:nextToken:ListDistributionConfigurations'] :: ListDistributionConfigurations -> Maybe Text

-- | The maximum items to return in a request.
[$sel:maxResults:ListDistributionConfigurations'] :: ListDistributionConfigurations -> Maybe Natural

-- | Create a value of <a>ListDistributionConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListDistributionConfigurations'</a>,
--   <a>listDistributionConfigurations_filters</a> - You can filter on
--   <tt>name</tt> to streamline results.
--   
--   <a>$sel:nextToken:ListDistributionConfigurations'</a>,
--   <a>listDistributionConfigurations_nextToken</a> - A token to specify
--   where to start paginating. This is the NextToken from a previously
--   truncated response.
--   
--   <a>$sel:maxResults:ListDistributionConfigurations'</a>,
--   <a>listDistributionConfigurations_maxResults</a> - The maximum items
--   to return in a request.
newListDistributionConfigurations :: ListDistributionConfigurations

-- | You can filter on <tt>name</tt> to streamline results.
listDistributionConfigurations_filters :: Lens' ListDistributionConfigurations (Maybe (NonEmpty Filter))

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listDistributionConfigurations_nextToken :: Lens' ListDistributionConfigurations (Maybe Text)

-- | The maximum items to return in a request.
listDistributionConfigurations_maxResults :: Lens' ListDistributionConfigurations (Maybe Natural)

-- | <i>See:</i> <a>newListDistributionConfigurationsResponse</a> smart
--   constructor.
data ListDistributionConfigurationsResponse
ListDistributionConfigurationsResponse' :: Maybe Text -> Maybe [DistributionConfigurationSummary] -> Maybe Text -> Int -> ListDistributionConfigurationsResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ListDistributionConfigurationsResponse'] :: ListDistributionConfigurationsResponse -> Maybe Text

-- | The list of distributions.
[$sel:distributionConfigurationSummaryList:ListDistributionConfigurationsResponse'] :: ListDistributionConfigurationsResponse -> Maybe [DistributionConfigurationSummary]

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
[$sel:nextToken:ListDistributionConfigurationsResponse'] :: ListDistributionConfigurationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListDistributionConfigurationsResponse'] :: ListDistributionConfigurationsResponse -> Int

-- | Create a value of <a>ListDistributionConfigurationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListDistributionConfigurationsResponse'</a>,
--   <a>listDistributionConfigurationsResponse_requestId</a> - The request
--   ID that uniquely identifies this request.
--   
--   
--   <a>$sel:distributionConfigurationSummaryList:ListDistributionConfigurationsResponse'</a>,
--   <a>listDistributionConfigurationsResponse_distributionConfigurationSummaryList</a>
--   - The list of distributions.
--   
--   <a>$sel:nextToken:ListDistributionConfigurations'</a>,
--   <a>listDistributionConfigurationsResponse_nextToken</a> - The next
--   token used for paginated responses. When this is not empty, there are
--   additional elements that the service has not included in this request.
--   Use this token with the next request to retrieve additional objects.
--   
--   <a>$sel:httpStatus:ListDistributionConfigurationsResponse'</a>,
--   <a>listDistributionConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newListDistributionConfigurationsResponse :: Int -> ListDistributionConfigurationsResponse

-- | The request ID that uniquely identifies this request.
listDistributionConfigurationsResponse_requestId :: Lens' ListDistributionConfigurationsResponse (Maybe Text)

-- | The list of distributions.
listDistributionConfigurationsResponse_distributionConfigurationSummaryList :: Lens' ListDistributionConfigurationsResponse (Maybe [DistributionConfigurationSummary])

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listDistributionConfigurationsResponse_nextToken :: Lens' ListDistributionConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listDistributionConfigurationsResponse_httpStatus :: Lens' ListDistributionConfigurationsResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurations
instance GHC.Show.Show Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurations
instance GHC.Read.Read Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurations
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurations
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurationsResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurationsResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurationsResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurationsResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurations
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurationsResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurations
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurations
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurations
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurations
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurations
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListDistributionConfigurations.ListDistributionConfigurations


-- | Returns a list of container recipes.
module Amazonka.ImageBuilder.ListContainerRecipes

-- | <i>See:</i> <a>newListContainerRecipes</a> smart constructor.
data ListContainerRecipes
ListContainerRecipes' :: Maybe (NonEmpty Filter) -> Maybe Ownership -> Maybe Text -> Maybe Natural -> ListContainerRecipes

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>containerType</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>parentImage</pre></li>
--   <li><pre>platform</pre></li>
--   </ul>
[$sel:filters:ListContainerRecipes'] :: ListContainerRecipes -> Maybe (NonEmpty Filter)

-- | Returns container recipes belonging to the specified owner, that have
--   been shared with you. You can omit this field to return container
--   recipes belonging to your account.
[$sel:owner:ListContainerRecipes'] :: ListContainerRecipes -> Maybe Ownership

-- | Provides a token for pagination, which determines where to begin the
--   next set of results when the current set reaches the maximum for one
--   request.
[$sel:nextToken:ListContainerRecipes'] :: ListContainerRecipes -> Maybe Text

-- | The maximum number of results to return in the list.
[$sel:maxResults:ListContainerRecipes'] :: ListContainerRecipes -> Maybe Natural

-- | Create a value of <a>ListContainerRecipes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListContainerRecipes'</a>,
--   <a>listContainerRecipes_filters</a> - Use the following filters to
--   streamline results:
--   
--   <ul>
--   <li><pre>containerType</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>parentImage</pre></li>
--   <li><pre>platform</pre></li>
--   </ul>
--   
--   <a>$sel:owner:ListContainerRecipes'</a>,
--   <a>listContainerRecipes_owner</a> - Returns container recipes
--   belonging to the specified owner, that have been shared with you. You
--   can omit this field to return container recipes belonging to your
--   account.
--   
--   <a>$sel:nextToken:ListContainerRecipes'</a>,
--   <a>listContainerRecipes_nextToken</a> - Provides a token for
--   pagination, which determines where to begin the next set of results
--   when the current set reaches the maximum for one request.
--   
--   <a>$sel:maxResults:ListContainerRecipes'</a>,
--   <a>listContainerRecipes_maxResults</a> - The maximum number of results
--   to return in the list.
newListContainerRecipes :: ListContainerRecipes

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>containerType</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>parentImage</pre></li>
--   <li><pre>platform</pre></li>
--   </ul>
listContainerRecipes_filters :: Lens' ListContainerRecipes (Maybe (NonEmpty Filter))

-- | Returns container recipes belonging to the specified owner, that have
--   been shared with you. You can omit this field to return container
--   recipes belonging to your account.
listContainerRecipes_owner :: Lens' ListContainerRecipes (Maybe Ownership)

-- | Provides a token for pagination, which determines where to begin the
--   next set of results when the current set reaches the maximum for one
--   request.
listContainerRecipes_nextToken :: Lens' ListContainerRecipes (Maybe Text)

-- | The maximum number of results to return in the list.
listContainerRecipes_maxResults :: Lens' ListContainerRecipes (Maybe Natural)

-- | <i>See:</i> <a>newListContainerRecipesResponse</a> smart constructor.
data ListContainerRecipesResponse
ListContainerRecipesResponse' :: Maybe Text -> Maybe [ContainerRecipeSummary] -> Maybe Text -> Int -> ListContainerRecipesResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ListContainerRecipesResponse'] :: ListContainerRecipesResponse -> Maybe Text

-- | The list of container recipes returned for the request.
[$sel:containerRecipeSummaryList:ListContainerRecipesResponse'] :: ListContainerRecipesResponse -> Maybe [ContainerRecipeSummary]

-- | The next token field is used for paginated responses. When this is not
--   empty, there are additional container recipes that the service has not
--   included in this response. Use this token with the next request to
--   retrieve additional list items.
[$sel:nextToken:ListContainerRecipesResponse'] :: ListContainerRecipesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListContainerRecipesResponse'] :: ListContainerRecipesResponse -> Int

-- | Create a value of <a>ListContainerRecipesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListContainerRecipesResponse'</a>,
--   <a>listContainerRecipesResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:containerRecipeSummaryList:ListContainerRecipesResponse'</a>,
--   <a>listContainerRecipesResponse_containerRecipeSummaryList</a> - The
--   list of container recipes returned for the request.
--   
--   <a>$sel:nextToken:ListContainerRecipes'</a>,
--   <a>listContainerRecipesResponse_nextToken</a> - The next token field
--   is used for paginated responses. When this is not empty, there are
--   additional container recipes that the service has not included in this
--   response. Use this token with the next request to retrieve additional
--   list items.
--   
--   <a>$sel:httpStatus:ListContainerRecipesResponse'</a>,
--   <a>listContainerRecipesResponse_httpStatus</a> - The response's http
--   status code.
newListContainerRecipesResponse :: Int -> ListContainerRecipesResponse

-- | The request ID that uniquely identifies this request.
listContainerRecipesResponse_requestId :: Lens' ListContainerRecipesResponse (Maybe Text)

-- | The list of container recipes returned for the request.
listContainerRecipesResponse_containerRecipeSummaryList :: Lens' ListContainerRecipesResponse (Maybe [ContainerRecipeSummary])

-- | The next token field is used for paginated responses. When this is not
--   empty, there are additional container recipes that the service has not
--   included in this response. Use this token with the next request to
--   retrieve additional list items.
listContainerRecipesResponse_nextToken :: Lens' ListContainerRecipesResponse (Maybe Text)

-- | The response's http status code.
listContainerRecipesResponse_httpStatus :: Lens' ListContainerRecipesResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipes
instance GHC.Show.Show Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipes
instance GHC.Read.Read Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipes
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipes
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipesResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipesResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipesResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipesResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipes
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipesResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipes
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipes
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipes
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipes
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipes
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListContainerRecipes.ListContainerRecipes


-- | Returns the list of component build versions for the specified
--   semantic version.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
module Amazonka.ImageBuilder.ListComponents

-- | <i>See:</i> <a>newListComponents</a> smart constructor.
data ListComponents
ListComponents' :: Maybe (NonEmpty Filter) -> Maybe Ownership -> Maybe Bool -> Maybe Text -> Maybe Natural -> ListComponents

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>description</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>supportedOsVersion</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
[$sel:filters:ListComponents'] :: ListComponents -> Maybe (NonEmpty Filter)

-- | The owner defines which components you want to list. By default, this
--   request will only show components owned by your account. You can use
--   this field to specify if you want to view components owned by
--   yourself, by Amazon, or those components that have been shared with
--   you by other customers.
[$sel:owner:ListComponents'] :: ListComponents -> Maybe Ownership

-- | Returns the list of component build versions for the specified name.
[$sel:byName:ListComponents'] :: ListComponents -> Maybe Bool

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
[$sel:nextToken:ListComponents'] :: ListComponents -> Maybe Text

-- | The maximum items to return in a request.
[$sel:maxResults:ListComponents'] :: ListComponents -> Maybe Natural

-- | Create a value of <a>ListComponents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListComponents'</a>, <a>listComponents_filters</a> -
--   Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>description</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>supportedOsVersion</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
--   
--   <a>$sel:owner:ListComponents'</a>, <a>listComponents_owner</a> - The
--   owner defines which components you want to list. By default, this
--   request will only show components owned by your account. You can use
--   this field to specify if you want to view components owned by
--   yourself, by Amazon, or those components that have been shared with
--   you by other customers.
--   
--   <a>$sel:byName:ListComponents'</a>, <a>listComponents_byName</a> -
--   Returns the list of component build versions for the specified name.
--   
--   <a>$sel:nextToken:ListComponents'</a>, <a>listComponents_nextToken</a>
--   - A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
--   
--   <a>$sel:maxResults:ListComponents'</a>,
--   <a>listComponents_maxResults</a> - The maximum items to return in a
--   request.
newListComponents :: ListComponents

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>description</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>supportedOsVersion</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
listComponents_filters :: Lens' ListComponents (Maybe (NonEmpty Filter))

-- | The owner defines which components you want to list. By default, this
--   request will only show components owned by your account. You can use
--   this field to specify if you want to view components owned by
--   yourself, by Amazon, or those components that have been shared with
--   you by other customers.
listComponents_owner :: Lens' ListComponents (Maybe Ownership)

-- | Returns the list of component build versions for the specified name.
listComponents_byName :: Lens' ListComponents (Maybe Bool)

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listComponents_nextToken :: Lens' ListComponents (Maybe Text)

-- | The maximum items to return in a request.
listComponents_maxResults :: Lens' ListComponents (Maybe Natural)

-- | <i>See:</i> <a>newListComponentsResponse</a> smart constructor.
data ListComponentsResponse
ListComponentsResponse' :: Maybe Text -> Maybe [ComponentVersion] -> Maybe Text -> Int -> ListComponentsResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ListComponentsResponse'] :: ListComponentsResponse -> Maybe Text

-- | The list of component semantic versions.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
[$sel:componentVersionList:ListComponentsResponse'] :: ListComponentsResponse -> Maybe [ComponentVersion]

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
[$sel:nextToken:ListComponentsResponse'] :: ListComponentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListComponentsResponse'] :: ListComponentsResponse -> Int

-- | Create a value of <a>ListComponentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListComponentsResponse'</a>,
--   <a>listComponentsResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:componentVersionList:ListComponentsResponse'</a>,
--   <a>listComponentsResponse_componentVersionList</a> - The list of
--   component semantic versions.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <a>$sel:nextToken:ListComponents'</a>,
--   <a>listComponentsResponse_nextToken</a> - The next token used for
--   paginated responses. When this is not empty, there are additional
--   elements that the service has not included in this request. Use this
--   token with the next request to retrieve additional objects.
--   
--   <a>$sel:httpStatus:ListComponentsResponse'</a>,
--   <a>listComponentsResponse_httpStatus</a> - The response's http status
--   code.
newListComponentsResponse :: Int -> ListComponentsResponse

-- | The request ID that uniquely identifies this request.
listComponentsResponse_requestId :: Lens' ListComponentsResponse (Maybe Text)

-- | The list of component semantic versions.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
listComponentsResponse_componentVersionList :: Lens' ListComponentsResponse (Maybe [ComponentVersion])

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listComponentsResponse_nextToken :: Lens' ListComponentsResponse (Maybe Text)

-- | The response's http status code.
listComponentsResponse_httpStatus :: Lens' ListComponentsResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListComponents.ListComponents
instance GHC.Show.Show Amazonka.ImageBuilder.ListComponents.ListComponents
instance GHC.Read.Read Amazonka.ImageBuilder.ListComponents.ListComponents
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListComponents.ListComponents
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListComponents.ListComponentsResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListComponents.ListComponentsResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListComponents.ListComponentsResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListComponents.ListComponentsResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListComponents.ListComponents
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListComponents.ListComponentsResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListComponents.ListComponents
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListComponents.ListComponents
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListComponents.ListComponents
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ListComponents.ListComponents
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListComponents.ListComponents
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListComponents.ListComponents


-- | Returns the list of component build versions for the specified
--   semantic version.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
module Amazonka.ImageBuilder.ListComponentBuildVersions

-- | <i>See:</i> <a>newListComponentBuildVersions</a> smart constructor.
data ListComponentBuildVersions
ListComponentBuildVersions' :: Maybe Text -> Maybe Natural -> Text -> ListComponentBuildVersions

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
[$sel:nextToken:ListComponentBuildVersions'] :: ListComponentBuildVersions -> Maybe Text

-- | The maximum items to return in a request.
[$sel:maxResults:ListComponentBuildVersions'] :: ListComponentBuildVersions -> Maybe Natural

-- | The component version Amazon Resource Name (ARN) whose versions you
--   want to list.
[$sel:componentVersionArn:ListComponentBuildVersions'] :: ListComponentBuildVersions -> Text

-- | Create a value of <a>ListComponentBuildVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListComponentBuildVersions'</a>,
--   <a>listComponentBuildVersions_nextToken</a> - A token to specify where
--   to start paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListComponentBuildVersions'</a>,
--   <a>listComponentBuildVersions_maxResults</a> - The maximum items to
--   return in a request.
--   
--   <a>$sel:componentVersionArn:ListComponentBuildVersions'</a>,
--   <a>listComponentBuildVersions_componentVersionArn</a> - The component
--   version Amazon Resource Name (ARN) whose versions you want to list.
newListComponentBuildVersions :: Text -> ListComponentBuildVersions

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listComponentBuildVersions_nextToken :: Lens' ListComponentBuildVersions (Maybe Text)

-- | The maximum items to return in a request.
listComponentBuildVersions_maxResults :: Lens' ListComponentBuildVersions (Maybe Natural)

-- | The component version Amazon Resource Name (ARN) whose versions you
--   want to list.
listComponentBuildVersions_componentVersionArn :: Lens' ListComponentBuildVersions Text

-- | <i>See:</i> <a>newListComponentBuildVersionsResponse</a> smart
--   constructor.
data ListComponentBuildVersionsResponse
ListComponentBuildVersionsResponse' :: Maybe Text -> Maybe Text -> Maybe [ComponentSummary] -> Int -> ListComponentBuildVersionsResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ListComponentBuildVersionsResponse'] :: ListComponentBuildVersionsResponse -> Maybe Text

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
[$sel:nextToken:ListComponentBuildVersionsResponse'] :: ListComponentBuildVersionsResponse -> Maybe Text

-- | The list of component summaries for the specified semantic version.
[$sel:componentSummaryList:ListComponentBuildVersionsResponse'] :: ListComponentBuildVersionsResponse -> Maybe [ComponentSummary]

-- | The response's http status code.
[$sel:httpStatus:ListComponentBuildVersionsResponse'] :: ListComponentBuildVersionsResponse -> Int

-- | Create a value of <a>ListComponentBuildVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListComponentBuildVersionsResponse'</a>,
--   <a>listComponentBuildVersionsResponse_requestId</a> - The request ID
--   that uniquely identifies this request.
--   
--   <a>$sel:nextToken:ListComponentBuildVersions'</a>,
--   <a>listComponentBuildVersionsResponse_nextToken</a> - The next token
--   used for paginated responses. When this is not empty, there are
--   additional elements that the service has not included in this request.
--   Use this token with the next request to retrieve additional objects.
--   
--   <a>$sel:componentSummaryList:ListComponentBuildVersionsResponse'</a>,
--   <a>listComponentBuildVersionsResponse_componentSummaryList</a> - The
--   list of component summaries for the specified semantic version.
--   
--   <a>$sel:httpStatus:ListComponentBuildVersionsResponse'</a>,
--   <a>listComponentBuildVersionsResponse_httpStatus</a> - The response's
--   http status code.
newListComponentBuildVersionsResponse :: Int -> ListComponentBuildVersionsResponse

-- | The request ID that uniquely identifies this request.
listComponentBuildVersionsResponse_requestId :: Lens' ListComponentBuildVersionsResponse (Maybe Text)

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listComponentBuildVersionsResponse_nextToken :: Lens' ListComponentBuildVersionsResponse (Maybe Text)

-- | The list of component summaries for the specified semantic version.
listComponentBuildVersionsResponse_componentSummaryList :: Lens' ListComponentBuildVersionsResponse (Maybe [ComponentSummary])

-- | The response's http status code.
listComponentBuildVersionsResponse_httpStatus :: Lens' ListComponentBuildVersionsResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersions
instance GHC.Show.Show Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersions
instance GHC.Read.Read Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersions
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersions
instance GHC.Generics.Generic Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersionsResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersionsResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersionsResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersionsResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersions
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersionsResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersions
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersions
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersions
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersions
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ListComponentBuildVersions.ListComponentBuildVersions


-- | Imports a component and transforms its data into a component document.
module Amazonka.ImageBuilder.ImportComponent

-- | <i>See:</i> <a>newImportComponent</a> smart constructor.
data ImportComponent
ImportComponent' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> ComponentType -> ComponentFormat -> Platform -> Text -> ImportComponent

-- | The data of the component. Used to specify the data inline. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
[$sel:data':ImportComponent'] :: ImportComponent -> Maybe Text

-- | The uri of the component. Must be an Amazon S3 URL and the requester
--   must have permission to access the Amazon S3 bucket. If you use Amazon
--   S3, you can specify component content up to your service quota. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
[$sel:uri:ImportComponent'] :: ImportComponent -> Maybe Text

-- | The ID of the KMS key that should be used to encrypt this component.
[$sel:kmsKeyId:ImportComponent'] :: ImportComponent -> Maybe Text

-- | The change description of the component. Describes what change has
--   been made in this version, or what makes this version different from
--   other versions of this component.
[$sel:changeDescription:ImportComponent'] :: ImportComponent -> Maybe Text

-- | The description of the component. Describes the contents of the
--   component.
[$sel:description:ImportComponent'] :: ImportComponent -> Maybe Text

-- | The tags of the component.
[$sel:tags:ImportComponent'] :: ImportComponent -> Maybe (HashMap Text Text)

-- | The name of the component.
[$sel:name:ImportComponent'] :: ImportComponent -> Text

-- | The semantic version of the component. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
[$sel:semanticVersion:ImportComponent'] :: ImportComponent -> Text

-- | The type of the component denotes whether the component is used to
--   build the image, or only to test it.
[$sel:type':ImportComponent'] :: ImportComponent -> ComponentType

-- | The format of the resource that you want to import as a component.
[$sel:format:ImportComponent'] :: ImportComponent -> ComponentFormat

-- | The platform of the component.
[$sel:platform:ImportComponent'] :: ImportComponent -> Platform

-- | The idempotency token of the component.
[$sel:clientToken:ImportComponent'] :: ImportComponent -> Text

-- | Create a value of <a>ImportComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':ImportComponent'</a>, <a>importComponent_data</a> - The
--   data of the component. Used to specify the data inline. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
--   
--   <a>$sel:uri:ImportComponent'</a>, <a>importComponent_uri</a> - The uri
--   of the component. Must be an Amazon S3 URL and the requester must have
--   permission to access the Amazon S3 bucket. If you use Amazon S3, you
--   can specify component content up to your service quota. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
--   
--   <a>$sel:kmsKeyId:ImportComponent'</a>, <a>importComponent_kmsKeyId</a>
--   - The ID of the KMS key that should be used to encrypt this component.
--   
--   <a>$sel:changeDescription:ImportComponent'</a>,
--   <a>importComponent_changeDescription</a> - The change description of
--   the component. Describes what change has been made in this version, or
--   what makes this version different from other versions of this
--   component.
--   
--   <a>$sel:description:ImportComponent'</a>,
--   <a>importComponent_description</a> - The description of the component.
--   Describes the contents of the component.
--   
--   <a>$sel:tags:ImportComponent'</a>, <a>importComponent_tags</a> - The
--   tags of the component.
--   
--   <a>$sel:name:ImportComponent'</a>, <a>importComponent_name</a> - The
--   name of the component.
--   
--   <a>$sel:semanticVersion:ImportComponent'</a>,
--   <a>importComponent_semanticVersion</a> - The semantic version of the
--   component. This version follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:type':ImportComponent'</a>, <a>importComponent_type</a> - The
--   type of the component denotes whether the component is used to build
--   the image, or only to test it.
--   
--   <a>$sel:format:ImportComponent'</a>, <a>importComponent_format</a> -
--   The format of the resource that you want to import as a component.
--   
--   <a>$sel:platform:ImportComponent'</a>, <a>importComponent_platform</a>
--   - The platform of the component.
--   
--   <a>$sel:clientToken:ImportComponent'</a>,
--   <a>importComponent_clientToken</a> - The idempotency token of the
--   component.
newImportComponent :: Text -> Text -> ComponentType -> ComponentFormat -> Platform -> Text -> ImportComponent

-- | The data of the component. Used to specify the data inline. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
importComponent_data :: Lens' ImportComponent (Maybe Text)

-- | The uri of the component. Must be an Amazon S3 URL and the requester
--   must have permission to access the Amazon S3 bucket. If you use Amazon
--   S3, you can specify component content up to your service quota. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
importComponent_uri :: Lens' ImportComponent (Maybe Text)

-- | The ID of the KMS key that should be used to encrypt this component.
importComponent_kmsKeyId :: Lens' ImportComponent (Maybe Text)

-- | The change description of the component. Describes what change has
--   been made in this version, or what makes this version different from
--   other versions of this component.
importComponent_changeDescription :: Lens' ImportComponent (Maybe Text)

-- | The description of the component. Describes the contents of the
--   component.
importComponent_description :: Lens' ImportComponent (Maybe Text)

-- | The tags of the component.
importComponent_tags :: Lens' ImportComponent (Maybe (HashMap Text Text))

-- | The name of the component.
importComponent_name :: Lens' ImportComponent Text

-- | The semantic version of the component. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
importComponent_semanticVersion :: Lens' ImportComponent Text

-- | The type of the component denotes whether the component is used to
--   build the image, or only to test it.
importComponent_type :: Lens' ImportComponent ComponentType

-- | The format of the resource that you want to import as a component.
importComponent_format :: Lens' ImportComponent ComponentFormat

-- | The platform of the component.
importComponent_platform :: Lens' ImportComponent Platform

-- | The idempotency token of the component.
importComponent_clientToken :: Lens' ImportComponent Text

-- | <i>See:</i> <a>newImportComponentResponse</a> smart constructor.
data ImportComponentResponse
ImportComponentResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> ImportComponentResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:ImportComponentResponse'] :: ImportComponentResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:ImportComponentResponse'] :: ImportComponentResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the imported component.
[$sel:componentBuildVersionArn:ImportComponentResponse'] :: ImportComponentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ImportComponentResponse'] :: ImportComponentResponse -> Int

-- | Create a value of <a>ImportComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ImportComponentResponse'</a>,
--   <a>importComponentResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:ImportComponent'</a>,
--   <a>importComponentResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:componentBuildVersionArn:ImportComponentResponse'</a>,
--   <a>importComponentResponse_componentBuildVersionArn</a> - The Amazon
--   Resource Name (ARN) of the imported component.
--   
--   <a>$sel:httpStatus:ImportComponentResponse'</a>,
--   <a>importComponentResponse_httpStatus</a> - The response's http status
--   code.
newImportComponentResponse :: Int -> ImportComponentResponse

-- | The request ID that uniquely identifies this request.
importComponentResponse_requestId :: Lens' ImportComponentResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
importComponentResponse_clientToken :: Lens' ImportComponentResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the imported component.
importComponentResponse_componentBuildVersionArn :: Lens' ImportComponentResponse (Maybe Text)

-- | The response's http status code.
importComponentResponse_httpStatus :: Lens' ImportComponentResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.ImportComponent.ImportComponent
instance GHC.Show.Show Amazonka.ImageBuilder.ImportComponent.ImportComponent
instance GHC.Read.Read Amazonka.ImageBuilder.ImportComponent.ImportComponent
instance GHC.Classes.Eq Amazonka.ImageBuilder.ImportComponent.ImportComponent
instance GHC.Generics.Generic Amazonka.ImageBuilder.ImportComponent.ImportComponentResponse
instance GHC.Show.Show Amazonka.ImageBuilder.ImportComponent.ImportComponentResponse
instance GHC.Read.Read Amazonka.ImageBuilder.ImportComponent.ImportComponentResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.ImportComponent.ImportComponentResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.ImportComponent.ImportComponent
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ImportComponent.ImportComponentResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.ImportComponent.ImportComponent
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.ImportComponent.ImportComponent
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.ImportComponent.ImportComponent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.ImportComponent.ImportComponent
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.ImportComponent.ImportComponent
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.ImportComponent.ImportComponent


-- | Gets an infrastructure configuration.
module Amazonka.ImageBuilder.GetInfrastructureConfiguration

-- | GetInfrastructureConfiguration request object.
--   
--   <i>See:</i> <a>newGetInfrastructureConfiguration</a> smart
--   constructor.
data GetInfrastructureConfiguration
GetInfrastructureConfiguration' :: Text -> GetInfrastructureConfiguration

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that you want to retrieve.
[$sel:infrastructureConfigurationArn:GetInfrastructureConfiguration'] :: GetInfrastructureConfiguration -> Text

-- | Create a value of <a>GetInfrastructureConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:infrastructureConfigurationArn:GetInfrastructureConfiguration'</a>,
--   <a>getInfrastructureConfiguration_infrastructureConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of the infrastructure configuration
--   that you want to retrieve.
newGetInfrastructureConfiguration :: Text -> GetInfrastructureConfiguration

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that you want to retrieve.
getInfrastructureConfiguration_infrastructureConfigurationArn :: Lens' GetInfrastructureConfiguration Text

-- | GetInfrastructureConfiguration response object.
--   
--   <i>See:</i> <a>newGetInfrastructureConfigurationResponse</a> smart
--   constructor.
data GetInfrastructureConfigurationResponse
GetInfrastructureConfigurationResponse' :: Maybe Text -> Maybe InfrastructureConfiguration -> Int -> GetInfrastructureConfigurationResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:GetInfrastructureConfigurationResponse'] :: GetInfrastructureConfigurationResponse -> Maybe Text

-- | The infrastructure configuration object.
[$sel:infrastructureConfiguration:GetInfrastructureConfigurationResponse'] :: GetInfrastructureConfigurationResponse -> Maybe InfrastructureConfiguration

-- | The response's http status code.
[$sel:httpStatus:GetInfrastructureConfigurationResponse'] :: GetInfrastructureConfigurationResponse -> Int

-- | Create a value of <a>GetInfrastructureConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetInfrastructureConfigurationResponse'</a>,
--   <a>getInfrastructureConfigurationResponse_requestId</a> - The request
--   ID that uniquely identifies this request.
--   
--   
--   <a>$sel:infrastructureConfiguration:GetInfrastructureConfigurationResponse'</a>,
--   <a>getInfrastructureConfigurationResponse_infrastructureConfiguration</a>
--   - The infrastructure configuration object.
--   
--   <a>$sel:httpStatus:GetInfrastructureConfigurationResponse'</a>,
--   <a>getInfrastructureConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newGetInfrastructureConfigurationResponse :: Int -> GetInfrastructureConfigurationResponse

-- | The request ID that uniquely identifies this request.
getInfrastructureConfigurationResponse_requestId :: Lens' GetInfrastructureConfigurationResponse (Maybe Text)

-- | The infrastructure configuration object.
getInfrastructureConfigurationResponse_infrastructureConfiguration :: Lens' GetInfrastructureConfigurationResponse (Maybe InfrastructureConfiguration)

-- | The response's http status code.
getInfrastructureConfigurationResponse_httpStatus :: Lens' GetInfrastructureConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfiguration
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfigurationResponse
instance GHC.Show.Show Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfigurationResponse
instance GHC.Read.Read Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfigurationResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.GetInfrastructureConfiguration.GetInfrastructureConfiguration


-- | Gets an image recipe policy.
module Amazonka.ImageBuilder.GetImageRecipePolicy

-- | <i>See:</i> <a>newGetImageRecipePolicy</a> smart constructor.
data GetImageRecipePolicy
GetImageRecipePolicy' :: Text -> GetImageRecipePolicy

-- | The Amazon Resource Name (ARN) of the image recipe whose policy you
--   want to retrieve.
[$sel:imageRecipeArn:GetImageRecipePolicy'] :: GetImageRecipePolicy -> Text

-- | Create a value of <a>GetImageRecipePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRecipeArn:GetImageRecipePolicy'</a>,
--   <a>getImageRecipePolicy_imageRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the image recipe whose policy you want to retrieve.
newGetImageRecipePolicy :: Text -> GetImageRecipePolicy

-- | The Amazon Resource Name (ARN) of the image recipe whose policy you
--   want to retrieve.
getImageRecipePolicy_imageRecipeArn :: Lens' GetImageRecipePolicy Text

-- | <i>See:</i> <a>newGetImageRecipePolicyResponse</a> smart constructor.
data GetImageRecipePolicyResponse
GetImageRecipePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetImageRecipePolicyResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:GetImageRecipePolicyResponse'] :: GetImageRecipePolicyResponse -> Maybe Text

-- | The image recipe policy object.
[$sel:policy:GetImageRecipePolicyResponse'] :: GetImageRecipePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetImageRecipePolicyResponse'] :: GetImageRecipePolicyResponse -> Int

-- | Create a value of <a>GetImageRecipePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetImageRecipePolicyResponse'</a>,
--   <a>getImageRecipePolicyResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:policy:GetImageRecipePolicyResponse'</a>,
--   <a>getImageRecipePolicyResponse_policy</a> - The image recipe policy
--   object.
--   
--   <a>$sel:httpStatus:GetImageRecipePolicyResponse'</a>,
--   <a>getImageRecipePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetImageRecipePolicyResponse :: Int -> GetImageRecipePolicyResponse

-- | The request ID that uniquely identifies this request.
getImageRecipePolicyResponse_requestId :: Lens' GetImageRecipePolicyResponse (Maybe Text)

-- | The image recipe policy object.
getImageRecipePolicyResponse_policy :: Lens' GetImageRecipePolicyResponse (Maybe Text)

-- | The response's http status code.
getImageRecipePolicyResponse_httpStatus :: Lens' GetImageRecipePolicyResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicy
instance GHC.Show.Show Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicy
instance GHC.Read.Read Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicy
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicy
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicyResponse
instance GHC.Show.Show Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicyResponse
instance GHC.Read.Read Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicyResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicy
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.GetImageRecipePolicy.GetImageRecipePolicy


-- | Gets an image recipe.
module Amazonka.ImageBuilder.GetImageRecipe

-- | <i>See:</i> <a>newGetImageRecipe</a> smart constructor.
data GetImageRecipe
GetImageRecipe' :: Text -> GetImageRecipe

-- | The Amazon Resource Name (ARN) of the image recipe that you want to
--   retrieve.
[$sel:imageRecipeArn:GetImageRecipe'] :: GetImageRecipe -> Text

-- | Create a value of <a>GetImageRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRecipeArn:GetImageRecipe'</a>,
--   <a>getImageRecipe_imageRecipeArn</a> - The Amazon Resource Name (ARN)
--   of the image recipe that you want to retrieve.
newGetImageRecipe :: Text -> GetImageRecipe

-- | The Amazon Resource Name (ARN) of the image recipe that you want to
--   retrieve.
getImageRecipe_imageRecipeArn :: Lens' GetImageRecipe Text

-- | <i>See:</i> <a>newGetImageRecipeResponse</a> smart constructor.
data GetImageRecipeResponse
GetImageRecipeResponse' :: Maybe Text -> Maybe ImageRecipe -> Int -> GetImageRecipeResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:GetImageRecipeResponse'] :: GetImageRecipeResponse -> Maybe Text

-- | The image recipe object.
[$sel:imageRecipe:GetImageRecipeResponse'] :: GetImageRecipeResponse -> Maybe ImageRecipe

-- | The response's http status code.
[$sel:httpStatus:GetImageRecipeResponse'] :: GetImageRecipeResponse -> Int

-- | Create a value of <a>GetImageRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetImageRecipeResponse'</a>,
--   <a>getImageRecipeResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:imageRecipe:GetImageRecipeResponse'</a>,
--   <a>getImageRecipeResponse_imageRecipe</a> - The image recipe object.
--   
--   <a>$sel:httpStatus:GetImageRecipeResponse'</a>,
--   <a>getImageRecipeResponse_httpStatus</a> - The response's http status
--   code.
newGetImageRecipeResponse :: Int -> GetImageRecipeResponse

-- | The request ID that uniquely identifies this request.
getImageRecipeResponse_requestId :: Lens' GetImageRecipeResponse (Maybe Text)

-- | The image recipe object.
getImageRecipeResponse_imageRecipe :: Lens' GetImageRecipeResponse (Maybe ImageRecipe)

-- | The response's http status code.
getImageRecipeResponse_httpStatus :: Lens' GetImageRecipeResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipe
instance GHC.Show.Show Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipe
instance GHC.Read.Read Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipe
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipe
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipeResponse
instance GHC.Show.Show Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipeResponse
instance GHC.Read.Read Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipeResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipeResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipeResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipe
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipe
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipe
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.GetImageRecipe.GetImageRecipe


-- | Gets an image policy.
module Amazonka.ImageBuilder.GetImagePolicy

-- | <i>See:</i> <a>newGetImagePolicy</a> smart constructor.
data GetImagePolicy
GetImagePolicy' :: Text -> GetImagePolicy

-- | The Amazon Resource Name (ARN) of the image whose policy you want to
--   retrieve.
[$sel:imageArn:GetImagePolicy'] :: GetImagePolicy -> Text

-- | Create a value of <a>GetImagePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageArn:GetImagePolicy'</a>, <a>getImagePolicy_imageArn</a> -
--   The Amazon Resource Name (ARN) of the image whose policy you want to
--   retrieve.
newGetImagePolicy :: Text -> GetImagePolicy

-- | The Amazon Resource Name (ARN) of the image whose policy you want to
--   retrieve.
getImagePolicy_imageArn :: Lens' GetImagePolicy Text

-- | <i>See:</i> <a>newGetImagePolicyResponse</a> smart constructor.
data GetImagePolicyResponse
GetImagePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetImagePolicyResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:GetImagePolicyResponse'] :: GetImagePolicyResponse -> Maybe Text

-- | The image policy object.
[$sel:policy:GetImagePolicyResponse'] :: GetImagePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetImagePolicyResponse'] :: GetImagePolicyResponse -> Int

-- | Create a value of <a>GetImagePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetImagePolicyResponse'</a>,
--   <a>getImagePolicyResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:policy:GetImagePolicyResponse'</a>,
--   <a>getImagePolicyResponse_policy</a> - The image policy object.
--   
--   <a>$sel:httpStatus:GetImagePolicyResponse'</a>,
--   <a>getImagePolicyResponse_httpStatus</a> - The response's http status
--   code.
newGetImagePolicyResponse :: Int -> GetImagePolicyResponse

-- | The request ID that uniquely identifies this request.
getImagePolicyResponse_requestId :: Lens' GetImagePolicyResponse (Maybe Text)

-- | The image policy object.
getImagePolicyResponse_policy :: Lens' GetImagePolicyResponse (Maybe Text)

-- | The response's http status code.
getImagePolicyResponse_httpStatus :: Lens' GetImagePolicyResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicy
instance GHC.Show.Show Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicy
instance GHC.Read.Read Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicy
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicy
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicyResponse
instance GHC.Show.Show Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicyResponse
instance GHC.Read.Read Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicyResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicy
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.GetImagePolicy.GetImagePolicy


-- | Gets an image pipeline.
module Amazonka.ImageBuilder.GetImagePipeline

-- | <i>See:</i> <a>newGetImagePipeline</a> smart constructor.
data GetImagePipeline
GetImagePipeline' :: Text -> GetImagePipeline

-- | The Amazon Resource Name (ARN) of the image pipeline that you want to
--   retrieve.
[$sel:imagePipelineArn:GetImagePipeline'] :: GetImagePipeline -> Text

-- | Create a value of <a>GetImagePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePipelineArn:GetImagePipeline'</a>,
--   <a>getImagePipeline_imagePipelineArn</a> - The Amazon Resource Name
--   (ARN) of the image pipeline that you want to retrieve.
newGetImagePipeline :: Text -> GetImagePipeline

-- | The Amazon Resource Name (ARN) of the image pipeline that you want to
--   retrieve.
getImagePipeline_imagePipelineArn :: Lens' GetImagePipeline Text

-- | <i>See:</i> <a>newGetImagePipelineResponse</a> smart constructor.
data GetImagePipelineResponse
GetImagePipelineResponse' :: Maybe Text -> Maybe ImagePipeline -> Int -> GetImagePipelineResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:GetImagePipelineResponse'] :: GetImagePipelineResponse -> Maybe Text

-- | The image pipeline object.
[$sel:imagePipeline:GetImagePipelineResponse'] :: GetImagePipelineResponse -> Maybe ImagePipeline

-- | The response's http status code.
[$sel:httpStatus:GetImagePipelineResponse'] :: GetImagePipelineResponse -> Int

-- | Create a value of <a>GetImagePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetImagePipelineResponse'</a>,
--   <a>getImagePipelineResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:imagePipeline:GetImagePipelineResponse'</a>,
--   <a>getImagePipelineResponse_imagePipeline</a> - The image pipeline
--   object.
--   
--   <a>$sel:httpStatus:GetImagePipelineResponse'</a>,
--   <a>getImagePipelineResponse_httpStatus</a> - The response's http
--   status code.
newGetImagePipelineResponse :: Int -> GetImagePipelineResponse

-- | The request ID that uniquely identifies this request.
getImagePipelineResponse_requestId :: Lens' GetImagePipelineResponse (Maybe Text)

-- | The image pipeline object.
getImagePipelineResponse_imagePipeline :: Lens' GetImagePipelineResponse (Maybe ImagePipeline)

-- | The response's http status code.
getImagePipelineResponse_httpStatus :: Lens' GetImagePipelineResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetImagePipeline.GetImagePipeline
instance GHC.Show.Show Amazonka.ImageBuilder.GetImagePipeline.GetImagePipeline
instance GHC.Read.Read Amazonka.ImageBuilder.GetImagePipeline.GetImagePipeline
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetImagePipeline.GetImagePipeline
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetImagePipeline.GetImagePipelineResponse
instance GHC.Show.Show Amazonka.ImageBuilder.GetImagePipeline.GetImagePipelineResponse
instance GHC.Read.Read Amazonka.ImageBuilder.GetImagePipeline.GetImagePipelineResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetImagePipeline.GetImagePipelineResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.GetImagePipeline.GetImagePipeline
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetImagePipeline.GetImagePipelineResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.GetImagePipeline.GetImagePipeline
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetImagePipeline.GetImagePipeline
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.GetImagePipeline.GetImagePipeline
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.GetImagePipeline.GetImagePipeline
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.GetImagePipeline.GetImagePipeline


-- | Gets an image.
module Amazonka.ImageBuilder.GetImage

-- | <i>See:</i> <a>newGetImage</a> smart constructor.
data GetImage
GetImage' :: Text -> GetImage

-- | The Amazon Resource Name (ARN) of the image that you want to retrieve.
[$sel:imageBuildVersionArn:GetImage'] :: GetImage -> Text

-- | Create a value of <a>GetImage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuildVersionArn:GetImage'</a>,
--   <a>getImage_imageBuildVersionArn</a> - The Amazon Resource Name (ARN)
--   of the image that you want to retrieve.
newGetImage :: Text -> GetImage

-- | The Amazon Resource Name (ARN) of the image that you want to retrieve.
getImage_imageBuildVersionArn :: Lens' GetImage Text

-- | <i>See:</i> <a>newGetImageResponse</a> smart constructor.
data GetImageResponse
GetImageResponse' :: Maybe Text -> Maybe Image -> Int -> GetImageResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:GetImageResponse'] :: GetImageResponse -> Maybe Text

-- | The image object.
[$sel:image:GetImageResponse'] :: GetImageResponse -> Maybe Image

-- | The response's http status code.
[$sel:httpStatus:GetImageResponse'] :: GetImageResponse -> Int

-- | Create a value of <a>GetImageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetImageResponse'</a>,
--   <a>getImageResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:image:GetImageResponse'</a>, <a>getImageResponse_image</a> -
--   The image object.
--   
--   <a>$sel:httpStatus:GetImageResponse'</a>,
--   <a>getImageResponse_httpStatus</a> - The response's http status code.
newGetImageResponse :: Int -> GetImageResponse

-- | The request ID that uniquely identifies this request.
getImageResponse_requestId :: Lens' GetImageResponse (Maybe Text)

-- | The image object.
getImageResponse_image :: Lens' GetImageResponse (Maybe Image)

-- | The response's http status code.
getImageResponse_httpStatus :: Lens' GetImageResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetImage.GetImage
instance GHC.Show.Show Amazonka.ImageBuilder.GetImage.GetImage
instance GHC.Read.Read Amazonka.ImageBuilder.GetImage.GetImage
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetImage.GetImage
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetImage.GetImageResponse
instance GHC.Show.Show Amazonka.ImageBuilder.GetImage.GetImageResponse
instance GHC.Read.Read Amazonka.ImageBuilder.GetImage.GetImageResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetImage.GetImageResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.GetImage.GetImage
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetImage.GetImageResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.GetImage.GetImage
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetImage.GetImage
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.GetImage.GetImage
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.GetImage.GetImage
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.GetImage.GetImage


-- | Gets a distribution configuration.
module Amazonka.ImageBuilder.GetDistributionConfiguration

-- | <i>See:</i> <a>newGetDistributionConfiguration</a> smart constructor.
data GetDistributionConfiguration
GetDistributionConfiguration' :: Text -> GetDistributionConfiguration

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   you want to retrieve.
[$sel:distributionConfigurationArn:GetDistributionConfiguration'] :: GetDistributionConfiguration -> Text

-- | Create a value of <a>GetDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:distributionConfigurationArn:GetDistributionConfiguration'</a>,
--   <a>getDistributionConfiguration_distributionConfigurationArn</a> - The
--   Amazon Resource Name (ARN) of the distribution configuration that you
--   want to retrieve.
newGetDistributionConfiguration :: Text -> GetDistributionConfiguration

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   you want to retrieve.
getDistributionConfiguration_distributionConfigurationArn :: Lens' GetDistributionConfiguration Text

-- | <i>See:</i> <a>newGetDistributionConfigurationResponse</a> smart
--   constructor.
data GetDistributionConfigurationResponse
GetDistributionConfigurationResponse' :: Maybe Text -> Maybe DistributionConfiguration -> Int -> GetDistributionConfigurationResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:GetDistributionConfigurationResponse'] :: GetDistributionConfigurationResponse -> Maybe Text

-- | The distribution configuration object.
[$sel:distributionConfiguration:GetDistributionConfigurationResponse'] :: GetDistributionConfigurationResponse -> Maybe DistributionConfiguration

-- | The response's http status code.
[$sel:httpStatus:GetDistributionConfigurationResponse'] :: GetDistributionConfigurationResponse -> Int

-- | Create a value of <a>GetDistributionConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetDistributionConfigurationResponse'</a>,
--   <a>getDistributionConfigurationResponse_requestId</a> - The request ID
--   that uniquely identifies this request.
--   
--   
--   <a>$sel:distributionConfiguration:GetDistributionConfigurationResponse'</a>,
--   <a>getDistributionConfigurationResponse_distributionConfiguration</a>
--   - The distribution configuration object.
--   
--   <a>$sel:httpStatus:GetDistributionConfigurationResponse'</a>,
--   <a>getDistributionConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newGetDistributionConfigurationResponse :: Int -> GetDistributionConfigurationResponse

-- | The request ID that uniquely identifies this request.
getDistributionConfigurationResponse_requestId :: Lens' GetDistributionConfigurationResponse (Maybe Text)

-- | The distribution configuration object.
getDistributionConfigurationResponse_distributionConfiguration :: Lens' GetDistributionConfigurationResponse (Maybe DistributionConfiguration)

-- | The response's http status code.
getDistributionConfigurationResponse_httpStatus :: Lens' GetDistributionConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfiguration
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfigurationResponse
instance GHC.Show.Show Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfigurationResponse
instance GHC.Read.Read Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfigurationResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.GetDistributionConfiguration.GetDistributionConfiguration


-- | Retrieves the policy for a container recipe.
module Amazonka.ImageBuilder.GetContainerRecipePolicy

-- | <i>See:</i> <a>newGetContainerRecipePolicy</a> smart constructor.
data GetContainerRecipePolicy
GetContainerRecipePolicy' :: Text -> GetContainerRecipePolicy

-- | The Amazon Resource Name (ARN) of the container recipe for the policy
--   being requested.
[$sel:containerRecipeArn:GetContainerRecipePolicy'] :: GetContainerRecipePolicy -> Text

-- | Create a value of <a>GetContainerRecipePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerRecipeArn:GetContainerRecipePolicy'</a>,
--   <a>getContainerRecipePolicy_containerRecipeArn</a> - The Amazon
--   Resource Name (ARN) of the container recipe for the policy being
--   requested.
newGetContainerRecipePolicy :: Text -> GetContainerRecipePolicy

-- | The Amazon Resource Name (ARN) of the container recipe for the policy
--   being requested.
getContainerRecipePolicy_containerRecipeArn :: Lens' GetContainerRecipePolicy Text

-- | <i>See:</i> <a>newGetContainerRecipePolicyResponse</a> smart
--   constructor.
data GetContainerRecipePolicyResponse
GetContainerRecipePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetContainerRecipePolicyResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:GetContainerRecipePolicyResponse'] :: GetContainerRecipePolicyResponse -> Maybe Text

-- | The container recipe policy object that is returned.
[$sel:policy:GetContainerRecipePolicyResponse'] :: GetContainerRecipePolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetContainerRecipePolicyResponse'] :: GetContainerRecipePolicyResponse -> Int

-- | Create a value of <a>GetContainerRecipePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetContainerRecipePolicyResponse'</a>,
--   <a>getContainerRecipePolicyResponse_requestId</a> - The request ID
--   that uniquely identifies this request.
--   
--   <a>$sel:policy:GetContainerRecipePolicyResponse'</a>,
--   <a>getContainerRecipePolicyResponse_policy</a> - The container recipe
--   policy object that is returned.
--   
--   <a>$sel:httpStatus:GetContainerRecipePolicyResponse'</a>,
--   <a>getContainerRecipePolicyResponse_httpStatus</a> - The response's
--   http status code.
newGetContainerRecipePolicyResponse :: Int -> GetContainerRecipePolicyResponse

-- | The request ID that uniquely identifies this request.
getContainerRecipePolicyResponse_requestId :: Lens' GetContainerRecipePolicyResponse (Maybe Text)

-- | The container recipe policy object that is returned.
getContainerRecipePolicyResponse_policy :: Lens' GetContainerRecipePolicyResponse (Maybe Text)

-- | The response's http status code.
getContainerRecipePolicyResponse_httpStatus :: Lens' GetContainerRecipePolicyResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicy
instance GHC.Show.Show Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicy
instance GHC.Read.Read Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicy
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicy
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicyResponse
instance GHC.Show.Show Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicyResponse
instance GHC.Read.Read Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicyResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicy
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicy
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.GetContainerRecipePolicy.GetContainerRecipePolicy


-- | Retrieves a container recipe.
module Amazonka.ImageBuilder.GetContainerRecipe

-- | <i>See:</i> <a>newGetContainerRecipe</a> smart constructor.
data GetContainerRecipe
GetContainerRecipe' :: Text -> GetContainerRecipe

-- | The Amazon Resource Name (ARN) of the container recipe to retrieve.
[$sel:containerRecipeArn:GetContainerRecipe'] :: GetContainerRecipe -> Text

-- | Create a value of <a>GetContainerRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerRecipeArn:GetContainerRecipe'</a>,
--   <a>getContainerRecipe_containerRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the container recipe to retrieve.
newGetContainerRecipe :: Text -> GetContainerRecipe

-- | The Amazon Resource Name (ARN) of the container recipe to retrieve.
getContainerRecipe_containerRecipeArn :: Lens' GetContainerRecipe Text

-- | <i>See:</i> <a>newGetContainerRecipeResponse</a> smart constructor.
data GetContainerRecipeResponse
GetContainerRecipeResponse' :: Maybe Text -> Maybe ContainerRecipe -> Int -> GetContainerRecipeResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:GetContainerRecipeResponse'] :: GetContainerRecipeResponse -> Maybe Text

-- | The container recipe object that is returned.
[$sel:containerRecipe:GetContainerRecipeResponse'] :: GetContainerRecipeResponse -> Maybe ContainerRecipe

-- | The response's http status code.
[$sel:httpStatus:GetContainerRecipeResponse'] :: GetContainerRecipeResponse -> Int

-- | Create a value of <a>GetContainerRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetContainerRecipeResponse'</a>,
--   <a>getContainerRecipeResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:containerRecipe:GetContainerRecipeResponse'</a>,
--   <a>getContainerRecipeResponse_containerRecipe</a> - The container
--   recipe object that is returned.
--   
--   <a>$sel:httpStatus:GetContainerRecipeResponse'</a>,
--   <a>getContainerRecipeResponse_httpStatus</a> - The response's http
--   status code.
newGetContainerRecipeResponse :: Int -> GetContainerRecipeResponse

-- | The request ID that uniquely identifies this request.
getContainerRecipeResponse_requestId :: Lens' GetContainerRecipeResponse (Maybe Text)

-- | The container recipe object that is returned.
getContainerRecipeResponse_containerRecipe :: Lens' GetContainerRecipeResponse (Maybe ContainerRecipe)

-- | The response's http status code.
getContainerRecipeResponse_httpStatus :: Lens' GetContainerRecipeResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipe
instance GHC.Show.Show Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipe
instance GHC.Read.Read Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipe
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipe
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipeResponse
instance GHC.Show.Show Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipeResponse
instance GHC.Read.Read Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipeResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipeResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipeResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipe
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipe
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipe
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.GetContainerRecipe.GetContainerRecipe


-- | Gets a component policy.
module Amazonka.ImageBuilder.GetComponentPolicy

-- | <i>See:</i> <a>newGetComponentPolicy</a> smart constructor.
data GetComponentPolicy
GetComponentPolicy' :: Text -> GetComponentPolicy

-- | The Amazon Resource Name (ARN) of the component whose policy you want
--   to retrieve.
[$sel:componentArn:GetComponentPolicy'] :: GetComponentPolicy -> Text

-- | Create a value of <a>GetComponentPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:componentArn:GetComponentPolicy'</a>,
--   <a>getComponentPolicy_componentArn</a> - The Amazon Resource Name
--   (ARN) of the component whose policy you want to retrieve.
newGetComponentPolicy :: Text -> GetComponentPolicy

-- | The Amazon Resource Name (ARN) of the component whose policy you want
--   to retrieve.
getComponentPolicy_componentArn :: Lens' GetComponentPolicy Text

-- | <i>See:</i> <a>newGetComponentPolicyResponse</a> smart constructor.
data GetComponentPolicyResponse
GetComponentPolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetComponentPolicyResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:GetComponentPolicyResponse'] :: GetComponentPolicyResponse -> Maybe Text

-- | The component policy.
[$sel:policy:GetComponentPolicyResponse'] :: GetComponentPolicyResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetComponentPolicyResponse'] :: GetComponentPolicyResponse -> Int

-- | Create a value of <a>GetComponentPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetComponentPolicyResponse'</a>,
--   <a>getComponentPolicyResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:policy:GetComponentPolicyResponse'</a>,
--   <a>getComponentPolicyResponse_policy</a> - The component policy.
--   
--   <a>$sel:httpStatus:GetComponentPolicyResponse'</a>,
--   <a>getComponentPolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetComponentPolicyResponse :: Int -> GetComponentPolicyResponse

-- | The request ID that uniquely identifies this request.
getComponentPolicyResponse_requestId :: Lens' GetComponentPolicyResponse (Maybe Text)

-- | The component policy.
getComponentPolicyResponse_policy :: Lens' GetComponentPolicyResponse (Maybe Text)

-- | The response's http status code.
getComponentPolicyResponse_httpStatus :: Lens' GetComponentPolicyResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicy
instance GHC.Show.Show Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicy
instance GHC.Read.Read Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicy
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicy
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicyResponse
instance GHC.Show.Show Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicyResponse
instance GHC.Read.Read Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicyResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicyResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicyResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicy
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicy
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicy
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicy
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.GetComponentPolicy.GetComponentPolicy


-- | Gets a component object.
module Amazonka.ImageBuilder.GetComponent

-- | <i>See:</i> <a>newGetComponent</a> smart constructor.
data GetComponent
GetComponent' :: Text -> GetComponent

-- | The Amazon Resource Name (ARN) of the component that you want to
--   retrieve. Regex requires "/\d+$" suffix.
[$sel:componentBuildVersionArn:GetComponent'] :: GetComponent -> Text

-- | Create a value of <a>GetComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:componentBuildVersionArn:GetComponent'</a>,
--   <a>getComponent_componentBuildVersionArn</a> - The Amazon Resource
--   Name (ARN) of the component that you want to retrieve. Regex requires
--   "/\d+$" suffix.
newGetComponent :: Text -> GetComponent

-- | The Amazon Resource Name (ARN) of the component that you want to
--   retrieve. Regex requires "/\d+$" suffix.
getComponent_componentBuildVersionArn :: Lens' GetComponent Text

-- | <i>See:</i> <a>newGetComponentResponse</a> smart constructor.
data GetComponentResponse
GetComponentResponse' :: Maybe Text -> Maybe Component -> Int -> GetComponentResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:GetComponentResponse'] :: GetComponentResponse -> Maybe Text

-- | The component object associated with the specified ARN.
[$sel:component:GetComponentResponse'] :: GetComponentResponse -> Maybe Component

-- | The response's http status code.
[$sel:httpStatus:GetComponentResponse'] :: GetComponentResponse -> Int

-- | Create a value of <a>GetComponentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetComponentResponse'</a>,
--   <a>getComponentResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:component:GetComponentResponse'</a>,
--   <a>getComponentResponse_component</a> - The component object
--   associated with the specified ARN.
--   
--   <a>$sel:httpStatus:GetComponentResponse'</a>,
--   <a>getComponentResponse_httpStatus</a> - The response's http status
--   code.
newGetComponentResponse :: Int -> GetComponentResponse

-- | The request ID that uniquely identifies this request.
getComponentResponse_requestId :: Lens' GetComponentResponse (Maybe Text)

-- | The component object associated with the specified ARN.
getComponentResponse_component :: Lens' GetComponentResponse (Maybe Component)

-- | The response's http status code.
getComponentResponse_httpStatus :: Lens' GetComponentResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetComponent.GetComponent
instance GHC.Show.Show Amazonka.ImageBuilder.GetComponent.GetComponent
instance GHC.Read.Read Amazonka.ImageBuilder.GetComponent.GetComponent
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetComponent.GetComponent
instance GHC.Generics.Generic Amazonka.ImageBuilder.GetComponent.GetComponentResponse
instance GHC.Show.Show Amazonka.ImageBuilder.GetComponent.GetComponentResponse
instance GHC.Read.Read Amazonka.ImageBuilder.GetComponent.GetComponentResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.GetComponent.GetComponentResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.GetComponent.GetComponent
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetComponent.GetComponentResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.GetComponent.GetComponent
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.GetComponent.GetComponent
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.GetComponent.GetComponent
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.GetComponent.GetComponent
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.GetComponent.GetComponent


-- | Deletes an infrastructure configuration.
module Amazonka.ImageBuilder.DeleteInfrastructureConfiguration

-- | <i>See:</i> <a>newDeleteInfrastructureConfiguration</a> smart
--   constructor.
data DeleteInfrastructureConfiguration
DeleteInfrastructureConfiguration' :: Text -> DeleteInfrastructureConfiguration

-- | The Amazon Resource Name (ARN) of the infrastructure configuration to
--   delete.
[$sel:infrastructureConfigurationArn:DeleteInfrastructureConfiguration'] :: DeleteInfrastructureConfiguration -> Text

-- | Create a value of <a>DeleteInfrastructureConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:infrastructureConfigurationArn:DeleteInfrastructureConfiguration'</a>,
--   <a>deleteInfrastructureConfiguration_infrastructureConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the infrastructure configuration
--   to delete.
newDeleteInfrastructureConfiguration :: Text -> DeleteInfrastructureConfiguration

-- | The Amazon Resource Name (ARN) of the infrastructure configuration to
--   delete.
deleteInfrastructureConfiguration_infrastructureConfigurationArn :: Lens' DeleteInfrastructureConfiguration Text

-- | <i>See:</i> <a>newDeleteInfrastructureConfigurationResponse</a> smart
--   constructor.
data DeleteInfrastructureConfigurationResponse
DeleteInfrastructureConfigurationResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteInfrastructureConfigurationResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:DeleteInfrastructureConfigurationResponse'] :: DeleteInfrastructureConfigurationResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was deleted.
[$sel:infrastructureConfigurationArn:DeleteInfrastructureConfigurationResponse'] :: DeleteInfrastructureConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteInfrastructureConfigurationResponse'] :: DeleteInfrastructureConfigurationResponse -> Int

-- | Create a value of <a>DeleteInfrastructureConfigurationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteInfrastructureConfigurationResponse'</a>,
--   <a>deleteInfrastructureConfigurationResponse_requestId</a> - The
--   request ID that uniquely identifies this request.
--   
--   
--   <a>$sel:infrastructureConfigurationArn:DeleteInfrastructureConfiguration'</a>,
--   <a>deleteInfrastructureConfigurationResponse_infrastructureConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was deleted.
--   
--   <a>$sel:httpStatus:DeleteInfrastructureConfigurationResponse'</a>,
--   <a>deleteInfrastructureConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteInfrastructureConfigurationResponse :: Int -> DeleteInfrastructureConfigurationResponse

-- | The request ID that uniquely identifies this request.
deleteInfrastructureConfigurationResponse_requestId :: Lens' DeleteInfrastructureConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was deleted.
deleteInfrastructureConfigurationResponse_infrastructureConfigurationArn :: Lens' DeleteInfrastructureConfigurationResponse (Maybe Text)

-- | The response's http status code.
deleteInfrastructureConfigurationResponse_httpStatus :: Lens' DeleteInfrastructureConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfiguration
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfigurationResponse
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfigurationResponse
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfigurationResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.DeleteInfrastructureConfiguration.DeleteInfrastructureConfiguration


-- | Deletes an image recipe.
module Amazonka.ImageBuilder.DeleteImageRecipe

-- | <i>See:</i> <a>newDeleteImageRecipe</a> smart constructor.
data DeleteImageRecipe
DeleteImageRecipe' :: Text -> DeleteImageRecipe

-- | The Amazon Resource Name (ARN) of the image recipe to delete.
[$sel:imageRecipeArn:DeleteImageRecipe'] :: DeleteImageRecipe -> Text

-- | Create a value of <a>DeleteImageRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRecipeArn:DeleteImageRecipe'</a>,
--   <a>deleteImageRecipe_imageRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the image recipe to delete.
newDeleteImageRecipe :: Text -> DeleteImageRecipe

-- | The Amazon Resource Name (ARN) of the image recipe to delete.
deleteImageRecipe_imageRecipeArn :: Lens' DeleteImageRecipe Text

-- | <i>See:</i> <a>newDeleteImageRecipeResponse</a> smart constructor.
data DeleteImageRecipeResponse
DeleteImageRecipeResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteImageRecipeResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:DeleteImageRecipeResponse'] :: DeleteImageRecipeResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image recipe that was deleted.
[$sel:imageRecipeArn:DeleteImageRecipeResponse'] :: DeleteImageRecipeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteImageRecipeResponse'] :: DeleteImageRecipeResponse -> Int

-- | Create a value of <a>DeleteImageRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteImageRecipeResponse'</a>,
--   <a>deleteImageRecipeResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:imageRecipeArn:DeleteImageRecipe'</a>,
--   <a>deleteImageRecipeResponse_imageRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the image recipe that was deleted.
--   
--   <a>$sel:httpStatus:DeleteImageRecipeResponse'</a>,
--   <a>deleteImageRecipeResponse_httpStatus</a> - The response's http
--   status code.
newDeleteImageRecipeResponse :: Int -> DeleteImageRecipeResponse

-- | The request ID that uniquely identifies this request.
deleteImageRecipeResponse_requestId :: Lens' DeleteImageRecipeResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that was deleted.
deleteImageRecipeResponse_imageRecipeArn :: Lens' DeleteImageRecipeResponse (Maybe Text)

-- | The response's http status code.
deleteImageRecipeResponse_httpStatus :: Lens' DeleteImageRecipeResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipe
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipe
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipe
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipe
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipeResponse
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipeResponse
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipeResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipeResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipeResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipe
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipe
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipe
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.DeleteImageRecipe.DeleteImageRecipe


-- | Deletes an image pipeline.
module Amazonka.ImageBuilder.DeleteImagePipeline

-- | <i>See:</i> <a>newDeleteImagePipeline</a> smart constructor.
data DeleteImagePipeline
DeleteImagePipeline' :: Text -> DeleteImagePipeline

-- | The Amazon Resource Name (ARN) of the image pipeline to delete.
[$sel:imagePipelineArn:DeleteImagePipeline'] :: DeleteImagePipeline -> Text

-- | Create a value of <a>DeleteImagePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePipelineArn:DeleteImagePipeline'</a>,
--   <a>deleteImagePipeline_imagePipelineArn</a> - The Amazon Resource Name
--   (ARN) of the image pipeline to delete.
newDeleteImagePipeline :: Text -> DeleteImagePipeline

-- | The Amazon Resource Name (ARN) of the image pipeline to delete.
deleteImagePipeline_imagePipelineArn :: Lens' DeleteImagePipeline Text

-- | <i>See:</i> <a>newDeleteImagePipelineResponse</a> smart constructor.
data DeleteImagePipelineResponse
DeleteImagePipelineResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteImagePipelineResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:DeleteImagePipelineResponse'] :: DeleteImagePipelineResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image pipeline that was deleted.
[$sel:imagePipelineArn:DeleteImagePipelineResponse'] :: DeleteImagePipelineResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteImagePipelineResponse'] :: DeleteImagePipelineResponse -> Int

-- | Create a value of <a>DeleteImagePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteImagePipelineResponse'</a>,
--   <a>deleteImagePipelineResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:imagePipelineArn:DeleteImagePipeline'</a>,
--   <a>deleteImagePipelineResponse_imagePipelineArn</a> - The Amazon
--   Resource Name (ARN) of the image pipeline that was deleted.
--   
--   <a>$sel:httpStatus:DeleteImagePipelineResponse'</a>,
--   <a>deleteImagePipelineResponse_httpStatus</a> - The response's http
--   status code.
newDeleteImagePipelineResponse :: Int -> DeleteImagePipelineResponse

-- | The request ID that uniquely identifies this request.
deleteImagePipelineResponse_requestId :: Lens' DeleteImagePipelineResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image pipeline that was deleted.
deleteImagePipelineResponse_imagePipelineArn :: Lens' DeleteImagePipelineResponse (Maybe Text)

-- | The response's http status code.
deleteImagePipelineResponse_httpStatus :: Lens' DeleteImagePipelineResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipeline
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipeline
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipeline
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipeline
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipelineResponse
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipelineResponse
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipelineResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipelineResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipeline
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipelineResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipeline
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipeline
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipeline
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipeline
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.DeleteImagePipeline.DeleteImagePipeline


-- | Deletes an Image Builder image resource. This does not delete any EC2
--   AMIs or ECR container images that are created during the image build
--   process. You must clean those up separately, using the appropriate
--   Amazon EC2 or Amazon ECR console actions, or API or CLI commands.
--   
--   <ul>
--   <li>To deregister an EC2 Linux AMI, see <a>Deregister your Linux
--   AMI</a> in the /<i>Amazon EC2 User Guide</i>/ .</li>
--   <li>To deregister an EC2 Windows AMI, see <a>Deregister your Windows
--   AMI</a> in the /<i>Amazon EC2 Windows Guide</i>/ .</li>
--   <li>To delete a container image from Amazon ECR, see <a>Deleting an
--   image</a> in the <i>Amazon ECR User Guide</i>.</li>
--   </ul>
module Amazonka.ImageBuilder.DeleteImage

-- | <i>See:</i> <a>newDeleteImage</a> smart constructor.
data DeleteImage
DeleteImage' :: Text -> DeleteImage

-- | The Amazon Resource Name (ARN) of the Image Builder image resource to
--   delete.
[$sel:imageBuildVersionArn:DeleteImage'] :: DeleteImage -> Text

-- | Create a value of <a>DeleteImage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuildVersionArn:DeleteImage'</a>,
--   <a>deleteImage_imageBuildVersionArn</a> - The Amazon Resource Name
--   (ARN) of the Image Builder image resource to delete.
newDeleteImage :: Text -> DeleteImage

-- | The Amazon Resource Name (ARN) of the Image Builder image resource to
--   delete.
deleteImage_imageBuildVersionArn :: Lens' DeleteImage Text

-- | <i>See:</i> <a>newDeleteImageResponse</a> smart constructor.
data DeleteImageResponse
DeleteImageResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteImageResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:DeleteImageResponse'] :: DeleteImageResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the Image Builder image resource
--   that was deleted.
[$sel:imageBuildVersionArn:DeleteImageResponse'] :: DeleteImageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteImageResponse'] :: DeleteImageResponse -> Int

-- | Create a value of <a>DeleteImageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteImageResponse'</a>,
--   <a>deleteImageResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:imageBuildVersionArn:DeleteImage'</a>,
--   <a>deleteImageResponse_imageBuildVersionArn</a> - The Amazon Resource
--   Name (ARN) of the Image Builder image resource that was deleted.
--   
--   <a>$sel:httpStatus:DeleteImageResponse'</a>,
--   <a>deleteImageResponse_httpStatus</a> - The response's http status
--   code.
newDeleteImageResponse :: Int -> DeleteImageResponse

-- | The request ID that uniquely identifies this request.
deleteImageResponse_requestId :: Lens' DeleteImageResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Image Builder image resource
--   that was deleted.
deleteImageResponse_imageBuildVersionArn :: Lens' DeleteImageResponse (Maybe Text)

-- | The response's http status code.
deleteImageResponse_httpStatus :: Lens' DeleteImageResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteImage.DeleteImage
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteImage.DeleteImage
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteImage.DeleteImage
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteImage.DeleteImage
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteImage.DeleteImageResponse
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteImage.DeleteImageResponse
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteImage.DeleteImageResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteImage.DeleteImageResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.DeleteImage.DeleteImage
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteImage.DeleteImageResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.DeleteImage.DeleteImage
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteImage.DeleteImage
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.DeleteImage.DeleteImage
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.DeleteImage.DeleteImage
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.DeleteImage.DeleteImage


-- | Deletes a distribution configuration.
module Amazonka.ImageBuilder.DeleteDistributionConfiguration

-- | <i>See:</i> <a>newDeleteDistributionConfiguration</a> smart
--   constructor.
data DeleteDistributionConfiguration
DeleteDistributionConfiguration' :: Text -> DeleteDistributionConfiguration

-- | The Amazon Resource Name (ARN) of the distribution configuration to
--   delete.
[$sel:distributionConfigurationArn:DeleteDistributionConfiguration'] :: DeleteDistributionConfiguration -> Text

-- | Create a value of <a>DeleteDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:distributionConfigurationArn:DeleteDistributionConfiguration'</a>,
--   <a>deleteDistributionConfiguration_distributionConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of the distribution configuration to
--   delete.
newDeleteDistributionConfiguration :: Text -> DeleteDistributionConfiguration

-- | The Amazon Resource Name (ARN) of the distribution configuration to
--   delete.
deleteDistributionConfiguration_distributionConfigurationArn :: Lens' DeleteDistributionConfiguration Text

-- | <i>See:</i> <a>newDeleteDistributionConfigurationResponse</a> smart
--   constructor.
data DeleteDistributionConfigurationResponse
DeleteDistributionConfigurationResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteDistributionConfigurationResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:DeleteDistributionConfigurationResponse'] :: DeleteDistributionConfigurationResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   was deleted.
[$sel:distributionConfigurationArn:DeleteDistributionConfigurationResponse'] :: DeleteDistributionConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteDistributionConfigurationResponse'] :: DeleteDistributionConfigurationResponse -> Int

-- | Create a value of <a>DeleteDistributionConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteDistributionConfigurationResponse'</a>,
--   <a>deleteDistributionConfigurationResponse_requestId</a> - The request
--   ID that uniquely identifies this request.
--   
--   
--   <a>$sel:distributionConfigurationArn:DeleteDistributionConfiguration'</a>,
--   <a>deleteDistributionConfigurationResponse_distributionConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the distribution configuration
--   that was deleted.
--   
--   <a>$sel:httpStatus:DeleteDistributionConfigurationResponse'</a>,
--   <a>deleteDistributionConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteDistributionConfigurationResponse :: Int -> DeleteDistributionConfigurationResponse

-- | The request ID that uniquely identifies this request.
deleteDistributionConfigurationResponse_requestId :: Lens' DeleteDistributionConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   was deleted.
deleteDistributionConfigurationResponse_distributionConfigurationArn :: Lens' DeleteDistributionConfigurationResponse (Maybe Text)

-- | The response's http status code.
deleteDistributionConfigurationResponse_httpStatus :: Lens' DeleteDistributionConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfiguration
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfigurationResponse
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfigurationResponse
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfigurationResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.DeleteDistributionConfiguration.DeleteDistributionConfiguration


-- | Deletes a container recipe.
module Amazonka.ImageBuilder.DeleteContainerRecipe

-- | <i>See:</i> <a>newDeleteContainerRecipe</a> smart constructor.
data DeleteContainerRecipe
DeleteContainerRecipe' :: Text -> DeleteContainerRecipe

-- | The Amazon Resource Name (ARN) of the container recipe to delete.
[$sel:containerRecipeArn:DeleteContainerRecipe'] :: DeleteContainerRecipe -> Text

-- | Create a value of <a>DeleteContainerRecipe</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerRecipeArn:DeleteContainerRecipe'</a>,
--   <a>deleteContainerRecipe_containerRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the container recipe to delete.
newDeleteContainerRecipe :: Text -> DeleteContainerRecipe

-- | The Amazon Resource Name (ARN) of the container recipe to delete.
deleteContainerRecipe_containerRecipeArn :: Lens' DeleteContainerRecipe Text

-- | <i>See:</i> <a>newDeleteContainerRecipeResponse</a> smart constructor.
data DeleteContainerRecipeResponse
DeleteContainerRecipeResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteContainerRecipeResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:DeleteContainerRecipeResponse'] :: DeleteContainerRecipeResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the container recipe that was
--   deleted.
[$sel:containerRecipeArn:DeleteContainerRecipeResponse'] :: DeleteContainerRecipeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteContainerRecipeResponse'] :: DeleteContainerRecipeResponse -> Int

-- | Create a value of <a>DeleteContainerRecipeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteContainerRecipeResponse'</a>,
--   <a>deleteContainerRecipeResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:containerRecipeArn:DeleteContainerRecipe'</a>,
--   <a>deleteContainerRecipeResponse_containerRecipeArn</a> - The Amazon
--   Resource Name (ARN) of the container recipe that was deleted.
--   
--   <a>$sel:httpStatus:DeleteContainerRecipeResponse'</a>,
--   <a>deleteContainerRecipeResponse_httpStatus</a> - The response's http
--   status code.
newDeleteContainerRecipeResponse :: Int -> DeleteContainerRecipeResponse

-- | The request ID that uniquely identifies this request.
deleteContainerRecipeResponse_requestId :: Lens' DeleteContainerRecipeResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the container recipe that was
--   deleted.
deleteContainerRecipeResponse_containerRecipeArn :: Lens' DeleteContainerRecipeResponse (Maybe Text)

-- | The response's http status code.
deleteContainerRecipeResponse_httpStatus :: Lens' DeleteContainerRecipeResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipe
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipe
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipe
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipe
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipeResponse
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipeResponse
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipeResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipeResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipeResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipe
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipe
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipe
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.DeleteContainerRecipe.DeleteContainerRecipe


-- | Deletes a component build version.
module Amazonka.ImageBuilder.DeleteComponent

-- | <i>See:</i> <a>newDeleteComponent</a> smart constructor.
data DeleteComponent
DeleteComponent' :: Text -> DeleteComponent

-- | The Amazon Resource Name (ARN) of the component build version to
--   delete.
[$sel:componentBuildVersionArn:DeleteComponent'] :: DeleteComponent -> Text

-- | Create a value of <a>DeleteComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:componentBuildVersionArn:DeleteComponent'</a>,
--   <a>deleteComponent_componentBuildVersionArn</a> - The Amazon Resource
--   Name (ARN) of the component build version to delete.
newDeleteComponent :: Text -> DeleteComponent

-- | The Amazon Resource Name (ARN) of the component build version to
--   delete.
deleteComponent_componentBuildVersionArn :: Lens' DeleteComponent Text

-- | <i>See:</i> <a>newDeleteComponentResponse</a> smart constructor.
data DeleteComponentResponse
DeleteComponentResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteComponentResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:DeleteComponentResponse'] :: DeleteComponentResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the component build version that was
--   deleted.
[$sel:componentBuildVersionArn:DeleteComponentResponse'] :: DeleteComponentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:DeleteComponentResponse'] :: DeleteComponentResponse -> Int

-- | Create a value of <a>DeleteComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteComponentResponse'</a>,
--   <a>deleteComponentResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:componentBuildVersionArn:DeleteComponent'</a>,
--   <a>deleteComponentResponse_componentBuildVersionArn</a> - The Amazon
--   Resource Name (ARN) of the component build version that was deleted.
--   
--   <a>$sel:httpStatus:DeleteComponentResponse'</a>,
--   <a>deleteComponentResponse_httpStatus</a> - The response's http status
--   code.
newDeleteComponentResponse :: Int -> DeleteComponentResponse

-- | The request ID that uniquely identifies this request.
deleteComponentResponse_requestId :: Lens' DeleteComponentResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the component build version that was
--   deleted.
deleteComponentResponse_componentBuildVersionArn :: Lens' DeleteComponentResponse (Maybe Text)

-- | The response's http status code.
deleteComponentResponse_httpStatus :: Lens' DeleteComponentResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteComponent.DeleteComponent
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteComponent.DeleteComponent
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteComponent.DeleteComponent
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteComponent.DeleteComponent
instance GHC.Generics.Generic Amazonka.ImageBuilder.DeleteComponent.DeleteComponentResponse
instance GHC.Show.Show Amazonka.ImageBuilder.DeleteComponent.DeleteComponentResponse
instance GHC.Read.Read Amazonka.ImageBuilder.DeleteComponent.DeleteComponentResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.DeleteComponent.DeleteComponentResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.DeleteComponent.DeleteComponent
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteComponent.DeleteComponentResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.DeleteComponent.DeleteComponent
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.DeleteComponent.DeleteComponent
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.DeleteComponent.DeleteComponent
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.DeleteComponent.DeleteComponent
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.DeleteComponent.DeleteComponent


-- | Creates a new infrastructure configuration. An infrastructure
--   configuration defines the environment in which your image will be
--   built and tested.
module Amazonka.ImageBuilder.CreateInfrastructureConfiguration

-- | <i>See:</i> <a>newCreateInfrastructureConfiguration</a> smart
--   constructor.
data CreateInfrastructureConfiguration
CreateInfrastructureConfiguration' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe InstanceMetadataOptions -> Maybe Logging -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Text -> Text -> Text -> CreateInfrastructureConfiguration

-- | The security group IDs to associate with the instance used to
--   customize your Amazon EC2 AMI.
[$sel:securityGroupIds:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Maybe [Text]

-- | The SNS topic on which to send image build events.
[$sel:snsTopicArn:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Maybe Text

-- | The instance types of the infrastructure configuration. You can
--   specify one or more instance types to use for this build. The service
--   will pick one of these instance types based on availability.
[$sel:instanceTypes:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Maybe [Text]

-- | The key pair of the infrastructure configuration. You can use this to
--   log on to and debug the instance used to create your image.
[$sel:keyPair:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Maybe Text

-- | The tags attached to the resource created by Image Builder.
[$sel:resourceTags:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Maybe (HashMap Text Text)

-- | The subnet ID in which to place the instance used to customize your
--   Amazon EC2 AMI.
[$sel:subnetId:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Maybe Text

-- | The instance metadata options that you can set for the HTTP requests
--   that pipeline builds use to launch EC2 build and test instances.
[$sel:instanceMetadataOptions:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Maybe InstanceMetadataOptions

-- | The logging configuration of the infrastructure configuration.
[$sel:logging:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Maybe Logging

-- | The description of the infrastructure configuration.
[$sel:description:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Maybe Text

-- | The tags of the infrastructure configuration.
[$sel:tags:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Maybe (HashMap Text Text)

-- | The terminate instance on failure setting of the infrastructure
--   configuration. Set to false if you want Image Builder to retain the
--   instance used to configure your AMI if the build or test phase of your
--   workflow fails.
[$sel:terminateInstanceOnFailure:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Maybe Bool

-- | The name of the infrastructure configuration.
[$sel:name:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Text

-- | The instance profile to associate with the instance used to customize
--   your Amazon EC2 AMI.
[$sel:instanceProfileName:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CreateInfrastructureConfiguration'] :: CreateInfrastructureConfiguration -> Text

-- | Create a value of <a>CreateInfrastructureConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_securityGroupIds</a> - The
--   security group IDs to associate with the instance used to customize
--   your Amazon EC2 AMI.
--   
--   <a>$sel:snsTopicArn:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_snsTopicArn</a> - The SNS topic
--   on which to send image build events.
--   
--   <a>$sel:instanceTypes:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_instanceTypes</a> - The instance
--   types of the infrastructure configuration. You can specify one or more
--   instance types to use for this build. The service will pick one of
--   these instance types based on availability.
--   
--   <a>$sel:keyPair:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_keyPair</a> - The key pair of the
--   infrastructure configuration. You can use this to log on to and debug
--   the instance used to create your image.
--   
--   <a>$sel:resourceTags:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_resourceTags</a> - The tags
--   attached to the resource created by Image Builder.
--   
--   <a>$sel:subnetId:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_subnetId</a> - The subnet ID in
--   which to place the instance used to customize your Amazon EC2 AMI.
--   
--   
--   <a>$sel:instanceMetadataOptions:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_instanceMetadataOptions</a> - The
--   instance metadata options that you can set for the HTTP requests that
--   pipeline builds use to launch EC2 build and test instances.
--   
--   <a>$sel:logging:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_logging</a> - The logging
--   configuration of the infrastructure configuration.
--   
--   <a>$sel:description:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_description</a> - The description
--   of the infrastructure configuration.
--   
--   <a>$sel:tags:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_tags</a> - The tags of the
--   infrastructure configuration.
--   
--   
--   <a>$sel:terminateInstanceOnFailure:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_terminateInstanceOnFailure</a> -
--   The terminate instance on failure setting of the infrastructure
--   configuration. Set to false if you want Image Builder to retain the
--   instance used to configure your AMI if the build or test phase of your
--   workflow fails.
--   
--   <a>$sel:name:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_name</a> - The name of the
--   infrastructure configuration.
--   
--   <a>$sel:instanceProfileName:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_instanceProfileName</a> - The
--   instance profile to associate with the instance used to customize your
--   Amazon EC2 AMI.
--   
--   <a>$sel:clientToken:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_clientToken</a> - The idempotency
--   token used to make this request idempotent.
newCreateInfrastructureConfiguration :: Text -> Text -> Text -> CreateInfrastructureConfiguration

-- | The security group IDs to associate with the instance used to
--   customize your Amazon EC2 AMI.
createInfrastructureConfiguration_securityGroupIds :: Lens' CreateInfrastructureConfiguration (Maybe [Text])

-- | The SNS topic on which to send image build events.
createInfrastructureConfiguration_snsTopicArn :: Lens' CreateInfrastructureConfiguration (Maybe Text)

-- | The instance types of the infrastructure configuration. You can
--   specify one or more instance types to use for this build. The service
--   will pick one of these instance types based on availability.
createInfrastructureConfiguration_instanceTypes :: Lens' CreateInfrastructureConfiguration (Maybe [Text])

-- | The key pair of the infrastructure configuration. You can use this to
--   log on to and debug the instance used to create your image.
createInfrastructureConfiguration_keyPair :: Lens' CreateInfrastructureConfiguration (Maybe Text)

-- | The tags attached to the resource created by Image Builder.
createInfrastructureConfiguration_resourceTags :: Lens' CreateInfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The subnet ID in which to place the instance used to customize your
--   Amazon EC2 AMI.
createInfrastructureConfiguration_subnetId :: Lens' CreateInfrastructureConfiguration (Maybe Text)

-- | The instance metadata options that you can set for the HTTP requests
--   that pipeline builds use to launch EC2 build and test instances.
createInfrastructureConfiguration_instanceMetadataOptions :: Lens' CreateInfrastructureConfiguration (Maybe InstanceMetadataOptions)

-- | The logging configuration of the infrastructure configuration.
createInfrastructureConfiguration_logging :: Lens' CreateInfrastructureConfiguration (Maybe Logging)

-- | The description of the infrastructure configuration.
createInfrastructureConfiguration_description :: Lens' CreateInfrastructureConfiguration (Maybe Text)

-- | The tags of the infrastructure configuration.
createInfrastructureConfiguration_tags :: Lens' CreateInfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The terminate instance on failure setting of the infrastructure
--   configuration. Set to false if you want Image Builder to retain the
--   instance used to configure your AMI if the build or test phase of your
--   workflow fails.
createInfrastructureConfiguration_terminateInstanceOnFailure :: Lens' CreateInfrastructureConfiguration (Maybe Bool)

-- | The name of the infrastructure configuration.
createInfrastructureConfiguration_name :: Lens' CreateInfrastructureConfiguration Text

-- | The instance profile to associate with the instance used to customize
--   your Amazon EC2 AMI.
createInfrastructureConfiguration_instanceProfileName :: Lens' CreateInfrastructureConfiguration Text

-- | The idempotency token used to make this request idempotent.
createInfrastructureConfiguration_clientToken :: Lens' CreateInfrastructureConfiguration Text

-- | <i>See:</i> <a>newCreateInfrastructureConfigurationResponse</a> smart
--   constructor.
data CreateInfrastructureConfigurationResponse
CreateInfrastructureConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateInfrastructureConfigurationResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:CreateInfrastructureConfigurationResponse'] :: CreateInfrastructureConfigurationResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was created by this request.
[$sel:infrastructureConfigurationArn:CreateInfrastructureConfigurationResponse'] :: CreateInfrastructureConfigurationResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CreateInfrastructureConfigurationResponse'] :: CreateInfrastructureConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateInfrastructureConfigurationResponse'] :: CreateInfrastructureConfigurationResponse -> Int

-- | Create a value of <a>CreateInfrastructureConfigurationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateInfrastructureConfigurationResponse'</a>,
--   <a>createInfrastructureConfigurationResponse_requestId</a> - The
--   request ID that uniquely identifies this request.
--   
--   
--   <a>$sel:infrastructureConfigurationArn:CreateInfrastructureConfigurationResponse'</a>,
--   <a>createInfrastructureConfigurationResponse_infrastructureConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was created by this request.
--   
--   <a>$sel:clientToken:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfigurationResponse_clientToken</a> - The
--   idempotency token used to make this request idempotent.
--   
--   <a>$sel:httpStatus:CreateInfrastructureConfigurationResponse'</a>,
--   <a>createInfrastructureConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newCreateInfrastructureConfigurationResponse :: Int -> CreateInfrastructureConfigurationResponse

-- | The request ID that uniquely identifies this request.
createInfrastructureConfigurationResponse_requestId :: Lens' CreateInfrastructureConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was created by this request.
createInfrastructureConfigurationResponse_infrastructureConfigurationArn :: Lens' CreateInfrastructureConfigurationResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createInfrastructureConfigurationResponse_clientToken :: Lens' CreateInfrastructureConfigurationResponse (Maybe Text)

-- | The response's http status code.
createInfrastructureConfigurationResponse_httpStatus :: Lens' CreateInfrastructureConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfiguration
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfigurationResponse
instance GHC.Show.Show Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfigurationResponse
instance GHC.Read.Read Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfigurationResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.CreateInfrastructureConfiguration.CreateInfrastructureConfiguration


-- | Creates a new image recipe. Image recipes define how images are
--   configured, tested, and assessed.
module Amazonka.ImageBuilder.CreateImageRecipe

-- | <i>See:</i> <a>newCreateImageRecipe</a> smart constructor.
data CreateImageRecipe
CreateImageRecipe' :: Maybe AdditionalInstanceConfiguration -> Maybe Text -> Maybe [InstanceBlockDeviceMapping] -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> NonEmpty ComponentConfiguration -> Text -> Text -> CreateImageRecipe

-- | Specify additional settings and launch scripts for your build
--   instances.
[$sel:additionalInstanceConfiguration:CreateImageRecipe'] :: CreateImageRecipe -> Maybe AdditionalInstanceConfiguration

-- | The working directory used during build and test workflows.
[$sel:workingDirectory:CreateImageRecipe'] :: CreateImageRecipe -> Maybe Text

-- | The block device mappings of the image recipe.
[$sel:blockDeviceMappings:CreateImageRecipe'] :: CreateImageRecipe -> Maybe [InstanceBlockDeviceMapping]

-- | The description of the image recipe.
[$sel:description:CreateImageRecipe'] :: CreateImageRecipe -> Maybe Text

-- | The tags of the image recipe.
[$sel:tags:CreateImageRecipe'] :: CreateImageRecipe -> Maybe (HashMap Text Text)

-- | The name of the image recipe.
[$sel:name:CreateImageRecipe'] :: CreateImageRecipe -> Text

-- | The semantic version of the image recipe. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
[$sel:semanticVersion:CreateImageRecipe'] :: CreateImageRecipe -> Text

-- | The components of the image recipe.
[$sel:components:CreateImageRecipe'] :: CreateImageRecipe -> NonEmpty ComponentConfiguration

-- | The base image of the image recipe. The value of the string can be the
--   ARN of the base image or an AMI ID. The format for the ARN follows
--   this example:
--   <tt>arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x</tt>.
--   You can provide the specific version that you want to use, or you can
--   use a wildcard in all of the fields. If you enter an AMI ID for the
--   string value, you must have access to the AMI, and the AMI must be in
--   the same Region in which you are using Image Builder.
[$sel:parentImage:CreateImageRecipe'] :: CreateImageRecipe -> Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CreateImageRecipe'] :: CreateImageRecipe -> Text

-- | Create a value of <a>CreateImageRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:additionalInstanceConfiguration:CreateImageRecipe'</a>,
--   <a>createImageRecipe_additionalInstanceConfiguration</a> - Specify
--   additional settings and launch scripts for your build instances.
--   
--   <a>$sel:workingDirectory:CreateImageRecipe'</a>,
--   <a>createImageRecipe_workingDirectory</a> - The working directory used
--   during build and test workflows.
--   
--   <a>$sel:blockDeviceMappings:CreateImageRecipe'</a>,
--   <a>createImageRecipe_blockDeviceMappings</a> - The block device
--   mappings of the image recipe.
--   
--   <a>$sel:description:CreateImageRecipe'</a>,
--   <a>createImageRecipe_description</a> - The description of the image
--   recipe.
--   
--   <a>$sel:tags:CreateImageRecipe'</a>, <a>createImageRecipe_tags</a> -
--   The tags of the image recipe.
--   
--   <a>$sel:name:CreateImageRecipe'</a>, <a>createImageRecipe_name</a> -
--   The name of the image recipe.
--   
--   <a>$sel:semanticVersion:CreateImageRecipe'</a>,
--   <a>createImageRecipe_semanticVersion</a> - The semantic version of the
--   image recipe. This version follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <a>$sel:components:CreateImageRecipe'</a>,
--   <a>createImageRecipe_components</a> - The components of the image
--   recipe.
--   
--   <a>$sel:parentImage:CreateImageRecipe'</a>,
--   <a>createImageRecipe_parentImage</a> - The base image of the image
--   recipe. The value of the string can be the ARN of the base image or an
--   AMI ID. The format for the ARN follows this example:
--   <tt>arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x</tt>.
--   You can provide the specific version that you want to use, or you can
--   use a wildcard in all of the fields. If you enter an AMI ID for the
--   string value, you must have access to the AMI, and the AMI must be in
--   the same Region in which you are using Image Builder.
--   
--   <a>$sel:clientToken:CreateImageRecipe'</a>,
--   <a>createImageRecipe_clientToken</a> - The idempotency token used to
--   make this request idempotent.
newCreateImageRecipe :: Text -> Text -> NonEmpty ComponentConfiguration -> Text -> Text -> CreateImageRecipe

-- | Specify additional settings and launch scripts for your build
--   instances.
createImageRecipe_additionalInstanceConfiguration :: Lens' CreateImageRecipe (Maybe AdditionalInstanceConfiguration)

-- | The working directory used during build and test workflows.
createImageRecipe_workingDirectory :: Lens' CreateImageRecipe (Maybe Text)

-- | The block device mappings of the image recipe.
createImageRecipe_blockDeviceMappings :: Lens' CreateImageRecipe (Maybe [InstanceBlockDeviceMapping])

-- | The description of the image recipe.
createImageRecipe_description :: Lens' CreateImageRecipe (Maybe Text)

-- | The tags of the image recipe.
createImageRecipe_tags :: Lens' CreateImageRecipe (Maybe (HashMap Text Text))

-- | The name of the image recipe.
createImageRecipe_name :: Lens' CreateImageRecipe Text

-- | The semantic version of the image recipe. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
createImageRecipe_semanticVersion :: Lens' CreateImageRecipe Text

-- | The components of the image recipe.
createImageRecipe_components :: Lens' CreateImageRecipe (NonEmpty ComponentConfiguration)

-- | The base image of the image recipe. The value of the string can be the
--   ARN of the base image or an AMI ID. The format for the ARN follows
--   this example:
--   <tt>arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x</tt>.
--   You can provide the specific version that you want to use, or you can
--   use a wildcard in all of the fields. If you enter an AMI ID for the
--   string value, you must have access to the AMI, and the AMI must be in
--   the same Region in which you are using Image Builder.
createImageRecipe_parentImage :: Lens' CreateImageRecipe Text

-- | The idempotency token used to make this request idempotent.
createImageRecipe_clientToken :: Lens' CreateImageRecipe Text

-- | <i>See:</i> <a>newCreateImageRecipeResponse</a> smart constructor.
data CreateImageRecipeResponse
CreateImageRecipeResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateImageRecipeResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:CreateImageRecipeResponse'] :: CreateImageRecipeResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CreateImageRecipeResponse'] :: CreateImageRecipeResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image recipe that was created by
--   this request.
[$sel:imageRecipeArn:CreateImageRecipeResponse'] :: CreateImageRecipeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateImageRecipeResponse'] :: CreateImageRecipeResponse -> Int

-- | Create a value of <a>CreateImageRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateImageRecipeResponse'</a>,
--   <a>createImageRecipeResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:CreateImageRecipe'</a>,
--   <a>createImageRecipeResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:imageRecipeArn:CreateImageRecipeResponse'</a>,
--   <a>createImageRecipeResponse_imageRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the image recipe that was created by this request.
--   
--   <a>$sel:httpStatus:CreateImageRecipeResponse'</a>,
--   <a>createImageRecipeResponse_httpStatus</a> - The response's http
--   status code.
newCreateImageRecipeResponse :: Int -> CreateImageRecipeResponse

-- | The request ID that uniquely identifies this request.
createImageRecipeResponse_requestId :: Lens' CreateImageRecipeResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createImageRecipeResponse_clientToken :: Lens' CreateImageRecipeResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that was created by
--   this request.
createImageRecipeResponse_imageRecipeArn :: Lens' CreateImageRecipeResponse (Maybe Text)

-- | The response's http status code.
createImageRecipeResponse_httpStatus :: Lens' CreateImageRecipeResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipe
instance GHC.Show.Show Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipe
instance GHC.Read.Read Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipe
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipe
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipeResponse
instance GHC.Show.Show Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipeResponse
instance GHC.Read.Read Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipeResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipeResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipeResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipe
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipe
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipe
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipe
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.CreateImageRecipe.CreateImageRecipe


-- | Creates a new image pipeline. Image pipelines enable you to automate
--   the creation and distribution of images.
module Amazonka.ImageBuilder.CreateImagePipeline

-- | <i>See:</i> <a>newCreateImagePipeline</a> smart constructor.
data CreateImagePipeline
CreateImagePipeline' :: Maybe PipelineStatus -> Maybe Text -> Maybe ImageTestsConfiguration -> Maybe Schedule -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateImagePipeline

-- | The status of the image pipeline.
[$sel:status:CreateImagePipeline'] :: CreateImagePipeline -> Maybe PipelineStatus

-- | The Amazon Resource Name (ARN) of the container recipe that is used to
--   configure images created by this container pipeline.
[$sel:containerRecipeArn:CreateImagePipeline'] :: CreateImagePipeline -> Maybe Text

-- | The image test configuration of the image pipeline.
[$sel:imageTestsConfiguration:CreateImagePipeline'] :: CreateImagePipeline -> Maybe ImageTestsConfiguration

-- | The schedule of the image pipeline.
[$sel:schedule:CreateImagePipeline'] :: CreateImagePipeline -> Maybe Schedule

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
[$sel:enhancedImageMetadataEnabled:CreateImagePipeline'] :: CreateImagePipeline -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   will be used to configure and distribute images created by this image
--   pipeline.
[$sel:distributionConfigurationArn:CreateImagePipeline'] :: CreateImagePipeline -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image recipe that will be used
--   to configure images created by this image pipeline.
[$sel:imageRecipeArn:CreateImagePipeline'] :: CreateImagePipeline -> Maybe Text

-- | The description of the image pipeline.
[$sel:description:CreateImagePipeline'] :: CreateImagePipeline -> Maybe Text

-- | The tags of the image pipeline.
[$sel:tags:CreateImagePipeline'] :: CreateImagePipeline -> Maybe (HashMap Text Text)

-- | The name of the image pipeline.
[$sel:name:CreateImagePipeline'] :: CreateImagePipeline -> Text

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that will be used to build images created by this image pipeline.
[$sel:infrastructureConfigurationArn:CreateImagePipeline'] :: CreateImagePipeline -> Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CreateImagePipeline'] :: CreateImagePipeline -> Text

-- | Create a value of <a>CreateImagePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateImagePipeline'</a>,
--   <a>createImagePipeline_status</a> - The status of the image pipeline.
--   
--   <a>$sel:containerRecipeArn:CreateImagePipeline'</a>,
--   <a>createImagePipeline_containerRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the container recipe that is used to configure images
--   created by this container pipeline.
--   
--   <a>$sel:imageTestsConfiguration:CreateImagePipeline'</a>,
--   <a>createImagePipeline_imageTestsConfiguration</a> - The image test
--   configuration of the image pipeline.
--   
--   <a>$sel:schedule:CreateImagePipeline'</a>,
--   <a>createImagePipeline_schedule</a> - The schedule of the image
--   pipeline.
--   
--   <a>$sel:enhancedImageMetadataEnabled:CreateImagePipeline'</a>,
--   <a>createImagePipeline_enhancedImageMetadataEnabled</a> - Collects
--   additional information about the image being created, including the
--   operating system (OS) version and package list. This information is
--   used to enhance the overall experience of using EC2 Image Builder.
--   Enabled by default.
--   
--   <a>$sel:distributionConfigurationArn:CreateImagePipeline'</a>,
--   <a>createImagePipeline_distributionConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the distribution configuration that will be
--   used to configure and distribute images created by this image
--   pipeline.
--   
--   <a>$sel:imageRecipeArn:CreateImagePipeline'</a>,
--   <a>createImagePipeline_imageRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the image recipe that will be used to configure images
--   created by this image pipeline.
--   
--   <a>$sel:description:CreateImagePipeline'</a>,
--   <a>createImagePipeline_description</a> - The description of the image
--   pipeline.
--   
--   <a>$sel:tags:CreateImagePipeline'</a>, <a>createImagePipeline_tags</a>
--   - The tags of the image pipeline.
--   
--   <a>$sel:name:CreateImagePipeline'</a>, <a>createImagePipeline_name</a>
--   - The name of the image pipeline.
--   
--   <a>$sel:infrastructureConfigurationArn:CreateImagePipeline'</a>,
--   <a>createImagePipeline_infrastructureConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the infrastructure configuration that will be
--   used to build images created by this image pipeline.
--   
--   <a>$sel:clientToken:CreateImagePipeline'</a>,
--   <a>createImagePipeline_clientToken</a> - The idempotency token used to
--   make this request idempotent.
newCreateImagePipeline :: Text -> Text -> Text -> CreateImagePipeline

-- | The status of the image pipeline.
createImagePipeline_status :: Lens' CreateImagePipeline (Maybe PipelineStatus)

-- | The Amazon Resource Name (ARN) of the container recipe that is used to
--   configure images created by this container pipeline.
createImagePipeline_containerRecipeArn :: Lens' CreateImagePipeline (Maybe Text)

-- | The image test configuration of the image pipeline.
createImagePipeline_imageTestsConfiguration :: Lens' CreateImagePipeline (Maybe ImageTestsConfiguration)

-- | The schedule of the image pipeline.
createImagePipeline_schedule :: Lens' CreateImagePipeline (Maybe Schedule)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
createImagePipeline_enhancedImageMetadataEnabled :: Lens' CreateImagePipeline (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   will be used to configure and distribute images created by this image
--   pipeline.
createImagePipeline_distributionConfigurationArn :: Lens' CreateImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that will be used
--   to configure images created by this image pipeline.
createImagePipeline_imageRecipeArn :: Lens' CreateImagePipeline (Maybe Text)

-- | The description of the image pipeline.
createImagePipeline_description :: Lens' CreateImagePipeline (Maybe Text)

-- | The tags of the image pipeline.
createImagePipeline_tags :: Lens' CreateImagePipeline (Maybe (HashMap Text Text))

-- | The name of the image pipeline.
createImagePipeline_name :: Lens' CreateImagePipeline Text

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that will be used to build images created by this image pipeline.
createImagePipeline_infrastructureConfigurationArn :: Lens' CreateImagePipeline Text

-- | The idempotency token used to make this request idempotent.
createImagePipeline_clientToken :: Lens' CreateImagePipeline Text

-- | <i>See:</i> <a>newCreateImagePipelineResponse</a> smart constructor.
data CreateImagePipelineResponse
CreateImagePipelineResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateImagePipelineResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:CreateImagePipelineResponse'] :: CreateImagePipelineResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CreateImagePipelineResponse'] :: CreateImagePipelineResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image pipeline that was created
--   by this request.
[$sel:imagePipelineArn:CreateImagePipelineResponse'] :: CreateImagePipelineResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateImagePipelineResponse'] :: CreateImagePipelineResponse -> Int

-- | Create a value of <a>CreateImagePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateImagePipelineResponse'</a>,
--   <a>createImagePipelineResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:CreateImagePipeline'</a>,
--   <a>createImagePipelineResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:imagePipelineArn:CreateImagePipelineResponse'</a>,
--   <a>createImagePipelineResponse_imagePipelineArn</a> - The Amazon
--   Resource Name (ARN) of the image pipeline that was created by this
--   request.
--   
--   <a>$sel:httpStatus:CreateImagePipelineResponse'</a>,
--   <a>createImagePipelineResponse_httpStatus</a> - The response's http
--   status code.
newCreateImagePipelineResponse :: Int -> CreateImagePipelineResponse

-- | The request ID that uniquely identifies this request.
createImagePipelineResponse_requestId :: Lens' CreateImagePipelineResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createImagePipelineResponse_clientToken :: Lens' CreateImagePipelineResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image pipeline that was created
--   by this request.
createImagePipelineResponse_imagePipelineArn :: Lens' CreateImagePipelineResponse (Maybe Text)

-- | The response's http status code.
createImagePipelineResponse_httpStatus :: Lens' CreateImagePipelineResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipeline
instance GHC.Show.Show Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipeline
instance GHC.Read.Read Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipeline
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipeline
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipelineResponse
instance GHC.Show.Show Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipelineResponse
instance GHC.Read.Read Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipelineResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipelineResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipeline
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipelineResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipeline
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipeline
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipeline
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipeline
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipeline
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.CreateImagePipeline.CreateImagePipeline


-- | Creates a new image. This request will create a new image along with
--   all of the configured output resources defined in the distribution
--   configuration. You must specify exactly one recipe for your image,
--   using either a ContainerRecipeArn or an ImageRecipeArn.
module Amazonka.ImageBuilder.CreateImage

-- | <i>See:</i> <a>newCreateImage</a> smart constructor.
data CreateImage
CreateImage' :: Maybe Text -> Maybe ImageTestsConfiguration -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateImage

-- | The Amazon Resource Name (ARN) of the container recipe that defines
--   how images are configured and tested.
[$sel:containerRecipeArn:CreateImage'] :: CreateImage -> Maybe Text

-- | The image tests configuration of the image.
[$sel:imageTestsConfiguration:CreateImage'] :: CreateImage -> Maybe ImageTestsConfiguration

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
[$sel:enhancedImageMetadataEnabled:CreateImage'] :: CreateImage -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   defines and configures the outputs of your pipeline.
[$sel:distributionConfigurationArn:CreateImage'] :: CreateImage -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image recipe that defines how
--   images are configured, tested, and assessed.
[$sel:imageRecipeArn:CreateImage'] :: CreateImage -> Maybe Text

-- | The tags of the image.
[$sel:tags:CreateImage'] :: CreateImage -> Maybe (HashMap Text Text)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that defines the environment in which your image will be built and
--   tested.
[$sel:infrastructureConfigurationArn:CreateImage'] :: CreateImage -> Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CreateImage'] :: CreateImage -> Text

-- | Create a value of <a>CreateImage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerRecipeArn:CreateImage'</a>,
--   <a>createImage_containerRecipeArn</a> - The Amazon Resource Name (ARN)
--   of the container recipe that defines how images are configured and
--   tested.
--   
--   <a>$sel:imageTestsConfiguration:CreateImage'</a>,
--   <a>createImage_imageTestsConfiguration</a> - The image tests
--   configuration of the image.
--   
--   <a>$sel:enhancedImageMetadataEnabled:CreateImage'</a>,
--   <a>createImage_enhancedImageMetadataEnabled</a> - Collects additional
--   information about the image being created, including the operating
--   system (OS) version and package list. This information is used to
--   enhance the overall experience of using EC2 Image Builder. Enabled by
--   default.
--   
--   <a>$sel:distributionConfigurationArn:CreateImage'</a>,
--   <a>createImage_distributionConfigurationArn</a> - The Amazon Resource
--   Name (ARN) of the distribution configuration that defines and
--   configures the outputs of your pipeline.
--   
--   <a>$sel:imageRecipeArn:CreateImage'</a>,
--   <a>createImage_imageRecipeArn</a> - The Amazon Resource Name (ARN) of
--   the image recipe that defines how images are configured, tested, and
--   assessed.
--   
--   <a>$sel:tags:CreateImage'</a>, <a>createImage_tags</a> - The tags of
--   the image.
--   
--   <a>$sel:infrastructureConfigurationArn:CreateImage'</a>,
--   <a>createImage_infrastructureConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the infrastructure configuration that defines
--   the environment in which your image will be built and tested.
--   
--   <a>$sel:clientToken:CreateImage'</a>, <a>createImage_clientToken</a> -
--   The idempotency token used to make this request idempotent.
newCreateImage :: Text -> Text -> CreateImage

-- | The Amazon Resource Name (ARN) of the container recipe that defines
--   how images are configured and tested.
createImage_containerRecipeArn :: Lens' CreateImage (Maybe Text)

-- | The image tests configuration of the image.
createImage_imageTestsConfiguration :: Lens' CreateImage (Maybe ImageTestsConfiguration)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
createImage_enhancedImageMetadataEnabled :: Lens' CreateImage (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   defines and configures the outputs of your pipeline.
createImage_distributionConfigurationArn :: Lens' CreateImage (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that defines how
--   images are configured, tested, and assessed.
createImage_imageRecipeArn :: Lens' CreateImage (Maybe Text)

-- | The tags of the image.
createImage_tags :: Lens' CreateImage (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that defines the environment in which your image will be built and
--   tested.
createImage_infrastructureConfigurationArn :: Lens' CreateImage Text

-- | The idempotency token used to make this request idempotent.
createImage_clientToken :: Lens' CreateImage Text

-- | <i>See:</i> <a>newCreateImageResponse</a> smart constructor.
data CreateImageResponse
CreateImageResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateImageResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:CreateImageResponse'] :: CreateImageResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CreateImageResponse'] :: CreateImageResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image that was created by this
--   request.
[$sel:imageBuildVersionArn:CreateImageResponse'] :: CreateImageResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateImageResponse'] :: CreateImageResponse -> Int

-- | Create a value of <a>CreateImageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateImageResponse'</a>,
--   <a>createImageResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:clientToken:CreateImage'</a>,
--   <a>createImageResponse_clientToken</a> - The idempotency token used to
--   make this request idempotent.
--   
--   <a>$sel:imageBuildVersionArn:CreateImageResponse'</a>,
--   <a>createImageResponse_imageBuildVersionArn</a> - The Amazon Resource
--   Name (ARN) of the image that was created by this request.
--   
--   <a>$sel:httpStatus:CreateImageResponse'</a>,
--   <a>createImageResponse_httpStatus</a> - The response's http status
--   code.
newCreateImageResponse :: Int -> CreateImageResponse

-- | The request ID that uniquely identifies this request.
createImageResponse_requestId :: Lens' CreateImageResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createImageResponse_clientToken :: Lens' CreateImageResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image that was created by this
--   request.
createImageResponse_imageBuildVersionArn :: Lens' CreateImageResponse (Maybe Text)

-- | The response's http status code.
createImageResponse_httpStatus :: Lens' CreateImageResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateImage.CreateImage
instance GHC.Show.Show Amazonka.ImageBuilder.CreateImage.CreateImage
instance GHC.Read.Read Amazonka.ImageBuilder.CreateImage.CreateImage
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateImage.CreateImage
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateImage.CreateImageResponse
instance GHC.Show.Show Amazonka.ImageBuilder.CreateImage.CreateImageResponse
instance GHC.Read.Read Amazonka.ImageBuilder.CreateImage.CreateImageResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateImage.CreateImageResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.CreateImage.CreateImage
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateImage.CreateImageResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.CreateImage.CreateImage
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateImage.CreateImage
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.CreateImage.CreateImage
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.CreateImage.CreateImage
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.CreateImage.CreateImage
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.CreateImage.CreateImage


-- | Creates a new distribution configuration. Distribution configurations
--   define and configure the outputs of your pipeline.
module Amazonka.ImageBuilder.CreateDistributionConfiguration

-- | <i>See:</i> <a>newCreateDistributionConfiguration</a> smart
--   constructor.
data CreateDistributionConfiguration
CreateDistributionConfiguration' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> [Distribution] -> Text -> CreateDistributionConfiguration

-- | The description of the distribution configuration.
[$sel:description:CreateDistributionConfiguration'] :: CreateDistributionConfiguration -> Maybe Text

-- | The tags of the distribution configuration.
[$sel:tags:CreateDistributionConfiguration'] :: CreateDistributionConfiguration -> Maybe (HashMap Text Text)

-- | The name of the distribution configuration.
[$sel:name:CreateDistributionConfiguration'] :: CreateDistributionConfiguration -> Text

-- | The distributions of the distribution configuration.
[$sel:distributions:CreateDistributionConfiguration'] :: CreateDistributionConfiguration -> [Distribution]

-- | The idempotency token of the distribution configuration.
[$sel:clientToken:CreateDistributionConfiguration'] :: CreateDistributionConfiguration -> Text

-- | Create a value of <a>CreateDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfiguration_description</a> - The description
--   of the distribution configuration.
--   
--   <a>$sel:tags:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfiguration_tags</a> - The tags of the
--   distribution configuration.
--   
--   <a>$sel:name:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfiguration_name</a> - The name of the
--   distribution configuration.
--   
--   <a>$sel:distributions:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfiguration_distributions</a> - The
--   distributions of the distribution configuration.
--   
--   <a>$sel:clientToken:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfiguration_clientToken</a> - The idempotency
--   token of the distribution configuration.
newCreateDistributionConfiguration :: Text -> Text -> CreateDistributionConfiguration

-- | The description of the distribution configuration.
createDistributionConfiguration_description :: Lens' CreateDistributionConfiguration (Maybe Text)

-- | The tags of the distribution configuration.
createDistributionConfiguration_tags :: Lens' CreateDistributionConfiguration (Maybe (HashMap Text Text))

-- | The name of the distribution configuration.
createDistributionConfiguration_name :: Lens' CreateDistributionConfiguration Text

-- | The distributions of the distribution configuration.
createDistributionConfiguration_distributions :: Lens' CreateDistributionConfiguration [Distribution]

-- | The idempotency token of the distribution configuration.
createDistributionConfiguration_clientToken :: Lens' CreateDistributionConfiguration Text

-- | <i>See:</i> <a>newCreateDistributionConfigurationResponse</a> smart
--   constructor.
data CreateDistributionConfigurationResponse
CreateDistributionConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateDistributionConfigurationResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:CreateDistributionConfigurationResponse'] :: CreateDistributionConfigurationResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CreateDistributionConfigurationResponse'] :: CreateDistributionConfigurationResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   was created by this request.
[$sel:distributionConfigurationArn:CreateDistributionConfigurationResponse'] :: CreateDistributionConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDistributionConfigurationResponse'] :: CreateDistributionConfigurationResponse -> Int

-- | Create a value of <a>CreateDistributionConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateDistributionConfigurationResponse'</a>,
--   <a>createDistributionConfigurationResponse_requestId</a> - The request
--   ID that uniquely identifies this request.
--   
--   <a>$sel:clientToken:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfigurationResponse_clientToken</a> - The
--   idempotency token used to make this request idempotent.
--   
--   
--   <a>$sel:distributionConfigurationArn:CreateDistributionConfigurationResponse'</a>,
--   <a>createDistributionConfigurationResponse_distributionConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the distribution configuration
--   that was created by this request.
--   
--   <a>$sel:httpStatus:CreateDistributionConfigurationResponse'</a>,
--   <a>createDistributionConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newCreateDistributionConfigurationResponse :: Int -> CreateDistributionConfigurationResponse

-- | The request ID that uniquely identifies this request.
createDistributionConfigurationResponse_requestId :: Lens' CreateDistributionConfigurationResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createDistributionConfigurationResponse_clientToken :: Lens' CreateDistributionConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   was created by this request.
createDistributionConfigurationResponse_distributionConfigurationArn :: Lens' CreateDistributionConfigurationResponse (Maybe Text)

-- | The response's http status code.
createDistributionConfigurationResponse_httpStatus :: Lens' CreateDistributionConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfiguration
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfigurationResponse
instance GHC.Show.Show Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfigurationResponse
instance GHC.Read.Read Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfigurationResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.CreateDistributionConfiguration.CreateDistributionConfiguration


-- | Creates a new container recipe. Container recipes define how images
--   are configured, tested, and assessed.
module Amazonka.ImageBuilder.CreateContainerRecipe

-- | <i>See:</i> <a>newCreateContainerRecipe</a> smart constructor.
data CreateContainerRecipe
CreateContainerRecipe' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Platform -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe InstanceConfiguration -> ContainerType -> Text -> Text -> NonEmpty ComponentConfiguration -> Text -> TargetContainerRepository -> Text -> CreateContainerRecipe

-- | The Dockerfile template used to build your image as an inline data
--   blob.
[$sel:dockerfileTemplateData:CreateContainerRecipe'] :: CreateContainerRecipe -> Maybe Text

-- | Specifies the operating system version for the base image.
[$sel:imageOsVersionOverride:CreateContainerRecipe'] :: CreateContainerRecipe -> Maybe Text

-- | The working directory for use during build and test workflows.
[$sel:workingDirectory:CreateContainerRecipe'] :: CreateContainerRecipe -> Maybe Text

-- | The Amazon S3 URI for the Dockerfile that will be used to build your
--   container image.
[$sel:dockerfileTemplateUri:CreateContainerRecipe'] :: CreateContainerRecipe -> Maybe Text

-- | Identifies which KMS key is used to encrypt the container image.
[$sel:kmsKeyId:CreateContainerRecipe'] :: CreateContainerRecipe -> Maybe Text

-- | Specifies the operating system platform when you use a custom base
--   image.
[$sel:platformOverride:CreateContainerRecipe'] :: CreateContainerRecipe -> Maybe Platform

-- | The description of the container recipe.
[$sel:description:CreateContainerRecipe'] :: CreateContainerRecipe -> Maybe Text

-- | Tags that are attached to the container recipe.
[$sel:tags:CreateContainerRecipe'] :: CreateContainerRecipe -> Maybe (HashMap Text Text)

-- | A group of options that can be used to configure an instance for
--   building and testing container images.
[$sel:instanceConfiguration:CreateContainerRecipe'] :: CreateContainerRecipe -> Maybe InstanceConfiguration

-- | The type of container to create.
[$sel:containerType:CreateContainerRecipe'] :: CreateContainerRecipe -> ContainerType

-- | The name of the container recipe.
[$sel:name:CreateContainerRecipe'] :: CreateContainerRecipe -> Text

-- | The semantic version of the container recipe. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
[$sel:semanticVersion:CreateContainerRecipe'] :: CreateContainerRecipe -> Text

-- | Components for build and test that are included in the container
--   recipe.
[$sel:components:CreateContainerRecipe'] :: CreateContainerRecipe -> NonEmpty ComponentConfiguration

-- | The base image for the container recipe.
[$sel:parentImage:CreateContainerRecipe'] :: CreateContainerRecipe -> Text

-- | The destination repository for the container image.
[$sel:targetRepository:CreateContainerRecipe'] :: CreateContainerRecipe -> TargetContainerRepository

-- | The client token used to make this request idempotent.
[$sel:clientToken:CreateContainerRecipe'] :: CreateContainerRecipe -> Text

-- | Create a value of <a>CreateContainerRecipe</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dockerfileTemplateData:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_dockerfileTemplateData</a> - The Dockerfile
--   template used to build your image as an inline data blob.
--   
--   <a>$sel:imageOsVersionOverride:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_imageOsVersionOverride</a> - Specifies the
--   operating system version for the base image.
--   
--   <a>$sel:workingDirectory:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_workingDirectory</a> - The working directory
--   for use during build and test workflows.
--   
--   <a>$sel:dockerfileTemplateUri:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_dockerfileTemplateUri</a> - The Amazon S3 URI
--   for the Dockerfile that will be used to build your container image.
--   
--   <a>$sel:kmsKeyId:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_kmsKeyId</a> - Identifies which KMS key is
--   used to encrypt the container image.
--   
--   <a>$sel:platformOverride:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_platformOverride</a> - Specifies the
--   operating system platform when you use a custom base image.
--   
--   <a>$sel:description:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_description</a> - The description of the
--   container recipe.
--   
--   <a>$sel:tags:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_tags</a> - Tags that are attached to the
--   container recipe.
--   
--   <a>$sel:instanceConfiguration:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_instanceConfiguration</a> - A group of
--   options that can be used to configure an instance for building and
--   testing container images.
--   
--   <a>$sel:containerType:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_containerType</a> - The type of container to
--   create.
--   
--   <a>$sel:name:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_name</a> - The name of the container recipe.
--   
--   <a>$sel:semanticVersion:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_semanticVersion</a> - The semantic version of
--   the container recipe. This version follows the semantic version
--   syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <a>$sel:components:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_components</a> - Components for build and
--   test that are included in the container recipe.
--   
--   <a>$sel:parentImage:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_parentImage</a> - The base image for the
--   container recipe.
--   
--   <a>$sel:targetRepository:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_targetRepository</a> - The destination
--   repository for the container image.
--   
--   <a>$sel:clientToken:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_clientToken</a> - The client token used to
--   make this request idempotent.
newCreateContainerRecipe :: ContainerType -> Text -> Text -> NonEmpty ComponentConfiguration -> Text -> TargetContainerRepository -> Text -> CreateContainerRecipe

-- | The Dockerfile template used to build your image as an inline data
--   blob.
createContainerRecipe_dockerfileTemplateData :: Lens' CreateContainerRecipe (Maybe Text)

-- | Specifies the operating system version for the base image.
createContainerRecipe_imageOsVersionOverride :: Lens' CreateContainerRecipe (Maybe Text)

-- | The working directory for use during build and test workflows.
createContainerRecipe_workingDirectory :: Lens' CreateContainerRecipe (Maybe Text)

-- | The Amazon S3 URI for the Dockerfile that will be used to build your
--   container image.
createContainerRecipe_dockerfileTemplateUri :: Lens' CreateContainerRecipe (Maybe Text)

-- | Identifies which KMS key is used to encrypt the container image.
createContainerRecipe_kmsKeyId :: Lens' CreateContainerRecipe (Maybe Text)

-- | Specifies the operating system platform when you use a custom base
--   image.
createContainerRecipe_platformOverride :: Lens' CreateContainerRecipe (Maybe Platform)

-- | The description of the container recipe.
createContainerRecipe_description :: Lens' CreateContainerRecipe (Maybe Text)

-- | Tags that are attached to the container recipe.
createContainerRecipe_tags :: Lens' CreateContainerRecipe (Maybe (HashMap Text Text))

-- | A group of options that can be used to configure an instance for
--   building and testing container images.
createContainerRecipe_instanceConfiguration :: Lens' CreateContainerRecipe (Maybe InstanceConfiguration)

-- | The type of container to create.
createContainerRecipe_containerType :: Lens' CreateContainerRecipe ContainerType

-- | The name of the container recipe.
createContainerRecipe_name :: Lens' CreateContainerRecipe Text

-- | The semantic version of the container recipe. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
createContainerRecipe_semanticVersion :: Lens' CreateContainerRecipe Text

-- | Components for build and test that are included in the container
--   recipe.
createContainerRecipe_components :: Lens' CreateContainerRecipe (NonEmpty ComponentConfiguration)

-- | The base image for the container recipe.
createContainerRecipe_parentImage :: Lens' CreateContainerRecipe Text

-- | The destination repository for the container image.
createContainerRecipe_targetRepository :: Lens' CreateContainerRecipe TargetContainerRepository

-- | The client token used to make this request idempotent.
createContainerRecipe_clientToken :: Lens' CreateContainerRecipe Text

-- | <i>See:</i> <a>newCreateContainerRecipeResponse</a> smart constructor.
data CreateContainerRecipeResponse
CreateContainerRecipeResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateContainerRecipeResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:CreateContainerRecipeResponse'] :: CreateContainerRecipeResponse -> Maybe Text

-- | The client token used to make this request idempotent.
[$sel:clientToken:CreateContainerRecipeResponse'] :: CreateContainerRecipeResponse -> Maybe Text

-- | Returns the Amazon Resource Name (ARN) of the container recipe that
--   the request created.
[$sel:containerRecipeArn:CreateContainerRecipeResponse'] :: CreateContainerRecipeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateContainerRecipeResponse'] :: CreateContainerRecipeResponse -> Int

-- | Create a value of <a>CreateContainerRecipeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateContainerRecipeResponse'</a>,
--   <a>createContainerRecipeResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:CreateContainerRecipe'</a>,
--   <a>createContainerRecipeResponse_clientToken</a> - The client token
--   used to make this request idempotent.
--   
--   <a>$sel:containerRecipeArn:CreateContainerRecipeResponse'</a>,
--   <a>createContainerRecipeResponse_containerRecipeArn</a> - Returns the
--   Amazon Resource Name (ARN) of the container recipe that the request
--   created.
--   
--   <a>$sel:httpStatus:CreateContainerRecipeResponse'</a>,
--   <a>createContainerRecipeResponse_httpStatus</a> - The response's http
--   status code.
newCreateContainerRecipeResponse :: Int -> CreateContainerRecipeResponse

-- | The request ID that uniquely identifies this request.
createContainerRecipeResponse_requestId :: Lens' CreateContainerRecipeResponse (Maybe Text)

-- | The client token used to make this request idempotent.
createContainerRecipeResponse_clientToken :: Lens' CreateContainerRecipeResponse (Maybe Text)

-- | Returns the Amazon Resource Name (ARN) of the container recipe that
--   the request created.
createContainerRecipeResponse_containerRecipeArn :: Lens' CreateContainerRecipeResponse (Maybe Text)

-- | The response's http status code.
createContainerRecipeResponse_httpStatus :: Lens' CreateContainerRecipeResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipe
instance GHC.Show.Show Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipe
instance GHC.Read.Read Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipe
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipe
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipeResponse
instance GHC.Show.Show Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipeResponse
instance GHC.Read.Read Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipeResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipeResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipeResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipe
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipe
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipe
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipe
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipe
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.CreateContainerRecipe.CreateContainerRecipe


-- | Creates a new component that can be used to build, validate, test, and
--   assess your image.
module Amazonka.ImageBuilder.CreateComponent

-- | <i>See:</i> <a>newCreateComponent</a> smart constructor.
data CreateComponent
CreateComponent' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Platform -> Text -> CreateComponent

-- | The data of the component. Used to specify the data inline. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
[$sel:data':CreateComponent'] :: CreateComponent -> Maybe Text

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
[$sel:supportedOsVersions:CreateComponent'] :: CreateComponent -> Maybe (NonEmpty Text)

-- | The uri of the component. Must be an Amazon S3 URL and the requester
--   must have permission to access the Amazon S3 bucket. If you use Amazon
--   S3, you can specify component content up to your service quota. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
[$sel:uri:CreateComponent'] :: CreateComponent -> Maybe Text

-- | The ID of the KMS key that should be used to encrypt this component.
[$sel:kmsKeyId:CreateComponent'] :: CreateComponent -> Maybe Text

-- | The change description of the component. Describes what change has
--   been made in this version, or what makes this version different from
--   other versions of this component.
[$sel:changeDescription:CreateComponent'] :: CreateComponent -> Maybe Text

-- | The description of the component. Describes the contents of the
--   component.
[$sel:description:CreateComponent'] :: CreateComponent -> Maybe Text

-- | The tags of the component.
[$sel:tags:CreateComponent'] :: CreateComponent -> Maybe (HashMap Text Text)

-- | The name of the component.
[$sel:name:CreateComponent'] :: CreateComponent -> Text

-- | The semantic version of the component. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
[$sel:semanticVersion:CreateComponent'] :: CreateComponent -> Text

-- | The platform of the component.
[$sel:platform:CreateComponent'] :: CreateComponent -> Platform

-- | The idempotency token of the component.
[$sel:clientToken:CreateComponent'] :: CreateComponent -> Text

-- | Create a value of <a>CreateComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':CreateComponent'</a>, <a>createComponent_data</a> - The
--   data of the component. Used to specify the data inline. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
--   
--   <a>$sel:supportedOsVersions:CreateComponent'</a>,
--   <a>createComponent_supportedOsVersions</a> - The operating system (OS)
--   version supported by the component. If the OS information is
--   available, a prefix match is performed against the base image OS
--   version during image recipe creation.
--   
--   <a>$sel:uri:CreateComponent'</a>, <a>createComponent_uri</a> - The uri
--   of the component. Must be an Amazon S3 URL and the requester must have
--   permission to access the Amazon S3 bucket. If you use Amazon S3, you
--   can specify component content up to your service quota. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
--   
--   <a>$sel:kmsKeyId:CreateComponent'</a>, <a>createComponent_kmsKeyId</a>
--   - The ID of the KMS key that should be used to encrypt this component.
--   
--   <a>$sel:changeDescription:CreateComponent'</a>,
--   <a>createComponent_changeDescription</a> - The change description of
--   the component. Describes what change has been made in this version, or
--   what makes this version different from other versions of this
--   component.
--   
--   <a>$sel:description:CreateComponent'</a>,
--   <a>createComponent_description</a> - The description of the component.
--   Describes the contents of the component.
--   
--   <a>$sel:tags:CreateComponent'</a>, <a>createComponent_tags</a> - The
--   tags of the component.
--   
--   <a>$sel:name:CreateComponent'</a>, <a>createComponent_name</a> - The
--   name of the component.
--   
--   <a>$sel:semanticVersion:CreateComponent'</a>,
--   <a>createComponent_semanticVersion</a> - The semantic version of the
--   component. This version follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <a>$sel:platform:CreateComponent'</a>, <a>createComponent_platform</a>
--   - The platform of the component.
--   
--   <a>$sel:clientToken:CreateComponent'</a>,
--   <a>createComponent_clientToken</a> - The idempotency token of the
--   component.
newCreateComponent :: Text -> Text -> Platform -> Text -> CreateComponent

-- | The data of the component. Used to specify the data inline. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
createComponent_data :: Lens' CreateComponent (Maybe Text)

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
createComponent_supportedOsVersions :: Lens' CreateComponent (Maybe (NonEmpty Text))

-- | The uri of the component. Must be an Amazon S3 URL and the requester
--   must have permission to access the Amazon S3 bucket. If you use Amazon
--   S3, you can specify component content up to your service quota. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
createComponent_uri :: Lens' CreateComponent (Maybe Text)

-- | The ID of the KMS key that should be used to encrypt this component.
createComponent_kmsKeyId :: Lens' CreateComponent (Maybe Text)

-- | The change description of the component. Describes what change has
--   been made in this version, or what makes this version different from
--   other versions of this component.
createComponent_changeDescription :: Lens' CreateComponent (Maybe Text)

-- | The description of the component. Describes the contents of the
--   component.
createComponent_description :: Lens' CreateComponent (Maybe Text)

-- | The tags of the component.
createComponent_tags :: Lens' CreateComponent (Maybe (HashMap Text Text))

-- | The name of the component.
createComponent_name :: Lens' CreateComponent Text

-- | The semantic version of the component. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
createComponent_semanticVersion :: Lens' CreateComponent Text

-- | The platform of the component.
createComponent_platform :: Lens' CreateComponent Platform

-- | The idempotency token of the component.
createComponent_clientToken :: Lens' CreateComponent Text

-- | <i>See:</i> <a>newCreateComponentResponse</a> smart constructor.
data CreateComponentResponse
CreateComponentResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateComponentResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:CreateComponentResponse'] :: CreateComponentResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CreateComponentResponse'] :: CreateComponentResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the component that was created by
--   this request.
[$sel:componentBuildVersionArn:CreateComponentResponse'] :: CreateComponentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateComponentResponse'] :: CreateComponentResponse -> Int

-- | Create a value of <a>CreateComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateComponentResponse'</a>,
--   <a>createComponentResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:CreateComponent'</a>,
--   <a>createComponentResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:componentBuildVersionArn:CreateComponentResponse'</a>,
--   <a>createComponentResponse_componentBuildVersionArn</a> - The Amazon
--   Resource Name (ARN) of the component that was created by this request.
--   
--   <a>$sel:httpStatus:CreateComponentResponse'</a>,
--   <a>createComponentResponse_httpStatus</a> - The response's http status
--   code.
newCreateComponentResponse :: Int -> CreateComponentResponse

-- | The request ID that uniquely identifies this request.
createComponentResponse_requestId :: Lens' CreateComponentResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createComponentResponse_clientToken :: Lens' CreateComponentResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the component that was created by
--   this request.
createComponentResponse_componentBuildVersionArn :: Lens' CreateComponentResponse (Maybe Text)

-- | The response's http status code.
createComponentResponse_httpStatus :: Lens' CreateComponentResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateComponent.CreateComponent
instance GHC.Show.Show Amazonka.ImageBuilder.CreateComponent.CreateComponent
instance GHC.Read.Read Amazonka.ImageBuilder.CreateComponent.CreateComponent
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateComponent.CreateComponent
instance GHC.Generics.Generic Amazonka.ImageBuilder.CreateComponent.CreateComponentResponse
instance GHC.Show.Show Amazonka.ImageBuilder.CreateComponent.CreateComponentResponse
instance GHC.Read.Read Amazonka.ImageBuilder.CreateComponent.CreateComponentResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.CreateComponent.CreateComponentResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.CreateComponent.CreateComponent
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateComponent.CreateComponentResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.CreateComponent.CreateComponent
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CreateComponent.CreateComponent
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.CreateComponent.CreateComponent
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.CreateComponent.CreateComponent
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.CreateComponent.CreateComponent
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.CreateComponent.CreateComponent


-- | CancelImageCreation cancels the creation of Image. This operation can
--   only be used on images in a non-terminal state.
module Amazonka.ImageBuilder.CancelImageCreation

-- | <i>See:</i> <a>newCancelImageCreation</a> smart constructor.
data CancelImageCreation
CancelImageCreation' :: Text -> Text -> CancelImageCreation

-- | The Amazon Resource Name (ARN) of the image whose creation you want to
--   cancel.
[$sel:imageBuildVersionArn:CancelImageCreation'] :: CancelImageCreation -> Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CancelImageCreation'] :: CancelImageCreation -> Text

-- | Create a value of <a>CancelImageCreation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuildVersionArn:CancelImageCreation'</a>,
--   <a>cancelImageCreation_imageBuildVersionArn</a> - The Amazon Resource
--   Name (ARN) of the image whose creation you want to cancel.
--   
--   <a>$sel:clientToken:CancelImageCreation'</a>,
--   <a>cancelImageCreation_clientToken</a> - The idempotency token used to
--   make this request idempotent.
newCancelImageCreation :: Text -> Text -> CancelImageCreation

-- | The Amazon Resource Name (ARN) of the image whose creation you want to
--   cancel.
cancelImageCreation_imageBuildVersionArn :: Lens' CancelImageCreation Text

-- | The idempotency token used to make this request idempotent.
cancelImageCreation_clientToken :: Lens' CancelImageCreation Text

-- | <i>See:</i> <a>newCancelImageCreationResponse</a> smart constructor.
data CancelImageCreationResponse
CancelImageCreationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CancelImageCreationResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:CancelImageCreationResponse'] :: CancelImageCreationResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:CancelImageCreationResponse'] :: CancelImageCreationResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image whose creation has been
--   cancelled.
[$sel:imageBuildVersionArn:CancelImageCreationResponse'] :: CancelImageCreationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CancelImageCreationResponse'] :: CancelImageCreationResponse -> Int

-- | Create a value of <a>CancelImageCreationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CancelImageCreationResponse'</a>,
--   <a>cancelImageCreationResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:CancelImageCreation'</a>,
--   <a>cancelImageCreationResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:imageBuildVersionArn:CancelImageCreation'</a>,
--   <a>cancelImageCreationResponse_imageBuildVersionArn</a> - The Amazon
--   Resource Name (ARN) of the image whose creation has been cancelled.
--   
--   <a>$sel:httpStatus:CancelImageCreationResponse'</a>,
--   <a>cancelImageCreationResponse_httpStatus</a> - The response's http
--   status code.
newCancelImageCreationResponse :: Int -> CancelImageCreationResponse

-- | The request ID that uniquely identifies this request.
cancelImageCreationResponse_requestId :: Lens' CancelImageCreationResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
cancelImageCreationResponse_clientToken :: Lens' CancelImageCreationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image whose creation has been
--   cancelled.
cancelImageCreationResponse_imageBuildVersionArn :: Lens' CancelImageCreationResponse (Maybe Text)

-- | The response's http status code.
cancelImageCreationResponse_httpStatus :: Lens' CancelImageCreationResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreation
instance GHC.Show.Show Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreation
instance GHC.Read.Read Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreation
instance GHC.Classes.Eq Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreation
instance GHC.Generics.Generic Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreationResponse
instance GHC.Show.Show Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreationResponse
instance GHC.Read.Read Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreationResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreationResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreation
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreationResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreation
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreation
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreation
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreation
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreation
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.CancelImageCreation.CancelImageCreation


-- | Removes a tag from a resource.
module Amazonka.ImageBuilder.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to untag.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The tag keys to remove from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource that you want to untag.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys to remove from the resource.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource that you want to untag.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.ImageBuilder.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.ImageBuilder.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.ImageBuilder.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.ImageBuilder.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.ImageBuilder.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.ImageBuilder.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.UntagResource.UntagResource


-- | Updates a new distribution configuration. Distribution configurations
--   define and configure the outputs of your pipeline.
module Amazonka.ImageBuilder.UpdateDistributionConfiguration

-- | <i>See:</i> <a>newUpdateDistributionConfiguration</a> smart
--   constructor.
data UpdateDistributionConfiguration
UpdateDistributionConfiguration' :: Maybe Text -> Text -> [Distribution] -> Text -> UpdateDistributionConfiguration

-- | The description of the distribution configuration.
[$sel:description:UpdateDistributionConfiguration'] :: UpdateDistributionConfiguration -> Maybe Text

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   you want to update.
[$sel:distributionConfigurationArn:UpdateDistributionConfiguration'] :: UpdateDistributionConfiguration -> Text

-- | The distributions of the distribution configuration.
[$sel:distributions:UpdateDistributionConfiguration'] :: UpdateDistributionConfiguration -> [Distribution]

-- | The idempotency token of the distribution configuration.
[$sel:clientToken:UpdateDistributionConfiguration'] :: UpdateDistributionConfiguration -> Text

-- | Create a value of <a>UpdateDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfiguration_description</a> - The description
--   of the distribution configuration.
--   
--   
--   <a>$sel:distributionConfigurationArn:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfiguration_distributionConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of the distribution configuration that
--   you want to update.
--   
--   <a>$sel:distributions:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfiguration_distributions</a> - The
--   distributions of the distribution configuration.
--   
--   <a>$sel:clientToken:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfiguration_clientToken</a> - The idempotency
--   token of the distribution configuration.
newUpdateDistributionConfiguration :: Text -> Text -> UpdateDistributionConfiguration

-- | The description of the distribution configuration.
updateDistributionConfiguration_description :: Lens' UpdateDistributionConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   you want to update.
updateDistributionConfiguration_distributionConfigurationArn :: Lens' UpdateDistributionConfiguration Text

-- | The distributions of the distribution configuration.
updateDistributionConfiguration_distributions :: Lens' UpdateDistributionConfiguration [Distribution]

-- | The idempotency token of the distribution configuration.
updateDistributionConfiguration_clientToken :: Lens' UpdateDistributionConfiguration Text

-- | <i>See:</i> <a>newUpdateDistributionConfigurationResponse</a> smart
--   constructor.
data UpdateDistributionConfigurationResponse
UpdateDistributionConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateDistributionConfigurationResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:UpdateDistributionConfigurationResponse'] :: UpdateDistributionConfigurationResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:UpdateDistributionConfigurationResponse'] :: UpdateDistributionConfigurationResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   was updated by this request.
[$sel:distributionConfigurationArn:UpdateDistributionConfigurationResponse'] :: UpdateDistributionConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateDistributionConfigurationResponse'] :: UpdateDistributionConfigurationResponse -> Int

-- | Create a value of <a>UpdateDistributionConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:UpdateDistributionConfigurationResponse'</a>,
--   <a>updateDistributionConfigurationResponse_requestId</a> - The request
--   ID that uniquely identifies this request.
--   
--   <a>$sel:clientToken:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfigurationResponse_clientToken</a> - The
--   idempotency token used to make this request idempotent.
--   
--   
--   <a>$sel:distributionConfigurationArn:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfigurationResponse_distributionConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the distribution configuration
--   that was updated by this request.
--   
--   <a>$sel:httpStatus:UpdateDistributionConfigurationResponse'</a>,
--   <a>updateDistributionConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateDistributionConfigurationResponse :: Int -> UpdateDistributionConfigurationResponse

-- | The request ID that uniquely identifies this request.
updateDistributionConfigurationResponse_requestId :: Lens' UpdateDistributionConfigurationResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
updateDistributionConfigurationResponse_clientToken :: Lens' UpdateDistributionConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   was updated by this request.
updateDistributionConfigurationResponse_distributionConfigurationArn :: Lens' UpdateDistributionConfigurationResponse (Maybe Text)

-- | The response's http status code.
updateDistributionConfigurationResponse_httpStatus :: Lens' UpdateDistributionConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfiguration
instance GHC.Generics.Generic Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfigurationResponse
instance GHC.Show.Show Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfigurationResponse
instance GHC.Read.Read Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfigurationResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.UpdateDistributionConfiguration.UpdateDistributionConfiguration


-- | Updates an image pipeline. Image pipelines enable you to automate the
--   creation and distribution of images.
--   
--   UpdateImagePipeline does not support selective updates for the
--   pipeline. You must specify all of the required properties in the
--   update request, not just the properties that have changed.
module Amazonka.ImageBuilder.UpdateImagePipeline

-- | <i>See:</i> <a>newUpdateImagePipeline</a> smart constructor.
data UpdateImagePipeline
UpdateImagePipeline' :: Maybe PipelineStatus -> Maybe Text -> Maybe ImageTestsConfiguration -> Maybe Schedule -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> UpdateImagePipeline

-- | The status of the image pipeline.
[$sel:status:UpdateImagePipeline'] :: UpdateImagePipeline -> Maybe PipelineStatus

-- | The Amazon Resource Name (ARN) of the container pipeline to update.
[$sel:containerRecipeArn:UpdateImagePipeline'] :: UpdateImagePipeline -> Maybe Text

-- | The image test configuration of the image pipeline.
[$sel:imageTestsConfiguration:UpdateImagePipeline'] :: UpdateImagePipeline -> Maybe ImageTestsConfiguration

-- | The schedule of the image pipeline.
[$sel:schedule:UpdateImagePipeline'] :: UpdateImagePipeline -> Maybe Schedule

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
[$sel:enhancedImageMetadataEnabled:UpdateImagePipeline'] :: UpdateImagePipeline -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   will be used to configure and distribute images updated by this image
--   pipeline.
[$sel:distributionConfigurationArn:UpdateImagePipeline'] :: UpdateImagePipeline -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image recipe that will be used
--   to configure images updated by this image pipeline.
[$sel:imageRecipeArn:UpdateImagePipeline'] :: UpdateImagePipeline -> Maybe Text

-- | The description of the image pipeline.
[$sel:description:UpdateImagePipeline'] :: UpdateImagePipeline -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image pipeline that you want to
--   update.
[$sel:imagePipelineArn:UpdateImagePipeline'] :: UpdateImagePipeline -> Text

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that will be used to build images updated by this image pipeline.
[$sel:infrastructureConfigurationArn:UpdateImagePipeline'] :: UpdateImagePipeline -> Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:UpdateImagePipeline'] :: UpdateImagePipeline -> Text

-- | Create a value of <a>UpdateImagePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_status</a> - The status of the image pipeline.
--   
--   <a>$sel:containerRecipeArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_containerRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the container pipeline to update.
--   
--   <a>$sel:imageTestsConfiguration:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_imageTestsConfiguration</a> - The image test
--   configuration of the image pipeline.
--   
--   <a>$sel:schedule:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_schedule</a> - The schedule of the image
--   pipeline.
--   
--   <a>$sel:enhancedImageMetadataEnabled:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_enhancedImageMetadataEnabled</a> - Collects
--   additional information about the image being created, including the
--   operating system (OS) version and package list. This information is
--   used to enhance the overall experience of using EC2 Image Builder.
--   Enabled by default.
--   
--   <a>$sel:distributionConfigurationArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_distributionConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the distribution configuration that will be
--   used to configure and distribute images updated by this image
--   pipeline.
--   
--   <a>$sel:imageRecipeArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_imageRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the image recipe that will be used to configure images
--   updated by this image pipeline.
--   
--   <a>$sel:description:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_description</a> - The description of the image
--   pipeline.
--   
--   <a>$sel:imagePipelineArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_imagePipelineArn</a> - The Amazon Resource Name
--   (ARN) of the image pipeline that you want to update.
--   
--   <a>$sel:infrastructureConfigurationArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_infrastructureConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the infrastructure configuration that will be
--   used to build images updated by this image pipeline.
--   
--   <a>$sel:clientToken:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_clientToken</a> - The idempotency token used to
--   make this request idempotent.
newUpdateImagePipeline :: Text -> Text -> Text -> UpdateImagePipeline

-- | The status of the image pipeline.
updateImagePipeline_status :: Lens' UpdateImagePipeline (Maybe PipelineStatus)

-- | The Amazon Resource Name (ARN) of the container pipeline to update.
updateImagePipeline_containerRecipeArn :: Lens' UpdateImagePipeline (Maybe Text)

-- | The image test configuration of the image pipeline.
updateImagePipeline_imageTestsConfiguration :: Lens' UpdateImagePipeline (Maybe ImageTestsConfiguration)

-- | The schedule of the image pipeline.
updateImagePipeline_schedule :: Lens' UpdateImagePipeline (Maybe Schedule)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
updateImagePipeline_enhancedImageMetadataEnabled :: Lens' UpdateImagePipeline (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   will be used to configure and distribute images updated by this image
--   pipeline.
updateImagePipeline_distributionConfigurationArn :: Lens' UpdateImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that will be used
--   to configure images updated by this image pipeline.
updateImagePipeline_imageRecipeArn :: Lens' UpdateImagePipeline (Maybe Text)

-- | The description of the image pipeline.
updateImagePipeline_description :: Lens' UpdateImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image pipeline that you want to
--   update.
updateImagePipeline_imagePipelineArn :: Lens' UpdateImagePipeline Text

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that will be used to build images updated by this image pipeline.
updateImagePipeline_infrastructureConfigurationArn :: Lens' UpdateImagePipeline Text

-- | The idempotency token used to make this request idempotent.
updateImagePipeline_clientToken :: Lens' UpdateImagePipeline Text

-- | <i>See:</i> <a>newUpdateImagePipelineResponse</a> smart constructor.
data UpdateImagePipelineResponse
UpdateImagePipelineResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateImagePipelineResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:UpdateImagePipelineResponse'] :: UpdateImagePipelineResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:UpdateImagePipelineResponse'] :: UpdateImagePipelineResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the image pipeline that was updated
--   by this request.
[$sel:imagePipelineArn:UpdateImagePipelineResponse'] :: UpdateImagePipelineResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateImagePipelineResponse'] :: UpdateImagePipelineResponse -> Int

-- | Create a value of <a>UpdateImagePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:UpdateImagePipelineResponse'</a>,
--   <a>updateImagePipelineResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:UpdateImagePipeline'</a>,
--   <a>updateImagePipelineResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:imagePipelineArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipelineResponse_imagePipelineArn</a> - The Amazon
--   Resource Name (ARN) of the image pipeline that was updated by this
--   request.
--   
--   <a>$sel:httpStatus:UpdateImagePipelineResponse'</a>,
--   <a>updateImagePipelineResponse_httpStatus</a> - The response's http
--   status code.
newUpdateImagePipelineResponse :: Int -> UpdateImagePipelineResponse

-- | The request ID that uniquely identifies this request.
updateImagePipelineResponse_requestId :: Lens' UpdateImagePipelineResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
updateImagePipelineResponse_clientToken :: Lens' UpdateImagePipelineResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image pipeline that was updated
--   by this request.
updateImagePipelineResponse_imagePipelineArn :: Lens' UpdateImagePipelineResponse (Maybe Text)

-- | The response's http status code.
updateImagePipelineResponse_httpStatus :: Lens' UpdateImagePipelineResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipeline
instance GHC.Show.Show Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipeline
instance GHC.Read.Read Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipeline
instance GHC.Classes.Eq Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipeline
instance GHC.Generics.Generic Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipelineResponse
instance GHC.Show.Show Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipelineResponse
instance GHC.Read.Read Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipelineResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipelineResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipeline
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipelineResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipeline
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipeline
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipeline
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipeline
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipeline
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.UpdateImagePipeline.UpdateImagePipeline


-- | Updates a new infrastructure configuration. An infrastructure
--   configuration defines the environment in which your image will be
--   built and tested.
module Amazonka.ImageBuilder.UpdateInfrastructureConfiguration

-- | <i>See:</i> <a>newUpdateInfrastructureConfiguration</a> smart
--   constructor.
data UpdateInfrastructureConfiguration
UpdateInfrastructureConfiguration' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe InstanceMetadataOptions -> Maybe Logging -> Maybe Text -> Maybe Bool -> Text -> Text -> Text -> UpdateInfrastructureConfiguration

-- | The security group IDs to associate with the instance used to
--   customize your Amazon EC2 AMI.
[$sel:securityGroupIds:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Maybe [Text]

-- | The SNS topic on which to send image build events.
[$sel:snsTopicArn:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Maybe Text

-- | The instance types of the infrastructure configuration. You can
--   specify one or more instance types to use for this build. The service
--   will pick one of these instance types based on availability.
[$sel:instanceTypes:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Maybe [Text]

-- | The key pair of the infrastructure configuration. You can use this to
--   log on to and debug the instance used to create your image.
[$sel:keyPair:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Maybe Text

-- | The tags attached to the resource created by Image Builder.
[$sel:resourceTags:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Maybe (HashMap Text Text)

-- | The subnet ID to place the instance used to customize your Amazon EC2
--   AMI in.
[$sel:subnetId:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Maybe Text

-- | The instance metadata options that you can set for the HTTP requests
--   that pipeline builds use to launch EC2 build and test instances. For
--   more information about instance metadata options, see one of the
--   following links:
--   
--   <ul>
--   <li><a>Configure the instance metadata options</a> in the /<i>Amazon
--   EC2 User Guide</i>/ for Linux instances.</li>
--   <li><a>Configure the instance metadata options</a> in the /<i>Amazon
--   EC2 Windows Guide</i>/ for Windows instances.</li>
--   </ul>
[$sel:instanceMetadataOptions:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Maybe InstanceMetadataOptions

-- | The logging configuration of the infrastructure configuration.
[$sel:logging:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Maybe Logging

-- | The description of the infrastructure configuration.
[$sel:description:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Maybe Text

-- | The terminate instance on failure setting of the infrastructure
--   configuration. Set to false if you want Image Builder to retain the
--   instance used to configure your AMI if the build or test phase of your
--   workflow fails.
[$sel:terminateInstanceOnFailure:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Maybe Bool

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that you want to update.
[$sel:infrastructureConfigurationArn:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Text

-- | The instance profile to associate with the instance used to customize
--   your Amazon EC2 AMI.
[$sel:instanceProfileName:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:UpdateInfrastructureConfiguration'] :: UpdateInfrastructureConfiguration -> Text

-- | Create a value of <a>UpdateInfrastructureConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_securityGroupIds</a> - The
--   security group IDs to associate with the instance used to customize
--   your Amazon EC2 AMI.
--   
--   <a>$sel:snsTopicArn:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_snsTopicArn</a> - The SNS topic
--   on which to send image build events.
--   
--   <a>$sel:instanceTypes:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_instanceTypes</a> - The instance
--   types of the infrastructure configuration. You can specify one or more
--   instance types to use for this build. The service will pick one of
--   these instance types based on availability.
--   
--   <a>$sel:keyPair:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_keyPair</a> - The key pair of the
--   infrastructure configuration. You can use this to log on to and debug
--   the instance used to create your image.
--   
--   <a>$sel:resourceTags:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_resourceTags</a> - The tags
--   attached to the resource created by Image Builder.
--   
--   <a>$sel:subnetId:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_subnetId</a> - The subnet ID to
--   place the instance used to customize your Amazon EC2 AMI in.
--   
--   
--   <a>$sel:instanceMetadataOptions:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_instanceMetadataOptions</a> - The
--   instance metadata options that you can set for the HTTP requests that
--   pipeline builds use to launch EC2 build and test instances. For more
--   information about instance metadata options, see one of the following
--   links:
--   
--   <ul>
--   <li><a>Configure the instance metadata options</a> in the /<i>Amazon
--   EC2 User Guide</i>/ for Linux instances.</li>
--   <li><a>Configure the instance metadata options</a> in the /<i>Amazon
--   EC2 Windows Guide</i>/ for Windows instances.</li>
--   </ul>
--   
--   <a>$sel:logging:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_logging</a> - The logging
--   configuration of the infrastructure configuration.
--   
--   <a>$sel:description:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_description</a> - The description
--   of the infrastructure configuration.
--   
--   
--   <a>$sel:terminateInstanceOnFailure:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_terminateInstanceOnFailure</a> -
--   The terminate instance on failure setting of the infrastructure
--   configuration. Set to false if you want Image Builder to retain the
--   instance used to configure your AMI if the build or test phase of your
--   workflow fails.
--   
--   
--   <a>$sel:infrastructureConfigurationArn:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_infrastructureConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the infrastructure configuration
--   that you want to update.
--   
--   <a>$sel:instanceProfileName:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_instanceProfileName</a> - The
--   instance profile to associate with the instance used to customize your
--   Amazon EC2 AMI.
--   
--   <a>$sel:clientToken:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_clientToken</a> - The idempotency
--   token used to make this request idempotent.
newUpdateInfrastructureConfiguration :: Text -> Text -> Text -> UpdateInfrastructureConfiguration

-- | The security group IDs to associate with the instance used to
--   customize your Amazon EC2 AMI.
updateInfrastructureConfiguration_securityGroupIds :: Lens' UpdateInfrastructureConfiguration (Maybe [Text])

-- | The SNS topic on which to send image build events.
updateInfrastructureConfiguration_snsTopicArn :: Lens' UpdateInfrastructureConfiguration (Maybe Text)

-- | The instance types of the infrastructure configuration. You can
--   specify one or more instance types to use for this build. The service
--   will pick one of these instance types based on availability.
updateInfrastructureConfiguration_instanceTypes :: Lens' UpdateInfrastructureConfiguration (Maybe [Text])

-- | The key pair of the infrastructure configuration. You can use this to
--   log on to and debug the instance used to create your image.
updateInfrastructureConfiguration_keyPair :: Lens' UpdateInfrastructureConfiguration (Maybe Text)

-- | The tags attached to the resource created by Image Builder.
updateInfrastructureConfiguration_resourceTags :: Lens' UpdateInfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The subnet ID to place the instance used to customize your Amazon EC2
--   AMI in.
updateInfrastructureConfiguration_subnetId :: Lens' UpdateInfrastructureConfiguration (Maybe Text)

-- | The instance metadata options that you can set for the HTTP requests
--   that pipeline builds use to launch EC2 build and test instances. For
--   more information about instance metadata options, see one of the
--   following links:
--   
--   <ul>
--   <li><a>Configure the instance metadata options</a> in the /<i>Amazon
--   EC2 User Guide</i>/ for Linux instances.</li>
--   <li><a>Configure the instance metadata options</a> in the /<i>Amazon
--   EC2 Windows Guide</i>/ for Windows instances.</li>
--   </ul>
updateInfrastructureConfiguration_instanceMetadataOptions :: Lens' UpdateInfrastructureConfiguration (Maybe InstanceMetadataOptions)

-- | The logging configuration of the infrastructure configuration.
updateInfrastructureConfiguration_logging :: Lens' UpdateInfrastructureConfiguration (Maybe Logging)

-- | The description of the infrastructure configuration.
updateInfrastructureConfiguration_description :: Lens' UpdateInfrastructureConfiguration (Maybe Text)

-- | The terminate instance on failure setting of the infrastructure
--   configuration. Set to false if you want Image Builder to retain the
--   instance used to configure your AMI if the build or test phase of your
--   workflow fails.
updateInfrastructureConfiguration_terminateInstanceOnFailure :: Lens' UpdateInfrastructureConfiguration (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that you want to update.
updateInfrastructureConfiguration_infrastructureConfigurationArn :: Lens' UpdateInfrastructureConfiguration Text

-- | The instance profile to associate with the instance used to customize
--   your Amazon EC2 AMI.
updateInfrastructureConfiguration_instanceProfileName :: Lens' UpdateInfrastructureConfiguration Text

-- | The idempotency token used to make this request idempotent.
updateInfrastructureConfiguration_clientToken :: Lens' UpdateInfrastructureConfiguration Text

-- | <i>See:</i> <a>newUpdateInfrastructureConfigurationResponse</a> smart
--   constructor.
data UpdateInfrastructureConfigurationResponse
UpdateInfrastructureConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateInfrastructureConfigurationResponse

-- | The request ID that uniquely identifies this request.
[$sel:requestId:UpdateInfrastructureConfigurationResponse'] :: UpdateInfrastructureConfigurationResponse -> Maybe Text

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was updated by this request.
[$sel:infrastructureConfigurationArn:UpdateInfrastructureConfigurationResponse'] :: UpdateInfrastructureConfigurationResponse -> Maybe Text

-- | The idempotency token used to make this request idempotent.
[$sel:clientToken:UpdateInfrastructureConfigurationResponse'] :: UpdateInfrastructureConfigurationResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateInfrastructureConfigurationResponse'] :: UpdateInfrastructureConfigurationResponse -> Int

-- | Create a value of <a>UpdateInfrastructureConfigurationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:UpdateInfrastructureConfigurationResponse'</a>,
--   <a>updateInfrastructureConfigurationResponse_requestId</a> - The
--   request ID that uniquely identifies this request.
--   
--   
--   <a>$sel:infrastructureConfigurationArn:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfigurationResponse_infrastructureConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was updated by this request.
--   
--   <a>$sel:clientToken:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfigurationResponse_clientToken</a> - The
--   idempotency token used to make this request idempotent.
--   
--   <a>$sel:httpStatus:UpdateInfrastructureConfigurationResponse'</a>,
--   <a>updateInfrastructureConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateInfrastructureConfigurationResponse :: Int -> UpdateInfrastructureConfigurationResponse

-- | The request ID that uniquely identifies this request.
updateInfrastructureConfigurationResponse_requestId :: Lens' UpdateInfrastructureConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was updated by this request.
updateInfrastructureConfigurationResponse_infrastructureConfigurationArn :: Lens' UpdateInfrastructureConfigurationResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
updateInfrastructureConfigurationResponse_clientToken :: Lens' UpdateInfrastructureConfigurationResponse (Maybe Text)

-- | The response's http status code.
updateInfrastructureConfigurationResponse_httpStatus :: Lens' UpdateInfrastructureConfigurationResponse Int
instance GHC.Generics.Generic Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfiguration
instance GHC.Show.Show Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfiguration
instance GHC.Read.Read Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfiguration
instance GHC.Classes.Eq Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfiguration
instance GHC.Generics.Generic Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfigurationResponse
instance GHC.Show.Show Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfigurationResponse
instance GHC.Read.Read Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfigurationResponse
instance GHC.Classes.Eq Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfigurationResponse
instance Amazonka.Types.AWSRequest Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfigurationResponse
instance Data.Hashable.Class.Hashable Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfiguration
instance Control.DeepSeq.NFData Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfiguration
instance Amazonka.Data.Headers.ToHeaders Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfiguration
instance Amazonka.Data.Path.ToPath Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfiguration
instance Amazonka.Data.Query.ToQuery Amazonka.ImageBuilder.UpdateInfrastructureConfiguration.UpdateInfrastructureConfiguration


module Amazonka.ImageBuilder.Lens

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImagePackages_nextToken :: Lens' ListImagePackages (Maybe Text)

-- | The maxiumum number of results to return from the ListImagePackages
--   request.
listImagePackages_maxResults :: Lens' ListImagePackages (Maybe Natural)

-- | Filter results for the ListImagePackages request by the Image Build
--   Version ARN
listImagePackages_imageBuildVersionArn :: Lens' ListImagePackages Text

-- | The request ID that uniquely identifies this request.
listImagePackagesResponse_requestId :: Lens' ListImagePackagesResponse (Maybe Text)

-- | The list of Image Packages returned in the response.
listImagePackagesResponse_imagePackageList :: Lens' ListImagePackagesResponse (Maybe [ImagePackage])

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImagePackagesResponse_nextToken :: Lens' ListImagePackagesResponse (Maybe Text)

-- | The response's http status code.
listImagePackagesResponse_httpStatus :: Lens' ListImagePackagesResponse Int

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   you want to retrieve.
getDistributionConfiguration_distributionConfigurationArn :: Lens' GetDistributionConfiguration Text

-- | The request ID that uniquely identifies this request.
getDistributionConfigurationResponse_requestId :: Lens' GetDistributionConfigurationResponse (Maybe Text)

-- | The distribution configuration object.
getDistributionConfigurationResponse_distributionConfiguration :: Lens' GetDistributionConfigurationResponse (Maybe DistributionConfiguration)

-- | The response's http status code.
getDistributionConfigurationResponse_httpStatus :: Lens' GetDistributionConfigurationResponse Int

-- | The data of the component. Used to specify the data inline. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
importComponent_data :: Lens' ImportComponent (Maybe Text)

-- | The uri of the component. Must be an Amazon S3 URL and the requester
--   must have permission to access the Amazon S3 bucket. If you use Amazon
--   S3, you can specify component content up to your service quota. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
importComponent_uri :: Lens' ImportComponent (Maybe Text)

-- | The ID of the KMS key that should be used to encrypt this component.
importComponent_kmsKeyId :: Lens' ImportComponent (Maybe Text)

-- | The change description of the component. Describes what change has
--   been made in this version, or what makes this version different from
--   other versions of this component.
importComponent_changeDescription :: Lens' ImportComponent (Maybe Text)

-- | The description of the component. Describes the contents of the
--   component.
importComponent_description :: Lens' ImportComponent (Maybe Text)

-- | The tags of the component.
importComponent_tags :: Lens' ImportComponent (Maybe (HashMap Text Text))

-- | The name of the component.
importComponent_name :: Lens' ImportComponent Text

-- | The semantic version of the component. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
importComponent_semanticVersion :: Lens' ImportComponent Text

-- | The type of the component denotes whether the component is used to
--   build the image, or only to test it.
importComponent_type :: Lens' ImportComponent ComponentType

-- | The format of the resource that you want to import as a component.
importComponent_format :: Lens' ImportComponent ComponentFormat

-- | The platform of the component.
importComponent_platform :: Lens' ImportComponent Platform

-- | The idempotency token of the component.
importComponent_clientToken :: Lens' ImportComponent Text

-- | The request ID that uniquely identifies this request.
importComponentResponse_requestId :: Lens' ImportComponentResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
importComponentResponse_clientToken :: Lens' ImportComponentResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the imported component.
importComponentResponse_componentBuildVersionArn :: Lens' ImportComponentResponse (Maybe Text)

-- | The response's http status code.
importComponentResponse_httpStatus :: Lens' ImportComponentResponse Int

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listComponentBuildVersions_nextToken :: Lens' ListComponentBuildVersions (Maybe Text)

-- | The maximum items to return in a request.
listComponentBuildVersions_maxResults :: Lens' ListComponentBuildVersions (Maybe Natural)

-- | The component version Amazon Resource Name (ARN) whose versions you
--   want to list.
listComponentBuildVersions_componentVersionArn :: Lens' ListComponentBuildVersions Text

-- | The request ID that uniquely identifies this request.
listComponentBuildVersionsResponse_requestId :: Lens' ListComponentBuildVersionsResponse (Maybe Text)

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listComponentBuildVersionsResponse_nextToken :: Lens' ListComponentBuildVersionsResponse (Maybe Text)

-- | The list of component summaries for the specified semantic version.
listComponentBuildVersionsResponse_componentSummaryList :: Lens' ListComponentBuildVersionsResponse (Maybe [ComponentSummary])

-- | The response's http status code.
listComponentBuildVersionsResponse_httpStatus :: Lens' ListComponentBuildVersionsResponse Int

-- | The Amazon Resource Name (ARN) of the resource whose tags you want to
--   retrieve.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | The tags for the specified resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>osVersion</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
listImageBuildVersions_filters :: Lens' ListImageBuildVersions (Maybe (NonEmpty Filter))

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImageBuildVersions_nextToken :: Lens' ListImageBuildVersions (Maybe Text)

-- | The maximum items to return in a request.
listImageBuildVersions_maxResults :: Lens' ListImageBuildVersions (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the image whose build versions you
--   want to retrieve.
listImageBuildVersions_imageVersionArn :: Lens' ListImageBuildVersions Text

-- | The request ID that uniquely identifies this request.
listImageBuildVersionsResponse_requestId :: Lens' ListImageBuildVersionsResponse (Maybe Text)

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listImageBuildVersionsResponse_nextToken :: Lens' ListImageBuildVersionsResponse (Maybe Text)

-- | The list of image build versions.
listImageBuildVersionsResponse_imageSummaryList :: Lens' ListImageBuildVersionsResponse (Maybe [ImageSummary])

-- | The response's http status code.
listImageBuildVersionsResponse_httpStatus :: Lens' ListImageBuildVersionsResponse Int

-- | The Amazon Resource Name (ARN) of the image whose creation you want to
--   cancel.
cancelImageCreation_imageBuildVersionArn :: Lens' CancelImageCreation Text

-- | The idempotency token used to make this request idempotent.
cancelImageCreation_clientToken :: Lens' CancelImageCreation Text

-- | The request ID that uniquely identifies this request.
cancelImageCreationResponse_requestId :: Lens' CancelImageCreationResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
cancelImageCreationResponse_clientToken :: Lens' CancelImageCreationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image whose creation has been
--   cancelled.
cancelImageCreationResponse_imageBuildVersionArn :: Lens' CancelImageCreationResponse (Maybe Text)

-- | The response's http status code.
cancelImageCreationResponse_httpStatus :: Lens' CancelImageCreationResponse Int

-- | The Amazon Resource Name (ARN) of the image pipeline that you want to
--   retrieve.
getImagePipeline_imagePipelineArn :: Lens' GetImagePipeline Text

-- | The request ID that uniquely identifies this request.
getImagePipelineResponse_requestId :: Lens' GetImagePipelineResponse (Maybe Text)

-- | The image pipeline object.
getImagePipelineResponse_imagePipeline :: Lens' GetImagePipelineResponse (Maybe ImagePipeline)

-- | The response's http status code.
getImagePipelineResponse_httpStatus :: Lens' GetImagePipelineResponse Int

-- | The security group IDs to associate with the instance used to
--   customize your Amazon EC2 AMI.
createInfrastructureConfiguration_securityGroupIds :: Lens' CreateInfrastructureConfiguration (Maybe [Text])

-- | The SNS topic on which to send image build events.
createInfrastructureConfiguration_snsTopicArn :: Lens' CreateInfrastructureConfiguration (Maybe Text)

-- | The instance types of the infrastructure configuration. You can
--   specify one or more instance types to use for this build. The service
--   will pick one of these instance types based on availability.
createInfrastructureConfiguration_instanceTypes :: Lens' CreateInfrastructureConfiguration (Maybe [Text])

-- | The key pair of the infrastructure configuration. You can use this to
--   log on to and debug the instance used to create your image.
createInfrastructureConfiguration_keyPair :: Lens' CreateInfrastructureConfiguration (Maybe Text)

-- | The tags attached to the resource created by Image Builder.
createInfrastructureConfiguration_resourceTags :: Lens' CreateInfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The subnet ID in which to place the instance used to customize your
--   Amazon EC2 AMI.
createInfrastructureConfiguration_subnetId :: Lens' CreateInfrastructureConfiguration (Maybe Text)

-- | The instance metadata options that you can set for the HTTP requests
--   that pipeline builds use to launch EC2 build and test instances.
createInfrastructureConfiguration_instanceMetadataOptions :: Lens' CreateInfrastructureConfiguration (Maybe InstanceMetadataOptions)

-- | The logging configuration of the infrastructure configuration.
createInfrastructureConfiguration_logging :: Lens' CreateInfrastructureConfiguration (Maybe Logging)

-- | The description of the infrastructure configuration.
createInfrastructureConfiguration_description :: Lens' CreateInfrastructureConfiguration (Maybe Text)

-- | The tags of the infrastructure configuration.
createInfrastructureConfiguration_tags :: Lens' CreateInfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The terminate instance on failure setting of the infrastructure
--   configuration. Set to false if you want Image Builder to retain the
--   instance used to configure your AMI if the build or test phase of your
--   workflow fails.
createInfrastructureConfiguration_terminateInstanceOnFailure :: Lens' CreateInfrastructureConfiguration (Maybe Bool)

-- | The name of the infrastructure configuration.
createInfrastructureConfiguration_name :: Lens' CreateInfrastructureConfiguration Text

-- | The instance profile to associate with the instance used to customize
--   your Amazon EC2 AMI.
createInfrastructureConfiguration_instanceProfileName :: Lens' CreateInfrastructureConfiguration Text

-- | The idempotency token used to make this request idempotent.
createInfrastructureConfiguration_clientToken :: Lens' CreateInfrastructureConfiguration Text

-- | The request ID that uniquely identifies this request.
createInfrastructureConfigurationResponse_requestId :: Lens' CreateInfrastructureConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was created by this request.
createInfrastructureConfigurationResponse_infrastructureConfigurationArn :: Lens' CreateInfrastructureConfigurationResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createInfrastructureConfigurationResponse_clientToken :: Lens' CreateInfrastructureConfigurationResponse (Maybe Text)

-- | The response's http status code.
createInfrastructureConfigurationResponse_httpStatus :: Lens' CreateInfrastructureConfigurationResponse Int

-- | You can filter on <tt>name</tt> to streamline results.
listDistributionConfigurations_filters :: Lens' ListDistributionConfigurations (Maybe (NonEmpty Filter))

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listDistributionConfigurations_nextToken :: Lens' ListDistributionConfigurations (Maybe Text)

-- | The maximum items to return in a request.
listDistributionConfigurations_maxResults :: Lens' ListDistributionConfigurations (Maybe Natural)

-- | The request ID that uniquely identifies this request.
listDistributionConfigurationsResponse_requestId :: Lens' ListDistributionConfigurationsResponse (Maybe Text)

-- | The list of distributions.
listDistributionConfigurationsResponse_distributionConfigurationSummaryList :: Lens' ListDistributionConfigurationsResponse (Maybe [DistributionConfigurationSummary])

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listDistributionConfigurationsResponse_nextToken :: Lens' ListDistributionConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listDistributionConfigurationsResponse_httpStatus :: Lens' ListDistributionConfigurationsResponse Int

-- | The Dockerfile template used to build your image as an inline data
--   blob.
createContainerRecipe_dockerfileTemplateData :: Lens' CreateContainerRecipe (Maybe Text)

-- | Specifies the operating system version for the base image.
createContainerRecipe_imageOsVersionOverride :: Lens' CreateContainerRecipe (Maybe Text)

-- | The working directory for use during build and test workflows.
createContainerRecipe_workingDirectory :: Lens' CreateContainerRecipe (Maybe Text)

-- | The Amazon S3 URI for the Dockerfile that will be used to build your
--   container image.
createContainerRecipe_dockerfileTemplateUri :: Lens' CreateContainerRecipe (Maybe Text)

-- | Identifies which KMS key is used to encrypt the container image.
createContainerRecipe_kmsKeyId :: Lens' CreateContainerRecipe (Maybe Text)

-- | Specifies the operating system platform when you use a custom base
--   image.
createContainerRecipe_platformOverride :: Lens' CreateContainerRecipe (Maybe Platform)

-- | The description of the container recipe.
createContainerRecipe_description :: Lens' CreateContainerRecipe (Maybe Text)

-- | Tags that are attached to the container recipe.
createContainerRecipe_tags :: Lens' CreateContainerRecipe (Maybe (HashMap Text Text))

-- | A group of options that can be used to configure an instance for
--   building and testing container images.
createContainerRecipe_instanceConfiguration :: Lens' CreateContainerRecipe (Maybe InstanceConfiguration)

-- | The type of container to create.
createContainerRecipe_containerType :: Lens' CreateContainerRecipe ContainerType

-- | The name of the container recipe.
createContainerRecipe_name :: Lens' CreateContainerRecipe Text

-- | The semantic version of the container recipe. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
createContainerRecipe_semanticVersion :: Lens' CreateContainerRecipe Text

-- | Components for build and test that are included in the container
--   recipe.
createContainerRecipe_components :: Lens' CreateContainerRecipe (NonEmpty ComponentConfiguration)

-- | The base image for the container recipe.
createContainerRecipe_parentImage :: Lens' CreateContainerRecipe Text

-- | The destination repository for the container image.
createContainerRecipe_targetRepository :: Lens' CreateContainerRecipe TargetContainerRepository

-- | The client token used to make this request idempotent.
createContainerRecipe_clientToken :: Lens' CreateContainerRecipe Text

-- | The request ID that uniquely identifies this request.
createContainerRecipeResponse_requestId :: Lens' CreateContainerRecipeResponse (Maybe Text)

-- | The client token used to make this request idempotent.
createContainerRecipeResponse_clientToken :: Lens' CreateContainerRecipeResponse (Maybe Text)

-- | Returns the Amazon Resource Name (ARN) of the container recipe that
--   the request created.
createContainerRecipeResponse_containerRecipeArn :: Lens' CreateContainerRecipeResponse (Maybe Text)

-- | The response's http status code.
createContainerRecipeResponse_httpStatus :: Lens' CreateContainerRecipeResponse Int

-- | You can filter on <tt>name</tt> to streamline results.
listInfrastructureConfigurations_filters :: Lens' ListInfrastructureConfigurations (Maybe (NonEmpty Filter))

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listInfrastructureConfigurations_nextToken :: Lens' ListInfrastructureConfigurations (Maybe Text)

-- | The maximum items to return in a request.
listInfrastructureConfigurations_maxResults :: Lens' ListInfrastructureConfigurations (Maybe Natural)

-- | The request ID that uniquely identifies this request.
listInfrastructureConfigurationsResponse_requestId :: Lens' ListInfrastructureConfigurationsResponse (Maybe Text)

-- | The list of infrastructure configurations.
listInfrastructureConfigurationsResponse_infrastructureConfigurationSummaryList :: Lens' ListInfrastructureConfigurationsResponse (Maybe [InfrastructureConfigurationSummary])

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listInfrastructureConfigurationsResponse_nextToken :: Lens' ListInfrastructureConfigurationsResponse (Maybe Text)

-- | The response's http status code.
listInfrastructureConfigurationsResponse_httpStatus :: Lens' ListInfrastructureConfigurationsResponse Int

-- | The Amazon Resource Name (ARN) of the image recipe that this policy
--   should be applied to.
putImageRecipePolicy_imageRecipeArn :: Lens' PutImageRecipePolicy Text

-- | The policy to apply.
putImageRecipePolicy_policy :: Lens' PutImageRecipePolicy Text

-- | The request ID that uniquely identifies this request.
putImageRecipePolicyResponse_requestId :: Lens' PutImageRecipePolicyResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that this policy
--   was applied to.
putImageRecipePolicyResponse_imageRecipeArn :: Lens' PutImageRecipePolicyResponse (Maybe Text)

-- | The response's http status code.
putImageRecipePolicyResponse_httpStatus :: Lens' PutImageRecipePolicyResponse Int

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>containerType</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>parentImage</pre></li>
--   <li><pre>platform</pre></li>
--   </ul>
listContainerRecipes_filters :: Lens' ListContainerRecipes (Maybe (NonEmpty Filter))

-- | Returns container recipes belonging to the specified owner, that have
--   been shared with you. You can omit this field to return container
--   recipes belonging to your account.
listContainerRecipes_owner :: Lens' ListContainerRecipes (Maybe Ownership)

-- | Provides a token for pagination, which determines where to begin the
--   next set of results when the current set reaches the maximum for one
--   request.
listContainerRecipes_nextToken :: Lens' ListContainerRecipes (Maybe Text)

-- | The maximum number of results to return in the list.
listContainerRecipes_maxResults :: Lens' ListContainerRecipes (Maybe Natural)

-- | The request ID that uniquely identifies this request.
listContainerRecipesResponse_requestId :: Lens' ListContainerRecipesResponse (Maybe Text)

-- | The list of container recipes returned for the request.
listContainerRecipesResponse_containerRecipeSummaryList :: Lens' ListContainerRecipesResponse (Maybe [ContainerRecipeSummary])

-- | The next token field is used for paginated responses. When this is not
--   empty, there are additional container recipes that the service has not
--   included in this response. Use this token with the next request to
--   retrieve additional list items.
listContainerRecipesResponse_nextToken :: Lens' ListContainerRecipesResponse (Maybe Text)

-- | The response's http status code.
listContainerRecipesResponse_httpStatus :: Lens' ListContainerRecipesResponse Int

-- | The Amazon Resource Name (ARN) of the image that this policy should be
--   applied to.
putImagePolicy_imageArn :: Lens' PutImagePolicy Text

-- | The policy to apply.
putImagePolicy_policy :: Lens' PutImagePolicy Text

-- | The request ID that uniquely identifies this request.
putImagePolicyResponse_requestId :: Lens' PutImagePolicyResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image that this policy was
--   applied to.
putImagePolicyResponse_imageArn :: Lens' PutImagePolicyResponse (Maybe Text)

-- | The response's http status code.
putImagePolicyResponse_httpStatus :: Lens' PutImagePolicyResponse Int

-- | The Amazon Resource Name (ARN) of the container recipe to delete.
deleteContainerRecipe_containerRecipeArn :: Lens' DeleteContainerRecipe Text

-- | The request ID that uniquely identifies this request.
deleteContainerRecipeResponse_requestId :: Lens' DeleteContainerRecipeResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the container recipe that was
--   deleted.
deleteContainerRecipeResponse_containerRecipeArn :: Lens' DeleteContainerRecipeResponse (Maybe Text)

-- | The response's http status code.
deleteContainerRecipeResponse_httpStatus :: Lens' DeleteContainerRecipeResponse Int

-- | The Amazon Resource Name (ARN) of the component that this policy
--   should be applied to.
putComponentPolicy_componentArn :: Lens' PutComponentPolicy Text

-- | The policy to apply.
putComponentPolicy_policy :: Lens' PutComponentPolicy Text

-- | The request ID that uniquely identifies this request.
putComponentPolicyResponse_requestId :: Lens' PutComponentPolicyResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the component that this policy was
--   applied to.
putComponentPolicyResponse_componentArn :: Lens' PutComponentPolicyResponse (Maybe Text)

-- | The response's http status code.
putComponentPolicyResponse_httpStatus :: Lens' PutComponentPolicyResponse Int

-- | The Amazon Resource Name (ARN) of the infrastructure configuration to
--   delete.
deleteInfrastructureConfiguration_infrastructureConfigurationArn :: Lens' DeleteInfrastructureConfiguration Text

-- | The request ID that uniquely identifies this request.
deleteInfrastructureConfigurationResponse_requestId :: Lens' DeleteInfrastructureConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was deleted.
deleteInfrastructureConfigurationResponse_infrastructureConfigurationArn :: Lens' DeleteInfrastructureConfigurationResponse (Maybe Text)

-- | The response's http status code.
deleteInfrastructureConfigurationResponse_httpStatus :: Lens' DeleteInfrastructureConfigurationResponse Int

-- | The security group IDs to associate with the instance used to
--   customize your Amazon EC2 AMI.
updateInfrastructureConfiguration_securityGroupIds :: Lens' UpdateInfrastructureConfiguration (Maybe [Text])

-- | The SNS topic on which to send image build events.
updateInfrastructureConfiguration_snsTopicArn :: Lens' UpdateInfrastructureConfiguration (Maybe Text)

-- | The instance types of the infrastructure configuration. You can
--   specify one or more instance types to use for this build. The service
--   will pick one of these instance types based on availability.
updateInfrastructureConfiguration_instanceTypes :: Lens' UpdateInfrastructureConfiguration (Maybe [Text])

-- | The key pair of the infrastructure configuration. You can use this to
--   log on to and debug the instance used to create your image.
updateInfrastructureConfiguration_keyPair :: Lens' UpdateInfrastructureConfiguration (Maybe Text)

-- | The tags attached to the resource created by Image Builder.
updateInfrastructureConfiguration_resourceTags :: Lens' UpdateInfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The subnet ID to place the instance used to customize your Amazon EC2
--   AMI in.
updateInfrastructureConfiguration_subnetId :: Lens' UpdateInfrastructureConfiguration (Maybe Text)

-- | The instance metadata options that you can set for the HTTP requests
--   that pipeline builds use to launch EC2 build and test instances. For
--   more information about instance metadata options, see one of the
--   following links:
--   
--   <ul>
--   <li><a>Configure the instance metadata options</a> in the /<i>Amazon
--   EC2 User Guide</i>/ for Linux instances.</li>
--   <li><a>Configure the instance metadata options</a> in the /<i>Amazon
--   EC2 Windows Guide</i>/ for Windows instances.</li>
--   </ul>
updateInfrastructureConfiguration_instanceMetadataOptions :: Lens' UpdateInfrastructureConfiguration (Maybe InstanceMetadataOptions)

-- | The logging configuration of the infrastructure configuration.
updateInfrastructureConfiguration_logging :: Lens' UpdateInfrastructureConfiguration (Maybe Logging)

-- | The description of the infrastructure configuration.
updateInfrastructureConfiguration_description :: Lens' UpdateInfrastructureConfiguration (Maybe Text)

-- | The terminate instance on failure setting of the infrastructure
--   configuration. Set to false if you want Image Builder to retain the
--   instance used to configure your AMI if the build or test phase of your
--   workflow fails.
updateInfrastructureConfiguration_terminateInstanceOnFailure :: Lens' UpdateInfrastructureConfiguration (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that you want to update.
updateInfrastructureConfiguration_infrastructureConfigurationArn :: Lens' UpdateInfrastructureConfiguration Text

-- | The instance profile to associate with the instance used to customize
--   your Amazon EC2 AMI.
updateInfrastructureConfiguration_instanceProfileName :: Lens' UpdateInfrastructureConfiguration Text

-- | The idempotency token used to make this request idempotent.
updateInfrastructureConfiguration_clientToken :: Lens' UpdateInfrastructureConfiguration Text

-- | The request ID that uniquely identifies this request.
updateInfrastructureConfigurationResponse_requestId :: Lens' UpdateInfrastructureConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was updated by this request.
updateInfrastructureConfigurationResponse_infrastructureConfigurationArn :: Lens' UpdateInfrastructureConfigurationResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
updateInfrastructureConfigurationResponse_clientToken :: Lens' UpdateInfrastructureConfigurationResponse (Maybe Text)

-- | The response's http status code.
updateInfrastructureConfigurationResponse_httpStatus :: Lens' UpdateInfrastructureConfigurationResponse Int

-- | The status of the image pipeline.
createImagePipeline_status :: Lens' CreateImagePipeline (Maybe PipelineStatus)

-- | The Amazon Resource Name (ARN) of the container recipe that is used to
--   configure images created by this container pipeline.
createImagePipeline_containerRecipeArn :: Lens' CreateImagePipeline (Maybe Text)

-- | The image test configuration of the image pipeline.
createImagePipeline_imageTestsConfiguration :: Lens' CreateImagePipeline (Maybe ImageTestsConfiguration)

-- | The schedule of the image pipeline.
createImagePipeline_schedule :: Lens' CreateImagePipeline (Maybe Schedule)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
createImagePipeline_enhancedImageMetadataEnabled :: Lens' CreateImagePipeline (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   will be used to configure and distribute images created by this image
--   pipeline.
createImagePipeline_distributionConfigurationArn :: Lens' CreateImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that will be used
--   to configure images created by this image pipeline.
createImagePipeline_imageRecipeArn :: Lens' CreateImagePipeline (Maybe Text)

-- | The description of the image pipeline.
createImagePipeline_description :: Lens' CreateImagePipeline (Maybe Text)

-- | The tags of the image pipeline.
createImagePipeline_tags :: Lens' CreateImagePipeline (Maybe (HashMap Text Text))

-- | The name of the image pipeline.
createImagePipeline_name :: Lens' CreateImagePipeline Text

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that will be used to build images created by this image pipeline.
createImagePipeline_infrastructureConfigurationArn :: Lens' CreateImagePipeline Text

-- | The idempotency token used to make this request idempotent.
createImagePipeline_clientToken :: Lens' CreateImagePipeline Text

-- | The request ID that uniquely identifies this request.
createImagePipelineResponse_requestId :: Lens' CreateImagePipelineResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createImagePipelineResponse_clientToken :: Lens' CreateImagePipelineResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image pipeline that was created
--   by this request.
createImagePipelineResponse_imagePipelineArn :: Lens' CreateImagePipelineResponse (Maybe Text)

-- | The response's http status code.
createImagePipelineResponse_httpStatus :: Lens' CreateImagePipelineResponse Int

-- | The Amazon Resource Name (ARN) of the container recipe to retrieve.
getContainerRecipe_containerRecipeArn :: Lens' GetContainerRecipe Text

-- | The request ID that uniquely identifies this request.
getContainerRecipeResponse_requestId :: Lens' GetContainerRecipeResponse (Maybe Text)

-- | The container recipe object that is returned.
getContainerRecipeResponse_containerRecipe :: Lens' GetContainerRecipeResponse (Maybe ContainerRecipe)

-- | The response's http status code.
getContainerRecipeResponse_httpStatus :: Lens' GetContainerRecipeResponse Int

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that you want to retrieve.
getInfrastructureConfiguration_infrastructureConfigurationArn :: Lens' GetInfrastructureConfiguration Text

-- | The request ID that uniquely identifies this request.
getInfrastructureConfigurationResponse_requestId :: Lens' GetInfrastructureConfigurationResponse (Maybe Text)

-- | The infrastructure configuration object.
getInfrastructureConfigurationResponse_infrastructureConfiguration :: Lens' GetInfrastructureConfigurationResponse (Maybe InfrastructureConfiguration)

-- | The response's http status code.
getInfrastructureConfigurationResponse_httpStatus :: Lens' GetInfrastructureConfigurationResponse Int

-- | The Amazon Resource Name (ARN) of the image whose policy you want to
--   retrieve.
getImagePolicy_imageArn :: Lens' GetImagePolicy Text

-- | The request ID that uniquely identifies this request.
getImagePolicyResponse_requestId :: Lens' GetImagePolicyResponse (Maybe Text)

-- | The image policy object.
getImagePolicyResponse_policy :: Lens' GetImagePolicyResponse (Maybe Text)

-- | The response's http status code.
getImagePolicyResponse_httpStatus :: Lens' GetImagePolicyResponse Int

-- | The Amazon Resource Name (ARN) of the image recipe whose policy you
--   want to retrieve.
getImageRecipePolicy_imageRecipeArn :: Lens' GetImageRecipePolicy Text

-- | The request ID that uniquely identifies this request.
getImageRecipePolicyResponse_requestId :: Lens' GetImageRecipePolicyResponse (Maybe Text)

-- | The image recipe policy object.
getImageRecipePolicyResponse_policy :: Lens' GetImageRecipePolicyResponse (Maybe Text)

-- | The response's http status code.
getImageRecipePolicyResponse_httpStatus :: Lens' GetImageRecipePolicyResponse Int

-- | The Amazon Resource Name (ARN) of the component whose policy you want
--   to retrieve.
getComponentPolicy_componentArn :: Lens' GetComponentPolicy Text

-- | The request ID that uniquely identifies this request.
getComponentPolicyResponse_requestId :: Lens' GetComponentPolicyResponse (Maybe Text)

-- | The component policy.
getComponentPolicyResponse_policy :: Lens' GetComponentPolicyResponse (Maybe Text)

-- | The response's http status code.
getComponentPolicyResponse_httpStatus :: Lens' GetComponentPolicyResponse Int

-- | The Amazon Resource Name (ARN) of the image pipeline to delete.
deleteImagePipeline_imagePipelineArn :: Lens' DeleteImagePipeline Text

-- | The request ID that uniquely identifies this request.
deleteImagePipelineResponse_requestId :: Lens' DeleteImagePipelineResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image pipeline that was deleted.
deleteImagePipelineResponse_imagePipelineArn :: Lens' DeleteImagePipelineResponse (Maybe Text)

-- | The response's http status code.
deleteImagePipelineResponse_httpStatus :: Lens' DeleteImagePipelineResponse Int

-- | The status of the image pipeline.
updateImagePipeline_status :: Lens' UpdateImagePipeline (Maybe PipelineStatus)

-- | The Amazon Resource Name (ARN) of the container pipeline to update.
updateImagePipeline_containerRecipeArn :: Lens' UpdateImagePipeline (Maybe Text)

-- | The image test configuration of the image pipeline.
updateImagePipeline_imageTestsConfiguration :: Lens' UpdateImagePipeline (Maybe ImageTestsConfiguration)

-- | The schedule of the image pipeline.
updateImagePipeline_schedule :: Lens' UpdateImagePipeline (Maybe Schedule)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
updateImagePipeline_enhancedImageMetadataEnabled :: Lens' UpdateImagePipeline (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   will be used to configure and distribute images updated by this image
--   pipeline.
updateImagePipeline_distributionConfigurationArn :: Lens' UpdateImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that will be used
--   to configure images updated by this image pipeline.
updateImagePipeline_imageRecipeArn :: Lens' UpdateImagePipeline (Maybe Text)

-- | The description of the image pipeline.
updateImagePipeline_description :: Lens' UpdateImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image pipeline that you want to
--   update.
updateImagePipeline_imagePipelineArn :: Lens' UpdateImagePipeline Text

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that will be used to build images updated by this image pipeline.
updateImagePipeline_infrastructureConfigurationArn :: Lens' UpdateImagePipeline Text

-- | The idempotency token used to make this request idempotent.
updateImagePipeline_clientToken :: Lens' UpdateImagePipeline Text

-- | The request ID that uniquely identifies this request.
updateImagePipelineResponse_requestId :: Lens' UpdateImagePipelineResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
updateImagePipelineResponse_clientToken :: Lens' UpdateImagePipelineResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image pipeline that was updated
--   by this request.
updateImagePipelineResponse_imagePipelineArn :: Lens' UpdateImagePipelineResponse (Maybe Text)

-- | The response's http status code.
updateImagePipelineResponse_httpStatus :: Lens' UpdateImagePipelineResponse Int

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>description</pre></li>
--   <li><pre>distributionConfigurationArn</pre></li>
--   <li><pre>imageRecipeArn</pre></li>
--   <li><pre>infrastructureConfigurationArn</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>status</pre></li>
--   </ul>
listImagePipelines_filters :: Lens' ListImagePipelines (Maybe (NonEmpty Filter))

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImagePipelines_nextToken :: Lens' ListImagePipelines (Maybe Text)

-- | The maximum items to return in a request.
listImagePipelines_maxResults :: Lens' ListImagePipelines (Maybe Natural)

-- | The request ID that uniquely identifies this request.
listImagePipelinesResponse_requestId :: Lens' ListImagePipelinesResponse (Maybe Text)

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listImagePipelinesResponse_nextToken :: Lens' ListImagePipelinesResponse (Maybe Text)

-- | The list of image pipelines.
listImagePipelinesResponse_imagePipelineList :: Lens' ListImagePipelinesResponse (Maybe [ImagePipeline])

-- | The response's http status code.
listImagePipelinesResponse_httpStatus :: Lens' ListImagePipelinesResponse Int

-- | The Amazon Resource Name (ARN) of the image pipeline that you want to
--   manually invoke.
startImagePipelineExecution_imagePipelineArn :: Lens' StartImagePipelineExecution Text

-- | The idempotency token used to make this request idempotent.
startImagePipelineExecution_clientToken :: Lens' StartImagePipelineExecution Text

-- | The request ID that uniquely identifies this request.
startImagePipelineExecutionResponse_requestId :: Lens' StartImagePipelineExecutionResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
startImagePipelineExecutionResponse_clientToken :: Lens' StartImagePipelineExecutionResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image that was created by this
--   request.
startImagePipelineExecutionResponse_imageBuildVersionArn :: Lens' StartImagePipelineExecutionResponse (Maybe Text)

-- | The response's http status code.
startImagePipelineExecutionResponse_httpStatus :: Lens' StartImagePipelineExecutionResponse Int

-- | The Amazon Resource Name (ARN) of the resource that you want to tag.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags to apply to the resource.
tagResource_tags :: Lens' TagResource (HashMap Text Text)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | Specify additional settings and launch scripts for your build
--   instances.
createImageRecipe_additionalInstanceConfiguration :: Lens' CreateImageRecipe (Maybe AdditionalInstanceConfiguration)

-- | The working directory used during build and test workflows.
createImageRecipe_workingDirectory :: Lens' CreateImageRecipe (Maybe Text)

-- | The block device mappings of the image recipe.
createImageRecipe_blockDeviceMappings :: Lens' CreateImageRecipe (Maybe [InstanceBlockDeviceMapping])

-- | The description of the image recipe.
createImageRecipe_description :: Lens' CreateImageRecipe (Maybe Text)

-- | The tags of the image recipe.
createImageRecipe_tags :: Lens' CreateImageRecipe (Maybe (HashMap Text Text))

-- | The name of the image recipe.
createImageRecipe_name :: Lens' CreateImageRecipe Text

-- | The semantic version of the image recipe. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
createImageRecipe_semanticVersion :: Lens' CreateImageRecipe Text

-- | The components of the image recipe.
createImageRecipe_components :: Lens' CreateImageRecipe (NonEmpty ComponentConfiguration)

-- | The base image of the image recipe. The value of the string can be the
--   ARN of the base image or an AMI ID. The format for the ARN follows
--   this example:
--   <tt>arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x</tt>.
--   You can provide the specific version that you want to use, or you can
--   use a wildcard in all of the fields. If you enter an AMI ID for the
--   string value, you must have access to the AMI, and the AMI must be in
--   the same Region in which you are using Image Builder.
createImageRecipe_parentImage :: Lens' CreateImageRecipe Text

-- | The idempotency token used to make this request idempotent.
createImageRecipe_clientToken :: Lens' CreateImageRecipe Text

-- | The request ID that uniquely identifies this request.
createImageRecipeResponse_requestId :: Lens' CreateImageRecipeResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createImageRecipeResponse_clientToken :: Lens' CreateImageRecipeResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that was created by
--   this request.
createImageRecipeResponse_imageRecipeArn :: Lens' CreateImageRecipeResponse (Maybe Text)

-- | The response's http status code.
createImageRecipeResponse_httpStatus :: Lens' CreateImageRecipeResponse Int

-- | The Amazon Resource Name (ARN) of the container recipe that defines
--   how images are configured and tested.
createImage_containerRecipeArn :: Lens' CreateImage (Maybe Text)

-- | The image tests configuration of the image.
createImage_imageTestsConfiguration :: Lens' CreateImage (Maybe ImageTestsConfiguration)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
createImage_enhancedImageMetadataEnabled :: Lens' CreateImage (Maybe Bool)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   defines and configures the outputs of your pipeline.
createImage_distributionConfigurationArn :: Lens' CreateImage (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that defines how
--   images are configured, tested, and assessed.
createImage_imageRecipeArn :: Lens' CreateImage (Maybe Text)

-- | The tags of the image.
createImage_tags :: Lens' CreateImage (Maybe (HashMap Text Text))

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   that defines the environment in which your image will be built and
--   tested.
createImage_infrastructureConfigurationArn :: Lens' CreateImage Text

-- | The idempotency token used to make this request idempotent.
createImage_clientToken :: Lens' CreateImage Text

-- | The request ID that uniquely identifies this request.
createImageResponse_requestId :: Lens' CreateImageResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createImageResponse_clientToken :: Lens' CreateImageResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image that was created by this
--   request.
createImageResponse_imageBuildVersionArn :: Lens' CreateImageResponse (Maybe Text)

-- | The response's http status code.
createImageResponse_httpStatus :: Lens' CreateImageResponse Int

-- | The Amazon Resource Name (ARN) of the resource that you want to untag.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The tag keys to remove from the resource.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The data of the component. Used to specify the data inline. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
createComponent_data :: Lens' CreateComponent (Maybe Text)

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
createComponent_supportedOsVersions :: Lens' CreateComponent (Maybe (NonEmpty Text))

-- | The uri of the component. Must be an Amazon S3 URL and the requester
--   must have permission to access the Amazon S3 bucket. If you use Amazon
--   S3, you can specify component content up to your service quota. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
createComponent_uri :: Lens' CreateComponent (Maybe Text)

-- | The ID of the KMS key that should be used to encrypt this component.
createComponent_kmsKeyId :: Lens' CreateComponent (Maybe Text)

-- | The change description of the component. Describes what change has
--   been made in this version, or what makes this version different from
--   other versions of this component.
createComponent_changeDescription :: Lens' CreateComponent (Maybe Text)

-- | The description of the component. Describes the contents of the
--   component.
createComponent_description :: Lens' CreateComponent (Maybe Text)

-- | The tags of the component.
createComponent_tags :: Lens' CreateComponent (Maybe (HashMap Text Text))

-- | The name of the component.
createComponent_name :: Lens' CreateComponent Text

-- | The semantic version of the component. This version follows the
--   semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
createComponent_semanticVersion :: Lens' CreateComponent Text

-- | The platform of the component.
createComponent_platform :: Lens' CreateComponent Platform

-- | The idempotency token of the component.
createComponent_clientToken :: Lens' CreateComponent Text

-- | The request ID that uniquely identifies this request.
createComponentResponse_requestId :: Lens' CreateComponentResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createComponentResponse_clientToken :: Lens' CreateComponentResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the component that was created by
--   this request.
createComponentResponse_componentBuildVersionArn :: Lens' CreateComponentResponse (Maybe Text)

-- | The response's http status code.
createComponentResponse_httpStatus :: Lens' CreateComponentResponse Int

-- | The Amazon Resource Name (ARN) of the distribution configuration to
--   delete.
deleteDistributionConfiguration_distributionConfigurationArn :: Lens' DeleteDistributionConfiguration Text

-- | The request ID that uniquely identifies this request.
deleteDistributionConfigurationResponse_requestId :: Lens' DeleteDistributionConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   was deleted.
deleteDistributionConfigurationResponse_distributionConfigurationArn :: Lens' DeleteDistributionConfigurationResponse (Maybe Text)

-- | The response's http status code.
deleteDistributionConfigurationResponse_httpStatus :: Lens' DeleteDistributionConfigurationResponse Int

-- | The description of the distribution configuration.
updateDistributionConfiguration_description :: Lens' UpdateDistributionConfiguration (Maybe Text)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   you want to update.
updateDistributionConfiguration_distributionConfigurationArn :: Lens' UpdateDistributionConfiguration Text

-- | The distributions of the distribution configuration.
updateDistributionConfiguration_distributions :: Lens' UpdateDistributionConfiguration [Distribution]

-- | The idempotency token of the distribution configuration.
updateDistributionConfiguration_clientToken :: Lens' UpdateDistributionConfiguration Text

-- | The request ID that uniquely identifies this request.
updateDistributionConfigurationResponse_requestId :: Lens' UpdateDistributionConfigurationResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
updateDistributionConfigurationResponse_clientToken :: Lens' UpdateDistributionConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   was updated by this request.
updateDistributionConfigurationResponse_distributionConfigurationArn :: Lens' UpdateDistributionConfigurationResponse (Maybe Text)

-- | The response's http status code.
updateDistributionConfigurationResponse_httpStatus :: Lens' UpdateDistributionConfigurationResponse Int

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
listImagePipelineImages_filters :: Lens' ListImagePipelineImages (Maybe (NonEmpty Filter))

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImagePipelineImages_nextToken :: Lens' ListImagePipelineImages (Maybe Text)

-- | The maximum items to return in a request.
listImagePipelineImages_maxResults :: Lens' ListImagePipelineImages (Maybe Natural)

-- | The Amazon Resource Name (ARN) of the image pipeline whose images you
--   want to view.
listImagePipelineImages_imagePipelineArn :: Lens' ListImagePipelineImages Text

-- | The request ID that uniquely identifies this request.
listImagePipelineImagesResponse_requestId :: Lens' ListImagePipelineImagesResponse (Maybe Text)

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listImagePipelineImagesResponse_nextToken :: Lens' ListImagePipelineImagesResponse (Maybe Text)

-- | The list of images built by this pipeline.
listImagePipelineImagesResponse_imageSummaryList :: Lens' ListImagePipelineImagesResponse (Maybe [ImageSummary])

-- | The response's http status code.
listImagePipelineImagesResponse_httpStatus :: Lens' ListImagePipelineImagesResponse Int

-- | The Amazon Resource Name (ARN) of the image recipe to delete.
deleteImageRecipe_imageRecipeArn :: Lens' DeleteImageRecipe Text

-- | The request ID that uniquely identifies this request.
deleteImageRecipeResponse_requestId :: Lens' DeleteImageRecipeResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe that was deleted.
deleteImageRecipeResponse_imageRecipeArn :: Lens' DeleteImageRecipeResponse (Maybe Text)

-- | The response's http status code.
deleteImageRecipeResponse_httpStatus :: Lens' DeleteImageRecipeResponse Int

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>description</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>supportedOsVersion</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
listComponents_filters :: Lens' ListComponents (Maybe (NonEmpty Filter))

-- | The owner defines which components you want to list. By default, this
--   request will only show components owned by your account. You can use
--   this field to specify if you want to view components owned by
--   yourself, by Amazon, or those components that have been shared with
--   you by other customers.
listComponents_owner :: Lens' ListComponents (Maybe Ownership)

-- | Returns the list of component build versions for the specified name.
listComponents_byName :: Lens' ListComponents (Maybe Bool)

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listComponents_nextToken :: Lens' ListComponents (Maybe Text)

-- | The maximum items to return in a request.
listComponents_maxResults :: Lens' ListComponents (Maybe Natural)

-- | The request ID that uniquely identifies this request.
listComponentsResponse_requestId :: Lens' ListComponentsResponse (Maybe Text)

-- | The list of component semantic versions.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
listComponentsResponse_componentVersionList :: Lens' ListComponentsResponse (Maybe [ComponentVersion])

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listComponentsResponse_nextToken :: Lens' ListComponentsResponse (Maybe Text)

-- | The response's http status code.
listComponentsResponse_httpStatus :: Lens' ListComponentsResponse Int

-- | The Amazon Resource Name (ARN) of the container recipe that this
--   policy should be applied to.
putContainerRecipePolicy_containerRecipeArn :: Lens' PutContainerRecipePolicy Text

-- | The policy to apply to the container recipe.
putContainerRecipePolicy_policy :: Lens' PutContainerRecipePolicy Text

-- | The request ID that uniquely identifies this request.
putContainerRecipePolicyResponse_requestId :: Lens' PutContainerRecipePolicyResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the container recipe that this
--   policy was applied to.
putContainerRecipePolicyResponse_containerRecipeArn :: Lens' PutContainerRecipePolicyResponse (Maybe Text)

-- | The response's http status code.
putContainerRecipePolicyResponse_httpStatus :: Lens' PutContainerRecipePolicyResponse Int

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>osVersion</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
listImages_filters :: Lens' ListImages (Maybe (NonEmpty Filter))

-- | The owner defines which images you want to list. By default, this
--   request will only show images owned by your account. You can use this
--   field to specify if you want to view images owned by yourself, by
--   Amazon, or those images that have been shared with you by other
--   customers.
listImages_owner :: Lens' ListImages (Maybe Ownership)

-- | Requests a list of images with a specific recipe name.
listImages_byName :: Lens' ListImages (Maybe Bool)

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImages_nextToken :: Lens' ListImages (Maybe Text)

-- | Includes deprecated images in the response list.
listImages_includeDeprecated :: Lens' ListImages (Maybe Bool)

-- | The maximum items to return in a request.
listImages_maxResults :: Lens' ListImages (Maybe Natural)

-- | The request ID that uniquely identifies this request.
listImagesResponse_requestId :: Lens' ListImagesResponse (Maybe Text)

-- | The list of image semantic versions.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
listImagesResponse_imageVersionList :: Lens' ListImagesResponse (Maybe [ImageVersion])

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listImagesResponse_nextToken :: Lens' ListImagesResponse (Maybe Text)

-- | The response's http status code.
listImagesResponse_httpStatus :: Lens' ListImagesResponse Int

-- | The description of the distribution configuration.
createDistributionConfiguration_description :: Lens' CreateDistributionConfiguration (Maybe Text)

-- | The tags of the distribution configuration.
createDistributionConfiguration_tags :: Lens' CreateDistributionConfiguration (Maybe (HashMap Text Text))

-- | The name of the distribution configuration.
createDistributionConfiguration_name :: Lens' CreateDistributionConfiguration Text

-- | The distributions of the distribution configuration.
createDistributionConfiguration_distributions :: Lens' CreateDistributionConfiguration [Distribution]

-- | The idempotency token of the distribution configuration.
createDistributionConfiguration_clientToken :: Lens' CreateDistributionConfiguration Text

-- | The request ID that uniquely identifies this request.
createDistributionConfigurationResponse_requestId :: Lens' CreateDistributionConfigurationResponse (Maybe Text)

-- | The idempotency token used to make this request idempotent.
createDistributionConfigurationResponse_clientToken :: Lens' CreateDistributionConfigurationResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the distribution configuration that
--   was created by this request.
createDistributionConfigurationResponse_distributionConfigurationArn :: Lens' CreateDistributionConfigurationResponse (Maybe Text)

-- | The response's http status code.
createDistributionConfigurationResponse_httpStatus :: Lens' CreateDistributionConfigurationResponse Int

-- | Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>parentImage</pre></li>
--   <li><pre>platform</pre></li>
--   </ul>
listImageRecipes_filters :: Lens' ListImageRecipes (Maybe (NonEmpty Filter))

-- | The owner defines which image recipes you want to list. By default,
--   this request will only show image recipes owned by your account. You
--   can use this field to specify if you want to view image recipes owned
--   by yourself, by Amazon, or those image recipes that have been shared
--   with you by other customers.
listImageRecipes_owner :: Lens' ListImageRecipes (Maybe Ownership)

-- | A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
listImageRecipes_nextToken :: Lens' ListImageRecipes (Maybe Text)

-- | The maximum items to return in a request.
listImageRecipes_maxResults :: Lens' ListImageRecipes (Maybe Natural)

-- | The request ID that uniquely identifies this request.
listImageRecipesResponse_requestId :: Lens' ListImageRecipesResponse (Maybe Text)

-- | The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
listImageRecipesResponse_nextToken :: Lens' ListImageRecipesResponse (Maybe Text)

-- | The list of image pipelines.
listImageRecipesResponse_imageRecipeSummaryList :: Lens' ListImageRecipesResponse (Maybe [ImageRecipeSummary])

-- | The response's http status code.
listImageRecipesResponse_httpStatus :: Lens' ListImageRecipesResponse Int

-- | The Amazon Resource Name (ARN) of the Image Builder image resource to
--   delete.
deleteImage_imageBuildVersionArn :: Lens' DeleteImage Text

-- | The request ID that uniquely identifies this request.
deleteImageResponse_requestId :: Lens' DeleteImageResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the Image Builder image resource
--   that was deleted.
deleteImageResponse_imageBuildVersionArn :: Lens' DeleteImageResponse (Maybe Text)

-- | The response's http status code.
deleteImageResponse_httpStatus :: Lens' DeleteImageResponse Int

-- | The Amazon Resource Name (ARN) of the component build version to
--   delete.
deleteComponent_componentBuildVersionArn :: Lens' DeleteComponent Text

-- | The request ID that uniquely identifies this request.
deleteComponentResponse_requestId :: Lens' DeleteComponentResponse (Maybe Text)

-- | The Amazon Resource Name (ARN) of the component build version that was
--   deleted.
deleteComponentResponse_componentBuildVersionArn :: Lens' DeleteComponentResponse (Maybe Text)

-- | The response's http status code.
deleteComponentResponse_httpStatus :: Lens' DeleteComponentResponse Int

-- | The Amazon Resource Name (ARN) of the image that you want to retrieve.
getImage_imageBuildVersionArn :: Lens' GetImage Text

-- | The request ID that uniquely identifies this request.
getImageResponse_requestId :: Lens' GetImageResponse (Maybe Text)

-- | The image object.
getImageResponse_image :: Lens' GetImageResponse (Maybe Image)

-- | The response's http status code.
getImageResponse_httpStatus :: Lens' GetImageResponse Int

-- | The Amazon Resource Name (ARN) of the container recipe for the policy
--   being requested.
getContainerRecipePolicy_containerRecipeArn :: Lens' GetContainerRecipePolicy Text

-- | The request ID that uniquely identifies this request.
getContainerRecipePolicyResponse_requestId :: Lens' GetContainerRecipePolicyResponse (Maybe Text)

-- | The container recipe policy object that is returned.
getContainerRecipePolicyResponse_policy :: Lens' GetContainerRecipePolicyResponse (Maybe Text)

-- | The response's http status code.
getContainerRecipePolicyResponse_httpStatus :: Lens' GetContainerRecipePolicyResponse Int

-- | The Amazon Resource Name (ARN) of the image recipe that you want to
--   retrieve.
getImageRecipe_imageRecipeArn :: Lens' GetImageRecipe Text

-- | The request ID that uniquely identifies this request.
getImageRecipeResponse_requestId :: Lens' GetImageRecipeResponse (Maybe Text)

-- | The image recipe object.
getImageRecipeResponse_imageRecipe :: Lens' GetImageRecipeResponse (Maybe ImageRecipe)

-- | The response's http status code.
getImageRecipeResponse_httpStatus :: Lens' GetImageRecipeResponse Int

-- | The Amazon Resource Name (ARN) of the component that you want to
--   retrieve. Regex requires "/\d+$" suffix.
getComponent_componentBuildVersionArn :: Lens' GetComponent Text

-- | The request ID that uniquely identifies this request.
getComponentResponse_requestId :: Lens' GetComponentResponse (Maybe Text)

-- | The component object associated with the specified ARN.
getComponentResponse_component :: Lens' GetComponentResponse (Maybe Component)

-- | The response's http status code.
getComponentResponse_httpStatus :: Lens' GetComponentResponse Int

-- | Contains settings for the Systems Manager agent on your build
--   instance.
additionalInstanceConfiguration_systemsManagerAgent :: Lens' AdditionalInstanceConfiguration (Maybe SystemsManagerAgent)

-- | Use this property to provide commands or a command script to run when
--   you launch your build instance.
--   
--   The userDataOverride property replaces any commands that Image Builder
--   might have added to ensure that Systems Manager is installed on your
--   Linux build instance. If you override the user data, make sure that
--   you add commands to install Systems Manager, if it is not
--   pre-installed on your base image.
additionalInstanceConfiguration_userDataOverride :: Lens' AdditionalInstanceConfiguration (Maybe Text)

-- | The AMI ID of the Amazon EC2 AMI.
ami_image :: Lens' Ami (Maybe Text)

-- | Undocumented member.
ami_state :: Lens' Ami (Maybe ImageState)

-- | The account ID of the owner of the AMI.
ami_accountId :: Lens' Ami (Maybe Text)

-- | The name of the Amazon EC2 AMI.
ami_name :: Lens' Ami (Maybe Text)

-- | The Amazon Web Services Region of the Amazon EC2 AMI.
ami_region :: Lens' Ami (Maybe Text)

-- | The description of the Amazon EC2 AMI. Minimum and maximum length are
--   in characters.
ami_description :: Lens' Ami (Maybe Text)

-- | Launch permissions can be used to configure which Amazon Web Services
--   accounts can use the AMI to launch instances.
amiDistributionConfiguration_launchPermission :: Lens' AmiDistributionConfiguration (Maybe LaunchPermissionConfiguration)

-- | The ID of an account to which you want to distribute an image.
amiDistributionConfiguration_targetAccountIds :: Lens' AmiDistributionConfiguration (Maybe (NonEmpty Text))

-- | The tags to apply to AMIs distributed to this Region.
amiDistributionConfiguration_amiTags :: Lens' AmiDistributionConfiguration (Maybe (HashMap Text Text))

-- | The name of the output AMI.
amiDistributionConfiguration_name :: Lens' AmiDistributionConfiguration (Maybe Text)

-- | The KMS key identifier used to encrypt the distributed image.
amiDistributionConfiguration_kmsKeyId :: Lens' AmiDistributionConfiguration (Maybe Text)

-- | The description of the distribution configuration. Minimum and maximum
--   length are in characters.
amiDistributionConfiguration_description :: Lens' AmiDistributionConfiguration (Maybe Text)

-- | Describes the current status of the component. This is used for
--   components that are no longer active.
component_state :: Lens' Component (Maybe ComponentState)

-- | The platform of the component.
component_platform :: Lens' Component (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the component.
component_arn :: Lens' Component (Maybe Text)

-- | The data of the component.
component_data :: Lens' Component (Maybe Text)

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
component_supportedOsVersions :: Lens' Component (Maybe (NonEmpty Text))

-- | The encryption status of the component.
component_encrypted :: Lens' Component (Maybe Bool)

-- | The owner of the component.
component_owner :: Lens' Component (Maybe Text)

-- | The date that the component was created.
component_dateCreated :: Lens' Component (Maybe Text)

-- | The name of the component.
component_name :: Lens' Component (Maybe Text)

-- | The KMS key identifier used to encrypt the component.
component_kmsKeyId :: Lens' Component (Maybe Text)

-- | The version of the component.
component_version :: Lens' Component (Maybe Text)

-- | Contains parameter details for each of the parameters that are defined
--   for the component.
component_parameters :: Lens' Component (Maybe [ComponentParameterDetail])

-- | The change description of the component.
component_changeDescription :: Lens' Component (Maybe Text)

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
component_type :: Lens' Component (Maybe ComponentType)

-- | The description of the component.
component_description :: Lens' Component (Maybe Text)

-- | The tags associated with the component.
component_tags :: Lens' Component (Maybe (HashMap Text Text))

-- | A group of parameter settings that are used to configure the component
--   for a specific recipe.
componentConfiguration_parameters :: Lens' ComponentConfiguration (Maybe (NonEmpty ComponentParameter))

-- | The Amazon Resource Name (ARN) of the component.
componentConfiguration_componentArn :: Lens' ComponentConfiguration Text

-- | The name of the component parameter to set.
componentParameter_name :: Lens' ComponentParameter Text

-- | Sets the value for the named component parameter.
componentParameter_value :: Lens' ComponentParameter [Text]

-- | The default value of this parameter if no input is provided.
componentParameterDetail_defaultValue :: Lens' ComponentParameterDetail (Maybe [Text])

-- | Describes this parameter.
componentParameterDetail_description :: Lens' ComponentParameterDetail (Maybe Text)

-- | The name of this input parameter.
componentParameterDetail_name :: Lens' ComponentParameterDetail Text

-- | The type of input this parameter provides. The currently supported
--   value is "string".
componentParameterDetail_type :: Lens' ComponentParameterDetail Text

-- | The current state of the component.
componentState_status :: Lens' ComponentState (Maybe ComponentStatus)

-- | Describes how or why the component changed state.
componentState_reason :: Lens' ComponentState (Maybe Text)

-- | Describes the current status of the component.
componentSummary_state :: Lens' ComponentSummary (Maybe ComponentState)

-- | The platform of the component.
componentSummary_platform :: Lens' ComponentSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the component.
componentSummary_arn :: Lens' ComponentSummary (Maybe Text)

-- | The operating system (OS) version supported by the component. If the
--   OS information is available, a prefix match is performed against the
--   base image OS version during image recipe creation.
componentSummary_supportedOsVersions :: Lens' ComponentSummary (Maybe (NonEmpty Text))

-- | The owner of the component.
componentSummary_owner :: Lens' ComponentSummary (Maybe Text)

-- | The date that the component was created.
componentSummary_dateCreated :: Lens' ComponentSummary (Maybe Text)

-- | The name of the component.
componentSummary_name :: Lens' ComponentSummary (Maybe Text)

-- | The version of the component.
componentSummary_version :: Lens' ComponentSummary (Maybe Text)

-- | The change description of the component.
componentSummary_changeDescription :: Lens' ComponentSummary (Maybe Text)

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
componentSummary_type :: Lens' ComponentSummary (Maybe ComponentType)

-- | The description of the component.
componentSummary_description :: Lens' ComponentSummary (Maybe Text)

-- | The tags associated with the component.
componentSummary_tags :: Lens' ComponentSummary (Maybe (HashMap Text Text))

-- | The platform of the component.
componentVersion_platform :: Lens' ComponentVersion (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the component.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
componentVersion_arn :: Lens' ComponentVersion (Maybe Text)

-- | he operating system (OS) version supported by the component. If the OS
--   information is available, a prefix match is performed against the base
--   image OS version during image recipe creation.
componentVersion_supportedOsVersions :: Lens' ComponentVersion (Maybe (NonEmpty Text))

-- | The owner of the component.
componentVersion_owner :: Lens' ComponentVersion (Maybe Text)

-- | The date that the component was created.
componentVersion_dateCreated :: Lens' ComponentVersion (Maybe Text)

-- | The name of the component.
componentVersion_name :: Lens' ComponentVersion (Maybe Text)

-- | The semantic version of the component.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
componentVersion_version :: Lens' ComponentVersion (Maybe Text)

-- | The type of the component denotes whether the component is used to
--   build the image or only to test it.
componentVersion_type :: Lens' ComponentVersion (Maybe ComponentType)

-- | The description of the component.
componentVersion_description :: Lens' ComponentVersion (Maybe Text)

-- | A list of URIs for containers created in the context Region.
container_imageUris :: Lens' Container (Maybe [Text])

-- | Containers and container images are Region-specific. This is the
--   Region context for the container.
container_region :: Lens' Container (Maybe Text)

-- | Tags that are attached to the container distribution configuration.
containerDistributionConfiguration_containerTags :: Lens' ContainerDistributionConfiguration (Maybe [Text])

-- | The description of the container distribution configuration.
containerDistributionConfiguration_description :: Lens' ContainerDistributionConfiguration (Maybe Text)

-- | The destination repository for the container distribution
--   configuration.
containerDistributionConfiguration_targetRepository :: Lens' ContainerDistributionConfiguration TargetContainerRepository

-- | Components for build and test that are included in the container
--   recipe.
containerRecipe_components :: Lens' ContainerRecipe (Maybe (NonEmpty ComponentConfiguration))

-- | Specifies the type of container, such as Docker.
containerRecipe_containerType :: Lens' ContainerRecipe (Maybe ContainerType)

-- | The system platform for the container, such as Windows or Linux.
containerRecipe_platform :: Lens' ContainerRecipe (Maybe Platform)

-- | Dockerfiles are text documents that are used to build Docker
--   containers, and ensure that they contain all of the elements required
--   by the application running inside. The template data consists of
--   contextual variables where Image Builder places build information or
--   scripts, based on your container image recipe.
containerRecipe_dockerfileTemplateData :: Lens' ContainerRecipe (Maybe Text)

-- | The Amazon Resource Name (ARN) of the container recipe.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
containerRecipe_arn :: Lens' ContainerRecipe (Maybe Text)

-- | The working directory for use during build and test workflows.
containerRecipe_workingDirectory :: Lens' ContainerRecipe (Maybe Text)

-- | The base image for the container recipe.
containerRecipe_parentImage :: Lens' ContainerRecipe (Maybe Text)

-- | A flag that indicates if the target container is encrypted.
containerRecipe_encrypted :: Lens' ContainerRecipe (Maybe Bool)

-- | The owner of the container recipe.
containerRecipe_owner :: Lens' ContainerRecipe (Maybe Text)

-- | The date when this container recipe was created.
containerRecipe_dateCreated :: Lens' ContainerRecipe (Maybe Text)

-- | The name of the container recipe.
containerRecipe_name :: Lens' ContainerRecipe (Maybe Text)

-- | Identifies which KMS key is used to encrypt the container image for
--   distribution to the target Region.
containerRecipe_kmsKeyId :: Lens' ContainerRecipe (Maybe Text)

-- | The semantic version of the container recipe.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
containerRecipe_version :: Lens' ContainerRecipe (Maybe Text)

-- | The destination repository for the container image.
containerRecipe_targetRepository :: Lens' ContainerRecipe (Maybe TargetContainerRepository)

-- | The description of the container recipe.
containerRecipe_description :: Lens' ContainerRecipe (Maybe Text)

-- | Tags that are attached to the container recipe.
containerRecipe_tags :: Lens' ContainerRecipe (Maybe (HashMap Text Text))

-- | A group of options that can be used to configure an instance for
--   building and testing container images.
containerRecipe_instanceConfiguration :: Lens' ContainerRecipe (Maybe InstanceConfiguration)

-- | Specifies the type of container, such as "Docker".
containerRecipeSummary_containerType :: Lens' ContainerRecipeSummary (Maybe ContainerType)

-- | The system platform for the container, such as Windows or Linux.
containerRecipeSummary_platform :: Lens' ContainerRecipeSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the container recipe.
containerRecipeSummary_arn :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The base image for the container recipe.
containerRecipeSummary_parentImage :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The owner of the container recipe.
containerRecipeSummary_owner :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The date when this container recipe was created.
containerRecipeSummary_dateCreated :: Lens' ContainerRecipeSummary (Maybe Text)

-- | The name of the container recipe.
containerRecipeSummary_name :: Lens' ContainerRecipeSummary (Maybe Text)

-- | Tags that are attached to the container recipe.
containerRecipeSummary_tags :: Lens' ContainerRecipeSummary (Maybe (HashMap Text Text))

-- | The specific AMI settings; for example, launch permissions or AMI
--   tags.
distribution_amiDistributionConfiguration :: Lens' Distribution (Maybe AmiDistributionConfiguration)

-- | A group of launchTemplateConfiguration settings that apply to image
--   distribution for specified accounts.
distribution_launchTemplateConfigurations :: Lens' Distribution (Maybe (NonEmpty LaunchTemplateConfiguration))

-- | The License Manager Configuration to associate with the AMI in the
--   specified Region.
distribution_licenseConfigurationArns :: Lens' Distribution (Maybe (NonEmpty Text))

-- | Container distribution settings for encryption, licensing, and sharing
--   in a specific Region.
distribution_containerDistributionConfiguration :: Lens' Distribution (Maybe ContainerDistributionConfiguration)

-- | The target Region.
distribution_region :: Lens' Distribution Text

-- | The Amazon Resource Name (ARN) of the distribution configuration.
distributionConfiguration_arn :: Lens' DistributionConfiguration (Maybe Text)

-- | The date on which this distribution configuration was last updated.
distributionConfiguration_dateUpdated :: Lens' DistributionConfiguration (Maybe Text)

-- | The date on which this distribution configuration was created.
distributionConfiguration_dateCreated :: Lens' DistributionConfiguration (Maybe Text)

-- | The name of the distribution configuration.
distributionConfiguration_name :: Lens' DistributionConfiguration (Maybe Text)

-- | The description of the distribution configuration.
distributionConfiguration_description :: Lens' DistributionConfiguration (Maybe Text)

-- | The distribution objects that apply Region-specific settings for the
--   deployment of the image to targeted Regions.
distributionConfiguration_distributions :: Lens' DistributionConfiguration (Maybe [Distribution])

-- | The tags of the distribution configuration.
distributionConfiguration_tags :: Lens' DistributionConfiguration (Maybe (HashMap Text Text))

-- | The maximum duration in minutes for this distribution configuration.
distributionConfiguration_timeoutMinutes :: Lens' DistributionConfiguration Natural

-- | The Amazon Resource Name (ARN) of the distribution configuration.
distributionConfigurationSummary_arn :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | A list of Regions where the container image is distributed to.
distributionConfigurationSummary_regions :: Lens' DistributionConfigurationSummary (Maybe [Text])

-- | The date on which the distribution configuration was updated.
distributionConfigurationSummary_dateUpdated :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The date on which the distribution configuration was created.
distributionConfigurationSummary_dateCreated :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The name of the distribution configuration.
distributionConfigurationSummary_name :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The description of the distribution configuration.
distributionConfigurationSummary_description :: Lens' DistributionConfigurationSummary (Maybe Text)

-- | The tags associated with the distribution configuration.
distributionConfigurationSummary_tags :: Lens' DistributionConfigurationSummary (Maybe (HashMap Text Text))

-- | Use to configure delete on termination of the associated device.
ebsInstanceBlockDeviceSpecification_deleteOnTermination :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Bool)

-- | <b>For GP3 volumes only</b> – The throughput in MiB/s that the volume
--   supports.
ebsInstanceBlockDeviceSpecification_throughput :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Natural)

-- | Use to override the device's volume size.
ebsInstanceBlockDeviceSpecification_volumeSize :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Natural)

-- | Use to configure device IOPS.
ebsInstanceBlockDeviceSpecification_iops :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Natural)

-- | Use to configure device encryption.
ebsInstanceBlockDeviceSpecification_encrypted :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Bool)

-- | Use to configure the KMS key to use when encrypting the device.
ebsInstanceBlockDeviceSpecification_kmsKeyId :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Text)

-- | Use to override the device's volume type.
ebsInstanceBlockDeviceSpecification_volumeType :: Lens' EbsInstanceBlockDeviceSpecification (Maybe EbsVolumeType)

-- | The snapshot that defines the device contents.
ebsInstanceBlockDeviceSpecification_snapshotId :: Lens' EbsInstanceBlockDeviceSpecification (Maybe Text)

-- | The filter values. Filter values are case-sensitive.
filter_values :: Lens' Filter (Maybe (NonEmpty Text))

-- | The name of the filter. Filter names are case-sensitive.
filter_name :: Lens' Filter (Maybe Text)

-- | The image recipe used when creating the image.
image_imageRecipe :: Lens' Image (Maybe ImageRecipe)

-- | The state of the image.
image_state :: Lens' Image (Maybe ImageState)

-- | The platform of the image.
image_platform :: Lens' Image (Maybe Platform)

-- | The image tests configuration used when creating this image.
image_imageTestsConfiguration :: Lens' Image (Maybe ImageTestsConfiguration)

-- | The Amazon Resource Name (ARN) of the image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
image_arn :: Lens' Image (Maybe Text)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
image_enhancedImageMetadataEnabled :: Lens' Image (Maybe Bool)

-- | The date on which this image was created.
image_dateCreated :: Lens' Image (Maybe Text)

-- | The recipe that is used to create an Image Builder container image.
image_containerRecipe :: Lens' Image (Maybe ContainerRecipe)

-- | The name of the image.
image_name :: Lens' Image (Maybe Text)

-- | The infrastructure used when creating this image.
image_infrastructureConfiguration :: Lens' Image (Maybe InfrastructureConfiguration)

-- | The semantic version of the image.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
image_version :: Lens' Image (Maybe Text)

-- | The distribution configuration used when creating this image.
image_distributionConfiguration :: Lens' Image (Maybe DistributionConfiguration)

-- | The Amazon Resource Name (ARN) of the image pipeline that created this
--   image.
image_sourcePipelineArn :: Lens' Image (Maybe Text)

-- | Specifies whether this is an AMI or container image.
image_type :: Lens' Image (Maybe ImageType)

-- | The name of the image pipeline that created this image.
image_sourcePipelineName :: Lens' Image (Maybe Text)

-- | The output resources produced when creating this image.
image_outputResources :: Lens' Image (Maybe OutputResources)

-- | The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
image_osVersion :: Lens' Image (Maybe Text)

-- | The tags of the image.
image_tags :: Lens' Image (Maybe (HashMap Text Text))

-- | The name of the package as reported to the operating system package
--   manager.
imagePackage_packageName :: Lens' ImagePackage (Maybe Text)

-- | The version of the package as reported to the operating system package
--   manager.
imagePackage_packageVersion :: Lens' ImagePackage (Maybe Text)

-- | The status of the image pipeline.
imagePipeline_status :: Lens' ImagePipeline (Maybe PipelineStatus)

-- | The date on which this image pipeline was last run.
imagePipeline_dateLastRun :: Lens' ImagePipeline (Maybe Text)

-- | The platform of the image pipeline.
imagePipeline_platform :: Lens' ImagePipeline (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the infrastructure configuration
--   associated with this image pipeline.
imagePipeline_infrastructureConfigurationArn :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the container recipe that is used
--   for this pipeline.
imagePipeline_containerRecipeArn :: Lens' ImagePipeline (Maybe Text)

-- | The image tests configuration of the image pipeline.
imagePipeline_imageTestsConfiguration :: Lens' ImagePipeline (Maybe ImageTestsConfiguration)

-- | The date on which this image pipeline will next be run.
imagePipeline_dateNextRun :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image pipeline.
imagePipeline_arn :: Lens' ImagePipeline (Maybe Text)

-- | The schedule of the image pipeline.
imagePipeline_schedule :: Lens' ImagePipeline (Maybe Schedule)

-- | Collects additional information about the image being created,
--   including the operating system (OS) version and package list. This
--   information is used to enhance the overall experience of using EC2
--   Image Builder. Enabled by default.
imagePipeline_enhancedImageMetadataEnabled :: Lens' ImagePipeline (Maybe Bool)

-- | The date on which this image pipeline was last updated.
imagePipeline_dateUpdated :: Lens' ImagePipeline (Maybe Text)

-- | The date on which this image pipeline was created.
imagePipeline_dateCreated :: Lens' ImagePipeline (Maybe Text)

-- | The name of the image pipeline.
imagePipeline_name :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the distribution configuration
--   associated with this image pipeline.
imagePipeline_distributionConfigurationArn :: Lens' ImagePipeline (Maybe Text)

-- | The Amazon Resource Name (ARN) of the image recipe associated with
--   this image pipeline.
imagePipeline_imageRecipeArn :: Lens' ImagePipeline (Maybe Text)

-- | The description of the image pipeline.
imagePipeline_description :: Lens' ImagePipeline (Maybe Text)

-- | The tags of this image pipeline.
imagePipeline_tags :: Lens' ImagePipeline (Maybe (HashMap Text Text))

-- | The components of the image recipe.
imageRecipe_components :: Lens' ImageRecipe (Maybe (NonEmpty ComponentConfiguration))

-- | The platform of the image recipe.
imageRecipe_platform :: Lens' ImageRecipe (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the image recipe.
imageRecipe_arn :: Lens' ImageRecipe (Maybe Text)

-- | Before you create a new AMI, Image Builder launches temporary Amazon
--   EC2 instances to build and test your image configuration. Instance
--   configuration adds a layer of control over those instances. You can
--   define settings and add scripts to run when an instance is launched
--   from your AMI.
imageRecipe_additionalInstanceConfiguration :: Lens' ImageRecipe (Maybe AdditionalInstanceConfiguration)

-- | The working directory to be used during build and test workflows.
imageRecipe_workingDirectory :: Lens' ImageRecipe (Maybe Text)

-- | The base image of the image recipe.
imageRecipe_parentImage :: Lens' ImageRecipe (Maybe Text)

-- | The owner of the image recipe.
imageRecipe_owner :: Lens' ImageRecipe (Maybe Text)

-- | The date on which this image recipe was created.
imageRecipe_dateCreated :: Lens' ImageRecipe (Maybe Text)

-- | The name of the image recipe.
imageRecipe_name :: Lens' ImageRecipe (Maybe Text)

-- | The version of the image recipe.
imageRecipe_version :: Lens' ImageRecipe (Maybe Text)

-- | Specifies which type of image is created by the recipe - an AMI or a
--   container image.
imageRecipe_type :: Lens' ImageRecipe (Maybe ImageType)

-- | The block device mappings to apply when creating images from this
--   recipe.
imageRecipe_blockDeviceMappings :: Lens' ImageRecipe (Maybe [InstanceBlockDeviceMapping])

-- | The description of the image recipe.
imageRecipe_description :: Lens' ImageRecipe (Maybe Text)

-- | The tags of the image recipe.
imageRecipe_tags :: Lens' ImageRecipe (Maybe (HashMap Text Text))

-- | The platform of the image recipe.
imageRecipeSummary_platform :: Lens' ImageRecipeSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the image recipe.
imageRecipeSummary_arn :: Lens' ImageRecipeSummary (Maybe Text)

-- | The base image of the image recipe.
imageRecipeSummary_parentImage :: Lens' ImageRecipeSummary (Maybe Text)

-- | The owner of the image recipe.
imageRecipeSummary_owner :: Lens' ImageRecipeSummary (Maybe Text)

-- | The date on which this image recipe was created.
imageRecipeSummary_dateCreated :: Lens' ImageRecipeSummary (Maybe Text)

-- | The name of the image recipe.
imageRecipeSummary_name :: Lens' ImageRecipeSummary (Maybe Text)

-- | The tags of the image recipe.
imageRecipeSummary_tags :: Lens' ImageRecipeSummary (Maybe (HashMap Text Text))

-- | The status of the image.
imageState_status :: Lens' ImageState (Maybe ImageStatus)

-- | The reason for the image's status.
imageState_reason :: Lens' ImageState (Maybe Text)

-- | The state of the image.
imageSummary_state :: Lens' ImageSummary (Maybe ImageState)

-- | The platform of the image.
imageSummary_platform :: Lens' ImageSummary (Maybe Platform)

-- | The Amazon Resource Name (ARN) of the image.
imageSummary_arn :: Lens' ImageSummary (Maybe Text)

-- | The owner of the image.
imageSummary_owner :: Lens' ImageSummary (Maybe Text)

-- | The date on which this image was created.
imageSummary_dateCreated :: Lens' ImageSummary (Maybe Text)

-- | The name of the image.
imageSummary_name :: Lens' ImageSummary (Maybe Text)

-- | The version of the image.
imageSummary_version :: Lens' ImageSummary (Maybe Text)

-- | Specifies whether this is an AMI or container image.
imageSummary_type :: Lens' ImageSummary (Maybe ImageType)

-- | The output resources produced when creating this image.
imageSummary_outputResources :: Lens' ImageSummary (Maybe OutputResources)

-- | The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
imageSummary_osVersion :: Lens' ImageSummary (Maybe Text)

-- | The tags of the image.
imageSummary_tags :: Lens' ImageSummary (Maybe (HashMap Text Text))

-- | The maximum time in minutes that tests are permitted to run.
imageTestsConfiguration_timeoutMinutes :: Lens' ImageTestsConfiguration (Maybe Natural)

-- | Defines if tests should be executed when building this image.
imageTestsConfiguration_imageTestsEnabled :: Lens' ImageTestsConfiguration (Maybe Bool)

-- | The platform of the image version, for example "Windows" or "Linux".
imageVersion_platform :: Lens' ImageVersion (Maybe Platform)

-- | The Amazon Resource Name (ARN) of a specific version of an Image
--   Builder image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
imageVersion_arn :: Lens' ImageVersion (Maybe Text)

-- | The owner of the image version.
imageVersion_owner :: Lens' ImageVersion (Maybe Text)

-- | The date on which this specific version of the Image Builder image was
--   created.
imageVersion_dateCreated :: Lens' ImageVersion (Maybe Text)

-- | The name of this specific version of an Image Builder image.
imageVersion_name :: Lens' ImageVersion (Maybe Text)

-- | Details for a specific version of an Image Builder image. This version
--   follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
imageVersion_version :: Lens' ImageVersion (Maybe Text)

-- | Specifies whether this image is an AMI or a container image.
imageVersion_type :: Lens' ImageVersion (Maybe ImageType)

-- | The operating system version of the Amazon EC2 build instance. For
--   example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
imageVersion_osVersion :: Lens' ImageVersion (Maybe Text)

-- | The security group IDs of the infrastructure configuration.
infrastructureConfiguration_securityGroupIds :: Lens' InfrastructureConfiguration (Maybe [Text])

-- | The SNS topic Amazon Resource Name (ARN) of the infrastructure
--   configuration.
infrastructureConfiguration_snsTopicArn :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The instance types of the infrastructure configuration.
infrastructureConfiguration_instanceTypes :: Lens' InfrastructureConfiguration (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the infrastructure configuration.
infrastructureConfiguration_arn :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The Amazon EC2 key pair of the infrastructure configuration.
infrastructureConfiguration_keyPair :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The tags attached to the resource created by Image Builder.
infrastructureConfiguration_resourceTags :: Lens' InfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The subnet ID of the infrastructure configuration.
infrastructureConfiguration_subnetId :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The date on which the infrastructure configuration was last updated.
infrastructureConfiguration_dateUpdated :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The date on which the infrastructure configuration was created.
infrastructureConfiguration_dateCreated :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The instance metadata option settings for the infrastructure
--   configuration.
infrastructureConfiguration_instanceMetadataOptions :: Lens' InfrastructureConfiguration (Maybe InstanceMetadataOptions)

-- | The name of the infrastructure configuration.
infrastructureConfiguration_name :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The instance profile of the infrastructure configuration.
infrastructureConfiguration_instanceProfileName :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The logging configuration of the infrastructure configuration.
infrastructureConfiguration_logging :: Lens' InfrastructureConfiguration (Maybe Logging)

-- | The description of the infrastructure configuration.
infrastructureConfiguration_description :: Lens' InfrastructureConfiguration (Maybe Text)

-- | The tags of the infrastructure configuration.
infrastructureConfiguration_tags :: Lens' InfrastructureConfiguration (Maybe (HashMap Text Text))

-- | The terminate instance on failure configuration of the infrastructure
--   configuration.
infrastructureConfiguration_terminateInstanceOnFailure :: Lens' InfrastructureConfiguration (Maybe Bool)

-- | The instance types of the infrastructure configuration.
infrastructureConfigurationSummary_instanceTypes :: Lens' InfrastructureConfigurationSummary (Maybe [Text])

-- | The Amazon Resource Name (ARN) of the infrastructure configuration.
infrastructureConfigurationSummary_arn :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The tags attached to the image created by Image Builder.
infrastructureConfigurationSummary_resourceTags :: Lens' InfrastructureConfigurationSummary (Maybe (HashMap Text Text))

-- | The date on which the infrastructure configuration was last updated.
infrastructureConfigurationSummary_dateUpdated :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The date on which the infrastructure configuration was created.
infrastructureConfigurationSummary_dateCreated :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The name of the infrastructure configuration.
infrastructureConfigurationSummary_name :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The instance profile of the infrastructure configuration.
infrastructureConfigurationSummary_instanceProfileName :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The description of the infrastructure configuration.
infrastructureConfigurationSummary_description :: Lens' InfrastructureConfigurationSummary (Maybe Text)

-- | The tags of the infrastructure configuration.
infrastructureConfigurationSummary_tags :: Lens' InfrastructureConfigurationSummary (Maybe (HashMap Text Text))

-- | Use to manage instance ephemeral devices.
instanceBlockDeviceMapping_virtualName :: Lens' InstanceBlockDeviceMapping (Maybe Text)

-- | Use to remove a mapping from the base image.
instanceBlockDeviceMapping_noDevice :: Lens' InstanceBlockDeviceMapping (Maybe Text)

-- | Use to manage Amazon EBS-specific configuration for this mapping.
instanceBlockDeviceMapping_ebs :: Lens' InstanceBlockDeviceMapping (Maybe EbsInstanceBlockDeviceSpecification)

-- | The device to which these mappings apply.
instanceBlockDeviceMapping_deviceName :: Lens' InstanceBlockDeviceMapping (Maybe Text)

-- | The AMI ID to use as the base image for a container build and test
--   instance. If not specified, Image Builder will use the appropriate
--   ECS-optimized AMI as a base image.
instanceConfiguration_image :: Lens' InstanceConfiguration (Maybe Text)

-- | Defines the block devices to attach for building an instance from this
--   Image Builder AMI.
instanceConfiguration_blockDeviceMappings :: Lens' InstanceConfiguration (Maybe [InstanceBlockDeviceMapping])

-- | Limit the number of hops that an instance metadata request can
--   traverse to reach its destination.
instanceMetadataOptions_httpPutResponseHopLimit :: Lens' InstanceMetadataOptions (Maybe Natural)

-- | Indicates whether a signed token header is required for instance
--   metadata retrieval requests. The values affect the response as
--   follows:
--   
--   <ul>
--   <li><b>required</b> – When you retrieve the IAM role credentials,
--   version 2.0 credentials are returned in all cases.</li>
--   <li><b>optional</b> – You can include a signed token header in your
--   request to retrieve instance metadata, or you can leave it out. If you
--   include it, version 2.0 credentials are returned for the IAM role.
--   Otherwise, version 1.0 credentials are returned.</li>
--   </ul>
--   
--   The default setting is <b>optional</b>.
instanceMetadataOptions_httpTokens :: Lens' InstanceMetadataOptions (Maybe Text)

-- | The Amazon Web Services account ID.
launchPermissionConfiguration_userIds :: Lens' LaunchPermissionConfiguration (Maybe (NonEmpty Text))

-- | The name of the group.
launchPermissionConfiguration_userGroups :: Lens' LaunchPermissionConfiguration (Maybe [Text])

-- | Set the specified Amazon EC2 launch template as the default launch
--   template for the specified account.
launchTemplateConfiguration_setDefaultVersion :: Lens' LaunchTemplateConfiguration (Maybe Bool)

-- | The account ID that this configuration applies to.
launchTemplateConfiguration_accountId :: Lens' LaunchTemplateConfiguration (Maybe Text)

-- | Identifies the Amazon EC2 launch template to use.
launchTemplateConfiguration_launchTemplateId :: Lens' LaunchTemplateConfiguration Text

-- | The Amazon S3 logging configuration.
logging_s3Logs :: Lens' Logging (Maybe S3Logs)

-- | Container images that the pipeline has generated and stored in the
--   output repository.
outputResources_containers :: Lens' OutputResources (Maybe [Container])

-- | The Amazon EC2 AMIs created by this image.
outputResources_amis :: Lens' OutputResources (Maybe [Ami])

-- | The Amazon S3 path in which to store the logs.
s3Logs_s3KeyPrefix :: Lens' S3Logs (Maybe Text)

-- | The Amazon S3 bucket in which to store the logs.
s3Logs_s3BucketName :: Lens' S3Logs (Maybe Text)

-- | The cron expression determines how often EC2 Image Builder evaluates
--   your <tt>pipelineExecutionStartCondition</tt>.
--   
--   For information on how to format a cron expression in Image Builder,
--   see <a>Use cron expressions in EC2 Image Builder</a>.
schedule_scheduleExpression :: Lens' Schedule (Maybe Text)

-- | The condition configures when the pipeline should trigger a new image
--   build. When the <tt>pipelineExecutionStartCondition</tt> is set to
--   <tt>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</tt>, and you
--   use semantic version filters on the base image or components in your
--   image recipe, EC2 Image Builder will build a new image only when there
--   are new versions of the image or components in your recipe that match
--   the semantic version filter. When it is set to
--   <tt>EXPRESSION_MATCH_ONLY</tt>, it will build a new image every time
--   the CRON expression matches the current time. For semantic version
--   syntax, see <a>CreateComponent</a> in the <i>EC2 Image Builder API
--   Reference</i>.
schedule_pipelineExecutionStartCondition :: Lens' Schedule (Maybe PipelineExecutionStartCondition)

-- | The timezone that applies to the scheduling expression. For example,
--   "Etc/UTC", "America/Los_Angeles" in the <a>IANA timezone format</a>.
--   If not specified this defaults to UTC.
schedule_timezone :: Lens' Schedule (Maybe Text)

-- | Controls whether the Systems Manager agent is removed from your final
--   build image, prior to creating the new AMI. If this is set to true,
--   then the agent is removed from the final image. If it's set to false,
--   then the agent is left in, so that it is included in the new AMI. The
--   default value is false.
systemsManagerAgent_uninstallAfterBuild :: Lens' SystemsManagerAgent (Maybe Bool)

-- | Specifies the service in which this image was registered.
targetContainerRepository_service :: Lens' TargetContainerRepository ContainerRepositoryService

-- | The name of the container repository where the output container image
--   is stored. This name is prefixed by the repository location.
targetContainerRepository_repositoryName :: Lens' TargetContainerRepository Text


module Amazonka.ImageBuilder.Waiters


-- | Derived from API version <tt>2019-12-02</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   EC2 Image Builder is a fully managed Amazon Web Services service that
--   makes it easier to automate the creation, management, and deployment
--   of customized, secure, and up-to-date "golden" server images that are
--   pre-installed and pre-configured with software and settings to meet
--   specific IT standards.
module Amazonka.ImageBuilder

-- | API version <tt>2019-12-02</tt> of the Amazon EC2 Image Builder SDK
--   configuration.
defaultService :: Service

-- | The specified parameter is invalid. Review the available parameters
--   for the API request.
_InvalidParameterException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have made a request for an action that is not supported by the
--   service.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you are trying to create already exists.
_ResourceAlreadyExistsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded the permitted request rate for the specific
--   operation.
_CallRateLimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You are not authorized to perform the requested operation.
_ForbiddenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value that you provided for the specified parameter is invalid.
_InvalidParameterValueException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your version number is out of bounds or does not follow the required
--   syntax.
_InvalidVersionNumberException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have exceeded the number of permitted resources or operations for
--   this service. For service quotas, see <a>EC2 Image Builder endpoints
--   and quotas</a>.
_ServiceQuotaExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This exception is thrown when the service encounters an unrecoverable
--   exception.
_ServiceException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have attempted to mutate or delete a resource with a dependency
--   that prohibits this action. See the error message for more details.
_ResourceDependencyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is unable to process your request at this time.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified a client token for an operation using parameter
--   values that differ from a previous request that used the same client
--   token.
_IdempotentParameterMismatchException :: AsError a => Getting (First ServiceError) a ServiceError

-- | These errors are usually caused by a client action, such as using an
--   action or resource on behalf of a user that doesn't have permissions
--   to use the action or resource, or specifying an invalid resource
--   identifier.
_ClientException :: AsError a => Getting (First ServiceError) a ServiceError

-- | At least one of the resources referenced by your request does not
--   exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have specified two or more mutually exclusive parameters. Review
--   the error message for details.
_InvalidParameterCombinationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | You have provided an invalid pagination token in your request.
_InvalidPaginationTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource that you are trying to operate on is currently in use.
--   Review the message details and retry later.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newListImagePackages</a> smart constructor.
data ListImagePackages
ListImagePackages' :: Maybe Text -> Maybe Natural -> Text -> ListImagePackages

-- | Create a value of <a>ListImagePackages</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListImagePackages'</a>,
--   <a>listImagePackages_nextToken</a> - A token to specify where to start
--   paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListImagePackages'</a>,
--   <a>listImagePackages_maxResults</a> - The maxiumum number of results
--   to return from the ListImagePackages request.
--   
--   <a>$sel:imageBuildVersionArn:ListImagePackages'</a>,
--   <a>listImagePackages_imageBuildVersionArn</a> - Filter results for the
--   ListImagePackages request by the Image Build Version ARN
newListImagePackages :: Text -> ListImagePackages

-- | <i>See:</i> <a>newListImagePackagesResponse</a> smart constructor.
data ListImagePackagesResponse
ListImagePackagesResponse' :: Maybe Text -> Maybe [ImagePackage] -> Maybe Text -> Int -> ListImagePackagesResponse

-- | Create a value of <a>ListImagePackagesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImagePackagesResponse'</a>,
--   <a>listImagePackagesResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:imagePackageList:ListImagePackagesResponse'</a>,
--   <a>listImagePackagesResponse_imagePackageList</a> - The list of Image
--   Packages returned in the response.
--   
--   <a>$sel:nextToken:ListImagePackages'</a>,
--   <a>listImagePackagesResponse_nextToken</a> - A token to specify where
--   to start paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:httpStatus:ListImagePackagesResponse'</a>,
--   <a>listImagePackagesResponse_httpStatus</a> - The response's http
--   status code.
newListImagePackagesResponse :: Int -> ListImagePackagesResponse

-- | <i>See:</i> <a>newGetDistributionConfiguration</a> smart constructor.
data GetDistributionConfiguration
GetDistributionConfiguration' :: Text -> GetDistributionConfiguration

-- | Create a value of <a>GetDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:distributionConfigurationArn:GetDistributionConfiguration'</a>,
--   <a>getDistributionConfiguration_distributionConfigurationArn</a> - The
--   Amazon Resource Name (ARN) of the distribution configuration that you
--   want to retrieve.
newGetDistributionConfiguration :: Text -> GetDistributionConfiguration

-- | <i>See:</i> <a>newGetDistributionConfigurationResponse</a> smart
--   constructor.
data GetDistributionConfigurationResponse
GetDistributionConfigurationResponse' :: Maybe Text -> Maybe DistributionConfiguration -> Int -> GetDistributionConfigurationResponse

-- | Create a value of <a>GetDistributionConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetDistributionConfigurationResponse'</a>,
--   <a>getDistributionConfigurationResponse_requestId</a> - The request ID
--   that uniquely identifies this request.
--   
--   
--   <a>$sel:distributionConfiguration:GetDistributionConfigurationResponse'</a>,
--   <a>getDistributionConfigurationResponse_distributionConfiguration</a>
--   - The distribution configuration object.
--   
--   <a>$sel:httpStatus:GetDistributionConfigurationResponse'</a>,
--   <a>getDistributionConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newGetDistributionConfigurationResponse :: Int -> GetDistributionConfigurationResponse

-- | <i>See:</i> <a>newImportComponent</a> smart constructor.
data ImportComponent
ImportComponent' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> ComponentType -> ComponentFormat -> Platform -> Text -> ImportComponent

-- | Create a value of <a>ImportComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':ImportComponent'</a>, <a>importComponent_data</a> - The
--   data of the component. Used to specify the data inline. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
--   
--   <a>$sel:uri:ImportComponent'</a>, <a>importComponent_uri</a> - The uri
--   of the component. Must be an Amazon S3 URL and the requester must have
--   permission to access the Amazon S3 bucket. If you use Amazon S3, you
--   can specify component content up to your service quota. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
--   
--   <a>$sel:kmsKeyId:ImportComponent'</a>, <a>importComponent_kmsKeyId</a>
--   - The ID of the KMS key that should be used to encrypt this component.
--   
--   <a>$sel:changeDescription:ImportComponent'</a>,
--   <a>importComponent_changeDescription</a> - The change description of
--   the component. Describes what change has been made in this version, or
--   what makes this version different from other versions of this
--   component.
--   
--   <a>$sel:description:ImportComponent'</a>,
--   <a>importComponent_description</a> - The description of the component.
--   Describes the contents of the component.
--   
--   <a>$sel:tags:ImportComponent'</a>, <a>importComponent_tags</a> - The
--   tags of the component.
--   
--   <a>$sel:name:ImportComponent'</a>, <a>importComponent_name</a> - The
--   name of the component.
--   
--   <a>$sel:semanticVersion:ImportComponent'</a>,
--   <a>importComponent_semanticVersion</a> - The semantic version of the
--   component. This version follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:type':ImportComponent'</a>, <a>importComponent_type</a> - The
--   type of the component denotes whether the component is used to build
--   the image, or only to test it.
--   
--   <a>$sel:format:ImportComponent'</a>, <a>importComponent_format</a> -
--   The format of the resource that you want to import as a component.
--   
--   <a>$sel:platform:ImportComponent'</a>, <a>importComponent_platform</a>
--   - The platform of the component.
--   
--   <a>$sel:clientToken:ImportComponent'</a>,
--   <a>importComponent_clientToken</a> - The idempotency token of the
--   component.
newImportComponent :: Text -> Text -> ComponentType -> ComponentFormat -> Platform -> Text -> ImportComponent

-- | <i>See:</i> <a>newImportComponentResponse</a> smart constructor.
data ImportComponentResponse
ImportComponentResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> ImportComponentResponse

-- | Create a value of <a>ImportComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ImportComponentResponse'</a>,
--   <a>importComponentResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:ImportComponent'</a>,
--   <a>importComponentResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:componentBuildVersionArn:ImportComponentResponse'</a>,
--   <a>importComponentResponse_componentBuildVersionArn</a> - The Amazon
--   Resource Name (ARN) of the imported component.
--   
--   <a>$sel:httpStatus:ImportComponentResponse'</a>,
--   <a>importComponentResponse_httpStatus</a> - The response's http status
--   code.
newImportComponentResponse :: Int -> ImportComponentResponse

-- | <i>See:</i> <a>newListComponentBuildVersions</a> smart constructor.
data ListComponentBuildVersions
ListComponentBuildVersions' :: Maybe Text -> Maybe Natural -> Text -> ListComponentBuildVersions

-- | Create a value of <a>ListComponentBuildVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListComponentBuildVersions'</a>,
--   <a>listComponentBuildVersions_nextToken</a> - A token to specify where
--   to start paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListComponentBuildVersions'</a>,
--   <a>listComponentBuildVersions_maxResults</a> - The maximum items to
--   return in a request.
--   
--   <a>$sel:componentVersionArn:ListComponentBuildVersions'</a>,
--   <a>listComponentBuildVersions_componentVersionArn</a> - The component
--   version Amazon Resource Name (ARN) whose versions you want to list.
newListComponentBuildVersions :: Text -> ListComponentBuildVersions

-- | <i>See:</i> <a>newListComponentBuildVersionsResponse</a> smart
--   constructor.
data ListComponentBuildVersionsResponse
ListComponentBuildVersionsResponse' :: Maybe Text -> Maybe Text -> Maybe [ComponentSummary] -> Int -> ListComponentBuildVersionsResponse

-- | Create a value of <a>ListComponentBuildVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListComponentBuildVersionsResponse'</a>,
--   <a>listComponentBuildVersionsResponse_requestId</a> - The request ID
--   that uniquely identifies this request.
--   
--   <a>$sel:nextToken:ListComponentBuildVersions'</a>,
--   <a>listComponentBuildVersionsResponse_nextToken</a> - The next token
--   used for paginated responses. When this is not empty, there are
--   additional elements that the service has not included in this request.
--   Use this token with the next request to retrieve additional objects.
--   
--   <a>$sel:componentSummaryList:ListComponentBuildVersionsResponse'</a>,
--   <a>listComponentBuildVersionsResponse_componentSummaryList</a> - The
--   list of component summaries for the specified semantic version.
--   
--   <a>$sel:httpStatus:ListComponentBuildVersionsResponse'</a>,
--   <a>listComponentBuildVersionsResponse_httpStatus</a> - The response's
--   http status code.
newListComponentBuildVersionsResponse :: Int -> ListComponentBuildVersionsResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource whose tags you want to retrieve.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (HashMap Text Text) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The tags for the specified
--   resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newListImageBuildVersions</a> smart constructor.
data ListImageBuildVersions
ListImageBuildVersions' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Natural -> Text -> ListImageBuildVersions

-- | Create a value of <a>ListImageBuildVersions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListImageBuildVersions'</a>,
--   <a>listImageBuildVersions_filters</a> - Use the following filters to
--   streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>osVersion</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
--   
--   <a>$sel:nextToken:ListImageBuildVersions'</a>,
--   <a>listImageBuildVersions_nextToken</a> - A token to specify where to
--   start paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListImageBuildVersions'</a>,
--   <a>listImageBuildVersions_maxResults</a> - The maximum items to return
--   in a request.
--   
--   <a>$sel:imageVersionArn:ListImageBuildVersions'</a>,
--   <a>listImageBuildVersions_imageVersionArn</a> - The Amazon Resource
--   Name (ARN) of the image whose build versions you want to retrieve.
newListImageBuildVersions :: Text -> ListImageBuildVersions

-- | <i>See:</i> <a>newListImageBuildVersionsResponse</a> smart
--   constructor.
data ListImageBuildVersionsResponse
ListImageBuildVersionsResponse' :: Maybe Text -> Maybe Text -> Maybe [ImageSummary] -> Int -> ListImageBuildVersionsResponse

-- | Create a value of <a>ListImageBuildVersionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImageBuildVersionsResponse'</a>,
--   <a>listImageBuildVersionsResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:nextToken:ListImageBuildVersions'</a>,
--   <a>listImageBuildVersionsResponse_nextToken</a> - The next token used
--   for paginated responses. When this is not empty, there are additional
--   elements that the service has not included in this request. Use this
--   token with the next request to retrieve additional objects.
--   
--   <a>$sel:imageSummaryList:ListImageBuildVersionsResponse'</a>,
--   <a>listImageBuildVersionsResponse_imageSummaryList</a> - The list of
--   image build versions.
--   
--   <a>$sel:httpStatus:ListImageBuildVersionsResponse'</a>,
--   <a>listImageBuildVersionsResponse_httpStatus</a> - The response's http
--   status code.
newListImageBuildVersionsResponse :: Int -> ListImageBuildVersionsResponse

-- | <i>See:</i> <a>newCancelImageCreation</a> smart constructor.
data CancelImageCreation
CancelImageCreation' :: Text -> Text -> CancelImageCreation

-- | Create a value of <a>CancelImageCreation</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuildVersionArn:CancelImageCreation'</a>,
--   <a>cancelImageCreation_imageBuildVersionArn</a> - The Amazon Resource
--   Name (ARN) of the image whose creation you want to cancel.
--   
--   <a>$sel:clientToken:CancelImageCreation'</a>,
--   <a>cancelImageCreation_clientToken</a> - The idempotency token used to
--   make this request idempotent.
newCancelImageCreation :: Text -> Text -> CancelImageCreation

-- | <i>See:</i> <a>newCancelImageCreationResponse</a> smart constructor.
data CancelImageCreationResponse
CancelImageCreationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CancelImageCreationResponse

-- | Create a value of <a>CancelImageCreationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CancelImageCreationResponse'</a>,
--   <a>cancelImageCreationResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:CancelImageCreation'</a>,
--   <a>cancelImageCreationResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:imageBuildVersionArn:CancelImageCreation'</a>,
--   <a>cancelImageCreationResponse_imageBuildVersionArn</a> - The Amazon
--   Resource Name (ARN) of the image whose creation has been cancelled.
--   
--   <a>$sel:httpStatus:CancelImageCreationResponse'</a>,
--   <a>cancelImageCreationResponse_httpStatus</a> - The response's http
--   status code.
newCancelImageCreationResponse :: Int -> CancelImageCreationResponse

-- | <i>See:</i> <a>newGetImagePipeline</a> smart constructor.
data GetImagePipeline
GetImagePipeline' :: Text -> GetImagePipeline

-- | Create a value of <a>GetImagePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePipelineArn:GetImagePipeline'</a>,
--   <a>getImagePipeline_imagePipelineArn</a> - The Amazon Resource Name
--   (ARN) of the image pipeline that you want to retrieve.
newGetImagePipeline :: Text -> GetImagePipeline

-- | <i>See:</i> <a>newGetImagePipelineResponse</a> smart constructor.
data GetImagePipelineResponse
GetImagePipelineResponse' :: Maybe Text -> Maybe ImagePipeline -> Int -> GetImagePipelineResponse

-- | Create a value of <a>GetImagePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetImagePipelineResponse'</a>,
--   <a>getImagePipelineResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:imagePipeline:GetImagePipelineResponse'</a>,
--   <a>getImagePipelineResponse_imagePipeline</a> - The image pipeline
--   object.
--   
--   <a>$sel:httpStatus:GetImagePipelineResponse'</a>,
--   <a>getImagePipelineResponse_httpStatus</a> - The response's http
--   status code.
newGetImagePipelineResponse :: Int -> GetImagePipelineResponse

-- | <i>See:</i> <a>newCreateInfrastructureConfiguration</a> smart
--   constructor.
data CreateInfrastructureConfiguration
CreateInfrastructureConfiguration' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe InstanceMetadataOptions -> Maybe Logging -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Text -> Text -> Text -> CreateInfrastructureConfiguration

-- | Create a value of <a>CreateInfrastructureConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_securityGroupIds</a> - The
--   security group IDs to associate with the instance used to customize
--   your Amazon EC2 AMI.
--   
--   <a>$sel:snsTopicArn:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_snsTopicArn</a> - The SNS topic
--   on which to send image build events.
--   
--   <a>$sel:instanceTypes:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_instanceTypes</a> - The instance
--   types of the infrastructure configuration. You can specify one or more
--   instance types to use for this build. The service will pick one of
--   these instance types based on availability.
--   
--   <a>$sel:keyPair:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_keyPair</a> - The key pair of the
--   infrastructure configuration. You can use this to log on to and debug
--   the instance used to create your image.
--   
--   <a>$sel:resourceTags:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_resourceTags</a> - The tags
--   attached to the resource created by Image Builder.
--   
--   <a>$sel:subnetId:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_subnetId</a> - The subnet ID in
--   which to place the instance used to customize your Amazon EC2 AMI.
--   
--   
--   <a>$sel:instanceMetadataOptions:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_instanceMetadataOptions</a> - The
--   instance metadata options that you can set for the HTTP requests that
--   pipeline builds use to launch EC2 build and test instances.
--   
--   <a>$sel:logging:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_logging</a> - The logging
--   configuration of the infrastructure configuration.
--   
--   <a>$sel:description:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_description</a> - The description
--   of the infrastructure configuration.
--   
--   <a>$sel:tags:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_tags</a> - The tags of the
--   infrastructure configuration.
--   
--   
--   <a>$sel:terminateInstanceOnFailure:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_terminateInstanceOnFailure</a> -
--   The terminate instance on failure setting of the infrastructure
--   configuration. Set to false if you want Image Builder to retain the
--   instance used to configure your AMI if the build or test phase of your
--   workflow fails.
--   
--   <a>$sel:name:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_name</a> - The name of the
--   infrastructure configuration.
--   
--   <a>$sel:instanceProfileName:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_instanceProfileName</a> - The
--   instance profile to associate with the instance used to customize your
--   Amazon EC2 AMI.
--   
--   <a>$sel:clientToken:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfiguration_clientToken</a> - The idempotency
--   token used to make this request idempotent.
newCreateInfrastructureConfiguration :: Text -> Text -> Text -> CreateInfrastructureConfiguration

-- | <i>See:</i> <a>newCreateInfrastructureConfigurationResponse</a> smart
--   constructor.
data CreateInfrastructureConfigurationResponse
CreateInfrastructureConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateInfrastructureConfigurationResponse

-- | Create a value of <a>CreateInfrastructureConfigurationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateInfrastructureConfigurationResponse'</a>,
--   <a>createInfrastructureConfigurationResponse_requestId</a> - The
--   request ID that uniquely identifies this request.
--   
--   
--   <a>$sel:infrastructureConfigurationArn:CreateInfrastructureConfigurationResponse'</a>,
--   <a>createInfrastructureConfigurationResponse_infrastructureConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was created by this request.
--   
--   <a>$sel:clientToken:CreateInfrastructureConfiguration'</a>,
--   <a>createInfrastructureConfigurationResponse_clientToken</a> - The
--   idempotency token used to make this request idempotent.
--   
--   <a>$sel:httpStatus:CreateInfrastructureConfigurationResponse'</a>,
--   <a>createInfrastructureConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newCreateInfrastructureConfigurationResponse :: Int -> CreateInfrastructureConfigurationResponse

-- | <i>See:</i> <a>newListDistributionConfigurations</a> smart
--   constructor.
data ListDistributionConfigurations
ListDistributionConfigurations' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Natural -> ListDistributionConfigurations

-- | Create a value of <a>ListDistributionConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListDistributionConfigurations'</a>,
--   <a>listDistributionConfigurations_filters</a> - You can filter on
--   <tt>name</tt> to streamline results.
--   
--   <a>$sel:nextToken:ListDistributionConfigurations'</a>,
--   <a>listDistributionConfigurations_nextToken</a> - A token to specify
--   where to start paginating. This is the NextToken from a previously
--   truncated response.
--   
--   <a>$sel:maxResults:ListDistributionConfigurations'</a>,
--   <a>listDistributionConfigurations_maxResults</a> - The maximum items
--   to return in a request.
newListDistributionConfigurations :: ListDistributionConfigurations

-- | <i>See:</i> <a>newListDistributionConfigurationsResponse</a> smart
--   constructor.
data ListDistributionConfigurationsResponse
ListDistributionConfigurationsResponse' :: Maybe Text -> Maybe [DistributionConfigurationSummary] -> Maybe Text -> Int -> ListDistributionConfigurationsResponse

-- | Create a value of <a>ListDistributionConfigurationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListDistributionConfigurationsResponse'</a>,
--   <a>listDistributionConfigurationsResponse_requestId</a> - The request
--   ID that uniquely identifies this request.
--   
--   
--   <a>$sel:distributionConfigurationSummaryList:ListDistributionConfigurationsResponse'</a>,
--   <a>listDistributionConfigurationsResponse_distributionConfigurationSummaryList</a>
--   - The list of distributions.
--   
--   <a>$sel:nextToken:ListDistributionConfigurations'</a>,
--   <a>listDistributionConfigurationsResponse_nextToken</a> - The next
--   token used for paginated responses. When this is not empty, there are
--   additional elements that the service has not included in this request.
--   Use this token with the next request to retrieve additional objects.
--   
--   <a>$sel:httpStatus:ListDistributionConfigurationsResponse'</a>,
--   <a>listDistributionConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newListDistributionConfigurationsResponse :: Int -> ListDistributionConfigurationsResponse

-- | <i>See:</i> <a>newCreateContainerRecipe</a> smart constructor.
data CreateContainerRecipe
CreateContainerRecipe' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Platform -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe InstanceConfiguration -> ContainerType -> Text -> Text -> NonEmpty ComponentConfiguration -> Text -> TargetContainerRepository -> Text -> CreateContainerRecipe

-- | Create a value of <a>CreateContainerRecipe</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dockerfileTemplateData:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_dockerfileTemplateData</a> - The Dockerfile
--   template used to build your image as an inline data blob.
--   
--   <a>$sel:imageOsVersionOverride:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_imageOsVersionOverride</a> - Specifies the
--   operating system version for the base image.
--   
--   <a>$sel:workingDirectory:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_workingDirectory</a> - The working directory
--   for use during build and test workflows.
--   
--   <a>$sel:dockerfileTemplateUri:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_dockerfileTemplateUri</a> - The Amazon S3 URI
--   for the Dockerfile that will be used to build your container image.
--   
--   <a>$sel:kmsKeyId:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_kmsKeyId</a> - Identifies which KMS key is
--   used to encrypt the container image.
--   
--   <a>$sel:platformOverride:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_platformOverride</a> - Specifies the
--   operating system platform when you use a custom base image.
--   
--   <a>$sel:description:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_description</a> - The description of the
--   container recipe.
--   
--   <a>$sel:tags:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_tags</a> - Tags that are attached to the
--   container recipe.
--   
--   <a>$sel:instanceConfiguration:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_instanceConfiguration</a> - A group of
--   options that can be used to configure an instance for building and
--   testing container images.
--   
--   <a>$sel:containerType:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_containerType</a> - The type of container to
--   create.
--   
--   <a>$sel:name:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_name</a> - The name of the container recipe.
--   
--   <a>$sel:semanticVersion:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_semanticVersion</a> - The semantic version of
--   the container recipe. This version follows the semantic version
--   syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <a>$sel:components:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_components</a> - Components for build and
--   test that are included in the container recipe.
--   
--   <a>$sel:parentImage:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_parentImage</a> - The base image for the
--   container recipe.
--   
--   <a>$sel:targetRepository:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_targetRepository</a> - The destination
--   repository for the container image.
--   
--   <a>$sel:clientToken:CreateContainerRecipe'</a>,
--   <a>createContainerRecipe_clientToken</a> - The client token used to
--   make this request idempotent.
newCreateContainerRecipe :: ContainerType -> Text -> Text -> NonEmpty ComponentConfiguration -> Text -> TargetContainerRepository -> Text -> CreateContainerRecipe

-- | <i>See:</i> <a>newCreateContainerRecipeResponse</a> smart constructor.
data CreateContainerRecipeResponse
CreateContainerRecipeResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateContainerRecipeResponse

-- | Create a value of <a>CreateContainerRecipeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateContainerRecipeResponse'</a>,
--   <a>createContainerRecipeResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:CreateContainerRecipe'</a>,
--   <a>createContainerRecipeResponse_clientToken</a> - The client token
--   used to make this request idempotent.
--   
--   <a>$sel:containerRecipeArn:CreateContainerRecipeResponse'</a>,
--   <a>createContainerRecipeResponse_containerRecipeArn</a> - Returns the
--   Amazon Resource Name (ARN) of the container recipe that the request
--   created.
--   
--   <a>$sel:httpStatus:CreateContainerRecipeResponse'</a>,
--   <a>createContainerRecipeResponse_httpStatus</a> - The response's http
--   status code.
newCreateContainerRecipeResponse :: Int -> CreateContainerRecipeResponse

-- | <i>See:</i> <a>newListInfrastructureConfigurations</a> smart
--   constructor.
data ListInfrastructureConfigurations
ListInfrastructureConfigurations' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Natural -> ListInfrastructureConfigurations

-- | Create a value of <a>ListInfrastructureConfigurations</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListInfrastructureConfigurations'</a>,
--   <a>listInfrastructureConfigurations_filters</a> - You can filter on
--   <tt>name</tt> to streamline results.
--   
--   <a>$sel:nextToken:ListInfrastructureConfigurations'</a>,
--   <a>listInfrastructureConfigurations_nextToken</a> - A token to specify
--   where to start paginating. This is the NextToken from a previously
--   truncated response.
--   
--   <a>$sel:maxResults:ListInfrastructureConfigurations'</a>,
--   <a>listInfrastructureConfigurations_maxResults</a> - The maximum items
--   to return in a request.
newListInfrastructureConfigurations :: ListInfrastructureConfigurations

-- | <i>See:</i> <a>newListInfrastructureConfigurationsResponse</a> smart
--   constructor.
data ListInfrastructureConfigurationsResponse
ListInfrastructureConfigurationsResponse' :: Maybe Text -> Maybe [InfrastructureConfigurationSummary] -> Maybe Text -> Int -> ListInfrastructureConfigurationsResponse

-- | Create a value of <a>ListInfrastructureConfigurationsResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListInfrastructureConfigurationsResponse'</a>,
--   <a>listInfrastructureConfigurationsResponse_requestId</a> - The
--   request ID that uniquely identifies this request.
--   
--   
--   <a>$sel:infrastructureConfigurationSummaryList:ListInfrastructureConfigurationsResponse'</a>,
--   <a>listInfrastructureConfigurationsResponse_infrastructureConfigurationSummaryList</a>
--   - The list of infrastructure configurations.
--   
--   <a>$sel:nextToken:ListInfrastructureConfigurations'</a>,
--   <a>listInfrastructureConfigurationsResponse_nextToken</a> - The next
--   token used for paginated responses. When this is not empty, there are
--   additional elements that the service has not included in this request.
--   Use this token with the next request to retrieve additional objects.
--   
--   <a>$sel:httpStatus:ListInfrastructureConfigurationsResponse'</a>,
--   <a>listInfrastructureConfigurationsResponse_httpStatus</a> - The
--   response's http status code.
newListInfrastructureConfigurationsResponse :: Int -> ListInfrastructureConfigurationsResponse

-- | <i>See:</i> <a>newPutImageRecipePolicy</a> smart constructor.
data PutImageRecipePolicy
PutImageRecipePolicy' :: Text -> Text -> PutImageRecipePolicy

-- | Create a value of <a>PutImageRecipePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRecipeArn:PutImageRecipePolicy'</a>,
--   <a>putImageRecipePolicy_imageRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the image recipe that this policy should be applied to.
--   
--   <a>$sel:policy:PutImageRecipePolicy'</a>,
--   <a>putImageRecipePolicy_policy</a> - The policy to apply.
newPutImageRecipePolicy :: Text -> Text -> PutImageRecipePolicy

-- | <i>See:</i> <a>newPutImageRecipePolicyResponse</a> smart constructor.
data PutImageRecipePolicyResponse
PutImageRecipePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> PutImageRecipePolicyResponse

-- | Create a value of <a>PutImageRecipePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:PutImageRecipePolicyResponse'</a>,
--   <a>putImageRecipePolicyResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:imageRecipeArn:PutImageRecipePolicy'</a>,
--   <a>putImageRecipePolicyResponse_imageRecipeArn</a> - The Amazon
--   Resource Name (ARN) of the image recipe that this policy was applied
--   to.
--   
--   <a>$sel:httpStatus:PutImageRecipePolicyResponse'</a>,
--   <a>putImageRecipePolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutImageRecipePolicyResponse :: Int -> PutImageRecipePolicyResponse

-- | <i>See:</i> <a>newListContainerRecipes</a> smart constructor.
data ListContainerRecipes
ListContainerRecipes' :: Maybe (NonEmpty Filter) -> Maybe Ownership -> Maybe Text -> Maybe Natural -> ListContainerRecipes

-- | Create a value of <a>ListContainerRecipes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListContainerRecipes'</a>,
--   <a>listContainerRecipes_filters</a> - Use the following filters to
--   streamline results:
--   
--   <ul>
--   <li><pre>containerType</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>parentImage</pre></li>
--   <li><pre>platform</pre></li>
--   </ul>
--   
--   <a>$sel:owner:ListContainerRecipes'</a>,
--   <a>listContainerRecipes_owner</a> - Returns container recipes
--   belonging to the specified owner, that have been shared with you. You
--   can omit this field to return container recipes belonging to your
--   account.
--   
--   <a>$sel:nextToken:ListContainerRecipes'</a>,
--   <a>listContainerRecipes_nextToken</a> - Provides a token for
--   pagination, which determines where to begin the next set of results
--   when the current set reaches the maximum for one request.
--   
--   <a>$sel:maxResults:ListContainerRecipes'</a>,
--   <a>listContainerRecipes_maxResults</a> - The maximum number of results
--   to return in the list.
newListContainerRecipes :: ListContainerRecipes

-- | <i>See:</i> <a>newListContainerRecipesResponse</a> smart constructor.
data ListContainerRecipesResponse
ListContainerRecipesResponse' :: Maybe Text -> Maybe [ContainerRecipeSummary] -> Maybe Text -> Int -> ListContainerRecipesResponse

-- | Create a value of <a>ListContainerRecipesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListContainerRecipesResponse'</a>,
--   <a>listContainerRecipesResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:containerRecipeSummaryList:ListContainerRecipesResponse'</a>,
--   <a>listContainerRecipesResponse_containerRecipeSummaryList</a> - The
--   list of container recipes returned for the request.
--   
--   <a>$sel:nextToken:ListContainerRecipes'</a>,
--   <a>listContainerRecipesResponse_nextToken</a> - The next token field
--   is used for paginated responses. When this is not empty, there are
--   additional container recipes that the service has not included in this
--   response. Use this token with the next request to retrieve additional
--   list items.
--   
--   <a>$sel:httpStatus:ListContainerRecipesResponse'</a>,
--   <a>listContainerRecipesResponse_httpStatus</a> - The response's http
--   status code.
newListContainerRecipesResponse :: Int -> ListContainerRecipesResponse

-- | <i>See:</i> <a>newPutImagePolicy</a> smart constructor.
data PutImagePolicy
PutImagePolicy' :: Text -> Text -> PutImagePolicy

-- | Create a value of <a>PutImagePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageArn:PutImagePolicy'</a>, <a>putImagePolicy_imageArn</a> -
--   The Amazon Resource Name (ARN) of the image that this policy should be
--   applied to.
--   
--   <a>$sel:policy:PutImagePolicy'</a>, <a>putImagePolicy_policy</a> - The
--   policy to apply.
newPutImagePolicy :: Text -> Text -> PutImagePolicy

-- | <i>See:</i> <a>newPutImagePolicyResponse</a> smart constructor.
data PutImagePolicyResponse
PutImagePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> PutImagePolicyResponse

-- | Create a value of <a>PutImagePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:PutImagePolicyResponse'</a>,
--   <a>putImagePolicyResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:imageArn:PutImagePolicy'</a>,
--   <a>putImagePolicyResponse_imageArn</a> - The Amazon Resource Name
--   (ARN) of the image that this policy was applied to.
--   
--   <a>$sel:httpStatus:PutImagePolicyResponse'</a>,
--   <a>putImagePolicyResponse_httpStatus</a> - The response's http status
--   code.
newPutImagePolicyResponse :: Int -> PutImagePolicyResponse

-- | <i>See:</i> <a>newDeleteContainerRecipe</a> smart constructor.
data DeleteContainerRecipe
DeleteContainerRecipe' :: Text -> DeleteContainerRecipe

-- | Create a value of <a>DeleteContainerRecipe</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerRecipeArn:DeleteContainerRecipe'</a>,
--   <a>deleteContainerRecipe_containerRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the container recipe to delete.
newDeleteContainerRecipe :: Text -> DeleteContainerRecipe

-- | <i>See:</i> <a>newDeleteContainerRecipeResponse</a> smart constructor.
data DeleteContainerRecipeResponse
DeleteContainerRecipeResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteContainerRecipeResponse

-- | Create a value of <a>DeleteContainerRecipeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteContainerRecipeResponse'</a>,
--   <a>deleteContainerRecipeResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:containerRecipeArn:DeleteContainerRecipe'</a>,
--   <a>deleteContainerRecipeResponse_containerRecipeArn</a> - The Amazon
--   Resource Name (ARN) of the container recipe that was deleted.
--   
--   <a>$sel:httpStatus:DeleteContainerRecipeResponse'</a>,
--   <a>deleteContainerRecipeResponse_httpStatus</a> - The response's http
--   status code.
newDeleteContainerRecipeResponse :: Int -> DeleteContainerRecipeResponse

-- | <i>See:</i> <a>newPutComponentPolicy</a> smart constructor.
data PutComponentPolicy
PutComponentPolicy' :: Text -> Text -> PutComponentPolicy

-- | Create a value of <a>PutComponentPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:componentArn:PutComponentPolicy'</a>,
--   <a>putComponentPolicy_componentArn</a> - The Amazon Resource Name
--   (ARN) of the component that this policy should be applied to.
--   
--   <a>$sel:policy:PutComponentPolicy'</a>,
--   <a>putComponentPolicy_policy</a> - The policy to apply.
newPutComponentPolicy :: Text -> Text -> PutComponentPolicy

-- | <i>See:</i> <a>newPutComponentPolicyResponse</a> smart constructor.
data PutComponentPolicyResponse
PutComponentPolicyResponse' :: Maybe Text -> Maybe Text -> Int -> PutComponentPolicyResponse

-- | Create a value of <a>PutComponentPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:PutComponentPolicyResponse'</a>,
--   <a>putComponentPolicyResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:componentArn:PutComponentPolicy'</a>,
--   <a>putComponentPolicyResponse_componentArn</a> - The Amazon Resource
--   Name (ARN) of the component that this policy was applied to.
--   
--   <a>$sel:httpStatus:PutComponentPolicyResponse'</a>,
--   <a>putComponentPolicyResponse_httpStatus</a> - The response's http
--   status code.
newPutComponentPolicyResponse :: Int -> PutComponentPolicyResponse

-- | <i>See:</i> <a>newDeleteInfrastructureConfiguration</a> smart
--   constructor.
data DeleteInfrastructureConfiguration
DeleteInfrastructureConfiguration' :: Text -> DeleteInfrastructureConfiguration

-- | Create a value of <a>DeleteInfrastructureConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:infrastructureConfigurationArn:DeleteInfrastructureConfiguration'</a>,
--   <a>deleteInfrastructureConfiguration_infrastructureConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the infrastructure configuration
--   to delete.
newDeleteInfrastructureConfiguration :: Text -> DeleteInfrastructureConfiguration

-- | <i>See:</i> <a>newDeleteInfrastructureConfigurationResponse</a> smart
--   constructor.
data DeleteInfrastructureConfigurationResponse
DeleteInfrastructureConfigurationResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteInfrastructureConfigurationResponse

-- | Create a value of <a>DeleteInfrastructureConfigurationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteInfrastructureConfigurationResponse'</a>,
--   <a>deleteInfrastructureConfigurationResponse_requestId</a> - The
--   request ID that uniquely identifies this request.
--   
--   
--   <a>$sel:infrastructureConfigurationArn:DeleteInfrastructureConfiguration'</a>,
--   <a>deleteInfrastructureConfigurationResponse_infrastructureConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was deleted.
--   
--   <a>$sel:httpStatus:DeleteInfrastructureConfigurationResponse'</a>,
--   <a>deleteInfrastructureConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteInfrastructureConfigurationResponse :: Int -> DeleteInfrastructureConfigurationResponse

-- | <i>See:</i> <a>newUpdateInfrastructureConfiguration</a> smart
--   constructor.
data UpdateInfrastructureConfiguration
UpdateInfrastructureConfiguration' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe InstanceMetadataOptions -> Maybe Logging -> Maybe Text -> Maybe Bool -> Text -> Text -> Text -> UpdateInfrastructureConfiguration

-- | Create a value of <a>UpdateInfrastructureConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_securityGroupIds</a> - The
--   security group IDs to associate with the instance used to customize
--   your Amazon EC2 AMI.
--   
--   <a>$sel:snsTopicArn:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_snsTopicArn</a> - The SNS topic
--   on which to send image build events.
--   
--   <a>$sel:instanceTypes:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_instanceTypes</a> - The instance
--   types of the infrastructure configuration. You can specify one or more
--   instance types to use for this build. The service will pick one of
--   these instance types based on availability.
--   
--   <a>$sel:keyPair:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_keyPair</a> - The key pair of the
--   infrastructure configuration. You can use this to log on to and debug
--   the instance used to create your image.
--   
--   <a>$sel:resourceTags:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_resourceTags</a> - The tags
--   attached to the resource created by Image Builder.
--   
--   <a>$sel:subnetId:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_subnetId</a> - The subnet ID to
--   place the instance used to customize your Amazon EC2 AMI in.
--   
--   
--   <a>$sel:instanceMetadataOptions:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_instanceMetadataOptions</a> - The
--   instance metadata options that you can set for the HTTP requests that
--   pipeline builds use to launch EC2 build and test instances. For more
--   information about instance metadata options, see one of the following
--   links:
--   
--   <ul>
--   <li><a>Configure the instance metadata options</a> in the /<i>Amazon
--   EC2 User Guide</i>/ for Linux instances.</li>
--   <li><a>Configure the instance metadata options</a> in the /<i>Amazon
--   EC2 Windows Guide</i>/ for Windows instances.</li>
--   </ul>
--   
--   <a>$sel:logging:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_logging</a> - The logging
--   configuration of the infrastructure configuration.
--   
--   <a>$sel:description:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_description</a> - The description
--   of the infrastructure configuration.
--   
--   
--   <a>$sel:terminateInstanceOnFailure:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_terminateInstanceOnFailure</a> -
--   The terminate instance on failure setting of the infrastructure
--   configuration. Set to false if you want Image Builder to retain the
--   instance used to configure your AMI if the build or test phase of your
--   workflow fails.
--   
--   
--   <a>$sel:infrastructureConfigurationArn:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_infrastructureConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the infrastructure configuration
--   that you want to update.
--   
--   <a>$sel:instanceProfileName:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_instanceProfileName</a> - The
--   instance profile to associate with the instance used to customize your
--   Amazon EC2 AMI.
--   
--   <a>$sel:clientToken:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfiguration_clientToken</a> - The idempotency
--   token used to make this request idempotent.
newUpdateInfrastructureConfiguration :: Text -> Text -> Text -> UpdateInfrastructureConfiguration

-- | <i>See:</i> <a>newUpdateInfrastructureConfigurationResponse</a> smart
--   constructor.
data UpdateInfrastructureConfigurationResponse
UpdateInfrastructureConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateInfrastructureConfigurationResponse

-- | Create a value of <a>UpdateInfrastructureConfigurationResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:UpdateInfrastructureConfigurationResponse'</a>,
--   <a>updateInfrastructureConfigurationResponse_requestId</a> - The
--   request ID that uniquely identifies this request.
--   
--   
--   <a>$sel:infrastructureConfigurationArn:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfigurationResponse_infrastructureConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the infrastructure configuration
--   that was updated by this request.
--   
--   <a>$sel:clientToken:UpdateInfrastructureConfiguration'</a>,
--   <a>updateInfrastructureConfigurationResponse_clientToken</a> - The
--   idempotency token used to make this request idempotent.
--   
--   <a>$sel:httpStatus:UpdateInfrastructureConfigurationResponse'</a>,
--   <a>updateInfrastructureConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateInfrastructureConfigurationResponse :: Int -> UpdateInfrastructureConfigurationResponse

-- | <i>See:</i> <a>newCreateImagePipeline</a> smart constructor.
data CreateImagePipeline
CreateImagePipeline' :: Maybe PipelineStatus -> Maybe Text -> Maybe ImageTestsConfiguration -> Maybe Schedule -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateImagePipeline

-- | Create a value of <a>CreateImagePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:CreateImagePipeline'</a>,
--   <a>createImagePipeline_status</a> - The status of the image pipeline.
--   
--   <a>$sel:containerRecipeArn:CreateImagePipeline'</a>,
--   <a>createImagePipeline_containerRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the container recipe that is used to configure images
--   created by this container pipeline.
--   
--   <a>$sel:imageTestsConfiguration:CreateImagePipeline'</a>,
--   <a>createImagePipeline_imageTestsConfiguration</a> - The image test
--   configuration of the image pipeline.
--   
--   <a>$sel:schedule:CreateImagePipeline'</a>,
--   <a>createImagePipeline_schedule</a> - The schedule of the image
--   pipeline.
--   
--   <a>$sel:enhancedImageMetadataEnabled:CreateImagePipeline'</a>,
--   <a>createImagePipeline_enhancedImageMetadataEnabled</a> - Collects
--   additional information about the image being created, including the
--   operating system (OS) version and package list. This information is
--   used to enhance the overall experience of using EC2 Image Builder.
--   Enabled by default.
--   
--   <a>$sel:distributionConfigurationArn:CreateImagePipeline'</a>,
--   <a>createImagePipeline_distributionConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the distribution configuration that will be
--   used to configure and distribute images created by this image
--   pipeline.
--   
--   <a>$sel:imageRecipeArn:CreateImagePipeline'</a>,
--   <a>createImagePipeline_imageRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the image recipe that will be used to configure images
--   created by this image pipeline.
--   
--   <a>$sel:description:CreateImagePipeline'</a>,
--   <a>createImagePipeline_description</a> - The description of the image
--   pipeline.
--   
--   <a>$sel:tags:CreateImagePipeline'</a>, <a>createImagePipeline_tags</a>
--   - The tags of the image pipeline.
--   
--   <a>$sel:name:CreateImagePipeline'</a>, <a>createImagePipeline_name</a>
--   - The name of the image pipeline.
--   
--   <a>$sel:infrastructureConfigurationArn:CreateImagePipeline'</a>,
--   <a>createImagePipeline_infrastructureConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the infrastructure configuration that will be
--   used to build images created by this image pipeline.
--   
--   <a>$sel:clientToken:CreateImagePipeline'</a>,
--   <a>createImagePipeline_clientToken</a> - The idempotency token used to
--   make this request idempotent.
newCreateImagePipeline :: Text -> Text -> Text -> CreateImagePipeline

-- | <i>See:</i> <a>newCreateImagePipelineResponse</a> smart constructor.
data CreateImagePipelineResponse
CreateImagePipelineResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateImagePipelineResponse

-- | Create a value of <a>CreateImagePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateImagePipelineResponse'</a>,
--   <a>createImagePipelineResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:CreateImagePipeline'</a>,
--   <a>createImagePipelineResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:imagePipelineArn:CreateImagePipelineResponse'</a>,
--   <a>createImagePipelineResponse_imagePipelineArn</a> - The Amazon
--   Resource Name (ARN) of the image pipeline that was created by this
--   request.
--   
--   <a>$sel:httpStatus:CreateImagePipelineResponse'</a>,
--   <a>createImagePipelineResponse_httpStatus</a> - The response's http
--   status code.
newCreateImagePipelineResponse :: Int -> CreateImagePipelineResponse

-- | <i>See:</i> <a>newGetContainerRecipe</a> smart constructor.
data GetContainerRecipe
GetContainerRecipe' :: Text -> GetContainerRecipe

-- | Create a value of <a>GetContainerRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerRecipeArn:GetContainerRecipe'</a>,
--   <a>getContainerRecipe_containerRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the container recipe to retrieve.
newGetContainerRecipe :: Text -> GetContainerRecipe

-- | <i>See:</i> <a>newGetContainerRecipeResponse</a> smart constructor.
data GetContainerRecipeResponse
GetContainerRecipeResponse' :: Maybe Text -> Maybe ContainerRecipe -> Int -> GetContainerRecipeResponse

-- | Create a value of <a>GetContainerRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetContainerRecipeResponse'</a>,
--   <a>getContainerRecipeResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:containerRecipe:GetContainerRecipeResponse'</a>,
--   <a>getContainerRecipeResponse_containerRecipe</a> - The container
--   recipe object that is returned.
--   
--   <a>$sel:httpStatus:GetContainerRecipeResponse'</a>,
--   <a>getContainerRecipeResponse_httpStatus</a> - The response's http
--   status code.
newGetContainerRecipeResponse :: Int -> GetContainerRecipeResponse

-- | GetInfrastructureConfiguration request object.
--   
--   <i>See:</i> <a>newGetInfrastructureConfiguration</a> smart
--   constructor.
data GetInfrastructureConfiguration
GetInfrastructureConfiguration' :: Text -> GetInfrastructureConfiguration

-- | Create a value of <a>GetInfrastructureConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:infrastructureConfigurationArn:GetInfrastructureConfiguration'</a>,
--   <a>getInfrastructureConfiguration_infrastructureConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of the infrastructure configuration
--   that you want to retrieve.
newGetInfrastructureConfiguration :: Text -> GetInfrastructureConfiguration

-- | GetInfrastructureConfiguration response object.
--   
--   <i>See:</i> <a>newGetInfrastructureConfigurationResponse</a> smart
--   constructor.
data GetInfrastructureConfigurationResponse
GetInfrastructureConfigurationResponse' :: Maybe Text -> Maybe InfrastructureConfiguration -> Int -> GetInfrastructureConfigurationResponse

-- | Create a value of <a>GetInfrastructureConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetInfrastructureConfigurationResponse'</a>,
--   <a>getInfrastructureConfigurationResponse_requestId</a> - The request
--   ID that uniquely identifies this request.
--   
--   
--   <a>$sel:infrastructureConfiguration:GetInfrastructureConfigurationResponse'</a>,
--   <a>getInfrastructureConfigurationResponse_infrastructureConfiguration</a>
--   - The infrastructure configuration object.
--   
--   <a>$sel:httpStatus:GetInfrastructureConfigurationResponse'</a>,
--   <a>getInfrastructureConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newGetInfrastructureConfigurationResponse :: Int -> GetInfrastructureConfigurationResponse

-- | <i>See:</i> <a>newGetImagePolicy</a> smart constructor.
data GetImagePolicy
GetImagePolicy' :: Text -> GetImagePolicy

-- | Create a value of <a>GetImagePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageArn:GetImagePolicy'</a>, <a>getImagePolicy_imageArn</a> -
--   The Amazon Resource Name (ARN) of the image whose policy you want to
--   retrieve.
newGetImagePolicy :: Text -> GetImagePolicy

-- | <i>See:</i> <a>newGetImagePolicyResponse</a> smart constructor.
data GetImagePolicyResponse
GetImagePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetImagePolicyResponse

-- | Create a value of <a>GetImagePolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetImagePolicyResponse'</a>,
--   <a>getImagePolicyResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:policy:GetImagePolicyResponse'</a>,
--   <a>getImagePolicyResponse_policy</a> - The image policy object.
--   
--   <a>$sel:httpStatus:GetImagePolicyResponse'</a>,
--   <a>getImagePolicyResponse_httpStatus</a> - The response's http status
--   code.
newGetImagePolicyResponse :: Int -> GetImagePolicyResponse

-- | <i>See:</i> <a>newGetImageRecipePolicy</a> smart constructor.
data GetImageRecipePolicy
GetImageRecipePolicy' :: Text -> GetImageRecipePolicy

-- | Create a value of <a>GetImageRecipePolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRecipeArn:GetImageRecipePolicy'</a>,
--   <a>getImageRecipePolicy_imageRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the image recipe whose policy you want to retrieve.
newGetImageRecipePolicy :: Text -> GetImageRecipePolicy

-- | <i>See:</i> <a>newGetImageRecipePolicyResponse</a> smart constructor.
data GetImageRecipePolicyResponse
GetImageRecipePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetImageRecipePolicyResponse

-- | Create a value of <a>GetImageRecipePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetImageRecipePolicyResponse'</a>,
--   <a>getImageRecipePolicyResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:policy:GetImageRecipePolicyResponse'</a>,
--   <a>getImageRecipePolicyResponse_policy</a> - The image recipe policy
--   object.
--   
--   <a>$sel:httpStatus:GetImageRecipePolicyResponse'</a>,
--   <a>getImageRecipePolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetImageRecipePolicyResponse :: Int -> GetImageRecipePolicyResponse

-- | <i>See:</i> <a>newGetComponentPolicy</a> smart constructor.
data GetComponentPolicy
GetComponentPolicy' :: Text -> GetComponentPolicy

-- | Create a value of <a>GetComponentPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:componentArn:GetComponentPolicy'</a>,
--   <a>getComponentPolicy_componentArn</a> - The Amazon Resource Name
--   (ARN) of the component whose policy you want to retrieve.
newGetComponentPolicy :: Text -> GetComponentPolicy

-- | <i>See:</i> <a>newGetComponentPolicyResponse</a> smart constructor.
data GetComponentPolicyResponse
GetComponentPolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetComponentPolicyResponse

-- | Create a value of <a>GetComponentPolicyResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetComponentPolicyResponse'</a>,
--   <a>getComponentPolicyResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:policy:GetComponentPolicyResponse'</a>,
--   <a>getComponentPolicyResponse_policy</a> - The component policy.
--   
--   <a>$sel:httpStatus:GetComponentPolicyResponse'</a>,
--   <a>getComponentPolicyResponse_httpStatus</a> - The response's http
--   status code.
newGetComponentPolicyResponse :: Int -> GetComponentPolicyResponse

-- | <i>See:</i> <a>newDeleteImagePipeline</a> smart constructor.
data DeleteImagePipeline
DeleteImagePipeline' :: Text -> DeleteImagePipeline

-- | Create a value of <a>DeleteImagePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePipelineArn:DeleteImagePipeline'</a>,
--   <a>deleteImagePipeline_imagePipelineArn</a> - The Amazon Resource Name
--   (ARN) of the image pipeline to delete.
newDeleteImagePipeline :: Text -> DeleteImagePipeline

-- | <i>See:</i> <a>newDeleteImagePipelineResponse</a> smart constructor.
data DeleteImagePipelineResponse
DeleteImagePipelineResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteImagePipelineResponse

-- | Create a value of <a>DeleteImagePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteImagePipelineResponse'</a>,
--   <a>deleteImagePipelineResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:imagePipelineArn:DeleteImagePipeline'</a>,
--   <a>deleteImagePipelineResponse_imagePipelineArn</a> - The Amazon
--   Resource Name (ARN) of the image pipeline that was deleted.
--   
--   <a>$sel:httpStatus:DeleteImagePipelineResponse'</a>,
--   <a>deleteImagePipelineResponse_httpStatus</a> - The response's http
--   status code.
newDeleteImagePipelineResponse :: Int -> DeleteImagePipelineResponse

-- | <i>See:</i> <a>newUpdateImagePipeline</a> smart constructor.
data UpdateImagePipeline
UpdateImagePipeline' :: Maybe PipelineStatus -> Maybe Text -> Maybe ImageTestsConfiguration -> Maybe Schedule -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> Text -> UpdateImagePipeline

-- | Create a value of <a>UpdateImagePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_status</a> - The status of the image pipeline.
--   
--   <a>$sel:containerRecipeArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_containerRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the container pipeline to update.
--   
--   <a>$sel:imageTestsConfiguration:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_imageTestsConfiguration</a> - The image test
--   configuration of the image pipeline.
--   
--   <a>$sel:schedule:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_schedule</a> - The schedule of the image
--   pipeline.
--   
--   <a>$sel:enhancedImageMetadataEnabled:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_enhancedImageMetadataEnabled</a> - Collects
--   additional information about the image being created, including the
--   operating system (OS) version and package list. This information is
--   used to enhance the overall experience of using EC2 Image Builder.
--   Enabled by default.
--   
--   <a>$sel:distributionConfigurationArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_distributionConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the distribution configuration that will be
--   used to configure and distribute images updated by this image
--   pipeline.
--   
--   <a>$sel:imageRecipeArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_imageRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the image recipe that will be used to configure images
--   updated by this image pipeline.
--   
--   <a>$sel:description:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_description</a> - The description of the image
--   pipeline.
--   
--   <a>$sel:imagePipelineArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_imagePipelineArn</a> - The Amazon Resource Name
--   (ARN) of the image pipeline that you want to update.
--   
--   <a>$sel:infrastructureConfigurationArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_infrastructureConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the infrastructure configuration that will be
--   used to build images updated by this image pipeline.
--   
--   <a>$sel:clientToken:UpdateImagePipeline'</a>,
--   <a>updateImagePipeline_clientToken</a> - The idempotency token used to
--   make this request idempotent.
newUpdateImagePipeline :: Text -> Text -> Text -> UpdateImagePipeline

-- | <i>See:</i> <a>newUpdateImagePipelineResponse</a> smart constructor.
data UpdateImagePipelineResponse
UpdateImagePipelineResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateImagePipelineResponse

-- | Create a value of <a>UpdateImagePipelineResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:UpdateImagePipelineResponse'</a>,
--   <a>updateImagePipelineResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:UpdateImagePipeline'</a>,
--   <a>updateImagePipelineResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:imagePipelineArn:UpdateImagePipeline'</a>,
--   <a>updateImagePipelineResponse_imagePipelineArn</a> - The Amazon
--   Resource Name (ARN) of the image pipeline that was updated by this
--   request.
--   
--   <a>$sel:httpStatus:UpdateImagePipelineResponse'</a>,
--   <a>updateImagePipelineResponse_httpStatus</a> - The response's http
--   status code.
newUpdateImagePipelineResponse :: Int -> UpdateImagePipelineResponse

-- | <i>See:</i> <a>newListImagePipelines</a> smart constructor.
data ListImagePipelines
ListImagePipelines' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Natural -> ListImagePipelines

-- | Create a value of <a>ListImagePipelines</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListImagePipelines'</a>,
--   <a>listImagePipelines_filters</a> - Use the following filters to
--   streamline results:
--   
--   <ul>
--   <li><pre>description</pre></li>
--   <li><pre>distributionConfigurationArn</pre></li>
--   <li><pre>imageRecipeArn</pre></li>
--   <li><pre>infrastructureConfigurationArn</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>status</pre></li>
--   </ul>
--   
--   <a>$sel:nextToken:ListImagePipelines'</a>,
--   <a>listImagePipelines_nextToken</a> - A token to specify where to
--   start paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListImagePipelines'</a>,
--   <a>listImagePipelines_maxResults</a> - The maximum items to return in
--   a request.
newListImagePipelines :: ListImagePipelines

-- | <i>See:</i> <a>newListImagePipelinesResponse</a> smart constructor.
data ListImagePipelinesResponse
ListImagePipelinesResponse' :: Maybe Text -> Maybe Text -> Maybe [ImagePipeline] -> Int -> ListImagePipelinesResponse

-- | Create a value of <a>ListImagePipelinesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImagePipelinesResponse'</a>,
--   <a>listImagePipelinesResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:nextToken:ListImagePipelines'</a>,
--   <a>listImagePipelinesResponse_nextToken</a> - The next token used for
--   paginated responses. When this is not empty, there are additional
--   elements that the service has not included in this request. Use this
--   token with the next request to retrieve additional objects.
--   
--   <a>$sel:imagePipelineList:ListImagePipelinesResponse'</a>,
--   <a>listImagePipelinesResponse_imagePipelineList</a> - The list of
--   image pipelines.
--   
--   <a>$sel:httpStatus:ListImagePipelinesResponse'</a>,
--   <a>listImagePipelinesResponse_httpStatus</a> - The response's http
--   status code.
newListImagePipelinesResponse :: Int -> ListImagePipelinesResponse

-- | <i>See:</i> <a>newStartImagePipelineExecution</a> smart constructor.
data StartImagePipelineExecution
StartImagePipelineExecution' :: Text -> Text -> StartImagePipelineExecution

-- | Create a value of <a>StartImagePipelineExecution</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imagePipelineArn:StartImagePipelineExecution'</a>,
--   <a>startImagePipelineExecution_imagePipelineArn</a> - The Amazon
--   Resource Name (ARN) of the image pipeline that you want to manually
--   invoke.
--   
--   <a>$sel:clientToken:StartImagePipelineExecution'</a>,
--   <a>startImagePipelineExecution_clientToken</a> - The idempotency token
--   used to make this request idempotent.
newStartImagePipelineExecution :: Text -> Text -> StartImagePipelineExecution

-- | <i>See:</i> <a>newStartImagePipelineExecutionResponse</a> smart
--   constructor.
data StartImagePipelineExecutionResponse
StartImagePipelineExecutionResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> StartImagePipelineExecutionResponse

-- | Create a value of <a>StartImagePipelineExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:StartImagePipelineExecutionResponse'</a>,
--   <a>startImagePipelineExecutionResponse_requestId</a> - The request ID
--   that uniquely identifies this request.
--   
--   <a>$sel:clientToken:StartImagePipelineExecution'</a>,
--   <a>startImagePipelineExecutionResponse_clientToken</a> - The
--   idempotency token used to make this request idempotent.
--   
--   <a>$sel:imageBuildVersionArn:StartImagePipelineExecutionResponse'</a>,
--   <a>startImagePipelineExecutionResponse_imageBuildVersionArn</a> - The
--   Amazon Resource Name (ARN) of the image that was created by this
--   request.
--   
--   <a>$sel:httpStatus:StartImagePipelineExecutionResponse'</a>,
--   <a>startImagePipelineExecutionResponse_httpStatus</a> - The response's
--   http status code.
newStartImagePipelineExecutionResponse :: Int -> StartImagePipelineExecutionResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> HashMap Text Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource that you want to tag.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags to
--   apply to the resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newCreateImageRecipe</a> smart constructor.
data CreateImageRecipe
CreateImageRecipe' :: Maybe AdditionalInstanceConfiguration -> Maybe Text -> Maybe [InstanceBlockDeviceMapping] -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> NonEmpty ComponentConfiguration -> Text -> Text -> CreateImageRecipe

-- | Create a value of <a>CreateImageRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:additionalInstanceConfiguration:CreateImageRecipe'</a>,
--   <a>createImageRecipe_additionalInstanceConfiguration</a> - Specify
--   additional settings and launch scripts for your build instances.
--   
--   <a>$sel:workingDirectory:CreateImageRecipe'</a>,
--   <a>createImageRecipe_workingDirectory</a> - The working directory used
--   during build and test workflows.
--   
--   <a>$sel:blockDeviceMappings:CreateImageRecipe'</a>,
--   <a>createImageRecipe_blockDeviceMappings</a> - The block device
--   mappings of the image recipe.
--   
--   <a>$sel:description:CreateImageRecipe'</a>,
--   <a>createImageRecipe_description</a> - The description of the image
--   recipe.
--   
--   <a>$sel:tags:CreateImageRecipe'</a>, <a>createImageRecipe_tags</a> -
--   The tags of the image recipe.
--   
--   <a>$sel:name:CreateImageRecipe'</a>, <a>createImageRecipe_name</a> -
--   The name of the image recipe.
--   
--   <a>$sel:semanticVersion:CreateImageRecipe'</a>,
--   <a>createImageRecipe_semanticVersion</a> - The semantic version of the
--   image recipe. This version follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <a>$sel:components:CreateImageRecipe'</a>,
--   <a>createImageRecipe_components</a> - The components of the image
--   recipe.
--   
--   <a>$sel:parentImage:CreateImageRecipe'</a>,
--   <a>createImageRecipe_parentImage</a> - The base image of the image
--   recipe. The value of the string can be the ARN of the base image or an
--   AMI ID. The format for the ARN follows this example:
--   <tt>arn:aws:imagebuilder:us-west-2:aws:image/windows-server-2016-english-full-base-x86/x.x.x</tt>.
--   You can provide the specific version that you want to use, or you can
--   use a wildcard in all of the fields. If you enter an AMI ID for the
--   string value, you must have access to the AMI, and the AMI must be in
--   the same Region in which you are using Image Builder.
--   
--   <a>$sel:clientToken:CreateImageRecipe'</a>,
--   <a>createImageRecipe_clientToken</a> - The idempotency token used to
--   make this request idempotent.
newCreateImageRecipe :: Text -> Text -> NonEmpty ComponentConfiguration -> Text -> Text -> CreateImageRecipe

-- | <i>See:</i> <a>newCreateImageRecipeResponse</a> smart constructor.
data CreateImageRecipeResponse
CreateImageRecipeResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateImageRecipeResponse

-- | Create a value of <a>CreateImageRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateImageRecipeResponse'</a>,
--   <a>createImageRecipeResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:CreateImageRecipe'</a>,
--   <a>createImageRecipeResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:imageRecipeArn:CreateImageRecipeResponse'</a>,
--   <a>createImageRecipeResponse_imageRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the image recipe that was created by this request.
--   
--   <a>$sel:httpStatus:CreateImageRecipeResponse'</a>,
--   <a>createImageRecipeResponse_httpStatus</a> - The response's http
--   status code.
newCreateImageRecipeResponse :: Int -> CreateImageRecipeResponse

-- | <i>See:</i> <a>newCreateImage</a> smart constructor.
data CreateImage
CreateImage' :: Maybe Text -> Maybe ImageTestsConfiguration -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateImage

-- | Create a value of <a>CreateImage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerRecipeArn:CreateImage'</a>,
--   <a>createImage_containerRecipeArn</a> - The Amazon Resource Name (ARN)
--   of the container recipe that defines how images are configured and
--   tested.
--   
--   <a>$sel:imageTestsConfiguration:CreateImage'</a>,
--   <a>createImage_imageTestsConfiguration</a> - The image tests
--   configuration of the image.
--   
--   <a>$sel:enhancedImageMetadataEnabled:CreateImage'</a>,
--   <a>createImage_enhancedImageMetadataEnabled</a> - Collects additional
--   information about the image being created, including the operating
--   system (OS) version and package list. This information is used to
--   enhance the overall experience of using EC2 Image Builder. Enabled by
--   default.
--   
--   <a>$sel:distributionConfigurationArn:CreateImage'</a>,
--   <a>createImage_distributionConfigurationArn</a> - The Amazon Resource
--   Name (ARN) of the distribution configuration that defines and
--   configures the outputs of your pipeline.
--   
--   <a>$sel:imageRecipeArn:CreateImage'</a>,
--   <a>createImage_imageRecipeArn</a> - The Amazon Resource Name (ARN) of
--   the image recipe that defines how images are configured, tested, and
--   assessed.
--   
--   <a>$sel:tags:CreateImage'</a>, <a>createImage_tags</a> - The tags of
--   the image.
--   
--   <a>$sel:infrastructureConfigurationArn:CreateImage'</a>,
--   <a>createImage_infrastructureConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the infrastructure configuration that defines
--   the environment in which your image will be built and tested.
--   
--   <a>$sel:clientToken:CreateImage'</a>, <a>createImage_clientToken</a> -
--   The idempotency token used to make this request idempotent.
newCreateImage :: Text -> Text -> CreateImage

-- | <i>See:</i> <a>newCreateImageResponse</a> smart constructor.
data CreateImageResponse
CreateImageResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateImageResponse

-- | Create a value of <a>CreateImageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateImageResponse'</a>,
--   <a>createImageResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:clientToken:CreateImage'</a>,
--   <a>createImageResponse_clientToken</a> - The idempotency token used to
--   make this request idempotent.
--   
--   <a>$sel:imageBuildVersionArn:CreateImageResponse'</a>,
--   <a>createImageResponse_imageBuildVersionArn</a> - The Amazon Resource
--   Name (ARN) of the image that was created by this request.
--   
--   <a>$sel:httpStatus:CreateImageResponse'</a>,
--   <a>createImageResponse_httpStatus</a> - The response's http status
--   code.
newCreateImageResponse :: Int -> CreateImageResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource that you want to untag.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   tag keys to remove from the resource.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newCreateComponent</a> smart constructor.
data CreateComponent
CreateComponent' :: Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> Platform -> Text -> CreateComponent

-- | Create a value of <a>CreateComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:data':CreateComponent'</a>, <a>createComponent_data</a> - The
--   data of the component. Used to specify the data inline. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
--   
--   <a>$sel:supportedOsVersions:CreateComponent'</a>,
--   <a>createComponent_supportedOsVersions</a> - The operating system (OS)
--   version supported by the component. If the OS information is
--   available, a prefix match is performed against the base image OS
--   version during image recipe creation.
--   
--   <a>$sel:uri:CreateComponent'</a>, <a>createComponent_uri</a> - The uri
--   of the component. Must be an Amazon S3 URL and the requester must have
--   permission to access the Amazon S3 bucket. If you use Amazon S3, you
--   can specify component content up to your service quota. Either
--   <tt>data</tt> or <tt>uri</tt> can be used to specify the data within
--   the component.
--   
--   <a>$sel:kmsKeyId:CreateComponent'</a>, <a>createComponent_kmsKeyId</a>
--   - The ID of the KMS key that should be used to encrypt this component.
--   
--   <a>$sel:changeDescription:CreateComponent'</a>,
--   <a>createComponent_changeDescription</a> - The change description of
--   the component. Describes what change has been made in this version, or
--   what makes this version different from other versions of this
--   component.
--   
--   <a>$sel:description:CreateComponent'</a>,
--   <a>createComponent_description</a> - The description of the component.
--   Describes the contents of the component.
--   
--   <a>$sel:tags:CreateComponent'</a>, <a>createComponent_tags</a> - The
--   tags of the component.
--   
--   <a>$sel:name:CreateComponent'</a>, <a>createComponent_name</a> - The
--   name of the component.
--   
--   <a>$sel:semanticVersion:CreateComponent'</a>,
--   <a>createComponent_semanticVersion</a> - The semantic version of the
--   component. This version follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <a>$sel:platform:CreateComponent'</a>, <a>createComponent_platform</a>
--   - The platform of the component.
--   
--   <a>$sel:clientToken:CreateComponent'</a>,
--   <a>createComponent_clientToken</a> - The idempotency token of the
--   component.
newCreateComponent :: Text -> Text -> Platform -> Text -> CreateComponent

-- | <i>See:</i> <a>newCreateComponentResponse</a> smart constructor.
data CreateComponentResponse
CreateComponentResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateComponentResponse

-- | Create a value of <a>CreateComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateComponentResponse'</a>,
--   <a>createComponentResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:clientToken:CreateComponent'</a>,
--   <a>createComponentResponse_clientToken</a> - The idempotency token
--   used to make this request idempotent.
--   
--   <a>$sel:componentBuildVersionArn:CreateComponentResponse'</a>,
--   <a>createComponentResponse_componentBuildVersionArn</a> - The Amazon
--   Resource Name (ARN) of the component that was created by this request.
--   
--   <a>$sel:httpStatus:CreateComponentResponse'</a>,
--   <a>createComponentResponse_httpStatus</a> - The response's http status
--   code.
newCreateComponentResponse :: Int -> CreateComponentResponse

-- | <i>See:</i> <a>newDeleteDistributionConfiguration</a> smart
--   constructor.
data DeleteDistributionConfiguration
DeleteDistributionConfiguration' :: Text -> DeleteDistributionConfiguration

-- | Create a value of <a>DeleteDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:distributionConfigurationArn:DeleteDistributionConfiguration'</a>,
--   <a>deleteDistributionConfiguration_distributionConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of the distribution configuration to
--   delete.
newDeleteDistributionConfiguration :: Text -> DeleteDistributionConfiguration

-- | <i>See:</i> <a>newDeleteDistributionConfigurationResponse</a> smart
--   constructor.
data DeleteDistributionConfigurationResponse
DeleteDistributionConfigurationResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteDistributionConfigurationResponse

-- | Create a value of <a>DeleteDistributionConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteDistributionConfigurationResponse'</a>,
--   <a>deleteDistributionConfigurationResponse_requestId</a> - The request
--   ID that uniquely identifies this request.
--   
--   
--   <a>$sel:distributionConfigurationArn:DeleteDistributionConfiguration'</a>,
--   <a>deleteDistributionConfigurationResponse_distributionConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the distribution configuration
--   that was deleted.
--   
--   <a>$sel:httpStatus:DeleteDistributionConfigurationResponse'</a>,
--   <a>deleteDistributionConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newDeleteDistributionConfigurationResponse :: Int -> DeleteDistributionConfigurationResponse

-- | <i>See:</i> <a>newUpdateDistributionConfiguration</a> smart
--   constructor.
data UpdateDistributionConfiguration
UpdateDistributionConfiguration' :: Maybe Text -> Text -> [Distribution] -> Text -> UpdateDistributionConfiguration

-- | Create a value of <a>UpdateDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfiguration_description</a> - The description
--   of the distribution configuration.
--   
--   
--   <a>$sel:distributionConfigurationArn:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfiguration_distributionConfigurationArn</a> -
--   The Amazon Resource Name (ARN) of the distribution configuration that
--   you want to update.
--   
--   <a>$sel:distributions:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfiguration_distributions</a> - The
--   distributions of the distribution configuration.
--   
--   <a>$sel:clientToken:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfiguration_clientToken</a> - The idempotency
--   token of the distribution configuration.
newUpdateDistributionConfiguration :: Text -> Text -> UpdateDistributionConfiguration

-- | <i>See:</i> <a>newUpdateDistributionConfigurationResponse</a> smart
--   constructor.
data UpdateDistributionConfigurationResponse
UpdateDistributionConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateDistributionConfigurationResponse

-- | Create a value of <a>UpdateDistributionConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:UpdateDistributionConfigurationResponse'</a>,
--   <a>updateDistributionConfigurationResponse_requestId</a> - The request
--   ID that uniquely identifies this request.
--   
--   <a>$sel:clientToken:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfigurationResponse_clientToken</a> - The
--   idempotency token used to make this request idempotent.
--   
--   
--   <a>$sel:distributionConfigurationArn:UpdateDistributionConfiguration'</a>,
--   <a>updateDistributionConfigurationResponse_distributionConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the distribution configuration
--   that was updated by this request.
--   
--   <a>$sel:httpStatus:UpdateDistributionConfigurationResponse'</a>,
--   <a>updateDistributionConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newUpdateDistributionConfigurationResponse :: Int -> UpdateDistributionConfigurationResponse

-- | <i>See:</i> <a>newListImagePipelineImages</a> smart constructor.
data ListImagePipelineImages
ListImagePipelineImages' :: Maybe (NonEmpty Filter) -> Maybe Text -> Maybe Natural -> Text -> ListImagePipelineImages

-- | Create a value of <a>ListImagePipelineImages</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListImagePipelineImages'</a>,
--   <a>listImagePipelineImages_filters</a> - Use the following filters to
--   streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
--   
--   <a>$sel:nextToken:ListImagePipelineImages'</a>,
--   <a>listImagePipelineImages_nextToken</a> - A token to specify where to
--   start paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListImagePipelineImages'</a>,
--   <a>listImagePipelineImages_maxResults</a> - The maximum items to
--   return in a request.
--   
--   <a>$sel:imagePipelineArn:ListImagePipelineImages'</a>,
--   <a>listImagePipelineImages_imagePipelineArn</a> - The Amazon Resource
--   Name (ARN) of the image pipeline whose images you want to view.
newListImagePipelineImages :: Text -> ListImagePipelineImages

-- | <i>See:</i> <a>newListImagePipelineImagesResponse</a> smart
--   constructor.
data ListImagePipelineImagesResponse
ListImagePipelineImagesResponse' :: Maybe Text -> Maybe Text -> Maybe [ImageSummary] -> Int -> ListImagePipelineImagesResponse

-- | Create a value of <a>ListImagePipelineImagesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImagePipelineImagesResponse'</a>,
--   <a>listImagePipelineImagesResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:nextToken:ListImagePipelineImages'</a>,
--   <a>listImagePipelineImagesResponse_nextToken</a> - The next token used
--   for paginated responses. When this is not empty, there are additional
--   elements that the service has not included in this request. Use this
--   token with the next request to retrieve additional objects.
--   
--   <a>$sel:imageSummaryList:ListImagePipelineImagesResponse'</a>,
--   <a>listImagePipelineImagesResponse_imageSummaryList</a> - The list of
--   images built by this pipeline.
--   
--   <a>$sel:httpStatus:ListImagePipelineImagesResponse'</a>,
--   <a>listImagePipelineImagesResponse_httpStatus</a> - The response's
--   http status code.
newListImagePipelineImagesResponse :: Int -> ListImagePipelineImagesResponse

-- | <i>See:</i> <a>newDeleteImageRecipe</a> smart constructor.
data DeleteImageRecipe
DeleteImageRecipe' :: Text -> DeleteImageRecipe

-- | Create a value of <a>DeleteImageRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRecipeArn:DeleteImageRecipe'</a>,
--   <a>deleteImageRecipe_imageRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the image recipe to delete.
newDeleteImageRecipe :: Text -> DeleteImageRecipe

-- | <i>See:</i> <a>newDeleteImageRecipeResponse</a> smart constructor.
data DeleteImageRecipeResponse
DeleteImageRecipeResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteImageRecipeResponse

-- | Create a value of <a>DeleteImageRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteImageRecipeResponse'</a>,
--   <a>deleteImageRecipeResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:imageRecipeArn:DeleteImageRecipe'</a>,
--   <a>deleteImageRecipeResponse_imageRecipeArn</a> - The Amazon Resource
--   Name (ARN) of the image recipe that was deleted.
--   
--   <a>$sel:httpStatus:DeleteImageRecipeResponse'</a>,
--   <a>deleteImageRecipeResponse_httpStatus</a> - The response's http
--   status code.
newDeleteImageRecipeResponse :: Int -> DeleteImageRecipeResponse

-- | <i>See:</i> <a>newListComponents</a> smart constructor.
data ListComponents
ListComponents' :: Maybe (NonEmpty Filter) -> Maybe Ownership -> Maybe Bool -> Maybe Text -> Maybe Natural -> ListComponents

-- | Create a value of <a>ListComponents</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListComponents'</a>, <a>listComponents_filters</a> -
--   Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>description</pre></li>
--   <li><pre>name</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>supportedOsVersion</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
--   
--   <a>$sel:owner:ListComponents'</a>, <a>listComponents_owner</a> - The
--   owner defines which components you want to list. By default, this
--   request will only show components owned by your account. You can use
--   this field to specify if you want to view components owned by
--   yourself, by Amazon, or those components that have been shared with
--   you by other customers.
--   
--   <a>$sel:byName:ListComponents'</a>, <a>listComponents_byName</a> -
--   Returns the list of component build versions for the specified name.
--   
--   <a>$sel:nextToken:ListComponents'</a>, <a>listComponents_nextToken</a>
--   - A token to specify where to start paginating. This is the NextToken
--   from a previously truncated response.
--   
--   <a>$sel:maxResults:ListComponents'</a>,
--   <a>listComponents_maxResults</a> - The maximum items to return in a
--   request.
newListComponents :: ListComponents

-- | <i>See:</i> <a>newListComponentsResponse</a> smart constructor.
data ListComponentsResponse
ListComponentsResponse' :: Maybe Text -> Maybe [ComponentVersion] -> Maybe Text -> Int -> ListComponentsResponse

-- | Create a value of <a>ListComponentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListComponentsResponse'</a>,
--   <a>listComponentsResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:componentVersionList:ListComponentsResponse'</a>,
--   <a>listComponentsResponse_componentVersionList</a> - The list of
--   component semantic versions.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <a>$sel:nextToken:ListComponents'</a>,
--   <a>listComponentsResponse_nextToken</a> - The next token used for
--   paginated responses. When this is not empty, there are additional
--   elements that the service has not included in this request. Use this
--   token with the next request to retrieve additional objects.
--   
--   <a>$sel:httpStatus:ListComponentsResponse'</a>,
--   <a>listComponentsResponse_httpStatus</a> - The response's http status
--   code.
newListComponentsResponse :: Int -> ListComponentsResponse

-- | <i>See:</i> <a>newPutContainerRecipePolicy</a> smart constructor.
data PutContainerRecipePolicy
PutContainerRecipePolicy' :: Text -> Text -> PutContainerRecipePolicy

-- | Create a value of <a>PutContainerRecipePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerRecipeArn:PutContainerRecipePolicy'</a>,
--   <a>putContainerRecipePolicy_containerRecipeArn</a> - The Amazon
--   Resource Name (ARN) of the container recipe that this policy should be
--   applied to.
--   
--   <a>$sel:policy:PutContainerRecipePolicy'</a>,
--   <a>putContainerRecipePolicy_policy</a> - The policy to apply to the
--   container recipe.
newPutContainerRecipePolicy :: Text -> Text -> PutContainerRecipePolicy

-- | <i>See:</i> <a>newPutContainerRecipePolicyResponse</a> smart
--   constructor.
data PutContainerRecipePolicyResponse
PutContainerRecipePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> PutContainerRecipePolicyResponse

-- | Create a value of <a>PutContainerRecipePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:PutContainerRecipePolicyResponse'</a>,
--   <a>putContainerRecipePolicyResponse_requestId</a> - The request ID
--   that uniquely identifies this request.
--   
--   <a>$sel:containerRecipeArn:PutContainerRecipePolicy'</a>,
--   <a>putContainerRecipePolicyResponse_containerRecipeArn</a> - The
--   Amazon Resource Name (ARN) of the container recipe that this policy
--   was applied to.
--   
--   <a>$sel:httpStatus:PutContainerRecipePolicyResponse'</a>,
--   <a>putContainerRecipePolicyResponse_httpStatus</a> - The response's
--   http status code.
newPutContainerRecipePolicyResponse :: Int -> PutContainerRecipePolicyResponse

-- | <i>See:</i> <a>newListImages</a> smart constructor.
data ListImages
ListImages' :: Maybe (NonEmpty Filter) -> Maybe Ownership -> Maybe Bool -> Maybe Text -> Maybe Bool -> Maybe Natural -> ListImages

-- | Create a value of <a>ListImages</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListImages'</a>, <a>listImages_filters</a> - Use the
--   following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>osVersion</pre></li>
--   <li><pre>platform</pre></li>
--   <li><pre>type</pre></li>
--   <li><pre>version</pre></li>
--   </ul>
--   
--   <a>$sel:owner:ListImages'</a>, <a>listImages_owner</a> - The owner
--   defines which images you want to list. By default, this request will
--   only show images owned by your account. You can use this field to
--   specify if you want to view images owned by yourself, by Amazon, or
--   those images that have been shared with you by other customers.
--   
--   <a>$sel:byName:ListImages'</a>, <a>listImages_byName</a> - Requests a
--   list of images with a specific recipe name.
--   
--   <a>$sel:nextToken:ListImages'</a>, <a>listImages_nextToken</a> - A
--   token to specify where to start paginating. This is the NextToken from
--   a previously truncated response.
--   
--   <a>$sel:includeDeprecated:ListImages'</a>,
--   <a>listImages_includeDeprecated</a> - Includes deprecated images in
--   the response list.
--   
--   <a>$sel:maxResults:ListImages'</a>, <a>listImages_maxResults</a> - The
--   maximum items to return in a request.
newListImages :: ListImages

-- | <i>See:</i> <a>newListImagesResponse</a> smart constructor.
data ListImagesResponse
ListImagesResponse' :: Maybe Text -> Maybe [ImageVersion] -> Maybe Text -> Int -> ListImagesResponse

-- | Create a value of <a>ListImagesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImagesResponse'</a>,
--   <a>listImagesResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:imageVersionList:ListImagesResponse'</a>,
--   <a>listImagesResponse_imageVersionList</a> - The list of image
--   semantic versions.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:nextToken:ListImages'</a>, <a>listImagesResponse_nextToken</a>
--   - The next token used for paginated responses. When this is not empty,
--   there are additional elements that the service has not included in
--   this request. Use this token with the next request to retrieve
--   additional objects.
--   
--   <a>$sel:httpStatus:ListImagesResponse'</a>,
--   <a>listImagesResponse_httpStatus</a> - The response's http status
--   code.
newListImagesResponse :: Int -> ListImagesResponse

-- | <i>See:</i> <a>newCreateDistributionConfiguration</a> smart
--   constructor.
data CreateDistributionConfiguration
CreateDistributionConfiguration' :: Maybe Text -> Maybe (HashMap Text Text) -> Text -> [Distribution] -> Text -> CreateDistributionConfiguration

-- | Create a value of <a>CreateDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfiguration_description</a> - The description
--   of the distribution configuration.
--   
--   <a>$sel:tags:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfiguration_tags</a> - The tags of the
--   distribution configuration.
--   
--   <a>$sel:name:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfiguration_name</a> - The name of the
--   distribution configuration.
--   
--   <a>$sel:distributions:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfiguration_distributions</a> - The
--   distributions of the distribution configuration.
--   
--   <a>$sel:clientToken:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfiguration_clientToken</a> - The idempotency
--   token of the distribution configuration.
newCreateDistributionConfiguration :: Text -> Text -> CreateDistributionConfiguration

-- | <i>See:</i> <a>newCreateDistributionConfigurationResponse</a> smart
--   constructor.
data CreateDistributionConfigurationResponse
CreateDistributionConfigurationResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateDistributionConfigurationResponse

-- | Create a value of <a>CreateDistributionConfigurationResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:CreateDistributionConfigurationResponse'</a>,
--   <a>createDistributionConfigurationResponse_requestId</a> - The request
--   ID that uniquely identifies this request.
--   
--   <a>$sel:clientToken:CreateDistributionConfiguration'</a>,
--   <a>createDistributionConfigurationResponse_clientToken</a> - The
--   idempotency token used to make this request idempotent.
--   
--   
--   <a>$sel:distributionConfigurationArn:CreateDistributionConfigurationResponse'</a>,
--   <a>createDistributionConfigurationResponse_distributionConfigurationArn</a>
--   - The Amazon Resource Name (ARN) of the distribution configuration
--   that was created by this request.
--   
--   <a>$sel:httpStatus:CreateDistributionConfigurationResponse'</a>,
--   <a>createDistributionConfigurationResponse_httpStatus</a> - The
--   response's http status code.
newCreateDistributionConfigurationResponse :: Int -> CreateDistributionConfigurationResponse

-- | <i>See:</i> <a>newListImageRecipes</a> smart constructor.
data ListImageRecipes
ListImageRecipes' :: Maybe (NonEmpty Filter) -> Maybe Ownership -> Maybe Text -> Maybe Natural -> ListImageRecipes

-- | Create a value of <a>ListImageRecipes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:filters:ListImageRecipes'</a>, <a>listImageRecipes_filters</a>
--   - Use the following filters to streamline results:
--   
--   <ul>
--   <li><pre>name</pre></li>
--   <li><pre>parentImage</pre></li>
--   <li><pre>platform</pre></li>
--   </ul>
--   
--   <a>$sel:owner:ListImageRecipes'</a>, <a>listImageRecipes_owner</a> -
--   The owner defines which image recipes you want to list. By default,
--   this request will only show image recipes owned by your account. You
--   can use this field to specify if you want to view image recipes owned
--   by yourself, by Amazon, or those image recipes that have been shared
--   with you by other customers.
--   
--   <a>$sel:nextToken:ListImageRecipes'</a>,
--   <a>listImageRecipes_nextToken</a> - A token to specify where to start
--   paginating. This is the NextToken from a previously truncated
--   response.
--   
--   <a>$sel:maxResults:ListImageRecipes'</a>,
--   <a>listImageRecipes_maxResults</a> - The maximum items to return in a
--   request.
newListImageRecipes :: ListImageRecipes

-- | <i>See:</i> <a>newListImageRecipesResponse</a> smart constructor.
data ListImageRecipesResponse
ListImageRecipesResponse' :: Maybe Text -> Maybe Text -> Maybe [ImageRecipeSummary] -> Int -> ListImageRecipesResponse

-- | Create a value of <a>ListImageRecipesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:ListImageRecipesResponse'</a>,
--   <a>listImageRecipesResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:nextToken:ListImageRecipes'</a>,
--   <a>listImageRecipesResponse_nextToken</a> - The next token used for
--   paginated responses. When this is not empty, there are additional
--   elements that the service has not included in this request. Use this
--   token with the next request to retrieve additional objects.
--   
--   <a>$sel:imageRecipeSummaryList:ListImageRecipesResponse'</a>,
--   <a>listImageRecipesResponse_imageRecipeSummaryList</a> - The list of
--   image pipelines.
--   
--   <a>$sel:httpStatus:ListImageRecipesResponse'</a>,
--   <a>listImageRecipesResponse_httpStatus</a> - The response's http
--   status code.
newListImageRecipesResponse :: Int -> ListImageRecipesResponse

-- | <i>See:</i> <a>newDeleteImage</a> smart constructor.
data DeleteImage
DeleteImage' :: Text -> DeleteImage

-- | Create a value of <a>DeleteImage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuildVersionArn:DeleteImage'</a>,
--   <a>deleteImage_imageBuildVersionArn</a> - The Amazon Resource Name
--   (ARN) of the Image Builder image resource to delete.
newDeleteImage :: Text -> DeleteImage

-- | <i>See:</i> <a>newDeleteImageResponse</a> smart constructor.
data DeleteImageResponse
DeleteImageResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteImageResponse

-- | Create a value of <a>DeleteImageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteImageResponse'</a>,
--   <a>deleteImageResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:imageBuildVersionArn:DeleteImage'</a>,
--   <a>deleteImageResponse_imageBuildVersionArn</a> - The Amazon Resource
--   Name (ARN) of the Image Builder image resource that was deleted.
--   
--   <a>$sel:httpStatus:DeleteImageResponse'</a>,
--   <a>deleteImageResponse_httpStatus</a> - The response's http status
--   code.
newDeleteImageResponse :: Int -> DeleteImageResponse

-- | <i>See:</i> <a>newDeleteComponent</a> smart constructor.
data DeleteComponent
DeleteComponent' :: Text -> DeleteComponent

-- | Create a value of <a>DeleteComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:componentBuildVersionArn:DeleteComponent'</a>,
--   <a>deleteComponent_componentBuildVersionArn</a> - The Amazon Resource
--   Name (ARN) of the component build version to delete.
newDeleteComponent :: Text -> DeleteComponent

-- | <i>See:</i> <a>newDeleteComponentResponse</a> smart constructor.
data DeleteComponentResponse
DeleteComponentResponse' :: Maybe Text -> Maybe Text -> Int -> DeleteComponentResponse

-- | Create a value of <a>DeleteComponentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:DeleteComponentResponse'</a>,
--   <a>deleteComponentResponse_requestId</a> - The request ID that
--   uniquely identifies this request.
--   
--   <a>$sel:componentBuildVersionArn:DeleteComponent'</a>,
--   <a>deleteComponentResponse_componentBuildVersionArn</a> - The Amazon
--   Resource Name (ARN) of the component build version that was deleted.
--   
--   <a>$sel:httpStatus:DeleteComponentResponse'</a>,
--   <a>deleteComponentResponse_httpStatus</a> - The response's http status
--   code.
newDeleteComponentResponse :: Int -> DeleteComponentResponse

-- | <i>See:</i> <a>newGetImage</a> smart constructor.
data GetImage
GetImage' :: Text -> GetImage

-- | Create a value of <a>GetImage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageBuildVersionArn:GetImage'</a>,
--   <a>getImage_imageBuildVersionArn</a> - The Amazon Resource Name (ARN)
--   of the image that you want to retrieve.
newGetImage :: Text -> GetImage

-- | <i>See:</i> <a>newGetImageResponse</a> smart constructor.
data GetImageResponse
GetImageResponse' :: Maybe Text -> Maybe Image -> Int -> GetImageResponse

-- | Create a value of <a>GetImageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetImageResponse'</a>,
--   <a>getImageResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:image:GetImageResponse'</a>, <a>getImageResponse_image</a> -
--   The image object.
--   
--   <a>$sel:httpStatus:GetImageResponse'</a>,
--   <a>getImageResponse_httpStatus</a> - The response's http status code.
newGetImageResponse :: Int -> GetImageResponse

-- | <i>See:</i> <a>newGetContainerRecipePolicy</a> smart constructor.
data GetContainerRecipePolicy
GetContainerRecipePolicy' :: Text -> GetContainerRecipePolicy

-- | Create a value of <a>GetContainerRecipePolicy</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerRecipeArn:GetContainerRecipePolicy'</a>,
--   <a>getContainerRecipePolicy_containerRecipeArn</a> - The Amazon
--   Resource Name (ARN) of the container recipe for the policy being
--   requested.
newGetContainerRecipePolicy :: Text -> GetContainerRecipePolicy

-- | <i>See:</i> <a>newGetContainerRecipePolicyResponse</a> smart
--   constructor.
data GetContainerRecipePolicyResponse
GetContainerRecipePolicyResponse' :: Maybe Text -> Maybe Text -> Int -> GetContainerRecipePolicyResponse

-- | Create a value of <a>GetContainerRecipePolicyResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetContainerRecipePolicyResponse'</a>,
--   <a>getContainerRecipePolicyResponse_requestId</a> - The request ID
--   that uniquely identifies this request.
--   
--   <a>$sel:policy:GetContainerRecipePolicyResponse'</a>,
--   <a>getContainerRecipePolicyResponse_policy</a> - The container recipe
--   policy object that is returned.
--   
--   <a>$sel:httpStatus:GetContainerRecipePolicyResponse'</a>,
--   <a>getContainerRecipePolicyResponse_httpStatus</a> - The response's
--   http status code.
newGetContainerRecipePolicyResponse :: Int -> GetContainerRecipePolicyResponse

-- | <i>See:</i> <a>newGetImageRecipe</a> smart constructor.
data GetImageRecipe
GetImageRecipe' :: Text -> GetImageRecipe

-- | Create a value of <a>GetImageRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRecipeArn:GetImageRecipe'</a>,
--   <a>getImageRecipe_imageRecipeArn</a> - The Amazon Resource Name (ARN)
--   of the image recipe that you want to retrieve.
newGetImageRecipe :: Text -> GetImageRecipe

-- | <i>See:</i> <a>newGetImageRecipeResponse</a> smart constructor.
data GetImageRecipeResponse
GetImageRecipeResponse' :: Maybe Text -> Maybe ImageRecipe -> Int -> GetImageRecipeResponse

-- | Create a value of <a>GetImageRecipeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetImageRecipeResponse'</a>,
--   <a>getImageRecipeResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:imageRecipe:GetImageRecipeResponse'</a>,
--   <a>getImageRecipeResponse_imageRecipe</a> - The image recipe object.
--   
--   <a>$sel:httpStatus:GetImageRecipeResponse'</a>,
--   <a>getImageRecipeResponse_httpStatus</a> - The response's http status
--   code.
newGetImageRecipeResponse :: Int -> GetImageRecipeResponse

-- | <i>See:</i> <a>newGetComponent</a> smart constructor.
data GetComponent
GetComponent' :: Text -> GetComponent

-- | Create a value of <a>GetComponent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:componentBuildVersionArn:GetComponent'</a>,
--   <a>getComponent_componentBuildVersionArn</a> - The Amazon Resource
--   Name (ARN) of the component that you want to retrieve. Regex requires
--   "/\d+$" suffix.
newGetComponent :: Text -> GetComponent

-- | <i>See:</i> <a>newGetComponentResponse</a> smart constructor.
data GetComponentResponse
GetComponentResponse' :: Maybe Text -> Maybe Component -> Int -> GetComponentResponse

-- | Create a value of <a>GetComponentResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestId:GetComponentResponse'</a>,
--   <a>getComponentResponse_requestId</a> - The request ID that uniquely
--   identifies this request.
--   
--   <a>$sel:component:GetComponentResponse'</a>,
--   <a>getComponentResponse_component</a> - The component object
--   associated with the specified ARN.
--   
--   <a>$sel:httpStatus:GetComponentResponse'</a>,
--   <a>getComponentResponse_httpStatus</a> - The response's http status
--   code.
newGetComponentResponse :: Int -> GetComponentResponse
newtype ComponentFormat
ComponentFormat' :: Text -> ComponentFormat
[fromComponentFormat] :: ComponentFormat -> Text
pattern ComponentFormat_SHELL :: ComponentFormat
newtype ComponentStatus
ComponentStatus' :: Text -> ComponentStatus
[fromComponentStatus] :: ComponentStatus -> Text
pattern ComponentStatus_DEPRECATED :: ComponentStatus
newtype ComponentType
ComponentType' :: Text -> ComponentType
[fromComponentType] :: ComponentType -> Text
pattern ComponentType_BUILD :: ComponentType
pattern ComponentType_TEST :: ComponentType
newtype ContainerRepositoryService
ContainerRepositoryService' :: Text -> ContainerRepositoryService
[fromContainerRepositoryService] :: ContainerRepositoryService -> Text
pattern ContainerRepositoryService_ECR :: ContainerRepositoryService
newtype ContainerType
ContainerType' :: Text -> ContainerType
[fromContainerType] :: ContainerType -> Text
pattern ContainerType_DOCKER :: ContainerType
newtype EbsVolumeType
EbsVolumeType' :: Text -> EbsVolumeType
[fromEbsVolumeType] :: EbsVolumeType -> Text
pattern EbsVolumeType_Gp2 :: EbsVolumeType
pattern EbsVolumeType_Gp3 :: EbsVolumeType
pattern EbsVolumeType_Io1 :: EbsVolumeType
pattern EbsVolumeType_Io2 :: EbsVolumeType
pattern EbsVolumeType_Sc1 :: EbsVolumeType
pattern EbsVolumeType_St1 :: EbsVolumeType
pattern EbsVolumeType_Standard :: EbsVolumeType
newtype ImageStatus
ImageStatus' :: Text -> ImageStatus
[fromImageStatus] :: ImageStatus -> Text
pattern ImageStatus_AVAILABLE :: ImageStatus
pattern ImageStatus_BUILDING :: ImageStatus
pattern ImageStatus_CANCELLED :: ImageStatus
pattern ImageStatus_CREATING :: ImageStatus
pattern ImageStatus_DELETED :: ImageStatus
pattern ImageStatus_DEPRECATED :: ImageStatus
pattern ImageStatus_DISTRIBUTING :: ImageStatus
pattern ImageStatus_FAILED :: ImageStatus
pattern ImageStatus_INTEGRATING :: ImageStatus
pattern ImageStatus_PENDING :: ImageStatus
pattern ImageStatus_TESTING :: ImageStatus
newtype ImageType
ImageType' :: Text -> ImageType
[fromImageType] :: ImageType -> Text
pattern ImageType_AMI :: ImageType
pattern ImageType_DOCKER :: ImageType
newtype Ownership
Ownership' :: Text -> Ownership
[fromOwnership] :: Ownership -> Text
pattern Ownership_Amazon :: Ownership
pattern Ownership_Self :: Ownership
pattern Ownership_Shared :: Ownership
newtype PipelineExecutionStartCondition
PipelineExecutionStartCondition' :: Text -> PipelineExecutionStartCondition
[fromPipelineExecutionStartCondition] :: PipelineExecutionStartCondition -> Text
pattern PipelineExecutionStartCondition_EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE :: PipelineExecutionStartCondition
pattern PipelineExecutionStartCondition_EXPRESSION_MATCH_ONLY :: PipelineExecutionStartCondition
newtype PipelineStatus
PipelineStatus' :: Text -> PipelineStatus
[fromPipelineStatus] :: PipelineStatus -> Text
pattern PipelineStatus_DISABLED :: PipelineStatus
pattern PipelineStatus_ENABLED :: PipelineStatus
newtype Platform
Platform' :: Text -> Platform
[fromPlatform] :: Platform -> Text
pattern Platform_Linux :: Platform
pattern Platform_Windows :: Platform

-- | In addition to your infrastruction configuration, these settings
--   provide an extra layer of control over your build instances. For
--   instances where Image Builder installs the Systems Manager agent, you
--   can choose whether to keep it for the AMI that you create. You can
--   also specify commands to run on launch for all of your build
--   instances.
--   
--   <i>See:</i> <a>newAdditionalInstanceConfiguration</a> smart
--   constructor.
data AdditionalInstanceConfiguration
AdditionalInstanceConfiguration' :: Maybe SystemsManagerAgent -> Maybe Text -> AdditionalInstanceConfiguration

-- | Create a value of <a>AdditionalInstanceConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:systemsManagerAgent:AdditionalInstanceConfiguration'</a>,
--   <a>additionalInstanceConfiguration_systemsManagerAgent</a> - Contains
--   settings for the Systems Manager agent on your build instance.
--   
--   <a>$sel:userDataOverride:AdditionalInstanceConfiguration'</a>,
--   <a>additionalInstanceConfiguration_userDataOverride</a> - Use this
--   property to provide commands or a command script to run when you
--   launch your build instance.
--   
--   The userDataOverride property replaces any commands that Image Builder
--   might have added to ensure that Systems Manager is installed on your
--   Linux build instance. If you override the user data, make sure that
--   you add commands to install Systems Manager, if it is not
--   pre-installed on your base image.
newAdditionalInstanceConfiguration :: AdditionalInstanceConfiguration

-- | Details of an Amazon EC2 AMI.
--   
--   <i>See:</i> <a>newAmi</a> smart constructor.
data Ami
Ami' :: Maybe Text -> Maybe ImageState -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Ami

-- | Create a value of <a>Ami</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:Ami'</a>, <a>ami_image</a> - The AMI ID of the Amazon
--   EC2 AMI.
--   
--   <a>$sel:state:Ami'</a>, <a>ami_state</a> - Undocumented member.
--   
--   <a>$sel:accountId:Ami'</a>, <a>ami_accountId</a> - The account ID of
--   the owner of the AMI.
--   
--   <a>$sel:name:Ami'</a>, <a>ami_name</a> - The name of the Amazon EC2
--   AMI.
--   
--   <a>$sel:region:Ami'</a>, <a>ami_region</a> - The Amazon Web Services
--   Region of the Amazon EC2 AMI.
--   
--   <a>$sel:description:Ami'</a>, <a>ami_description</a> - The description
--   of the Amazon EC2 AMI. Minimum and maximum length are in characters.
newAmi :: Ami

-- | Define and configure the output AMIs of the pipeline.
--   
--   <i>See:</i> <a>newAmiDistributionConfiguration</a> smart constructor.
data AmiDistributionConfiguration
AmiDistributionConfiguration' :: Maybe LaunchPermissionConfiguration -> Maybe (NonEmpty Text) -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> AmiDistributionConfiguration

-- | Create a value of <a>AmiDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:launchPermission:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_launchPermission</a> - Launch
--   permissions can be used to configure which Amazon Web Services
--   accounts can use the AMI to launch instances.
--   
--   <a>$sel:targetAccountIds:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_targetAccountIds</a> - The ID of an
--   account to which you want to distribute an image.
--   
--   <a>$sel:amiTags:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_amiTags</a> - The tags to apply to
--   AMIs distributed to this Region.
--   
--   <a>$sel:name:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_name</a> - The name of the output AMI.
--   
--   <a>$sel:kmsKeyId:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_kmsKeyId</a> - The KMS key identifier
--   used to encrypt the distributed image.
--   
--   <a>$sel:description:AmiDistributionConfiguration'</a>,
--   <a>amiDistributionConfiguration_description</a> - The description of
--   the distribution configuration. Minimum and maximum length are in
--   characters.
newAmiDistributionConfiguration :: AmiDistributionConfiguration

-- | A detailed view of a component.
--   
--   <i>See:</i> <a>newComponent</a> smart constructor.
data Component
Component' :: Maybe ComponentState -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [ComponentParameterDetail] -> Maybe Text -> Maybe ComponentType -> Maybe Text -> Maybe (HashMap Text Text) -> Component

-- | Create a value of <a>Component</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:Component'</a>, <a>component_state</a> - Describes the
--   current status of the component. This is used for components that are
--   no longer active.
--   
--   <a>$sel:platform:Component'</a>, <a>component_platform</a> - The
--   platform of the component.
--   
--   <a>$sel:arn:Component'</a>, <a>component_arn</a> - The Amazon Resource
--   Name (ARN) of the component.
--   
--   <a>$sel:data':Component'</a>, <a>component_data</a> - The data of the
--   component.
--   
--   <a>$sel:supportedOsVersions:Component'</a>,
--   <a>component_supportedOsVersions</a> - The operating system (OS)
--   version supported by the component. If the OS information is
--   available, a prefix match is performed against the base image OS
--   version during image recipe creation.
--   
--   <a>$sel:encrypted:Component'</a>, <a>component_encrypted</a> - The
--   encryption status of the component.
--   
--   <a>$sel:owner:Component'</a>, <a>component_owner</a> - The owner of
--   the component.
--   
--   <a>$sel:dateCreated:Component'</a>, <a>component_dateCreated</a> - The
--   date that the component was created.
--   
--   <a>$sel:name:Component'</a>, <a>component_name</a> - The name of the
--   component.
--   
--   <a>$sel:kmsKeyId:Component'</a>, <a>component_kmsKeyId</a> - The KMS
--   key identifier used to encrypt the component.
--   
--   <a>$sel:version:Component'</a>, <a>component_version</a> - The version
--   of the component.
--   
--   <a>$sel:parameters:Component'</a>, <a>component_parameters</a> -
--   Contains parameter details for each of the parameters that are defined
--   for the component.
--   
--   <a>$sel:changeDescription:Component'</a>,
--   <a>component_changeDescription</a> - The change description of the
--   component.
--   
--   <a>$sel:type':Component'</a>, <a>component_type</a> - The type of the
--   component denotes whether the component is used to build the image or
--   only to test it.
--   
--   <a>$sel:description:Component'</a>, <a>component_description</a> - The
--   description of the component.
--   
--   <a>$sel:tags:Component'</a>, <a>component_tags</a> - The tags
--   associated with the component.
newComponent :: Component

-- | Configuration details of the component.
--   
--   <i>See:</i> <a>newComponentConfiguration</a> smart constructor.
data ComponentConfiguration
ComponentConfiguration' :: Maybe (NonEmpty ComponentParameter) -> Text -> ComponentConfiguration

-- | Create a value of <a>ComponentConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ComponentConfiguration'</a>,
--   <a>componentConfiguration_parameters</a> - A group of parameter
--   settings that are used to configure the component for a specific
--   recipe.
--   
--   <a>$sel:componentArn:ComponentConfiguration'</a>,
--   <a>componentConfiguration_componentArn</a> - The Amazon Resource Name
--   (ARN) of the component.
newComponentConfiguration :: Text -> ComponentConfiguration

-- | Contains a key/value pair that sets the named component parameter.
--   
--   <i>See:</i> <a>newComponentParameter</a> smart constructor.
data ComponentParameter
ComponentParameter' :: Text -> [Text] -> ComponentParameter

-- | Create a value of <a>ComponentParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:ComponentParameter'</a>, <a>componentParameter_name</a> -
--   The name of the component parameter to set.
--   
--   <a>$sel:value:ComponentParameter'</a>, <a>componentParameter_value</a>
--   - Sets the value for the named component parameter.
newComponentParameter :: Text -> ComponentParameter

-- | Defines a parameter that is used to provide configuration details for
--   the component.
--   
--   <i>See:</i> <a>newComponentParameterDetail</a> smart constructor.
data ComponentParameterDetail
ComponentParameterDetail' :: Maybe [Text] -> Maybe Text -> Text -> Text -> ComponentParameterDetail

-- | Create a value of <a>ComponentParameterDetail</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:defaultValue:ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_defaultValue</a> - The default value of
--   this parameter if no input is provided.
--   
--   <a>$sel:description:ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_description</a> - Describes this
--   parameter.
--   
--   <a>$sel:name:ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_name</a> - The name of this input
--   parameter.
--   
--   <a>$sel:type':ComponentParameterDetail'</a>,
--   <a>componentParameterDetail_type</a> - The type of input this
--   parameter provides. The currently supported value is "string".
newComponentParameterDetail :: Text -> Text -> ComponentParameterDetail

-- | A group of fields that describe the current status of components that
--   are no longer active.
--   
--   <i>See:</i> <a>newComponentState</a> smart constructor.
data ComponentState
ComponentState' :: Maybe ComponentStatus -> Maybe Text -> ComponentState

-- | Create a value of <a>ComponentState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ComponentState'</a>, <a>componentState_status</a> - The
--   current state of the component.
--   
--   <a>$sel:reason:ComponentState'</a>, <a>componentState_reason</a> -
--   Describes how or why the component changed state.
newComponentState :: ComponentState

-- | A high-level summary of a component.
--   
--   <i>See:</i> <a>newComponentSummary</a> smart constructor.
data ComponentSummary
ComponentSummary' :: Maybe ComponentState -> Maybe Platform -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ComponentType -> Maybe Text -> Maybe (HashMap Text Text) -> ComponentSummary

-- | Create a value of <a>ComponentSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ComponentSummary'</a>, <a>componentSummary_state</a> -
--   Describes the current status of the component.
--   
--   <a>$sel:platform:ComponentSummary'</a>,
--   <a>componentSummary_platform</a> - The platform of the component.
--   
--   <a>$sel:arn:ComponentSummary'</a>, <a>componentSummary_arn</a> - The
--   Amazon Resource Name (ARN) of the component.
--   
--   <a>$sel:supportedOsVersions:ComponentSummary'</a>,
--   <a>componentSummary_supportedOsVersions</a> - The operating system
--   (OS) version supported by the component. If the OS information is
--   available, a prefix match is performed against the base image OS
--   version during image recipe creation.
--   
--   <a>$sel:owner:ComponentSummary'</a>, <a>componentSummary_owner</a> -
--   The owner of the component.
--   
--   <a>$sel:dateCreated:ComponentSummary'</a>,
--   <a>componentSummary_dateCreated</a> - The date that the component was
--   created.
--   
--   <a>$sel:name:ComponentSummary'</a>, <a>componentSummary_name</a> - The
--   name of the component.
--   
--   <a>$sel:version:ComponentSummary'</a>, <a>componentSummary_version</a>
--   - The version of the component.
--   
--   <a>$sel:changeDescription:ComponentSummary'</a>,
--   <a>componentSummary_changeDescription</a> - The change description of
--   the component.
--   
--   <a>$sel:type':ComponentSummary'</a>, <a>componentSummary_type</a> -
--   The type of the component denotes whether the component is used to
--   build the image or only to test it.
--   
--   <a>$sel:description:ComponentSummary'</a>,
--   <a>componentSummary_description</a> - The description of the
--   component.
--   
--   <a>$sel:tags:ComponentSummary'</a>, <a>componentSummary_tags</a> - The
--   tags associated with the component.
newComponentSummary :: ComponentSummary

-- | The defining characteristics of a specific version of an Amazon Web
--   Services TOE component.
--   
--   <i>See:</i> <a>newComponentVersion</a> smart constructor.
data ComponentVersion
ComponentVersion' :: Maybe Platform -> Maybe Text -> Maybe (NonEmpty Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ComponentType -> Maybe Text -> ComponentVersion

-- | Create a value of <a>ComponentVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:ComponentVersion'</a>,
--   <a>componentVersion_platform</a> - The platform of the component.
--   
--   <a>$sel:arn:ComponentVersion'</a>, <a>componentVersion_arn</a> - The
--   Amazon Resource Name (ARN) of the component.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:supportedOsVersions:ComponentVersion'</a>,
--   <a>componentVersion_supportedOsVersions</a> - he operating system (OS)
--   version supported by the component. If the OS information is
--   available, a prefix match is performed against the base image OS
--   version during image recipe creation.
--   
--   <a>$sel:owner:ComponentVersion'</a>, <a>componentVersion_owner</a> -
--   The owner of the component.
--   
--   <a>$sel:dateCreated:ComponentVersion'</a>,
--   <a>componentVersion_dateCreated</a> - The date that the component was
--   created.
--   
--   <a>$sel:name:ComponentVersion'</a>, <a>componentVersion_name</a> - The
--   name of the component.
--   
--   <a>$sel:version:ComponentVersion'</a>, <a>componentVersion_version</a>
--   - The semantic version of the component.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:type':ComponentVersion'</a>, <a>componentVersion_type</a> -
--   The type of the component denotes whether the component is used to
--   build the image or only to test it.
--   
--   <a>$sel:description:ComponentVersion'</a>,
--   <a>componentVersion_description</a> - The description of the
--   component.
newComponentVersion :: ComponentVersion

-- | A container encapsulates the runtime environment for an application.
--   
--   <i>See:</i> <a>newContainer</a> smart constructor.
data Container
Container' :: Maybe [Text] -> Maybe Text -> Container

-- | Create a value of <a>Container</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageUris:Container'</a>, <a>container_imageUris</a> - A list
--   of URIs for containers created in the context Region.
--   
--   <a>$sel:region:Container'</a>, <a>container_region</a> - Containers
--   and container images are Region-specific. This is the Region context
--   for the container.
newContainer :: Container

-- | Container distribution settings for encryption, licensing, and sharing
--   in a specific Region.
--   
--   <i>See:</i> <a>newContainerDistributionConfiguration</a> smart
--   constructor.
data ContainerDistributionConfiguration
ContainerDistributionConfiguration' :: Maybe [Text] -> Maybe Text -> TargetContainerRepository -> ContainerDistributionConfiguration

-- | Create a value of <a>ContainerDistributionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerTags:ContainerDistributionConfiguration'</a>,
--   <a>containerDistributionConfiguration_containerTags</a> - Tags that
--   are attached to the container distribution configuration.
--   
--   <a>$sel:description:ContainerDistributionConfiguration'</a>,
--   <a>containerDistributionConfiguration_description</a> - The
--   description of the container distribution configuration.
--   
--   <a>$sel:targetRepository:ContainerDistributionConfiguration'</a>,
--   <a>containerDistributionConfiguration_targetRepository</a> - The
--   destination repository for the container distribution configuration.
newContainerDistributionConfiguration :: TargetContainerRepository -> ContainerDistributionConfiguration

-- | A container recipe.
--   
--   <i>See:</i> <a>newContainerRecipe</a> smart constructor.
data ContainerRecipe
ContainerRecipe' :: Maybe (NonEmpty ComponentConfiguration) -> Maybe ContainerType -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe TargetContainerRepository -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe InstanceConfiguration -> ContainerRecipe

-- | Create a value of <a>ContainerRecipe</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:components:ContainerRecipe'</a>,
--   <a>containerRecipe_components</a> - Components for build and test that
--   are included in the container recipe.
--   
--   <a>$sel:containerType:ContainerRecipe'</a>,
--   <a>containerRecipe_containerType</a> - Specifies the type of
--   container, such as Docker.
--   
--   <a>$sel:platform:ContainerRecipe'</a>, <a>containerRecipe_platform</a>
--   - The system platform for the container, such as Windows or Linux.
--   
--   <a>$sel:dockerfileTemplateData:ContainerRecipe'</a>,
--   <a>containerRecipe_dockerfileTemplateData</a> - Dockerfiles are text
--   documents that are used to build Docker containers, and ensure that
--   they contain all of the elements required by the application running
--   inside. The template data consists of contextual variables where Image
--   Builder places build information or scripts, based on your container
--   image recipe.
--   
--   <a>$sel:arn:ContainerRecipe'</a>, <a>containerRecipe_arn</a> - The
--   Amazon Resource Name (ARN) of the container recipe.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:workingDirectory:ContainerRecipe'</a>,
--   <a>containerRecipe_workingDirectory</a> - The working directory for
--   use during build and test workflows.
--   
--   <a>$sel:parentImage:ContainerRecipe'</a>,
--   <a>containerRecipe_parentImage</a> - The base image for the container
--   recipe.
--   
--   <a>$sel:encrypted:ContainerRecipe'</a>,
--   <a>containerRecipe_encrypted</a> - A flag that indicates if the target
--   container is encrypted.
--   
--   <a>$sel:owner:ContainerRecipe'</a>, <a>containerRecipe_owner</a> - The
--   owner of the container recipe.
--   
--   <a>$sel:dateCreated:ContainerRecipe'</a>,
--   <a>containerRecipe_dateCreated</a> - The date when this container
--   recipe was created.
--   
--   <a>$sel:name:ContainerRecipe'</a>, <a>containerRecipe_name</a> - The
--   name of the container recipe.
--   
--   <a>$sel:kmsKeyId:ContainerRecipe'</a>, <a>containerRecipe_kmsKeyId</a>
--   - Identifies which KMS key is used to encrypt the container image for
--   distribution to the target Region.
--   
--   <a>$sel:version:ContainerRecipe'</a>, <a>containerRecipe_version</a> -
--   The semantic version of the container recipe.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:targetRepository:ContainerRecipe'</a>,
--   <a>containerRecipe_targetRepository</a> - The destination repository
--   for the container image.
--   
--   <a>$sel:description:ContainerRecipe'</a>,
--   <a>containerRecipe_description</a> - The description of the container
--   recipe.
--   
--   <a>$sel:tags:ContainerRecipe'</a>, <a>containerRecipe_tags</a> - Tags
--   that are attached to the container recipe.
--   
--   <a>$sel:instanceConfiguration:ContainerRecipe'</a>,
--   <a>containerRecipe_instanceConfiguration</a> - A group of options that
--   can be used to configure an instance for building and testing
--   container images.
newContainerRecipe :: ContainerRecipe

-- | A summary of a container recipe
--   
--   <i>See:</i> <a>newContainerRecipeSummary</a> smart constructor.
data ContainerRecipeSummary
ContainerRecipeSummary' :: Maybe ContainerType -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ContainerRecipeSummary

-- | Create a value of <a>ContainerRecipeSummary</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containerType:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_containerType</a> - Specifies the type of
--   container, such as "Docker".
--   
--   <a>$sel:platform:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_platform</a> - The system platform for the
--   container, such as Windows or Linux.
--   
--   <a>$sel:arn:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_arn</a> - The Amazon Resource Name (ARN) of
--   the container recipe.
--   
--   <a>$sel:parentImage:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_parentImage</a> - The base image for the
--   container recipe.
--   
--   <a>$sel:owner:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_owner</a> - The owner of the container
--   recipe.
--   
--   <a>$sel:dateCreated:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_dateCreated</a> - The date when this
--   container recipe was created.
--   
--   <a>$sel:name:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_name</a> - The name of the container recipe.
--   
--   <a>$sel:tags:ContainerRecipeSummary'</a>,
--   <a>containerRecipeSummary_tags</a> - Tags that are attached to the
--   container recipe.
newContainerRecipeSummary :: ContainerRecipeSummary

-- | Defines the settings for a specific Region.
--   
--   <i>See:</i> <a>newDistribution</a> smart constructor.
data Distribution
Distribution' :: Maybe AmiDistributionConfiguration -> Maybe (NonEmpty LaunchTemplateConfiguration) -> Maybe (NonEmpty Text) -> Maybe ContainerDistributionConfiguration -> Text -> Distribution

-- | Create a value of <a>Distribution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:amiDistributionConfiguration:Distribution'</a>,
--   <a>distribution_amiDistributionConfiguration</a> - The specific AMI
--   settings; for example, launch permissions or AMI tags.
--   
--   <a>$sel:launchTemplateConfigurations:Distribution'</a>,
--   <a>distribution_launchTemplateConfigurations</a> - A group of
--   launchTemplateConfiguration settings that apply to image distribution
--   for specified accounts.
--   
--   <a>$sel:licenseConfigurationArns:Distribution'</a>,
--   <a>distribution_licenseConfigurationArns</a> - The License Manager
--   Configuration to associate with the AMI in the specified Region.
--   
--   <a>$sel:containerDistributionConfiguration:Distribution'</a>,
--   <a>distribution_containerDistributionConfiguration</a> - Container
--   distribution settings for encryption, licensing, and sharing in a
--   specific Region.
--   
--   <a>$sel:region:Distribution'</a>, <a>distribution_region</a> - The
--   target Region.
newDistribution :: Text -> Distribution

-- | A distribution configuration.
--   
--   <i>See:</i> <a>newDistributionConfiguration</a> smart constructor.
data DistributionConfiguration
DistributionConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [Distribution] -> Maybe (HashMap Text Text) -> Natural -> DistributionConfiguration

-- | Create a value of <a>DistributionConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_arn</a> - The Amazon Resource Name (ARN)
--   of the distribution configuration.
--   
--   <a>$sel:dateUpdated:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_dateUpdated</a> - The date on which this
--   distribution configuration was last updated.
--   
--   <a>$sel:dateCreated:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_dateCreated</a> - The date on which this
--   distribution configuration was created.
--   
--   <a>$sel:name:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_name</a> - The name of the distribution
--   configuration.
--   
--   <a>$sel:description:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_description</a> - The description of the
--   distribution configuration.
--   
--   <a>$sel:distributions:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_distributions</a> - The distribution
--   objects that apply Region-specific settings for the deployment of the
--   image to targeted Regions.
--   
--   <a>$sel:tags:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_tags</a> - The tags of the distribution
--   configuration.
--   
--   <a>$sel:timeoutMinutes:DistributionConfiguration'</a>,
--   <a>distributionConfiguration_timeoutMinutes</a> - The maximum duration
--   in minutes for this distribution configuration.
newDistributionConfiguration :: Natural -> DistributionConfiguration

-- | A high-level overview of a distribution configuration.
--   
--   <i>See:</i> <a>newDistributionConfigurationSummary</a> smart
--   constructor.
data DistributionConfigurationSummary
DistributionConfigurationSummary' :: Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> DistributionConfigurationSummary

-- | Create a value of <a>DistributionConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:arn:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_arn</a> - The Amazon Resource Name
--   (ARN) of the distribution configuration.
--   
--   <a>$sel:regions:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_regions</a> - A list of Regions
--   where the container image is distributed to.
--   
--   <a>$sel:dateUpdated:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_dateUpdated</a> - The date on
--   which the distribution configuration was updated.
--   
--   <a>$sel:dateCreated:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_dateCreated</a> - The date on
--   which the distribution configuration was created.
--   
--   <a>$sel:name:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_name</a> - The name of the
--   distribution configuration.
--   
--   <a>$sel:description:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_description</a> - The description
--   of the distribution configuration.
--   
--   <a>$sel:tags:DistributionConfigurationSummary'</a>,
--   <a>distributionConfigurationSummary_tags</a> - The tags associated
--   with the distribution configuration.
newDistributionConfigurationSummary :: DistributionConfigurationSummary

-- | Amazon EBS-specific block device mapping specifications.
--   
--   <i>See:</i> <a>newEbsInstanceBlockDeviceSpecification</a> smart
--   constructor.
data EbsInstanceBlockDeviceSpecification
EbsInstanceBlockDeviceSpecification' :: Maybe Bool -> Maybe Natural -> Maybe Natural -> Maybe Natural -> Maybe Bool -> Maybe Text -> Maybe EbsVolumeType -> Maybe Text -> EbsInstanceBlockDeviceSpecification

-- | Create a value of <a>EbsInstanceBlockDeviceSpecification</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deleteOnTermination:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_deleteOnTermination</a> - Use
--   to configure delete on termination of the associated device.
--   
--   <a>$sel:throughput:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_throughput</a> - <b>For GP3
--   volumes only</b> – The throughput in MiB/s that the volume supports.
--   
--   <a>$sel:volumeSize:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_volumeSize</a> - Use to
--   override the device's volume size.
--   
--   <a>$sel:iops:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_iops</a> - Use to configure
--   device IOPS.
--   
--   <a>$sel:encrypted:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_encrypted</a> - Use to
--   configure device encryption.
--   
--   <a>$sel:kmsKeyId:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_kmsKeyId</a> - Use to configure
--   the KMS key to use when encrypting the device.
--   
--   <a>$sel:volumeType:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_volumeType</a> - Use to
--   override the device's volume type.
--   
--   <a>$sel:snapshotId:EbsInstanceBlockDeviceSpecification'</a>,
--   <a>ebsInstanceBlockDeviceSpecification_snapshotId</a> - The snapshot
--   that defines the device contents.
newEbsInstanceBlockDeviceSpecification :: EbsInstanceBlockDeviceSpecification

-- | A filter name and value pair that is used to return a more specific
--   list of results from a list operation. Filters can be used to match a
--   set of resources by specific criteria, such as tags, attributes, or
--   IDs.
--   
--   <i>See:</i> <a>newFilter</a> smart constructor.
data Filter
Filter' :: Maybe (NonEmpty Text) -> Maybe Text -> Filter

-- | Create a value of <a>Filter</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:Filter'</a>, <a>filter_values</a> - The filter values.
--   Filter values are case-sensitive.
--   
--   <a>$sel:name:Filter'</a>, <a>filter_name</a> - The name of the filter.
--   Filter names are case-sensitive.
newFilter :: Filter

-- | An Image Builder image. You must specify exactly one recipe for the
--   image – either a container recipe (<tt>containerRecipe</tt>), which
--   creates a container image, or an image recipe (<tt>imageRecipe</tt>),
--   which creates an AMI.
--   
--   <i>See:</i> <a>newImage</a> smart constructor.
data Image
Image' :: Maybe ImageRecipe -> Maybe ImageState -> Maybe Platform -> Maybe ImageTestsConfiguration -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe ContainerRecipe -> Maybe Text -> Maybe InfrastructureConfiguration -> Maybe Text -> Maybe DistributionConfiguration -> Maybe Text -> Maybe ImageType -> Maybe Text -> Maybe OutputResources -> Maybe Text -> Maybe (HashMap Text Text) -> Image

-- | Create a value of <a>Image</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:imageRecipe:Image'</a>, <a>image_imageRecipe</a> - The image
--   recipe used when creating the image.
--   
--   <a>$sel:state:Image'</a>, <a>image_state</a> - The state of the image.
--   
--   <a>$sel:platform:Image'</a>, <a>image_platform</a> - The platform of
--   the image.
--   
--   <a>$sel:imageTestsConfiguration:Image'</a>,
--   <a>image_imageTestsConfiguration</a> - The image tests configuration
--   used when creating this image.
--   
--   <a>$sel:arn:Image'</a>, <a>image_arn</a> - The Amazon Resource Name
--   (ARN) of the image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:enhancedImageMetadataEnabled:Image'</a>,
--   <a>image_enhancedImageMetadataEnabled</a> - Collects additional
--   information about the image being created, including the operating
--   system (OS) version and package list. This information is used to
--   enhance the overall experience of using EC2 Image Builder. Enabled by
--   default.
--   
--   <a>$sel:dateCreated:Image'</a>, <a>image_dateCreated</a> - The date on
--   which this image was created.
--   
--   <a>$sel:containerRecipe:Image'</a>, <a>image_containerRecipe</a> - The
--   recipe that is used to create an Image Builder container image.
--   
--   <a>$sel:name:Image'</a>, <a>image_name</a> - The name of the image.
--   
--   <a>$sel:infrastructureConfiguration:Image'</a>,
--   <a>image_infrastructureConfiguration</a> - The infrastructure used
--   when creating this image.
--   
--   <a>$sel:version:Image'</a>, <a>image_version</a> - The semantic
--   version of the image.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:distributionConfiguration:Image'</a>,
--   <a>image_distributionConfiguration</a> - The distribution
--   configuration used when creating this image.
--   
--   <a>$sel:sourcePipelineArn:Image'</a>, <a>image_sourcePipelineArn</a> -
--   The Amazon Resource Name (ARN) of the image pipeline that created this
--   image.
--   
--   <a>$sel:type':Image'</a>, <a>image_type</a> - Specifies whether this
--   is an AMI or container image.
--   
--   <a>$sel:sourcePipelineName:Image'</a>, <a>image_sourcePipelineName</a>
--   - The name of the image pipeline that created this image.
--   
--   <a>$sel:outputResources:Image'</a>, <a>image_outputResources</a> - The
--   output resources produced when creating this image.
--   
--   <a>$sel:osVersion:Image'</a>, <a>image_osVersion</a> - The operating
--   system version of the instance. For example, Amazon Linux 2, Ubuntu
--   18, or Microsoft Windows Server 2019.
--   
--   <a>$sel:tags:Image'</a>, <a>image_tags</a> - The tags of the image.
newImage :: Image

-- | Represents a package installed on an Image Builder image.
--   
--   <i>See:</i> <a>newImagePackage</a> smart constructor.
data ImagePackage
ImagePackage' :: Maybe Text -> Maybe Text -> ImagePackage

-- | Create a value of <a>ImagePackage</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:packageName:ImagePackage'</a>, <a>imagePackage_packageName</a>
--   - The name of the package as reported to the operating system package
--   manager.
--   
--   <a>$sel:packageVersion:ImagePackage'</a>,
--   <a>imagePackage_packageVersion</a> - The version of the package as
--   reported to the operating system package manager.
newImagePackage :: ImagePackage

-- | Details of an image pipeline.
--   
--   <i>See:</i> <a>newImagePipeline</a> smart constructor.
data ImagePipeline
ImagePipeline' :: Maybe PipelineStatus -> Maybe Text -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe ImageTestsConfiguration -> Maybe Text -> Maybe Text -> Maybe Schedule -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ImagePipeline

-- | Create a value of <a>ImagePipeline</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ImagePipeline'</a>, <a>imagePipeline_status</a> - The
--   status of the image pipeline.
--   
--   <a>$sel:dateLastRun:ImagePipeline'</a>,
--   <a>imagePipeline_dateLastRun</a> - The date on which this image
--   pipeline was last run.
--   
--   <a>$sel:platform:ImagePipeline'</a>, <a>imagePipeline_platform</a> -
--   The platform of the image pipeline.
--   
--   <a>$sel:infrastructureConfigurationArn:ImagePipeline'</a>,
--   <a>imagePipeline_infrastructureConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the infrastructure configuration associated
--   with this image pipeline.
--   
--   <a>$sel:containerRecipeArn:ImagePipeline'</a>,
--   <a>imagePipeline_containerRecipeArn</a> - The Amazon Resource Name
--   (ARN) of the container recipe that is used for this pipeline.
--   
--   <a>$sel:imageTestsConfiguration:ImagePipeline'</a>,
--   <a>imagePipeline_imageTestsConfiguration</a> - The image tests
--   configuration of the image pipeline.
--   
--   <a>$sel:dateNextRun:ImagePipeline'</a>,
--   <a>imagePipeline_dateNextRun</a> - The date on which this image
--   pipeline will next be run.
--   
--   <a>$sel:arn:ImagePipeline'</a>, <a>imagePipeline_arn</a> - The Amazon
--   Resource Name (ARN) of the image pipeline.
--   
--   <a>$sel:schedule:ImagePipeline'</a>, <a>imagePipeline_schedule</a> -
--   The schedule of the image pipeline.
--   
--   <a>$sel:enhancedImageMetadataEnabled:ImagePipeline'</a>,
--   <a>imagePipeline_enhancedImageMetadataEnabled</a> - Collects
--   additional information about the image being created, including the
--   operating system (OS) version and package list. This information is
--   used to enhance the overall experience of using EC2 Image Builder.
--   Enabled by default.
--   
--   <a>$sel:dateUpdated:ImagePipeline'</a>,
--   <a>imagePipeline_dateUpdated</a> - The date on which this image
--   pipeline was last updated.
--   
--   <a>$sel:dateCreated:ImagePipeline'</a>,
--   <a>imagePipeline_dateCreated</a> - The date on which this image
--   pipeline was created.
--   
--   <a>$sel:name:ImagePipeline'</a>, <a>imagePipeline_name</a> - The name
--   of the image pipeline.
--   
--   <a>$sel:distributionConfigurationArn:ImagePipeline'</a>,
--   <a>imagePipeline_distributionConfigurationArn</a> - The Amazon
--   Resource Name (ARN) of the distribution configuration associated with
--   this image pipeline.
--   
--   <a>$sel:imageRecipeArn:ImagePipeline'</a>,
--   <a>imagePipeline_imageRecipeArn</a> - The Amazon Resource Name (ARN)
--   of the image recipe associated with this image pipeline.
--   
--   <a>$sel:description:ImagePipeline'</a>,
--   <a>imagePipeline_description</a> - The description of the image
--   pipeline.
--   
--   <a>$sel:tags:ImagePipeline'</a>, <a>imagePipeline_tags</a> - The tags
--   of this image pipeline.
newImagePipeline :: ImagePipeline

-- | An image recipe.
--   
--   <i>See:</i> <a>newImageRecipe</a> smart constructor.
data ImageRecipe
ImageRecipe' :: Maybe (NonEmpty ComponentConfiguration) -> Maybe Platform -> Maybe Text -> Maybe AdditionalInstanceConfiguration -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ImageType -> Maybe [InstanceBlockDeviceMapping] -> Maybe Text -> Maybe (HashMap Text Text) -> ImageRecipe

-- | Create a value of <a>ImageRecipe</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:components:ImageRecipe'</a>, <a>imageRecipe_components</a> -
--   The components of the image recipe.
--   
--   <a>$sel:platform:ImageRecipe'</a>, <a>imageRecipe_platform</a> - The
--   platform of the image recipe.
--   
--   <a>$sel:arn:ImageRecipe'</a>, <a>imageRecipe_arn</a> - The Amazon
--   Resource Name (ARN) of the image recipe.
--   
--   <a>$sel:additionalInstanceConfiguration:ImageRecipe'</a>,
--   <a>imageRecipe_additionalInstanceConfiguration</a> - Before you create
--   a new AMI, Image Builder launches temporary Amazon EC2 instances to
--   build and test your image configuration. Instance configuration adds a
--   layer of control over those instances. You can define settings and add
--   scripts to run when an instance is launched from your AMI.
--   
--   <a>$sel:workingDirectory:ImageRecipe'</a>,
--   <a>imageRecipe_workingDirectory</a> - The working directory to be used
--   during build and test workflows.
--   
--   <a>$sel:parentImage:ImageRecipe'</a>, <a>imageRecipe_parentImage</a> -
--   The base image of the image recipe.
--   
--   <a>$sel:owner:ImageRecipe'</a>, <a>imageRecipe_owner</a> - The owner
--   of the image recipe.
--   
--   <a>$sel:dateCreated:ImageRecipe'</a>, <a>imageRecipe_dateCreated</a> -
--   The date on which this image recipe was created.
--   
--   <a>$sel:name:ImageRecipe'</a>, <a>imageRecipe_name</a> - The name of
--   the image recipe.
--   
--   <a>$sel:version:ImageRecipe'</a>, <a>imageRecipe_version</a> - The
--   version of the image recipe.
--   
--   <a>$sel:type':ImageRecipe'</a>, <a>imageRecipe_type</a> - Specifies
--   which type of image is created by the recipe - an AMI or a container
--   image.
--   
--   <a>$sel:blockDeviceMappings:ImageRecipe'</a>,
--   <a>imageRecipe_blockDeviceMappings</a> - The block device mappings to
--   apply when creating images from this recipe.
--   
--   <a>$sel:description:ImageRecipe'</a>, <a>imageRecipe_description</a> -
--   The description of the image recipe.
--   
--   <a>$sel:tags:ImageRecipe'</a>, <a>imageRecipe_tags</a> - The tags of
--   the image recipe.
newImageRecipe :: ImageRecipe

-- | A summary of an image recipe.
--   
--   <i>See:</i> <a>newImageRecipeSummary</a> smart constructor.
data ImageRecipeSummary
ImageRecipeSummary' :: Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> ImageRecipeSummary

-- | Create a value of <a>ImageRecipeSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:ImageRecipeSummary'</a>,
--   <a>imageRecipeSummary_platform</a> - The platform of the image recipe.
--   
--   <a>$sel:arn:ImageRecipeSummary'</a>, <a>imageRecipeSummary_arn</a> -
--   The Amazon Resource Name (ARN) of the image recipe.
--   
--   <a>$sel:parentImage:ImageRecipeSummary'</a>,
--   <a>imageRecipeSummary_parentImage</a> - The base image of the image
--   recipe.
--   
--   <a>$sel:owner:ImageRecipeSummary'</a>, <a>imageRecipeSummary_owner</a>
--   - The owner of the image recipe.
--   
--   <a>$sel:dateCreated:ImageRecipeSummary'</a>,
--   <a>imageRecipeSummary_dateCreated</a> - The date on which this image
--   recipe was created.
--   
--   <a>$sel:name:ImageRecipeSummary'</a>, <a>imageRecipeSummary_name</a> -
--   The name of the image recipe.
--   
--   <a>$sel:tags:ImageRecipeSummary'</a>, <a>imageRecipeSummary_tags</a> -
--   The tags of the image recipe.
newImageRecipeSummary :: ImageRecipeSummary

-- | Image state shows the image status and the reason for that status.
--   
--   <i>See:</i> <a>newImageState</a> smart constructor.
data ImageState
ImageState' :: Maybe ImageStatus -> Maybe Text -> ImageState

-- | Create a value of <a>ImageState</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ImageState'</a>, <a>imageState_status</a> - The status
--   of the image.
--   
--   <a>$sel:reason:ImageState'</a>, <a>imageState_reason</a> - The reason
--   for the image's status.
newImageState :: ImageState

-- | An image summary.
--   
--   <i>See:</i> <a>newImageSummary</a> smart constructor.
data ImageSummary
ImageSummary' :: Maybe ImageState -> Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ImageType -> Maybe OutputResources -> Maybe Text -> Maybe (HashMap Text Text) -> ImageSummary

-- | Create a value of <a>ImageSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:state:ImageSummary'</a>, <a>imageSummary_state</a> - The state
--   of the image.
--   
--   <a>$sel:platform:ImageSummary'</a>, <a>imageSummary_platform</a> - The
--   platform of the image.
--   
--   <a>$sel:arn:ImageSummary'</a>, <a>imageSummary_arn</a> - The Amazon
--   Resource Name (ARN) of the image.
--   
--   <a>$sel:owner:ImageSummary'</a>, <a>imageSummary_owner</a> - The owner
--   of the image.
--   
--   <a>$sel:dateCreated:ImageSummary'</a>, <a>imageSummary_dateCreated</a>
--   - The date on which this image was created.
--   
--   <a>$sel:name:ImageSummary'</a>, <a>imageSummary_name</a> - The name of
--   the image.
--   
--   <a>$sel:version:ImageSummary'</a>, <a>imageSummary_version</a> - The
--   version of the image.
--   
--   <a>$sel:type':ImageSummary'</a>, <a>imageSummary_type</a> - Specifies
--   whether this is an AMI or container image.
--   
--   <a>$sel:outputResources:ImageSummary'</a>,
--   <a>imageSummary_outputResources</a> - The output resources produced
--   when creating this image.
--   
--   <a>$sel:osVersion:ImageSummary'</a>, <a>imageSummary_osVersion</a> -
--   The operating system version of the instance. For example, Amazon
--   Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
--   
--   <a>$sel:tags:ImageSummary'</a>, <a>imageSummary_tags</a> - The tags of
--   the image.
newImageSummary :: ImageSummary

-- | Image tests configuration.
--   
--   <i>See:</i> <a>newImageTestsConfiguration</a> smart constructor.
data ImageTestsConfiguration
ImageTestsConfiguration' :: Maybe Natural -> Maybe Bool -> ImageTestsConfiguration

-- | Create a value of <a>ImageTestsConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:timeoutMinutes:ImageTestsConfiguration'</a>,
--   <a>imageTestsConfiguration_timeoutMinutes</a> - The maximum time in
--   minutes that tests are permitted to run.
--   
--   <a>$sel:imageTestsEnabled:ImageTestsConfiguration'</a>,
--   <a>imageTestsConfiguration_imageTestsEnabled</a> - Defines if tests
--   should be executed when building this image.
newImageTestsConfiguration :: ImageTestsConfiguration

-- | The defining characteristics of a specific version of an Image Builder
--   image.
--   
--   <i>See:</i> <a>newImageVersion</a> smart constructor.
data ImageVersion
ImageVersion' :: Maybe Platform -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe ImageType -> Maybe Text -> ImageVersion

-- | Create a value of <a>ImageVersion</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:platform:ImageVersion'</a>, <a>imageVersion_platform</a> - The
--   platform of the image version, for example "Windows" or "Linux".
--   
--   <a>$sel:arn:ImageVersion'</a>, <a>imageVersion_arn</a> - The Amazon
--   Resource Name (ARN) of a specific version of an Image Builder image.
--   
--   Semantic versioning is included in each object's Amazon Resource Name
--   (ARN), at the level that applies to that object as follows:
--   
--   <ol>
--   <li>Versionless ARNs and Name ARNs do not include specific values in
--   any of the nodes. The nodes are either left off entirely, or they are
--   specified as wildcards, for example: x.x.x.</li>
--   <li>Version ARNs have only the first three nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;</li>
--   <li>Build version ARNs have all four nodes, and point to a specific
--   build for a specific version of an object.</li>
--   </ol>
--   
--   <a>$sel:owner:ImageVersion'</a>, <a>imageVersion_owner</a> - The owner
--   of the image version.
--   
--   <a>$sel:dateCreated:ImageVersion'</a>, <a>imageVersion_dateCreated</a>
--   - The date on which this specific version of the Image Builder image
--   was created.
--   
--   <a>$sel:name:ImageVersion'</a>, <a>imageVersion_name</a> - The name of
--   this specific version of an Image Builder image.
--   
--   <a>$sel:version:ImageVersion'</a>, <a>imageVersion_version</a> -
--   Details for a specific version of an Image Builder image. This version
--   follows the semantic version syntax.
--   
--   The semantic version has four nodes:
--   &lt;major&gt;.&lt;minor&gt;.&lt;patch&gt;/&lt;build&gt;. You can
--   assign values for the first three, and can filter on all of them.
--   
--   <b>Assignment:</b> For the first three nodes you can assign any
--   positive integer value, including zero, with an upper limit of 2^30-1,
--   or 1073741823 for each node. Image Builder automatically assigns the
--   build number to the fourth node.
--   
--   <b>Patterns:</b> You can use any numeric pattern that adheres to the
--   assignment requirements for the nodes that you can assign. For
--   example, you might choose a software version pattern, such as 1.0.0,
--   or a date, such as 2021.01.01.
--   
--   <b>Filtering:</b> With semantic versioning, you have the flexibility
--   to use wildcards (x) to specify the most recent versions or nodes when
--   selecting the base image or components for your recipe. When you use a
--   wildcard in any node, all nodes to the right of the first wildcard
--   must also be wildcards.
--   
--   <a>$sel:type':ImageVersion'</a>, <a>imageVersion_type</a> - Specifies
--   whether this image is an AMI or a container image.
--   
--   <a>$sel:osVersion:ImageVersion'</a>, <a>imageVersion_osVersion</a> -
--   The operating system version of the Amazon EC2 build instance. For
--   example, Amazon Linux 2, Ubuntu 18, or Microsoft Windows Server 2019.
newImageVersion :: ImageVersion

-- | Details of the infrastructure configuration.
--   
--   <i>See:</i> <a>newInfrastructureConfiguration</a> smart constructor.
data InfrastructureConfiguration
InfrastructureConfiguration' :: Maybe [Text] -> Maybe Text -> Maybe [Text] -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe InstanceMetadataOptions -> Maybe Text -> Maybe Text -> Maybe Logging -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> InfrastructureConfiguration

-- | Create a value of <a>InfrastructureConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_securityGroupIds</a> - The security
--   group IDs of the infrastructure configuration.
--   
--   <a>$sel:snsTopicArn:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_snsTopicArn</a> - The SNS topic Amazon
--   Resource Name (ARN) of the infrastructure configuration.
--   
--   <a>$sel:instanceTypes:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_instanceTypes</a> - The instance types
--   of the infrastructure configuration.
--   
--   <a>$sel:arn:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_arn</a> - The Amazon Resource Name
--   (ARN) of the infrastructure configuration.
--   
--   <a>$sel:keyPair:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_keyPair</a> - The Amazon EC2 key pair
--   of the infrastructure configuration.
--   
--   <a>$sel:resourceTags:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_resourceTags</a> - The tags attached to
--   the resource created by Image Builder.
--   
--   <a>$sel:subnetId:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_subnetId</a> - The subnet ID of the
--   infrastructure configuration.
--   
--   <a>$sel:dateUpdated:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_dateUpdated</a> - The date on which the
--   infrastructure configuration was last updated.
--   
--   <a>$sel:dateCreated:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_dateCreated</a> - The date on which the
--   infrastructure configuration was created.
--   
--   <a>$sel:instanceMetadataOptions:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_instanceMetadataOptions</a> - The
--   instance metadata option settings for the infrastructure
--   configuration.
--   
--   <a>$sel:name:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_name</a> - The name of the
--   infrastructure configuration.
--   
--   <a>$sel:instanceProfileName:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_instanceProfileName</a> - The instance
--   profile of the infrastructure configuration.
--   
--   <a>$sel:logging:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_logging</a> - The logging configuration
--   of the infrastructure configuration.
--   
--   <a>$sel:description:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_description</a> - The description of
--   the infrastructure configuration.
--   
--   <a>$sel:tags:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_tags</a> - The tags of the
--   infrastructure configuration.
--   
--   <a>$sel:terminateInstanceOnFailure:InfrastructureConfiguration'</a>,
--   <a>infrastructureConfiguration_terminateInstanceOnFailure</a> - The
--   terminate instance on failure configuration of the infrastructure
--   configuration.
newInfrastructureConfiguration :: InfrastructureConfiguration

-- | The infrastructure used when building Amazon EC2 AMIs.
--   
--   <i>See:</i> <a>newInfrastructureConfigurationSummary</a> smart
--   constructor.
data InfrastructureConfigurationSummary
InfrastructureConfigurationSummary' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> InfrastructureConfigurationSummary

-- | Create a value of <a>InfrastructureConfigurationSummary</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:instanceTypes:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_instanceTypes</a> - The instance
--   types of the infrastructure configuration.
--   
--   <a>$sel:arn:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_arn</a> - The Amazon Resource
--   Name (ARN) of the infrastructure configuration.
--   
--   <a>$sel:resourceTags:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_resourceTags</a> - The tags
--   attached to the image created by Image Builder.
--   
--   <a>$sel:dateUpdated:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_dateUpdated</a> - The date on
--   which the infrastructure configuration was last updated.
--   
--   <a>$sel:dateCreated:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_dateCreated</a> - The date on
--   which the infrastructure configuration was created.
--   
--   <a>$sel:name:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_name</a> - The name of the
--   infrastructure configuration.
--   
--   <a>$sel:instanceProfileName:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_instanceProfileName</a> - The
--   instance profile of the infrastructure configuration.
--   
--   <a>$sel:description:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_description</a> - The
--   description of the infrastructure configuration.
--   
--   <a>$sel:tags:InfrastructureConfigurationSummary'</a>,
--   <a>infrastructureConfigurationSummary_tags</a> - The tags of the
--   infrastructure configuration.
newInfrastructureConfigurationSummary :: InfrastructureConfigurationSummary

-- | Defines block device mappings for the instance used to configure your
--   image.
--   
--   <i>See:</i> <a>newInstanceBlockDeviceMapping</a> smart constructor.
data InstanceBlockDeviceMapping
InstanceBlockDeviceMapping' :: Maybe Text -> Maybe Text -> Maybe EbsInstanceBlockDeviceSpecification -> Maybe Text -> InstanceBlockDeviceMapping

-- | Create a value of <a>InstanceBlockDeviceMapping</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:virtualName:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_virtualName</a> - Use to manage instance
--   ephemeral devices.
--   
--   <a>$sel:noDevice:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_noDevice</a> - Use to remove a mapping
--   from the base image.
--   
--   <a>$sel:ebs:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_ebs</a> - Use to manage Amazon
--   EBS-specific configuration for this mapping.
--   
--   <a>$sel:deviceName:InstanceBlockDeviceMapping'</a>,
--   <a>instanceBlockDeviceMapping_deviceName</a> - The device to which
--   these mappings apply.
newInstanceBlockDeviceMapping :: InstanceBlockDeviceMapping

-- | Defines a custom base AMI and block device mapping configurations of
--   an instance used for building and testing container images.
--   
--   <i>See:</i> <a>newInstanceConfiguration</a> smart constructor.
data InstanceConfiguration
InstanceConfiguration' :: Maybe Text -> Maybe [InstanceBlockDeviceMapping] -> InstanceConfiguration

-- | Create a value of <a>InstanceConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:image:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_image</a> - The AMI ID to use as the base
--   image for a container build and test instance. If not specified, Image
--   Builder will use the appropriate ECS-optimized AMI as a base image.
--   
--   <a>$sel:blockDeviceMappings:InstanceConfiguration'</a>,
--   <a>instanceConfiguration_blockDeviceMappings</a> - Defines the block
--   devices to attach for building an instance from this Image Builder
--   AMI.
newInstanceConfiguration :: InstanceConfiguration

-- | The instance metadata options that apply to the HTTP requests that
--   pipeline builds use to launch EC2 build and test instances. For more
--   information about instance metadata options, see <a>Configure the
--   instance metadata options</a> in the /<i>Amazon EC2 User Guide</i>/
--   for Linux instances, or <a>Configure the instance metadata options</a>
--   in the /<i>Amazon EC2 Windows Guide</i>/ for Windows instances.
--   
--   <i>See:</i> <a>newInstanceMetadataOptions</a> smart constructor.
data InstanceMetadataOptions
InstanceMetadataOptions' :: Maybe Natural -> Maybe Text -> InstanceMetadataOptions

-- | Create a value of <a>InstanceMetadataOptions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpPutResponseHopLimit:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpPutResponseHopLimit</a> - Limit the
--   number of hops that an instance metadata request can traverse to reach
--   its destination.
--   
--   <a>$sel:httpTokens:InstanceMetadataOptions'</a>,
--   <a>instanceMetadataOptions_httpTokens</a> - Indicates whether a signed
--   token header is required for instance metadata retrieval requests. The
--   values affect the response as follows:
--   
--   <ul>
--   <li><b>required</b> – When you retrieve the IAM role credentials,
--   version 2.0 credentials are returned in all cases.</li>
--   <li><b>optional</b> – You can include a signed token header in your
--   request to retrieve instance metadata, or you can leave it out. If you
--   include it, version 2.0 credentials are returned for the IAM role.
--   Otherwise, version 1.0 credentials are returned.</li>
--   </ul>
--   
--   The default setting is <b>optional</b>.
newInstanceMetadataOptions :: InstanceMetadataOptions

-- | Describes the configuration for a launch permission. The launch
--   permission modification request is sent to the <a>Amazon EC2
--   ModifyImageAttribute</a> API on behalf of the user for each Region
--   they have selected to distribute the AMI. To make an AMI public, set
--   the launch permission authorized accounts to <tt>all</tt>. See the
--   examples for making an AMI public at <a>Amazon EC2
--   ModifyImageAttribute</a>.
--   
--   <i>See:</i> <a>newLaunchPermissionConfiguration</a> smart constructor.
data LaunchPermissionConfiguration
LaunchPermissionConfiguration' :: Maybe (NonEmpty Text) -> Maybe [Text] -> LaunchPermissionConfiguration

-- | Create a value of <a>LaunchPermissionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:userIds:LaunchPermissionConfiguration'</a>,
--   <a>launchPermissionConfiguration_userIds</a> - The Amazon Web Services
--   account ID.
--   
--   <a>$sel:userGroups:LaunchPermissionConfiguration'</a>,
--   <a>launchPermissionConfiguration_userGroups</a> - The name of the
--   group.
newLaunchPermissionConfiguration :: LaunchPermissionConfiguration

-- | Identifies an Amazon EC2 launch template to use for a specific
--   account.
--   
--   <i>See:</i> <a>newLaunchTemplateConfiguration</a> smart constructor.
data LaunchTemplateConfiguration
LaunchTemplateConfiguration' :: Maybe Bool -> Maybe Text -> Text -> LaunchTemplateConfiguration

-- | Create a value of <a>LaunchTemplateConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:setDefaultVersion:LaunchTemplateConfiguration'</a>,
--   <a>launchTemplateConfiguration_setDefaultVersion</a> - Set the
--   specified Amazon EC2 launch template as the default launch template
--   for the specified account.
--   
--   <a>$sel:accountId:LaunchTemplateConfiguration'</a>,
--   <a>launchTemplateConfiguration_accountId</a> - The account ID that
--   this configuration applies to.
--   
--   <a>$sel:launchTemplateId:LaunchTemplateConfiguration'</a>,
--   <a>launchTemplateConfiguration_launchTemplateId</a> - Identifies the
--   Amazon EC2 launch template to use.
newLaunchTemplateConfiguration :: Text -> LaunchTemplateConfiguration

-- | Logging configuration defines where Image Builder uploads your logs.
--   
--   <i>See:</i> <a>newLogging</a> smart constructor.
data Logging
Logging' :: Maybe S3Logs -> Logging

-- | Create a value of <a>Logging</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3Logs:Logging'</a>, <a>logging_s3Logs</a> - The Amazon S3
--   logging configuration.
newLogging :: Logging

-- | The resources produced by this image.
--   
--   <i>See:</i> <a>newOutputResources</a> smart constructor.
data OutputResources
OutputResources' :: Maybe [Container] -> Maybe [Ami] -> OutputResources

-- | Create a value of <a>OutputResources</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:containers:OutputResources'</a>,
--   <a>outputResources_containers</a> - Container images that the pipeline
--   has generated and stored in the output repository.
--   
--   <a>$sel:amis:OutputResources'</a>, <a>outputResources_amis</a> - The
--   Amazon EC2 AMIs created by this image.
newOutputResources :: OutputResources

-- | Amazon S3 logging configuration.
--   
--   <i>See:</i> <a>newS3Logs</a> smart constructor.
data S3Logs
S3Logs' :: Maybe Text -> Maybe Text -> S3Logs

-- | Create a value of <a>S3Logs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3KeyPrefix:S3Logs'</a>, <a>s3Logs_s3KeyPrefix</a> - The
--   Amazon S3 path in which to store the logs.
--   
--   <a>$sel:s3BucketName:S3Logs'</a>, <a>s3Logs_s3BucketName</a> - The
--   Amazon S3 bucket in which to store the logs.
newS3Logs :: S3Logs

-- | A schedule configures how often and when a pipeline will automatically
--   create a new image.
--   
--   <i>See:</i> <a>newSchedule</a> smart constructor.
data Schedule
Schedule' :: Maybe Text -> Maybe PipelineExecutionStartCondition -> Maybe Text -> Schedule

-- | Create a value of <a>Schedule</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:scheduleExpression:Schedule'</a>,
--   <a>schedule_scheduleExpression</a> - The cron expression determines
--   how often EC2 Image Builder evaluates your
--   <tt>pipelineExecutionStartCondition</tt>.
--   
--   For information on how to format a cron expression in Image Builder,
--   see <a>Use cron expressions in EC2 Image Builder</a>.
--   
--   <a>$sel:pipelineExecutionStartCondition:Schedule'</a>,
--   <a>schedule_pipelineExecutionStartCondition</a> - The condition
--   configures when the pipeline should trigger a new image build. When
--   the <tt>pipelineExecutionStartCondition</tt> is set to
--   <tt>EXPRESSION_MATCH_AND_DEPENDENCY_UPDATES_AVAILABLE</tt>, and you
--   use semantic version filters on the base image or components in your
--   image recipe, EC2 Image Builder will build a new image only when there
--   are new versions of the image or components in your recipe that match
--   the semantic version filter. When it is set to
--   <tt>EXPRESSION_MATCH_ONLY</tt>, it will build a new image every time
--   the CRON expression matches the current time. For semantic version
--   syntax, see <a>CreateComponent</a> in the <i>EC2 Image Builder API
--   Reference</i>.
--   
--   <a>$sel:timezone:Schedule'</a>, <a>schedule_timezone</a> - The
--   timezone that applies to the scheduling expression. For example,
--   "Etc/UTC", "America/Los_Angeles" in the <a>IANA timezone format</a>.
--   If not specified this defaults to UTC.
newSchedule :: Schedule

-- | Contains settings for the Systems Manager agent on your build
--   instance.
--   
--   <i>See:</i> <a>newSystemsManagerAgent</a> smart constructor.
data SystemsManagerAgent
SystemsManagerAgent' :: Maybe Bool -> SystemsManagerAgent

-- | Create a value of <a>SystemsManagerAgent</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uninstallAfterBuild:SystemsManagerAgent'</a>,
--   <a>systemsManagerAgent_uninstallAfterBuild</a> - Controls whether the
--   Systems Manager agent is removed from your final build image, prior to
--   creating the new AMI. If this is set to true, then the agent is
--   removed from the final image. If it's set to false, then the agent is
--   left in, so that it is included in the new AMI. The default value is
--   false.
newSystemsManagerAgent :: SystemsManagerAgent

-- | The container repository where the output container image is stored.
--   
--   <i>See:</i> <a>newTargetContainerRepository</a> smart constructor.
data TargetContainerRepository
TargetContainerRepository' :: ContainerRepositoryService -> Text -> TargetContainerRepository

-- | Create a value of <a>TargetContainerRepository</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:service:TargetContainerRepository'</a>,
--   <a>targetContainerRepository_service</a> - Specifies the service in
--   which this image was registered.
--   
--   <a>$sel:repositoryName:TargetContainerRepository'</a>,
--   <a>targetContainerRepository_repositoryName</a> - The name of the
--   container repository where the output container image is stored. This
--   name is prefixed by the repository location.
newTargetContainerRepository :: ContainerRepositoryService -> Text -> TargetContainerRepository
