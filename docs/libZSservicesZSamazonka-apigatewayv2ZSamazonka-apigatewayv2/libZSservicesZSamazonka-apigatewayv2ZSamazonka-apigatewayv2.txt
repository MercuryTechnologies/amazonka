-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-apigatewayv2ZSamazonka-apigatewayv2
@version 2.0


module Network.AWS.ApiGatewayV2.Types.AccessLogSettings

-- | Settings for logging access in a stage.
--   
--   <i>See:</i> <a>newAccessLogSettings</a> smart constructor.
data AccessLogSettings
AccessLogSettings' :: Maybe Text -> Maybe Text -> AccessLogSettings

-- | A single line format of the access logs of data, as specified by
--   selected $context variables. The format must include at least
--   $context.requestId.
[$sel:format:AccessLogSettings'] :: AccessLogSettings -> Maybe Text

-- | The ARN of the CloudWatch Logs log group to receive access logs.
[$sel:destinationArn:AccessLogSettings'] :: AccessLogSettings -> Maybe Text

-- | Create a value of <a>AccessLogSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:AccessLogSettings'</a>, <a>accessLogSettings_format</a>
--   - A single line format of the access logs of data, as specified by
--   selected $context variables. The format must include at least
--   $context.requestId.
--   
--   <a>$sel:destinationArn:AccessLogSettings'</a>,
--   <a>accessLogSettings_destinationArn</a> - The ARN of the CloudWatch
--   Logs log group to receive access logs.
newAccessLogSettings :: AccessLogSettings

-- | A single line format of the access logs of data, as specified by
--   selected $context variables. The format must include at least
--   $context.requestId.
accessLogSettings_format :: Lens' AccessLogSettings (Maybe Text)

-- | The ARN of the CloudWatch Logs log group to receive access logs.
accessLogSettings_destinationArn :: Lens' AccessLogSettings (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.AccessLogSettings.AccessLogSettings
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.AccessLogSettings.AccessLogSettings
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.AccessLogSettings.AccessLogSettings
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.AccessLogSettings.AccessLogSettings
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.AccessLogSettings.AccessLogSettings
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.AccessLogSettings.AccessLogSettings
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.AccessLogSettings.AccessLogSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.AccessLogSettings.AccessLogSettings


module Network.AWS.ApiGatewayV2.Types.ApiMapping

-- | Represents an API mapping.
--   
--   <i>See:</i> <a>newApiMapping</a> smart constructor.
data ApiMapping
ApiMapping' :: Maybe Text -> Maybe Text -> Text -> Text -> ApiMapping

-- | The API mapping key.
[$sel:apiMappingKey:ApiMapping'] :: ApiMapping -> Maybe Text

-- | The API mapping identifier.
[$sel:apiMappingId:ApiMapping'] :: ApiMapping -> Maybe Text

-- | The API stage.
[$sel:stage:ApiMapping'] :: ApiMapping -> Text

-- | The API identifier.
[$sel:apiId:ApiMapping'] :: ApiMapping -> Text

-- | Create a value of <a>ApiMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiMappingKey:ApiMapping'</a>, <a>apiMapping_apiMappingKey</a>
--   - The API mapping key.
--   
--   <a>$sel:apiMappingId:ApiMapping'</a>, <a>apiMapping_apiMappingId</a> -
--   The API mapping identifier.
--   
--   <a>$sel:stage:ApiMapping'</a>, <a>apiMapping_stage</a> - The API
--   stage.
--   
--   <a>$sel:apiId:ApiMapping'</a>, <a>apiMapping_apiId</a> - The API
--   identifier.
newApiMapping :: Text -> Text -> ApiMapping

-- | The API mapping key.
apiMapping_apiMappingKey :: Lens' ApiMapping (Maybe Text)

-- | The API mapping identifier.
apiMapping_apiMappingId :: Lens' ApiMapping (Maybe Text)

-- | The API stage.
apiMapping_stage :: Lens' ApiMapping Text

-- | The API identifier.
apiMapping_apiId :: Lens' ApiMapping Text
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.ApiMapping.ApiMapping
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.ApiMapping.ApiMapping
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.ApiMapping.ApiMapping
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.ApiMapping.ApiMapping
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.ApiMapping.ApiMapping
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.ApiMapping.ApiMapping
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.ApiMapping.ApiMapping


module Network.AWS.ApiGatewayV2.Types.AuthorizationType

-- | The authorization type. For WebSocket APIs, valid values are NONE for
--   open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for
--   using a Lambda authorizer. For HTTP APIs, valid values are NONE for
--   open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM
--   permissions, and CUSTOM for using a Lambda authorizer.
newtype AuthorizationType
AuthorizationType' :: Text -> AuthorizationType
[fromAuthorizationType] :: AuthorizationType -> Text
pattern AuthorizationType_AWS_IAM :: AuthorizationType
pattern AuthorizationType_CUSTOM :: AuthorizationType
pattern AuthorizationType_JWT :: AuthorizationType
pattern AuthorizationType_NONE :: AuthorizationType
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.AuthorizationType.AuthorizationType


module Network.AWS.ApiGatewayV2.Types.AuthorizerType

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
newtype AuthorizerType
AuthorizerType' :: Text -> AuthorizerType
[fromAuthorizerType] :: AuthorizerType -> Text
pattern AuthorizerType_JWT :: AuthorizerType
pattern AuthorizerType_REQUEST :: AuthorizerType
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.AuthorizerType.AuthorizerType


module Network.AWS.ApiGatewayV2.Types.ConnectionType

-- | Represents a connection type.
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_INTERNET :: ConnectionType
pattern ConnectionType_VPC_LINK :: ConnectionType
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.ConnectionType.ConnectionType


module Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy

-- | Specifies how to handle response payload content type conversions.
--   Supported only for WebSocket APIs.
newtype ContentHandlingStrategy
ContentHandlingStrategy' :: Text -> ContentHandlingStrategy
[fromContentHandlingStrategy] :: ContentHandlingStrategy -> Text
pattern ContentHandlingStrategy_CONVERT_TO_BINARY :: ContentHandlingStrategy
pattern ContentHandlingStrategy_CONVERT_TO_TEXT :: ContentHandlingStrategy
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.ContentHandlingStrategy.ContentHandlingStrategy


module Network.AWS.ApiGatewayV2.Types.Cors

-- | Represents a CORS configuration. Supported only for HTTP APIs. See
--   <a>Configuring CORS</a> for more information.
--   
--   <i>See:</i> <a>newCors</a> smart constructor.
data Cors
Cors' :: Maybe Int -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Cors

-- | The number of seconds that the browser should cache preflight request
--   results. Supported only for HTTP APIs.
[$sel:maxAge:Cors'] :: Cors -> Maybe Int

-- | Represents a collection of allowed HTTP methods. Supported only for
--   HTTP APIs.
[$sel:allowMethods:Cors'] :: Cors -> Maybe [Text]

-- | Represents a collection of allowed headers. Supported only for HTTP
--   APIs.
[$sel:allowHeaders:Cors'] :: Cors -> Maybe [Text]

-- | Represents a collection of exposed headers. Supported only for HTTP
--   APIs.
[$sel:exposeHeaders:Cors'] :: Cors -> Maybe [Text]

-- | Represents a collection of allowed origins. Supported only for HTTP
--   APIs.
[$sel:allowOrigins:Cors'] :: Cors -> Maybe [Text]

-- | Specifies whether credentials are included in the CORS request.
--   Supported only for HTTP APIs.
[$sel:allowCredentials:Cors'] :: Cors -> Maybe Bool

-- | Create a value of <a>Cors</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxAge:Cors'</a>, <a>cors_maxAge</a> - The number of seconds
--   that the browser should cache preflight request results. Supported
--   only for HTTP APIs.
--   
--   <a>$sel:allowMethods:Cors'</a>, <a>cors_allowMethods</a> - Represents
--   a collection of allowed HTTP methods. Supported only for HTTP APIs.
--   
--   <a>$sel:allowHeaders:Cors'</a>, <a>cors_allowHeaders</a> - Represents
--   a collection of allowed headers. Supported only for HTTP APIs.
--   
--   <a>$sel:exposeHeaders:Cors'</a>, <a>cors_exposeHeaders</a> -
--   Represents a collection of exposed headers. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:allowOrigins:Cors'</a>, <a>cors_allowOrigins</a> - Represents
--   a collection of allowed origins. Supported only for HTTP APIs.
--   
--   <a>$sel:allowCredentials:Cors'</a>, <a>cors_allowCredentials</a> -
--   Specifies whether credentials are included in the CORS request.
--   Supported only for HTTP APIs.
newCors :: Cors

-- | The number of seconds that the browser should cache preflight request
--   results. Supported only for HTTP APIs.
cors_maxAge :: Lens' Cors (Maybe Int)

-- | Represents a collection of allowed HTTP methods. Supported only for
--   HTTP APIs.
cors_allowMethods :: Lens' Cors (Maybe [Text])

-- | Represents a collection of allowed headers. Supported only for HTTP
--   APIs.
cors_allowHeaders :: Lens' Cors (Maybe [Text])

-- | Represents a collection of exposed headers. Supported only for HTTP
--   APIs.
cors_exposeHeaders :: Lens' Cors (Maybe [Text])

-- | Represents a collection of allowed origins. Supported only for HTTP
--   APIs.
cors_allowOrigins :: Lens' Cors (Maybe [Text])

-- | Specifies whether credentials are included in the CORS request.
--   Supported only for HTTP APIs.
cors_allowCredentials :: Lens' Cors (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.Cors.Cors
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.Cors.Cors
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.Cors.Cors
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.Cors.Cors
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.Cors.Cors
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.Cors.Cors
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.Cors.Cors
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.Cors.Cors


module Network.AWS.ApiGatewayV2.Types.DeploymentStatus

-- | Represents a deployment status.
newtype DeploymentStatus
DeploymentStatus' :: Text -> DeploymentStatus
[fromDeploymentStatus] :: DeploymentStatus -> Text
pattern DeploymentStatus_DEPLOYED :: DeploymentStatus
pattern DeploymentStatus_FAILED :: DeploymentStatus
pattern DeploymentStatus_PENDING :: DeploymentStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.DeploymentStatus.DeploymentStatus


module Network.AWS.ApiGatewayV2.Types.Deployment

-- | An immutable representation of an API that can be called by users. A
--   Deployment must be associated with a Stage for it to be callable over
--   the internet.
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe DeploymentStatus -> Maybe Text -> Deployment

-- | The identifier for the deployment.
[$sel:deploymentId:Deployment'] :: Deployment -> Maybe Text

-- | Specifies whether a deployment was automatically released.
[$sel:autoDeployed:Deployment'] :: Deployment -> Maybe Bool

-- | May contain additional feedback on the status of an API deployment.
[$sel:deploymentStatusMessage:Deployment'] :: Deployment -> Maybe Text

-- | The date and time when the Deployment resource was created.
[$sel:createdDate:Deployment'] :: Deployment -> Maybe POSIX

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
[$sel:deploymentStatus:Deployment'] :: Deployment -> Maybe DeploymentStatus

-- | The description for the deployment.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Deployment'</a>, <a>deployment_deploymentId</a> -
--   The identifier for the deployment.
--   
--   <a>$sel:autoDeployed:Deployment'</a>, <a>deployment_autoDeployed</a> -
--   Specifies whether a deployment was automatically released.
--   
--   <a>$sel:deploymentStatusMessage:Deployment'</a>,
--   <a>deployment_deploymentStatusMessage</a> - May contain additional
--   feedback on the status of an API deployment.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time when the Deployment resource was created.
--   
--   <a>$sel:deploymentStatus:Deployment'</a>,
--   <a>deployment_deploymentStatus</a> - The status of the deployment:
--   PENDING, FAILED, or SUCCEEDED.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment.
newDeployment :: Deployment

-- | The identifier for the deployment.
deployment_deploymentId :: Lens' Deployment (Maybe Text)

-- | Specifies whether a deployment was automatically released.
deployment_autoDeployed :: Lens' Deployment (Maybe Bool)

-- | May contain additional feedback on the status of an API deployment.
deployment_deploymentStatusMessage :: Lens' Deployment (Maybe Text)

-- | The date and time when the Deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
deployment_deploymentStatus :: Lens' Deployment (Maybe DeploymentStatus)

-- | The description for the deployment.
deployment_description :: Lens' Deployment (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.Deployment.Deployment
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.Deployment.Deployment
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.Deployment.Deployment
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.Deployment.Deployment
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.Deployment.Deployment
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.Deployment.Deployment
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.Deployment.Deployment


module Network.AWS.ApiGatewayV2.Types.DomainNameStatus

-- | The status of the domain name migration. The valid values are
--   AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and
--   PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain
--   cannot be modified further until the existing operation is complete.
--   If it is AVAILABLE, the domain can be updated.
newtype DomainNameStatus
DomainNameStatus' :: Text -> DomainNameStatus
[fromDomainNameStatus] :: DomainNameStatus -> Text
pattern DomainNameStatus_AVAILABLE :: DomainNameStatus
pattern DomainNameStatus_PENDING_CERTIFICATE_REIMPORT :: DomainNameStatus
pattern DomainNameStatus_PENDING_OWNERSHIP_VERIFICATION :: DomainNameStatus
pattern DomainNameStatus_UPDATING :: DomainNameStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.DomainNameStatus.DomainNameStatus


module Network.AWS.ApiGatewayV2.Types.EndpointType

-- | Represents an endpoint type.
newtype EndpointType
EndpointType' :: Text -> EndpointType
[fromEndpointType] :: EndpointType -> Text
pattern EndpointType_EDGE :: EndpointType
pattern EndpointType_REGIONAL :: EndpointType
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.EndpointType.EndpointType


module Network.AWS.ApiGatewayV2.Types.IntegrationResponse

-- | Represents an integration response.
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe Text -> Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Text -> IntegrationResponse

-- | The integration response ID.
[$sel:integrationResponseId:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | The template selection expressions for the integration response.
[$sel:templateSelectionExpression:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:IntegrationResponse'] :: IntegrationResponse -> Maybe ContentHandlingStrategy

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
[$sel:responseTemplates:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
[$sel:responseParameters:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | The integration response key.
[$sel:integrationResponseKey:IntegrationResponse'] :: IntegrationResponse -> Text

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseId:IntegrationResponse'</a>,
--   <a>integrationResponse_integrationResponseId</a> - The integration
--   response ID.
--   
--   <a>$sel:templateSelectionExpression:IntegrationResponse'</a>,
--   <a>integrationResponse_templateSelectionExpression</a> - The template
--   selection expressions for the integration response.
--   
--   <a>$sel:contentHandlingStrategy:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandlingStrategy</a> - Supported only
--   for WebSocket APIs. Specifies how to handle response payload content
--   type conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - The collection of
--   response templates for the integration response as a string-to-string
--   map of key-value pairs. Response templates are represented as a
--   key/value map, with a content-type as the key and a template as the
--   value.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the backend. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of method.response.header.{name}, where name is a valid and
--   unique header name. The mapped non-static value must match the pattern
--   of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:integrationResponseKey:IntegrationResponse'</a>,
--   <a>integrationResponse_integrationResponseKey</a> - The integration
--   response key.
newIntegrationResponse :: Text -> IntegrationResponse

-- | The integration response ID.
integrationResponse_integrationResponseId :: Lens' IntegrationResponse (Maybe Text)

-- | The template selection expressions for the integration response.
integrationResponse_templateSelectionExpression :: Lens' IntegrationResponse (Maybe Text)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
integrationResponse_contentHandlingStrategy :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | The integration response key.
integrationResponse_integrationResponseKey :: Lens' IntegrationResponse Text
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.IntegrationResponse.IntegrationResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.IntegrationResponse.IntegrationResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.IntegrationResponse.IntegrationResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.IntegrationResponse.IntegrationResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.IntegrationResponse.IntegrationResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.IntegrationResponse.IntegrationResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.IntegrationResponse.IntegrationResponse


module Network.AWS.ApiGatewayV2.Types.IntegrationType

-- | Represents an API method integration type.
newtype IntegrationType
IntegrationType' :: Text -> IntegrationType
[fromIntegrationType] :: IntegrationType -> Text
pattern IntegrationType_AWS :: IntegrationType
pattern IntegrationType_AWS_PROXY :: IntegrationType
pattern IntegrationType_HTTP :: IntegrationType
pattern IntegrationType_HTTP_PROXY :: IntegrationType
pattern IntegrationType_MOCK :: IntegrationType
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.IntegrationType.IntegrationType


module Network.AWS.ApiGatewayV2.Types.JWTConfiguration

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
--   
--   <i>See:</i> <a>newJWTConfiguration</a> smart constructor.
data JWTConfiguration
JWTConfiguration' :: Maybe [Text] -> Maybe Text -> JWTConfiguration

-- | A list of the intended recipients of the JWT. A valid JWT must provide
--   an aud that matches at least one entry in this list. See <a>RFC
--   7519</a>. Supported only for HTTP APIs.
[$sel:audience:JWTConfiguration'] :: JWTConfiguration -> Maybe [Text]

-- | The base domain of the identity provider that issues JSON Web Tokens.
--   For example, an Amazon Cognito user pool has the following format:
--   https://cognito-idp.{region}.amazonaws.com/{userPoolId} . Required for
--   the JWT authorizer type. Supported only for HTTP APIs.
[$sel:issuer:JWTConfiguration'] :: JWTConfiguration -> Maybe Text

-- | Create a value of <a>JWTConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:audience:JWTConfiguration'</a>,
--   <a>jWTConfiguration_audience</a> - A list of the intended recipients
--   of the JWT. A valid JWT must provide an aud that matches at least one
--   entry in this list. See <a>RFC 7519</a>. Supported only for HTTP APIs.
--   
--   <a>$sel:issuer:JWTConfiguration'</a>, <a>jWTConfiguration_issuer</a> -
--   The base domain of the identity provider that issues JSON Web Tokens.
--   For example, an Amazon Cognito user pool has the following format:
--   https://cognito-idp.{region}.amazonaws.com/{userPoolId} . Required for
--   the JWT authorizer type. Supported only for HTTP APIs.
newJWTConfiguration :: JWTConfiguration

-- | A list of the intended recipients of the JWT. A valid JWT must provide
--   an aud that matches at least one entry in this list. See <a>RFC
--   7519</a>. Supported only for HTTP APIs.
jWTConfiguration_audience :: Lens' JWTConfiguration (Maybe [Text])

-- | The base domain of the identity provider that issues JSON Web Tokens.
--   For example, an Amazon Cognito user pool has the following format:
--   https://cognito-idp.{region}.amazonaws.com/{userPoolId} . Required for
--   the JWT authorizer type. Supported only for HTTP APIs.
jWTConfiguration_issuer :: Lens' JWTConfiguration (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.JWTConfiguration.JWTConfiguration
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.JWTConfiguration.JWTConfiguration
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.JWTConfiguration.JWTConfiguration
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.JWTConfiguration.JWTConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.JWTConfiguration.JWTConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.JWTConfiguration.JWTConfiguration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.JWTConfiguration.JWTConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.JWTConfiguration.JWTConfiguration


module Network.AWS.ApiGatewayV2.Types.Authorizer

-- | Represents an authorizer.
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe AuthorizerType -> Text -> Authorizer

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
[$sel:authorizerCredentialsArn:Authorizer'] :: Authorizer -> Maybe Text

-- | The validation expression does not apply to the REQUEST authorizer.
[$sel:identityValidationExpression:Authorizer'] :: Authorizer -> Maybe Text

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
[$sel:enableSimpleResponses:Authorizer'] :: Authorizer -> Maybe Bool

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
[$sel:authorizerUri:Authorizer'] :: Authorizer -> Maybe Text

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
[$sel:authorizerPayloadFormatVersion:Authorizer'] :: Authorizer -> Maybe Text

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
[$sel:jwtConfiguration:Authorizer'] :: Authorizer -> Maybe JWTConfiguration

-- | The authorizer identifier.
[$sel:authorizerId:Authorizer'] :: Authorizer -> Maybe Text

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
[$sel:authorizerResultTtlInSeconds:Authorizer'] :: Authorizer -> Maybe Natural

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
[$sel:identitySource:Authorizer'] :: Authorizer -> Maybe [Text]

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
[$sel:authorizerType:Authorizer'] :: Authorizer -> Maybe AuthorizerType

-- | The name of the authorizer.
[$sel:name:Authorizer'] :: Authorizer -> Text

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:Authorizer'</a>,
--   <a>authorizer_authorizerCredentialsArn</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, don't specify this parameter. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - The validation
--   expression does not apply to the REQUEST authorizer.
--   
--   <a>$sel:enableSimpleResponses:Authorizer'</a>,
--   <a>authorizer_enableSimpleResponses</a> - Specifies whether a Lambda
--   authorizer returns a response in a simple format. If enabled, the
--   Lambda authorizer can return a boolean value instead of an IAM policy.
--   Supported only for HTTP APIs. To learn more, see <a>Working with AWS
--   Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:Authorizer'</a>,
--   <a>authorizer_authorizerPayloadFormatVersion</a> - Specifies the
--   format of the payload sent to an HTTP API Lambda authorizer. Required
--   for HTTP API Lambda authorizers. Supported values are 1.0 and 2.0. To
--   learn more, see <a>Working with AWS Lambda authorizers for HTTP
--   APIs</a>.
--   
--   <a>$sel:jwtConfiguration:Authorizer'</a>,
--   <a>authorizer_jwtConfiguration</a> - Represents the configuration of a
--   JWT authorizer. Required for the JWT authorizer type. Supported only
--   for HTTP APIs.
--   
--   <a>$sel:authorizerId:Authorizer'</a>, <a>authorizer_authorizerId</a> -
--   The authorizer identifier.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The time to live
--   (TTL) for cached authorizer results, in seconds. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway caches authorizer responses. The maximum value is 3600, or 1
--   hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:authorizerType:Authorizer'</a>,
--   <a>authorizer_authorizerType</a> - The authorizer type. Specify
--   REQUEST for a Lambda function using incoming request parameters.
--   Specify JWT to use JSON Web Tokens (supported only for HTTP APIs).
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - The name of the
--   authorizer.
newAuthorizer :: Text -> Authorizer

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
authorizer_authorizerCredentialsArn :: Lens' Authorizer (Maybe Text)

-- | The validation expression does not apply to the REQUEST authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
authorizer_enableSimpleResponses :: Lens' Authorizer (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
authorizer_authorizerPayloadFormatVersion :: Lens' Authorizer (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
authorizer_jwtConfiguration :: Lens' Authorizer (Maybe JWTConfiguration)

-- | The authorizer identifier.
authorizer_authorizerId :: Lens' Authorizer (Maybe Text)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Natural)

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
authorizer_identitySource :: Lens' Authorizer (Maybe [Text])

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
authorizer_authorizerType :: Lens' Authorizer (Maybe AuthorizerType)

-- | The name of the authorizer.
authorizer_name :: Lens' Authorizer Text
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.Authorizer.Authorizer
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.Authorizer.Authorizer
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.Authorizer.Authorizer
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.Authorizer.Authorizer
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.Authorizer.Authorizer
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.Authorizer.Authorizer
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.Authorizer.Authorizer


module Network.AWS.ApiGatewayV2.Types.LoggingLevel

-- | The logging level.
newtype LoggingLevel
LoggingLevel' :: Text -> LoggingLevel
[fromLoggingLevel] :: LoggingLevel -> Text
pattern LoggingLevel_ERROR :: LoggingLevel
pattern LoggingLevel_INFO :: LoggingLevel
pattern LoggingLevel_OFF :: LoggingLevel
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.LoggingLevel.LoggingLevel


module Network.AWS.ApiGatewayV2.Types.Model

-- | Represents a data model for an API. Supported only for WebSocket APIs.
--   See <a>Create Models and Mapping Templates for Request and Response
--   Mappings</a>.
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Model

-- | The model identifier.
[$sel:modelId:Model'] :: Model -> Maybe Text

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
[$sel:schema:Model'] :: Model -> Maybe Text

-- | The description of the model.
[$sel:description:Model'] :: Model -> Maybe Text

-- | The content-type for the model, for example, "application/json".
[$sel:contentType:Model'] :: Model -> Maybe Text

-- | The name of the model. Must be alphanumeric.
[$sel:name:Model'] :: Model -> Text

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:Model'</a>, <a>model_modelId</a> - The model
--   identifier.
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For application/json models, this should be JSON schema draft 4
--   model.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model, for example, "application/json".
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be alphanumeric.
newModel :: Text -> Model

-- | The model identifier.
model_modelId :: Lens' Model (Maybe Text)

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
model_schema :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model, for example, "application/json".
model_contentType :: Lens' Model (Maybe Text)

-- | The name of the model. Must be alphanumeric.
model_name :: Lens' Model Text
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.Model.Model
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.Model.Model
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.Model.Model
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.Model.Model
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.Model.Model
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.Model.Model
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.Model.Model


module Network.AWS.ApiGatewayV2.Types.MutualTlsAuthentication

-- | <i>See:</i> <a>newMutualTlsAuthentication</a> smart constructor.
data MutualTlsAuthentication
MutualTlsAuthentication' :: Maybe [Text] -> Maybe Text -> Maybe Text -> MutualTlsAuthentication

-- | A list of warnings that API Gateway returns while processing your
--   truststore. Invalid certificates produce warnings. Mutual TLS is still
--   enabled, but some clients might not be able to access your API. To
--   resolve warnings, upload a new truststore to S3, and then update you
--   domain name to use the new version.
[$sel:truststoreWarnings:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe [Text]

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example, s3://bucket-name/key-name. The truststore
--   can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
[$sel:truststoreUri:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe Text

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
[$sel:truststoreVersion:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe Text

-- | Create a value of <a>MutualTlsAuthentication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreWarnings:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreWarnings</a> - A list of warnings
--   that API Gateway returns while processing your truststore. Invalid
--   certificates produce warnings. Mutual TLS is still enabled, but some
--   clients might not be able to access your API. To resolve warnings,
--   upload a new truststore to S3, and then update you domain name to use
--   the new version.
--   
--   <a>$sel:truststoreUri:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreUri</a> - An Amazon S3 URL that
--   specifies the truststore for mutual TLS authentication, for example,
--   s3://bucket-name/key-name. The truststore can contain certificates
--   from public or private certificate authorities. To update the
--   truststore, upload a new version to S3, and then update your custom
--   domain name to use the new version. To update the truststore, you must
--   have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreVersion</a> - The version of the
--   S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthentication :: MutualTlsAuthentication

-- | A list of warnings that API Gateway returns while processing your
--   truststore. Invalid certificates produce warnings. Mutual TLS is still
--   enabled, but some clients might not be able to access your API. To
--   resolve warnings, upload a new truststore to S3, and then update you
--   domain name to use the new version.
mutualTlsAuthentication_truststoreWarnings :: Lens' MutualTlsAuthentication (Maybe [Text])

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example, s3://bucket-name/key-name. The truststore
--   can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthentication_truststoreUri :: Lens' MutualTlsAuthentication (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthentication_truststoreVersion :: Lens' MutualTlsAuthentication (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.MutualTlsAuthentication.MutualTlsAuthentication
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.MutualTlsAuthentication.MutualTlsAuthentication


module Network.AWS.ApiGatewayV2.Types.MutualTlsAuthenticationInput

-- | <i>See:</i> <a>newMutualTlsAuthenticationInput</a> smart constructor.
data MutualTlsAuthenticationInput
MutualTlsAuthenticationInput' :: Maybe Text -> Maybe Text -> MutualTlsAuthenticationInput

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example, s3://bucket-name/key-name. The truststore
--   can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
[$sel:truststoreUri:MutualTlsAuthenticationInput'] :: MutualTlsAuthenticationInput -> Maybe Text

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
[$sel:truststoreVersion:MutualTlsAuthenticationInput'] :: MutualTlsAuthenticationInput -> Maybe Text

-- | Create a value of <a>MutualTlsAuthenticationInput</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreUri:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreUri</a> - An Amazon S3 URL
--   that specifies the truststore for mutual TLS authentication, for
--   example, s3://bucket-name/key-name. The truststore can contain
--   certificates from public or private certificate authorities. To update
--   the truststore, upload a new version to S3, and then update your
--   custom domain name to use the new version. To update the truststore,
--   you must have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreVersion</a> - The version of
--   the S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthenticationInput :: MutualTlsAuthenticationInput

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example, s3://bucket-name/key-name. The truststore
--   can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthenticationInput_truststoreUri :: Lens' MutualTlsAuthenticationInput (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthenticationInput_truststoreVersion :: Lens' MutualTlsAuthenticationInput (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.MutualTlsAuthenticationInput.MutualTlsAuthenticationInput


module Network.AWS.ApiGatewayV2.Types.ParameterConstraints

-- | Validation constraints imposed on parameters of a request (path, query
--   string, headers).
--   
--   <i>See:</i> <a>newParameterConstraints</a> smart constructor.
data ParameterConstraints
ParameterConstraints' :: Maybe Bool -> ParameterConstraints

-- | Whether or not the parameter is required.
[$sel:required:ParameterConstraints'] :: ParameterConstraints -> Maybe Bool

-- | Create a value of <a>ParameterConstraints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:required:ParameterConstraints'</a>,
--   <a>parameterConstraints_required</a> - Whether or not the parameter is
--   required.
newParameterConstraints :: ParameterConstraints

-- | Whether or not the parameter is required.
parameterConstraints_required :: Lens' ParameterConstraints (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.ParameterConstraints.ParameterConstraints
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.ParameterConstraints.ParameterConstraints
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.ParameterConstraints.ParameterConstraints
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.ParameterConstraints.ParameterConstraints
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.ParameterConstraints.ParameterConstraints
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.ParameterConstraints.ParameterConstraints
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.ParameterConstraints.ParameterConstraints
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.ParameterConstraints.ParameterConstraints


module Network.AWS.ApiGatewayV2.Types.PassthroughBehavior

-- | Represents passthrough behavior for an integration response. Supported
--   only for WebSocket APIs.
newtype PassthroughBehavior
PassthroughBehavior' :: Text -> PassthroughBehavior
[fromPassthroughBehavior] :: PassthroughBehavior -> Text
pattern PassthroughBehavior_NEVER :: PassthroughBehavior
pattern PassthroughBehavior_WHEN_NO_MATCH :: PassthroughBehavior
pattern PassthroughBehavior_WHEN_NO_TEMPLATES :: PassthroughBehavior
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.PassthroughBehavior.PassthroughBehavior


module Network.AWS.ApiGatewayV2.Types.ProtocolType

-- | Represents a protocol type.
newtype ProtocolType
ProtocolType' :: Text -> ProtocolType
[fromProtocolType] :: ProtocolType -> Text
pattern ProtocolType_HTTP :: ProtocolType
pattern ProtocolType_WEBSOCKET :: ProtocolType
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.ProtocolType.ProtocolType


module Network.AWS.ApiGatewayV2.Types.Api

-- | Represents an API.
--   
--   <i>See:</i> <a>newApi</a> smart constructor.
data Api
Api' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> ProtocolType -> Api

-- | The API ID.
[$sel:apiId:Api'] :: Api -> Maybe Text

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
[$sel:disableExecuteApiEndpoint:Api'] :: Api -> Maybe Bool

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
[$sel:apiEndpoint:Api'] :: Api -> Maybe Text

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
[$sel:warnings:Api'] :: Api -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:Api'] :: Api -> Maybe POSIX

-- | A version identifier for the API.
[$sel:version:Api'] :: Api -> Maybe Text

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
[$sel:apiGatewayManaged:Api'] :: Api -> Maybe Bool

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
[$sel:apiKeySelectionExpression:Api'] :: Api -> Maybe Text

-- | A CORS configuration. Supported only for HTTP APIs.
[$sel:corsConfiguration:Api'] :: Api -> Maybe Cors

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
[$sel:importInfo:Api'] :: Api -> Maybe [Text]

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
[$sel:disableSchemaValidation:Api'] :: Api -> Maybe Bool

-- | The description of the API.
[$sel:description:Api'] :: Api -> Maybe Text

-- | A collection of tags associated with the API.
[$sel:tags:Api'] :: Api -> Maybe (HashMap Text Text)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
[$sel:routeSelectionExpression:Api'] :: Api -> Text

-- | The name of the API.
[$sel:name:Api'] :: Api -> Text

-- | The API protocol.
[$sel:protocolType:Api'] :: Api -> ProtocolType

-- | Create a value of <a>Api</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:Api'</a>, <a>api_apiId</a> - The API ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:Api'</a>,
--   <a>api_disableExecuteApiEndpoint</a> - Specifies whether clients can
--   invoke your API by using the default execute-api endpoint. By default,
--   clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:Api'</a>, <a>api_apiEndpoint</a> - The URI of the
--   API, of the form {api-id}.execute-api.{region}.amazonaws.com. The
--   stage name is typically appended to this URI to form a complete path
--   to a deployed API stage.
--   
--   <a>$sel:warnings:Api'</a>, <a>api_warnings</a> - The warning messages
--   reported when failonwarnings is turned on during API import.
--   
--   <a>$sel:createdDate:Api'</a>, <a>api_createdDate</a> - The timestamp
--   when the API was created.
--   
--   <a>$sel:version:Api'</a>, <a>api_version</a> - A version identifier
--   for the API.
--   
--   <a>$sel:apiGatewayManaged:Api'</a>, <a>api_apiGatewayManaged</a> -
--   Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:Api'</a>,
--   <a>api_apiKeySelectionExpression</a> - An API key selection
--   expression. Supported only for WebSocket APIs. See <a>API Key
--   Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:Api'</a>, <a>api_corsConfiguration</a> - A
--   CORS configuration. Supported only for HTTP APIs.
--   
--   <a>$sel:importInfo:Api'</a>, <a>api_importInfo</a> - The validation
--   information during API import. This may include particular properties
--   of your OpenAPI definition which are ignored during import. Supported
--   only for HTTP APIs.
--   
--   <a>$sel:disableSchemaValidation:Api'</a>,
--   <a>api_disableSchemaValidation</a> - Avoid validating models when
--   creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:Api'</a>, <a>api_description</a> - The description
--   of the API.
--   
--   <a>$sel:tags:Api'</a>, <a>api_tags</a> - A collection of tags
--   associated with the API.
--   
--   <a>$sel:routeSelectionExpression:Api'</a>,
--   <a>api_routeSelectionExpression</a> - The route selection expression
--   for the API. For HTTP APIs, the routeSelectionExpression must be
--   ${request.method} ${request.path}. If not provided, this will be the
--   default for HTTP APIs. This property is required for WebSocket APIs.
--   
--   <a>$sel:name:Api'</a>, <a>api_name</a> - The name of the API.
--   
--   <a>$sel:protocolType:Api'</a>, <a>api_protocolType</a> - The API
--   protocol.
newApi :: Text -> Text -> ProtocolType -> Api

-- | The API ID.
api_apiId :: Lens' Api (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
api_disableExecuteApiEndpoint :: Lens' Api (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
api_apiEndpoint :: Lens' Api (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
api_warnings :: Lens' Api (Maybe [Text])

-- | The timestamp when the API was created.
api_createdDate :: Lens' Api (Maybe UTCTime)

-- | A version identifier for the API.
api_version :: Lens' Api (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
api_apiGatewayManaged :: Lens' Api (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
api_apiKeySelectionExpression :: Lens' Api (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
api_corsConfiguration :: Lens' Api (Maybe Cors)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
api_importInfo :: Lens' Api (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
api_disableSchemaValidation :: Lens' Api (Maybe Bool)

-- | The description of the API.
api_description :: Lens' Api (Maybe Text)

-- | A collection of tags associated with the API.
api_tags :: Lens' Api (Maybe (HashMap Text Text))

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
api_routeSelectionExpression :: Lens' Api Text

-- | The name of the API.
api_name :: Lens' Api Text

-- | The API protocol.
api_protocolType :: Lens' Api ProtocolType
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.Api.Api
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.Api.Api
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.Api.Api
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.Api.Api
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.Api.Api
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.Api.Api
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.Api.Api


module Network.AWS.ApiGatewayV2.Types.Route

-- | Represents a route.
--   
--   <i>See:</i> <a>newRoute</a> smart constructor.
data Route
Route' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Text -> Route

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
[$sel:authorizationScopes:Route'] :: Route -> Maybe [Text]

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
[$sel:modelSelectionExpression:Route'] :: Route -> Maybe Text

-- | The request models for the route. Supported only for WebSocket APIs.
[$sel:requestModels:Route'] :: Route -> Maybe (HashMap Text Text)

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
[$sel:routeResponseSelectionExpression:Route'] :: Route -> Maybe Text

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
[$sel:requestParameters:Route'] :: Route -> Maybe (HashMap Text ParameterConstraints)

-- | The route ID.
[$sel:routeId:Route'] :: Route -> Maybe Text

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
[$sel:authorizerId:Route'] :: Route -> Maybe Text

-- | The operation name for the route.
[$sel:operationName:Route'] :: Route -> Maybe Text

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
[$sel:apiGatewayManaged:Route'] :: Route -> Maybe Bool

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
[$sel:authorizationType:Route'] :: Route -> Maybe AuthorizationType

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
[$sel:apiKeyRequired:Route'] :: Route -> Maybe Bool

-- | The target for the route.
[$sel:target:Route'] :: Route -> Maybe Text

-- | The route key for the route.
[$sel:routeKey:Route'] :: Route -> Text

-- | Create a value of <a>Route</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:Route'</a>,
--   <a>route_authorizationScopes</a> - A list of authorization scopes
--   configured on a route. The scopes are used with a JWT authorizer to
--   authorize the method invocation. The authorization works by matching
--   the route scopes against the scopes parsed from the access token in
--   the incoming request. The method invocation is authorized if any route
--   scope matches a claimed scope in the access token. Otherwise, the
--   invocation is not authorized. When the route scope is configured, the
--   client must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:modelSelectionExpression:Route'</a>,
--   <a>route_modelSelectionExpression</a> - The model selection expression
--   for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:Route'</a>, <a>route_requestModels</a> - The
--   request models for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:Route'</a>,
--   <a>route_routeResponseSelectionExpression</a> - The route response
--   selection expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestParameters:Route'</a>, <a>route_requestParameters</a> -
--   The request parameters for the route. Supported only for WebSocket
--   APIs.
--   
--   <a>$sel:routeId:Route'</a>, <a>route_routeId</a> - The route ID.
--   
--   <a>$sel:authorizerId:Route'</a>, <a>route_authorizerId</a> - The
--   identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
--   
--   <a>$sel:operationName:Route'</a>, <a>route_operationName</a> - The
--   operation name for the route.
--   
--   <a>$sel:apiGatewayManaged:Route'</a>, <a>route_apiGatewayManaged</a> -
--   Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
--   
--   <a>$sel:authorizationType:Route'</a>, <a>route_authorizationType</a> -
--   The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:Route'</a>, <a>route_apiKeyRequired</a> -
--   Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
--   
--   <a>$sel:target:Route'</a>, <a>route_target</a> - The target for the
--   route.
--   
--   <a>$sel:routeKey:Route'</a>, <a>route_routeKey</a> - The route key for
--   the route.
newRoute :: Text -> Route

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
route_authorizationScopes :: Lens' Route (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
route_modelSelectionExpression :: Lens' Route (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
route_requestModels :: Lens' Route (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
route_routeResponseSelectionExpression :: Lens' Route (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
route_requestParameters :: Lens' Route (Maybe (HashMap Text ParameterConstraints))

-- | The route ID.
route_routeId :: Lens' Route (Maybe Text)

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
route_authorizerId :: Lens' Route (Maybe Text)

-- | The operation name for the route.
route_operationName :: Lens' Route (Maybe Text)

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
route_apiGatewayManaged :: Lens' Route (Maybe Bool)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
route_authorizationType :: Lens' Route (Maybe AuthorizationType)

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
route_apiKeyRequired :: Lens' Route (Maybe Bool)

-- | The target for the route.
route_target :: Lens' Route (Maybe Text)

-- | The route key for the route.
route_routeKey :: Lens' Route Text
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.Route.Route
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.Route.Route
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.Route.Route
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.Route.Route
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.Route.Route
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.Route.Route
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.Route.Route


module Network.AWS.ApiGatewayV2.Types.RouteResponse

-- | Represents a route response.
--   
--   <i>See:</i> <a>newRouteResponse</a> smart constructor.
data RouteResponse
RouteResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Text -> RouteResponse

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
[$sel:modelSelectionExpression:RouteResponse'] :: RouteResponse -> Maybe Text

-- | Represents the response models of a route response.
[$sel:responseModels:RouteResponse'] :: RouteResponse -> Maybe (HashMap Text Text)

-- | Represents the identifier of a route response.
[$sel:routeResponseId:RouteResponse'] :: RouteResponse -> Maybe Text

-- | Represents the response parameters of a route response.
[$sel:responseParameters:RouteResponse'] :: RouteResponse -> Maybe (HashMap Text ParameterConstraints)

-- | Represents the route response key of a route response.
[$sel:routeResponseKey:RouteResponse'] :: RouteResponse -> Text

-- | Create a value of <a>RouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:RouteResponse'</a>,
--   <a>routeResponse_modelSelectionExpression</a> - Represents the model
--   selection expression of a route response. Supported only for WebSocket
--   APIs.
--   
--   <a>$sel:responseModels:RouteResponse'</a>,
--   <a>routeResponse_responseModels</a> - Represents the response models
--   of a route response.
--   
--   <a>$sel:routeResponseId:RouteResponse'</a>,
--   <a>routeResponse_routeResponseId</a> - Represents the identifier of a
--   route response.
--   
--   <a>$sel:responseParameters:RouteResponse'</a>,
--   <a>routeResponse_responseParameters</a> - Represents the response
--   parameters of a route response.
--   
--   <a>$sel:routeResponseKey:RouteResponse'</a>,
--   <a>routeResponse_routeResponseKey</a> - Represents the route response
--   key of a route response.
newRouteResponse :: Text -> RouteResponse

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
routeResponse_modelSelectionExpression :: Lens' RouteResponse (Maybe Text)

-- | Represents the response models of a route response.
routeResponse_responseModels :: Lens' RouteResponse (Maybe (HashMap Text Text))

-- | Represents the identifier of a route response.
routeResponse_routeResponseId :: Lens' RouteResponse (Maybe Text)

-- | Represents the response parameters of a route response.
routeResponse_responseParameters :: Lens' RouteResponse (Maybe (HashMap Text ParameterConstraints))

-- | Represents the route response key of a route response.
routeResponse_routeResponseKey :: Lens' RouteResponse Text
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.RouteResponse.RouteResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.RouteResponse.RouteResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.RouteResponse.RouteResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.RouteResponse.RouteResponse
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.RouteResponse.RouteResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.RouteResponse.RouteResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.RouteResponse.RouteResponse


module Network.AWS.ApiGatewayV2.Types.RouteSettings

-- | Represents a collection of route settings.
--   
--   <i>See:</i> <a>newRouteSettings</a> smart constructor.
data RouteSettings
RouteSettings' :: Maybe Bool -> Maybe Int -> Maybe LoggingLevel -> Maybe Double -> Maybe Bool -> RouteSettings

-- | Specifies whether (true) or not (false) data trace logging is enabled
--   for this route. This property affects the log entries pushed to Amazon
--   CloudWatch Logs. Supported only for WebSocket APIs.
[$sel:dataTraceEnabled:RouteSettings'] :: RouteSettings -> Maybe Bool

-- | Specifies the throttling burst limit.
[$sel:throttlingBurstLimit:RouteSettings'] :: RouteSettings -> Maybe Int

-- | Specifies the logging level for this route: INFO, ERROR, or OFF. This
--   property affects the log entries pushed to Amazon CloudWatch Logs.
--   Supported only for WebSocket APIs.
[$sel:loggingLevel:RouteSettings'] :: RouteSettings -> Maybe LoggingLevel

-- | Specifies the throttling rate limit.
[$sel:throttlingRateLimit:RouteSettings'] :: RouteSettings -> Maybe Double

-- | Specifies whether detailed metrics are enabled.
[$sel:detailedMetricsEnabled:RouteSettings'] :: RouteSettings -> Maybe Bool

-- | Create a value of <a>RouteSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTraceEnabled:RouteSettings'</a>,
--   <a>routeSettings_dataTraceEnabled</a> - Specifies whether (true) or
--   not (false) data trace logging is enabled for this route. This
--   property affects the log entries pushed to Amazon CloudWatch Logs.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:throttlingBurstLimit:RouteSettings'</a>,
--   <a>routeSettings_throttlingBurstLimit</a> - Specifies the throttling
--   burst limit.
--   
--   <a>$sel:loggingLevel:RouteSettings'</a>,
--   <a>routeSettings_loggingLevel</a> - Specifies the logging level for
--   this route: INFO, ERROR, or OFF. This property affects the log entries
--   pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs.
--   
--   <a>$sel:throttlingRateLimit:RouteSettings'</a>,
--   <a>routeSettings_throttlingRateLimit</a> - Specifies the throttling
--   rate limit.
--   
--   <a>$sel:detailedMetricsEnabled:RouteSettings'</a>,
--   <a>routeSettings_detailedMetricsEnabled</a> - Specifies whether
--   detailed metrics are enabled.
newRouteSettings :: RouteSettings

-- | Specifies whether (true) or not (false) data trace logging is enabled
--   for this route. This property affects the log entries pushed to Amazon
--   CloudWatch Logs. Supported only for WebSocket APIs.
routeSettings_dataTraceEnabled :: Lens' RouteSettings (Maybe Bool)

-- | Specifies the throttling burst limit.
routeSettings_throttlingBurstLimit :: Lens' RouteSettings (Maybe Int)

-- | Specifies the logging level for this route: INFO, ERROR, or OFF. This
--   property affects the log entries pushed to Amazon CloudWatch Logs.
--   Supported only for WebSocket APIs.
routeSettings_loggingLevel :: Lens' RouteSettings (Maybe LoggingLevel)

-- | Specifies the throttling rate limit.
routeSettings_throttlingRateLimit :: Lens' RouteSettings (Maybe Double)

-- | Specifies whether detailed metrics are enabled.
routeSettings_detailedMetricsEnabled :: Lens' RouteSettings (Maybe Bool)
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.RouteSettings.RouteSettings
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.RouteSettings.RouteSettings
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.RouteSettings.RouteSettings
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.RouteSettings.RouteSettings
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.RouteSettings.RouteSettings
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.RouteSettings.RouteSettings
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.RouteSettings.RouteSettings
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.RouteSettings.RouteSettings


module Network.AWS.ApiGatewayV2.Types.SecurityPolicy

-- | The Transport Layer Security (TLS) version of the security policy for
--   this domain name. The valid values are TLS_1_0 and TLS_1_2.
newtype SecurityPolicy
SecurityPolicy' :: Text -> SecurityPolicy
[fromSecurityPolicy] :: SecurityPolicy -> Text
pattern SecurityPolicy_TLS_1_0 :: SecurityPolicy
pattern SecurityPolicy_TLS_1_2 :: SecurityPolicy
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.SecurityPolicy.SecurityPolicy


module Network.AWS.ApiGatewayV2.Types.DomainNameConfiguration

-- | The domain name configuration.
--   
--   <i>See:</i> <a>newDomainNameConfiguration</a> smart constructor.
data DomainNameConfiguration
DomainNameConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe EndpointType -> Maybe SecurityPolicy -> Maybe POSIX -> Maybe Text -> Maybe DomainNameStatus -> DomainNameConfiguration

-- | A domain name for the API.
[$sel:apiGatewayDomainName:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn
[$sel:ownershipVerificationCertificateArn:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | The user-friendly name of the certificate that will be used by the
--   edge-optimized endpoint for this domain name.
[$sel:certificateName:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | The Amazon Route 53 Hosted Zone ID of the endpoint.
[$sel:hostedZoneId:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | An AWS-managed certificate that will be used by the edge-optimized
--   endpoint for this domain name. AWS Certificate Manager is the only
--   supported source.
[$sel:certificateArn:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | The endpoint type.
[$sel:endpointType:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe EndpointType

-- | The Transport Layer Security (TLS) version of the security policy for
--   this domain name. The valid values are TLS_1_0 and TLS_1_2.
[$sel:securityPolicy:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe SecurityPolicy

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
[$sel:certificateUploadDate:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe POSIX

-- | An optional text message containing detailed information about status
--   of the domain name migration.
[$sel:domainNameStatusMessage:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | The status of the domain name migration. The valid values are
--   AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and
--   PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain
--   cannot be modified further until the existing operation is complete.
--   If it is AVAILABLE, the domain can be updated.
[$sel:domainNameStatus:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe DomainNameStatus

-- | Create a value of <a>DomainNameConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiGatewayDomainName:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_apiGatewayDomainName</a> - A domain name
--   for the API.
--   
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_ownershipVerificationCertificateArn</a> -
--   The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn
--   
--   <a>$sel:certificateName:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_certificateName</a> - The user-friendly
--   name of the certificate that will be used by the edge-optimized
--   endpoint for this domain name.
--   
--   <a>$sel:hostedZoneId:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_hostedZoneId</a> - The Amazon Route 53
--   Hosted Zone ID of the endpoint.
--   
--   <a>$sel:certificateArn:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_certificateArn</a> - An AWS-managed
--   certificate that will be used by the edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:endpointType:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_endpointType</a> - The endpoint type.
--   
--   <a>$sel:securityPolicy:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_securityPolicy</a> - The Transport Layer
--   Security (TLS) version of the security policy for this domain name.
--   The valid values are TLS_1_0 and TLS_1_2.
--   
--   <a>$sel:certificateUploadDate:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_certificateUploadDate</a> - The timestamp
--   when the certificate that was used by edge-optimized endpoint for this
--   domain name was uploaded.
--   
--   <a>$sel:domainNameStatusMessage:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_domainNameStatusMessage</a> - An optional
--   text message containing detailed information about status of the
--   domain name migration.
--   
--   <a>$sel:domainNameStatus:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_domainNameStatus</a> - The status of the
--   domain name migration. The valid values are AVAILABLE, UPDATING,
--   PENDING_CERTIFICATE_REIMPORT, and PENDING_OWNERSHIP_VERIFICATION. If
--   the status is UPDATING, the domain cannot be modified further until
--   the existing operation is complete. If it is AVAILABLE, the domain can
--   be updated.
newDomainNameConfiguration :: DomainNameConfiguration

-- | A domain name for the API.
domainNameConfiguration_apiGatewayDomainName :: Lens' DomainNameConfiguration (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn
domainNameConfiguration_ownershipVerificationCertificateArn :: Lens' DomainNameConfiguration (Maybe Text)

-- | The user-friendly name of the certificate that will be used by the
--   edge-optimized endpoint for this domain name.
domainNameConfiguration_certificateName :: Lens' DomainNameConfiguration (Maybe Text)

-- | The Amazon Route 53 Hosted Zone ID of the endpoint.
domainNameConfiguration_hostedZoneId :: Lens' DomainNameConfiguration (Maybe Text)

-- | An AWS-managed certificate that will be used by the edge-optimized
--   endpoint for this domain name. AWS Certificate Manager is the only
--   supported source.
domainNameConfiguration_certificateArn :: Lens' DomainNameConfiguration (Maybe Text)

-- | The endpoint type.
domainNameConfiguration_endpointType :: Lens' DomainNameConfiguration (Maybe EndpointType)

-- | The Transport Layer Security (TLS) version of the security policy for
--   this domain name. The valid values are TLS_1_0 and TLS_1_2.
domainNameConfiguration_securityPolicy :: Lens' DomainNameConfiguration (Maybe SecurityPolicy)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainNameConfiguration_certificateUploadDate :: Lens' DomainNameConfiguration (Maybe UTCTime)

-- | An optional text message containing detailed information about status
--   of the domain name migration.
domainNameConfiguration_domainNameStatusMessage :: Lens' DomainNameConfiguration (Maybe Text)

-- | The status of the domain name migration. The valid values are
--   AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and
--   PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain
--   cannot be modified further until the existing operation is complete.
--   If it is AVAILABLE, the domain can be updated.
domainNameConfiguration_domainNameStatus :: Lens' DomainNameConfiguration (Maybe DomainNameStatus)
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.DomainNameConfiguration.DomainNameConfiguration
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.DomainNameConfiguration.DomainNameConfiguration
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.DomainNameConfiguration.DomainNameConfiguration
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.DomainNameConfiguration.DomainNameConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.DomainNameConfiguration.DomainNameConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.DomainNameConfiguration.DomainNameConfiguration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.DomainNameConfiguration.DomainNameConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.DomainNameConfiguration.DomainNameConfiguration


module Network.AWS.ApiGatewayV2.Types.DomainName

-- | Represents a domain name.
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe [DomainNameConfiguration] -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> DomainName

-- | The domain name configurations.
[$sel:domainNameConfigurations:DomainName'] :: DomainName -> Maybe [DomainNameConfiguration]

-- | The mutual TLS authentication configuration for a custom domain name.
[$sel:mutualTlsAuthentication:DomainName'] :: DomainName -> Maybe MutualTlsAuthentication

-- | The API mapping selection expression.
[$sel:apiMappingSelectionExpression:DomainName'] :: DomainName -> Maybe Text

-- | The collection of tags associated with a domain name.
[$sel:tags:DomainName'] :: DomainName -> Maybe (HashMap Text Text)

-- | The name of the DomainName resource.
[$sel:domainName:DomainName'] :: DomainName -> Text

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:DomainName'</a>,
--   <a>domainName_domainNameConfigurations</a> - The domain name
--   configurations.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name.
--   
--   <a>$sel:apiMappingSelectionExpression:DomainName'</a>,
--   <a>domainName_apiMappingSelectionExpression</a> - The API mapping
--   selection expression.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags associated with a domain name.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   name of the DomainName resource.
newDomainName :: Text -> DomainName

-- | The domain name configurations.
domainName_domainNameConfigurations :: Lens' DomainName (Maybe [DomainNameConfiguration])

-- | The mutual TLS authentication configuration for a custom domain name.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The API mapping selection expression.
domainName_apiMappingSelectionExpression :: Lens' DomainName (Maybe Text)

-- | The collection of tags associated with a domain name.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))

-- | The name of the DomainName resource.
domainName_domainName :: Lens' DomainName Text
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.DomainName.DomainName
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.DomainName.DomainName
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.DomainName.DomainName
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.DomainName.DomainName
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.DomainName.DomainName
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.DomainName.DomainName
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.DomainName.DomainName


module Network.AWS.ApiGatewayV2.Types.Stage

-- | Represents an API stage.
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe POSIX -> Maybe RouteSettings -> Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Stage

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
[$sel:lastDeploymentStatusMessage:Stage'] :: Stage -> Maybe Text

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
[$sel:deploymentId:Stage'] :: Stage -> Maybe Text

-- | Route settings for the stage, by routeKey.
[$sel:routeSettings:Stage'] :: Stage -> Maybe (HashMap Text RouteSettings)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:Stage'] :: Stage -> Maybe AccessLogSettings

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
[$sel:clientCertificateId:Stage'] :: Stage -> Maybe Text

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
[$sel:stageVariables:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
[$sel:autoDeploy:Stage'] :: Stage -> Maybe Bool

-- | The timestamp when the stage was created.
[$sel:createdDate:Stage'] :: Stage -> Maybe POSIX

-- | Default route settings for the stage.
[$sel:defaultRouteSettings:Stage'] :: Stage -> Maybe RouteSettings

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
[$sel:apiGatewayManaged:Stage'] :: Stage -> Maybe Bool

-- | The timestamp when the stage was last updated.
[$sel:lastUpdatedDate:Stage'] :: Stage -> Maybe POSIX

-- | The description of the stage.
[$sel:description:Stage'] :: Stage -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | The name of the stage.
[$sel:stageName:Stage'] :: Stage -> Text

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentStatusMessage:Stage'</a>,
--   <a>stage_lastDeploymentStatusMessage</a> - Describes the status of the
--   last deployment of a stage. Supported only for stages with autoDeploy
--   enabled.
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the Stage is associated with. Can't
--   be updated if autoDeploy is enabled.
--   
--   <a>$sel:routeSettings:Stage'</a>, <a>stage_routeSettings</a> - Route
--   settings for the stage, by routeKey.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for a Stage. Supported only for WebSocket APIs.
--   
--   <a>$sel:stageVariables:Stage'</a>, <a>stage_stageVariables</a> - A map
--   that defines the stage variables for a stage resource. Variable names
--   can have alphanumeric and underscore characters, and the values must
--   match [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:Stage'</a>, <a>stage_autoDeploy</a> - Specifies
--   whether updates to an API automatically trigger a new deployment. The
--   default value is false.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:defaultRouteSettings:Stage'</a>,
--   <a>stage_defaultRouteSettings</a> - Default route settings for the
--   stage.
--   
--   <a>$sel:apiGatewayManaged:Stage'</a>, <a>stage_apiGatewayManaged</a> -
--   Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage was last updated.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The
--   description of the stage.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage.
newStage :: Text -> Stage

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
stage_lastDeploymentStatusMessage :: Lens' Stage (Maybe Text)

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | Route settings for the stage, by routeKey.
stage_routeSettings :: Lens' Stage (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
stage_stageVariables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
stage_autoDeploy :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | Default route settings for the stage.
stage_defaultRouteSettings :: Lens' Stage (Maybe RouteSettings)

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
stage_apiGatewayManaged :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The description of the stage.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))

-- | The name of the stage.
stage_stageName :: Lens' Stage Text
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.Stage.Stage
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.Stage.Stage
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.Stage.Stage
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.Stage.Stage
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.Stage.Stage
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.Stage.Stage
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.Stage.Stage


module Network.AWS.ApiGatewayV2.Types.TlsConfig

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
--   
--   <i>See:</i> <a>newTlsConfig</a> smart constructor.
data TlsConfig
TlsConfig' :: Maybe Text -> TlsConfig

-- | If you specify a server name, API Gateway uses it to verify the
--   hostname on the integration's certificate. The server name is also
--   included in the TLS handshake to support Server Name Indication (SNI)
--   or virtual hosting.
[$sel:serverNameToVerify:TlsConfig'] :: TlsConfig -> Maybe Text

-- | Create a value of <a>TlsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverNameToVerify:TlsConfig'</a>,
--   <a>tlsConfig_serverNameToVerify</a> - If you specify a server name,
--   API Gateway uses it to verify the hostname on the integration's
--   certificate. The server name is also included in the TLS handshake to
--   support Server Name Indication (SNI) or virtual hosting.
newTlsConfig :: TlsConfig

-- | If you specify a server name, API Gateway uses it to verify the
--   hostname on the integration's certificate. The server name is also
--   included in the TLS handshake to support Server Name Indication (SNI)
--   or virtual hosting.
tlsConfig_serverNameToVerify :: Lens' TlsConfig (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.TlsConfig.TlsConfig
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.TlsConfig.TlsConfig
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.TlsConfig.TlsConfig
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.TlsConfig.TlsConfig
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.TlsConfig.TlsConfig
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.TlsConfig.TlsConfig
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.TlsConfig.TlsConfig


module Network.AWS.ApiGatewayV2.Types.Integration

-- | Represents an integration.
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfig -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Bool -> Maybe ContentHandlingStrategy -> Maybe IntegrationType -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Integration

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
[$sel:integrationResponseSelectionExpression:Integration'] :: Integration -> Maybe Text

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
[$sel:requestTemplates:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
[$sel:integrationSubtype:Integration'] :: Integration -> Maybe Text

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentialsArn:Integration'] :: Integration -> Maybe Text

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
[$sel:integrationUri:Integration'] :: Integration -> Maybe Text

-- | Represents the identifier of an integration.
[$sel:integrationId:Integration'] :: Integration -> Maybe Text

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
[$sel:requestParameters:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
[$sel:connectionId:Integration'] :: Integration -> Maybe Text

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
[$sel:passthroughBehavior:Integration'] :: Integration -> Maybe PassthroughBehavior

-- | Specifies the integration's HTTP method type.
[$sel:integrationMethod:Integration'] :: Integration -> Maybe Text

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
[$sel:tlsConfig:Integration'] :: Integration -> Maybe TlsConfig

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
[$sel:payloadFormatVersion:Integration'] :: Integration -> Maybe Text

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
[$sel:templateSelectionExpression:Integration'] :: Integration -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
[$sel:timeoutInMillis:Integration'] :: Integration -> Maybe Natural

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
[$sel:apiGatewayManaged:Integration'] :: Integration -> Maybe Bool

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:Integration'] :: Integration -> Maybe ContentHandlingStrategy

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
[$sel:integrationType:Integration'] :: Integration -> Maybe IntegrationType

-- | Represents the description of an integration.
[$sel:description:Integration'] :: Integration -> Maybe Text

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
[$sel:connectionType:Integration'] :: Integration -> Maybe ConnectionType

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
[$sel:responseParameters:Integration'] :: Integration -> Maybe (HashMap Text (HashMap Text Text))

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseSelectionExpression:Integration'</a>,
--   <a>integration_integrationResponseSelectionExpression</a> - The
--   integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:Integration'</a>,
--   <a>integration_integrationSubtype</a> - Supported only for HTTP API
--   AWS_PROXY integrations. Specifies the AWS service action to invoke. To
--   learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:Integration'</a>,
--   <a>integration_credentialsArn</a> - Specifies the credentials required
--   for the integration, if any. For AWS integrations, three options are
--   available. To specify an IAM Role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To require that the caller's
--   identity be passed through from the request, specify the string
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, specify null.
--   
--   <a>$sel:integrationUri:Integration'</a>,
--   <a>integration_integrationUri</a> - For a Lambda integration, specify
--   the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:integrationId:Integration'</a>,
--   <a>integration_integrationId</a> - Represents the identifier of an
--   integration.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - For WebSocket APIs, a key-value
--   map specifying request parameters that are passed from the method
--   request to the backend. The key is an integration request parameter
--   name and the associated value is a method request parameter value or
--   static value that must be enclosed within single quotes and
--   pre-encoded as required by the backend. The method request parameter
--   value must match the pattern of method.request.{location}.{name} ,
--   where {location} is querystring, path, or header; and {name} must be a
--   valid and unique method request parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies the pass-through
--   behavior for incoming requests based on the Content-Type header in the
--   request, and the available mapping templates specified as the
--   requestTemplates property on the Integration resource. There are three
--   valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported
--   only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:Integration'</a>,
--   <a>integration_integrationMethod</a> - Specifies the integration's
--   HTTP method type.
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> - The
--   TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:payloadFormatVersion:Integration'</a>,
--   <a>integration_payloadFormatVersion</a> - Specifies the format of the
--   payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:Integration'</a>,
--   <a>integration_templateSelectionExpression</a> - The template
--   selection expression for the integration. Supported only for WebSocket
--   APIs.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds for WebSocket APIs and between 50 and 30,000
--   milliseconds for HTTP APIs. The default timeout is 29 seconds for
--   WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:apiGatewayManaged:Integration'</a>,
--   <a>integration_apiGatewayManaged</a> - Specifies whether an
--   integration is managed by API Gateway. If you created an API using
--   using quick create, the resulting integration is managed by API
--   Gateway. You can update a managed integration, but you can't delete
--   it.
--   
--   <a>$sel:contentHandlingStrategy:Integration'</a>,
--   <a>integration_contentHandlingStrategy</a> - Supported only for
--   WebSocket APIs. Specifies how to handle response payload content type
--   conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:integrationType:Integration'</a>,
--   <a>integration_integrationType</a> - The integration type of an
--   integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:description:Integration'</a>, <a>integration_description</a> -
--   Represents the description of an integration.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. Specify INTERNET for connections through
--   the public routable internet or VPC_LINK for private connections
--   between API Gateway and resources in a VPC. The default value is
--   INTERNET.
--   
--   <a>$sel:responseParameters:Integration'</a>,
--   <a>integration_responseParameters</a> - Supported only for HTTP APIs.
--   You use response parameters to transform the HTTP response from a
--   backend integration before returning the response to clients. Specify
--   a key-value map from a selection key to response parameters. The
--   selection key must be a valid HTTP status code within the range of
--   200-599. Response parameters are a key-value map. The key must match
--   pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
newIntegration :: Integration

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
integration_integrationResponseSelectionExpression :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
integration_integrationSubtype :: Lens' Integration (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentialsArn :: Lens' Integration (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
integration_integrationUri :: Lens' Integration (Maybe Text)

-- | Represents the identifier of an integration.
integration_integrationId :: Lens' Integration (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
integration_passthroughBehavior :: Lens' Integration (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
integration_integrationMethod :: Lens' Integration (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
integration_payloadFormatVersion :: Lens' Integration (Maybe Text)

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
integration_templateSelectionExpression :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
integration_timeoutInMillis :: Lens' Integration (Maybe Natural)

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
integration_apiGatewayManaged :: Lens' Integration (Maybe Bool)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
integration_contentHandlingStrategy :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
integration_integrationType :: Lens' Integration (Maybe IntegrationType)

-- | Represents the description of an integration.
integration_description :: Lens' Integration (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
integration_responseParameters :: Lens' Integration (Maybe (HashMap Text (HashMap Text Text)))
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.Integration.Integration
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.Integration.Integration
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.Integration.Integration
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.Integration.Integration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.Integration.Integration
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.Integration.Integration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.Integration.Integration


module Network.AWS.ApiGatewayV2.Types.TlsConfigInput

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
--   
--   <i>See:</i> <a>newTlsConfigInput</a> smart constructor.
data TlsConfigInput
TlsConfigInput' :: Maybe Text -> TlsConfigInput

-- | If you specify a server name, API Gateway uses it to verify the
--   hostname on the integration's certificate. The server name is also
--   included in the TLS handshake to support Server Name Indication (SNI)
--   or virtual hosting.
[$sel:serverNameToVerify:TlsConfigInput'] :: TlsConfigInput -> Maybe Text

-- | Create a value of <a>TlsConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverNameToVerify:TlsConfigInput'</a>,
--   <a>tlsConfigInput_serverNameToVerify</a> - If you specify a server
--   name, API Gateway uses it to verify the hostname on the integration's
--   certificate. The server name is also included in the TLS handshake to
--   support Server Name Indication (SNI) or virtual hosting.
newTlsConfigInput :: TlsConfigInput

-- | If you specify a server name, API Gateway uses it to verify the
--   hostname on the integration's certificate. The server name is also
--   included in the TLS handshake to support Server Name Indication (SNI)
--   or virtual hosting.
tlsConfigInput_serverNameToVerify :: Lens' TlsConfigInput (Maybe Text)
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.TlsConfigInput.TlsConfigInput
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.TlsConfigInput.TlsConfigInput
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.TlsConfigInput.TlsConfigInput
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.TlsConfigInput.TlsConfigInput
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.TlsConfigInput.TlsConfigInput
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.TlsConfigInput.TlsConfigInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.TlsConfigInput.TlsConfigInput


module Network.AWS.ApiGatewayV2.Types.VpcLinkStatus

-- | The status of the VPC link.
newtype VpcLinkStatus
VpcLinkStatus' :: Text -> VpcLinkStatus
[fromVpcLinkStatus] :: VpcLinkStatus -> Text
pattern VpcLinkStatus_AVAILABLE :: VpcLinkStatus
pattern VpcLinkStatus_DELETING :: VpcLinkStatus
pattern VpcLinkStatus_FAILED :: VpcLinkStatus
pattern VpcLinkStatus_INACTIVE :: VpcLinkStatus
pattern VpcLinkStatus_PENDING :: VpcLinkStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.VpcLinkStatus.VpcLinkStatus


module Network.AWS.ApiGatewayV2.Types.VpcLinkVersion

-- | The version of the VPC link.
newtype VpcLinkVersion
VpcLinkVersion' :: Text -> VpcLinkVersion
[fromVpcLinkVersion] :: VpcLinkVersion -> Text
pattern VpcLinkVersion_V2 :: VpcLinkVersion
instance Network.AWS.Data.XML.ToXML Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Network.AWS.Data.XML.FromXML Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Network.AWS.Data.Headers.ToHeader Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Network.AWS.Data.Log.ToLog Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Network.AWS.Data.Text.ToText Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Network.AWS.Data.Text.FromText Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance GHC.Classes.Ord Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.VpcLinkVersion.VpcLinkVersion


module Network.AWS.ApiGatewayV2.Types.VpcLink

-- | Represents a VPC link.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe POSIX -> Maybe VpcLinkVersion -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe VpcLinkStatus -> Text -> [Text] -> [Text] -> Text -> VpcLink

-- | The timestamp when the VPC link was created.
[$sel:createdDate:VpcLink'] :: VpcLink -> Maybe POSIX

-- | The version of the VPC link.
[$sel:vpcLinkVersion:VpcLink'] :: VpcLink -> Maybe VpcLinkVersion

-- | A message summarizing the cause of the status of the VPC link.
[$sel:vpcLinkStatusMessage:VpcLink'] :: VpcLink -> Maybe Text

-- | Tags for the VPC link.
[$sel:tags:VpcLink'] :: VpcLink -> Maybe (HashMap Text Text)

-- | The status of the VPC link.
[$sel:vpcLinkStatus:VpcLink'] :: VpcLink -> Maybe VpcLinkStatus

-- | The ID of the VPC link.
[$sel:vpcLinkId:VpcLink'] :: VpcLink -> Text

-- | A list of security group IDs for the VPC link.
[$sel:securityGroupIds:VpcLink'] :: VpcLink -> [Text]

-- | A list of subnet IDs to include in the VPC link.
[$sel:subnetIds:VpcLink'] :: VpcLink -> [Text]

-- | The name of the VPC link.
[$sel:name:VpcLink'] :: VpcLink -> Text

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:VpcLink'</a>, <a>vpcLink_createdDate</a> - The
--   timestamp when the VPC link was created.
--   
--   <a>$sel:vpcLinkVersion:VpcLink'</a>, <a>vpcLink_vpcLinkVersion</a> -
--   The version of the VPC link.
--   
--   <a>$sel:vpcLinkStatusMessage:VpcLink'</a>,
--   <a>vpcLink_vpcLinkStatusMessage</a> - A message summarizing the cause
--   of the status of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - Tags for the VPC
--   link.
--   
--   <a>$sel:vpcLinkStatus:VpcLink'</a>, <a>vpcLink_vpcLinkStatus</a> - The
--   status of the VPC link.
--   
--   <a>$sel:vpcLinkId:VpcLink'</a>, <a>vpcLink_vpcLinkId</a> - The ID of
--   the VPC link.
--   
--   <a>$sel:securityGroupIds:VpcLink'</a>, <a>vpcLink_securityGroupIds</a>
--   - A list of security group IDs for the VPC link.
--   
--   <a>$sel:subnetIds:VpcLink'</a>, <a>vpcLink_subnetIds</a> - A list of
--   subnet IDs to include in the VPC link.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name of the VPC
--   link.
newVpcLink :: Text -> Text -> VpcLink

-- | The timestamp when the VPC link was created.
vpcLink_createdDate :: Lens' VpcLink (Maybe UTCTime)

-- | The version of the VPC link.
vpcLink_vpcLinkVersion :: Lens' VpcLink (Maybe VpcLinkVersion)

-- | A message summarizing the cause of the status of the VPC link.
vpcLink_vpcLinkStatusMessage :: Lens' VpcLink (Maybe Text)

-- | Tags for the VPC link.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))

-- | The status of the VPC link.
vpcLink_vpcLinkStatus :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ID of the VPC link.
vpcLink_vpcLinkId :: Lens' VpcLink Text

-- | A list of security group IDs for the VPC link.
vpcLink_securityGroupIds :: Lens' VpcLink [Text]

-- | A list of subnet IDs to include in the VPC link.
vpcLink_subnetIds :: Lens' VpcLink [Text]

-- | The name of the VPC link.
vpcLink_name :: Lens' VpcLink Text
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.Types.VpcLink.VpcLink
instance GHC.Show.Show Network.AWS.ApiGatewayV2.Types.VpcLink.VpcLink
instance GHC.Read.Read Network.AWS.ApiGatewayV2.Types.VpcLink.VpcLink
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.Types.VpcLink.VpcLink
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.ApiGatewayV2.Types.VpcLink.VpcLink
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.Types.VpcLink.VpcLink
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.Types.VpcLink.VpcLink


module Network.AWS.ApiGatewayV2.Types

-- | API version <tt>2018-11-29</tt> of the Amazon ApiGatewayV2 SDK
--   configuration.
defaultService :: Service

-- | Prism for AccessDeniedException' errors.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause a conflict with the current state
--   of a service resource associated with the request. Resolve the
--   conflict before retrying this request. See the accompanying error
--   message for details.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource specified in the request was not found. See the message
--   field for more information.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A limit has been exceeded. See the accompanying error message for
--   details.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is not valid, for example, the input is incomplete or
--   incorrect. See the accompanying error message for details.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The authorization type. For WebSocket APIs, valid values are NONE for
--   open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for
--   using a Lambda authorizer. For HTTP APIs, valid values are NONE for
--   open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM
--   permissions, and CUSTOM for using a Lambda authorizer.
newtype AuthorizationType
AuthorizationType' :: Text -> AuthorizationType
[fromAuthorizationType] :: AuthorizationType -> Text
pattern AuthorizationType_AWS_IAM :: AuthorizationType
pattern AuthorizationType_CUSTOM :: AuthorizationType
pattern AuthorizationType_JWT :: AuthorizationType
pattern AuthorizationType_NONE :: AuthorizationType

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
newtype AuthorizerType
AuthorizerType' :: Text -> AuthorizerType
[fromAuthorizerType] :: AuthorizerType -> Text
pattern AuthorizerType_JWT :: AuthorizerType
pattern AuthorizerType_REQUEST :: AuthorizerType

-- | Represents a connection type.
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_INTERNET :: ConnectionType
pattern ConnectionType_VPC_LINK :: ConnectionType

-- | Specifies how to handle response payload content type conversions.
--   Supported only for WebSocket APIs.
newtype ContentHandlingStrategy
ContentHandlingStrategy' :: Text -> ContentHandlingStrategy
[fromContentHandlingStrategy] :: ContentHandlingStrategy -> Text
pattern ContentHandlingStrategy_CONVERT_TO_BINARY :: ContentHandlingStrategy
pattern ContentHandlingStrategy_CONVERT_TO_TEXT :: ContentHandlingStrategy

-- | Represents a deployment status.
newtype DeploymentStatus
DeploymentStatus' :: Text -> DeploymentStatus
[fromDeploymentStatus] :: DeploymentStatus -> Text
pattern DeploymentStatus_DEPLOYED :: DeploymentStatus
pattern DeploymentStatus_FAILED :: DeploymentStatus
pattern DeploymentStatus_PENDING :: DeploymentStatus

-- | The status of the domain name migration. The valid values are
--   AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and
--   PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain
--   cannot be modified further until the existing operation is complete.
--   If it is AVAILABLE, the domain can be updated.
newtype DomainNameStatus
DomainNameStatus' :: Text -> DomainNameStatus
[fromDomainNameStatus] :: DomainNameStatus -> Text
pattern DomainNameStatus_AVAILABLE :: DomainNameStatus
pattern DomainNameStatus_PENDING_CERTIFICATE_REIMPORT :: DomainNameStatus
pattern DomainNameStatus_PENDING_OWNERSHIP_VERIFICATION :: DomainNameStatus
pattern DomainNameStatus_UPDATING :: DomainNameStatus

-- | Represents an endpoint type.
newtype EndpointType
EndpointType' :: Text -> EndpointType
[fromEndpointType] :: EndpointType -> Text
pattern EndpointType_EDGE :: EndpointType
pattern EndpointType_REGIONAL :: EndpointType

-- | Represents an API method integration type.
newtype IntegrationType
IntegrationType' :: Text -> IntegrationType
[fromIntegrationType] :: IntegrationType -> Text
pattern IntegrationType_AWS :: IntegrationType
pattern IntegrationType_AWS_PROXY :: IntegrationType
pattern IntegrationType_HTTP :: IntegrationType
pattern IntegrationType_HTTP_PROXY :: IntegrationType
pattern IntegrationType_MOCK :: IntegrationType

-- | The logging level.
newtype LoggingLevel
LoggingLevel' :: Text -> LoggingLevel
[fromLoggingLevel] :: LoggingLevel -> Text
pattern LoggingLevel_ERROR :: LoggingLevel
pattern LoggingLevel_INFO :: LoggingLevel
pattern LoggingLevel_OFF :: LoggingLevel

-- | Represents passthrough behavior for an integration response. Supported
--   only for WebSocket APIs.
newtype PassthroughBehavior
PassthroughBehavior' :: Text -> PassthroughBehavior
[fromPassthroughBehavior] :: PassthroughBehavior -> Text
pattern PassthroughBehavior_NEVER :: PassthroughBehavior
pattern PassthroughBehavior_WHEN_NO_MATCH :: PassthroughBehavior
pattern PassthroughBehavior_WHEN_NO_TEMPLATES :: PassthroughBehavior

-- | Represents a protocol type.
newtype ProtocolType
ProtocolType' :: Text -> ProtocolType
[fromProtocolType] :: ProtocolType -> Text
pattern ProtocolType_HTTP :: ProtocolType
pattern ProtocolType_WEBSOCKET :: ProtocolType

-- | The Transport Layer Security (TLS) version of the security policy for
--   this domain name. The valid values are TLS_1_0 and TLS_1_2.
newtype SecurityPolicy
SecurityPolicy' :: Text -> SecurityPolicy
[fromSecurityPolicy] :: SecurityPolicy -> Text
pattern SecurityPolicy_TLS_1_0 :: SecurityPolicy
pattern SecurityPolicy_TLS_1_2 :: SecurityPolicy

-- | The status of the VPC link.
newtype VpcLinkStatus
VpcLinkStatus' :: Text -> VpcLinkStatus
[fromVpcLinkStatus] :: VpcLinkStatus -> Text
pattern VpcLinkStatus_AVAILABLE :: VpcLinkStatus
pattern VpcLinkStatus_DELETING :: VpcLinkStatus
pattern VpcLinkStatus_FAILED :: VpcLinkStatus
pattern VpcLinkStatus_INACTIVE :: VpcLinkStatus
pattern VpcLinkStatus_PENDING :: VpcLinkStatus

-- | The version of the VPC link.
newtype VpcLinkVersion
VpcLinkVersion' :: Text -> VpcLinkVersion
[fromVpcLinkVersion] :: VpcLinkVersion -> Text
pattern VpcLinkVersion_V2 :: VpcLinkVersion

-- | Settings for logging access in a stage.
--   
--   <i>See:</i> <a>newAccessLogSettings</a> smart constructor.
data AccessLogSettings
AccessLogSettings' :: Maybe Text -> Maybe Text -> AccessLogSettings

-- | A single line format of the access logs of data, as specified by
--   selected $context variables. The format must include at least
--   $context.requestId.
[$sel:format:AccessLogSettings'] :: AccessLogSettings -> Maybe Text

-- | The ARN of the CloudWatch Logs log group to receive access logs.
[$sel:destinationArn:AccessLogSettings'] :: AccessLogSettings -> Maybe Text

-- | Create a value of <a>AccessLogSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:AccessLogSettings'</a>, <a>accessLogSettings_format</a>
--   - A single line format of the access logs of data, as specified by
--   selected $context variables. The format must include at least
--   $context.requestId.
--   
--   <a>$sel:destinationArn:AccessLogSettings'</a>,
--   <a>accessLogSettings_destinationArn</a> - The ARN of the CloudWatch
--   Logs log group to receive access logs.
newAccessLogSettings :: AccessLogSettings

-- | A single line format of the access logs of data, as specified by
--   selected $context variables. The format must include at least
--   $context.requestId.
accessLogSettings_format :: Lens' AccessLogSettings (Maybe Text)

-- | The ARN of the CloudWatch Logs log group to receive access logs.
accessLogSettings_destinationArn :: Lens' AccessLogSettings (Maybe Text)

-- | Represents an API.
--   
--   <i>See:</i> <a>newApi</a> smart constructor.
data Api
Api' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> ProtocolType -> Api

-- | The API ID.
[$sel:apiId:Api'] :: Api -> Maybe Text

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
[$sel:disableExecuteApiEndpoint:Api'] :: Api -> Maybe Bool

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
[$sel:apiEndpoint:Api'] :: Api -> Maybe Text

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
[$sel:warnings:Api'] :: Api -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:Api'] :: Api -> Maybe POSIX

-- | A version identifier for the API.
[$sel:version:Api'] :: Api -> Maybe Text

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
[$sel:apiGatewayManaged:Api'] :: Api -> Maybe Bool

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
[$sel:apiKeySelectionExpression:Api'] :: Api -> Maybe Text

-- | A CORS configuration. Supported only for HTTP APIs.
[$sel:corsConfiguration:Api'] :: Api -> Maybe Cors

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
[$sel:importInfo:Api'] :: Api -> Maybe [Text]

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
[$sel:disableSchemaValidation:Api'] :: Api -> Maybe Bool

-- | The description of the API.
[$sel:description:Api'] :: Api -> Maybe Text

-- | A collection of tags associated with the API.
[$sel:tags:Api'] :: Api -> Maybe (HashMap Text Text)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
[$sel:routeSelectionExpression:Api'] :: Api -> Text

-- | The name of the API.
[$sel:name:Api'] :: Api -> Text

-- | The API protocol.
[$sel:protocolType:Api'] :: Api -> ProtocolType

-- | Create a value of <a>Api</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:Api'</a>, <a>api_apiId</a> - The API ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:Api'</a>,
--   <a>api_disableExecuteApiEndpoint</a> - Specifies whether clients can
--   invoke your API by using the default execute-api endpoint. By default,
--   clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:Api'</a>, <a>api_apiEndpoint</a> - The URI of the
--   API, of the form {api-id}.execute-api.{region}.amazonaws.com. The
--   stage name is typically appended to this URI to form a complete path
--   to a deployed API stage.
--   
--   <a>$sel:warnings:Api'</a>, <a>api_warnings</a> - The warning messages
--   reported when failonwarnings is turned on during API import.
--   
--   <a>$sel:createdDate:Api'</a>, <a>api_createdDate</a> - The timestamp
--   when the API was created.
--   
--   <a>$sel:version:Api'</a>, <a>api_version</a> - A version identifier
--   for the API.
--   
--   <a>$sel:apiGatewayManaged:Api'</a>, <a>api_apiGatewayManaged</a> -
--   Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:Api'</a>,
--   <a>api_apiKeySelectionExpression</a> - An API key selection
--   expression. Supported only for WebSocket APIs. See <a>API Key
--   Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:Api'</a>, <a>api_corsConfiguration</a> - A
--   CORS configuration. Supported only for HTTP APIs.
--   
--   <a>$sel:importInfo:Api'</a>, <a>api_importInfo</a> - The validation
--   information during API import. This may include particular properties
--   of your OpenAPI definition which are ignored during import. Supported
--   only for HTTP APIs.
--   
--   <a>$sel:disableSchemaValidation:Api'</a>,
--   <a>api_disableSchemaValidation</a> - Avoid validating models when
--   creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:Api'</a>, <a>api_description</a> - The description
--   of the API.
--   
--   <a>$sel:tags:Api'</a>, <a>api_tags</a> - A collection of tags
--   associated with the API.
--   
--   <a>$sel:routeSelectionExpression:Api'</a>,
--   <a>api_routeSelectionExpression</a> - The route selection expression
--   for the API. For HTTP APIs, the routeSelectionExpression must be
--   ${request.method} ${request.path}. If not provided, this will be the
--   default for HTTP APIs. This property is required for WebSocket APIs.
--   
--   <a>$sel:name:Api'</a>, <a>api_name</a> - The name of the API.
--   
--   <a>$sel:protocolType:Api'</a>, <a>api_protocolType</a> - The API
--   protocol.
newApi :: Text -> Text -> ProtocolType -> Api

-- | The API ID.
api_apiId :: Lens' Api (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
api_disableExecuteApiEndpoint :: Lens' Api (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
api_apiEndpoint :: Lens' Api (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
api_warnings :: Lens' Api (Maybe [Text])

-- | The timestamp when the API was created.
api_createdDate :: Lens' Api (Maybe UTCTime)

-- | A version identifier for the API.
api_version :: Lens' Api (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
api_apiGatewayManaged :: Lens' Api (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
api_apiKeySelectionExpression :: Lens' Api (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
api_corsConfiguration :: Lens' Api (Maybe Cors)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
api_importInfo :: Lens' Api (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
api_disableSchemaValidation :: Lens' Api (Maybe Bool)

-- | The description of the API.
api_description :: Lens' Api (Maybe Text)

-- | A collection of tags associated with the API.
api_tags :: Lens' Api (Maybe (HashMap Text Text))

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
api_routeSelectionExpression :: Lens' Api Text

-- | The name of the API.
api_name :: Lens' Api Text

-- | The API protocol.
api_protocolType :: Lens' Api ProtocolType

-- | Represents an API mapping.
--   
--   <i>See:</i> <a>newApiMapping</a> smart constructor.
data ApiMapping
ApiMapping' :: Maybe Text -> Maybe Text -> Text -> Text -> ApiMapping

-- | The API mapping key.
[$sel:apiMappingKey:ApiMapping'] :: ApiMapping -> Maybe Text

-- | The API mapping identifier.
[$sel:apiMappingId:ApiMapping'] :: ApiMapping -> Maybe Text

-- | The API stage.
[$sel:stage:ApiMapping'] :: ApiMapping -> Text

-- | The API identifier.
[$sel:apiId:ApiMapping'] :: ApiMapping -> Text

-- | Create a value of <a>ApiMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiMappingKey:ApiMapping'</a>, <a>apiMapping_apiMappingKey</a>
--   - The API mapping key.
--   
--   <a>$sel:apiMappingId:ApiMapping'</a>, <a>apiMapping_apiMappingId</a> -
--   The API mapping identifier.
--   
--   <a>$sel:stage:ApiMapping'</a>, <a>apiMapping_stage</a> - The API
--   stage.
--   
--   <a>$sel:apiId:ApiMapping'</a>, <a>apiMapping_apiId</a> - The API
--   identifier.
newApiMapping :: Text -> Text -> ApiMapping

-- | The API mapping key.
apiMapping_apiMappingKey :: Lens' ApiMapping (Maybe Text)

-- | The API mapping identifier.
apiMapping_apiMappingId :: Lens' ApiMapping (Maybe Text)

-- | The API stage.
apiMapping_stage :: Lens' ApiMapping Text

-- | The API identifier.
apiMapping_apiId :: Lens' ApiMapping Text

-- | Represents an authorizer.
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe AuthorizerType -> Text -> Authorizer

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
[$sel:authorizerCredentialsArn:Authorizer'] :: Authorizer -> Maybe Text

-- | The validation expression does not apply to the REQUEST authorizer.
[$sel:identityValidationExpression:Authorizer'] :: Authorizer -> Maybe Text

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
[$sel:enableSimpleResponses:Authorizer'] :: Authorizer -> Maybe Bool

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
[$sel:authorizerUri:Authorizer'] :: Authorizer -> Maybe Text

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
[$sel:authorizerPayloadFormatVersion:Authorizer'] :: Authorizer -> Maybe Text

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
[$sel:jwtConfiguration:Authorizer'] :: Authorizer -> Maybe JWTConfiguration

-- | The authorizer identifier.
[$sel:authorizerId:Authorizer'] :: Authorizer -> Maybe Text

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
[$sel:authorizerResultTtlInSeconds:Authorizer'] :: Authorizer -> Maybe Natural

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
[$sel:identitySource:Authorizer'] :: Authorizer -> Maybe [Text]

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
[$sel:authorizerType:Authorizer'] :: Authorizer -> Maybe AuthorizerType

-- | The name of the authorizer.
[$sel:name:Authorizer'] :: Authorizer -> Text

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:Authorizer'</a>,
--   <a>authorizer_authorizerCredentialsArn</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, don't specify this parameter. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - The validation
--   expression does not apply to the REQUEST authorizer.
--   
--   <a>$sel:enableSimpleResponses:Authorizer'</a>,
--   <a>authorizer_enableSimpleResponses</a> - Specifies whether a Lambda
--   authorizer returns a response in a simple format. If enabled, the
--   Lambda authorizer can return a boolean value instead of an IAM policy.
--   Supported only for HTTP APIs. To learn more, see <a>Working with AWS
--   Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:Authorizer'</a>,
--   <a>authorizer_authorizerPayloadFormatVersion</a> - Specifies the
--   format of the payload sent to an HTTP API Lambda authorizer. Required
--   for HTTP API Lambda authorizers. Supported values are 1.0 and 2.0. To
--   learn more, see <a>Working with AWS Lambda authorizers for HTTP
--   APIs</a>.
--   
--   <a>$sel:jwtConfiguration:Authorizer'</a>,
--   <a>authorizer_jwtConfiguration</a> - Represents the configuration of a
--   JWT authorizer. Required for the JWT authorizer type. Supported only
--   for HTTP APIs.
--   
--   <a>$sel:authorizerId:Authorizer'</a>, <a>authorizer_authorizerId</a> -
--   The authorizer identifier.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The time to live
--   (TTL) for cached authorizer results, in seconds. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway caches authorizer responses. The maximum value is 3600, or 1
--   hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:authorizerType:Authorizer'</a>,
--   <a>authorizer_authorizerType</a> - The authorizer type. Specify
--   REQUEST for a Lambda function using incoming request parameters.
--   Specify JWT to use JSON Web Tokens (supported only for HTTP APIs).
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - The name of the
--   authorizer.
newAuthorizer :: Text -> Authorizer

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
authorizer_authorizerCredentialsArn :: Lens' Authorizer (Maybe Text)

-- | The validation expression does not apply to the REQUEST authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
authorizer_enableSimpleResponses :: Lens' Authorizer (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
authorizer_authorizerPayloadFormatVersion :: Lens' Authorizer (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
authorizer_jwtConfiguration :: Lens' Authorizer (Maybe JWTConfiguration)

-- | The authorizer identifier.
authorizer_authorizerId :: Lens' Authorizer (Maybe Text)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Natural)

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
authorizer_identitySource :: Lens' Authorizer (Maybe [Text])

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
authorizer_authorizerType :: Lens' Authorizer (Maybe AuthorizerType)

-- | The name of the authorizer.
authorizer_name :: Lens' Authorizer Text

-- | Represents a CORS configuration. Supported only for HTTP APIs. See
--   <a>Configuring CORS</a> for more information.
--   
--   <i>See:</i> <a>newCors</a> smart constructor.
data Cors
Cors' :: Maybe Int -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Cors

-- | The number of seconds that the browser should cache preflight request
--   results. Supported only for HTTP APIs.
[$sel:maxAge:Cors'] :: Cors -> Maybe Int

-- | Represents a collection of allowed HTTP methods. Supported only for
--   HTTP APIs.
[$sel:allowMethods:Cors'] :: Cors -> Maybe [Text]

-- | Represents a collection of allowed headers. Supported only for HTTP
--   APIs.
[$sel:allowHeaders:Cors'] :: Cors -> Maybe [Text]

-- | Represents a collection of exposed headers. Supported only for HTTP
--   APIs.
[$sel:exposeHeaders:Cors'] :: Cors -> Maybe [Text]

-- | Represents a collection of allowed origins. Supported only for HTTP
--   APIs.
[$sel:allowOrigins:Cors'] :: Cors -> Maybe [Text]

-- | Specifies whether credentials are included in the CORS request.
--   Supported only for HTTP APIs.
[$sel:allowCredentials:Cors'] :: Cors -> Maybe Bool

-- | Create a value of <a>Cors</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxAge:Cors'</a>, <a>cors_maxAge</a> - The number of seconds
--   that the browser should cache preflight request results. Supported
--   only for HTTP APIs.
--   
--   <a>$sel:allowMethods:Cors'</a>, <a>cors_allowMethods</a> - Represents
--   a collection of allowed HTTP methods. Supported only for HTTP APIs.
--   
--   <a>$sel:allowHeaders:Cors'</a>, <a>cors_allowHeaders</a> - Represents
--   a collection of allowed headers. Supported only for HTTP APIs.
--   
--   <a>$sel:exposeHeaders:Cors'</a>, <a>cors_exposeHeaders</a> -
--   Represents a collection of exposed headers. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:allowOrigins:Cors'</a>, <a>cors_allowOrigins</a> - Represents
--   a collection of allowed origins. Supported only for HTTP APIs.
--   
--   <a>$sel:allowCredentials:Cors'</a>, <a>cors_allowCredentials</a> -
--   Specifies whether credentials are included in the CORS request.
--   Supported only for HTTP APIs.
newCors :: Cors

-- | The number of seconds that the browser should cache preflight request
--   results. Supported only for HTTP APIs.
cors_maxAge :: Lens' Cors (Maybe Int)

-- | Represents a collection of allowed HTTP methods. Supported only for
--   HTTP APIs.
cors_allowMethods :: Lens' Cors (Maybe [Text])

-- | Represents a collection of allowed headers. Supported only for HTTP
--   APIs.
cors_allowHeaders :: Lens' Cors (Maybe [Text])

-- | Represents a collection of exposed headers. Supported only for HTTP
--   APIs.
cors_exposeHeaders :: Lens' Cors (Maybe [Text])

-- | Represents a collection of allowed origins. Supported only for HTTP
--   APIs.
cors_allowOrigins :: Lens' Cors (Maybe [Text])

-- | Specifies whether credentials are included in the CORS request.
--   Supported only for HTTP APIs.
cors_allowCredentials :: Lens' Cors (Maybe Bool)

-- | An immutable representation of an API that can be called by users. A
--   Deployment must be associated with a Stage for it to be callable over
--   the internet.
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe DeploymentStatus -> Maybe Text -> Deployment

-- | The identifier for the deployment.
[$sel:deploymentId:Deployment'] :: Deployment -> Maybe Text

-- | Specifies whether a deployment was automatically released.
[$sel:autoDeployed:Deployment'] :: Deployment -> Maybe Bool

-- | May contain additional feedback on the status of an API deployment.
[$sel:deploymentStatusMessage:Deployment'] :: Deployment -> Maybe Text

-- | The date and time when the Deployment resource was created.
[$sel:createdDate:Deployment'] :: Deployment -> Maybe POSIX

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
[$sel:deploymentStatus:Deployment'] :: Deployment -> Maybe DeploymentStatus

-- | The description for the deployment.
[$sel:description:Deployment'] :: Deployment -> Maybe Text

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Deployment'</a>, <a>deployment_deploymentId</a> -
--   The identifier for the deployment.
--   
--   <a>$sel:autoDeployed:Deployment'</a>, <a>deployment_autoDeployed</a> -
--   Specifies whether a deployment was automatically released.
--   
--   <a>$sel:deploymentStatusMessage:Deployment'</a>,
--   <a>deployment_deploymentStatusMessage</a> - May contain additional
--   feedback on the status of an API deployment.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time when the Deployment resource was created.
--   
--   <a>$sel:deploymentStatus:Deployment'</a>,
--   <a>deployment_deploymentStatus</a> - The status of the deployment:
--   PENDING, FAILED, or SUCCEEDED.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment.
newDeployment :: Deployment

-- | The identifier for the deployment.
deployment_deploymentId :: Lens' Deployment (Maybe Text)

-- | Specifies whether a deployment was automatically released.
deployment_autoDeployed :: Lens' Deployment (Maybe Bool)

-- | May contain additional feedback on the status of an API deployment.
deployment_deploymentStatusMessage :: Lens' Deployment (Maybe Text)

-- | The date and time when the Deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
deployment_deploymentStatus :: Lens' Deployment (Maybe DeploymentStatus)

-- | The description for the deployment.
deployment_description :: Lens' Deployment (Maybe Text)

-- | Represents a domain name.
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe [DomainNameConfiguration] -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> DomainName

-- | The domain name configurations.
[$sel:domainNameConfigurations:DomainName'] :: DomainName -> Maybe [DomainNameConfiguration]

-- | The mutual TLS authentication configuration for a custom domain name.
[$sel:mutualTlsAuthentication:DomainName'] :: DomainName -> Maybe MutualTlsAuthentication

-- | The API mapping selection expression.
[$sel:apiMappingSelectionExpression:DomainName'] :: DomainName -> Maybe Text

-- | The collection of tags associated with a domain name.
[$sel:tags:DomainName'] :: DomainName -> Maybe (HashMap Text Text)

-- | The name of the DomainName resource.
[$sel:domainName:DomainName'] :: DomainName -> Text

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:DomainName'</a>,
--   <a>domainName_domainNameConfigurations</a> - The domain name
--   configurations.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name.
--   
--   <a>$sel:apiMappingSelectionExpression:DomainName'</a>,
--   <a>domainName_apiMappingSelectionExpression</a> - The API mapping
--   selection expression.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags associated with a domain name.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   name of the DomainName resource.
newDomainName :: Text -> DomainName

-- | The domain name configurations.
domainName_domainNameConfigurations :: Lens' DomainName (Maybe [DomainNameConfiguration])

-- | The mutual TLS authentication configuration for a custom domain name.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The API mapping selection expression.
domainName_apiMappingSelectionExpression :: Lens' DomainName (Maybe Text)

-- | The collection of tags associated with a domain name.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))

-- | The name of the DomainName resource.
domainName_domainName :: Lens' DomainName Text

-- | The domain name configuration.
--   
--   <i>See:</i> <a>newDomainNameConfiguration</a> smart constructor.
data DomainNameConfiguration
DomainNameConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe EndpointType -> Maybe SecurityPolicy -> Maybe POSIX -> Maybe Text -> Maybe DomainNameStatus -> DomainNameConfiguration

-- | A domain name for the API.
[$sel:apiGatewayDomainName:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn
[$sel:ownershipVerificationCertificateArn:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | The user-friendly name of the certificate that will be used by the
--   edge-optimized endpoint for this domain name.
[$sel:certificateName:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | The Amazon Route 53 Hosted Zone ID of the endpoint.
[$sel:hostedZoneId:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | An AWS-managed certificate that will be used by the edge-optimized
--   endpoint for this domain name. AWS Certificate Manager is the only
--   supported source.
[$sel:certificateArn:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | The endpoint type.
[$sel:endpointType:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe EndpointType

-- | The Transport Layer Security (TLS) version of the security policy for
--   this domain name. The valid values are TLS_1_0 and TLS_1_2.
[$sel:securityPolicy:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe SecurityPolicy

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
[$sel:certificateUploadDate:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe POSIX

-- | An optional text message containing detailed information about status
--   of the domain name migration.
[$sel:domainNameStatusMessage:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe Text

-- | The status of the domain name migration. The valid values are
--   AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and
--   PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain
--   cannot be modified further until the existing operation is complete.
--   If it is AVAILABLE, the domain can be updated.
[$sel:domainNameStatus:DomainNameConfiguration'] :: DomainNameConfiguration -> Maybe DomainNameStatus

-- | Create a value of <a>DomainNameConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiGatewayDomainName:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_apiGatewayDomainName</a> - A domain name
--   for the API.
--   
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_ownershipVerificationCertificateArn</a> -
--   The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn
--   
--   <a>$sel:certificateName:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_certificateName</a> - The user-friendly
--   name of the certificate that will be used by the edge-optimized
--   endpoint for this domain name.
--   
--   <a>$sel:hostedZoneId:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_hostedZoneId</a> - The Amazon Route 53
--   Hosted Zone ID of the endpoint.
--   
--   <a>$sel:certificateArn:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_certificateArn</a> - An AWS-managed
--   certificate that will be used by the edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:endpointType:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_endpointType</a> - The endpoint type.
--   
--   <a>$sel:securityPolicy:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_securityPolicy</a> - The Transport Layer
--   Security (TLS) version of the security policy for this domain name.
--   The valid values are TLS_1_0 and TLS_1_2.
--   
--   <a>$sel:certificateUploadDate:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_certificateUploadDate</a> - The timestamp
--   when the certificate that was used by edge-optimized endpoint for this
--   domain name was uploaded.
--   
--   <a>$sel:domainNameStatusMessage:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_domainNameStatusMessage</a> - An optional
--   text message containing detailed information about status of the
--   domain name migration.
--   
--   <a>$sel:domainNameStatus:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_domainNameStatus</a> - The status of the
--   domain name migration. The valid values are AVAILABLE, UPDATING,
--   PENDING_CERTIFICATE_REIMPORT, and PENDING_OWNERSHIP_VERIFICATION. If
--   the status is UPDATING, the domain cannot be modified further until
--   the existing operation is complete. If it is AVAILABLE, the domain can
--   be updated.
newDomainNameConfiguration :: DomainNameConfiguration

-- | A domain name for the API.
domainNameConfiguration_apiGatewayDomainName :: Lens' DomainNameConfiguration (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn
domainNameConfiguration_ownershipVerificationCertificateArn :: Lens' DomainNameConfiguration (Maybe Text)

-- | The user-friendly name of the certificate that will be used by the
--   edge-optimized endpoint for this domain name.
domainNameConfiguration_certificateName :: Lens' DomainNameConfiguration (Maybe Text)

-- | The Amazon Route 53 Hosted Zone ID of the endpoint.
domainNameConfiguration_hostedZoneId :: Lens' DomainNameConfiguration (Maybe Text)

-- | An AWS-managed certificate that will be used by the edge-optimized
--   endpoint for this domain name. AWS Certificate Manager is the only
--   supported source.
domainNameConfiguration_certificateArn :: Lens' DomainNameConfiguration (Maybe Text)

-- | The endpoint type.
domainNameConfiguration_endpointType :: Lens' DomainNameConfiguration (Maybe EndpointType)

-- | The Transport Layer Security (TLS) version of the security policy for
--   this domain name. The valid values are TLS_1_0 and TLS_1_2.
domainNameConfiguration_securityPolicy :: Lens' DomainNameConfiguration (Maybe SecurityPolicy)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainNameConfiguration_certificateUploadDate :: Lens' DomainNameConfiguration (Maybe UTCTime)

-- | An optional text message containing detailed information about status
--   of the domain name migration.
domainNameConfiguration_domainNameStatusMessage :: Lens' DomainNameConfiguration (Maybe Text)

-- | The status of the domain name migration. The valid values are
--   AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and
--   PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain
--   cannot be modified further until the existing operation is complete.
--   If it is AVAILABLE, the domain can be updated.
domainNameConfiguration_domainNameStatus :: Lens' DomainNameConfiguration (Maybe DomainNameStatus)

-- | Represents an integration.
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfig -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Bool -> Maybe ContentHandlingStrategy -> Maybe IntegrationType -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Integration

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
[$sel:integrationResponseSelectionExpression:Integration'] :: Integration -> Maybe Text

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
[$sel:requestTemplates:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
[$sel:integrationSubtype:Integration'] :: Integration -> Maybe Text

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentialsArn:Integration'] :: Integration -> Maybe Text

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
[$sel:integrationUri:Integration'] :: Integration -> Maybe Text

-- | Represents the identifier of an integration.
[$sel:integrationId:Integration'] :: Integration -> Maybe Text

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
[$sel:requestParameters:Integration'] :: Integration -> Maybe (HashMap Text Text)

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
[$sel:connectionId:Integration'] :: Integration -> Maybe Text

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
[$sel:passthroughBehavior:Integration'] :: Integration -> Maybe PassthroughBehavior

-- | Specifies the integration's HTTP method type.
[$sel:integrationMethod:Integration'] :: Integration -> Maybe Text

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
[$sel:tlsConfig:Integration'] :: Integration -> Maybe TlsConfig

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
[$sel:payloadFormatVersion:Integration'] :: Integration -> Maybe Text

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
[$sel:templateSelectionExpression:Integration'] :: Integration -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
[$sel:timeoutInMillis:Integration'] :: Integration -> Maybe Natural

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
[$sel:apiGatewayManaged:Integration'] :: Integration -> Maybe Bool

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:Integration'] :: Integration -> Maybe ContentHandlingStrategy

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
[$sel:integrationType:Integration'] :: Integration -> Maybe IntegrationType

-- | Represents the description of an integration.
[$sel:description:Integration'] :: Integration -> Maybe Text

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
[$sel:connectionType:Integration'] :: Integration -> Maybe ConnectionType

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
[$sel:responseParameters:Integration'] :: Integration -> Maybe (HashMap Text (HashMap Text Text))

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseSelectionExpression:Integration'</a>,
--   <a>integration_integrationResponseSelectionExpression</a> - The
--   integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:Integration'</a>,
--   <a>integration_integrationSubtype</a> - Supported only for HTTP API
--   AWS_PROXY integrations. Specifies the AWS service action to invoke. To
--   learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:Integration'</a>,
--   <a>integration_credentialsArn</a> - Specifies the credentials required
--   for the integration, if any. For AWS integrations, three options are
--   available. To specify an IAM Role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To require that the caller's
--   identity be passed through from the request, specify the string
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, specify null.
--   
--   <a>$sel:integrationUri:Integration'</a>,
--   <a>integration_integrationUri</a> - For a Lambda integration, specify
--   the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:integrationId:Integration'</a>,
--   <a>integration_integrationId</a> - Represents the identifier of an
--   integration.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - For WebSocket APIs, a key-value
--   map specifying request parameters that are passed from the method
--   request to the backend. The key is an integration request parameter
--   name and the associated value is a method request parameter value or
--   static value that must be enclosed within single quotes and
--   pre-encoded as required by the backend. The method request parameter
--   value must match the pattern of method.request.{location}.{name} ,
--   where {location} is querystring, path, or header; and {name} must be a
--   valid and unique method request parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies the pass-through
--   behavior for incoming requests based on the Content-Type header in the
--   request, and the available mapping templates specified as the
--   requestTemplates property on the Integration resource. There are three
--   valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported
--   only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:Integration'</a>,
--   <a>integration_integrationMethod</a> - Specifies the integration's
--   HTTP method type.
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> - The
--   TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:payloadFormatVersion:Integration'</a>,
--   <a>integration_payloadFormatVersion</a> - Specifies the format of the
--   payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:Integration'</a>,
--   <a>integration_templateSelectionExpression</a> - The template
--   selection expression for the integration. Supported only for WebSocket
--   APIs.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds for WebSocket APIs and between 50 and 30,000
--   milliseconds for HTTP APIs. The default timeout is 29 seconds for
--   WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:apiGatewayManaged:Integration'</a>,
--   <a>integration_apiGatewayManaged</a> - Specifies whether an
--   integration is managed by API Gateway. If you created an API using
--   using quick create, the resulting integration is managed by API
--   Gateway. You can update a managed integration, but you can't delete
--   it.
--   
--   <a>$sel:contentHandlingStrategy:Integration'</a>,
--   <a>integration_contentHandlingStrategy</a> - Supported only for
--   WebSocket APIs. Specifies how to handle response payload content type
--   conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:integrationType:Integration'</a>,
--   <a>integration_integrationType</a> - The integration type of an
--   integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:description:Integration'</a>, <a>integration_description</a> -
--   Represents the description of an integration.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. Specify INTERNET for connections through
--   the public routable internet or VPC_LINK for private connections
--   between API Gateway and resources in a VPC. The default value is
--   INTERNET.
--   
--   <a>$sel:responseParameters:Integration'</a>,
--   <a>integration_responseParameters</a> - Supported only for HTTP APIs.
--   You use response parameters to transform the HTTP response from a
--   backend integration before returning the response to clients. Specify
--   a key-value map from a selection key to response parameters. The
--   selection key must be a valid HTTP status code within the range of
--   200-599. Response parameters are a key-value map. The key must match
--   pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
newIntegration :: Integration

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
integration_integrationResponseSelectionExpression :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
integration_integrationSubtype :: Lens' Integration (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentialsArn :: Lens' Integration (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
integration_integrationUri :: Lens' Integration (Maybe Text)

-- | Represents the identifier of an integration.
integration_integrationId :: Lens' Integration (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
integration_passthroughBehavior :: Lens' Integration (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
integration_integrationMethod :: Lens' Integration (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
integration_payloadFormatVersion :: Lens' Integration (Maybe Text)

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
integration_templateSelectionExpression :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
integration_timeoutInMillis :: Lens' Integration (Maybe Natural)

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
integration_apiGatewayManaged :: Lens' Integration (Maybe Bool)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
integration_contentHandlingStrategy :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
integration_integrationType :: Lens' Integration (Maybe IntegrationType)

-- | Represents the description of an integration.
integration_description :: Lens' Integration (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
integration_responseParameters :: Lens' Integration (Maybe (HashMap Text (HashMap Text Text)))

-- | Represents an integration response.
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe Text -> Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Text -> IntegrationResponse

-- | The integration response ID.
[$sel:integrationResponseId:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | The template selection expressions for the integration response.
[$sel:templateSelectionExpression:IntegrationResponse'] :: IntegrationResponse -> Maybe Text

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:IntegrationResponse'] :: IntegrationResponse -> Maybe ContentHandlingStrategy

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
[$sel:responseTemplates:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
[$sel:responseParameters:IntegrationResponse'] :: IntegrationResponse -> Maybe (HashMap Text Text)

-- | The integration response key.
[$sel:integrationResponseKey:IntegrationResponse'] :: IntegrationResponse -> Text

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseId:IntegrationResponse'</a>,
--   <a>integrationResponse_integrationResponseId</a> - The integration
--   response ID.
--   
--   <a>$sel:templateSelectionExpression:IntegrationResponse'</a>,
--   <a>integrationResponse_templateSelectionExpression</a> - The template
--   selection expressions for the integration response.
--   
--   <a>$sel:contentHandlingStrategy:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandlingStrategy</a> - Supported only
--   for WebSocket APIs. Specifies how to handle response payload content
--   type conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - The collection of
--   response templates for the integration response as a string-to-string
--   map of key-value pairs. Response templates are represented as a
--   key/value map, with a content-type as the key and a template as the
--   value.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the backend. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of method.response.header.{name}, where name is a valid and
--   unique header name. The mapped non-static value must match the pattern
--   of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:integrationResponseKey:IntegrationResponse'</a>,
--   <a>integrationResponse_integrationResponseKey</a> - The integration
--   response key.
newIntegrationResponse :: Text -> IntegrationResponse

-- | The integration response ID.
integrationResponse_integrationResponseId :: Lens' IntegrationResponse (Maybe Text)

-- | The template selection expressions for the integration response.
integrationResponse_templateSelectionExpression :: Lens' IntegrationResponse (Maybe Text)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
integrationResponse_contentHandlingStrategy :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | The integration response key.
integrationResponse_integrationResponseKey :: Lens' IntegrationResponse Text

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
--   
--   <i>See:</i> <a>newJWTConfiguration</a> smart constructor.
data JWTConfiguration
JWTConfiguration' :: Maybe [Text] -> Maybe Text -> JWTConfiguration

-- | A list of the intended recipients of the JWT. A valid JWT must provide
--   an aud that matches at least one entry in this list. See <a>RFC
--   7519</a>. Supported only for HTTP APIs.
[$sel:audience:JWTConfiguration'] :: JWTConfiguration -> Maybe [Text]

-- | The base domain of the identity provider that issues JSON Web Tokens.
--   For example, an Amazon Cognito user pool has the following format:
--   https://cognito-idp.{region}.amazonaws.com/{userPoolId} . Required for
--   the JWT authorizer type. Supported only for HTTP APIs.
[$sel:issuer:JWTConfiguration'] :: JWTConfiguration -> Maybe Text

-- | Create a value of <a>JWTConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:audience:JWTConfiguration'</a>,
--   <a>jWTConfiguration_audience</a> - A list of the intended recipients
--   of the JWT. A valid JWT must provide an aud that matches at least one
--   entry in this list. See <a>RFC 7519</a>. Supported only for HTTP APIs.
--   
--   <a>$sel:issuer:JWTConfiguration'</a>, <a>jWTConfiguration_issuer</a> -
--   The base domain of the identity provider that issues JSON Web Tokens.
--   For example, an Amazon Cognito user pool has the following format:
--   https://cognito-idp.{region}.amazonaws.com/{userPoolId} . Required for
--   the JWT authorizer type. Supported only for HTTP APIs.
newJWTConfiguration :: JWTConfiguration

-- | A list of the intended recipients of the JWT. A valid JWT must provide
--   an aud that matches at least one entry in this list. See <a>RFC
--   7519</a>. Supported only for HTTP APIs.
jWTConfiguration_audience :: Lens' JWTConfiguration (Maybe [Text])

-- | The base domain of the identity provider that issues JSON Web Tokens.
--   For example, an Amazon Cognito user pool has the following format:
--   https://cognito-idp.{region}.amazonaws.com/{userPoolId} . Required for
--   the JWT authorizer type. Supported only for HTTP APIs.
jWTConfiguration_issuer :: Lens' JWTConfiguration (Maybe Text)

-- | Represents a data model for an API. Supported only for WebSocket APIs.
--   See <a>Create Models and Mapping Templates for Request and Response
--   Mappings</a>.
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Model

-- | The model identifier.
[$sel:modelId:Model'] :: Model -> Maybe Text

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
[$sel:schema:Model'] :: Model -> Maybe Text

-- | The description of the model.
[$sel:description:Model'] :: Model -> Maybe Text

-- | The content-type for the model, for example, "application/json".
[$sel:contentType:Model'] :: Model -> Maybe Text

-- | The name of the model. Must be alphanumeric.
[$sel:name:Model'] :: Model -> Text

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:Model'</a>, <a>model_modelId</a> - The model
--   identifier.
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For application/json models, this should be JSON schema draft 4
--   model.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model, for example, "application/json".
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be alphanumeric.
newModel :: Text -> Model

-- | The model identifier.
model_modelId :: Lens' Model (Maybe Text)

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
model_schema :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model, for example, "application/json".
model_contentType :: Lens' Model (Maybe Text)

-- | The name of the model. Must be alphanumeric.
model_name :: Lens' Model Text

-- | <i>See:</i> <a>newMutualTlsAuthentication</a> smart constructor.
data MutualTlsAuthentication
MutualTlsAuthentication' :: Maybe [Text] -> Maybe Text -> Maybe Text -> MutualTlsAuthentication

-- | A list of warnings that API Gateway returns while processing your
--   truststore. Invalid certificates produce warnings. Mutual TLS is still
--   enabled, but some clients might not be able to access your API. To
--   resolve warnings, upload a new truststore to S3, and then update you
--   domain name to use the new version.
[$sel:truststoreWarnings:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe [Text]

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example, s3://bucket-name/key-name. The truststore
--   can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
[$sel:truststoreUri:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe Text

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
[$sel:truststoreVersion:MutualTlsAuthentication'] :: MutualTlsAuthentication -> Maybe Text

-- | Create a value of <a>MutualTlsAuthentication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreWarnings:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreWarnings</a> - A list of warnings
--   that API Gateway returns while processing your truststore. Invalid
--   certificates produce warnings. Mutual TLS is still enabled, but some
--   clients might not be able to access your API. To resolve warnings,
--   upload a new truststore to S3, and then update you domain name to use
--   the new version.
--   
--   <a>$sel:truststoreUri:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreUri</a> - An Amazon S3 URL that
--   specifies the truststore for mutual TLS authentication, for example,
--   s3://bucket-name/key-name. The truststore can contain certificates
--   from public or private certificate authorities. To update the
--   truststore, upload a new version to S3, and then update your custom
--   domain name to use the new version. To update the truststore, you must
--   have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreVersion</a> - The version of the
--   S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthentication :: MutualTlsAuthentication

-- | A list of warnings that API Gateway returns while processing your
--   truststore. Invalid certificates produce warnings. Mutual TLS is still
--   enabled, but some clients might not be able to access your API. To
--   resolve warnings, upload a new truststore to S3, and then update you
--   domain name to use the new version.
mutualTlsAuthentication_truststoreWarnings :: Lens' MutualTlsAuthentication (Maybe [Text])

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example, s3://bucket-name/key-name. The truststore
--   can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthentication_truststoreUri :: Lens' MutualTlsAuthentication (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthentication_truststoreVersion :: Lens' MutualTlsAuthentication (Maybe Text)

-- | <i>See:</i> <a>newMutualTlsAuthenticationInput</a> smart constructor.
data MutualTlsAuthenticationInput
MutualTlsAuthenticationInput' :: Maybe Text -> Maybe Text -> MutualTlsAuthenticationInput

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example, s3://bucket-name/key-name. The truststore
--   can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
[$sel:truststoreUri:MutualTlsAuthenticationInput'] :: MutualTlsAuthenticationInput -> Maybe Text

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
[$sel:truststoreVersion:MutualTlsAuthenticationInput'] :: MutualTlsAuthenticationInput -> Maybe Text

-- | Create a value of <a>MutualTlsAuthenticationInput</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreUri:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreUri</a> - An Amazon S3 URL
--   that specifies the truststore for mutual TLS authentication, for
--   example, s3://bucket-name/key-name. The truststore can contain
--   certificates from public or private certificate authorities. To update
--   the truststore, upload a new version to S3, and then update your
--   custom domain name to use the new version. To update the truststore,
--   you must have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreVersion</a> - The version of
--   the S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthenticationInput :: MutualTlsAuthenticationInput

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example, s3://bucket-name/key-name. The truststore
--   can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthenticationInput_truststoreUri :: Lens' MutualTlsAuthenticationInput (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthenticationInput_truststoreVersion :: Lens' MutualTlsAuthenticationInput (Maybe Text)

-- | Validation constraints imposed on parameters of a request (path, query
--   string, headers).
--   
--   <i>See:</i> <a>newParameterConstraints</a> smart constructor.
data ParameterConstraints
ParameterConstraints' :: Maybe Bool -> ParameterConstraints

-- | Whether or not the parameter is required.
[$sel:required:ParameterConstraints'] :: ParameterConstraints -> Maybe Bool

-- | Create a value of <a>ParameterConstraints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:required:ParameterConstraints'</a>,
--   <a>parameterConstraints_required</a> - Whether or not the parameter is
--   required.
newParameterConstraints :: ParameterConstraints

-- | Whether or not the parameter is required.
parameterConstraints_required :: Lens' ParameterConstraints (Maybe Bool)

-- | Represents a route.
--   
--   <i>See:</i> <a>newRoute</a> smart constructor.
data Route
Route' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Text -> Route

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
[$sel:authorizationScopes:Route'] :: Route -> Maybe [Text]

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
[$sel:modelSelectionExpression:Route'] :: Route -> Maybe Text

-- | The request models for the route. Supported only for WebSocket APIs.
[$sel:requestModels:Route'] :: Route -> Maybe (HashMap Text Text)

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
[$sel:routeResponseSelectionExpression:Route'] :: Route -> Maybe Text

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
[$sel:requestParameters:Route'] :: Route -> Maybe (HashMap Text ParameterConstraints)

-- | The route ID.
[$sel:routeId:Route'] :: Route -> Maybe Text

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
[$sel:authorizerId:Route'] :: Route -> Maybe Text

-- | The operation name for the route.
[$sel:operationName:Route'] :: Route -> Maybe Text

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
[$sel:apiGatewayManaged:Route'] :: Route -> Maybe Bool

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
[$sel:authorizationType:Route'] :: Route -> Maybe AuthorizationType

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
[$sel:apiKeyRequired:Route'] :: Route -> Maybe Bool

-- | The target for the route.
[$sel:target:Route'] :: Route -> Maybe Text

-- | The route key for the route.
[$sel:routeKey:Route'] :: Route -> Text

-- | Create a value of <a>Route</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:Route'</a>,
--   <a>route_authorizationScopes</a> - A list of authorization scopes
--   configured on a route. The scopes are used with a JWT authorizer to
--   authorize the method invocation. The authorization works by matching
--   the route scopes against the scopes parsed from the access token in
--   the incoming request. The method invocation is authorized if any route
--   scope matches a claimed scope in the access token. Otherwise, the
--   invocation is not authorized. When the route scope is configured, the
--   client must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:modelSelectionExpression:Route'</a>,
--   <a>route_modelSelectionExpression</a> - The model selection expression
--   for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:Route'</a>, <a>route_requestModels</a> - The
--   request models for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:Route'</a>,
--   <a>route_routeResponseSelectionExpression</a> - The route response
--   selection expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestParameters:Route'</a>, <a>route_requestParameters</a> -
--   The request parameters for the route. Supported only for WebSocket
--   APIs.
--   
--   <a>$sel:routeId:Route'</a>, <a>route_routeId</a> - The route ID.
--   
--   <a>$sel:authorizerId:Route'</a>, <a>route_authorizerId</a> - The
--   identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
--   
--   <a>$sel:operationName:Route'</a>, <a>route_operationName</a> - The
--   operation name for the route.
--   
--   <a>$sel:apiGatewayManaged:Route'</a>, <a>route_apiGatewayManaged</a> -
--   Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
--   
--   <a>$sel:authorizationType:Route'</a>, <a>route_authorizationType</a> -
--   The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:Route'</a>, <a>route_apiKeyRequired</a> -
--   Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
--   
--   <a>$sel:target:Route'</a>, <a>route_target</a> - The target for the
--   route.
--   
--   <a>$sel:routeKey:Route'</a>, <a>route_routeKey</a> - The route key for
--   the route.
newRoute :: Text -> Route

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
route_authorizationScopes :: Lens' Route (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
route_modelSelectionExpression :: Lens' Route (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
route_requestModels :: Lens' Route (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
route_routeResponseSelectionExpression :: Lens' Route (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
route_requestParameters :: Lens' Route (Maybe (HashMap Text ParameterConstraints))

-- | The route ID.
route_routeId :: Lens' Route (Maybe Text)

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
route_authorizerId :: Lens' Route (Maybe Text)

-- | The operation name for the route.
route_operationName :: Lens' Route (Maybe Text)

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
route_apiGatewayManaged :: Lens' Route (Maybe Bool)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
route_authorizationType :: Lens' Route (Maybe AuthorizationType)

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
route_apiKeyRequired :: Lens' Route (Maybe Bool)

-- | The target for the route.
route_target :: Lens' Route (Maybe Text)

-- | The route key for the route.
route_routeKey :: Lens' Route Text

-- | Represents a route response.
--   
--   <i>See:</i> <a>newRouteResponse</a> smart constructor.
data RouteResponse
RouteResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Text -> RouteResponse

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
[$sel:modelSelectionExpression:RouteResponse'] :: RouteResponse -> Maybe Text

-- | Represents the response models of a route response.
[$sel:responseModels:RouteResponse'] :: RouteResponse -> Maybe (HashMap Text Text)

-- | Represents the identifier of a route response.
[$sel:routeResponseId:RouteResponse'] :: RouteResponse -> Maybe Text

-- | Represents the response parameters of a route response.
[$sel:responseParameters:RouteResponse'] :: RouteResponse -> Maybe (HashMap Text ParameterConstraints)

-- | Represents the route response key of a route response.
[$sel:routeResponseKey:RouteResponse'] :: RouteResponse -> Text

-- | Create a value of <a>RouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:RouteResponse'</a>,
--   <a>routeResponse_modelSelectionExpression</a> - Represents the model
--   selection expression of a route response. Supported only for WebSocket
--   APIs.
--   
--   <a>$sel:responseModels:RouteResponse'</a>,
--   <a>routeResponse_responseModels</a> - Represents the response models
--   of a route response.
--   
--   <a>$sel:routeResponseId:RouteResponse'</a>,
--   <a>routeResponse_routeResponseId</a> - Represents the identifier of a
--   route response.
--   
--   <a>$sel:responseParameters:RouteResponse'</a>,
--   <a>routeResponse_responseParameters</a> - Represents the response
--   parameters of a route response.
--   
--   <a>$sel:routeResponseKey:RouteResponse'</a>,
--   <a>routeResponse_routeResponseKey</a> - Represents the route response
--   key of a route response.
newRouteResponse :: Text -> RouteResponse

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
routeResponse_modelSelectionExpression :: Lens' RouteResponse (Maybe Text)

-- | Represents the response models of a route response.
routeResponse_responseModels :: Lens' RouteResponse (Maybe (HashMap Text Text))

-- | Represents the identifier of a route response.
routeResponse_routeResponseId :: Lens' RouteResponse (Maybe Text)

-- | Represents the response parameters of a route response.
routeResponse_responseParameters :: Lens' RouteResponse (Maybe (HashMap Text ParameterConstraints))

-- | Represents the route response key of a route response.
routeResponse_routeResponseKey :: Lens' RouteResponse Text

-- | Represents a collection of route settings.
--   
--   <i>See:</i> <a>newRouteSettings</a> smart constructor.
data RouteSettings
RouteSettings' :: Maybe Bool -> Maybe Int -> Maybe LoggingLevel -> Maybe Double -> Maybe Bool -> RouteSettings

-- | Specifies whether (true) or not (false) data trace logging is enabled
--   for this route. This property affects the log entries pushed to Amazon
--   CloudWatch Logs. Supported only for WebSocket APIs.
[$sel:dataTraceEnabled:RouteSettings'] :: RouteSettings -> Maybe Bool

-- | Specifies the throttling burst limit.
[$sel:throttlingBurstLimit:RouteSettings'] :: RouteSettings -> Maybe Int

-- | Specifies the logging level for this route: INFO, ERROR, or OFF. This
--   property affects the log entries pushed to Amazon CloudWatch Logs.
--   Supported only for WebSocket APIs.
[$sel:loggingLevel:RouteSettings'] :: RouteSettings -> Maybe LoggingLevel

-- | Specifies the throttling rate limit.
[$sel:throttlingRateLimit:RouteSettings'] :: RouteSettings -> Maybe Double

-- | Specifies whether detailed metrics are enabled.
[$sel:detailedMetricsEnabled:RouteSettings'] :: RouteSettings -> Maybe Bool

-- | Create a value of <a>RouteSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTraceEnabled:RouteSettings'</a>,
--   <a>routeSettings_dataTraceEnabled</a> - Specifies whether (true) or
--   not (false) data trace logging is enabled for this route. This
--   property affects the log entries pushed to Amazon CloudWatch Logs.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:throttlingBurstLimit:RouteSettings'</a>,
--   <a>routeSettings_throttlingBurstLimit</a> - Specifies the throttling
--   burst limit.
--   
--   <a>$sel:loggingLevel:RouteSettings'</a>,
--   <a>routeSettings_loggingLevel</a> - Specifies the logging level for
--   this route: INFO, ERROR, or OFF. This property affects the log entries
--   pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs.
--   
--   <a>$sel:throttlingRateLimit:RouteSettings'</a>,
--   <a>routeSettings_throttlingRateLimit</a> - Specifies the throttling
--   rate limit.
--   
--   <a>$sel:detailedMetricsEnabled:RouteSettings'</a>,
--   <a>routeSettings_detailedMetricsEnabled</a> - Specifies whether
--   detailed metrics are enabled.
newRouteSettings :: RouteSettings

-- | Specifies whether (true) or not (false) data trace logging is enabled
--   for this route. This property affects the log entries pushed to Amazon
--   CloudWatch Logs. Supported only for WebSocket APIs.
routeSettings_dataTraceEnabled :: Lens' RouteSettings (Maybe Bool)

-- | Specifies the throttling burst limit.
routeSettings_throttlingBurstLimit :: Lens' RouteSettings (Maybe Int)

-- | Specifies the logging level for this route: INFO, ERROR, or OFF. This
--   property affects the log entries pushed to Amazon CloudWatch Logs.
--   Supported only for WebSocket APIs.
routeSettings_loggingLevel :: Lens' RouteSettings (Maybe LoggingLevel)

-- | Specifies the throttling rate limit.
routeSettings_throttlingRateLimit :: Lens' RouteSettings (Maybe Double)

-- | Specifies whether detailed metrics are enabled.
routeSettings_detailedMetricsEnabled :: Lens' RouteSettings (Maybe Bool)

-- | Represents an API stage.
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe POSIX -> Maybe RouteSettings -> Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Stage

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
[$sel:lastDeploymentStatusMessage:Stage'] :: Stage -> Maybe Text

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
[$sel:deploymentId:Stage'] :: Stage -> Maybe Text

-- | Route settings for the stage, by routeKey.
[$sel:routeSettings:Stage'] :: Stage -> Maybe (HashMap Text RouteSettings)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:Stage'] :: Stage -> Maybe AccessLogSettings

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
[$sel:clientCertificateId:Stage'] :: Stage -> Maybe Text

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
[$sel:stageVariables:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
[$sel:autoDeploy:Stage'] :: Stage -> Maybe Bool

-- | The timestamp when the stage was created.
[$sel:createdDate:Stage'] :: Stage -> Maybe POSIX

-- | Default route settings for the stage.
[$sel:defaultRouteSettings:Stage'] :: Stage -> Maybe RouteSettings

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
[$sel:apiGatewayManaged:Stage'] :: Stage -> Maybe Bool

-- | The timestamp when the stage was last updated.
[$sel:lastUpdatedDate:Stage'] :: Stage -> Maybe POSIX

-- | The description of the stage.
[$sel:description:Stage'] :: Stage -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:Stage'] :: Stage -> Maybe (HashMap Text Text)

-- | The name of the stage.
[$sel:stageName:Stage'] :: Stage -> Text

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentStatusMessage:Stage'</a>,
--   <a>stage_lastDeploymentStatusMessage</a> - Describes the status of the
--   last deployment of a stage. Supported only for stages with autoDeploy
--   enabled.
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the Stage is associated with. Can't
--   be updated if autoDeploy is enabled.
--   
--   <a>$sel:routeSettings:Stage'</a>, <a>stage_routeSettings</a> - Route
--   settings for the stage, by routeKey.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for a Stage. Supported only for WebSocket APIs.
--   
--   <a>$sel:stageVariables:Stage'</a>, <a>stage_stageVariables</a> - A map
--   that defines the stage variables for a stage resource. Variable names
--   can have alphanumeric and underscore characters, and the values must
--   match [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:Stage'</a>, <a>stage_autoDeploy</a> - Specifies
--   whether updates to an API automatically trigger a new deployment. The
--   default value is false.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:defaultRouteSettings:Stage'</a>,
--   <a>stage_defaultRouteSettings</a> - Default route settings for the
--   stage.
--   
--   <a>$sel:apiGatewayManaged:Stage'</a>, <a>stage_apiGatewayManaged</a> -
--   Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage was last updated.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The
--   description of the stage.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage.
newStage :: Text -> Stage

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
stage_lastDeploymentStatusMessage :: Lens' Stage (Maybe Text)

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | Route settings for the stage, by routeKey.
stage_routeSettings :: Lens' Stage (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
stage_stageVariables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
stage_autoDeploy :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | Default route settings for the stage.
stage_defaultRouteSettings :: Lens' Stage (Maybe RouteSettings)

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
stage_apiGatewayManaged :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The description of the stage.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))

-- | The name of the stage.
stage_stageName :: Lens' Stage Text

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
--   
--   <i>See:</i> <a>newTlsConfig</a> smart constructor.
data TlsConfig
TlsConfig' :: Maybe Text -> TlsConfig

-- | If you specify a server name, API Gateway uses it to verify the
--   hostname on the integration's certificate. The server name is also
--   included in the TLS handshake to support Server Name Indication (SNI)
--   or virtual hosting.
[$sel:serverNameToVerify:TlsConfig'] :: TlsConfig -> Maybe Text

-- | Create a value of <a>TlsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverNameToVerify:TlsConfig'</a>,
--   <a>tlsConfig_serverNameToVerify</a> - If you specify a server name,
--   API Gateway uses it to verify the hostname on the integration's
--   certificate. The server name is also included in the TLS handshake to
--   support Server Name Indication (SNI) or virtual hosting.
newTlsConfig :: TlsConfig

-- | If you specify a server name, API Gateway uses it to verify the
--   hostname on the integration's certificate. The server name is also
--   included in the TLS handshake to support Server Name Indication (SNI)
--   or virtual hosting.
tlsConfig_serverNameToVerify :: Lens' TlsConfig (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
--   
--   <i>See:</i> <a>newTlsConfigInput</a> smart constructor.
data TlsConfigInput
TlsConfigInput' :: Maybe Text -> TlsConfigInput

-- | If you specify a server name, API Gateway uses it to verify the
--   hostname on the integration's certificate. The server name is also
--   included in the TLS handshake to support Server Name Indication (SNI)
--   or virtual hosting.
[$sel:serverNameToVerify:TlsConfigInput'] :: TlsConfigInput -> Maybe Text

-- | Create a value of <a>TlsConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverNameToVerify:TlsConfigInput'</a>,
--   <a>tlsConfigInput_serverNameToVerify</a> - If you specify a server
--   name, API Gateway uses it to verify the hostname on the integration's
--   certificate. The server name is also included in the TLS handshake to
--   support Server Name Indication (SNI) or virtual hosting.
newTlsConfigInput :: TlsConfigInput

-- | If you specify a server name, API Gateway uses it to verify the
--   hostname on the integration's certificate. The server name is also
--   included in the TLS handshake to support Server Name Indication (SNI)
--   or virtual hosting.
tlsConfigInput_serverNameToVerify :: Lens' TlsConfigInput (Maybe Text)

-- | Represents a VPC link.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe POSIX -> Maybe VpcLinkVersion -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe VpcLinkStatus -> Text -> [Text] -> [Text] -> Text -> VpcLink

-- | The timestamp when the VPC link was created.
[$sel:createdDate:VpcLink'] :: VpcLink -> Maybe POSIX

-- | The version of the VPC link.
[$sel:vpcLinkVersion:VpcLink'] :: VpcLink -> Maybe VpcLinkVersion

-- | A message summarizing the cause of the status of the VPC link.
[$sel:vpcLinkStatusMessage:VpcLink'] :: VpcLink -> Maybe Text

-- | Tags for the VPC link.
[$sel:tags:VpcLink'] :: VpcLink -> Maybe (HashMap Text Text)

-- | The status of the VPC link.
[$sel:vpcLinkStatus:VpcLink'] :: VpcLink -> Maybe VpcLinkStatus

-- | The ID of the VPC link.
[$sel:vpcLinkId:VpcLink'] :: VpcLink -> Text

-- | A list of security group IDs for the VPC link.
[$sel:securityGroupIds:VpcLink'] :: VpcLink -> [Text]

-- | A list of subnet IDs to include in the VPC link.
[$sel:subnetIds:VpcLink'] :: VpcLink -> [Text]

-- | The name of the VPC link.
[$sel:name:VpcLink'] :: VpcLink -> Text

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:VpcLink'</a>, <a>vpcLink_createdDate</a> - The
--   timestamp when the VPC link was created.
--   
--   <a>$sel:vpcLinkVersion:VpcLink'</a>, <a>vpcLink_vpcLinkVersion</a> -
--   The version of the VPC link.
--   
--   <a>$sel:vpcLinkStatusMessage:VpcLink'</a>,
--   <a>vpcLink_vpcLinkStatusMessage</a> - A message summarizing the cause
--   of the status of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - Tags for the VPC
--   link.
--   
--   <a>$sel:vpcLinkStatus:VpcLink'</a>, <a>vpcLink_vpcLinkStatus</a> - The
--   status of the VPC link.
--   
--   <a>$sel:vpcLinkId:VpcLink'</a>, <a>vpcLink_vpcLinkId</a> - The ID of
--   the VPC link.
--   
--   <a>$sel:securityGroupIds:VpcLink'</a>, <a>vpcLink_securityGroupIds</a>
--   - A list of security group IDs for the VPC link.
--   
--   <a>$sel:subnetIds:VpcLink'</a>, <a>vpcLink_subnetIds</a> - A list of
--   subnet IDs to include in the VPC link.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name of the VPC
--   link.
newVpcLink :: Text -> Text -> VpcLink

-- | The timestamp when the VPC link was created.
vpcLink_createdDate :: Lens' VpcLink (Maybe UTCTime)

-- | The version of the VPC link.
vpcLink_vpcLinkVersion :: Lens' VpcLink (Maybe VpcLinkVersion)

-- | A message summarizing the cause of the status of the VPC link.
vpcLink_vpcLinkStatusMessage :: Lens' VpcLink (Maybe Text)

-- | Tags for the VPC link.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))

-- | The status of the VPC link.
vpcLink_vpcLinkStatus :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ID of the VPC link.
vpcLink_vpcLinkId :: Lens' VpcLink Text

-- | A list of security group IDs for the VPC link.
vpcLink_securityGroupIds :: Lens' VpcLink [Text]

-- | A list of subnet IDs to include in the VPC link.
vpcLink_subnetIds :: Lens' VpcLink [Text]

-- | The name of the VPC link.
vpcLink_name :: Lens' VpcLink Text


-- | Creates a new Tag resource to represent a tag.
module Network.AWS.ApiGatewayV2.TagResource

-- | Creates a new Tag resource to represent a tag.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Maybe (HashMap Text Text) -> Text -> TagResource

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:TagResource'] :: TagResource -> Maybe (HashMap Text Text)

-- | The resource ARN for the tag.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The
--   collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The resource ARN for the tag.
newTagResource :: Text -> TagResource

-- | The collection of tags. Each tag element is associated with a given
--   resource.
tagResource_tags :: Lens' TagResource (Maybe (HashMap Text Text))

-- | The resource ARN for the tag.
tagResource_resourceArn :: Lens' TagResource Text

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.TagResource.TagResource
instance GHC.Show.Show Network.AWS.ApiGatewayV2.TagResource.TagResource
instance GHC.Read.Read Network.AWS.ApiGatewayV2.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.TagResource.TagResource


-- | Resets all authorizer cache entries on a stage. Supported only for
--   HTTP APIs.
module Network.AWS.ApiGatewayV2.ResetAuthorizersCache

-- | <i>See:</i> <a>newResetAuthorizersCache</a> smart constructor.
data ResetAuthorizersCache
ResetAuthorizersCache' :: Text -> Text -> ResetAuthorizersCache

-- | The stage name. Stage names can contain only alphanumeric characters,
--   hyphens, and underscores, or be $default. Maximum length is 128
--   characters.
[$sel:stageName:ResetAuthorizersCache'] :: ResetAuthorizersCache -> Text

-- | The API identifier.
[$sel:apiId:ResetAuthorizersCache'] :: ResetAuthorizersCache -> Text

-- | Create a value of <a>ResetAuthorizersCache</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:ResetAuthorizersCache'</a>,
--   <a>resetAuthorizersCache_stageName</a> - The stage name. Stage names
--   can contain only alphanumeric characters, hyphens, and underscores, or
--   be $default. Maximum length is 128 characters.
--   
--   <a>$sel:apiId:ResetAuthorizersCache'</a>,
--   <a>resetAuthorizersCache_apiId</a> - The API identifier.
newResetAuthorizersCache :: Text -> Text -> ResetAuthorizersCache

-- | The stage name. Stage names can contain only alphanumeric characters,
--   hyphens, and underscores, or be $default. Maximum length is 128
--   characters.
resetAuthorizersCache_stageName :: Lens' ResetAuthorizersCache Text

-- | The API identifier.
resetAuthorizersCache_apiId :: Lens' ResetAuthorizersCache Text

-- | <i>See:</i> <a>newResetAuthorizersCacheResponse</a> smart constructor.
data ResetAuthorizersCacheResponse
ResetAuthorizersCacheResponse' :: ResetAuthorizersCacheResponse

-- | Create a value of <a>ResetAuthorizersCacheResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newResetAuthorizersCacheResponse :: ResetAuthorizersCacheResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCache
instance GHC.Show.Show Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCache
instance GHC.Read.Read Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCache
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCache
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCacheResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCacheResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCacheResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCacheResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCache
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCacheResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCache
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCache
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCache
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCache
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.ResetAuthorizersCache.ResetAuthorizersCache


-- | Puts an Api resource.
module Network.AWS.ApiGatewayV2.ReimportApi

-- | <i>See:</i> <a>newReimportApi</a> smart constructor.
data ReimportApi
ReimportApi' :: Maybe Text -> Maybe Bool -> Text -> Text -> ReimportApi

-- | Specifies how to interpret the base path of the API during import.
--   Valid values are ignore, prepend, and split. The default value is
--   ignore. To learn more, see <a>Set the OpenAPI basePath Property</a>.
--   Supported only for HTTP APIs.
[$sel:basepath:ReimportApi'] :: ReimportApi -> Maybe Text

-- | Specifies whether to rollback the API creation when a warning is
--   encountered. By default, API creation continues if a warning is
--   encountered.
[$sel:failOnWarnings:ReimportApi'] :: ReimportApi -> Maybe Bool

-- | The API identifier.
[$sel:apiId:ReimportApi'] :: ReimportApi -> Text

-- | The OpenAPI definition. Supported only for HTTP APIs.
[$sel:body:ReimportApi'] :: ReimportApi -> Text

-- | Create a value of <a>ReimportApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:basepath:ReimportApi'</a>, <a>reimportApi_basepath</a> -
--   Specifies how to interpret the base path of the API during import.
--   Valid values are ignore, prepend, and split. The default value is
--   ignore. To learn more, see <a>Set the OpenAPI basePath Property</a>.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:failOnWarnings:ReimportApi'</a>,
--   <a>reimportApi_failOnWarnings</a> - Specifies whether to rollback the
--   API creation when a warning is encountered. By default, API creation
--   continues if a warning is encountered.
--   
--   <a>$sel:apiId:ReimportApi'</a>, <a>reimportApi_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:body:ReimportApi'</a>, <a>reimportApi_body</a> - The OpenAPI
--   definition. Supported only for HTTP APIs.
newReimportApi :: Text -> Text -> ReimportApi

-- | Specifies how to interpret the base path of the API during import.
--   Valid values are ignore, prepend, and split. The default value is
--   ignore. To learn more, see <a>Set the OpenAPI basePath Property</a>.
--   Supported only for HTTP APIs.
reimportApi_basepath :: Lens' ReimportApi (Maybe Text)

-- | Specifies whether to rollback the API creation when a warning is
--   encountered. By default, API creation continues if a warning is
--   encountered.
reimportApi_failOnWarnings :: Lens' ReimportApi (Maybe Bool)

-- | The API identifier.
reimportApi_apiId :: Lens' ReimportApi Text

-- | The OpenAPI definition. Supported only for HTTP APIs.
reimportApi_body :: Lens' ReimportApi Text

-- | <i>See:</i> <a>newReimportApiResponse</a> smart constructor.
data ReimportApiResponse
ReimportApiResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe ProtocolType -> Maybe (HashMap Text Text) -> Int -> ReimportApiResponse

-- | The API ID.
[$sel:apiId:ReimportApiResponse'] :: ReimportApiResponse -> Maybe Text

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
[$sel:disableExecuteApiEndpoint:ReimportApiResponse'] :: ReimportApiResponse -> Maybe Bool

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
[$sel:apiEndpoint:ReimportApiResponse'] :: ReimportApiResponse -> Maybe Text

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
[$sel:warnings:ReimportApiResponse'] :: ReimportApiResponse -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:ReimportApiResponse'] :: ReimportApiResponse -> Maybe POSIX

-- | The name of the API.
[$sel:name:ReimportApiResponse'] :: ReimportApiResponse -> Maybe Text

-- | A version identifier for the API.
[$sel:version:ReimportApiResponse'] :: ReimportApiResponse -> Maybe Text

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
[$sel:apiGatewayManaged:ReimportApiResponse'] :: ReimportApiResponse -> Maybe Bool

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
[$sel:apiKeySelectionExpression:ReimportApiResponse'] :: ReimportApiResponse -> Maybe Text

-- | A CORS configuration. Supported only for HTTP APIs.
[$sel:corsConfiguration:ReimportApiResponse'] :: ReimportApiResponse -> Maybe Cors

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
[$sel:routeSelectionExpression:ReimportApiResponse'] :: ReimportApiResponse -> Maybe Text

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
[$sel:importInfo:ReimportApiResponse'] :: ReimportApiResponse -> Maybe [Text]

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
[$sel:disableSchemaValidation:ReimportApiResponse'] :: ReimportApiResponse -> Maybe Bool

-- | The description of the API.
[$sel:description:ReimportApiResponse'] :: ReimportApiResponse -> Maybe Text

-- | The API protocol.
[$sel:protocolType:ReimportApiResponse'] :: ReimportApiResponse -> Maybe ProtocolType

-- | A collection of tags associated with the API.
[$sel:tags:ReimportApiResponse'] :: ReimportApiResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ReimportApiResponse'] :: ReimportApiResponse -> Int

-- | Create a value of <a>ReimportApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:ReimportApi'</a>, <a>reimportApiResponse_apiId</a> - The
--   API ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_disableExecuteApiEndpoint</a> - Specifies
--   whether clients can invoke your API by using the default execute-api
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_apiEndpoint</a> - The URI of the API, of the
--   form {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
--   
--   <a>$sel:warnings:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_warnings</a> - The warning messages reported
--   when failonwarnings is turned on during API import.
--   
--   <a>$sel:createdDate:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_createdDate</a> - The timestamp when the API
--   was created.
--   
--   <a>$sel:name:ReimportApiResponse'</a>, <a>reimportApiResponse_name</a>
--   - The name of the API.
--   
--   <a>$sel:version:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_version</a> - A version identifier for the API.
--   
--   <a>$sel:apiGatewayManaged:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_apiGatewayManaged</a> - Specifies whether an
--   API is managed by API Gateway. You can't update or delete a managed
--   API by using API Gateway. A managed API can be deleted only through
--   the tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_apiKeySelectionExpression</a> - An API key
--   selection expression. Supported only for WebSocket APIs. See <a>API
--   Key Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_corsConfiguration</a> - A CORS configuration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_routeSelectionExpression</a> - The route
--   selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
--   
--   <a>$sel:importInfo:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_importInfo</a> - The validation information
--   during API import. This may include particular properties of your
--   OpenAPI definition which are ignored during import. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:disableSchemaValidation:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_disableSchemaValidation</a> - Avoid validating
--   models when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_description</a> - The description of the API.
--   
--   <a>$sel:protocolType:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_protocolType</a> - The API protocol.
--   
--   <a>$sel:tags:ReimportApiResponse'</a>, <a>reimportApiResponse_tags</a>
--   - A collection of tags associated with the API.
--   
--   <a>$sel:httpStatus:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_httpStatus</a> - The response's http status
--   code.
newReimportApiResponse :: Int -> ReimportApiResponse

-- | The API ID.
reimportApiResponse_apiId :: Lens' ReimportApiResponse (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
reimportApiResponse_disableExecuteApiEndpoint :: Lens' ReimportApiResponse (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
reimportApiResponse_apiEndpoint :: Lens' ReimportApiResponse (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
reimportApiResponse_warnings :: Lens' ReimportApiResponse (Maybe [Text])

-- | The timestamp when the API was created.
reimportApiResponse_createdDate :: Lens' ReimportApiResponse (Maybe UTCTime)

-- | The name of the API.
reimportApiResponse_name :: Lens' ReimportApiResponse (Maybe Text)

-- | A version identifier for the API.
reimportApiResponse_version :: Lens' ReimportApiResponse (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
reimportApiResponse_apiGatewayManaged :: Lens' ReimportApiResponse (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
reimportApiResponse_apiKeySelectionExpression :: Lens' ReimportApiResponse (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
reimportApiResponse_corsConfiguration :: Lens' ReimportApiResponse (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
reimportApiResponse_routeSelectionExpression :: Lens' ReimportApiResponse (Maybe Text)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
reimportApiResponse_importInfo :: Lens' ReimportApiResponse (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
reimportApiResponse_disableSchemaValidation :: Lens' ReimportApiResponse (Maybe Bool)

-- | The description of the API.
reimportApiResponse_description :: Lens' ReimportApiResponse (Maybe Text)

-- | The API protocol.
reimportApiResponse_protocolType :: Lens' ReimportApiResponse (Maybe ProtocolType)

-- | A collection of tags associated with the API.
reimportApiResponse_tags :: Lens' ReimportApiResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
reimportApiResponse_httpStatus :: Lens' ReimportApiResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.ReimportApi.ReimportApi
instance GHC.Show.Show Network.AWS.ApiGatewayV2.ReimportApi.ReimportApi
instance GHC.Read.Read Network.AWS.ApiGatewayV2.ReimportApi.ReimportApi
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.ReimportApi.ReimportApi
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.ReimportApi.ReimportApiResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.ReimportApi.ReimportApiResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.ReimportApi.ReimportApiResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.ReimportApi.ReimportApiResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.ReimportApi.ReimportApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.ReimportApi.ReimportApiResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.ReimportApi.ReimportApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.ReimportApi.ReimportApi
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.ReimportApi.ReimportApi
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.ReimportApi.ReimportApi
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.ReimportApi.ReimportApi
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.ReimportApi.ReimportApi


-- | Imports an API.
module Network.AWS.ApiGatewayV2.ImportApi

-- | <i>See:</i> <a>newImportApi</a> smart constructor.
data ImportApi
ImportApi' :: Maybe Text -> Maybe Bool -> Text -> ImportApi

-- | Specifies how to interpret the base path of the API during import.
--   Valid values are ignore, prepend, and split. The default value is
--   ignore. To learn more, see <a>Set the OpenAPI basePath Property</a>.
--   Supported only for HTTP APIs.
[$sel:basepath:ImportApi'] :: ImportApi -> Maybe Text

-- | Specifies whether to rollback the API creation when a warning is
--   encountered. By default, API creation continues if a warning is
--   encountered.
[$sel:failOnWarnings:ImportApi'] :: ImportApi -> Maybe Bool

-- | The OpenAPI definition. Supported only for HTTP APIs.
[$sel:body:ImportApi'] :: ImportApi -> Text

-- | Create a value of <a>ImportApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:basepath:ImportApi'</a>, <a>importApi_basepath</a> - Specifies
--   how to interpret the base path of the API during import. Valid values
--   are ignore, prepend, and split. The default value is ignore. To learn
--   more, see <a>Set the OpenAPI basePath Property</a>. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:failOnWarnings:ImportApi'</a>, <a>importApi_failOnWarnings</a>
--   - Specifies whether to rollback the API creation when a warning is
--   encountered. By default, API creation continues if a warning is
--   encountered.
--   
--   <a>$sel:body:ImportApi'</a>, <a>importApi_body</a> - The OpenAPI
--   definition. Supported only for HTTP APIs.
newImportApi :: Text -> ImportApi

-- | Specifies how to interpret the base path of the API during import.
--   Valid values are ignore, prepend, and split. The default value is
--   ignore. To learn more, see <a>Set the OpenAPI basePath Property</a>.
--   Supported only for HTTP APIs.
importApi_basepath :: Lens' ImportApi (Maybe Text)

-- | Specifies whether to rollback the API creation when a warning is
--   encountered. By default, API creation continues if a warning is
--   encountered.
importApi_failOnWarnings :: Lens' ImportApi (Maybe Bool)

-- | The OpenAPI definition. Supported only for HTTP APIs.
importApi_body :: Lens' ImportApi Text

-- | <i>See:</i> <a>newImportApiResponse</a> smart constructor.
data ImportApiResponse
ImportApiResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe ProtocolType -> Maybe (HashMap Text Text) -> Int -> ImportApiResponse

-- | The API ID.
[$sel:apiId:ImportApiResponse'] :: ImportApiResponse -> Maybe Text

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
[$sel:disableExecuteApiEndpoint:ImportApiResponse'] :: ImportApiResponse -> Maybe Bool

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
[$sel:apiEndpoint:ImportApiResponse'] :: ImportApiResponse -> Maybe Text

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
[$sel:warnings:ImportApiResponse'] :: ImportApiResponse -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:ImportApiResponse'] :: ImportApiResponse -> Maybe POSIX

-- | The name of the API.
[$sel:name:ImportApiResponse'] :: ImportApiResponse -> Maybe Text

-- | A version identifier for the API.
[$sel:version:ImportApiResponse'] :: ImportApiResponse -> Maybe Text

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
[$sel:apiGatewayManaged:ImportApiResponse'] :: ImportApiResponse -> Maybe Bool

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
[$sel:apiKeySelectionExpression:ImportApiResponse'] :: ImportApiResponse -> Maybe Text

-- | A CORS configuration. Supported only for HTTP APIs.
[$sel:corsConfiguration:ImportApiResponse'] :: ImportApiResponse -> Maybe Cors

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
[$sel:routeSelectionExpression:ImportApiResponse'] :: ImportApiResponse -> Maybe Text

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
[$sel:importInfo:ImportApiResponse'] :: ImportApiResponse -> Maybe [Text]

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
[$sel:disableSchemaValidation:ImportApiResponse'] :: ImportApiResponse -> Maybe Bool

-- | The description of the API.
[$sel:description:ImportApiResponse'] :: ImportApiResponse -> Maybe Text

-- | The API protocol.
[$sel:protocolType:ImportApiResponse'] :: ImportApiResponse -> Maybe ProtocolType

-- | A collection of tags associated with the API.
[$sel:tags:ImportApiResponse'] :: ImportApiResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:ImportApiResponse'] :: ImportApiResponse -> Int

-- | Create a value of <a>ImportApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:ImportApiResponse'</a>, <a>importApiResponse_apiId</a> -
--   The API ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:ImportApiResponse'</a>,
--   <a>importApiResponse_disableExecuteApiEndpoint</a> - Specifies whether
--   clients can invoke your API by using the default execute-api endpoint.
--   By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:ImportApiResponse'</a>,
--   <a>importApiResponse_apiEndpoint</a> - The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
--   
--   <a>$sel:warnings:ImportApiResponse'</a>,
--   <a>importApiResponse_warnings</a> - The warning messages reported when
--   failonwarnings is turned on during API import.
--   
--   <a>$sel:createdDate:ImportApiResponse'</a>,
--   <a>importApiResponse_createdDate</a> - The timestamp when the API was
--   created.
--   
--   <a>$sel:name:ImportApiResponse'</a>, <a>importApiResponse_name</a> -
--   The name of the API.
--   
--   <a>$sel:version:ImportApiResponse'</a>,
--   <a>importApiResponse_version</a> - A version identifier for the API.
--   
--   <a>$sel:apiGatewayManaged:ImportApiResponse'</a>,
--   <a>importApiResponse_apiGatewayManaged</a> - Specifies whether an API
--   is managed by API Gateway. You can't update or delete a managed API by
--   using API Gateway. A managed API can be deleted only through the
--   tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:ImportApiResponse'</a>,
--   <a>importApiResponse_apiKeySelectionExpression</a> - An API key
--   selection expression. Supported only for WebSocket APIs. See <a>API
--   Key Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:ImportApiResponse'</a>,
--   <a>importApiResponse_corsConfiguration</a> - A CORS configuration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:ImportApiResponse'</a>,
--   <a>importApiResponse_routeSelectionExpression</a> - The route
--   selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
--   
--   <a>$sel:importInfo:ImportApiResponse'</a>,
--   <a>importApiResponse_importInfo</a> - The validation information
--   during API import. This may include particular properties of your
--   OpenAPI definition which are ignored during import. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:disableSchemaValidation:ImportApiResponse'</a>,
--   <a>importApiResponse_disableSchemaValidation</a> - Avoid validating
--   models when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:ImportApiResponse'</a>,
--   <a>importApiResponse_description</a> - The description of the API.
--   
--   <a>$sel:protocolType:ImportApiResponse'</a>,
--   <a>importApiResponse_protocolType</a> - The API protocol.
--   
--   <a>$sel:tags:ImportApiResponse'</a>, <a>importApiResponse_tags</a> - A
--   collection of tags associated with the API.
--   
--   <a>$sel:httpStatus:ImportApiResponse'</a>,
--   <a>importApiResponse_httpStatus</a> - The response's http status code.
newImportApiResponse :: Int -> ImportApiResponse

-- | The API ID.
importApiResponse_apiId :: Lens' ImportApiResponse (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
importApiResponse_disableExecuteApiEndpoint :: Lens' ImportApiResponse (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
importApiResponse_apiEndpoint :: Lens' ImportApiResponse (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
importApiResponse_warnings :: Lens' ImportApiResponse (Maybe [Text])

-- | The timestamp when the API was created.
importApiResponse_createdDate :: Lens' ImportApiResponse (Maybe UTCTime)

-- | The name of the API.
importApiResponse_name :: Lens' ImportApiResponse (Maybe Text)

-- | A version identifier for the API.
importApiResponse_version :: Lens' ImportApiResponse (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
importApiResponse_apiGatewayManaged :: Lens' ImportApiResponse (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
importApiResponse_apiKeySelectionExpression :: Lens' ImportApiResponse (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
importApiResponse_corsConfiguration :: Lens' ImportApiResponse (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
importApiResponse_routeSelectionExpression :: Lens' ImportApiResponse (Maybe Text)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
importApiResponse_importInfo :: Lens' ImportApiResponse (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
importApiResponse_disableSchemaValidation :: Lens' ImportApiResponse (Maybe Bool)

-- | The description of the API.
importApiResponse_description :: Lens' ImportApiResponse (Maybe Text)

-- | The API protocol.
importApiResponse_protocolType :: Lens' ImportApiResponse (Maybe ProtocolType)

-- | A collection of tags associated with the API.
importApiResponse_tags :: Lens' ImportApiResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
importApiResponse_httpStatus :: Lens' ImportApiResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.ImportApi.ImportApi
instance GHC.Show.Show Network.AWS.ApiGatewayV2.ImportApi.ImportApi
instance GHC.Read.Read Network.AWS.ApiGatewayV2.ImportApi.ImportApi
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.ImportApi.ImportApi
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.ImportApi.ImportApiResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.ImportApi.ImportApiResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.ImportApi.ImportApiResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.ImportApi.ImportApiResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.ImportApi.ImportApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.ImportApi.ImportApiResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.ImportApi.ImportApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.ImportApi.ImportApi
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.ImportApi.ImportApi
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.ImportApi.ImportApi
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.ImportApi.ImportApi
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.ImportApi.ImportApi


-- | Gets a collection of VPC links.
module Network.AWS.ApiGatewayV2.GetVpcLinks

-- | <i>See:</i> <a>newGetVpcLinks</a> smart constructor.
data GetVpcLinks
GetVpcLinks' :: Maybe Text -> Maybe Text -> GetVpcLinks

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetVpcLinks'] :: GetVpcLinks -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetVpcLinks'] :: GetVpcLinks -> Maybe Text

-- | Create a value of <a>GetVpcLinks</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetVpcLinks'</a>, <a>getVpcLinks_nextToken</a> - The
--   next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:maxResults:GetVpcLinks'</a>, <a>getVpcLinks_maxResults</a> -
--   The maximum number of elements to be returned for this resource.
newGetVpcLinks :: GetVpcLinks

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getVpcLinks_nextToken :: Lens' GetVpcLinks (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getVpcLinks_maxResults :: Lens' GetVpcLinks (Maybe Text)

-- | <i>See:</i> <a>newGetVpcLinksResponse</a> smart constructor.
data GetVpcLinksResponse
GetVpcLinksResponse' :: Maybe [VpcLink] -> Maybe Text -> Int -> GetVpcLinksResponse

-- | A collection of VPC links.
[$sel:items:GetVpcLinksResponse'] :: GetVpcLinksResponse -> Maybe [VpcLink]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetVpcLinksResponse'] :: GetVpcLinksResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetVpcLinksResponse'] :: GetVpcLinksResponse -> Int

-- | Create a value of <a>GetVpcLinksResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetVpcLinksResponse'</a>,
--   <a>getVpcLinksResponse_items</a> - A collection of VPC links.
--   
--   <a>$sel:nextToken:GetVpcLinks'</a>,
--   <a>getVpcLinksResponse_nextToken</a> - The next page of elements from
--   this collection. Not valid for the last element of the collection.
--   
--   <a>$sel:httpStatus:GetVpcLinksResponse'</a>,
--   <a>getVpcLinksResponse_httpStatus</a> - The response's http status
--   code.
newGetVpcLinksResponse :: Int -> GetVpcLinksResponse

-- | A collection of VPC links.
getVpcLinksResponse_items :: Lens' GetVpcLinksResponse (Maybe [VpcLink])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getVpcLinksResponse_nextToken :: Lens' GetVpcLinksResponse (Maybe Text)

-- | The response's http status code.
getVpcLinksResponse_httpStatus :: Lens' GetVpcLinksResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinks
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinks
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinks
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinks
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinksResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinksResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinksResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinks
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinksResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinks
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinks
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinks
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetVpcLinks.GetVpcLinks


-- | Gets a VPC link.
module Network.AWS.ApiGatewayV2.GetVpcLink

-- | <i>See:</i> <a>newGetVpcLink</a> smart constructor.
data GetVpcLink
GetVpcLink' :: Text -> GetVpcLink

-- | The ID of the VPC link.
[$sel:vpcLinkId:GetVpcLink'] :: GetVpcLink -> Text

-- | Create a value of <a>GetVpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcLinkId:GetVpcLink'</a>, <a>getVpcLink_vpcLinkId</a> - The
--   ID of the VPC link.
newGetVpcLink :: Text -> GetVpcLink

-- | The ID of the VPC link.
getVpcLink_vpcLinkId :: Lens' GetVpcLink Text

-- | <i>See:</i> <a>newGetVpcLinkResponse</a> smart constructor.
data GetVpcLinkResponse
GetVpcLinkResponse' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe VpcLinkVersion -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe VpcLinkStatus -> Int -> GetVpcLinkResponse

-- | A list of security group IDs for the VPC link.
[$sel:securityGroupIds:GetVpcLinkResponse'] :: GetVpcLinkResponse -> Maybe [Text]

-- | A list of subnet IDs to include in the VPC link.
[$sel:subnetIds:GetVpcLinkResponse'] :: GetVpcLinkResponse -> Maybe [Text]

-- | The ID of the VPC link.
[$sel:vpcLinkId:GetVpcLinkResponse'] :: GetVpcLinkResponse -> Maybe Text

-- | The timestamp when the VPC link was created.
[$sel:createdDate:GetVpcLinkResponse'] :: GetVpcLinkResponse -> Maybe POSIX

-- | The version of the VPC link.
[$sel:vpcLinkVersion:GetVpcLinkResponse'] :: GetVpcLinkResponse -> Maybe VpcLinkVersion

-- | The name of the VPC link.
[$sel:name:GetVpcLinkResponse'] :: GetVpcLinkResponse -> Maybe Text

-- | A message summarizing the cause of the status of the VPC link.
[$sel:vpcLinkStatusMessage:GetVpcLinkResponse'] :: GetVpcLinkResponse -> Maybe Text

-- | Tags for the VPC link.
[$sel:tags:GetVpcLinkResponse'] :: GetVpcLinkResponse -> Maybe (HashMap Text Text)

-- | The status of the VPC link.
[$sel:vpcLinkStatus:GetVpcLinkResponse'] :: GetVpcLinkResponse -> Maybe VpcLinkStatus

-- | The response's http status code.
[$sel:httpStatus:GetVpcLinkResponse'] :: GetVpcLinkResponse -> Int

-- | Create a value of <a>GetVpcLinkResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_securityGroupIds</a> - A list of security group
--   IDs for the VPC link.
--   
--   <a>$sel:subnetIds:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_subnetIds</a> - A list of subnet IDs to include
--   in the VPC link.
--   
--   <a>$sel:vpcLinkId:GetVpcLink'</a>, <a>getVpcLinkResponse_vpcLinkId</a>
--   - The ID of the VPC link.
--   
--   <a>$sel:createdDate:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_createdDate</a> - The timestamp when the VPC
--   link was created.
--   
--   <a>$sel:vpcLinkVersion:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_vpcLinkVersion</a> - The version of the VPC
--   link.
--   
--   <a>$sel:name:GetVpcLinkResponse'</a>, <a>getVpcLinkResponse_name</a> -
--   The name of the VPC link.
--   
--   <a>$sel:vpcLinkStatusMessage:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_vpcLinkStatusMessage</a> - A message summarizing
--   the cause of the status of the VPC link.
--   
--   <a>$sel:tags:GetVpcLinkResponse'</a>, <a>getVpcLinkResponse_tags</a> -
--   Tags for the VPC link.
--   
--   <a>$sel:vpcLinkStatus:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_vpcLinkStatus</a> - The status of the VPC link.
--   
--   <a>$sel:httpStatus:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_httpStatus</a> - The response's http status
--   code.
newGetVpcLinkResponse :: Int -> GetVpcLinkResponse

-- | A list of security group IDs for the VPC link.
getVpcLinkResponse_securityGroupIds :: Lens' GetVpcLinkResponse (Maybe [Text])

-- | A list of subnet IDs to include in the VPC link.
getVpcLinkResponse_subnetIds :: Lens' GetVpcLinkResponse (Maybe [Text])

-- | The ID of the VPC link.
getVpcLinkResponse_vpcLinkId :: Lens' GetVpcLinkResponse (Maybe Text)

-- | The timestamp when the VPC link was created.
getVpcLinkResponse_createdDate :: Lens' GetVpcLinkResponse (Maybe UTCTime)

-- | The version of the VPC link.
getVpcLinkResponse_vpcLinkVersion :: Lens' GetVpcLinkResponse (Maybe VpcLinkVersion)

-- | The name of the VPC link.
getVpcLinkResponse_name :: Lens' GetVpcLinkResponse (Maybe Text)

-- | A message summarizing the cause of the status of the VPC link.
getVpcLinkResponse_vpcLinkStatusMessage :: Lens' GetVpcLinkResponse (Maybe Text)

-- | Tags for the VPC link.
getVpcLinkResponse_tags :: Lens' GetVpcLinkResponse (Maybe (HashMap Text Text))

-- | The status of the VPC link.
getVpcLinkResponse_vpcLinkStatus :: Lens' GetVpcLinkResponse (Maybe VpcLinkStatus)

-- | The response's http status code.
getVpcLinkResponse_httpStatus :: Lens' GetVpcLinkResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLink
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLink
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLink
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLink
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLinkResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLinkResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLinkResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLinkResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLink
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLinkResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLink
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLink
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLink
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLink
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetVpcLink.GetVpcLink


-- | Gets a collection of Tag resources.
module Network.AWS.ApiGatewayV2.GetTags

-- | <i>See:</i> <a>newGetTags</a> smart constructor.
data GetTags
GetTags' :: Text -> GetTags

-- | The resource ARN for the tag.
[$sel:resourceArn:GetTags'] :: GetTags -> Text

-- | Create a value of <a>GetTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:GetTags'</a>, <a>getTags_resourceArn</a> - The
--   resource ARN for the tag.
newGetTags :: Text -> GetTags

-- | The resource ARN for the tag.
getTags_resourceArn :: Lens' GetTags Text

-- | <i>See:</i> <a>newGetTagsResponse</a> smart constructor.
data GetTagsResponse
GetTagsResponse' :: Maybe (HashMap Text Text) -> Int -> GetTagsResponse
[$sel:tags:GetTagsResponse'] :: GetTagsResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetTagsResponse'] :: GetTagsResponse -> Int

-- | Create a value of <a>GetTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:GetTagsResponse'</a>, <a>getTagsResponse_tags</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:GetTagsResponse'</a>,
--   <a>getTagsResponse_httpStatus</a> - The response's http status code.
newGetTagsResponse :: Int -> GetTagsResponse

-- | Undocumented member.
getTagsResponse_tags :: Lens' GetTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getTagsResponse_httpStatus :: Lens' GetTagsResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetTags.GetTags
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetTags.GetTags
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetTags.GetTags
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetTags.GetTags
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetTags.GetTagsResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetTags.GetTagsResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetTags.GetTagsResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetTags.GetTagsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetTags.GetTags
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetTags.GetTagsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetTags.GetTags
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetTags.GetTags
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetTags.GetTags
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetTags.GetTags
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetTags.GetTags


-- | Gets the Stages for an API.
--   
--   This operation returns paginated results.
module Network.AWS.ApiGatewayV2.GetStages

-- | <i>See:</i> <a>newGetStages</a> smart constructor.
data GetStages
GetStages' :: Maybe Text -> Maybe Text -> Text -> GetStages

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetStages'] :: GetStages -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetStages'] :: GetStages -> Maybe Text

-- | The API identifier.
[$sel:apiId:GetStages'] :: GetStages -> Text

-- | Create a value of <a>GetStages</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetStages'</a>, <a>getStages_nextToken</a> - The
--   next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:maxResults:GetStages'</a>, <a>getStages_maxResults</a> - The
--   maximum number of elements to be returned for this resource.
--   
--   <a>$sel:apiId:GetStages'</a>, <a>getStages_apiId</a> - The API
--   identifier.
newGetStages :: Text -> GetStages

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getStages_nextToken :: Lens' GetStages (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getStages_maxResults :: Lens' GetStages (Maybe Text)

-- | The API identifier.
getStages_apiId :: Lens' GetStages Text

-- | <i>See:</i> <a>newGetStagesResponse</a> smart constructor.
data GetStagesResponse
GetStagesResponse' :: Maybe [Stage] -> Maybe Text -> Int -> GetStagesResponse

-- | The elements from this collection.
[$sel:items:GetStagesResponse'] :: GetStagesResponse -> Maybe [Stage]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetStagesResponse'] :: GetStagesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetStagesResponse'] :: GetStagesResponse -> Int

-- | Create a value of <a>GetStagesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetStagesResponse'</a>, <a>getStagesResponse_items</a> -
--   The elements from this collection.
--   
--   <a>$sel:nextToken:GetStages'</a>, <a>getStagesResponse_nextToken</a> -
--   The next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:httpStatus:GetStagesResponse'</a>,
--   <a>getStagesResponse_httpStatus</a> - The response's http status code.
newGetStagesResponse :: Int -> GetStagesResponse

-- | The elements from this collection.
getStagesResponse_items :: Lens' GetStagesResponse (Maybe [Stage])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getStagesResponse_nextToken :: Lens' GetStagesResponse (Maybe Text)

-- | The response's http status code.
getStagesResponse_httpStatus :: Lens' GetStagesResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetStages.GetStages
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetStages.GetStages
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetStages.GetStages
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetStages.GetStages
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetStages.GetStagesResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetStages.GetStagesResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetStages.GetStagesResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetStages.GetStagesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetStages.GetStages
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetStages.GetStagesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApiGatewayV2.GetStages.GetStages
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetStages.GetStages
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetStages.GetStages
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetStages.GetStages
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetStages.GetStages
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetStages.GetStages


-- | Gets a Stage.
module Network.AWS.ApiGatewayV2.GetStage

-- | <i>See:</i> <a>newGetStage</a> smart constructor.
data GetStage
GetStage' :: Text -> Text -> GetStage

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
[$sel:stageName:GetStage'] :: GetStage -> Text

-- | The API identifier.
[$sel:apiId:GetStage'] :: GetStage -> Text

-- | Create a value of <a>GetStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:GetStage'</a>, <a>getStage_stageName</a> - The stage
--   name. Stage names can only contain alphanumeric characters, hyphens,
--   and underscores. Maximum length is 128 characters.
--   
--   <a>$sel:apiId:GetStage'</a>, <a>getStage_apiId</a> - The API
--   identifier.
newGetStage :: Text -> Text -> GetStage

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
getStage_stageName :: Lens' GetStage Text

-- | The API identifier.
getStage_apiId :: Lens' GetStage Text

-- | <i>See:</i> <a>newGetStageResponse</a> smart constructor.
data GetStageResponse
GetStageResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe POSIX -> Maybe RouteSettings -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetStageResponse

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
[$sel:lastDeploymentStatusMessage:GetStageResponse'] :: GetStageResponse -> Maybe Text

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
[$sel:deploymentId:GetStageResponse'] :: GetStageResponse -> Maybe Text

-- | Route settings for the stage, by routeKey.
[$sel:routeSettings:GetStageResponse'] :: GetStageResponse -> Maybe (HashMap Text RouteSettings)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:GetStageResponse'] :: GetStageResponse -> Maybe AccessLogSettings

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
[$sel:clientCertificateId:GetStageResponse'] :: GetStageResponse -> Maybe Text

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
[$sel:stageVariables:GetStageResponse'] :: GetStageResponse -> Maybe (HashMap Text Text)

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
[$sel:autoDeploy:GetStageResponse'] :: GetStageResponse -> Maybe Bool

-- | The timestamp when the stage was created.
[$sel:createdDate:GetStageResponse'] :: GetStageResponse -> Maybe POSIX

-- | Default route settings for the stage.
[$sel:defaultRouteSettings:GetStageResponse'] :: GetStageResponse -> Maybe RouteSettings

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
[$sel:apiGatewayManaged:GetStageResponse'] :: GetStageResponse -> Maybe Bool

-- | The name of the stage.
[$sel:stageName:GetStageResponse'] :: GetStageResponse -> Maybe Text

-- | The timestamp when the stage was last updated.
[$sel:lastUpdatedDate:GetStageResponse'] :: GetStageResponse -> Maybe POSIX

-- | The description of the stage.
[$sel:description:GetStageResponse'] :: GetStageResponse -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:GetStageResponse'] :: GetStageResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetStageResponse'] :: GetStageResponse -> Int

-- | Create a value of <a>GetStageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentStatusMessage:GetStageResponse'</a>,
--   <a>getStageResponse_lastDeploymentStatusMessage</a> - Describes the
--   status of the last deployment of a stage. Supported only for stages
--   with autoDeploy enabled.
--   
--   <a>$sel:deploymentId:GetStageResponse'</a>,
--   <a>getStageResponse_deploymentId</a> - The identifier of the
--   Deployment that the Stage is associated with. Can't be updated if
--   autoDeploy is enabled.
--   
--   <a>$sel:routeSettings:GetStageResponse'</a>,
--   <a>getStageResponse_routeSettings</a> - Route settings for the stage,
--   by routeKey.
--   
--   <a>$sel:accessLogSettings:GetStageResponse'</a>,
--   <a>getStageResponse_accessLogSettings</a> - Settings for logging
--   access in this stage.
--   
--   <a>$sel:clientCertificateId:GetStageResponse'</a>,
--   <a>getStageResponse_clientCertificateId</a> - The identifier of a
--   client certificate for a Stage. Supported only for WebSocket APIs.
--   
--   <a>$sel:stageVariables:GetStageResponse'</a>,
--   <a>getStageResponse_stageVariables</a> - A map that defines the stage
--   variables for a stage resource. Variable names can have alphanumeric
--   and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:GetStageResponse'</a>,
--   <a>getStageResponse_autoDeploy</a> - Specifies whether updates to an
--   API automatically trigger a new deployment. The default value is
--   false.
--   
--   <a>$sel:createdDate:GetStageResponse'</a>,
--   <a>getStageResponse_createdDate</a> - The timestamp when the stage was
--   created.
--   
--   <a>$sel:defaultRouteSettings:GetStageResponse'</a>,
--   <a>getStageResponse_defaultRouteSettings</a> - Default route settings
--   for the stage.
--   
--   <a>$sel:apiGatewayManaged:GetStageResponse'</a>,
--   <a>getStageResponse_apiGatewayManaged</a> - Specifies whether a stage
--   is managed by API Gateway. If you created an API using quick create,
--   the $default stage is managed by API Gateway. You can't modify the
--   $default stage.
--   
--   <a>$sel:stageName:GetStage'</a>, <a>getStageResponse_stageName</a> -
--   The name of the stage.
--   
--   <a>$sel:lastUpdatedDate:GetStageResponse'</a>,
--   <a>getStageResponse_lastUpdatedDate</a> - The timestamp when the stage
--   was last updated.
--   
--   <a>$sel:description:GetStageResponse'</a>,
--   <a>getStageResponse_description</a> - The description of the stage.
--   
--   <a>$sel:tags:GetStageResponse'</a>, <a>getStageResponse_tags</a> - The
--   collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:httpStatus:GetStageResponse'</a>,
--   <a>getStageResponse_httpStatus</a> - The response's http status code.
newGetStageResponse :: Int -> GetStageResponse

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
getStageResponse_lastDeploymentStatusMessage :: Lens' GetStageResponse (Maybe Text)

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
getStageResponse_deploymentId :: Lens' GetStageResponse (Maybe Text)

-- | Route settings for the stage, by routeKey.
getStageResponse_routeSettings :: Lens' GetStageResponse (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
getStageResponse_accessLogSettings :: Lens' GetStageResponse (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
getStageResponse_clientCertificateId :: Lens' GetStageResponse (Maybe Text)

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
getStageResponse_stageVariables :: Lens' GetStageResponse (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
getStageResponse_autoDeploy :: Lens' GetStageResponse (Maybe Bool)

-- | The timestamp when the stage was created.
getStageResponse_createdDate :: Lens' GetStageResponse (Maybe UTCTime)

-- | Default route settings for the stage.
getStageResponse_defaultRouteSettings :: Lens' GetStageResponse (Maybe RouteSettings)

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
getStageResponse_apiGatewayManaged :: Lens' GetStageResponse (Maybe Bool)

-- | The name of the stage.
getStageResponse_stageName :: Lens' GetStageResponse (Maybe Text)

-- | The timestamp when the stage was last updated.
getStageResponse_lastUpdatedDate :: Lens' GetStageResponse (Maybe UTCTime)

-- | The description of the stage.
getStageResponse_description :: Lens' GetStageResponse (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
getStageResponse_tags :: Lens' GetStageResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getStageResponse_httpStatus :: Lens' GetStageResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetStage.GetStage
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetStage.GetStage
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetStage.GetStage
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetStage.GetStage
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetStage.GetStageResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetStage.GetStageResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetStage.GetStageResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetStage.GetStageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetStage.GetStage
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetStage.GetStageResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetStage.GetStage
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetStage.GetStage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetStage.GetStage
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetStage.GetStage
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetStage.GetStage


-- | Gets the Routes for an API.
--   
--   This operation returns paginated results.
module Network.AWS.ApiGatewayV2.GetRoutes

-- | <i>See:</i> <a>newGetRoutes</a> smart constructor.
data GetRoutes
GetRoutes' :: Maybe Text -> Maybe Text -> Text -> GetRoutes

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetRoutes'] :: GetRoutes -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetRoutes'] :: GetRoutes -> Maybe Text

-- | The API identifier.
[$sel:apiId:GetRoutes'] :: GetRoutes -> Text

-- | Create a value of <a>GetRoutes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetRoutes'</a>, <a>getRoutes_nextToken</a> - The
--   next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:maxResults:GetRoutes'</a>, <a>getRoutes_maxResults</a> - The
--   maximum number of elements to be returned for this resource.
--   
--   <a>$sel:apiId:GetRoutes'</a>, <a>getRoutes_apiId</a> - The API
--   identifier.
newGetRoutes :: Text -> GetRoutes

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getRoutes_nextToken :: Lens' GetRoutes (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getRoutes_maxResults :: Lens' GetRoutes (Maybe Text)

-- | The API identifier.
getRoutes_apiId :: Lens' GetRoutes Text

-- | <i>See:</i> <a>newGetRoutesResponse</a> smart constructor.
data GetRoutesResponse
GetRoutesResponse' :: Maybe [Route] -> Maybe Text -> Int -> GetRoutesResponse

-- | The elements from this collection.
[$sel:items:GetRoutesResponse'] :: GetRoutesResponse -> Maybe [Route]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetRoutesResponse'] :: GetRoutesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetRoutesResponse'] :: GetRoutesResponse -> Int

-- | Create a value of <a>GetRoutesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetRoutesResponse'</a>, <a>getRoutesResponse_items</a> -
--   The elements from this collection.
--   
--   <a>$sel:nextToken:GetRoutes'</a>, <a>getRoutesResponse_nextToken</a> -
--   The next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:httpStatus:GetRoutesResponse'</a>,
--   <a>getRoutesResponse_httpStatus</a> - The response's http status code.
newGetRoutesResponse :: Int -> GetRoutesResponse

-- | The elements from this collection.
getRoutesResponse_items :: Lens' GetRoutesResponse (Maybe [Route])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getRoutesResponse_nextToken :: Lens' GetRoutesResponse (Maybe Text)

-- | The response's http status code.
getRoutesResponse_httpStatus :: Lens' GetRoutesResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetRoutes.GetRoutes
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetRoutes.GetRoutes
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetRoutes.GetRoutes
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetRoutes.GetRoutes
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetRoutes.GetRoutesResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetRoutes.GetRoutesResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetRoutes.GetRoutesResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetRoutes.GetRoutesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetRoutes.GetRoutes
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetRoutes.GetRoutesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApiGatewayV2.GetRoutes.GetRoutes
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetRoutes.GetRoutes
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetRoutes.GetRoutes
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetRoutes.GetRoutes
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetRoutes.GetRoutes
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetRoutes.GetRoutes


-- | Gets the RouteResponses for a Route.
--   
--   This operation returns paginated results.
module Network.AWS.ApiGatewayV2.GetRouteResponses

-- | <i>See:</i> <a>newGetRouteResponses</a> smart constructor.
data GetRouteResponses
GetRouteResponses' :: Maybe Text -> Maybe Text -> Text -> Text -> GetRouteResponses

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetRouteResponses'] :: GetRouteResponses -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetRouteResponses'] :: GetRouteResponses -> Maybe Text

-- | The route ID.
[$sel:routeId:GetRouteResponses'] :: GetRouteResponses -> Text

-- | The API identifier.
[$sel:apiId:GetRouteResponses'] :: GetRouteResponses -> Text

-- | Create a value of <a>GetRouteResponses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetRouteResponses'</a>,
--   <a>getRouteResponses_nextToken</a> - The next page of elements from
--   this collection. Not valid for the last element of the collection.
--   
--   <a>$sel:maxResults:GetRouteResponses'</a>,
--   <a>getRouteResponses_maxResults</a> - The maximum number of elements
--   to be returned for this resource.
--   
--   <a>$sel:routeId:GetRouteResponses'</a>,
--   <a>getRouteResponses_routeId</a> - The route ID.
--   
--   <a>$sel:apiId:GetRouteResponses'</a>, <a>getRouteResponses_apiId</a> -
--   The API identifier.
newGetRouteResponses :: Text -> Text -> GetRouteResponses

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getRouteResponses_nextToken :: Lens' GetRouteResponses (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getRouteResponses_maxResults :: Lens' GetRouteResponses (Maybe Text)

-- | The route ID.
getRouteResponses_routeId :: Lens' GetRouteResponses Text

-- | The API identifier.
getRouteResponses_apiId :: Lens' GetRouteResponses Text

-- | <i>See:</i> <a>newGetRouteResponsesResponse</a> smart constructor.
data GetRouteResponsesResponse
GetRouteResponsesResponse' :: Maybe [RouteResponse] -> Maybe Text -> Int -> GetRouteResponsesResponse

-- | The elements from this collection.
[$sel:items:GetRouteResponsesResponse'] :: GetRouteResponsesResponse -> Maybe [RouteResponse]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetRouteResponsesResponse'] :: GetRouteResponsesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetRouteResponsesResponse'] :: GetRouteResponsesResponse -> Int

-- | Create a value of <a>GetRouteResponsesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetRouteResponsesResponse'</a>,
--   <a>getRouteResponsesResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetRouteResponses'</a>,
--   <a>getRouteResponsesResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetRouteResponsesResponse'</a>,
--   <a>getRouteResponsesResponse_httpStatus</a> - The response's http
--   status code.
newGetRouteResponsesResponse :: Int -> GetRouteResponsesResponse

-- | The elements from this collection.
getRouteResponsesResponse_items :: Lens' GetRouteResponsesResponse (Maybe [RouteResponse])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getRouteResponsesResponse_nextToken :: Lens' GetRouteResponsesResponse (Maybe Text)

-- | The response's http status code.
getRouteResponsesResponse_httpStatus :: Lens' GetRouteResponsesResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponses
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponses
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponses
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponses
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponsesResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponsesResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponsesResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponsesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponses
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponsesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponses
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponses
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponses
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponses
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponses
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetRouteResponses.GetRouteResponses


-- | Gets a RouteResponse.
module Network.AWS.ApiGatewayV2.GetRouteResponse

-- | <i>See:</i> <a>newGetRouteResponse</a> smart constructor.
data GetRouteResponse
GetRouteResponse' :: Text -> Text -> Text -> GetRouteResponse

-- | The route response ID.
[$sel:routeResponseId:GetRouteResponse'] :: GetRouteResponse -> Text

-- | The API identifier.
[$sel:apiId:GetRouteResponse'] :: GetRouteResponse -> Text

-- | The route ID.
[$sel:routeId:GetRouteResponse'] :: GetRouteResponse -> Text

-- | Create a value of <a>GetRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routeResponseId:GetRouteResponse'</a>,
--   <a>getRouteResponse_routeResponseId</a> - The route response ID.
--   
--   <a>$sel:apiId:GetRouteResponse'</a>, <a>getRouteResponse_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:routeId:GetRouteResponse'</a>, <a>getRouteResponse_routeId</a>
--   - The route ID.
newGetRouteResponse :: Text -> Text -> Text -> GetRouteResponse

-- | The route response ID.
getRouteResponse_routeResponseId :: Lens' GetRouteResponse Text

-- | The API identifier.
getRouteResponse_apiId :: Lens' GetRouteResponse Text

-- | The route ID.
getRouteResponse_routeId :: Lens' GetRouteResponse Text

-- | <i>See:</i> <a>newGetRouteResponseResponse</a> smart constructor.
data GetRouteResponseResponse
GetRouteResponseResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Int -> GetRouteResponseResponse

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
[$sel:modelSelectionExpression:GetRouteResponseResponse'] :: GetRouteResponseResponse -> Maybe Text

-- | Represents the response models of a route response.
[$sel:responseModels:GetRouteResponseResponse'] :: GetRouteResponseResponse -> Maybe (HashMap Text Text)

-- | Represents the identifier of a route response.
[$sel:routeResponseId:GetRouteResponseResponse'] :: GetRouteResponseResponse -> Maybe Text

-- | Represents the route response key of a route response.
[$sel:routeResponseKey:GetRouteResponseResponse'] :: GetRouteResponseResponse -> Maybe Text

-- | Represents the response parameters of a route response.
[$sel:responseParameters:GetRouteResponseResponse'] :: GetRouteResponseResponse -> Maybe (HashMap Text ParameterConstraints)

-- | The response's http status code.
[$sel:httpStatus:GetRouteResponseResponse'] :: GetRouteResponseResponse -> Int

-- | Create a value of <a>GetRouteResponseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:GetRouteResponseResponse'</a>,
--   <a>getRouteResponseResponse_modelSelectionExpression</a> - Represents
--   the model selection expression of a route response. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:responseModels:GetRouteResponseResponse'</a>,
--   <a>getRouteResponseResponse_responseModels</a> - Represents the
--   response models of a route response.
--   
--   <a>$sel:routeResponseId:GetRouteResponse'</a>,
--   <a>getRouteResponseResponse_routeResponseId</a> - Represents the
--   identifier of a route response.
--   
--   <a>$sel:routeResponseKey:GetRouteResponseResponse'</a>,
--   <a>getRouteResponseResponse_routeResponseKey</a> - Represents the
--   route response key of a route response.
--   
--   <a>$sel:responseParameters:GetRouteResponseResponse'</a>,
--   <a>getRouteResponseResponse_responseParameters</a> - Represents the
--   response parameters of a route response.
--   
--   <a>$sel:httpStatus:GetRouteResponseResponse'</a>,
--   <a>getRouteResponseResponse_httpStatus</a> - The response's http
--   status code.
newGetRouteResponseResponse :: Int -> GetRouteResponseResponse

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
getRouteResponseResponse_modelSelectionExpression :: Lens' GetRouteResponseResponse (Maybe Text)

-- | Represents the response models of a route response.
getRouteResponseResponse_responseModels :: Lens' GetRouteResponseResponse (Maybe (HashMap Text Text))

-- | Represents the identifier of a route response.
getRouteResponseResponse_routeResponseId :: Lens' GetRouteResponseResponse (Maybe Text)

-- | Represents the route response key of a route response.
getRouteResponseResponse_routeResponseKey :: Lens' GetRouteResponseResponse (Maybe Text)

-- | Represents the response parameters of a route response.
getRouteResponseResponse_responseParameters :: Lens' GetRouteResponseResponse (Maybe (HashMap Text ParameterConstraints))

-- | The response's http status code.
getRouteResponseResponse_httpStatus :: Lens' GetRouteResponseResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponseResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponseResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponseResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponseResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponse
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponse
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponse
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetRouteResponse.GetRouteResponse


-- | Gets a Route.
module Network.AWS.ApiGatewayV2.GetRoute

-- | <i>See:</i> <a>newGetRoute</a> smart constructor.
data GetRoute
GetRoute' :: Text -> Text -> GetRoute

-- | The API identifier.
[$sel:apiId:GetRoute'] :: GetRoute -> Text

-- | The route ID.
[$sel:routeId:GetRoute'] :: GetRoute -> Text

-- | Create a value of <a>GetRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetRoute'</a>, <a>getRoute_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:routeId:GetRoute'</a>, <a>getRoute_routeId</a> - The route ID.
newGetRoute :: Text -> Text -> GetRoute

-- | The API identifier.
getRoute_apiId :: Lens' GetRoute Text

-- | The route ID.
getRoute_routeId :: Lens' GetRoute Text

-- | <i>See:</i> <a>newGetRouteResponse'</a> smart constructor.
data GetRouteResponse'
GetRouteResponse'' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Maybe Text -> Int -> GetRouteResponse'

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
[$sel:authorizationScopes:GetRouteResponse''] :: GetRouteResponse' -> Maybe [Text]

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
[$sel:modelSelectionExpression:GetRouteResponse''] :: GetRouteResponse' -> Maybe Text

-- | The request models for the route. Supported only for WebSocket APIs.
[$sel:requestModels:GetRouteResponse''] :: GetRouteResponse' -> Maybe (HashMap Text Text)

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
[$sel:routeResponseSelectionExpression:GetRouteResponse''] :: GetRouteResponse' -> Maybe Text

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
[$sel:requestParameters:GetRouteResponse''] :: GetRouteResponse' -> Maybe (HashMap Text ParameterConstraints)

-- | The route ID.
[$sel:routeId:GetRouteResponse''] :: GetRouteResponse' -> Maybe Text

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
[$sel:authorizerId:GetRouteResponse''] :: GetRouteResponse' -> Maybe Text

-- | The operation name for the route.
[$sel:operationName:GetRouteResponse''] :: GetRouteResponse' -> Maybe Text

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
[$sel:apiGatewayManaged:GetRouteResponse''] :: GetRouteResponse' -> Maybe Bool

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
[$sel:authorizationType:GetRouteResponse''] :: GetRouteResponse' -> Maybe AuthorizationType

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
[$sel:apiKeyRequired:GetRouteResponse''] :: GetRouteResponse' -> Maybe Bool

-- | The route key for the route.
[$sel:routeKey:GetRouteResponse''] :: GetRouteResponse' -> Maybe Text

-- | The target for the route.
[$sel:target:GetRouteResponse''] :: GetRouteResponse' -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetRouteResponse''] :: GetRouteResponse' -> Int

-- | Create a value of <a>GetRouteResponse'</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:GetRouteResponse''</a>,
--   <a>getRouteResponse'_authorizationScopes</a> - A list of authorization
--   scopes configured on a route. The scopes are used with a JWT
--   authorizer to authorize the method invocation. The authorization works
--   by matching the route scopes against the scopes parsed from the access
--   token in the incoming request. The method invocation is authorized if
--   any route scope matches a claimed scope in the access token.
--   Otherwise, the invocation is not authorized. When the route scope is
--   configured, the client must provide an access token instead of an
--   identity token for authorization purposes.
--   
--   <a>$sel:modelSelectionExpression:GetRouteResponse''</a>,
--   <a>getRouteResponse'_modelSelectionExpression</a> - The model
--   selection expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:GetRouteResponse''</a>,
--   <a>getRouteResponse'_requestModels</a> - The request models for the
--   route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:GetRouteResponse''</a>,
--   <a>getRouteResponse'_routeResponseSelectionExpression</a> - The route
--   response selection expression for the route. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:requestParameters:GetRouteResponse''</a>,
--   <a>getRouteResponse'_requestParameters</a> - The request parameters
--   for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeId:GetRoute'</a>, <a>getRouteResponse'_routeId</a> - The
--   route ID.
--   
--   <a>$sel:authorizerId:GetRouteResponse''</a>,
--   <a>getRouteResponse'_authorizerId</a> - The identifier of the
--   Authorizer resource to be associated with this route. The authorizer
--   identifier is generated by API Gateway when you created the
--   authorizer.
--   
--   <a>$sel:operationName:GetRouteResponse''</a>,
--   <a>getRouteResponse'_operationName</a> - The operation name for the
--   route.
--   
--   <a>$sel:apiGatewayManaged:GetRouteResponse''</a>,
--   <a>getRouteResponse'_apiGatewayManaged</a> - Specifies whether a route
--   is managed by API Gateway. If you created an API using quick create,
--   the $default route is managed by API Gateway. You can't modify the
--   $default route key.
--   
--   <a>$sel:authorizationType:GetRouteResponse''</a>,
--   <a>getRouteResponse'_authorizationType</a> - The authorization type
--   for the route. For WebSocket APIs, valid values are NONE for open
--   access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a
--   Lambda authorizer For HTTP APIs, valid values are NONE for open
--   access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM
--   permissions, and CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:GetRouteResponse''</a>,
--   <a>getRouteResponse'_apiKeyRequired</a> - Specifies whether an API key
--   is required for this route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeKey:GetRouteResponse''</a>,
--   <a>getRouteResponse'_routeKey</a> - The route key for the route.
--   
--   <a>$sel:target:GetRouteResponse''</a>, <a>getRouteResponse'_target</a>
--   - The target for the route.
--   
--   <a>$sel:httpStatus:GetRouteResponse''</a>,
--   <a>getRouteResponse'_httpStatus</a> - The response's http status code.
newGetRouteResponse' :: Int -> GetRouteResponse'

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
getRouteResponse'_authorizationScopes :: Lens' GetRouteResponse' (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
getRouteResponse'_modelSelectionExpression :: Lens' GetRouteResponse' (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
getRouteResponse'_requestModels :: Lens' GetRouteResponse' (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
getRouteResponse'_routeResponseSelectionExpression :: Lens' GetRouteResponse' (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
getRouteResponse'_requestParameters :: Lens' GetRouteResponse' (Maybe (HashMap Text ParameterConstraints))

-- | The route ID.
getRouteResponse'_routeId :: Lens' GetRouteResponse' (Maybe Text)

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
getRouteResponse'_authorizerId :: Lens' GetRouteResponse' (Maybe Text)

-- | The operation name for the route.
getRouteResponse'_operationName :: Lens' GetRouteResponse' (Maybe Text)

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
getRouteResponse'_apiGatewayManaged :: Lens' GetRouteResponse' (Maybe Bool)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
getRouteResponse'_authorizationType :: Lens' GetRouteResponse' (Maybe AuthorizationType)

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
getRouteResponse'_apiKeyRequired :: Lens' GetRouteResponse' (Maybe Bool)

-- | The route key for the route.
getRouteResponse'_routeKey :: Lens' GetRouteResponse' (Maybe Text)

-- | The target for the route.
getRouteResponse'_target :: Lens' GetRouteResponse' (Maybe Text)

-- | The response's http status code.
getRouteResponse'_httpStatus :: Lens' GetRouteResponse' Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetRoute.GetRoute
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetRoute.GetRoute
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetRoute.GetRoute
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetRoute.GetRoute
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetRoute.GetRouteResponse'
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetRoute.GetRouteResponse'
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetRoute.GetRouteResponse'
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetRoute.GetRouteResponse'
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetRoute.GetRoute
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetRoute.GetRouteResponse'
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetRoute.GetRoute
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetRoute.GetRoute
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetRoute.GetRoute
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetRoute.GetRoute
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetRoute.GetRoute


-- | Gets the Models for an API.
--   
--   This operation returns paginated results.
module Network.AWS.ApiGatewayV2.GetModels

-- | <i>See:</i> <a>newGetModels</a> smart constructor.
data GetModels
GetModels' :: Maybe Text -> Maybe Text -> Text -> GetModels

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetModels'] :: GetModels -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetModels'] :: GetModels -> Maybe Text

-- | The API identifier.
[$sel:apiId:GetModels'] :: GetModels -> Text

-- | Create a value of <a>GetModels</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetModels'</a>, <a>getModels_nextToken</a> - The
--   next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:maxResults:GetModels'</a>, <a>getModels_maxResults</a> - The
--   maximum number of elements to be returned for this resource.
--   
--   <a>$sel:apiId:GetModels'</a>, <a>getModels_apiId</a> - The API
--   identifier.
newGetModels :: Text -> GetModels

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getModels_nextToken :: Lens' GetModels (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getModels_maxResults :: Lens' GetModels (Maybe Text)

-- | The API identifier.
getModels_apiId :: Lens' GetModels Text

-- | <i>See:</i> <a>newGetModelsResponse</a> smart constructor.
data GetModelsResponse
GetModelsResponse' :: Maybe [Model] -> Maybe Text -> Int -> GetModelsResponse

-- | The elements from this collection.
[$sel:items:GetModelsResponse'] :: GetModelsResponse -> Maybe [Model]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetModelsResponse'] :: GetModelsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetModelsResponse'] :: GetModelsResponse -> Int

-- | Create a value of <a>GetModelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetModelsResponse'</a>, <a>getModelsResponse_items</a> -
--   The elements from this collection.
--   
--   <a>$sel:nextToken:GetModels'</a>, <a>getModelsResponse_nextToken</a> -
--   The next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:httpStatus:GetModelsResponse'</a>,
--   <a>getModelsResponse_httpStatus</a> - The response's http status code.
newGetModelsResponse :: Int -> GetModelsResponse

-- | The elements from this collection.
getModelsResponse_items :: Lens' GetModelsResponse (Maybe [Model])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getModelsResponse_nextToken :: Lens' GetModelsResponse (Maybe Text)

-- | The response's http status code.
getModelsResponse_httpStatus :: Lens' GetModelsResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetModels.GetModels
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetModels.GetModels
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetModels.GetModels
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetModels.GetModels
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetModels.GetModelsResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetModels.GetModelsResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetModels.GetModelsResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetModels.GetModelsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetModels.GetModels
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetModels.GetModelsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApiGatewayV2.GetModels.GetModels
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetModels.GetModels
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetModels.GetModels
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetModels.GetModels
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetModels.GetModels
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetModels.GetModels


-- | Gets a model template.
module Network.AWS.ApiGatewayV2.GetModelTemplate

-- | <i>See:</i> <a>newGetModelTemplate</a> smart constructor.
data GetModelTemplate
GetModelTemplate' :: Text -> Text -> GetModelTemplate

-- | The model ID.
[$sel:modelId:GetModelTemplate'] :: GetModelTemplate -> Text

-- | The API identifier.
[$sel:apiId:GetModelTemplate'] :: GetModelTemplate -> Text

-- | Create a value of <a>GetModelTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:GetModelTemplate'</a>, <a>getModelTemplate_modelId</a>
--   - The model ID.
--   
--   <a>$sel:apiId:GetModelTemplate'</a>, <a>getModelTemplate_apiId</a> -
--   The API identifier.
newGetModelTemplate :: Text -> Text -> GetModelTemplate

-- | The model ID.
getModelTemplate_modelId :: Lens' GetModelTemplate Text

-- | The API identifier.
getModelTemplate_apiId :: Lens' GetModelTemplate Text

-- | <i>See:</i> <a>newGetModelTemplateResponse</a> smart constructor.
data GetModelTemplateResponse
GetModelTemplateResponse' :: Maybe Text -> Int -> GetModelTemplateResponse

-- | The template value.
[$sel:value:GetModelTemplateResponse'] :: GetModelTemplateResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetModelTemplateResponse'] :: GetModelTemplateResponse -> Int

-- | Create a value of <a>GetModelTemplateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:GetModelTemplateResponse'</a>,
--   <a>getModelTemplateResponse_value</a> - The template value.
--   
--   <a>$sel:httpStatus:GetModelTemplateResponse'</a>,
--   <a>getModelTemplateResponse_httpStatus</a> - The response's http
--   status code.
newGetModelTemplateResponse :: Int -> GetModelTemplateResponse

-- | The template value.
getModelTemplateResponse_value :: Lens' GetModelTemplateResponse (Maybe Text)

-- | The response's http status code.
getModelTemplateResponse_httpStatus :: Lens' GetModelTemplateResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplate
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplate
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplate
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplate
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplateResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplateResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplateResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplateResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplate
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplateResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplate
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplate
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplate
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplate
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetModelTemplate.GetModelTemplate


-- | Gets a Model.
module Network.AWS.ApiGatewayV2.GetModel

-- | <i>See:</i> <a>newGetModel</a> smart constructor.
data GetModel
GetModel' :: Text -> Text -> GetModel

-- | The model ID.
[$sel:modelId:GetModel'] :: GetModel -> Text

-- | The API identifier.
[$sel:apiId:GetModel'] :: GetModel -> Text

-- | Create a value of <a>GetModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:GetModel'</a>, <a>getModel_modelId</a> - The model ID.
--   
--   <a>$sel:apiId:GetModel'</a>, <a>getModel_apiId</a> - The API
--   identifier.
newGetModel :: Text -> Text -> GetModel

-- | The model ID.
getModel_modelId :: Lens' GetModel Text

-- | The API identifier.
getModel_apiId :: Lens' GetModel Text

-- | <i>See:</i> <a>newGetModelResponse</a> smart constructor.
data GetModelResponse
GetModelResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetModelResponse

-- | The model identifier.
[$sel:modelId:GetModelResponse'] :: GetModelResponse -> Maybe Text

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
[$sel:schema:GetModelResponse'] :: GetModelResponse -> Maybe Text

-- | The name of the model. Must be alphanumeric.
[$sel:name:GetModelResponse'] :: GetModelResponse -> Maybe Text

-- | The description of the model.
[$sel:description:GetModelResponse'] :: GetModelResponse -> Maybe Text

-- | The content-type for the model, for example, "application/json".
[$sel:contentType:GetModelResponse'] :: GetModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetModelResponse'] :: GetModelResponse -> Int

-- | Create a value of <a>GetModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:GetModel'</a>, <a>getModelResponse_modelId</a> - The
--   model identifier.
--   
--   <a>$sel:schema:GetModelResponse'</a>, <a>getModelResponse_schema</a> -
--   The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
--   
--   <a>$sel:name:GetModelResponse'</a>, <a>getModelResponse_name</a> - The
--   name of the model. Must be alphanumeric.
--   
--   <a>$sel:description:GetModelResponse'</a>,
--   <a>getModelResponse_description</a> - The description of the model.
--   
--   <a>$sel:contentType:GetModelResponse'</a>,
--   <a>getModelResponse_contentType</a> - The content-type for the model,
--   for example, "application/json".
--   
--   <a>$sel:httpStatus:GetModelResponse'</a>,
--   <a>getModelResponse_httpStatus</a> - The response's http status code.
newGetModelResponse :: Int -> GetModelResponse

-- | The model identifier.
getModelResponse_modelId :: Lens' GetModelResponse (Maybe Text)

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
getModelResponse_schema :: Lens' GetModelResponse (Maybe Text)

-- | The name of the model. Must be alphanumeric.
getModelResponse_name :: Lens' GetModelResponse (Maybe Text)

-- | The description of the model.
getModelResponse_description :: Lens' GetModelResponse (Maybe Text)

-- | The content-type for the model, for example, "application/json".
getModelResponse_contentType :: Lens' GetModelResponse (Maybe Text)

-- | The response's http status code.
getModelResponse_httpStatus :: Lens' GetModelResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetModel.GetModel
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetModel.GetModel
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetModel.GetModel
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetModel.GetModel
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetModel.GetModelResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetModel.GetModelResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetModel.GetModelResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetModel.GetModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetModel.GetModel
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetModel.GetModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetModel.GetModel
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetModel.GetModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetModel.GetModel
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetModel.GetModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetModel.GetModel


-- | Gets the Integrations for an API.
--   
--   This operation returns paginated results.
module Network.AWS.ApiGatewayV2.GetIntegrations

-- | <i>See:</i> <a>newGetIntegrations</a> smart constructor.
data GetIntegrations
GetIntegrations' :: Maybe Text -> Maybe Text -> Text -> GetIntegrations

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetIntegrations'] :: GetIntegrations -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetIntegrations'] :: GetIntegrations -> Maybe Text

-- | The API identifier.
[$sel:apiId:GetIntegrations'] :: GetIntegrations -> Text

-- | Create a value of <a>GetIntegrations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetIntegrations'</a>,
--   <a>getIntegrations_nextToken</a> - The next page of elements from this
--   collection. Not valid for the last element of the collection.
--   
--   <a>$sel:maxResults:GetIntegrations'</a>,
--   <a>getIntegrations_maxResults</a> - The maximum number of elements to
--   be returned for this resource.
--   
--   <a>$sel:apiId:GetIntegrations'</a>, <a>getIntegrations_apiId</a> - The
--   API identifier.
newGetIntegrations :: Text -> GetIntegrations

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getIntegrations_nextToken :: Lens' GetIntegrations (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getIntegrations_maxResults :: Lens' GetIntegrations (Maybe Text)

-- | The API identifier.
getIntegrations_apiId :: Lens' GetIntegrations Text

-- | <i>See:</i> <a>newGetIntegrationsResponse</a> smart constructor.
data GetIntegrationsResponse
GetIntegrationsResponse' :: Maybe [Integration] -> Maybe Text -> Int -> GetIntegrationsResponse

-- | The elements from this collection.
[$sel:items:GetIntegrationsResponse'] :: GetIntegrationsResponse -> Maybe [Integration]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetIntegrationsResponse'] :: GetIntegrationsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetIntegrationsResponse'] :: GetIntegrationsResponse -> Int

-- | Create a value of <a>GetIntegrationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetIntegrationsResponse'</a>,
--   <a>getIntegrationsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetIntegrations'</a>,
--   <a>getIntegrationsResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetIntegrationsResponse'</a>,
--   <a>getIntegrationsResponse_httpStatus</a> - The response's http status
--   code.
newGetIntegrationsResponse :: Int -> GetIntegrationsResponse

-- | The elements from this collection.
getIntegrationsResponse_items :: Lens' GetIntegrationsResponse (Maybe [Integration])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getIntegrationsResponse_nextToken :: Lens' GetIntegrationsResponse (Maybe Text)

-- | The response's http status code.
getIntegrationsResponse_httpStatus :: Lens' GetIntegrationsResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrations
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrations
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrations
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrations
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrationsResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrationsResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrationsResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrations
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrationsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrations
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrations
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrations
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrations
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrations
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetIntegrations.GetIntegrations


-- | Gets the IntegrationResponses for an Integration.
--   
--   This operation returns paginated results.
module Network.AWS.ApiGatewayV2.GetIntegrationResponses

-- | <i>See:</i> <a>newGetIntegrationResponses</a> smart constructor.
data GetIntegrationResponses
GetIntegrationResponses' :: Maybe Text -> Maybe Text -> Text -> Text -> GetIntegrationResponses

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetIntegrationResponses'] :: GetIntegrationResponses -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetIntegrationResponses'] :: GetIntegrationResponses -> Maybe Text

-- | The integration ID.
[$sel:integrationId:GetIntegrationResponses'] :: GetIntegrationResponses -> Text

-- | The API identifier.
[$sel:apiId:GetIntegrationResponses'] :: GetIntegrationResponses -> Text

-- | Create a value of <a>GetIntegrationResponses</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetIntegrationResponses'</a>,
--   <a>getIntegrationResponses_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:maxResults:GetIntegrationResponses'</a>,
--   <a>getIntegrationResponses_maxResults</a> - The maximum number of
--   elements to be returned for this resource.
--   
--   <a>$sel:integrationId:GetIntegrationResponses'</a>,
--   <a>getIntegrationResponses_integrationId</a> - The integration ID.
--   
--   <a>$sel:apiId:GetIntegrationResponses'</a>,
--   <a>getIntegrationResponses_apiId</a> - The API identifier.
newGetIntegrationResponses :: Text -> Text -> GetIntegrationResponses

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getIntegrationResponses_nextToken :: Lens' GetIntegrationResponses (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getIntegrationResponses_maxResults :: Lens' GetIntegrationResponses (Maybe Text)

-- | The integration ID.
getIntegrationResponses_integrationId :: Lens' GetIntegrationResponses Text

-- | The API identifier.
getIntegrationResponses_apiId :: Lens' GetIntegrationResponses Text

-- | <i>See:</i> <a>newGetIntegrationResponsesResponse</a> smart
--   constructor.
data GetIntegrationResponsesResponse
GetIntegrationResponsesResponse' :: Maybe [IntegrationResponse] -> Maybe Text -> Int -> GetIntegrationResponsesResponse

-- | The elements from this collection.
[$sel:items:GetIntegrationResponsesResponse'] :: GetIntegrationResponsesResponse -> Maybe [IntegrationResponse]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetIntegrationResponsesResponse'] :: GetIntegrationResponsesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetIntegrationResponsesResponse'] :: GetIntegrationResponsesResponse -> Int

-- | Create a value of <a>GetIntegrationResponsesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetIntegrationResponsesResponse'</a>,
--   <a>getIntegrationResponsesResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetIntegrationResponses'</a>,
--   <a>getIntegrationResponsesResponse_nextToken</a> - The next page of
--   elements from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetIntegrationResponsesResponse'</a>,
--   <a>getIntegrationResponsesResponse_httpStatus</a> - The response's
--   http status code.
newGetIntegrationResponsesResponse :: Int -> GetIntegrationResponsesResponse

-- | The elements from this collection.
getIntegrationResponsesResponse_items :: Lens' GetIntegrationResponsesResponse (Maybe [IntegrationResponse])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getIntegrationResponsesResponse_nextToken :: Lens' GetIntegrationResponsesResponse (Maybe Text)

-- | The response's http status code.
getIntegrationResponsesResponse_httpStatus :: Lens' GetIntegrationResponsesResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponses
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponses
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponses
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponses
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponsesResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponsesResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponsesResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponsesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponses
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponsesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponses
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponses
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponses
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponses
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponses
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetIntegrationResponses.GetIntegrationResponses


-- | Gets an IntegrationResponses.
module Network.AWS.ApiGatewayV2.GetIntegrationResponse

-- | <i>See:</i> <a>newGetIntegrationResponse</a> smart constructor.
data GetIntegrationResponse
GetIntegrationResponse' :: Text -> Text -> Text -> GetIntegrationResponse

-- | The API identifier.
[$sel:apiId:GetIntegrationResponse'] :: GetIntegrationResponse -> Text

-- | The integration response ID.
[$sel:integrationResponseId:GetIntegrationResponse'] :: GetIntegrationResponse -> Text

-- | The integration ID.
[$sel:integrationId:GetIntegrationResponse'] :: GetIntegrationResponse -> Text

-- | Create a value of <a>GetIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:integrationResponseId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_integrationResponseId</a> - The integration
--   response ID.
--   
--   <a>$sel:integrationId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_integrationId</a> - The integration ID.
newGetIntegrationResponse :: Text -> Text -> Text -> GetIntegrationResponse

-- | The API identifier.
getIntegrationResponse_apiId :: Lens' GetIntegrationResponse Text

-- | The integration response ID.
getIntegrationResponse_integrationResponseId :: Lens' GetIntegrationResponse Text

-- | The integration ID.
getIntegrationResponse_integrationId :: Lens' GetIntegrationResponse Text

-- | <i>See:</i> <a>newGetIntegrationResponseResponse</a> smart
--   constructor.
data GetIntegrationResponseResponse
GetIntegrationResponseResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Int -> GetIntegrationResponseResponse

-- | The integration response ID.
[$sel:integrationResponseId:GetIntegrationResponseResponse'] :: GetIntegrationResponseResponse -> Maybe Text

-- | The integration response key.
[$sel:integrationResponseKey:GetIntegrationResponseResponse'] :: GetIntegrationResponseResponse -> Maybe Text

-- | The template selection expressions for the integration response.
[$sel:templateSelectionExpression:GetIntegrationResponseResponse'] :: GetIntegrationResponseResponse -> Maybe Text

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:GetIntegrationResponseResponse'] :: GetIntegrationResponseResponse -> Maybe ContentHandlingStrategy

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
[$sel:responseTemplates:GetIntegrationResponseResponse'] :: GetIntegrationResponseResponse -> Maybe (HashMap Text Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
[$sel:responseParameters:GetIntegrationResponseResponse'] :: GetIntegrationResponseResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetIntegrationResponseResponse'] :: GetIntegrationResponseResponse -> Int

-- | Create a value of <a>GetIntegrationResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponseResponse_integrationResponseId</a> - The
--   integration response ID.
--   
--   <a>$sel:integrationResponseKey:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_integrationResponseKey</a> - The
--   integration response key.
--   
--   
--   <a>$sel:templateSelectionExpression:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_templateSelectionExpression</a> -
--   The template selection expressions for the integration response.
--   
--   <a>$sel:contentHandlingStrategy:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_contentHandlingStrategy</a> -
--   Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_responseTemplates</a> - The
--   collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
--   
--   <a>$sel:responseParameters:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_responseParameters</a> - A key-value
--   map specifying response parameters that are passed to the method
--   response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:httpStatus:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_httpStatus</a> - The response's http
--   status code.
newGetIntegrationResponseResponse :: Int -> GetIntegrationResponseResponse

-- | The integration response ID.
getIntegrationResponseResponse_integrationResponseId :: Lens' GetIntegrationResponseResponse (Maybe Text)

-- | The integration response key.
getIntegrationResponseResponse_integrationResponseKey :: Lens' GetIntegrationResponseResponse (Maybe Text)

-- | The template selection expressions for the integration response.
getIntegrationResponseResponse_templateSelectionExpression :: Lens' GetIntegrationResponseResponse (Maybe Text)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
getIntegrationResponseResponse_contentHandlingStrategy :: Lens' GetIntegrationResponseResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
getIntegrationResponseResponse_responseTemplates :: Lens' GetIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
getIntegrationResponseResponse_responseParameters :: Lens' GetIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getIntegrationResponseResponse_httpStatus :: Lens' GetIntegrationResponseResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponseResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponseResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponseResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponseResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponse
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponse
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponse
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetIntegrationResponse.GetIntegrationResponse


-- | Gets an Integration.
module Network.AWS.ApiGatewayV2.GetIntegration

-- | <i>See:</i> <a>newGetIntegration</a> smart constructor.
data GetIntegration
GetIntegration' :: Text -> Text -> GetIntegration

-- | The API identifier.
[$sel:apiId:GetIntegration'] :: GetIntegration -> Text

-- | The integration ID.
[$sel:integrationId:GetIntegration'] :: GetIntegration -> Text

-- | Create a value of <a>GetIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetIntegration'</a>, <a>getIntegration_apiId</a> - The
--   API identifier.
--   
--   <a>$sel:integrationId:GetIntegration'</a>,
--   <a>getIntegration_integrationId</a> - The integration ID.
newGetIntegration :: Text -> Text -> GetIntegration

-- | The API identifier.
getIntegration_apiId :: Lens' GetIntegration Text

-- | The integration ID.
getIntegration_integrationId :: Lens' GetIntegration Text

-- | <i>See:</i> <a>newGetIntegrationResponse'</a> smart constructor.
data GetIntegrationResponse'
GetIntegrationResponse'' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfig -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Bool -> Maybe ContentHandlingStrategy -> Maybe IntegrationType -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Int -> GetIntegrationResponse'

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
[$sel:integrationResponseSelectionExpression:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Text

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
[$sel:requestTemplates:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe (HashMap Text Text)

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
[$sel:integrationSubtype:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Text

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentialsArn:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Text

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
[$sel:integrationUri:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Text

-- | Represents the identifier of an integration.
[$sel:integrationId:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Text

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
[$sel:requestParameters:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe (HashMap Text Text)

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
[$sel:connectionId:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Text

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
[$sel:passthroughBehavior:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe PassthroughBehavior

-- | Specifies the integration's HTTP method type.
[$sel:integrationMethod:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Text

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
[$sel:tlsConfig:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe TlsConfig

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
[$sel:payloadFormatVersion:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Text

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
[$sel:templateSelectionExpression:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
[$sel:timeoutInMillis:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Natural

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
[$sel:apiGatewayManaged:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Bool

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe ContentHandlingStrategy

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
[$sel:integrationType:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe IntegrationType

-- | Represents the description of an integration.
[$sel:description:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe Text

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
[$sel:connectionType:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe ConnectionType

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
[$sel:responseParameters:GetIntegrationResponse''] :: GetIntegrationResponse' -> Maybe (HashMap Text (HashMap Text Text))

-- | The response's http status code.
[$sel:httpStatus:GetIntegrationResponse''] :: GetIntegrationResponse' -> Int

-- | Create a value of <a>GetIntegrationResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:integrationResponseSelectionExpression:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_integrationResponseSelectionExpression</a>
--   - The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
--   
--   <a>$sel:requestTemplates:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_requestTemplates</a> - Represents a map of
--   Velocity templates that are applied on the request payload based on
--   the value of the Content-Type header sent by the client. The content
--   type value is the key in this map, and the template (as a String) is
--   the value. Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_integrationSubtype</a> - Supported only for
--   HTTP API AWS_PROXY integrations. Specifies the AWS service action to
--   invoke. To learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_credentialsArn</a> - Specifies the
--   credentials required for the integration, if any. For AWS
--   integrations, three options are available. To specify an IAM Role for
--   API Gateway to assume, use the role's Amazon Resource Name (ARN). To
--   require that the caller's identity be passed through from the request,
--   specify the string arn:aws:iam::*:user/*. To use resource-based
--   permissions on supported AWS services, specify null.
--   
--   <a>$sel:integrationUri:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_integrationUri</a> - For a Lambda
--   integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:integrationId:GetIntegration'</a>,
--   <a>getIntegrationResponse'_integrationId</a> - Represents the
--   identifier of an integration.
--   
--   <a>$sel:requestParameters:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_requestParameters</a> - For WebSocket APIs,
--   a key-value map specifying request parameters that are passed from the
--   method request to the backend. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the backend. The method request parameter
--   value must match the pattern of method.request.{location}.{name} ,
--   where {location} is querystring, path, or header; and {name} must be a
--   valid and unique method request parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_connectionId</a> - The ID of the VPC link
--   for a private integration. Supported only for HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_passthroughBehavior</a> - Specifies the
--   pass-through behavior for incoming requests based on the Content-Type
--   header in the request, and the available mapping templates specified
--   as the requestTemplates property on the Integration resource. There
--   are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.
--   Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_integrationMethod</a> - Specifies the
--   integration's HTTP method type.
--   
--   <a>$sel:tlsConfig:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_tlsConfig</a> - The TLS configuration for a
--   private integration. If you specify a TLS configuration, private
--   integration traffic uses the HTTPS protocol. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:payloadFormatVersion:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_payloadFormatVersion</a> - Specifies the
--   format of the payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_templateSelectionExpression</a> - The
--   template selection expression for the integration. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:timeoutInMillis:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_timeoutInMillis</a> - Custom timeout
--   between 50 and 29,000 milliseconds for WebSocket APIs and between 50
--   and 30,000 milliseconds for HTTP APIs. The default timeout is 29
--   seconds for WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:apiGatewayManaged:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_apiGatewayManaged</a> - Specifies whether
--   an integration is managed by API Gateway. If you created an API using
--   using quick create, the resulting integration is managed by API
--   Gateway. You can update a managed integration, but you can't delete
--   it.
--   
--   <a>$sel:contentHandlingStrategy:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_contentHandlingStrategy</a> - Supported
--   only for WebSocket APIs. Specifies how to handle response payload
--   content type conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:integrationType:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_integrationType</a> - The integration type
--   of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:description:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_description</a> - Represents the
--   description of an integration.
--   
--   <a>$sel:connectionType:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_connectionType</a> - The type of the
--   network connection to the integration endpoint. Specify INTERNET for
--   connections through the public routable internet or VPC_LINK for
--   private connections between API Gateway and resources in a VPC. The
--   default value is INTERNET.
--   
--   <a>$sel:responseParameters:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_responseParameters</a> - Supported only for
--   HTTP APIs. You use response parameters to transform the HTTP response
--   from a backend integration before returning the response to clients.
--   Specify a key-value map from a selection key to response parameters.
--   The selection key must be a valid HTTP status code within the range of
--   200-599. Response parameters are a key-value map. The key must match
--   pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:httpStatus:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_httpStatus</a> - The response's http status
--   code.
newGetIntegrationResponse' :: Int -> GetIntegrationResponse'

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
getIntegrationResponse'_integrationResponseSelectionExpression :: Lens' GetIntegrationResponse' (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
getIntegrationResponse'_requestTemplates :: Lens' GetIntegrationResponse' (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
getIntegrationResponse'_integrationSubtype :: Lens' GetIntegrationResponse' (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
getIntegrationResponse'_credentialsArn :: Lens' GetIntegrationResponse' (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
getIntegrationResponse'_integrationUri :: Lens' GetIntegrationResponse' (Maybe Text)

-- | Represents the identifier of an integration.
getIntegrationResponse'_integrationId :: Lens' GetIntegrationResponse' (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
getIntegrationResponse'_requestParameters :: Lens' GetIntegrationResponse' (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
getIntegrationResponse'_connectionId :: Lens' GetIntegrationResponse' (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
getIntegrationResponse'_passthroughBehavior :: Lens' GetIntegrationResponse' (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
getIntegrationResponse'_integrationMethod :: Lens' GetIntegrationResponse' (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
getIntegrationResponse'_tlsConfig :: Lens' GetIntegrationResponse' (Maybe TlsConfig)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
getIntegrationResponse'_payloadFormatVersion :: Lens' GetIntegrationResponse' (Maybe Text)

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
getIntegrationResponse'_templateSelectionExpression :: Lens' GetIntegrationResponse' (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
getIntegrationResponse'_timeoutInMillis :: Lens' GetIntegrationResponse' (Maybe Natural)

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
getIntegrationResponse'_apiGatewayManaged :: Lens' GetIntegrationResponse' (Maybe Bool)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
getIntegrationResponse'_contentHandlingStrategy :: Lens' GetIntegrationResponse' (Maybe ContentHandlingStrategy)

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
getIntegrationResponse'_integrationType :: Lens' GetIntegrationResponse' (Maybe IntegrationType)

-- | Represents the description of an integration.
getIntegrationResponse'_description :: Lens' GetIntegrationResponse' (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
getIntegrationResponse'_connectionType :: Lens' GetIntegrationResponse' (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
getIntegrationResponse'_responseParameters :: Lens' GetIntegrationResponse' (Maybe (HashMap Text (HashMap Text Text)))

-- | The response's http status code.
getIntegrationResponse'_httpStatus :: Lens' GetIntegrationResponse' Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetIntegration.GetIntegration
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetIntegration.GetIntegration
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetIntegration.GetIntegration
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetIntegration.GetIntegration
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetIntegration.GetIntegrationResponse'
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetIntegration.GetIntegrationResponse'
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetIntegration.GetIntegrationResponse'
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetIntegration.GetIntegrationResponse'
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetIntegration.GetIntegration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetIntegration.GetIntegrationResponse'
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetIntegration.GetIntegration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetIntegration.GetIntegration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetIntegration.GetIntegration
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetIntegration.GetIntegration
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetIntegration.GetIntegration


-- | Gets the domain names for an AWS account.
--   
--   This operation returns paginated results.
module Network.AWS.ApiGatewayV2.GetDomainNames

-- | <i>See:</i> <a>newGetDomainNames</a> smart constructor.
data GetDomainNames
GetDomainNames' :: Maybe Text -> Maybe Text -> GetDomainNames

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetDomainNames'] :: GetDomainNames -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetDomainNames'] :: GetDomainNames -> Maybe Text

-- | Create a value of <a>GetDomainNames</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDomainNames'</a>, <a>getDomainNames_nextToken</a>
--   - The next page of elements from this collection. Not valid for the
--   last element of the collection.
--   
--   <a>$sel:maxResults:GetDomainNames'</a>,
--   <a>getDomainNames_maxResults</a> - The maximum number of elements to
--   be returned for this resource.
newGetDomainNames :: GetDomainNames

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getDomainNames_nextToken :: Lens' GetDomainNames (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getDomainNames_maxResults :: Lens' GetDomainNames (Maybe Text)

-- | <i>See:</i> <a>newGetDomainNamesResponse</a> smart constructor.
data GetDomainNamesResponse
GetDomainNamesResponse' :: Maybe [DomainName] -> Maybe Text -> Int -> GetDomainNamesResponse

-- | The elements from this collection.
[$sel:items:GetDomainNamesResponse'] :: GetDomainNamesResponse -> Maybe [DomainName]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetDomainNamesResponse'] :: GetDomainNamesResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDomainNamesResponse'] :: GetDomainNamesResponse -> Int

-- | Create a value of <a>GetDomainNamesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDomainNamesResponse'</a>,
--   <a>getDomainNamesResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetDomainNames'</a>,
--   <a>getDomainNamesResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetDomainNamesResponse'</a>,
--   <a>getDomainNamesResponse_httpStatus</a> - The response's http status
--   code.
newGetDomainNamesResponse :: Int -> GetDomainNamesResponse

-- | The elements from this collection.
getDomainNamesResponse_items :: Lens' GetDomainNamesResponse (Maybe [DomainName])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getDomainNamesResponse_nextToken :: Lens' GetDomainNamesResponse (Maybe Text)

-- | The response's http status code.
getDomainNamesResponse_httpStatus :: Lens' GetDomainNamesResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNames
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNames
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNames
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNames
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNamesResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNamesResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNamesResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNamesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNames
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNamesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNames
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNames
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNames
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNames
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNames
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetDomainNames.GetDomainNames


-- | Gets a domain name.
module Network.AWS.ApiGatewayV2.GetDomainName

-- | <i>See:</i> <a>newGetDomainName</a> smart constructor.
data GetDomainName
GetDomainName' :: Text -> GetDomainName

-- | The domain name.
[$sel:domainName:GetDomainName'] :: GetDomainName -> Text

-- | Create a value of <a>GetDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:GetDomainName'</a>, <a>getDomainName_domainName</a>
--   - The domain name.
newGetDomainName :: Text -> GetDomainName

-- | The domain name.
getDomainName_domainName :: Lens' GetDomainName Text

-- | <i>See:</i> <a>newGetDomainNameResponse</a> smart constructor.
data GetDomainNameResponse
GetDomainNameResponse' :: Maybe [DomainNameConfiguration] -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetDomainNameResponse

-- | The domain name configurations.
[$sel:domainNameConfigurations:GetDomainNameResponse'] :: GetDomainNameResponse -> Maybe [DomainNameConfiguration]

-- | The name of the DomainName resource.
[$sel:domainName:GetDomainNameResponse'] :: GetDomainNameResponse -> Maybe Text

-- | The mutual TLS authentication configuration for a custom domain name.
[$sel:mutualTlsAuthentication:GetDomainNameResponse'] :: GetDomainNameResponse -> Maybe MutualTlsAuthentication

-- | The API mapping selection expression.
[$sel:apiMappingSelectionExpression:GetDomainNameResponse'] :: GetDomainNameResponse -> Maybe Text

-- | The collection of tags associated with a domain name.
[$sel:tags:GetDomainNameResponse'] :: GetDomainNameResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetDomainNameResponse'] :: GetDomainNameResponse -> Int

-- | Create a value of <a>GetDomainNameResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:GetDomainNameResponse'</a>,
--   <a>getDomainNameResponse_domainNameConfigurations</a> - The domain
--   name configurations.
--   
--   <a>$sel:domainName:GetDomainName'</a>,
--   <a>getDomainNameResponse_domainName</a> - The name of the DomainName
--   resource.
--   
--   <a>$sel:mutualTlsAuthentication:GetDomainNameResponse'</a>,
--   <a>getDomainNameResponse_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name.
--   
--   <a>$sel:apiMappingSelectionExpression:GetDomainNameResponse'</a>,
--   <a>getDomainNameResponse_apiMappingSelectionExpression</a> - The API
--   mapping selection expression.
--   
--   <a>$sel:tags:GetDomainNameResponse'</a>,
--   <a>getDomainNameResponse_tags</a> - The collection of tags associated
--   with a domain name.
--   
--   <a>$sel:httpStatus:GetDomainNameResponse'</a>,
--   <a>getDomainNameResponse_httpStatus</a> - The response's http status
--   code.
newGetDomainNameResponse :: Int -> GetDomainNameResponse

-- | The domain name configurations.
getDomainNameResponse_domainNameConfigurations :: Lens' GetDomainNameResponse (Maybe [DomainNameConfiguration])

-- | The name of the DomainName resource.
getDomainNameResponse_domainName :: Lens' GetDomainNameResponse (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
getDomainNameResponse_mutualTlsAuthentication :: Lens' GetDomainNameResponse (Maybe MutualTlsAuthentication)

-- | The API mapping selection expression.
getDomainNameResponse_apiMappingSelectionExpression :: Lens' GetDomainNameResponse (Maybe Text)

-- | The collection of tags associated with a domain name.
getDomainNameResponse_tags :: Lens' GetDomainNameResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getDomainNameResponse_httpStatus :: Lens' GetDomainNameResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetDomainName.GetDomainName
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetDomainName.GetDomainName
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetDomainName.GetDomainName
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetDomainName.GetDomainName
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetDomainName.GetDomainNameResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetDomainName.GetDomainNameResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetDomainName.GetDomainNameResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetDomainName.GetDomainNameResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetDomainName.GetDomainName
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetDomainName.GetDomainNameResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetDomainName.GetDomainName
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetDomainName.GetDomainName
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetDomainName.GetDomainName
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetDomainName.GetDomainName
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetDomainName.GetDomainName


-- | Gets the Deployments for an API.
--   
--   This operation returns paginated results.
module Network.AWS.ApiGatewayV2.GetDeployments

-- | <i>See:</i> <a>newGetDeployments</a> smart constructor.
data GetDeployments
GetDeployments' :: Maybe Text -> Maybe Text -> Text -> GetDeployments

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetDeployments'] :: GetDeployments -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetDeployments'] :: GetDeployments -> Maybe Text

-- | The API identifier.
[$sel:apiId:GetDeployments'] :: GetDeployments -> Text

-- | Create a value of <a>GetDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDeployments'</a>, <a>getDeployments_nextToken</a>
--   - The next page of elements from this collection. Not valid for the
--   last element of the collection.
--   
--   <a>$sel:maxResults:GetDeployments'</a>,
--   <a>getDeployments_maxResults</a> - The maximum number of elements to
--   be returned for this resource.
--   
--   <a>$sel:apiId:GetDeployments'</a>, <a>getDeployments_apiId</a> - The
--   API identifier.
newGetDeployments :: Text -> GetDeployments

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getDeployments_nextToken :: Lens' GetDeployments (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getDeployments_maxResults :: Lens' GetDeployments (Maybe Text)

-- | The API identifier.
getDeployments_apiId :: Lens' GetDeployments Text

-- | <i>See:</i> <a>newGetDeploymentsResponse</a> smart constructor.
data GetDeploymentsResponse
GetDeploymentsResponse' :: Maybe [Deployment] -> Maybe Text -> Int -> GetDeploymentsResponse

-- | The elements from this collection.
[$sel:items:GetDeploymentsResponse'] :: GetDeploymentsResponse -> Maybe [Deployment]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetDeploymentsResponse'] :: GetDeploymentsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDeploymentsResponse'] :: GetDeploymentsResponse -> Int

-- | Create a value of <a>GetDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDeploymentsResponse'</a>,
--   <a>getDeploymentsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetDeployments'</a>,
--   <a>getDeploymentsResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetDeploymentsResponse'</a>,
--   <a>getDeploymentsResponse_httpStatus</a> - The response's http status
--   code.
newGetDeploymentsResponse :: Int -> GetDeploymentsResponse

-- | The elements from this collection.
getDeploymentsResponse_items :: Lens' GetDeploymentsResponse (Maybe [Deployment])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getDeploymentsResponse_nextToken :: Lens' GetDeploymentsResponse (Maybe Text)

-- | The response's http status code.
getDeploymentsResponse_httpStatus :: Lens' GetDeploymentsResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetDeployments.GetDeployments
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetDeployments.GetDeployments
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetDeployments.GetDeployments
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetDeployments.GetDeployments
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetDeployments.GetDeploymentsResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetDeployments.GetDeploymentsResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetDeployments.GetDeploymentsResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetDeployments.GetDeploymentsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetDeployments.GetDeployments
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetDeployments.GetDeploymentsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApiGatewayV2.GetDeployments.GetDeployments
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetDeployments.GetDeployments
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetDeployments.GetDeployments
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetDeployments.GetDeployments
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetDeployments.GetDeployments
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetDeployments.GetDeployments


-- | Gets a Deployment.
module Network.AWS.ApiGatewayV2.GetDeployment

-- | <i>See:</i> <a>newGetDeployment</a> smart constructor.
data GetDeployment
GetDeployment' :: Text -> Text -> GetDeployment

-- | The API identifier.
[$sel:apiId:GetDeployment'] :: GetDeployment -> Text

-- | The deployment ID.
[$sel:deploymentId:GetDeployment'] :: GetDeployment -> Text

-- | Create a value of <a>GetDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetDeployment'</a>, <a>getDeployment_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:deploymentId:GetDeployment'</a>,
--   <a>getDeployment_deploymentId</a> - The deployment ID.
newGetDeployment :: Text -> Text -> GetDeployment

-- | The API identifier.
getDeployment_apiId :: Lens' GetDeployment Text

-- | The deployment ID.
getDeployment_deploymentId :: Lens' GetDeployment Text

-- | <i>See:</i> <a>newGetDeploymentResponse</a> smart constructor.
data GetDeploymentResponse
GetDeploymentResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe DeploymentStatus -> Maybe Text -> Int -> GetDeploymentResponse

-- | The identifier for the deployment.
[$sel:deploymentId:GetDeploymentResponse'] :: GetDeploymentResponse -> Maybe Text

-- | Specifies whether a deployment was automatically released.
[$sel:autoDeployed:GetDeploymentResponse'] :: GetDeploymentResponse -> Maybe Bool

-- | May contain additional feedback on the status of an API deployment.
[$sel:deploymentStatusMessage:GetDeploymentResponse'] :: GetDeploymentResponse -> Maybe Text

-- | The date and time when the Deployment resource was created.
[$sel:createdDate:GetDeploymentResponse'] :: GetDeploymentResponse -> Maybe POSIX

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
[$sel:deploymentStatus:GetDeploymentResponse'] :: GetDeploymentResponse -> Maybe DeploymentStatus

-- | The description for the deployment.
[$sel:description:GetDeploymentResponse'] :: GetDeploymentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetDeploymentResponse'] :: GetDeploymentResponse -> Int

-- | Create a value of <a>GetDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:GetDeployment'</a>,
--   <a>getDeploymentResponse_deploymentId</a> - The identifier for the
--   deployment.
--   
--   <a>$sel:autoDeployed:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_autoDeployed</a> - Specifies whether a
--   deployment was automatically released.
--   
--   <a>$sel:deploymentStatusMessage:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_deploymentStatusMessage</a> - May contain
--   additional feedback on the status of an API deployment.
--   
--   <a>$sel:createdDate:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_createdDate</a> - The date and time when the
--   Deployment resource was created.
--   
--   <a>$sel:deploymentStatus:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_deploymentStatus</a> - The status of the
--   deployment: PENDING, FAILED, or SUCCEEDED.
--   
--   <a>$sel:description:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_description</a> - The description for the
--   deployment.
--   
--   <a>$sel:httpStatus:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_httpStatus</a> - The response's http status
--   code.
newGetDeploymentResponse :: Int -> GetDeploymentResponse

-- | The identifier for the deployment.
getDeploymentResponse_deploymentId :: Lens' GetDeploymentResponse (Maybe Text)

-- | Specifies whether a deployment was automatically released.
getDeploymentResponse_autoDeployed :: Lens' GetDeploymentResponse (Maybe Bool)

-- | May contain additional feedback on the status of an API deployment.
getDeploymentResponse_deploymentStatusMessage :: Lens' GetDeploymentResponse (Maybe Text)

-- | The date and time when the Deployment resource was created.
getDeploymentResponse_createdDate :: Lens' GetDeploymentResponse (Maybe UTCTime)

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
getDeploymentResponse_deploymentStatus :: Lens' GetDeploymentResponse (Maybe DeploymentStatus)

-- | The description for the deployment.
getDeploymentResponse_description :: Lens' GetDeploymentResponse (Maybe Text)

-- | The response's http status code.
getDeploymentResponse_httpStatus :: Lens' GetDeploymentResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetDeployment.GetDeployment
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetDeployment.GetDeployment
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetDeployment.GetDeployment
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetDeployment.GetDeployment
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetDeployment.GetDeploymentResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetDeployment.GetDeploymentResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetDeployment.GetDeploymentResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetDeployment.GetDeploymentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetDeployment.GetDeployment
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetDeployment.GetDeploymentResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetDeployment.GetDeployment
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetDeployment.GetDeployment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetDeployment.GetDeployment
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetDeployment.GetDeployment
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetDeployment.GetDeployment


-- | Gets the Authorizers for an API.
--   
--   This operation returns paginated results.
module Network.AWS.ApiGatewayV2.GetAuthorizers

-- | <i>See:</i> <a>newGetAuthorizers</a> smart constructor.
data GetAuthorizers
GetAuthorizers' :: Maybe Text -> Maybe Text -> Text -> GetAuthorizers

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetAuthorizers'] :: GetAuthorizers -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetAuthorizers'] :: GetAuthorizers -> Maybe Text

-- | The API identifier.
[$sel:apiId:GetAuthorizers'] :: GetAuthorizers -> Text

-- | Create a value of <a>GetAuthorizers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAuthorizers'</a>, <a>getAuthorizers_nextToken</a>
--   - The next page of elements from this collection. Not valid for the
--   last element of the collection.
--   
--   <a>$sel:maxResults:GetAuthorizers'</a>,
--   <a>getAuthorizers_maxResults</a> - The maximum number of elements to
--   be returned for this resource.
--   
--   <a>$sel:apiId:GetAuthorizers'</a>, <a>getAuthorizers_apiId</a> - The
--   API identifier.
newGetAuthorizers :: Text -> GetAuthorizers

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getAuthorizers_nextToken :: Lens' GetAuthorizers (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getAuthorizers_maxResults :: Lens' GetAuthorizers (Maybe Text)

-- | The API identifier.
getAuthorizers_apiId :: Lens' GetAuthorizers Text

-- | <i>See:</i> <a>newGetAuthorizersResponse</a> smart constructor.
data GetAuthorizersResponse
GetAuthorizersResponse' :: Maybe [Authorizer] -> Maybe Text -> Int -> GetAuthorizersResponse

-- | The elements from this collection.
[$sel:items:GetAuthorizersResponse'] :: GetAuthorizersResponse -> Maybe [Authorizer]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetAuthorizersResponse'] :: GetAuthorizersResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAuthorizersResponse'] :: GetAuthorizersResponse -> Int

-- | Create a value of <a>GetAuthorizersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetAuthorizersResponse'</a>,
--   <a>getAuthorizersResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetAuthorizers'</a>,
--   <a>getAuthorizersResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetAuthorizersResponse'</a>,
--   <a>getAuthorizersResponse_httpStatus</a> - The response's http status
--   code.
newGetAuthorizersResponse :: Int -> GetAuthorizersResponse

-- | The elements from this collection.
getAuthorizersResponse_items :: Lens' GetAuthorizersResponse (Maybe [Authorizer])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getAuthorizersResponse_nextToken :: Lens' GetAuthorizersResponse (Maybe Text)

-- | The response's http status code.
getAuthorizersResponse_httpStatus :: Lens' GetAuthorizersResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizers
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizers
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizers
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizers
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizersResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizersResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizersResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizersResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizers
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizersResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizers
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizers
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizers
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizers
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizers
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetAuthorizers.GetAuthorizers


-- | Gets an Authorizer.
module Network.AWS.ApiGatewayV2.GetAuthorizer

-- | <i>See:</i> <a>newGetAuthorizer</a> smart constructor.
data GetAuthorizer
GetAuthorizer' :: Text -> Text -> GetAuthorizer

-- | The authorizer identifier.
[$sel:authorizerId:GetAuthorizer'] :: GetAuthorizer -> Text

-- | The API identifier.
[$sel:apiId:GetAuthorizer'] :: GetAuthorizer -> Text

-- | Create a value of <a>GetAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerId:GetAuthorizer'</a>,
--   <a>getAuthorizer_authorizerId</a> - The authorizer identifier.
--   
--   <a>$sel:apiId:GetAuthorizer'</a>, <a>getAuthorizer_apiId</a> - The API
--   identifier.
newGetAuthorizer :: Text -> Text -> GetAuthorizer

-- | The authorizer identifier.
getAuthorizer_authorizerId :: Lens' GetAuthorizer Text

-- | The API identifier.
getAuthorizer_apiId :: Lens' GetAuthorizer Text

-- | <i>See:</i> <a>newGetAuthorizerResponse</a> smart constructor.
data GetAuthorizerResponse
GetAuthorizerResponse' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe AuthorizerType -> Int -> GetAuthorizerResponse

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
[$sel:authorizerCredentialsArn:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Maybe Text

-- | The validation expression does not apply to the REQUEST authorizer.
[$sel:identityValidationExpression:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Maybe Text

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
[$sel:enableSimpleResponses:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Maybe Bool

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
[$sel:authorizerUri:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Maybe Text

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
[$sel:authorizerPayloadFormatVersion:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Maybe Text

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
[$sel:jwtConfiguration:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Maybe JWTConfiguration

-- | The authorizer identifier.
[$sel:authorizerId:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Maybe Text

-- | The name of the authorizer.
[$sel:name:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Maybe Text

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
[$sel:authorizerResultTtlInSeconds:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Maybe Natural

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
[$sel:identitySource:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Maybe [Text]

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
[$sel:authorizerType:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Maybe AuthorizerType

-- | The response's http status code.
[$sel:httpStatus:GetAuthorizerResponse'] :: GetAuthorizerResponse -> Int

-- | Create a value of <a>GetAuthorizerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_authorizerCredentialsArn</a> - Specifies the
--   required credentials as an IAM role for API Gateway to invoke the
--   authorizer. To specify an IAM role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To use resource-based permissions
--   on the Lambda function, don't specify this parameter. Supported only
--   for REQUEST authorizers.
--   
--   <a>$sel:identityValidationExpression:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_identityValidationExpression</a> - The
--   validation expression does not apply to the REQUEST authorizer.
--   
--   <a>$sel:enableSimpleResponses:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_enableSimpleResponses</a> - Specifies whether
--   a Lambda authorizer returns a response in a simple format. If enabled,
--   the Lambda authorizer can return a boolean value instead of an IAM
--   policy. Supported only for HTTP APIs. To learn more, see <a>Working
--   with AWS Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_authorizerUri</a> - The authorizer's Uniform
--   Resource Identifier (URI). For REQUEST authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_authorizerPayloadFormatVersion</a> -
--   Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
--   
--   <a>$sel:jwtConfiguration:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_jwtConfiguration</a> - Represents the
--   configuration of a JWT authorizer. Required for the JWT authorizer
--   type. Supported only for HTTP APIs.
--   
--   <a>$sel:authorizerId:GetAuthorizer'</a>,
--   <a>getAuthorizerResponse_authorizerId</a> - The authorizer identifier.
--   
--   <a>$sel:name:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_name</a> - The name of the authorizer.
--   
--   <a>$sel:authorizerResultTtlInSeconds:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_authorizerResultTtlInSeconds</a> - The time
--   to live (TTL) for cached authorizer results, in seconds. If it equals
--   0, authorization caching is disabled. If it is greater than 0, API
--   Gateway caches authorizer responses. The maximum value is 3600, or 1
--   hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:identitySource:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_identitySource</a> - The identity source for
--   which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:authorizerType:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_authorizerType</a> - The authorizer type.
--   Specify REQUEST for a Lambda function using incoming request
--   parameters. Specify JWT to use JSON Web Tokens (supported only for
--   HTTP APIs).
--   
--   <a>$sel:httpStatus:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_httpStatus</a> - The response's http status
--   code.
newGetAuthorizerResponse :: Int -> GetAuthorizerResponse

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
getAuthorizerResponse_authorizerCredentialsArn :: Lens' GetAuthorizerResponse (Maybe Text)

-- | The validation expression does not apply to the REQUEST authorizer.
getAuthorizerResponse_identityValidationExpression :: Lens' GetAuthorizerResponse (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
getAuthorizerResponse_enableSimpleResponses :: Lens' GetAuthorizerResponse (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
getAuthorizerResponse_authorizerUri :: Lens' GetAuthorizerResponse (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
getAuthorizerResponse_authorizerPayloadFormatVersion :: Lens' GetAuthorizerResponse (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
getAuthorizerResponse_jwtConfiguration :: Lens' GetAuthorizerResponse (Maybe JWTConfiguration)

-- | The authorizer identifier.
getAuthorizerResponse_authorizerId :: Lens' GetAuthorizerResponse (Maybe Text)

-- | The name of the authorizer.
getAuthorizerResponse_name :: Lens' GetAuthorizerResponse (Maybe Text)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
getAuthorizerResponse_authorizerResultTtlInSeconds :: Lens' GetAuthorizerResponse (Maybe Natural)

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
getAuthorizerResponse_identitySource :: Lens' GetAuthorizerResponse (Maybe [Text])

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
getAuthorizerResponse_authorizerType :: Lens' GetAuthorizerResponse (Maybe AuthorizerType)

-- | The response's http status code.
getAuthorizerResponse_httpStatus :: Lens' GetAuthorizerResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizer
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizer
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizer
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizer
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizerResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizerResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizerResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizer
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizerResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizer
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizer
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizer
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetAuthorizer.GetAuthorizer


-- | Gets a collection of Api resources.
--   
--   This operation returns paginated results.
module Network.AWS.ApiGatewayV2.GetApis

-- | <i>See:</i> <a>newGetApis</a> smart constructor.
data GetApis
GetApis' :: Maybe Text -> Maybe Text -> GetApis

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetApis'] :: GetApis -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetApis'] :: GetApis -> Maybe Text

-- | Create a value of <a>GetApis</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetApis'</a>, <a>getApis_nextToken</a> - The next
--   page of elements from this collection. Not valid for the last element
--   of the collection.
--   
--   <a>$sel:maxResults:GetApis'</a>, <a>getApis_maxResults</a> - The
--   maximum number of elements to be returned for this resource.
newGetApis :: GetApis

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getApis_nextToken :: Lens' GetApis (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getApis_maxResults :: Lens' GetApis (Maybe Text)

-- | <i>See:</i> <a>newGetApisResponse</a> smart constructor.
data GetApisResponse
GetApisResponse' :: Maybe [Api] -> Maybe Text -> Int -> GetApisResponse

-- | The elements from this collection.
[$sel:items:GetApisResponse'] :: GetApisResponse -> Maybe [Api]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetApisResponse'] :: GetApisResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetApisResponse'] :: GetApisResponse -> Int

-- | Create a value of <a>GetApisResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetApisResponse'</a>, <a>getApisResponse_items</a> - The
--   elements from this collection.
--   
--   <a>$sel:nextToken:GetApis'</a>, <a>getApisResponse_nextToken</a> - The
--   next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:httpStatus:GetApisResponse'</a>,
--   <a>getApisResponse_httpStatus</a> - The response's http status code.
newGetApisResponse :: Int -> GetApisResponse

-- | The elements from this collection.
getApisResponse_items :: Lens' GetApisResponse (Maybe [Api])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getApisResponse_nextToken :: Lens' GetApisResponse (Maybe Text)

-- | The response's http status code.
getApisResponse_httpStatus :: Lens' GetApisResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetApis.GetApis
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetApis.GetApis
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetApis.GetApis
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetApis.GetApis
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetApis.GetApisResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetApis.GetApisResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetApis.GetApisResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetApis.GetApisResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetApis.GetApis
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetApis.GetApisResponse
instance Network.AWS.Pager.AWSPager Network.AWS.ApiGatewayV2.GetApis.GetApis
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetApis.GetApis
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetApis.GetApis
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetApis.GetApis
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetApis.GetApis
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetApis.GetApis


-- | Gets API mappings.
module Network.AWS.ApiGatewayV2.GetApiMappings

-- | <i>See:</i> <a>newGetApiMappings</a> smart constructor.
data GetApiMappings
GetApiMappings' :: Maybe Text -> Maybe Text -> Text -> GetApiMappings

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetApiMappings'] :: GetApiMappings -> Maybe Text

-- | The maximum number of elements to be returned for this resource.
[$sel:maxResults:GetApiMappings'] :: GetApiMappings -> Maybe Text

-- | The domain name.
[$sel:domainName:GetApiMappings'] :: GetApiMappings -> Text

-- | Create a value of <a>GetApiMappings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetApiMappings'</a>, <a>getApiMappings_nextToken</a>
--   - The next page of elements from this collection. Not valid for the
--   last element of the collection.
--   
--   <a>$sel:maxResults:GetApiMappings'</a>,
--   <a>getApiMappings_maxResults</a> - The maximum number of elements to
--   be returned for this resource.
--   
--   <a>$sel:domainName:GetApiMappings'</a>,
--   <a>getApiMappings_domainName</a> - The domain name.
newGetApiMappings :: Text -> GetApiMappings

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getApiMappings_nextToken :: Lens' GetApiMappings (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getApiMappings_maxResults :: Lens' GetApiMappings (Maybe Text)

-- | The domain name.
getApiMappings_domainName :: Lens' GetApiMappings Text

-- | <i>See:</i> <a>newGetApiMappingsResponse</a> smart constructor.
data GetApiMappingsResponse
GetApiMappingsResponse' :: Maybe [ApiMapping] -> Maybe Text -> Int -> GetApiMappingsResponse

-- | The elements from this collection.
[$sel:items:GetApiMappingsResponse'] :: GetApiMappingsResponse -> Maybe [ApiMapping]

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
[$sel:nextToken:GetApiMappingsResponse'] :: GetApiMappingsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetApiMappingsResponse'] :: GetApiMappingsResponse -> Int

-- | Create a value of <a>GetApiMappingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetApiMappingsResponse'</a>,
--   <a>getApiMappingsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetApiMappings'</a>,
--   <a>getApiMappingsResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetApiMappingsResponse'</a>,
--   <a>getApiMappingsResponse_httpStatus</a> - The response's http status
--   code.
newGetApiMappingsResponse :: Int -> GetApiMappingsResponse

-- | The elements from this collection.
getApiMappingsResponse_items :: Lens' GetApiMappingsResponse (Maybe [ApiMapping])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getApiMappingsResponse_nextToken :: Lens' GetApiMappingsResponse (Maybe Text)

-- | The response's http status code.
getApiMappingsResponse_httpStatus :: Lens' GetApiMappingsResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappings
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappings
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappings
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappings
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappingsResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappingsResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappingsResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappings
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappings
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappings
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappings
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetApiMappings.GetApiMappings


-- | Gets an API mapping.
module Network.AWS.ApiGatewayV2.GetApiMapping

-- | <i>See:</i> <a>newGetApiMapping</a> smart constructor.
data GetApiMapping
GetApiMapping' :: Text -> Text -> GetApiMapping

-- | The API mapping identifier.
[$sel:apiMappingId:GetApiMapping'] :: GetApiMapping -> Text

-- | The domain name.
[$sel:domainName:GetApiMapping'] :: GetApiMapping -> Text

-- | Create a value of <a>GetApiMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiMappingId:GetApiMapping'</a>,
--   <a>getApiMapping_apiMappingId</a> - The API mapping identifier.
--   
--   <a>$sel:domainName:GetApiMapping'</a>, <a>getApiMapping_domainName</a>
--   - The domain name.
newGetApiMapping :: Text -> Text -> GetApiMapping

-- | The API mapping identifier.
getApiMapping_apiMappingId :: Lens' GetApiMapping Text

-- | The domain name.
getApiMapping_domainName :: Lens' GetApiMapping Text

-- | <i>See:</i> <a>newGetApiMappingResponse</a> smart constructor.
data GetApiMappingResponse
GetApiMappingResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetApiMappingResponse

-- | The API stage.
[$sel:stage:GetApiMappingResponse'] :: GetApiMappingResponse -> Maybe Text

-- | The API identifier.
[$sel:apiId:GetApiMappingResponse'] :: GetApiMappingResponse -> Maybe Text

-- | The API mapping key.
[$sel:apiMappingKey:GetApiMappingResponse'] :: GetApiMappingResponse -> Maybe Text

-- | The API mapping identifier.
[$sel:apiMappingId:GetApiMappingResponse'] :: GetApiMappingResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetApiMappingResponse'] :: GetApiMappingResponse -> Int

-- | Create a value of <a>GetApiMappingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:GetApiMappingResponse'</a>,
--   <a>getApiMappingResponse_stage</a> - The API stage.
--   
--   <a>$sel:apiId:GetApiMappingResponse'</a>,
--   <a>getApiMappingResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:apiMappingKey:GetApiMappingResponse'</a>,
--   <a>getApiMappingResponse_apiMappingKey</a> - The API mapping key.
--   
--   <a>$sel:apiMappingId:GetApiMapping'</a>,
--   <a>getApiMappingResponse_apiMappingId</a> - The API mapping
--   identifier.
--   
--   <a>$sel:httpStatus:GetApiMappingResponse'</a>,
--   <a>getApiMappingResponse_httpStatus</a> - The response's http status
--   code.
newGetApiMappingResponse :: Int -> GetApiMappingResponse

-- | The API stage.
getApiMappingResponse_stage :: Lens' GetApiMappingResponse (Maybe Text)

-- | The API identifier.
getApiMappingResponse_apiId :: Lens' GetApiMappingResponse (Maybe Text)

-- | The API mapping key.
getApiMappingResponse_apiMappingKey :: Lens' GetApiMappingResponse (Maybe Text)

-- | The API mapping identifier.
getApiMappingResponse_apiMappingId :: Lens' GetApiMappingResponse (Maybe Text)

-- | The response's http status code.
getApiMappingResponse_httpStatus :: Lens' GetApiMappingResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMapping
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMapping
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMapping
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMapping
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMappingResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMappingResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMappingResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMappingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMapping
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMappingResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMapping
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMapping
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMapping
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMapping
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetApiMapping.GetApiMapping


-- | Gets an Api resource.
module Network.AWS.ApiGatewayV2.GetApi

-- | <i>See:</i> <a>newGetApi</a> smart constructor.
data GetApi
GetApi' :: Text -> GetApi

-- | The API identifier.
[$sel:apiId:GetApi'] :: GetApi -> Text

-- | Create a value of <a>GetApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetApi'</a>, <a>getApi_apiId</a> - The API identifier.
newGetApi :: Text -> GetApi

-- | The API identifier.
getApi_apiId :: Lens' GetApi Text

-- | <i>See:</i> <a>newGetApiResponse</a> smart constructor.
data GetApiResponse
GetApiResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe ProtocolType -> Maybe (HashMap Text Text) -> Int -> GetApiResponse

-- | The API ID.
[$sel:apiId:GetApiResponse'] :: GetApiResponse -> Maybe Text

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
[$sel:disableExecuteApiEndpoint:GetApiResponse'] :: GetApiResponse -> Maybe Bool

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
[$sel:apiEndpoint:GetApiResponse'] :: GetApiResponse -> Maybe Text

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
[$sel:warnings:GetApiResponse'] :: GetApiResponse -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:GetApiResponse'] :: GetApiResponse -> Maybe POSIX

-- | The name of the API.
[$sel:name:GetApiResponse'] :: GetApiResponse -> Maybe Text

-- | A version identifier for the API.
[$sel:version:GetApiResponse'] :: GetApiResponse -> Maybe Text

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
[$sel:apiGatewayManaged:GetApiResponse'] :: GetApiResponse -> Maybe Bool

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
[$sel:apiKeySelectionExpression:GetApiResponse'] :: GetApiResponse -> Maybe Text

-- | A CORS configuration. Supported only for HTTP APIs.
[$sel:corsConfiguration:GetApiResponse'] :: GetApiResponse -> Maybe Cors

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
[$sel:routeSelectionExpression:GetApiResponse'] :: GetApiResponse -> Maybe Text

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
[$sel:importInfo:GetApiResponse'] :: GetApiResponse -> Maybe [Text]

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
[$sel:disableSchemaValidation:GetApiResponse'] :: GetApiResponse -> Maybe Bool

-- | The description of the API.
[$sel:description:GetApiResponse'] :: GetApiResponse -> Maybe Text

-- | The API protocol.
[$sel:protocolType:GetApiResponse'] :: GetApiResponse -> Maybe ProtocolType

-- | A collection of tags associated with the API.
[$sel:tags:GetApiResponse'] :: GetApiResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:GetApiResponse'] :: GetApiResponse -> Int

-- | Create a value of <a>GetApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetApi'</a>, <a>getApiResponse_apiId</a> - The API ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:GetApiResponse'</a>,
--   <a>getApiResponse_disableExecuteApiEndpoint</a> - Specifies whether
--   clients can invoke your API by using the default execute-api endpoint.
--   By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:GetApiResponse'</a>,
--   <a>getApiResponse_apiEndpoint</a> - The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
--   
--   <a>$sel:warnings:GetApiResponse'</a>, <a>getApiResponse_warnings</a> -
--   The warning messages reported when failonwarnings is turned on during
--   API import.
--   
--   <a>$sel:createdDate:GetApiResponse'</a>,
--   <a>getApiResponse_createdDate</a> - The timestamp when the API was
--   created.
--   
--   <a>$sel:name:GetApiResponse'</a>, <a>getApiResponse_name</a> - The
--   name of the API.
--   
--   <a>$sel:version:GetApiResponse'</a>, <a>getApiResponse_version</a> - A
--   version identifier for the API.
--   
--   <a>$sel:apiGatewayManaged:GetApiResponse'</a>,
--   <a>getApiResponse_apiGatewayManaged</a> - Specifies whether an API is
--   managed by API Gateway. You can't update or delete a managed API by
--   using API Gateway. A managed API can be deleted only through the
--   tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:GetApiResponse'</a>,
--   <a>getApiResponse_apiKeySelectionExpression</a> - An API key selection
--   expression. Supported only for WebSocket APIs. See <a>API Key
--   Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:GetApiResponse'</a>,
--   <a>getApiResponse_corsConfiguration</a> - A CORS configuration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:GetApiResponse'</a>,
--   <a>getApiResponse_routeSelectionExpression</a> - The route selection
--   expression for the API. For HTTP APIs, the routeSelectionExpression
--   must be ${request.method} ${request.path}. If not provided, this will
--   be the default for HTTP APIs. This property is required for WebSocket
--   APIs.
--   
--   <a>$sel:importInfo:GetApiResponse'</a>,
--   <a>getApiResponse_importInfo</a> - The validation information during
--   API import. This may include particular properties of your OpenAPI
--   definition which are ignored during import. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:disableSchemaValidation:GetApiResponse'</a>,
--   <a>getApiResponse_disableSchemaValidation</a> - Avoid validating
--   models when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:GetApiResponse'</a>,
--   <a>getApiResponse_description</a> - The description of the API.
--   
--   <a>$sel:protocolType:GetApiResponse'</a>,
--   <a>getApiResponse_protocolType</a> - The API protocol.
--   
--   <a>$sel:tags:GetApiResponse'</a>, <a>getApiResponse_tags</a> - A
--   collection of tags associated with the API.
--   
--   <a>$sel:httpStatus:GetApiResponse'</a>,
--   <a>getApiResponse_httpStatus</a> - The response's http status code.
newGetApiResponse :: Int -> GetApiResponse

-- | The API ID.
getApiResponse_apiId :: Lens' GetApiResponse (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
getApiResponse_disableExecuteApiEndpoint :: Lens' GetApiResponse (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
getApiResponse_apiEndpoint :: Lens' GetApiResponse (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
getApiResponse_warnings :: Lens' GetApiResponse (Maybe [Text])

-- | The timestamp when the API was created.
getApiResponse_createdDate :: Lens' GetApiResponse (Maybe UTCTime)

-- | The name of the API.
getApiResponse_name :: Lens' GetApiResponse (Maybe Text)

-- | A version identifier for the API.
getApiResponse_version :: Lens' GetApiResponse (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
getApiResponse_apiGatewayManaged :: Lens' GetApiResponse (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
getApiResponse_apiKeySelectionExpression :: Lens' GetApiResponse (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
getApiResponse_corsConfiguration :: Lens' GetApiResponse (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
getApiResponse_routeSelectionExpression :: Lens' GetApiResponse (Maybe Text)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
getApiResponse_importInfo :: Lens' GetApiResponse (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
getApiResponse_disableSchemaValidation :: Lens' GetApiResponse (Maybe Bool)

-- | The description of the API.
getApiResponse_description :: Lens' GetApiResponse (Maybe Text)

-- | The API protocol.
getApiResponse_protocolType :: Lens' GetApiResponse (Maybe ProtocolType)

-- | A collection of tags associated with the API.
getApiResponse_tags :: Lens' GetApiResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getApiResponse_httpStatus :: Lens' GetApiResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetApi.GetApi
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetApi.GetApi
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetApi.GetApi
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetApi.GetApi
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.GetApi.GetApiResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.GetApi.GetApiResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.GetApi.GetApiResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.GetApi.GetApiResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.GetApi.GetApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetApi.GetApiResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.GetApi.GetApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.GetApi.GetApi
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.GetApi.GetApi
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.GetApi.GetApi
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.GetApi.GetApi


-- | <ul>
--   <li>- | Undocumented operation.</li>
--   </ul>
module Network.AWS.ApiGatewayV2.ExportApi

-- | <i>See:</i> <a>newExportApi</a> smart constructor.
data ExportApi
ExportApi' :: Maybe Text -> Maybe Text -> Maybe Bool -> Text -> Text -> Text -> ExportApi

-- | The version of the API Gateway export algorithm. API Gateway uses the
--   latest version by default. Currently, the only supported version is
--   1.0.
[$sel:exportVersion:ExportApi'] :: ExportApi -> Maybe Text

-- | The name of the API stage to export. If you don't specify this
--   property, a representation of the latest API configuration is
--   exported.
[$sel:stageName:ExportApi'] :: ExportApi -> Maybe Text

-- | Specifies whether to include <a>API Gateway extensions</a> in the
--   exported API definition. API Gateway extensions are included by
--   default.
[$sel:includeExtensions:ExportApi'] :: ExportApi -> Maybe Bool

-- | The version of the API specification to use. OAS30, for OpenAPI 3.0,
--   is the only supported value.
[$sel:specification:ExportApi'] :: ExportApi -> Text

-- | The output type of the exported definition file. Valid values are JSON
--   and YAML.
[$sel:outputType:ExportApi'] :: ExportApi -> Text

-- | The API identifier.
[$sel:apiId:ExportApi'] :: ExportApi -> Text

-- | Create a value of <a>ExportApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportVersion:ExportApi'</a>, <a>exportApi_exportVersion</a> -
--   The version of the API Gateway export algorithm. API Gateway uses the
--   latest version by default. Currently, the only supported version is
--   1.0.
--   
--   <a>$sel:stageName:ExportApi'</a>, <a>exportApi_stageName</a> - The
--   name of the API stage to export. If you don't specify this property, a
--   representation of the latest API configuration is exported.
--   
--   <a>$sel:includeExtensions:ExportApi'</a>,
--   <a>exportApi_includeExtensions</a> - Specifies whether to include
--   <a>API Gateway extensions</a> in the exported API definition. API
--   Gateway extensions are included by default.
--   
--   <a>$sel:specification:ExportApi'</a>, <a>exportApi_specification</a> -
--   The version of the API specification to use. OAS30, for OpenAPI 3.0,
--   is the only supported value.
--   
--   <a>$sel:outputType:ExportApi'</a>, <a>exportApi_outputType</a> - The
--   output type of the exported definition file. Valid values are JSON and
--   YAML.
--   
--   <a>$sel:apiId:ExportApi'</a>, <a>exportApi_apiId</a> - The API
--   identifier.
newExportApi :: Text -> Text -> Text -> ExportApi

-- | The version of the API Gateway export algorithm. API Gateway uses the
--   latest version by default. Currently, the only supported version is
--   1.0.
exportApi_exportVersion :: Lens' ExportApi (Maybe Text)

-- | The name of the API stage to export. If you don't specify this
--   property, a representation of the latest API configuration is
--   exported.
exportApi_stageName :: Lens' ExportApi (Maybe Text)

-- | Specifies whether to include <a>API Gateway extensions</a> in the
--   exported API definition. API Gateway extensions are included by
--   default.
exportApi_includeExtensions :: Lens' ExportApi (Maybe Bool)

-- | The version of the API specification to use. OAS30, for OpenAPI 3.0,
--   is the only supported value.
exportApi_specification :: Lens' ExportApi Text

-- | The output type of the exported definition file. Valid values are JSON
--   and YAML.
exportApi_outputType :: Lens' ExportApi Text

-- | The API identifier.
exportApi_apiId :: Lens' ExportApi Text

-- | <i>See:</i> <a>newExportApiResponse</a> smart constructor.
data ExportApiResponse
ExportApiResponse' :: Maybe ByteString -> Int -> ExportApiResponse
[$sel:body:ExportApiResponse'] :: ExportApiResponse -> Maybe ByteString

-- | The response's http status code.
[$sel:httpStatus:ExportApiResponse'] :: ExportApiResponse -> Int

-- | Create a value of <a>ExportApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:body:ExportApiResponse'</a>, <a>exportApiResponse_body</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:ExportApiResponse'</a>,
--   <a>exportApiResponse_httpStatus</a> - The response's http status code.
newExportApiResponse :: Int -> ExportApiResponse

-- | Undocumented member.
exportApiResponse_body :: Lens' ExportApiResponse (Maybe ByteString)

-- | The response's http status code.
exportApiResponse_httpStatus :: Lens' ExportApiResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.ExportApi.ExportApi
instance GHC.Show.Show Network.AWS.ApiGatewayV2.ExportApi.ExportApi
instance GHC.Read.Read Network.AWS.ApiGatewayV2.ExportApi.ExportApi
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.ExportApi.ExportApi
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.ExportApi.ExportApiResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.ExportApi.ExportApiResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.ExportApi.ExportApiResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.ExportApi.ExportApiResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.ExportApi.ExportApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.ExportApi.ExportApiResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.ExportApi.ExportApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.ExportApi.ExportApi
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.ExportApi.ExportApi
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.ExportApi.ExportApi
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.ExportApi.ExportApi


-- | Deletes a VPC link.
module Network.AWS.ApiGatewayV2.DeleteVpcLink

-- | <i>See:</i> <a>newDeleteVpcLink</a> smart constructor.
data DeleteVpcLink
DeleteVpcLink' :: Text -> DeleteVpcLink

-- | The ID of the VPC link.
[$sel:vpcLinkId:DeleteVpcLink'] :: DeleteVpcLink -> Text

-- | Create a value of <a>DeleteVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcLinkId:DeleteVpcLink'</a>, <a>deleteVpcLink_vpcLinkId</a> -
--   The ID of the VPC link.
newDeleteVpcLink :: Text -> DeleteVpcLink

-- | The ID of the VPC link.
deleteVpcLink_vpcLinkId :: Lens' DeleteVpcLink Text

-- | <i>See:</i> <a>newDeleteVpcLinkResponse</a> smart constructor.
data DeleteVpcLinkResponse
DeleteVpcLinkResponse' :: Int -> DeleteVpcLinkResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteVpcLinkResponse'] :: DeleteVpcLinkResponse -> Int

-- | Create a value of <a>DeleteVpcLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVpcLinkResponse'</a>,
--   <a>deleteVpcLinkResponse_httpStatus</a> - The response's http status
--   code.
newDeleteVpcLinkResponse :: Int -> DeleteVpcLinkResponse

-- | The response's http status code.
deleteVpcLinkResponse_httpStatus :: Lens' DeleteVpcLinkResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLink
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLink
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLink
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLink
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLinkResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLinkResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLinkResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLinkResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLink
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLinkResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLink
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLink
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLink
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLink
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteVpcLink.DeleteVpcLink


-- | Deletes a Stage.
module Network.AWS.ApiGatewayV2.DeleteStage

-- | <i>See:</i> <a>newDeleteStage</a> smart constructor.
data DeleteStage
DeleteStage' :: Text -> Text -> DeleteStage

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
[$sel:stageName:DeleteStage'] :: DeleteStage -> Text

-- | The API identifier.
[$sel:apiId:DeleteStage'] :: DeleteStage -> Text

-- | Create a value of <a>DeleteStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:DeleteStage'</a>, <a>deleteStage_stageName</a> - The
--   stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
--   
--   <a>$sel:apiId:DeleteStage'</a>, <a>deleteStage_apiId</a> - The API
--   identifier.
newDeleteStage :: Text -> Text -> DeleteStage

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
deleteStage_stageName :: Lens' DeleteStage Text

-- | The API identifier.
deleteStage_apiId :: Lens' DeleteStage Text

-- | <i>See:</i> <a>newDeleteStageResponse</a> smart constructor.
data DeleteStageResponse
DeleteStageResponse' :: DeleteStageResponse

-- | Create a value of <a>DeleteStageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteStageResponse :: DeleteStageResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteStage.DeleteStage
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteStage.DeleteStage
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteStage.DeleteStage
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteStage.DeleteStage
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteStage.DeleteStageResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteStage.DeleteStageResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteStage.DeleteStageResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteStage.DeleteStageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteStage.DeleteStage
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteStage.DeleteStageResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteStage.DeleteStage
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteStage.DeleteStage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteStage.DeleteStage
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteStage.DeleteStage
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteStage.DeleteStage


-- | Deletes the RouteSettings for a stage.
module Network.AWS.ApiGatewayV2.DeleteRouteSettings

-- | <i>See:</i> <a>newDeleteRouteSettings</a> smart constructor.
data DeleteRouteSettings
DeleteRouteSettings' :: Text -> Text -> Text -> DeleteRouteSettings

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
[$sel:stageName:DeleteRouteSettings'] :: DeleteRouteSettings -> Text

-- | The route key.
[$sel:routeKey:DeleteRouteSettings'] :: DeleteRouteSettings -> Text

-- | The API identifier.
[$sel:apiId:DeleteRouteSettings'] :: DeleteRouteSettings -> Text

-- | Create a value of <a>DeleteRouteSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:DeleteRouteSettings'</a>,
--   <a>deleteRouteSettings_stageName</a> - The stage name. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
--   
--   <a>$sel:routeKey:DeleteRouteSettings'</a>,
--   <a>deleteRouteSettings_routeKey</a> - The route key.
--   
--   <a>$sel:apiId:DeleteRouteSettings'</a>,
--   <a>deleteRouteSettings_apiId</a> - The API identifier.
newDeleteRouteSettings :: Text -> Text -> Text -> DeleteRouteSettings

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
deleteRouteSettings_stageName :: Lens' DeleteRouteSettings Text

-- | The route key.
deleteRouteSettings_routeKey :: Lens' DeleteRouteSettings Text

-- | The API identifier.
deleteRouteSettings_apiId :: Lens' DeleteRouteSettings Text

-- | <i>See:</i> <a>newDeleteRouteSettingsResponse</a> smart constructor.
data DeleteRouteSettingsResponse
DeleteRouteSettingsResponse' :: DeleteRouteSettingsResponse

-- | Create a value of <a>DeleteRouteSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRouteSettingsResponse :: DeleteRouteSettingsResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettings
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettings
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettings
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettings
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettingsResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettingsResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettingsResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettings
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettings
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettings
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteRouteSettings.DeleteRouteSettings


-- | Deletes a RouteResponse.
module Network.AWS.ApiGatewayV2.DeleteRouteResponse

-- | <i>See:</i> <a>newDeleteRouteResponse</a> smart constructor.
data DeleteRouteResponse
DeleteRouteResponse' :: Text -> Text -> Text -> DeleteRouteResponse

-- | The route response ID.
[$sel:routeResponseId:DeleteRouteResponse'] :: DeleteRouteResponse -> Text

-- | The API identifier.
[$sel:apiId:DeleteRouteResponse'] :: DeleteRouteResponse -> Text

-- | The route ID.
[$sel:routeId:DeleteRouteResponse'] :: DeleteRouteResponse -> Text

-- | Create a value of <a>DeleteRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routeResponseId:DeleteRouteResponse'</a>,
--   <a>deleteRouteResponse_routeResponseId</a> - The route response ID.
--   
--   <a>$sel:apiId:DeleteRouteResponse'</a>,
--   <a>deleteRouteResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:routeId:DeleteRouteResponse'</a>,
--   <a>deleteRouteResponse_routeId</a> - The route ID.
newDeleteRouteResponse :: Text -> Text -> Text -> DeleteRouteResponse

-- | The route response ID.
deleteRouteResponse_routeResponseId :: Lens' DeleteRouteResponse Text

-- | The API identifier.
deleteRouteResponse_apiId :: Lens' DeleteRouteResponse Text

-- | The route ID.
deleteRouteResponse_routeId :: Lens' DeleteRouteResponse Text

-- | <i>See:</i> <a>newDeleteRouteResponseResponse</a> smart constructor.
data DeleteRouteResponseResponse
DeleteRouteResponseResponse' :: DeleteRouteResponseResponse

-- | Create a value of <a>DeleteRouteResponseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRouteResponseResponse :: DeleteRouteResponseResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponseResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponseResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponseResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponseResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponse
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponse
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponse
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteRouteResponse.DeleteRouteResponse


-- | Deletes a route request parameter.
module Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter

-- | <i>See:</i> <a>newDeleteRouteRequestParameter</a> smart constructor.
data DeleteRouteRequestParameter
DeleteRouteRequestParameter' :: Text -> Text -> Text -> DeleteRouteRequestParameter

-- | The route request parameter key.
[$sel:requestParameterKey:DeleteRouteRequestParameter'] :: DeleteRouteRequestParameter -> Text

-- | The API identifier.
[$sel:apiId:DeleteRouteRequestParameter'] :: DeleteRouteRequestParameter -> Text

-- | The route ID.
[$sel:routeId:DeleteRouteRequestParameter'] :: DeleteRouteRequestParameter -> Text

-- | Create a value of <a>DeleteRouteRequestParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestParameterKey:DeleteRouteRequestParameter'</a>,
--   <a>deleteRouteRequestParameter_requestParameterKey</a> - The route
--   request parameter key.
--   
--   <a>$sel:apiId:DeleteRouteRequestParameter'</a>,
--   <a>deleteRouteRequestParameter_apiId</a> - The API identifier.
--   
--   <a>$sel:routeId:DeleteRouteRequestParameter'</a>,
--   <a>deleteRouteRequestParameter_routeId</a> - The route ID.
newDeleteRouteRequestParameter :: Text -> Text -> Text -> DeleteRouteRequestParameter

-- | The route request parameter key.
deleteRouteRequestParameter_requestParameterKey :: Lens' DeleteRouteRequestParameter Text

-- | The API identifier.
deleteRouteRequestParameter_apiId :: Lens' DeleteRouteRequestParameter Text

-- | The route ID.
deleteRouteRequestParameter_routeId :: Lens' DeleteRouteRequestParameter Text

-- | <i>See:</i> <a>newDeleteRouteRequestParameterResponse</a> smart
--   constructor.
data DeleteRouteRequestParameterResponse
DeleteRouteRequestParameterResponse' :: DeleteRouteRequestParameterResponse

-- | Create a value of <a>DeleteRouteRequestParameterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRouteRequestParameterResponse :: DeleteRouteRequestParameterResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameter
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameter
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameter
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameter
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameterResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameterResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameterResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameterResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameter
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameterResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameter
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameter
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameter
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameter
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteRouteRequestParameter.DeleteRouteRequestParameter


-- | Deletes a Route.
module Network.AWS.ApiGatewayV2.DeleteRoute

-- | <i>See:</i> <a>newDeleteRoute</a> smart constructor.
data DeleteRoute
DeleteRoute' :: Text -> Text -> DeleteRoute

-- | The API identifier.
[$sel:apiId:DeleteRoute'] :: DeleteRoute -> Text

-- | The route ID.
[$sel:routeId:DeleteRoute'] :: DeleteRoute -> Text

-- | Create a value of <a>DeleteRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteRoute'</a>, <a>deleteRoute_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:routeId:DeleteRoute'</a>, <a>deleteRoute_routeId</a> - The
--   route ID.
newDeleteRoute :: Text -> Text -> DeleteRoute

-- | The API identifier.
deleteRoute_apiId :: Lens' DeleteRoute Text

-- | The route ID.
deleteRoute_routeId :: Lens' DeleteRoute Text

-- | <i>See:</i> <a>newDeleteRouteResponse'</a> smart constructor.
data DeleteRouteResponse'
DeleteRouteResponse'' :: DeleteRouteResponse'

-- | Create a value of <a>DeleteRouteResponse'</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRouteResponse' :: DeleteRouteResponse'
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRoute
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRoute
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRoute
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRoute
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRouteResponse'
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRouteResponse'
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRouteResponse'
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRouteResponse'
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRoute
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRouteResponse'
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRoute
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRoute
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRoute
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRoute
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteRoute.DeleteRoute


-- | Deletes a Model.
module Network.AWS.ApiGatewayV2.DeleteModel

-- | <i>See:</i> <a>newDeleteModel</a> smart constructor.
data DeleteModel
DeleteModel' :: Text -> Text -> DeleteModel

-- | The model ID.
[$sel:modelId:DeleteModel'] :: DeleteModel -> Text

-- | The API identifier.
[$sel:apiId:DeleteModel'] :: DeleteModel -> Text

-- | Create a value of <a>DeleteModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:DeleteModel'</a>, <a>deleteModel_modelId</a> - The
--   model ID.
--   
--   <a>$sel:apiId:DeleteModel'</a>, <a>deleteModel_apiId</a> - The API
--   identifier.
newDeleteModel :: Text -> Text -> DeleteModel

-- | The model ID.
deleteModel_modelId :: Lens' DeleteModel Text

-- | The API identifier.
deleteModel_apiId :: Lens' DeleteModel Text

-- | <i>See:</i> <a>newDeleteModelResponse</a> smart constructor.
data DeleteModelResponse
DeleteModelResponse' :: DeleteModelResponse

-- | Create a value of <a>DeleteModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteModelResponse :: DeleteModelResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteModel.DeleteModel
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteModel.DeleteModel
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteModel.DeleteModel
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteModel.DeleteModel
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteModel.DeleteModelResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteModel.DeleteModelResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteModel.DeleteModelResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteModel.DeleteModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteModel.DeleteModel
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteModel.DeleteModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteModel.DeleteModel
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteModel.DeleteModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteModel.DeleteModel
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteModel.DeleteModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteModel.DeleteModel


-- | Deletes an IntegrationResponses.
module Network.AWS.ApiGatewayV2.DeleteIntegrationResponse

-- | <i>See:</i> <a>newDeleteIntegrationResponse</a> smart constructor.
data DeleteIntegrationResponse
DeleteIntegrationResponse' :: Text -> Text -> Text -> DeleteIntegrationResponse

-- | The API identifier.
[$sel:apiId:DeleteIntegrationResponse'] :: DeleteIntegrationResponse -> Text

-- | The integration response ID.
[$sel:integrationResponseId:DeleteIntegrationResponse'] :: DeleteIntegrationResponse -> Text

-- | The integration ID.
[$sel:integrationId:DeleteIntegrationResponse'] :: DeleteIntegrationResponse -> Text

-- | Create a value of <a>DeleteIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:integrationResponseId:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_integrationResponseId</a> - The
--   integration response ID.
--   
--   <a>$sel:integrationId:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_integrationId</a> - The integration ID.
newDeleteIntegrationResponse :: Text -> Text -> Text -> DeleteIntegrationResponse

-- | The API identifier.
deleteIntegrationResponse_apiId :: Lens' DeleteIntegrationResponse Text

-- | The integration response ID.
deleteIntegrationResponse_integrationResponseId :: Lens' DeleteIntegrationResponse Text

-- | The integration ID.
deleteIntegrationResponse_integrationId :: Lens' DeleteIntegrationResponse Text

-- | <i>See:</i> <a>newDeleteIntegrationResponseResponse</a> smart
--   constructor.
data DeleteIntegrationResponseResponse
DeleteIntegrationResponseResponse' :: DeleteIntegrationResponseResponse

-- | Create a value of <a>DeleteIntegrationResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntegrationResponseResponse :: DeleteIntegrationResponseResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponseResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponseResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponseResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponseResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponse
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponse
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponse
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteIntegrationResponse.DeleteIntegrationResponse


-- | Deletes an Integration.
module Network.AWS.ApiGatewayV2.DeleteIntegration

-- | <i>See:</i> <a>newDeleteIntegration</a> smart constructor.
data DeleteIntegration
DeleteIntegration' :: Text -> Text -> DeleteIntegration

-- | The API identifier.
[$sel:apiId:DeleteIntegration'] :: DeleteIntegration -> Text

-- | The integration ID.
[$sel:integrationId:DeleteIntegration'] :: DeleteIntegration -> Text

-- | Create a value of <a>DeleteIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteIntegration'</a>, <a>deleteIntegration_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:integrationId:DeleteIntegration'</a>,
--   <a>deleteIntegration_integrationId</a> - The integration ID.
newDeleteIntegration :: Text -> Text -> DeleteIntegration

-- | The API identifier.
deleteIntegration_apiId :: Lens' DeleteIntegration Text

-- | The integration ID.
deleteIntegration_integrationId :: Lens' DeleteIntegration Text

-- | <i>See:</i> <a>newDeleteIntegrationResponse'</a> smart constructor.
data DeleteIntegrationResponse'
DeleteIntegrationResponse'' :: DeleteIntegrationResponse'

-- | Create a value of <a>DeleteIntegrationResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntegrationResponse' :: DeleteIntegrationResponse'
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegration
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegration
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegration
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegration
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegrationResponse'
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegrationResponse'
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegrationResponse'
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegrationResponse'
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegrationResponse'
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegration
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegration
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteIntegration.DeleteIntegration


-- | Deletes a domain name.
module Network.AWS.ApiGatewayV2.DeleteDomainName

-- | <i>See:</i> <a>newDeleteDomainName</a> smart constructor.
data DeleteDomainName
DeleteDomainName' :: Text -> DeleteDomainName

-- | The domain name.
[$sel:domainName:DeleteDomainName'] :: DeleteDomainName -> Text

-- | Create a value of <a>DeleteDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:DeleteDomainName'</a>,
--   <a>deleteDomainName_domainName</a> - The domain name.
newDeleteDomainName :: Text -> DeleteDomainName

-- | The domain name.
deleteDomainName_domainName :: Lens' DeleteDomainName Text

-- | <i>See:</i> <a>newDeleteDomainNameResponse</a> smart constructor.
data DeleteDomainNameResponse
DeleteDomainNameResponse' :: DeleteDomainNameResponse

-- | Create a value of <a>DeleteDomainNameResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDomainNameResponse :: DeleteDomainNameResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainName
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainName
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainName
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainName
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainNameResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainNameResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainNameResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainNameResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainName
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainNameResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainName
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainName
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainName
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainName
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteDomainName.DeleteDomainName


-- | Deletes a Deployment.
module Network.AWS.ApiGatewayV2.DeleteDeployment

-- | <i>See:</i> <a>newDeleteDeployment</a> smart constructor.
data DeleteDeployment
DeleteDeployment' :: Text -> Text -> DeleteDeployment

-- | The API identifier.
[$sel:apiId:DeleteDeployment'] :: DeleteDeployment -> Text

-- | The deployment ID.
[$sel:deploymentId:DeleteDeployment'] :: DeleteDeployment -> Text

-- | Create a value of <a>DeleteDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteDeployment'</a>, <a>deleteDeployment_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:deploymentId:DeleteDeployment'</a>,
--   <a>deleteDeployment_deploymentId</a> - The deployment ID.
newDeleteDeployment :: Text -> Text -> DeleteDeployment

-- | The API identifier.
deleteDeployment_apiId :: Lens' DeleteDeployment Text

-- | The deployment ID.
deleteDeployment_deploymentId :: Lens' DeleteDeployment Text

-- | <i>See:</i> <a>newDeleteDeploymentResponse</a> smart constructor.
data DeleteDeploymentResponse
DeleteDeploymentResponse' :: DeleteDeploymentResponse

-- | Create a value of <a>DeleteDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDeploymentResponse :: DeleteDeploymentResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeployment
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeployment
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeployment
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeployment
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeploymentResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeploymentResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeploymentResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeploymentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeployment
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeploymentResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeployment
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeployment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeployment
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeployment
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteDeployment.DeleteDeployment


-- | Deletes a CORS configuration.
module Network.AWS.ApiGatewayV2.DeleteCorsConfiguration

-- | <i>See:</i> <a>newDeleteCorsConfiguration</a> smart constructor.
data DeleteCorsConfiguration
DeleteCorsConfiguration' :: Text -> DeleteCorsConfiguration

-- | The API identifier.
[$sel:apiId:DeleteCorsConfiguration'] :: DeleteCorsConfiguration -> Text

-- | Create a value of <a>DeleteCorsConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteCorsConfiguration'</a>,
--   <a>deleteCorsConfiguration_apiId</a> - The API identifier.
newDeleteCorsConfiguration :: Text -> DeleteCorsConfiguration

-- | The API identifier.
deleteCorsConfiguration_apiId :: Lens' DeleteCorsConfiguration Text

-- | <i>See:</i> <a>newDeleteCorsConfigurationResponse</a> smart
--   constructor.
data DeleteCorsConfigurationResponse
DeleteCorsConfigurationResponse' :: DeleteCorsConfigurationResponse

-- | Create a value of <a>DeleteCorsConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCorsConfigurationResponse :: DeleteCorsConfigurationResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfiguration
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfiguration
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfiguration
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfiguration
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfigurationResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfigurationResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfigurationResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfiguration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfiguration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteCorsConfiguration.DeleteCorsConfiguration


-- | Deletes an Authorizer.
module Network.AWS.ApiGatewayV2.DeleteAuthorizer

-- | <i>See:</i> <a>newDeleteAuthorizer</a> smart constructor.
data DeleteAuthorizer
DeleteAuthorizer' :: Text -> Text -> DeleteAuthorizer

-- | The authorizer identifier.
[$sel:authorizerId:DeleteAuthorizer'] :: DeleteAuthorizer -> Text

-- | The API identifier.
[$sel:apiId:DeleteAuthorizer'] :: DeleteAuthorizer -> Text

-- | Create a value of <a>DeleteAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerId:DeleteAuthorizer'</a>,
--   <a>deleteAuthorizer_authorizerId</a> - The authorizer identifier.
--   
--   <a>$sel:apiId:DeleteAuthorizer'</a>, <a>deleteAuthorizer_apiId</a> -
--   The API identifier.
newDeleteAuthorizer :: Text -> Text -> DeleteAuthorizer

-- | The authorizer identifier.
deleteAuthorizer_authorizerId :: Lens' DeleteAuthorizer Text

-- | The API identifier.
deleteAuthorizer_apiId :: Lens' DeleteAuthorizer Text

-- | <i>See:</i> <a>newDeleteAuthorizerResponse</a> smart constructor.
data DeleteAuthorizerResponse
DeleteAuthorizerResponse' :: DeleteAuthorizerResponse

-- | Create a value of <a>DeleteAuthorizerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAuthorizerResponse :: DeleteAuthorizerResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizer
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizer
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizer
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizer
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizerResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizerResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizerResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizer
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizerResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizer
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizer
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizer
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteAuthorizer.DeleteAuthorizer


-- | Deletes an API mapping.
module Network.AWS.ApiGatewayV2.DeleteApiMapping

-- | <i>See:</i> <a>newDeleteApiMapping</a> smart constructor.
data DeleteApiMapping
DeleteApiMapping' :: Text -> Text -> DeleteApiMapping

-- | The API mapping identifier.
[$sel:apiMappingId:DeleteApiMapping'] :: DeleteApiMapping -> Text

-- | The domain name.
[$sel:domainName:DeleteApiMapping'] :: DeleteApiMapping -> Text

-- | Create a value of <a>DeleteApiMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiMappingId:DeleteApiMapping'</a>,
--   <a>deleteApiMapping_apiMappingId</a> - The API mapping identifier.
--   
--   <a>$sel:domainName:DeleteApiMapping'</a>,
--   <a>deleteApiMapping_domainName</a> - The domain name.
newDeleteApiMapping :: Text -> Text -> DeleteApiMapping

-- | The API mapping identifier.
deleteApiMapping_apiMappingId :: Lens' DeleteApiMapping Text

-- | The domain name.
deleteApiMapping_domainName :: Lens' DeleteApiMapping Text

-- | <i>See:</i> <a>newDeleteApiMappingResponse</a> smart constructor.
data DeleteApiMappingResponse
DeleteApiMappingResponse' :: DeleteApiMappingResponse

-- | Create a value of <a>DeleteApiMappingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteApiMappingResponse :: DeleteApiMappingResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMapping
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMapping
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMapping
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMapping
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMappingResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMappingResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMappingResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMappingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMapping
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMappingResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMapping
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMapping
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMapping
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMapping
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteApiMapping.DeleteApiMapping


-- | Deletes an Api resource.
module Network.AWS.ApiGatewayV2.DeleteApi

-- | <i>See:</i> <a>newDeleteApi</a> smart constructor.
data DeleteApi
DeleteApi' :: Text -> DeleteApi

-- | The API identifier.
[$sel:apiId:DeleteApi'] :: DeleteApi -> Text

-- | Create a value of <a>DeleteApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteApi'</a>, <a>deleteApi_apiId</a> - The API
--   identifier.
newDeleteApi :: Text -> DeleteApi

-- | The API identifier.
deleteApi_apiId :: Lens' DeleteApi Text

-- | <i>See:</i> <a>newDeleteApiResponse</a> smart constructor.
data DeleteApiResponse
DeleteApiResponse' :: DeleteApiResponse

-- | Create a value of <a>DeleteApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteApiResponse :: DeleteApiResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteApi.DeleteApi
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteApi.DeleteApi
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteApi.DeleteApi
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteApi.DeleteApi
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteApi.DeleteApiResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteApi.DeleteApiResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteApi.DeleteApiResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteApi.DeleteApiResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteApi.DeleteApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteApi.DeleteApiResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteApi.DeleteApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteApi.DeleteApi
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteApi.DeleteApi
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteApi.DeleteApi
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteApi.DeleteApi


-- | Deletes the AccessLogSettings for a Stage. To disable access logging
--   for a Stage, delete its AccessLogSettings.
module Network.AWS.ApiGatewayV2.DeleteAccessLogSettings

-- | <i>See:</i> <a>newDeleteAccessLogSettings</a> smart constructor.
data DeleteAccessLogSettings
DeleteAccessLogSettings' :: Text -> Text -> DeleteAccessLogSettings

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
[$sel:stageName:DeleteAccessLogSettings'] :: DeleteAccessLogSettings -> Text

-- | The API identifier.
[$sel:apiId:DeleteAccessLogSettings'] :: DeleteAccessLogSettings -> Text

-- | Create a value of <a>DeleteAccessLogSettings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:DeleteAccessLogSettings'</a>,
--   <a>deleteAccessLogSettings_stageName</a> - The stage name. Stage names
--   can only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
--   
--   <a>$sel:apiId:DeleteAccessLogSettings'</a>,
--   <a>deleteAccessLogSettings_apiId</a> - The API identifier.
newDeleteAccessLogSettings :: Text -> Text -> DeleteAccessLogSettings

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
deleteAccessLogSettings_stageName :: Lens' DeleteAccessLogSettings Text

-- | The API identifier.
deleteAccessLogSettings_apiId :: Lens' DeleteAccessLogSettings Text

-- | <i>See:</i> <a>newDeleteAccessLogSettingsResponse</a> smart
--   constructor.
data DeleteAccessLogSettingsResponse
DeleteAccessLogSettingsResponse' :: DeleteAccessLogSettingsResponse

-- | Create a value of <a>DeleteAccessLogSettingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAccessLogSettingsResponse :: DeleteAccessLogSettingsResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettings
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettings
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettings
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettings
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettingsResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettingsResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettingsResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettingsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettings
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettingsResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettings
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettings
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettings
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettings
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.DeleteAccessLogSettings.DeleteAccessLogSettings


-- | Creates a VPC link.
module Network.AWS.ApiGatewayV2.CreateVpcLink

-- | Creates a VPC link
--   
--   <i>See:</i> <a>newCreateVpcLink</a> smart constructor.
data CreateVpcLink
CreateVpcLink' :: Maybe [Text] -> Maybe (HashMap Text Text) -> [Text] -> Text -> CreateVpcLink

-- | A list of security group IDs for the VPC link.
[$sel:securityGroupIds:CreateVpcLink'] :: CreateVpcLink -> Maybe [Text]

-- | A list of tags.
[$sel:tags:CreateVpcLink'] :: CreateVpcLink -> Maybe (HashMap Text Text)

-- | A list of subnet IDs to include in the VPC link.
[$sel:subnetIds:CreateVpcLink'] :: CreateVpcLink -> [Text]

-- | The name of the VPC link.
[$sel:name:CreateVpcLink'] :: CreateVpcLink -> Text

-- | Create a value of <a>CreateVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:CreateVpcLink'</a>,
--   <a>createVpcLink_securityGroupIds</a> - A list of security group IDs
--   for the VPC link.
--   
--   <a>$sel:tags:CreateVpcLink'</a>, <a>createVpcLink_tags</a> - A list of
--   tags.
--   
--   <a>$sel:subnetIds:CreateVpcLink'</a>, <a>createVpcLink_subnetIds</a> -
--   A list of subnet IDs to include in the VPC link.
--   
--   <a>$sel:name:CreateVpcLink'</a>, <a>createVpcLink_name</a> - The name
--   of the VPC link.
newCreateVpcLink :: Text -> CreateVpcLink

-- | A list of security group IDs for the VPC link.
createVpcLink_securityGroupIds :: Lens' CreateVpcLink (Maybe [Text])

-- | A list of tags.
createVpcLink_tags :: Lens' CreateVpcLink (Maybe (HashMap Text Text))

-- | A list of subnet IDs to include in the VPC link.
createVpcLink_subnetIds :: Lens' CreateVpcLink [Text]

-- | The name of the VPC link.
createVpcLink_name :: Lens' CreateVpcLink Text

-- | <i>See:</i> <a>newCreateVpcLinkResponse</a> smart constructor.
data CreateVpcLinkResponse
CreateVpcLinkResponse' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe VpcLinkVersion -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe VpcLinkStatus -> Int -> CreateVpcLinkResponse

-- | A list of security group IDs for the VPC link.
[$sel:securityGroupIds:CreateVpcLinkResponse'] :: CreateVpcLinkResponse -> Maybe [Text]

-- | A list of subnet IDs to include in the VPC link.
[$sel:subnetIds:CreateVpcLinkResponse'] :: CreateVpcLinkResponse -> Maybe [Text]

-- | The ID of the VPC link.
[$sel:vpcLinkId:CreateVpcLinkResponse'] :: CreateVpcLinkResponse -> Maybe Text

-- | The timestamp when the VPC link was created.
[$sel:createdDate:CreateVpcLinkResponse'] :: CreateVpcLinkResponse -> Maybe POSIX

-- | The version of the VPC link.
[$sel:vpcLinkVersion:CreateVpcLinkResponse'] :: CreateVpcLinkResponse -> Maybe VpcLinkVersion

-- | The name of the VPC link.
[$sel:name:CreateVpcLinkResponse'] :: CreateVpcLinkResponse -> Maybe Text

-- | A message summarizing the cause of the status of the VPC link.
[$sel:vpcLinkStatusMessage:CreateVpcLinkResponse'] :: CreateVpcLinkResponse -> Maybe Text

-- | Tags for the VPC link.
[$sel:tags:CreateVpcLinkResponse'] :: CreateVpcLinkResponse -> Maybe (HashMap Text Text)

-- | The status of the VPC link.
[$sel:vpcLinkStatus:CreateVpcLinkResponse'] :: CreateVpcLinkResponse -> Maybe VpcLinkStatus

-- | The response's http status code.
[$sel:httpStatus:CreateVpcLinkResponse'] :: CreateVpcLinkResponse -> Int

-- | Create a value of <a>CreateVpcLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:CreateVpcLink'</a>,
--   <a>createVpcLinkResponse_securityGroupIds</a> - A list of security
--   group IDs for the VPC link.
--   
--   <a>$sel:subnetIds:CreateVpcLink'</a>,
--   <a>createVpcLinkResponse_subnetIds</a> - A list of subnet IDs to
--   include in the VPC link.
--   
--   <a>$sel:vpcLinkId:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_vpcLinkId</a> - The ID of the VPC link.
--   
--   <a>$sel:createdDate:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_createdDate</a> - The timestamp when the VPC
--   link was created.
--   
--   <a>$sel:vpcLinkVersion:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_vpcLinkVersion</a> - The version of the VPC
--   link.
--   
--   <a>$sel:name:CreateVpcLink'</a>, <a>createVpcLinkResponse_name</a> -
--   The name of the VPC link.
--   
--   <a>$sel:vpcLinkStatusMessage:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_vpcLinkStatusMessage</a> - A message
--   summarizing the cause of the status of the VPC link.
--   
--   <a>$sel:tags:CreateVpcLink'</a>, <a>createVpcLinkResponse_tags</a> -
--   Tags for the VPC link.
--   
--   <a>$sel:vpcLinkStatus:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_vpcLinkStatus</a> - The status of the VPC
--   link.
--   
--   <a>$sel:httpStatus:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_httpStatus</a> - The response's http status
--   code.
newCreateVpcLinkResponse :: Int -> CreateVpcLinkResponse

-- | A list of security group IDs for the VPC link.
createVpcLinkResponse_securityGroupIds :: Lens' CreateVpcLinkResponse (Maybe [Text])

-- | A list of subnet IDs to include in the VPC link.
createVpcLinkResponse_subnetIds :: Lens' CreateVpcLinkResponse (Maybe [Text])

-- | The ID of the VPC link.
createVpcLinkResponse_vpcLinkId :: Lens' CreateVpcLinkResponse (Maybe Text)

-- | The timestamp when the VPC link was created.
createVpcLinkResponse_createdDate :: Lens' CreateVpcLinkResponse (Maybe UTCTime)

-- | The version of the VPC link.
createVpcLinkResponse_vpcLinkVersion :: Lens' CreateVpcLinkResponse (Maybe VpcLinkVersion)

-- | The name of the VPC link.
createVpcLinkResponse_name :: Lens' CreateVpcLinkResponse (Maybe Text)

-- | A message summarizing the cause of the status of the VPC link.
createVpcLinkResponse_vpcLinkStatusMessage :: Lens' CreateVpcLinkResponse (Maybe Text)

-- | Tags for the VPC link.
createVpcLinkResponse_tags :: Lens' CreateVpcLinkResponse (Maybe (HashMap Text Text))

-- | The status of the VPC link.
createVpcLinkResponse_vpcLinkStatus :: Lens' CreateVpcLinkResponse (Maybe VpcLinkStatus)

-- | The response's http status code.
createVpcLinkResponse_httpStatus :: Lens' CreateVpcLinkResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLink
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLink
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLink
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLink
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLinkResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLinkResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLinkResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLinkResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLink
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLinkResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLink
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLink
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLink
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLink
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLink
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateVpcLink.CreateVpcLink


-- | Creates a Stage for an API.
module Network.AWS.ApiGatewayV2.CreateStage

-- | Creates a new Stage resource to represent a stage.
--   
--   <i>See:</i> <a>newCreateStage</a> smart constructor.
data CreateStage
CreateStage' :: Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe RouteSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateStage

-- | The deployment identifier of the API stage.
[$sel:deploymentId:CreateStage'] :: CreateStage -> Maybe Text

-- | Route settings for the stage, by routeKey.
[$sel:routeSettings:CreateStage'] :: CreateStage -> Maybe (HashMap Text RouteSettings)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:CreateStage'] :: CreateStage -> Maybe AccessLogSettings

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
[$sel:clientCertificateId:CreateStage'] :: CreateStage -> Maybe Text

-- | A map that defines the stage variables for a Stage. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
[$sel:stageVariables:CreateStage'] :: CreateStage -> Maybe (HashMap Text Text)

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
[$sel:autoDeploy:CreateStage'] :: CreateStage -> Maybe Bool

-- | The default route settings for the stage.
[$sel:defaultRouteSettings:CreateStage'] :: CreateStage -> Maybe RouteSettings

-- | The description for the API stage.
[$sel:description:CreateStage'] :: CreateStage -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:CreateStage'] :: CreateStage -> Maybe (HashMap Text Text)

-- | The API identifier.
[$sel:apiId:CreateStage'] :: CreateStage -> Text

-- | The name of the stage.
[$sel:stageName:CreateStage'] :: CreateStage -> Text

-- | Create a value of <a>CreateStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CreateStage'</a>, <a>createStage_deploymentId</a>
--   - The deployment identifier of the API stage.
--   
--   <a>$sel:routeSettings:CreateStage'</a>,
--   <a>createStage_routeSettings</a> - Route settings for the stage, by
--   routeKey.
--   
--   <a>$sel:accessLogSettings:CreateStage'</a>,
--   <a>createStage_accessLogSettings</a> - Settings for logging access in
--   this stage.
--   
--   <a>$sel:clientCertificateId:CreateStage'</a>,
--   <a>createStage_clientCertificateId</a> - The identifier of a client
--   certificate for a Stage. Supported only for WebSocket APIs.
--   
--   <a>$sel:stageVariables:CreateStage'</a>,
--   <a>createStage_stageVariables</a> - A map that defines the stage
--   variables for a Stage. Variable names can have alphanumeric and
--   underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:CreateStage'</a>, <a>createStage_autoDeploy</a> -
--   Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
--   
--   <a>$sel:defaultRouteSettings:CreateStage'</a>,
--   <a>createStage_defaultRouteSettings</a> - The default route settings
--   for the stage.
--   
--   <a>$sel:description:CreateStage'</a>, <a>createStage_description</a> -
--   The description for the API stage.
--   
--   <a>$sel:tags:CreateStage'</a>, <a>createStage_tags</a> - The
--   collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:apiId:CreateStage'</a>, <a>createStage_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:stageName:CreateStage'</a>, <a>createStage_stageName</a> - The
--   name of the stage.
newCreateStage :: Text -> Text -> CreateStage

-- | The deployment identifier of the API stage.
createStage_deploymentId :: Lens' CreateStage (Maybe Text)

-- | Route settings for the stage, by routeKey.
createStage_routeSettings :: Lens' CreateStage (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
createStage_accessLogSettings :: Lens' CreateStage (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
createStage_clientCertificateId :: Lens' CreateStage (Maybe Text)

-- | A map that defines the stage variables for a Stage. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
createStage_stageVariables :: Lens' CreateStage (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
createStage_autoDeploy :: Lens' CreateStage (Maybe Bool)

-- | The default route settings for the stage.
createStage_defaultRouteSettings :: Lens' CreateStage (Maybe RouteSettings)

-- | The description for the API stage.
createStage_description :: Lens' CreateStage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
createStage_tags :: Lens' CreateStage (Maybe (HashMap Text Text))

-- | The API identifier.
createStage_apiId :: Lens' CreateStage Text

-- | The name of the stage.
createStage_stageName :: Lens' CreateStage Text

-- | <i>See:</i> <a>newCreateStageResponse</a> smart constructor.
data CreateStageResponse
CreateStageResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe POSIX -> Maybe RouteSettings -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateStageResponse

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
[$sel:lastDeploymentStatusMessage:CreateStageResponse'] :: CreateStageResponse -> Maybe Text

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
[$sel:deploymentId:CreateStageResponse'] :: CreateStageResponse -> Maybe Text

-- | Route settings for the stage, by routeKey.
[$sel:routeSettings:CreateStageResponse'] :: CreateStageResponse -> Maybe (HashMap Text RouteSettings)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:CreateStageResponse'] :: CreateStageResponse -> Maybe AccessLogSettings

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
[$sel:clientCertificateId:CreateStageResponse'] :: CreateStageResponse -> Maybe Text

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
[$sel:stageVariables:CreateStageResponse'] :: CreateStageResponse -> Maybe (HashMap Text Text)

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
[$sel:autoDeploy:CreateStageResponse'] :: CreateStageResponse -> Maybe Bool

-- | The timestamp when the stage was created.
[$sel:createdDate:CreateStageResponse'] :: CreateStageResponse -> Maybe POSIX

-- | Default route settings for the stage.
[$sel:defaultRouteSettings:CreateStageResponse'] :: CreateStageResponse -> Maybe RouteSettings

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
[$sel:apiGatewayManaged:CreateStageResponse'] :: CreateStageResponse -> Maybe Bool

-- | The name of the stage.
[$sel:stageName:CreateStageResponse'] :: CreateStageResponse -> Maybe Text

-- | The timestamp when the stage was last updated.
[$sel:lastUpdatedDate:CreateStageResponse'] :: CreateStageResponse -> Maybe POSIX

-- | The description of the stage.
[$sel:description:CreateStageResponse'] :: CreateStageResponse -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:CreateStageResponse'] :: CreateStageResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateStageResponse'] :: CreateStageResponse -> Int

-- | Create a value of <a>CreateStageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentStatusMessage:CreateStageResponse'</a>,
--   <a>createStageResponse_lastDeploymentStatusMessage</a> - Describes the
--   status of the last deployment of a stage. Supported only for stages
--   with autoDeploy enabled.
--   
--   <a>$sel:deploymentId:CreateStage'</a>,
--   <a>createStageResponse_deploymentId</a> - The identifier of the
--   Deployment that the Stage is associated with. Can't be updated if
--   autoDeploy is enabled.
--   
--   <a>$sel:routeSettings:CreateStage'</a>,
--   <a>createStageResponse_routeSettings</a> - Route settings for the
--   stage, by routeKey.
--   
--   <a>$sel:accessLogSettings:CreateStage'</a>,
--   <a>createStageResponse_accessLogSettings</a> - Settings for logging
--   access in this stage.
--   
--   <a>$sel:clientCertificateId:CreateStage'</a>,
--   <a>createStageResponse_clientCertificateId</a> - The identifier of a
--   client certificate for a Stage. Supported only for WebSocket APIs.
--   
--   <a>$sel:stageVariables:CreateStage'</a>,
--   <a>createStageResponse_stageVariables</a> - A map that defines the
--   stage variables for a stage resource. Variable names can have
--   alphanumeric and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:CreateStage'</a>,
--   <a>createStageResponse_autoDeploy</a> - Specifies whether updates to
--   an API automatically trigger a new deployment. The default value is
--   false.
--   
--   <a>$sel:createdDate:CreateStageResponse'</a>,
--   <a>createStageResponse_createdDate</a> - The timestamp when the stage
--   was created.
--   
--   <a>$sel:defaultRouteSettings:CreateStage'</a>,
--   <a>createStageResponse_defaultRouteSettings</a> - Default route
--   settings for the stage.
--   
--   <a>$sel:apiGatewayManaged:CreateStageResponse'</a>,
--   <a>createStageResponse_apiGatewayManaged</a> - Specifies whether a
--   stage is managed by API Gateway. If you created an API using quick
--   create, the $default stage is managed by API Gateway. You can't modify
--   the $default stage.
--   
--   <a>$sel:stageName:CreateStage'</a>,
--   <a>createStageResponse_stageName</a> - The name of the stage.
--   
--   <a>$sel:lastUpdatedDate:CreateStageResponse'</a>,
--   <a>createStageResponse_lastUpdatedDate</a> - The timestamp when the
--   stage was last updated.
--   
--   <a>$sel:description:CreateStage'</a>,
--   <a>createStageResponse_description</a> - The description of the stage.
--   
--   <a>$sel:tags:CreateStage'</a>, <a>createStageResponse_tags</a> - The
--   collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:httpStatus:CreateStageResponse'</a>,
--   <a>createStageResponse_httpStatus</a> - The response's http status
--   code.
newCreateStageResponse :: Int -> CreateStageResponse

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
createStageResponse_lastDeploymentStatusMessage :: Lens' CreateStageResponse (Maybe Text)

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
createStageResponse_deploymentId :: Lens' CreateStageResponse (Maybe Text)

-- | Route settings for the stage, by routeKey.
createStageResponse_routeSettings :: Lens' CreateStageResponse (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
createStageResponse_accessLogSettings :: Lens' CreateStageResponse (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
createStageResponse_clientCertificateId :: Lens' CreateStageResponse (Maybe Text)

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
createStageResponse_stageVariables :: Lens' CreateStageResponse (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
createStageResponse_autoDeploy :: Lens' CreateStageResponse (Maybe Bool)

-- | The timestamp when the stage was created.
createStageResponse_createdDate :: Lens' CreateStageResponse (Maybe UTCTime)

-- | Default route settings for the stage.
createStageResponse_defaultRouteSettings :: Lens' CreateStageResponse (Maybe RouteSettings)

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
createStageResponse_apiGatewayManaged :: Lens' CreateStageResponse (Maybe Bool)

-- | The name of the stage.
createStageResponse_stageName :: Lens' CreateStageResponse (Maybe Text)

-- | The timestamp when the stage was last updated.
createStageResponse_lastUpdatedDate :: Lens' CreateStageResponse (Maybe UTCTime)

-- | The description of the stage.
createStageResponse_description :: Lens' CreateStageResponse (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
createStageResponse_tags :: Lens' CreateStageResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createStageResponse_httpStatus :: Lens' CreateStageResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateStage.CreateStage
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateStage.CreateStage
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateStage.CreateStage
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateStage.CreateStage
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateStage.CreateStageResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateStage.CreateStageResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateStage.CreateStageResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateStage.CreateStageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateStage.CreateStage
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateStage.CreateStageResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateStage.CreateStage
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateStage.CreateStage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateStage.CreateStage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateStage.CreateStage
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateStage.CreateStage
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateStage.CreateStage


-- | Creates a RouteResponse for a Route.
module Network.AWS.ApiGatewayV2.CreateRouteResponse

-- | Creates a new RouteResponse resource to represent a route response.
--   
--   <i>See:</i> <a>newCreateRouteResponse</a> smart constructor.
data CreateRouteResponse
CreateRouteResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text ParameterConstraints) -> Text -> Text -> Text -> CreateRouteResponse

-- | The model selection expression for the route response. Supported only
--   for WebSocket APIs.
[$sel:modelSelectionExpression:CreateRouteResponse'] :: CreateRouteResponse -> Maybe Text

-- | The response models for the route response.
[$sel:responseModels:CreateRouteResponse'] :: CreateRouteResponse -> Maybe (HashMap Text Text)

-- | The route response parameters.
[$sel:responseParameters:CreateRouteResponse'] :: CreateRouteResponse -> Maybe (HashMap Text ParameterConstraints)

-- | The API identifier.
[$sel:apiId:CreateRouteResponse'] :: CreateRouteResponse -> Text

-- | The route ID.
[$sel:routeId:CreateRouteResponse'] :: CreateRouteResponse -> Text

-- | The route response key.
[$sel:routeResponseKey:CreateRouteResponse'] :: CreateRouteResponse -> Text

-- | Create a value of <a>CreateRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:CreateRouteResponse'</a>,
--   <a>createRouteResponse_modelSelectionExpression</a> - The model
--   selection expression for the route response. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:responseModels:CreateRouteResponse'</a>,
--   <a>createRouteResponse_responseModels</a> - The response models for
--   the route response.
--   
--   <a>$sel:responseParameters:CreateRouteResponse'</a>,
--   <a>createRouteResponse_responseParameters</a> - The route response
--   parameters.
--   
--   <a>$sel:apiId:CreateRouteResponse'</a>,
--   <a>createRouteResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:routeId:CreateRouteResponse'</a>,
--   <a>createRouteResponse_routeId</a> - The route ID.
--   
--   <a>$sel:routeResponseKey:CreateRouteResponse'</a>,
--   <a>createRouteResponse_routeResponseKey</a> - The route response key.
newCreateRouteResponse :: Text -> Text -> Text -> CreateRouteResponse

-- | The model selection expression for the route response. Supported only
--   for WebSocket APIs.
createRouteResponse_modelSelectionExpression :: Lens' CreateRouteResponse (Maybe Text)

-- | The response models for the route response.
createRouteResponse_responseModels :: Lens' CreateRouteResponse (Maybe (HashMap Text Text))

-- | The route response parameters.
createRouteResponse_responseParameters :: Lens' CreateRouteResponse (Maybe (HashMap Text ParameterConstraints))

-- | The API identifier.
createRouteResponse_apiId :: Lens' CreateRouteResponse Text

-- | The route ID.
createRouteResponse_routeId :: Lens' CreateRouteResponse Text

-- | The route response key.
createRouteResponse_routeResponseKey :: Lens' CreateRouteResponse Text

-- | <i>See:</i> <a>newCreateRouteResponseResponse</a> smart constructor.
data CreateRouteResponseResponse
CreateRouteResponseResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Int -> CreateRouteResponseResponse

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
[$sel:modelSelectionExpression:CreateRouteResponseResponse'] :: CreateRouteResponseResponse -> Maybe Text

-- | Represents the response models of a route response.
[$sel:responseModels:CreateRouteResponseResponse'] :: CreateRouteResponseResponse -> Maybe (HashMap Text Text)

-- | Represents the identifier of a route response.
[$sel:routeResponseId:CreateRouteResponseResponse'] :: CreateRouteResponseResponse -> Maybe Text

-- | Represents the route response key of a route response.
[$sel:routeResponseKey:CreateRouteResponseResponse'] :: CreateRouteResponseResponse -> Maybe Text

-- | Represents the response parameters of a route response.
[$sel:responseParameters:CreateRouteResponseResponse'] :: CreateRouteResponseResponse -> Maybe (HashMap Text ParameterConstraints)

-- | The response's http status code.
[$sel:httpStatus:CreateRouteResponseResponse'] :: CreateRouteResponseResponse -> Int

-- | Create a value of <a>CreateRouteResponseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:CreateRouteResponse'</a>,
--   <a>createRouteResponseResponse_modelSelectionExpression</a> -
--   Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:responseModels:CreateRouteResponse'</a>,
--   <a>createRouteResponseResponse_responseModels</a> - Represents the
--   response models of a route response.
--   
--   <a>$sel:routeResponseId:CreateRouteResponseResponse'</a>,
--   <a>createRouteResponseResponse_routeResponseId</a> - Represents the
--   identifier of a route response.
--   
--   <a>$sel:routeResponseKey:CreateRouteResponse'</a>,
--   <a>createRouteResponseResponse_routeResponseKey</a> - Represents the
--   route response key of a route response.
--   
--   <a>$sel:responseParameters:CreateRouteResponse'</a>,
--   <a>createRouteResponseResponse_responseParameters</a> - Represents the
--   response parameters of a route response.
--   
--   <a>$sel:httpStatus:CreateRouteResponseResponse'</a>,
--   <a>createRouteResponseResponse_httpStatus</a> - The response's http
--   status code.
newCreateRouteResponseResponse :: Int -> CreateRouteResponseResponse

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
createRouteResponseResponse_modelSelectionExpression :: Lens' CreateRouteResponseResponse (Maybe Text)

-- | Represents the response models of a route response.
createRouteResponseResponse_responseModels :: Lens' CreateRouteResponseResponse (Maybe (HashMap Text Text))

-- | Represents the identifier of a route response.
createRouteResponseResponse_routeResponseId :: Lens' CreateRouteResponseResponse (Maybe Text)

-- | Represents the route response key of a route response.
createRouteResponseResponse_routeResponseKey :: Lens' CreateRouteResponseResponse (Maybe Text)

-- | Represents the response parameters of a route response.
createRouteResponseResponse_responseParameters :: Lens' CreateRouteResponseResponse (Maybe (HashMap Text ParameterConstraints))

-- | The response's http status code.
createRouteResponseResponse_httpStatus :: Lens' CreateRouteResponseResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponseResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponseResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponseResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponseResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponse
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponse
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponse
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponse
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateRouteResponse.CreateRouteResponse


-- | Creates a Route for an API.
module Network.AWS.ApiGatewayV2.CreateRoute

-- | Creates a new Route resource to represent a route.
--   
--   <i>See:</i> <a>newCreateRoute</a> smart constructor.
data CreateRoute
CreateRoute' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Text -> Text -> CreateRoute

-- | The authorization scopes supported by this route.
[$sel:authorizationScopes:CreateRoute'] :: CreateRoute -> Maybe [Text]

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
[$sel:modelSelectionExpression:CreateRoute'] :: CreateRoute -> Maybe Text

-- | The request models for the route. Supported only for WebSocket APIs.
[$sel:requestModels:CreateRoute'] :: CreateRoute -> Maybe (HashMap Text Text)

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
[$sel:routeResponseSelectionExpression:CreateRoute'] :: CreateRoute -> Maybe Text

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
[$sel:requestParameters:CreateRoute'] :: CreateRoute -> Maybe (HashMap Text ParameterConstraints)

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
[$sel:authorizerId:CreateRoute'] :: CreateRoute -> Maybe Text

-- | The operation name for the route.
[$sel:operationName:CreateRoute'] :: CreateRoute -> Maybe Text

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
[$sel:authorizationType:CreateRoute'] :: CreateRoute -> Maybe AuthorizationType

-- | Specifies whether an API key is required for the route. Supported only
--   for WebSocket APIs.
[$sel:apiKeyRequired:CreateRoute'] :: CreateRoute -> Maybe Bool

-- | The target for the route.
[$sel:target:CreateRoute'] :: CreateRoute -> Maybe Text

-- | The API identifier.
[$sel:apiId:CreateRoute'] :: CreateRoute -> Text

-- | The route key for the route.
[$sel:routeKey:CreateRoute'] :: CreateRoute -> Text

-- | Create a value of <a>CreateRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:CreateRoute'</a>,
--   <a>createRoute_authorizationScopes</a> - The authorization scopes
--   supported by this route.
--   
--   <a>$sel:modelSelectionExpression:CreateRoute'</a>,
--   <a>createRoute_modelSelectionExpression</a> - The model selection
--   expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:CreateRoute'</a>,
--   <a>createRoute_requestModels</a> - The request models for the route.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:CreateRoute'</a>,
--   <a>createRoute_routeResponseSelectionExpression</a> - The route
--   response selection expression for the route. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:requestParameters:CreateRoute'</a>,
--   <a>createRoute_requestParameters</a> - The request parameters for the
--   route. Supported only for WebSocket APIs.
--   
--   <a>$sel:authorizerId:CreateRoute'</a>, <a>createRoute_authorizerId</a>
--   - The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
--   
--   <a>$sel:operationName:CreateRoute'</a>,
--   <a>createRoute_operationName</a> - The operation name for the route.
--   
--   <a>$sel:authorizationType:CreateRoute'</a>,
--   <a>createRoute_authorizationType</a> - The authorization type for the
--   route. For WebSocket APIs, valid values are NONE for open access,
--   AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda
--   authorizer For HTTP APIs, valid values are NONE for open access, JWT
--   for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:CreateRoute'</a>,
--   <a>createRoute_apiKeyRequired</a> - Specifies whether an API key is
--   required for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:target:CreateRoute'</a>, <a>createRoute_target</a> - The
--   target for the route.
--   
--   <a>$sel:apiId:CreateRoute'</a>, <a>createRoute_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:routeKey:CreateRoute'</a>, <a>createRoute_routeKey</a> - The
--   route key for the route.
newCreateRoute :: Text -> Text -> CreateRoute

-- | The authorization scopes supported by this route.
createRoute_authorizationScopes :: Lens' CreateRoute (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
createRoute_modelSelectionExpression :: Lens' CreateRoute (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
createRoute_requestModels :: Lens' CreateRoute (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
createRoute_routeResponseSelectionExpression :: Lens' CreateRoute (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
createRoute_requestParameters :: Lens' CreateRoute (Maybe (HashMap Text ParameterConstraints))

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
createRoute_authorizerId :: Lens' CreateRoute (Maybe Text)

-- | The operation name for the route.
createRoute_operationName :: Lens' CreateRoute (Maybe Text)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
createRoute_authorizationType :: Lens' CreateRoute (Maybe AuthorizationType)

-- | Specifies whether an API key is required for the route. Supported only
--   for WebSocket APIs.
createRoute_apiKeyRequired :: Lens' CreateRoute (Maybe Bool)

-- | The target for the route.
createRoute_target :: Lens' CreateRoute (Maybe Text)

-- | The API identifier.
createRoute_apiId :: Lens' CreateRoute Text

-- | The route key for the route.
createRoute_routeKey :: Lens' CreateRoute Text

-- | <i>See:</i> <a>newCreateRouteResponse'</a> smart constructor.
data CreateRouteResponse'
CreateRouteResponse'' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Maybe Text -> Int -> CreateRouteResponse'

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
[$sel:authorizationScopes:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe [Text]

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
[$sel:modelSelectionExpression:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe Text

-- | The request models for the route. Supported only for WebSocket APIs.
[$sel:requestModels:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe (HashMap Text Text)

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
[$sel:routeResponseSelectionExpression:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe Text

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
[$sel:requestParameters:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe (HashMap Text ParameterConstraints)

-- | The route ID.
[$sel:routeId:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe Text

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
[$sel:authorizerId:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe Text

-- | The operation name for the route.
[$sel:operationName:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe Text

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
[$sel:apiGatewayManaged:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe Bool

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
[$sel:authorizationType:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe AuthorizationType

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
[$sel:apiKeyRequired:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe Bool

-- | The route key for the route.
[$sel:routeKey:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe Text

-- | The target for the route.
[$sel:target:CreateRouteResponse''] :: CreateRouteResponse' -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateRouteResponse''] :: CreateRouteResponse' -> Int

-- | Create a value of <a>CreateRouteResponse'</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:CreateRoute'</a>,
--   <a>createRouteResponse'_authorizationScopes</a> - A list of
--   authorization scopes configured on a route. The scopes are used with a
--   JWT authorizer to authorize the method invocation. The authorization
--   works by matching the route scopes against the scopes parsed from the
--   access token in the incoming request. The method invocation is
--   authorized if any route scope matches a claimed scope in the access
--   token. Otherwise, the invocation is not authorized. When the route
--   scope is configured, the client must provide an access token instead
--   of an identity token for authorization purposes.
--   
--   <a>$sel:modelSelectionExpression:CreateRoute'</a>,
--   <a>createRouteResponse'_modelSelectionExpression</a> - The model
--   selection expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:CreateRoute'</a>,
--   <a>createRouteResponse'_requestModels</a> - The request models for the
--   route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:CreateRoute'</a>,
--   <a>createRouteResponse'_routeResponseSelectionExpression</a> - The
--   route response selection expression for the route. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:requestParameters:CreateRoute'</a>,
--   <a>createRouteResponse'_requestParameters</a> - The request parameters
--   for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeId:CreateRouteResponse''</a>,
--   <a>createRouteResponse'_routeId</a> - The route ID.
--   
--   <a>$sel:authorizerId:CreateRoute'</a>,
--   <a>createRouteResponse'_authorizerId</a> - The identifier of the
--   Authorizer resource to be associated with this route. The authorizer
--   identifier is generated by API Gateway when you created the
--   authorizer.
--   
--   <a>$sel:operationName:CreateRoute'</a>,
--   <a>createRouteResponse'_operationName</a> - The operation name for the
--   route.
--   
--   <a>$sel:apiGatewayManaged:CreateRouteResponse''</a>,
--   <a>createRouteResponse'_apiGatewayManaged</a> - Specifies whether a
--   route is managed by API Gateway. If you created an API using quick
--   create, the $default route is managed by API Gateway. You can't modify
--   the $default route key.
--   
--   <a>$sel:authorizationType:CreateRoute'</a>,
--   <a>createRouteResponse'_authorizationType</a> - The authorization type
--   for the route. For WebSocket APIs, valid values are NONE for open
--   access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a
--   Lambda authorizer For HTTP APIs, valid values are NONE for open
--   access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM
--   permissions, and CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:CreateRoute'</a>,
--   <a>createRouteResponse'_apiKeyRequired</a> - Specifies whether an API
--   key is required for this route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeKey:CreateRoute'</a>,
--   <a>createRouteResponse'_routeKey</a> - The route key for the route.
--   
--   <a>$sel:target:CreateRoute'</a>, <a>createRouteResponse'_target</a> -
--   The target for the route.
--   
--   <a>$sel:httpStatus:CreateRouteResponse''</a>,
--   <a>createRouteResponse'_httpStatus</a> - The response's http status
--   code.
newCreateRouteResponse' :: Int -> CreateRouteResponse'

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
createRouteResponse'_authorizationScopes :: Lens' CreateRouteResponse' (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
createRouteResponse'_modelSelectionExpression :: Lens' CreateRouteResponse' (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
createRouteResponse'_requestModels :: Lens' CreateRouteResponse' (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
createRouteResponse'_routeResponseSelectionExpression :: Lens' CreateRouteResponse' (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
createRouteResponse'_requestParameters :: Lens' CreateRouteResponse' (Maybe (HashMap Text ParameterConstraints))

-- | The route ID.
createRouteResponse'_routeId :: Lens' CreateRouteResponse' (Maybe Text)

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
createRouteResponse'_authorizerId :: Lens' CreateRouteResponse' (Maybe Text)

-- | The operation name for the route.
createRouteResponse'_operationName :: Lens' CreateRouteResponse' (Maybe Text)

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
createRouteResponse'_apiGatewayManaged :: Lens' CreateRouteResponse' (Maybe Bool)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
createRouteResponse'_authorizationType :: Lens' CreateRouteResponse' (Maybe AuthorizationType)

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
createRouteResponse'_apiKeyRequired :: Lens' CreateRouteResponse' (Maybe Bool)

-- | The route key for the route.
createRouteResponse'_routeKey :: Lens' CreateRouteResponse' (Maybe Text)

-- | The target for the route.
createRouteResponse'_target :: Lens' CreateRouteResponse' (Maybe Text)

-- | The response's http status code.
createRouteResponse'_httpStatus :: Lens' CreateRouteResponse' Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateRoute.CreateRoute
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateRoute.CreateRoute
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateRoute.CreateRoute
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateRoute.CreateRoute
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateRoute.CreateRouteResponse'
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateRoute.CreateRouteResponse'
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateRoute.CreateRouteResponse'
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateRoute.CreateRouteResponse'
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateRoute.CreateRoute
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateRoute.CreateRouteResponse'
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateRoute.CreateRoute
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateRoute.CreateRoute
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateRoute.CreateRoute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateRoute.CreateRoute
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateRoute.CreateRoute
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateRoute.CreateRoute


-- | Creates a Model for an API.
module Network.AWS.ApiGatewayV2.CreateModel

-- | Creates a new Model.
--   
--   <i>See:</i> <a>newCreateModel</a> smart constructor.
data CreateModel
CreateModel' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> CreateModel

-- | The description of the model.
[$sel:description:CreateModel'] :: CreateModel -> Maybe Text

-- | The content-type for the model, for example, "application/json".
[$sel:contentType:CreateModel'] :: CreateModel -> Maybe Text

-- | The API identifier.
[$sel:apiId:CreateModel'] :: CreateModel -> Text

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
[$sel:schema:CreateModel'] :: CreateModel -> Text

-- | The name of the model. Must be alphanumeric.
[$sel:name:CreateModel'] :: CreateModel -> Text

-- | Create a value of <a>CreateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateModel'</a>, <a>createModel_description</a> -
--   The description of the model.
--   
--   <a>$sel:contentType:CreateModel'</a>, <a>createModel_contentType</a> -
--   The content-type for the model, for example, "application/json".
--   
--   <a>$sel:apiId:CreateModel'</a>, <a>createModel_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:schema:CreateModel'</a>, <a>createModel_schema</a> - The
--   schema for the model. For application/json models, this should be JSON
--   schema draft 4 model.
--   
--   <a>$sel:name:CreateModel'</a>, <a>createModel_name</a> - The name of
--   the model. Must be alphanumeric.
newCreateModel :: Text -> Text -> Text -> CreateModel

-- | The description of the model.
createModel_description :: Lens' CreateModel (Maybe Text)

-- | The content-type for the model, for example, "application/json".
createModel_contentType :: Lens' CreateModel (Maybe Text)

-- | The API identifier.
createModel_apiId :: Lens' CreateModel Text

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
createModel_schema :: Lens' CreateModel Text

-- | The name of the model. Must be alphanumeric.
createModel_name :: Lens' CreateModel Text

-- | <i>See:</i> <a>newCreateModelResponse</a> smart constructor.
data CreateModelResponse
CreateModelResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateModelResponse

-- | The model identifier.
[$sel:modelId:CreateModelResponse'] :: CreateModelResponse -> Maybe Text

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
[$sel:schema:CreateModelResponse'] :: CreateModelResponse -> Maybe Text

-- | The name of the model. Must be alphanumeric.
[$sel:name:CreateModelResponse'] :: CreateModelResponse -> Maybe Text

-- | The description of the model.
[$sel:description:CreateModelResponse'] :: CreateModelResponse -> Maybe Text

-- | The content-type for the model, for example, "application/json".
[$sel:contentType:CreateModelResponse'] :: CreateModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateModelResponse'] :: CreateModelResponse -> Int

-- | Create a value of <a>CreateModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:CreateModelResponse'</a>,
--   <a>createModelResponse_modelId</a> - The model identifier.
--   
--   <a>$sel:schema:CreateModel'</a>, <a>createModelResponse_schema</a> -
--   The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
--   
--   <a>$sel:name:CreateModel'</a>, <a>createModelResponse_name</a> - The
--   name of the model. Must be alphanumeric.
--   
--   <a>$sel:description:CreateModel'</a>,
--   <a>createModelResponse_description</a> - The description of the model.
--   
--   <a>$sel:contentType:CreateModel'</a>,
--   <a>createModelResponse_contentType</a> - The content-type for the
--   model, for example, "application/json".
--   
--   <a>$sel:httpStatus:CreateModelResponse'</a>,
--   <a>createModelResponse_httpStatus</a> - The response's http status
--   code.
newCreateModelResponse :: Int -> CreateModelResponse

-- | The model identifier.
createModelResponse_modelId :: Lens' CreateModelResponse (Maybe Text)

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
createModelResponse_schema :: Lens' CreateModelResponse (Maybe Text)

-- | The name of the model. Must be alphanumeric.
createModelResponse_name :: Lens' CreateModelResponse (Maybe Text)

-- | The description of the model.
createModelResponse_description :: Lens' CreateModelResponse (Maybe Text)

-- | The content-type for the model, for example, "application/json".
createModelResponse_contentType :: Lens' CreateModelResponse (Maybe Text)

-- | The response's http status code.
createModelResponse_httpStatus :: Lens' CreateModelResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateModel.CreateModel
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateModel.CreateModel
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateModel.CreateModel
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateModel.CreateModel
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateModel.CreateModelResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateModel.CreateModelResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateModel.CreateModelResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateModel.CreateModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateModel.CreateModel
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateModel.CreateModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateModel.CreateModel
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateModel.CreateModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateModel.CreateModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateModel.CreateModel
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateModel.CreateModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateModel.CreateModel


-- | Creates an IntegrationResponses.
module Network.AWS.ApiGatewayV2.CreateIntegrationResponse

-- | Creates a new IntegrationResponse resource to represent an integration
--   response.
--   
--   <i>See:</i> <a>newCreateIntegrationResponse</a> smart constructor.
data CreateIntegrationResponse
CreateIntegrationResponse' :: Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateIntegrationResponse

-- | The template selection expression for the integration response.
--   Supported only for WebSocket APIs.
[$sel:templateSelectionExpression:CreateIntegrationResponse'] :: CreateIntegrationResponse -> Maybe Text

-- | Specifies how to handle response payload content type conversions.
--   Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the
--   following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:CreateIntegrationResponse'] :: CreateIntegrationResponse -> Maybe ContentHandlingStrategy

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
[$sel:responseTemplates:CreateIntegrationResponse'] :: CreateIntegrationResponse -> Maybe (HashMap Text Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where {name}
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where {name} is a valid
--   and unique response header name and {JSON-expression} is a valid JSON
--   expression without the $ prefix.
[$sel:responseParameters:CreateIntegrationResponse'] :: CreateIntegrationResponse -> Maybe (HashMap Text Text)

-- | The API identifier.
[$sel:apiId:CreateIntegrationResponse'] :: CreateIntegrationResponse -> Text

-- | The integration ID.
[$sel:integrationId:CreateIntegrationResponse'] :: CreateIntegrationResponse -> Text

-- | The integration response key.
[$sel:integrationResponseKey:CreateIntegrationResponse'] :: CreateIntegrationResponse -> Text

-- | Create a value of <a>CreateIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:templateSelectionExpression:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_templateSelectionExpression</a> - The
--   template selection expression for the integration response. Supported
--   only for WebSocket APIs.
--   
--   <a>$sel:contentHandlingStrategy:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_contentHandlingStrategy</a> - Specifies
--   how to handle response payload content type conversions. Supported
--   values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following
--   behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_responseTemplates</a> - The collection of
--   response templates for the integration response as a string-to-string
--   map of key-value pairs. Response templates are represented as a
--   key/value map, with a content-type as the key and a template as the
--   value.
--   
--   <a>$sel:responseParameters:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the backend. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of method.response.header.{name}, where {name} is a valid and
--   unique header name. The mapped non-static value must match the pattern
--   of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where {name} is a valid
--   and unique response header name and {JSON-expression} is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:apiId:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:integrationId:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_integrationId</a> - The integration ID.
--   
--   <a>$sel:integrationResponseKey:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_integrationResponseKey</a> - The
--   integration response key.
newCreateIntegrationResponse :: Text -> Text -> Text -> CreateIntegrationResponse

-- | The template selection expression for the integration response.
--   Supported only for WebSocket APIs.
createIntegrationResponse_templateSelectionExpression :: Lens' CreateIntegrationResponse (Maybe Text)

-- | Specifies how to handle response payload content type conversions.
--   Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the
--   following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
createIntegrationResponse_contentHandlingStrategy :: Lens' CreateIntegrationResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
createIntegrationResponse_responseTemplates :: Lens' CreateIntegrationResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where {name}
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where {name} is a valid
--   and unique response header name and {JSON-expression} is a valid JSON
--   expression without the $ prefix.
createIntegrationResponse_responseParameters :: Lens' CreateIntegrationResponse (Maybe (HashMap Text Text))

-- | The API identifier.
createIntegrationResponse_apiId :: Lens' CreateIntegrationResponse Text

-- | The integration ID.
createIntegrationResponse_integrationId :: Lens' CreateIntegrationResponse Text

-- | The integration response key.
createIntegrationResponse_integrationResponseKey :: Lens' CreateIntegrationResponse Text

-- | <i>See:</i> <a>newCreateIntegrationResponseResponse</a> smart
--   constructor.
data CreateIntegrationResponseResponse
CreateIntegrationResponseResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Int -> CreateIntegrationResponseResponse

-- | The integration response ID.
[$sel:integrationResponseId:CreateIntegrationResponseResponse'] :: CreateIntegrationResponseResponse -> Maybe Text

-- | The integration response key.
[$sel:integrationResponseKey:CreateIntegrationResponseResponse'] :: CreateIntegrationResponseResponse -> Maybe Text

-- | The template selection expressions for the integration response.
[$sel:templateSelectionExpression:CreateIntegrationResponseResponse'] :: CreateIntegrationResponseResponse -> Maybe Text

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:CreateIntegrationResponseResponse'] :: CreateIntegrationResponseResponse -> Maybe ContentHandlingStrategy

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
[$sel:responseTemplates:CreateIntegrationResponseResponse'] :: CreateIntegrationResponseResponse -> Maybe (HashMap Text Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
[$sel:responseParameters:CreateIntegrationResponseResponse'] :: CreateIntegrationResponseResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateIntegrationResponseResponse'] :: CreateIntegrationResponseResponse -> Int

-- | Create a value of <a>CreateIntegrationResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseId:CreateIntegrationResponseResponse'</a>,
--   <a>createIntegrationResponseResponse_integrationResponseId</a> - The
--   integration response ID.
--   
--   <a>$sel:integrationResponseKey:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponseResponse_integrationResponseKey</a> - The
--   integration response key.
--   
--   <a>$sel:templateSelectionExpression:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponseResponse_templateSelectionExpression</a> -
--   The template selection expressions for the integration response.
--   
--   <a>$sel:contentHandlingStrategy:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponseResponse_contentHandlingStrategy</a> -
--   Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponseResponse_responseTemplates</a> - The
--   collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
--   
--   <a>$sel:responseParameters:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponseResponse_responseParameters</a> - A
--   key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:httpStatus:CreateIntegrationResponseResponse'</a>,
--   <a>createIntegrationResponseResponse_httpStatus</a> - The response's
--   http status code.
newCreateIntegrationResponseResponse :: Int -> CreateIntegrationResponseResponse

-- | The integration response ID.
createIntegrationResponseResponse_integrationResponseId :: Lens' CreateIntegrationResponseResponse (Maybe Text)

-- | The integration response key.
createIntegrationResponseResponse_integrationResponseKey :: Lens' CreateIntegrationResponseResponse (Maybe Text)

-- | The template selection expressions for the integration response.
createIntegrationResponseResponse_templateSelectionExpression :: Lens' CreateIntegrationResponseResponse (Maybe Text)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
createIntegrationResponseResponse_contentHandlingStrategy :: Lens' CreateIntegrationResponseResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
createIntegrationResponseResponse_responseTemplates :: Lens' CreateIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
createIntegrationResponseResponse_responseParameters :: Lens' CreateIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createIntegrationResponseResponse_httpStatus :: Lens' CreateIntegrationResponseResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponseResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponseResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponseResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponseResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponse
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponse
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponse
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponse
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateIntegrationResponse.CreateIntegrationResponse


-- | Creates an Integration.
module Network.AWS.ApiGatewayV2.CreateIntegration

-- | Creates a new Integration resource to represent an integration.
--   
--   <i>See:</i> <a>newCreateIntegration</a> smart constructor.
data CreateIntegration
CreateIntegration' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfigInput -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Text -> IntegrationType -> CreateIntegration

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
[$sel:requestTemplates:CreateIntegration'] :: CreateIntegration -> Maybe (HashMap Text Text)

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
[$sel:integrationSubtype:CreateIntegration'] :: CreateIntegration -> Maybe Text

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentialsArn:CreateIntegration'] :: CreateIntegration -> Maybe Text

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
[$sel:integrationUri:CreateIntegration'] :: CreateIntegration -> Maybe Text

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API integrations without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to the backend. The key should
--   follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
[$sel:requestParameters:CreateIntegration'] :: CreateIntegration -> Maybe (HashMap Text Text)

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
[$sel:connectionId:CreateIntegration'] :: CreateIntegration -> Maybe Text

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
[$sel:passthroughBehavior:CreateIntegration'] :: CreateIntegration -> Maybe PassthroughBehavior

-- | Specifies the integration's HTTP method type.
[$sel:integrationMethod:CreateIntegration'] :: CreateIntegration -> Maybe Text

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
[$sel:tlsConfig:CreateIntegration'] :: CreateIntegration -> Maybe TlsConfigInput

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
[$sel:payloadFormatVersion:CreateIntegration'] :: CreateIntegration -> Maybe Text

-- | The template selection expression for the integration.
[$sel:templateSelectionExpression:CreateIntegration'] :: CreateIntegration -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
[$sel:timeoutInMillis:CreateIntegration'] :: CreateIntegration -> Maybe Natural

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:CreateIntegration'] :: CreateIntegration -> Maybe ContentHandlingStrategy

-- | The description of the integration.
[$sel:description:CreateIntegration'] :: CreateIntegration -> Maybe Text

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
[$sel:connectionType:CreateIntegration'] :: CreateIntegration -> Maybe ConnectionType

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
[$sel:responseParameters:CreateIntegration'] :: CreateIntegration -> Maybe (HashMap Text (HashMap Text Text))

-- | The API identifier.
[$sel:apiId:CreateIntegration'] :: CreateIntegration -> Text

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration. For HTTP API private
--   integrations, use an HTTP_PROXY integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
[$sel:integrationType:CreateIntegration'] :: CreateIntegration -> IntegrationType

-- | Create a value of <a>CreateIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestTemplates:CreateIntegration'</a>,
--   <a>createIntegration_requestTemplates</a> - Represents a map of
--   Velocity templates that are applied on the request payload based on
--   the value of the Content-Type header sent by the client. The content
--   type value is the key in this map, and the template (as a String) is
--   the value. Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:CreateIntegration'</a>,
--   <a>createIntegration_integrationSubtype</a> - Supported only for HTTP
--   API AWS_PROXY integrations. Specifies the AWS service action to
--   invoke. To learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:CreateIntegration'</a>,
--   <a>createIntegration_credentialsArn</a> - Specifies the credentials
--   required for the integration, if any. For AWS integrations, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify the
--   string arn:aws:iam::*:user/*. To use resource-based permissions on
--   supported AWS services, specify null.
--   
--   <a>$sel:integrationUri:CreateIntegration'</a>,
--   <a>createIntegration_integrationUri</a> - For a Lambda integration,
--   specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:requestParameters:CreateIntegration'</a>,
--   <a>createIntegration_requestParameters</a> - For WebSocket APIs, a
--   key-value map specifying request parameters that are passed from the
--   method request to the backend. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the backend. The method request parameter
--   value must match the pattern of method.request.{location}.{name} ,
--   where {location} is querystring, path, or header; and {name} must be a
--   valid and unique method request parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API integrations without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to the backend. The key should
--   follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:CreateIntegration'</a>,
--   <a>createIntegration_connectionId</a> - The ID of the VPC link for a
--   private integration. Supported only for HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:CreateIntegration'</a>,
--   <a>createIntegration_passthroughBehavior</a> - Specifies the
--   pass-through behavior for incoming requests based on the Content-Type
--   header in the request, and the available mapping templates specified
--   as the requestTemplates property on the Integration resource. There
--   are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.
--   Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:CreateIntegration'</a>,
--   <a>createIntegration_integrationMethod</a> - Specifies the
--   integration's HTTP method type.
--   
--   <a>$sel:tlsConfig:CreateIntegration'</a>,
--   <a>createIntegration_tlsConfig</a> - The TLS configuration for a
--   private integration. If you specify a TLS configuration, private
--   integration traffic uses the HTTPS protocol. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:payloadFormatVersion:CreateIntegration'</a>,
--   <a>createIntegration_payloadFormatVersion</a> - Specifies the format
--   of the payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:CreateIntegration'</a>,
--   <a>createIntegration_templateSelectionExpression</a> - The template
--   selection expression for the integration.
--   
--   <a>$sel:timeoutInMillis:CreateIntegration'</a>,
--   <a>createIntegration_timeoutInMillis</a> - Custom timeout between 50
--   and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000
--   milliseconds for HTTP APIs. The default timeout is 29 seconds for
--   WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:contentHandlingStrategy:CreateIntegration'</a>,
--   <a>createIntegration_contentHandlingStrategy</a> - Supported only for
--   WebSocket APIs. Specifies how to handle response payload content type
--   conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:description:CreateIntegration'</a>,
--   <a>createIntegration_description</a> - The description of the
--   integration.
--   
--   <a>$sel:connectionType:CreateIntegration'</a>,
--   <a>createIntegration_connectionType</a> - The type of the network
--   connection to the integration endpoint. Specify INTERNET for
--   connections through the public routable internet or VPC_LINK for
--   private connections between API Gateway and resources in a VPC. The
--   default value is INTERNET.
--   
--   <a>$sel:responseParameters:CreateIntegration'</a>,
--   <a>createIntegration_responseParameters</a> - Supported only for HTTP
--   APIs. You use response parameters to transform the HTTP response from
--   a backend integration before returning the response to clients.
--   Specify a key-value map from a selection key to response parameters.
--   The selection key must be a valid HTTP status code within the range of
--   200-599. Response parameters are a key-value map. The key must match
--   pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:apiId:CreateIntegration'</a>, <a>createIntegration_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:integrationType:CreateIntegration'</a>,
--   <a>createIntegration_integrationType</a> - The integration type of an
--   integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration. For HTTP API private
--   integrations, use an HTTP_PROXY integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
newCreateIntegration :: Text -> IntegrationType -> CreateIntegration

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
createIntegration_requestTemplates :: Lens' CreateIntegration (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
createIntegration_integrationSubtype :: Lens' CreateIntegration (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
createIntegration_credentialsArn :: Lens' CreateIntegration (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
createIntegration_integrationUri :: Lens' CreateIntegration (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API integrations without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to the backend. The key should
--   follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
createIntegration_requestParameters :: Lens' CreateIntegration (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
createIntegration_connectionId :: Lens' CreateIntegration (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
createIntegration_passthroughBehavior :: Lens' CreateIntegration (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
createIntegration_integrationMethod :: Lens' CreateIntegration (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
createIntegration_tlsConfig :: Lens' CreateIntegration (Maybe TlsConfigInput)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
createIntegration_payloadFormatVersion :: Lens' CreateIntegration (Maybe Text)

-- | The template selection expression for the integration.
createIntegration_templateSelectionExpression :: Lens' CreateIntegration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
createIntegration_timeoutInMillis :: Lens' CreateIntegration (Maybe Natural)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
createIntegration_contentHandlingStrategy :: Lens' CreateIntegration (Maybe ContentHandlingStrategy)

-- | The description of the integration.
createIntegration_description :: Lens' CreateIntegration (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
createIntegration_connectionType :: Lens' CreateIntegration (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
createIntegration_responseParameters :: Lens' CreateIntegration (Maybe (HashMap Text (HashMap Text Text)))

-- | The API identifier.
createIntegration_apiId :: Lens' CreateIntegration Text

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration. For HTTP API private
--   integrations, use an HTTP_PROXY integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
createIntegration_integrationType :: Lens' CreateIntegration IntegrationType

-- | <i>See:</i> <a>newCreateIntegrationResponse'</a> smart constructor.
data CreateIntegrationResponse'
CreateIntegrationResponse'' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfig -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Bool -> Maybe ContentHandlingStrategy -> Maybe IntegrationType -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Int -> CreateIntegrationResponse'

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
[$sel:integrationResponseSelectionExpression:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Text

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
[$sel:requestTemplates:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe (HashMap Text Text)

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
[$sel:integrationSubtype:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Text

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentialsArn:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Text

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
[$sel:integrationUri:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Text

-- | Represents the identifier of an integration.
[$sel:integrationId:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Text

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
[$sel:requestParameters:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe (HashMap Text Text)

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
[$sel:connectionId:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Text

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
[$sel:passthroughBehavior:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe PassthroughBehavior

-- | Specifies the integration's HTTP method type.
[$sel:integrationMethod:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Text

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
[$sel:tlsConfig:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe TlsConfig

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
[$sel:payloadFormatVersion:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Text

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
[$sel:templateSelectionExpression:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
[$sel:timeoutInMillis:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Natural

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
[$sel:apiGatewayManaged:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Bool

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe ContentHandlingStrategy

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
[$sel:integrationType:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe IntegrationType

-- | Represents the description of an integration.
[$sel:description:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe Text

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
[$sel:connectionType:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe ConnectionType

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
[$sel:responseParameters:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Maybe (HashMap Text (HashMap Text Text))

-- | The response's http status code.
[$sel:httpStatus:CreateIntegrationResponse''] :: CreateIntegrationResponse' -> Int

-- | Create a value of <a>CreateIntegrationResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:integrationResponseSelectionExpression:CreateIntegrationResponse''</a>,
--   <a>createIntegrationResponse'_integrationResponseSelectionExpression</a>
--   - The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
--   
--   <a>$sel:requestTemplates:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_requestTemplates</a> - Represents a map
--   of Velocity templates that are applied on the request payload based on
--   the value of the Content-Type header sent by the client. The content
--   type value is the key in this map, and the template (as a String) is
--   the value. Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_integrationSubtype</a> - Supported only
--   for HTTP API AWS_PROXY integrations. Specifies the AWS service action
--   to invoke. To learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_credentialsArn</a> - Specifies the
--   credentials required for the integration, if any. For AWS
--   integrations, three options are available. To specify an IAM Role for
--   API Gateway to assume, use the role's Amazon Resource Name (ARN). To
--   require that the caller's identity be passed through from the request,
--   specify the string arn:aws:iam::*:user/*. To use resource-based
--   permissions on supported AWS services, specify null.
--   
--   <a>$sel:integrationUri:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_integrationUri</a> - For a Lambda
--   integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:integrationId:CreateIntegrationResponse''</a>,
--   <a>createIntegrationResponse'_integrationId</a> - Represents the
--   identifier of an integration.
--   
--   <a>$sel:requestParameters:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_requestParameters</a> - For WebSocket
--   APIs, a key-value map specifying request parameters that are passed
--   from the method request to the backend. The key is an integration
--   request parameter name and the associated value is a method request
--   parameter value or static value that must be enclosed within single
--   quotes and pre-encoded as required by the backend. The method request
--   parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_connectionId</a> - The ID of the VPC
--   link for a private integration. Supported only for HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_passthroughBehavior</a> - Specifies the
--   pass-through behavior for incoming requests based on the Content-Type
--   header in the request, and the available mapping templates specified
--   as the requestTemplates property on the Integration resource. There
--   are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.
--   Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_integrationMethod</a> - Specifies the
--   integration's HTTP method type.
--   
--   <a>$sel:tlsConfig:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_tlsConfig</a> - The TLS configuration
--   for a private integration. If you specify a TLS configuration, private
--   integration traffic uses the HTTPS protocol. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:payloadFormatVersion:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_payloadFormatVersion</a> - Specifies the
--   format of the payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_templateSelectionExpression</a> - The
--   template selection expression for the integration. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:timeoutInMillis:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_timeoutInMillis</a> - Custom timeout
--   between 50 and 29,000 milliseconds for WebSocket APIs and between 50
--   and 30,000 milliseconds for HTTP APIs. The default timeout is 29
--   seconds for WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:apiGatewayManaged:CreateIntegrationResponse''</a>,
--   <a>createIntegrationResponse'_apiGatewayManaged</a> - Specifies
--   whether an integration is managed by API Gateway. If you created an
--   API using using quick create, the resulting integration is managed by
--   API Gateway. You can update a managed integration, but you can't
--   delete it.
--   
--   <a>$sel:contentHandlingStrategy:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_contentHandlingStrategy</a> - Supported
--   only for WebSocket APIs. Specifies how to handle response payload
--   content type conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:integrationType:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_integrationType</a> - The integration
--   type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:description:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_description</a> - Represents the
--   description of an integration.
--   
--   <a>$sel:connectionType:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_connectionType</a> - The type of the
--   network connection to the integration endpoint. Specify INTERNET for
--   connections through the public routable internet or VPC_LINK for
--   private connections between API Gateway and resources in a VPC. The
--   default value is INTERNET.
--   
--   <a>$sel:responseParameters:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_responseParameters</a> - Supported only
--   for HTTP APIs. You use response parameters to transform the HTTP
--   response from a backend integration before returning the response to
--   clients. Specify a key-value map from a selection key to response
--   parameters. The selection key must be a valid HTTP status code within
--   the range of 200-599. Response parameters are a key-value map. The key
--   must match pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:httpStatus:CreateIntegrationResponse''</a>,
--   <a>createIntegrationResponse'_httpStatus</a> - The response's http
--   status code.
newCreateIntegrationResponse' :: Int -> CreateIntegrationResponse'

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
createIntegrationResponse'_integrationResponseSelectionExpression :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
createIntegrationResponse'_requestTemplates :: Lens' CreateIntegrationResponse' (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
createIntegrationResponse'_integrationSubtype :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
createIntegrationResponse'_credentialsArn :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
createIntegrationResponse'_integrationUri :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | Represents the identifier of an integration.
createIntegrationResponse'_integrationId :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
createIntegrationResponse'_requestParameters :: Lens' CreateIntegrationResponse' (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
createIntegrationResponse'_connectionId :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
createIntegrationResponse'_passthroughBehavior :: Lens' CreateIntegrationResponse' (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
createIntegrationResponse'_integrationMethod :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
createIntegrationResponse'_tlsConfig :: Lens' CreateIntegrationResponse' (Maybe TlsConfig)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
createIntegrationResponse'_payloadFormatVersion :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
createIntegrationResponse'_templateSelectionExpression :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
createIntegrationResponse'_timeoutInMillis :: Lens' CreateIntegrationResponse' (Maybe Natural)

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
createIntegrationResponse'_apiGatewayManaged :: Lens' CreateIntegrationResponse' (Maybe Bool)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
createIntegrationResponse'_contentHandlingStrategy :: Lens' CreateIntegrationResponse' (Maybe ContentHandlingStrategy)

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
createIntegrationResponse'_integrationType :: Lens' CreateIntegrationResponse' (Maybe IntegrationType)

-- | Represents the description of an integration.
createIntegrationResponse'_description :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
createIntegrationResponse'_connectionType :: Lens' CreateIntegrationResponse' (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
createIntegrationResponse'_responseParameters :: Lens' CreateIntegrationResponse' (Maybe (HashMap Text (HashMap Text Text)))

-- | The response's http status code.
createIntegrationResponse'_httpStatus :: Lens' CreateIntegrationResponse' Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegration
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegration
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegration
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegration
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegrationResponse'
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegrationResponse'
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegrationResponse'
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegrationResponse'
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegrationResponse'
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegration
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegration
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateIntegration.CreateIntegration


-- | Creates a domain name.
module Network.AWS.ApiGatewayV2.CreateDomainName

-- | Creates a new DomainName resource to represent a domain name.
--   
--   <i>See:</i> <a>newCreateDomainName</a> smart constructor.
data CreateDomainName
CreateDomainName' :: Maybe [DomainNameConfiguration] -> Maybe MutualTlsAuthenticationInput -> Maybe (HashMap Text Text) -> Text -> CreateDomainName

-- | The domain name configurations.
[$sel:domainNameConfigurations:CreateDomainName'] :: CreateDomainName -> Maybe [DomainNameConfiguration]

-- | The mutual TLS authentication configuration for a custom domain name.
[$sel:mutualTlsAuthentication:CreateDomainName'] :: CreateDomainName -> Maybe MutualTlsAuthenticationInput

-- | The collection of tags associated with a domain name.
[$sel:tags:CreateDomainName'] :: CreateDomainName -> Maybe (HashMap Text Text)

-- | The domain name.
[$sel:domainName:CreateDomainName'] :: CreateDomainName -> Text

-- | Create a value of <a>CreateDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:CreateDomainName'</a>,
--   <a>createDomainName_domainNameConfigurations</a> - The domain name
--   configurations.
--   
--   <a>$sel:mutualTlsAuthentication:CreateDomainName'</a>,
--   <a>createDomainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name.
--   
--   <a>$sel:tags:CreateDomainName'</a>, <a>createDomainName_tags</a> - The
--   collection of tags associated with a domain name.
--   
--   <a>$sel:domainName:CreateDomainName'</a>,
--   <a>createDomainName_domainName</a> - The domain name.
newCreateDomainName :: Text -> CreateDomainName

-- | The domain name configurations.
createDomainName_domainNameConfigurations :: Lens' CreateDomainName (Maybe [DomainNameConfiguration])

-- | The mutual TLS authentication configuration for a custom domain name.
createDomainName_mutualTlsAuthentication :: Lens' CreateDomainName (Maybe MutualTlsAuthenticationInput)

-- | The collection of tags associated with a domain name.
createDomainName_tags :: Lens' CreateDomainName (Maybe (HashMap Text Text))

-- | The domain name.
createDomainName_domainName :: Lens' CreateDomainName Text

-- | <i>See:</i> <a>newCreateDomainNameResponse</a> smart constructor.
data CreateDomainNameResponse
CreateDomainNameResponse' :: Maybe [DomainNameConfiguration] -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateDomainNameResponse

-- | The domain name configurations.
[$sel:domainNameConfigurations:CreateDomainNameResponse'] :: CreateDomainNameResponse -> Maybe [DomainNameConfiguration]

-- | The name of the DomainName resource.
[$sel:domainName:CreateDomainNameResponse'] :: CreateDomainNameResponse -> Maybe Text

-- | The mutual TLS authentication configuration for a custom domain name.
[$sel:mutualTlsAuthentication:CreateDomainNameResponse'] :: CreateDomainNameResponse -> Maybe MutualTlsAuthentication

-- | The API mapping selection expression.
[$sel:apiMappingSelectionExpression:CreateDomainNameResponse'] :: CreateDomainNameResponse -> Maybe Text

-- | The collection of tags associated with a domain name.
[$sel:tags:CreateDomainNameResponse'] :: CreateDomainNameResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateDomainNameResponse'] :: CreateDomainNameResponse -> Int

-- | Create a value of <a>CreateDomainNameResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:CreateDomainName'</a>,
--   <a>createDomainNameResponse_domainNameConfigurations</a> - The domain
--   name configurations.
--   
--   <a>$sel:domainName:CreateDomainName'</a>,
--   <a>createDomainNameResponse_domainName</a> - The name of the
--   DomainName resource.
--   
--   <a>$sel:mutualTlsAuthentication:CreateDomainName'</a>,
--   <a>createDomainNameResponse_mutualTlsAuthentication</a> - The mutual
--   TLS authentication configuration for a custom domain name.
--   
--   <a>$sel:apiMappingSelectionExpression:CreateDomainNameResponse'</a>,
--   <a>createDomainNameResponse_apiMappingSelectionExpression</a> - The
--   API mapping selection expression.
--   
--   <a>$sel:tags:CreateDomainName'</a>,
--   <a>createDomainNameResponse_tags</a> - The collection of tags
--   associated with a domain name.
--   
--   <a>$sel:httpStatus:CreateDomainNameResponse'</a>,
--   <a>createDomainNameResponse_httpStatus</a> - The response's http
--   status code.
newCreateDomainNameResponse :: Int -> CreateDomainNameResponse

-- | The domain name configurations.
createDomainNameResponse_domainNameConfigurations :: Lens' CreateDomainNameResponse (Maybe [DomainNameConfiguration])

-- | The name of the DomainName resource.
createDomainNameResponse_domainName :: Lens' CreateDomainNameResponse (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
createDomainNameResponse_mutualTlsAuthentication :: Lens' CreateDomainNameResponse (Maybe MutualTlsAuthentication)

-- | The API mapping selection expression.
createDomainNameResponse_apiMappingSelectionExpression :: Lens' CreateDomainNameResponse (Maybe Text)

-- | The collection of tags associated with a domain name.
createDomainNameResponse_tags :: Lens' CreateDomainNameResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createDomainNameResponse_httpStatus :: Lens' CreateDomainNameResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainName
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainName
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainName
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainName
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainNameResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainNameResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainNameResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainNameResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainName
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainNameResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainName
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainName
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainName
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainName
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateDomainName.CreateDomainName


-- | Creates a Deployment for an API.
module Network.AWS.ApiGatewayV2.CreateDeployment

-- | Creates a new Deployment resource to represent a deployment.
--   
--   <i>See:</i> <a>newCreateDeployment</a> smart constructor.
data CreateDeployment
CreateDeployment' :: Maybe Text -> Maybe Text -> Text -> CreateDeployment

-- | The name of the Stage resource for the Deployment resource to create.
[$sel:stageName:CreateDeployment'] :: CreateDeployment -> Maybe Text

-- | The description for the deployment resource.
[$sel:description:CreateDeployment'] :: CreateDeployment -> Maybe Text

-- | The API identifier.
[$sel:apiId:CreateDeployment'] :: CreateDeployment -> Text

-- | Create a value of <a>CreateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:CreateDeployment'</a>,
--   <a>createDeployment_stageName</a> - The name of the Stage resource for
--   the Deployment resource to create.
--   
--   <a>$sel:description:CreateDeployment'</a>,
--   <a>createDeployment_description</a> - The description for the
--   deployment resource.
--   
--   <a>$sel:apiId:CreateDeployment'</a>, <a>createDeployment_apiId</a> -
--   The API identifier.
newCreateDeployment :: Text -> CreateDeployment

-- | The name of the Stage resource for the Deployment resource to create.
createDeployment_stageName :: Lens' CreateDeployment (Maybe Text)

-- | The description for the deployment resource.
createDeployment_description :: Lens' CreateDeployment (Maybe Text)

-- | The API identifier.
createDeployment_apiId :: Lens' CreateDeployment Text

-- | <i>See:</i> <a>newCreateDeploymentResponse</a> smart constructor.
data CreateDeploymentResponse
CreateDeploymentResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe DeploymentStatus -> Maybe Text -> Int -> CreateDeploymentResponse

-- | The identifier for the deployment.
[$sel:deploymentId:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Maybe Text

-- | Specifies whether a deployment was automatically released.
[$sel:autoDeployed:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Maybe Bool

-- | May contain additional feedback on the status of an API deployment.
[$sel:deploymentStatusMessage:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Maybe Text

-- | The date and time when the Deployment resource was created.
[$sel:createdDate:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Maybe POSIX

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
[$sel:deploymentStatus:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Maybe DeploymentStatus

-- | The description for the deployment.
[$sel:description:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateDeploymentResponse'] :: CreateDeploymentResponse -> Int

-- | Create a value of <a>CreateDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_deploymentId</a> - The identifier for the
--   deployment.
--   
--   <a>$sel:autoDeployed:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_autoDeployed</a> - Specifies whether a
--   deployment was automatically released.
--   
--   <a>$sel:deploymentStatusMessage:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_deploymentStatusMessage</a> - May contain
--   additional feedback on the status of an API deployment.
--   
--   <a>$sel:createdDate:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_createdDate</a> - The date and time when
--   the Deployment resource was created.
--   
--   <a>$sel:deploymentStatus:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_deploymentStatus</a> - The status of the
--   deployment: PENDING, FAILED, or SUCCEEDED.
--   
--   <a>$sel:description:CreateDeployment'</a>,
--   <a>createDeploymentResponse_description</a> - The description for the
--   deployment.
--   
--   <a>$sel:httpStatus:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentResponse :: Int -> CreateDeploymentResponse

-- | The identifier for the deployment.
createDeploymentResponse_deploymentId :: Lens' CreateDeploymentResponse (Maybe Text)

-- | Specifies whether a deployment was automatically released.
createDeploymentResponse_autoDeployed :: Lens' CreateDeploymentResponse (Maybe Bool)

-- | May contain additional feedback on the status of an API deployment.
createDeploymentResponse_deploymentStatusMessage :: Lens' CreateDeploymentResponse (Maybe Text)

-- | The date and time when the Deployment resource was created.
createDeploymentResponse_createdDate :: Lens' CreateDeploymentResponse (Maybe UTCTime)

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
createDeploymentResponse_deploymentStatus :: Lens' CreateDeploymentResponse (Maybe DeploymentStatus)

-- | The description for the deployment.
createDeploymentResponse_description :: Lens' CreateDeploymentResponse (Maybe Text)

-- | The response's http status code.
createDeploymentResponse_httpStatus :: Lens' CreateDeploymentResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeployment
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeployment
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeployment
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeployment
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeploymentResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeploymentResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeploymentResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeploymentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeployment
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeploymentResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeployment
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeployment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeployment
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeployment
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateDeployment.CreateDeployment


-- | Creates an Authorizer for an API.
module Network.AWS.ApiGatewayV2.CreateAuthorizer

-- | Creates a new Authorizer resource to represent an authorizer.
--   
--   <i>See:</i> <a>newCreateAuthorizer</a> smart constructor.
data CreateAuthorizer
CreateAuthorizer' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Natural -> Text -> AuthorizerType -> [Text] -> Text -> CreateAuthorizer

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
[$sel:authorizerCredentialsArn:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Text

-- | This parameter is not used.
[$sel:identityValidationExpression:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Text

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. By default, a Lambda authorizer must return an IAM policy. If
--   enabled, the Lambda authorizer can return a boolean value instead of
--   an IAM policy. Supported only for HTTP APIs. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>
[$sel:enableSimpleResponses:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Bool

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
[$sel:authorizerUri:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Text

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
[$sel:authorizerPayloadFormatVersion:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Text

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
[$sel:jwtConfiguration:CreateAuthorizer'] :: CreateAuthorizer -> Maybe JWTConfiguration

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
[$sel:authorizerResultTtlInSeconds:CreateAuthorizer'] :: CreateAuthorizer -> Maybe Natural

-- | The API identifier.
[$sel:apiId:CreateAuthorizer'] :: CreateAuthorizer -> Text

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
[$sel:authorizerType:CreateAuthorizer'] :: CreateAuthorizer -> AuthorizerType

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
[$sel:identitySource:CreateAuthorizer'] :: CreateAuthorizer -> [Text]

-- | The name of the authorizer.
[$sel:name:CreateAuthorizer'] :: CreateAuthorizer -> Text

-- | Create a value of <a>CreateAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerCredentialsArn</a> - Specifies the
--   required credentials as an IAM role for API Gateway to invoke the
--   authorizer. To specify an IAM role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To use resource-based permissions
--   on the Lambda function, don't specify this parameter. Supported only
--   for REQUEST authorizers.
--   
--   <a>$sel:identityValidationExpression:CreateAuthorizer'</a>,
--   <a>createAuthorizer_identityValidationExpression</a> - This parameter
--   is not used.
--   
--   <a>$sel:enableSimpleResponses:CreateAuthorizer'</a>,
--   <a>createAuthorizer_enableSimpleResponses</a> - Specifies whether a
--   Lambda authorizer returns a response in a simple format. By default, a
--   Lambda authorizer must return an IAM policy. If enabled, the Lambda
--   authorizer can return a boolean value instead of an IAM policy.
--   Supported only for HTTP APIs. To learn more, see <a>Working with AWS
--   Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerUri</a> - The authorizer's Uniform
--   Resource Identifier (URI). For REQUEST authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerPayloadFormatVersion</a> - Specifies the
--   format of the payload sent to an HTTP API Lambda authorizer. Required
--   for HTTP API Lambda authorizers. Supported values are 1.0 and 2.0. To
--   learn more, see <a>Working with AWS Lambda authorizers for HTTP
--   APIs</a>.
--   
--   <a>$sel:jwtConfiguration:CreateAuthorizer'</a>,
--   <a>createAuthorizer_jwtConfiguration</a> - Represents the
--   configuration of a JWT authorizer. Required for the JWT authorizer
--   type. Supported only for HTTP APIs.
--   
--   <a>$sel:authorizerResultTtlInSeconds:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerResultTtlInSeconds</a> - The time to
--   live (TTL) for cached authorizer results, in seconds. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway caches authorizer responses. The maximum value is 3600, or 1
--   hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:apiId:CreateAuthorizer'</a>, <a>createAuthorizer_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:authorizerType:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerType</a> - The authorizer type. Specify
--   REQUEST for a Lambda function using incoming request parameters.
--   Specify JWT to use JSON Web Tokens (supported only for HTTP APIs).
--   
--   <a>$sel:identitySource:CreateAuthorizer'</a>,
--   <a>createAuthorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:name:CreateAuthorizer'</a>, <a>createAuthorizer_name</a> - The
--   name of the authorizer.
newCreateAuthorizer :: Text -> AuthorizerType -> Text -> CreateAuthorizer

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
createAuthorizer_authorizerCredentialsArn :: Lens' CreateAuthorizer (Maybe Text)

-- | This parameter is not used.
createAuthorizer_identityValidationExpression :: Lens' CreateAuthorizer (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. By default, a Lambda authorizer must return an IAM policy. If
--   enabled, the Lambda authorizer can return a boolean value instead of
--   an IAM policy. Supported only for HTTP APIs. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>
createAuthorizer_enableSimpleResponses :: Lens' CreateAuthorizer (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
createAuthorizer_authorizerUri :: Lens' CreateAuthorizer (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
createAuthorizer_authorizerPayloadFormatVersion :: Lens' CreateAuthorizer (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
createAuthorizer_jwtConfiguration :: Lens' CreateAuthorizer (Maybe JWTConfiguration)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
createAuthorizer_authorizerResultTtlInSeconds :: Lens' CreateAuthorizer (Maybe Natural)

-- | The API identifier.
createAuthorizer_apiId :: Lens' CreateAuthorizer Text

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
createAuthorizer_authorizerType :: Lens' CreateAuthorizer AuthorizerType

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
createAuthorizer_identitySource :: Lens' CreateAuthorizer [Text]

-- | The name of the authorizer.
createAuthorizer_name :: Lens' CreateAuthorizer Text

-- | <i>See:</i> <a>newCreateAuthorizerResponse</a> smart constructor.
data CreateAuthorizerResponse
CreateAuthorizerResponse' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe AuthorizerType -> Int -> CreateAuthorizerResponse

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
[$sel:authorizerCredentialsArn:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Maybe Text

-- | The validation expression does not apply to the REQUEST authorizer.
[$sel:identityValidationExpression:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Maybe Text

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
[$sel:enableSimpleResponses:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Maybe Bool

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
[$sel:authorizerUri:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Maybe Text

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
[$sel:authorizerPayloadFormatVersion:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Maybe Text

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
[$sel:jwtConfiguration:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Maybe JWTConfiguration

-- | The authorizer identifier.
[$sel:authorizerId:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Maybe Text

-- | The name of the authorizer.
[$sel:name:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Maybe Text

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
[$sel:authorizerResultTtlInSeconds:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Maybe Natural

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
[$sel:identitySource:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Maybe [Text]

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
[$sel:authorizerType:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Maybe AuthorizerType

-- | The response's http status code.
[$sel:httpStatus:CreateAuthorizerResponse'] :: CreateAuthorizerResponse -> Int

-- | Create a value of <a>CreateAuthorizerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_authorizerCredentialsArn</a> - Specifies
--   the required credentials as an IAM role for API Gateway to invoke the
--   authorizer. To specify an IAM role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To use resource-based permissions
--   on the Lambda function, don't specify this parameter. Supported only
--   for REQUEST authorizers.
--   
--   <a>$sel:identityValidationExpression:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_identityValidationExpression</a> - The
--   validation expression does not apply to the REQUEST authorizer.
--   
--   <a>$sel:enableSimpleResponses:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_enableSimpleResponses</a> - Specifies
--   whether a Lambda authorizer returns a response in a simple format. If
--   enabled, the Lambda authorizer can return a boolean value instead of
--   an IAM policy. Supported only for HTTP APIs. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_authorizerUri</a> - The authorizer's
--   Uniform Resource Identifier (URI). For REQUEST authorizers, this must
--   be a well-formed Lambda function URI, for example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_authorizerPayloadFormatVersion</a> -
--   Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
--   
--   <a>$sel:jwtConfiguration:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_jwtConfiguration</a> - Represents the
--   configuration of a JWT authorizer. Required for the JWT authorizer
--   type. Supported only for HTTP APIs.
--   
--   <a>$sel:authorizerId:CreateAuthorizerResponse'</a>,
--   <a>createAuthorizerResponse_authorizerId</a> - The authorizer
--   identifier.
--   
--   <a>$sel:name:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_name</a> - The name of the authorizer.
--   
--   <a>$sel:authorizerResultTtlInSeconds:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_authorizerResultTtlInSeconds</a> - The
--   time to live (TTL) for cached authorizer results, in seconds. If it
--   equals 0, authorization caching is disabled. If it is greater than 0,
--   API Gateway caches authorizer responses. The maximum value is 3600, or
--   1 hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:identitySource:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_identitySource</a> - The identity source
--   for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:authorizerType:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_authorizerType</a> - The authorizer type.
--   Specify REQUEST for a Lambda function using incoming request
--   parameters. Specify JWT to use JSON Web Tokens (supported only for
--   HTTP APIs).
--   
--   <a>$sel:httpStatus:CreateAuthorizerResponse'</a>,
--   <a>createAuthorizerResponse_httpStatus</a> - The response's http
--   status code.
newCreateAuthorizerResponse :: Int -> CreateAuthorizerResponse

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
createAuthorizerResponse_authorizerCredentialsArn :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | The validation expression does not apply to the REQUEST authorizer.
createAuthorizerResponse_identityValidationExpression :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
createAuthorizerResponse_enableSimpleResponses :: Lens' CreateAuthorizerResponse (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
createAuthorizerResponse_authorizerUri :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
createAuthorizerResponse_authorizerPayloadFormatVersion :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
createAuthorizerResponse_jwtConfiguration :: Lens' CreateAuthorizerResponse (Maybe JWTConfiguration)

-- | The authorizer identifier.
createAuthorizerResponse_authorizerId :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | The name of the authorizer.
createAuthorizerResponse_name :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
createAuthorizerResponse_authorizerResultTtlInSeconds :: Lens' CreateAuthorizerResponse (Maybe Natural)

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
createAuthorizerResponse_identitySource :: Lens' CreateAuthorizerResponse (Maybe [Text])

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
createAuthorizerResponse_authorizerType :: Lens' CreateAuthorizerResponse (Maybe AuthorizerType)

-- | The response's http status code.
createAuthorizerResponse_httpStatus :: Lens' CreateAuthorizerResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizer
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizer
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizer
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizer
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizerResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizerResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizerResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizer
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizerResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizer
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizer
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizer
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateAuthorizer.CreateAuthorizer


-- | Creates an API mapping.
module Network.AWS.ApiGatewayV2.CreateApiMapping

-- | Creates a new ApiMapping resource to represent an API mapping.
--   
--   <i>See:</i> <a>newCreateApiMapping</a> smart constructor.
data CreateApiMapping
CreateApiMapping' :: Maybe Text -> Text -> Text -> Text -> CreateApiMapping

-- | The API mapping key.
[$sel:apiMappingKey:CreateApiMapping'] :: CreateApiMapping -> Maybe Text

-- | The domain name.
[$sel:domainName:CreateApiMapping'] :: CreateApiMapping -> Text

-- | The API stage.
[$sel:stage:CreateApiMapping'] :: CreateApiMapping -> Text

-- | The API identifier.
[$sel:apiId:CreateApiMapping'] :: CreateApiMapping -> Text

-- | Create a value of <a>CreateApiMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiMappingKey:CreateApiMapping'</a>,
--   <a>createApiMapping_apiMappingKey</a> - The API mapping key.
--   
--   <a>$sel:domainName:CreateApiMapping'</a>,
--   <a>createApiMapping_domainName</a> - The domain name.
--   
--   <a>$sel:stage:CreateApiMapping'</a>, <a>createApiMapping_stage</a> -
--   The API stage.
--   
--   <a>$sel:apiId:CreateApiMapping'</a>, <a>createApiMapping_apiId</a> -
--   The API identifier.
newCreateApiMapping :: Text -> Text -> Text -> CreateApiMapping

-- | The API mapping key.
createApiMapping_apiMappingKey :: Lens' CreateApiMapping (Maybe Text)

-- | The domain name.
createApiMapping_domainName :: Lens' CreateApiMapping Text

-- | The API stage.
createApiMapping_stage :: Lens' CreateApiMapping Text

-- | The API identifier.
createApiMapping_apiId :: Lens' CreateApiMapping Text

-- | <i>See:</i> <a>newCreateApiMappingResponse</a> smart constructor.
data CreateApiMappingResponse
CreateApiMappingResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateApiMappingResponse

-- | The API stage.
[$sel:stage:CreateApiMappingResponse'] :: CreateApiMappingResponse -> Maybe Text

-- | The API identifier.
[$sel:apiId:CreateApiMappingResponse'] :: CreateApiMappingResponse -> Maybe Text

-- | The API mapping key.
[$sel:apiMappingKey:CreateApiMappingResponse'] :: CreateApiMappingResponse -> Maybe Text

-- | The API mapping identifier.
[$sel:apiMappingId:CreateApiMappingResponse'] :: CreateApiMappingResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateApiMappingResponse'] :: CreateApiMappingResponse -> Int

-- | Create a value of <a>CreateApiMappingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:CreateApiMapping'</a>,
--   <a>createApiMappingResponse_stage</a> - The API stage.
--   
--   <a>$sel:apiId:CreateApiMapping'</a>,
--   <a>createApiMappingResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:apiMappingKey:CreateApiMapping'</a>,
--   <a>createApiMappingResponse_apiMappingKey</a> - The API mapping key.
--   
--   <a>$sel:apiMappingId:CreateApiMappingResponse'</a>,
--   <a>createApiMappingResponse_apiMappingId</a> - The API mapping
--   identifier.
--   
--   <a>$sel:httpStatus:CreateApiMappingResponse'</a>,
--   <a>createApiMappingResponse_httpStatus</a> - The response's http
--   status code.
newCreateApiMappingResponse :: Int -> CreateApiMappingResponse

-- | The API stage.
createApiMappingResponse_stage :: Lens' CreateApiMappingResponse (Maybe Text)

-- | The API identifier.
createApiMappingResponse_apiId :: Lens' CreateApiMappingResponse (Maybe Text)

-- | The API mapping key.
createApiMappingResponse_apiMappingKey :: Lens' CreateApiMappingResponse (Maybe Text)

-- | The API mapping identifier.
createApiMappingResponse_apiMappingId :: Lens' CreateApiMappingResponse (Maybe Text)

-- | The response's http status code.
createApiMappingResponse_httpStatus :: Lens' CreateApiMappingResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMapping
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMapping
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMapping
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMapping
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMappingResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMappingResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMappingResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMappingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMapping
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMappingResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMapping
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMapping
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMapping
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMapping
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMapping
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateApiMapping.CreateApiMapping


-- | Creates an Api resource.
module Network.AWS.ApiGatewayV2.CreateApi

-- | Creates a new Api resource to represent an API.
--   
--   <i>See:</i> <a>newCreateApi</a> smart constructor.
data CreateApi
CreateApi' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> ProtocolType -> Text -> CreateApi

-- | This property is part of quick create. It specifies the credentials
--   required for the integration, if any. For a Lambda integration, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, specify null. Currently, this property is not used for
--   HTTP integrations. Supported only for HTTP APIs.
[$sel:credentialsArn:CreateApi'] :: CreateApi -> Maybe Text

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
[$sel:disableExecuteApiEndpoint:CreateApi'] :: CreateApi -> Maybe Bool

-- | A version identifier for the API.
[$sel:version:CreateApi'] :: CreateApi -> Maybe Text

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
[$sel:apiKeySelectionExpression:CreateApi'] :: CreateApi -> Maybe Text

-- | A CORS configuration. Supported only for HTTP APIs. See <a>Configuring
--   CORS</a> for more information.
[$sel:corsConfiguration:CreateApi'] :: CreateApi -> Maybe Cors

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
[$sel:routeSelectionExpression:CreateApi'] :: CreateApi -> Maybe Text

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
[$sel:disableSchemaValidation:CreateApi'] :: CreateApi -> Maybe Bool

-- | The description of the API.
[$sel:description:CreateApi'] :: CreateApi -> Maybe Text

-- | This property is part of quick create. If you don't specify a
--   routeKey, a default route of $default is created. The $default route
--   acts as a catch-all for any request made to your API, for a particular
--   stage. The $default route key can't be modified. You can add routes
--   after creating the API, and you can update the route keys of
--   additional routes. Supported only for HTTP APIs.
[$sel:routeKey:CreateApi'] :: CreateApi -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:CreateApi'] :: CreateApi -> Maybe (HashMap Text Text)

-- | This property is part of quick create. Quick create produces an API
--   with an integration, a default catch-all route, and a default stage
--   which is configured to automatically deploy changes. For HTTP
--   integrations, specify a fully qualified URL. For Lambda integrations,
--   specify a function ARN. The type of the integration will be HTTP_PROXY
--   or AWS_PROXY, respectively. Supported only for HTTP APIs.
[$sel:target:CreateApi'] :: CreateApi -> Maybe Text

-- | The API protocol.
[$sel:protocolType:CreateApi'] :: CreateApi -> ProtocolType

-- | The name of the API.
[$sel:name:CreateApi'] :: CreateApi -> Text

-- | Create a value of <a>CreateApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:credentialsArn:CreateApi'</a>, <a>createApi_credentialsArn</a>
--   - This property is part of quick create. It specifies the credentials
--   required for the integration, if any. For a Lambda integration, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, specify null. Currently, this property is not used for
--   HTTP integrations. Supported only for HTTP APIs.
--   
--   <a>$sel:disableExecuteApiEndpoint:CreateApi'</a>,
--   <a>createApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default execute-api endpoint. By
--   default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:version:CreateApi'</a>, <a>createApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySelectionExpression:CreateApi'</a>,
--   <a>createApi_apiKeySelectionExpression</a> - An API key selection
--   expression. Supported only for WebSocket APIs. See <a>API Key
--   Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:CreateApi'</a>,
--   <a>createApi_corsConfiguration</a> - A CORS configuration. Supported
--   only for HTTP APIs. See <a>Configuring CORS</a> for more information.
--   
--   <a>$sel:routeSelectionExpression:CreateApi'</a>,
--   <a>createApi_routeSelectionExpression</a> - The route selection
--   expression for the API. For HTTP APIs, the routeSelectionExpression
--   must be ${request.method} ${request.path}. If not provided, this will
--   be the default for HTTP APIs. This property is required for WebSocket
--   APIs.
--   
--   <a>$sel:disableSchemaValidation:CreateApi'</a>,
--   <a>createApi_disableSchemaValidation</a> - Avoid validating models
--   when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:CreateApi'</a>, <a>createApi_description</a> - The
--   description of the API.
--   
--   <a>$sel:routeKey:CreateApi'</a>, <a>createApi_routeKey</a> - This
--   property is part of quick create. If you don't specify a routeKey, a
--   default route of $default is created. The $default route acts as a
--   catch-all for any request made to your API, for a particular stage.
--   The $default route key can't be modified. You can add routes after
--   creating the API, and you can update the route keys of additional
--   routes. Supported only for HTTP APIs.
--   
--   <a>$sel:tags:CreateApi'</a>, <a>createApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
--   
--   <a>$sel:target:CreateApi'</a>, <a>createApi_target</a> - This property
--   is part of quick create. Quick create produces an API with an
--   integration, a default catch-all route, and a default stage which is
--   configured to automatically deploy changes. For HTTP integrations,
--   specify a fully qualified URL. For Lambda integrations, specify a
--   function ARN. The type of the integration will be HTTP_PROXY or
--   AWS_PROXY, respectively. Supported only for HTTP APIs.
--   
--   <a>$sel:protocolType:CreateApi'</a>, <a>createApi_protocolType</a> -
--   The API protocol.
--   
--   <a>$sel:name:CreateApi'</a>, <a>createApi_name</a> - The name of the
--   API.
newCreateApi :: ProtocolType -> Text -> CreateApi

-- | This property is part of quick create. It specifies the credentials
--   required for the integration, if any. For a Lambda integration, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, specify null. Currently, this property is not used for
--   HTTP integrations. Supported only for HTTP APIs.
createApi_credentialsArn :: Lens' CreateApi (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
createApi_disableExecuteApiEndpoint :: Lens' CreateApi (Maybe Bool)

-- | A version identifier for the API.
createApi_version :: Lens' CreateApi (Maybe Text)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
createApi_apiKeySelectionExpression :: Lens' CreateApi (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs. See <a>Configuring
--   CORS</a> for more information.
createApi_corsConfiguration :: Lens' CreateApi (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
createApi_routeSelectionExpression :: Lens' CreateApi (Maybe Text)

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
createApi_disableSchemaValidation :: Lens' CreateApi (Maybe Bool)

-- | The description of the API.
createApi_description :: Lens' CreateApi (Maybe Text)

-- | This property is part of quick create. If you don't specify a
--   routeKey, a default route of $default is created. The $default route
--   acts as a catch-all for any request made to your API, for a particular
--   stage. The $default route key can't be modified. You can add routes
--   after creating the API, and you can update the route keys of
--   additional routes. Supported only for HTTP APIs.
createApi_routeKey :: Lens' CreateApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
createApi_tags :: Lens' CreateApi (Maybe (HashMap Text Text))

-- | This property is part of quick create. Quick create produces an API
--   with an integration, a default catch-all route, and a default stage
--   which is configured to automatically deploy changes. For HTTP
--   integrations, specify a fully qualified URL. For Lambda integrations,
--   specify a function ARN. The type of the integration will be HTTP_PROXY
--   or AWS_PROXY, respectively. Supported only for HTTP APIs.
createApi_target :: Lens' CreateApi (Maybe Text)

-- | The API protocol.
createApi_protocolType :: Lens' CreateApi ProtocolType

-- | The name of the API.
createApi_name :: Lens' CreateApi Text

-- | <i>See:</i> <a>newCreateApiResponse</a> smart constructor.
data CreateApiResponse
CreateApiResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe ProtocolType -> Maybe (HashMap Text Text) -> Int -> CreateApiResponse

-- | The API ID.
[$sel:apiId:CreateApiResponse'] :: CreateApiResponse -> Maybe Text

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
[$sel:disableExecuteApiEndpoint:CreateApiResponse'] :: CreateApiResponse -> Maybe Bool

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
[$sel:apiEndpoint:CreateApiResponse'] :: CreateApiResponse -> Maybe Text

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
[$sel:warnings:CreateApiResponse'] :: CreateApiResponse -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:CreateApiResponse'] :: CreateApiResponse -> Maybe POSIX

-- | The name of the API.
[$sel:name:CreateApiResponse'] :: CreateApiResponse -> Maybe Text

-- | A version identifier for the API.
[$sel:version:CreateApiResponse'] :: CreateApiResponse -> Maybe Text

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
[$sel:apiGatewayManaged:CreateApiResponse'] :: CreateApiResponse -> Maybe Bool

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
[$sel:apiKeySelectionExpression:CreateApiResponse'] :: CreateApiResponse -> Maybe Text

-- | A CORS configuration. Supported only for HTTP APIs.
[$sel:corsConfiguration:CreateApiResponse'] :: CreateApiResponse -> Maybe Cors

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
[$sel:routeSelectionExpression:CreateApiResponse'] :: CreateApiResponse -> Maybe Text

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
[$sel:importInfo:CreateApiResponse'] :: CreateApiResponse -> Maybe [Text]

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
[$sel:disableSchemaValidation:CreateApiResponse'] :: CreateApiResponse -> Maybe Bool

-- | The description of the API.
[$sel:description:CreateApiResponse'] :: CreateApiResponse -> Maybe Text

-- | The API protocol.
[$sel:protocolType:CreateApiResponse'] :: CreateApiResponse -> Maybe ProtocolType

-- | A collection of tags associated with the API.
[$sel:tags:CreateApiResponse'] :: CreateApiResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:CreateApiResponse'] :: CreateApiResponse -> Int

-- | Create a value of <a>CreateApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:CreateApiResponse'</a>, <a>createApiResponse_apiId</a> -
--   The API ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:CreateApi'</a>,
--   <a>createApiResponse_disableExecuteApiEndpoint</a> - Specifies whether
--   clients can invoke your API by using the default execute-api endpoint.
--   By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:CreateApiResponse'</a>,
--   <a>createApiResponse_apiEndpoint</a> - The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
--   
--   <a>$sel:warnings:CreateApiResponse'</a>,
--   <a>createApiResponse_warnings</a> - The warning messages reported when
--   failonwarnings is turned on during API import.
--   
--   <a>$sel:createdDate:CreateApiResponse'</a>,
--   <a>createApiResponse_createdDate</a> - The timestamp when the API was
--   created.
--   
--   <a>$sel:name:CreateApi'</a>, <a>createApiResponse_name</a> - The name
--   of the API.
--   
--   <a>$sel:version:CreateApi'</a>, <a>createApiResponse_version</a> - A
--   version identifier for the API.
--   
--   <a>$sel:apiGatewayManaged:CreateApiResponse'</a>,
--   <a>createApiResponse_apiGatewayManaged</a> - Specifies whether an API
--   is managed by API Gateway. You can't update or delete a managed API by
--   using API Gateway. A managed API can be deleted only through the
--   tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:CreateApi'</a>,
--   <a>createApiResponse_apiKeySelectionExpression</a> - An API key
--   selection expression. Supported only for WebSocket APIs. See <a>API
--   Key Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:CreateApi'</a>,
--   <a>createApiResponse_corsConfiguration</a> - A CORS configuration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:CreateApi'</a>,
--   <a>createApiResponse_routeSelectionExpression</a> - The route
--   selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
--   
--   <a>$sel:importInfo:CreateApiResponse'</a>,
--   <a>createApiResponse_importInfo</a> - The validation information
--   during API import. This may include particular properties of your
--   OpenAPI definition which are ignored during import. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:disableSchemaValidation:CreateApi'</a>,
--   <a>createApiResponse_disableSchemaValidation</a> - Avoid validating
--   models when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:CreateApi'</a>,
--   <a>createApiResponse_description</a> - The description of the API.
--   
--   <a>$sel:protocolType:CreateApi'</a>,
--   <a>createApiResponse_protocolType</a> - The API protocol.
--   
--   <a>$sel:tags:CreateApi'</a>, <a>createApiResponse_tags</a> - A
--   collection of tags associated with the API.
--   
--   <a>$sel:httpStatus:CreateApiResponse'</a>,
--   <a>createApiResponse_httpStatus</a> - The response's http status code.
newCreateApiResponse :: Int -> CreateApiResponse

-- | The API ID.
createApiResponse_apiId :: Lens' CreateApiResponse (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
createApiResponse_disableExecuteApiEndpoint :: Lens' CreateApiResponse (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
createApiResponse_apiEndpoint :: Lens' CreateApiResponse (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
createApiResponse_warnings :: Lens' CreateApiResponse (Maybe [Text])

-- | The timestamp when the API was created.
createApiResponse_createdDate :: Lens' CreateApiResponse (Maybe UTCTime)

-- | The name of the API.
createApiResponse_name :: Lens' CreateApiResponse (Maybe Text)

-- | A version identifier for the API.
createApiResponse_version :: Lens' CreateApiResponse (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
createApiResponse_apiGatewayManaged :: Lens' CreateApiResponse (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
createApiResponse_apiKeySelectionExpression :: Lens' CreateApiResponse (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
createApiResponse_corsConfiguration :: Lens' CreateApiResponse (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
createApiResponse_routeSelectionExpression :: Lens' CreateApiResponse (Maybe Text)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
createApiResponse_importInfo :: Lens' CreateApiResponse (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
createApiResponse_disableSchemaValidation :: Lens' CreateApiResponse (Maybe Bool)

-- | The description of the API.
createApiResponse_description :: Lens' CreateApiResponse (Maybe Text)

-- | The API protocol.
createApiResponse_protocolType :: Lens' CreateApiResponse (Maybe ProtocolType)

-- | A collection of tags associated with the API.
createApiResponse_tags :: Lens' CreateApiResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createApiResponse_httpStatus :: Lens' CreateApiResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateApi.CreateApi
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateApi.CreateApi
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateApi.CreateApi
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateApi.CreateApi
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.CreateApi.CreateApiResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.CreateApi.CreateApiResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.CreateApi.CreateApiResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.CreateApi.CreateApiResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.CreateApi.CreateApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateApi.CreateApiResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.CreateApi.CreateApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.CreateApi.CreateApi
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.CreateApi.CreateApi
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.CreateApi.CreateApi
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.CreateApi.CreateApi
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.CreateApi.CreateApi


-- | Deletes a Tag.
module Network.AWS.ApiGatewayV2.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The resource ARN for the tag.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The Tag keys to delete
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The resource ARN for the tag.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   Tag keys to delete
newUntagResource :: Text -> UntagResource

-- | The resource ARN for the tag.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The Tag keys to delete
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UntagResource.UntagResource


-- | Updates an Api resource.
module Network.AWS.ApiGatewayV2.UpdateApi

-- | Updates an Api.
--   
--   <i>See:</i> <a>newUpdateApi</a> smart constructor.
data UpdateApi
UpdateApi' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateApi

-- | This property is part of quick create. It specifies the credentials
--   required for the integration, if any. For a Lambda integration, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, don't specify this parameter. Currently, this property
--   is not used for HTTP integrations. If provided, this value replaces
--   the credentials associated with the quick create integration.
--   Supported only for HTTP APIs.
[$sel:credentialsArn:UpdateApi'] :: UpdateApi -> Maybe Text

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
[$sel:disableExecuteApiEndpoint:UpdateApi'] :: UpdateApi -> Maybe Bool

-- | The name of the API.
[$sel:name:UpdateApi'] :: UpdateApi -> Maybe Text

-- | A version identifier for the API.
[$sel:version:UpdateApi'] :: UpdateApi -> Maybe Text

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
[$sel:apiKeySelectionExpression:UpdateApi'] :: UpdateApi -> Maybe Text

-- | A CORS configuration. Supported only for HTTP APIs.
[$sel:corsConfiguration:UpdateApi'] :: UpdateApi -> Maybe Cors

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
[$sel:routeSelectionExpression:UpdateApi'] :: UpdateApi -> Maybe Text

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
[$sel:disableSchemaValidation:UpdateApi'] :: UpdateApi -> Maybe Bool

-- | The description of the API.
[$sel:description:UpdateApi'] :: UpdateApi -> Maybe Text

-- | This property is part of quick create. If not specified, the route
--   created using quick create is kept. Otherwise, this value replaces the
--   route key of the quick create route. Additional routes may still be
--   added after the API is updated. Supported only for HTTP APIs.
[$sel:routeKey:UpdateApi'] :: UpdateApi -> Maybe Text

-- | This property is part of quick create. For HTTP integrations, specify
--   a fully qualified URL. For Lambda integrations, specify a function
--   ARN. The type of the integration will be HTTP_PROXY or AWS_PROXY,
--   respectively. The value provided updates the integration URI and
--   integration type. You can update a quick-created target, but you can't
--   remove it from an API. Supported only for HTTP APIs.
[$sel:target:UpdateApi'] :: UpdateApi -> Maybe Text

-- | The API identifier.
[$sel:apiId:UpdateApi'] :: UpdateApi -> Text

-- | Create a value of <a>UpdateApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:credentialsArn:UpdateApi'</a>, <a>updateApi_credentialsArn</a>
--   - This property is part of quick create. It specifies the credentials
--   required for the integration, if any. For a Lambda integration, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, don't specify this parameter. Currently, this property
--   is not used for HTTP integrations. If provided, this value replaces
--   the credentials associated with the quick create integration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:disableExecuteApiEndpoint:UpdateApi'</a>,
--   <a>updateApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default execute-api endpoint. By
--   default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:name:UpdateApi'</a>, <a>updateApi_name</a> - The name of the
--   API.
--   
--   <a>$sel:version:UpdateApi'</a>, <a>updateApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySelectionExpression:UpdateApi'</a>,
--   <a>updateApi_apiKeySelectionExpression</a> - An API key selection
--   expression. Supported only for WebSocket APIs. See <a>API Key
--   Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:UpdateApi'</a>,
--   <a>updateApi_corsConfiguration</a> - A CORS configuration. Supported
--   only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:UpdateApi'</a>,
--   <a>updateApi_routeSelectionExpression</a> - The route selection
--   expression for the API. For HTTP APIs, the routeSelectionExpression
--   must be ${request.method} ${request.path}. If not provided, this will
--   be the default for HTTP APIs. This property is required for WebSocket
--   APIs.
--   
--   <a>$sel:disableSchemaValidation:UpdateApi'</a>,
--   <a>updateApi_disableSchemaValidation</a> - Avoid validating models
--   when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:UpdateApi'</a>, <a>updateApi_description</a> - The
--   description of the API.
--   
--   <a>$sel:routeKey:UpdateApi'</a>, <a>updateApi_routeKey</a> - This
--   property is part of quick create. If not specified, the route created
--   using quick create is kept. Otherwise, this value replaces the route
--   key of the quick create route. Additional routes may still be added
--   after the API is updated. Supported only for HTTP APIs.
--   
--   <a>$sel:target:UpdateApi'</a>, <a>updateApi_target</a> - This property
--   is part of quick create. For HTTP integrations, specify a fully
--   qualified URL. For Lambda integrations, specify a function ARN. The
--   type of the integration will be HTTP_PROXY or AWS_PROXY, respectively.
--   The value provided updates the integration URI and integration type.
--   You can update a quick-created target, but you can't remove it from an
--   API. Supported only for HTTP APIs.
--   
--   <a>$sel:apiId:UpdateApi'</a>, <a>updateApi_apiId</a> - The API
--   identifier.
newUpdateApi :: Text -> UpdateApi

-- | This property is part of quick create. It specifies the credentials
--   required for the integration, if any. For a Lambda integration, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, don't specify this parameter. Currently, this property
--   is not used for HTTP integrations. If provided, this value replaces
--   the credentials associated with the quick create integration.
--   Supported only for HTTP APIs.
updateApi_credentialsArn :: Lens' UpdateApi (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
updateApi_disableExecuteApiEndpoint :: Lens' UpdateApi (Maybe Bool)

-- | The name of the API.
updateApi_name :: Lens' UpdateApi (Maybe Text)

-- | A version identifier for the API.
updateApi_version :: Lens' UpdateApi (Maybe Text)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
updateApi_apiKeySelectionExpression :: Lens' UpdateApi (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
updateApi_corsConfiguration :: Lens' UpdateApi (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
updateApi_routeSelectionExpression :: Lens' UpdateApi (Maybe Text)

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
updateApi_disableSchemaValidation :: Lens' UpdateApi (Maybe Bool)

-- | The description of the API.
updateApi_description :: Lens' UpdateApi (Maybe Text)

-- | This property is part of quick create. If not specified, the route
--   created using quick create is kept. Otherwise, this value replaces the
--   route key of the quick create route. Additional routes may still be
--   added after the API is updated. Supported only for HTTP APIs.
updateApi_routeKey :: Lens' UpdateApi (Maybe Text)

-- | This property is part of quick create. For HTTP integrations, specify
--   a fully qualified URL. For Lambda integrations, specify a function
--   ARN. The type of the integration will be HTTP_PROXY or AWS_PROXY,
--   respectively. The value provided updates the integration URI and
--   integration type. You can update a quick-created target, but you can't
--   remove it from an API. Supported only for HTTP APIs.
updateApi_target :: Lens' UpdateApi (Maybe Text)

-- | The API identifier.
updateApi_apiId :: Lens' UpdateApi Text

-- | <i>See:</i> <a>newUpdateApiResponse</a> smart constructor.
data UpdateApiResponse
UpdateApiResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe ProtocolType -> Maybe (HashMap Text Text) -> Int -> UpdateApiResponse

-- | The API ID.
[$sel:apiId:UpdateApiResponse'] :: UpdateApiResponse -> Maybe Text

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
[$sel:disableExecuteApiEndpoint:UpdateApiResponse'] :: UpdateApiResponse -> Maybe Bool

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
[$sel:apiEndpoint:UpdateApiResponse'] :: UpdateApiResponse -> Maybe Text

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
[$sel:warnings:UpdateApiResponse'] :: UpdateApiResponse -> Maybe [Text]

-- | The timestamp when the API was created.
[$sel:createdDate:UpdateApiResponse'] :: UpdateApiResponse -> Maybe POSIX

-- | The name of the API.
[$sel:name:UpdateApiResponse'] :: UpdateApiResponse -> Maybe Text

-- | A version identifier for the API.
[$sel:version:UpdateApiResponse'] :: UpdateApiResponse -> Maybe Text

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
[$sel:apiGatewayManaged:UpdateApiResponse'] :: UpdateApiResponse -> Maybe Bool

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
[$sel:apiKeySelectionExpression:UpdateApiResponse'] :: UpdateApiResponse -> Maybe Text

-- | A CORS configuration. Supported only for HTTP APIs.
[$sel:corsConfiguration:UpdateApiResponse'] :: UpdateApiResponse -> Maybe Cors

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
[$sel:routeSelectionExpression:UpdateApiResponse'] :: UpdateApiResponse -> Maybe Text

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
[$sel:importInfo:UpdateApiResponse'] :: UpdateApiResponse -> Maybe [Text]

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
[$sel:disableSchemaValidation:UpdateApiResponse'] :: UpdateApiResponse -> Maybe Bool

-- | The description of the API.
[$sel:description:UpdateApiResponse'] :: UpdateApiResponse -> Maybe Text

-- | The API protocol.
[$sel:protocolType:UpdateApiResponse'] :: UpdateApiResponse -> Maybe ProtocolType

-- | A collection of tags associated with the API.
[$sel:tags:UpdateApiResponse'] :: UpdateApiResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:UpdateApiResponse'] :: UpdateApiResponse -> Int

-- | Create a value of <a>UpdateApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:UpdateApi'</a>, <a>updateApiResponse_apiId</a> - The API
--   ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:UpdateApi'</a>,
--   <a>updateApiResponse_disableExecuteApiEndpoint</a> - Specifies whether
--   clients can invoke your API by using the default execute-api endpoint.
--   By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:UpdateApiResponse'</a>,
--   <a>updateApiResponse_apiEndpoint</a> - The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
--   
--   <a>$sel:warnings:UpdateApiResponse'</a>,
--   <a>updateApiResponse_warnings</a> - The warning messages reported when
--   failonwarnings is turned on during API import.
--   
--   <a>$sel:createdDate:UpdateApiResponse'</a>,
--   <a>updateApiResponse_createdDate</a> - The timestamp when the API was
--   created.
--   
--   <a>$sel:name:UpdateApi'</a>, <a>updateApiResponse_name</a> - The name
--   of the API.
--   
--   <a>$sel:version:UpdateApi'</a>, <a>updateApiResponse_version</a> - A
--   version identifier for the API.
--   
--   <a>$sel:apiGatewayManaged:UpdateApiResponse'</a>,
--   <a>updateApiResponse_apiGatewayManaged</a> - Specifies whether an API
--   is managed by API Gateway. You can't update or delete a managed API by
--   using API Gateway. A managed API can be deleted only through the
--   tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:UpdateApi'</a>,
--   <a>updateApiResponse_apiKeySelectionExpression</a> - An API key
--   selection expression. Supported only for WebSocket APIs. See <a>API
--   Key Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:UpdateApi'</a>,
--   <a>updateApiResponse_corsConfiguration</a> - A CORS configuration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:UpdateApi'</a>,
--   <a>updateApiResponse_routeSelectionExpression</a> - The route
--   selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
--   
--   <a>$sel:importInfo:UpdateApiResponse'</a>,
--   <a>updateApiResponse_importInfo</a> - The validation information
--   during API import. This may include particular properties of your
--   OpenAPI definition which are ignored during import. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:disableSchemaValidation:UpdateApi'</a>,
--   <a>updateApiResponse_disableSchemaValidation</a> - Avoid validating
--   models when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:UpdateApi'</a>,
--   <a>updateApiResponse_description</a> - The description of the API.
--   
--   <a>$sel:protocolType:UpdateApiResponse'</a>,
--   <a>updateApiResponse_protocolType</a> - The API protocol.
--   
--   <a>$sel:tags:UpdateApiResponse'</a>, <a>updateApiResponse_tags</a> - A
--   collection of tags associated with the API.
--   
--   <a>$sel:httpStatus:UpdateApiResponse'</a>,
--   <a>updateApiResponse_httpStatus</a> - The response's http status code.
newUpdateApiResponse :: Int -> UpdateApiResponse

-- | The API ID.
updateApiResponse_apiId :: Lens' UpdateApiResponse (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
updateApiResponse_disableExecuteApiEndpoint :: Lens' UpdateApiResponse (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
updateApiResponse_apiEndpoint :: Lens' UpdateApiResponse (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
updateApiResponse_warnings :: Lens' UpdateApiResponse (Maybe [Text])

-- | The timestamp when the API was created.
updateApiResponse_createdDate :: Lens' UpdateApiResponse (Maybe UTCTime)

-- | The name of the API.
updateApiResponse_name :: Lens' UpdateApiResponse (Maybe Text)

-- | A version identifier for the API.
updateApiResponse_version :: Lens' UpdateApiResponse (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
updateApiResponse_apiGatewayManaged :: Lens' UpdateApiResponse (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
updateApiResponse_apiKeySelectionExpression :: Lens' UpdateApiResponse (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
updateApiResponse_corsConfiguration :: Lens' UpdateApiResponse (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
updateApiResponse_routeSelectionExpression :: Lens' UpdateApiResponse (Maybe Text)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
updateApiResponse_importInfo :: Lens' UpdateApiResponse (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
updateApiResponse_disableSchemaValidation :: Lens' UpdateApiResponse (Maybe Bool)

-- | The description of the API.
updateApiResponse_description :: Lens' UpdateApiResponse (Maybe Text)

-- | The API protocol.
updateApiResponse_protocolType :: Lens' UpdateApiResponse (Maybe ProtocolType)

-- | A collection of tags associated with the API.
updateApiResponse_tags :: Lens' UpdateApiResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateApiResponse_httpStatus :: Lens' UpdateApiResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateApi.UpdateApi
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateApi.UpdateApi
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateApi.UpdateApi
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateApi.UpdateApi
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateApi.UpdateApiResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateApi.UpdateApiResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateApi.UpdateApiResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateApi.UpdateApiResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateApi.UpdateApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateApi.UpdateApiResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateApi.UpdateApi
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateApi.UpdateApi
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateApi.UpdateApi
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateApi.UpdateApi
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateApi.UpdateApi
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateApi.UpdateApi


-- | The API mapping.
module Network.AWS.ApiGatewayV2.UpdateApiMapping

-- | Updates an ApiMapping.
--   
--   <i>See:</i> <a>newUpdateApiMapping</a> smart constructor.
data UpdateApiMapping
UpdateApiMapping' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> UpdateApiMapping

-- | The API stage.
[$sel:stage:UpdateApiMapping'] :: UpdateApiMapping -> Maybe Text

-- | The API mapping key.
[$sel:apiMappingKey:UpdateApiMapping'] :: UpdateApiMapping -> Maybe Text

-- | The API mapping identifier.
[$sel:apiMappingId:UpdateApiMapping'] :: UpdateApiMapping -> Text

-- | The API identifier.
[$sel:apiId:UpdateApiMapping'] :: UpdateApiMapping -> Text

-- | The domain name.
[$sel:domainName:UpdateApiMapping'] :: UpdateApiMapping -> Text

-- | Create a value of <a>UpdateApiMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:UpdateApiMapping'</a>, <a>updateApiMapping_stage</a> -
--   The API stage.
--   
--   <a>$sel:apiMappingKey:UpdateApiMapping'</a>,
--   <a>updateApiMapping_apiMappingKey</a> - The API mapping key.
--   
--   <a>$sel:apiMappingId:UpdateApiMapping'</a>,
--   <a>updateApiMapping_apiMappingId</a> - The API mapping identifier.
--   
--   <a>$sel:apiId:UpdateApiMapping'</a>, <a>updateApiMapping_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:domainName:UpdateApiMapping'</a>,
--   <a>updateApiMapping_domainName</a> - The domain name.
newUpdateApiMapping :: Text -> Text -> Text -> UpdateApiMapping

-- | The API stage.
updateApiMapping_stage :: Lens' UpdateApiMapping (Maybe Text)

-- | The API mapping key.
updateApiMapping_apiMappingKey :: Lens' UpdateApiMapping (Maybe Text)

-- | The API mapping identifier.
updateApiMapping_apiMappingId :: Lens' UpdateApiMapping Text

-- | The API identifier.
updateApiMapping_apiId :: Lens' UpdateApiMapping Text

-- | The domain name.
updateApiMapping_domainName :: Lens' UpdateApiMapping Text

-- | <i>See:</i> <a>newUpdateApiMappingResponse</a> smart constructor.
data UpdateApiMappingResponse
UpdateApiMappingResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateApiMappingResponse

-- | The API stage.
[$sel:stage:UpdateApiMappingResponse'] :: UpdateApiMappingResponse -> Maybe Text

-- | The API identifier.
[$sel:apiId:UpdateApiMappingResponse'] :: UpdateApiMappingResponse -> Maybe Text

-- | The API mapping key.
[$sel:apiMappingKey:UpdateApiMappingResponse'] :: UpdateApiMappingResponse -> Maybe Text

-- | The API mapping identifier.
[$sel:apiMappingId:UpdateApiMappingResponse'] :: UpdateApiMappingResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateApiMappingResponse'] :: UpdateApiMappingResponse -> Int

-- | Create a value of <a>UpdateApiMappingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:UpdateApiMapping'</a>,
--   <a>updateApiMappingResponse_stage</a> - The API stage.
--   
--   <a>$sel:apiId:UpdateApiMapping'</a>,
--   <a>updateApiMappingResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:apiMappingKey:UpdateApiMapping'</a>,
--   <a>updateApiMappingResponse_apiMappingKey</a> - The API mapping key.
--   
--   <a>$sel:apiMappingId:UpdateApiMapping'</a>,
--   <a>updateApiMappingResponse_apiMappingId</a> - The API mapping
--   identifier.
--   
--   <a>$sel:httpStatus:UpdateApiMappingResponse'</a>,
--   <a>updateApiMappingResponse_httpStatus</a> - The response's http
--   status code.
newUpdateApiMappingResponse :: Int -> UpdateApiMappingResponse

-- | The API stage.
updateApiMappingResponse_stage :: Lens' UpdateApiMappingResponse (Maybe Text)

-- | The API identifier.
updateApiMappingResponse_apiId :: Lens' UpdateApiMappingResponse (Maybe Text)

-- | The API mapping key.
updateApiMappingResponse_apiMappingKey :: Lens' UpdateApiMappingResponse (Maybe Text)

-- | The API mapping identifier.
updateApiMappingResponse_apiMappingId :: Lens' UpdateApiMappingResponse (Maybe Text)

-- | The response's http status code.
updateApiMappingResponse_httpStatus :: Lens' UpdateApiMappingResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMapping
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMapping
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMapping
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMapping
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMappingResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMappingResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMappingResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMappingResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMapping
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMappingResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMapping
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMapping
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMapping
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMapping
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMapping
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateApiMapping.UpdateApiMapping


-- | Updates an Authorizer.
module Network.AWS.ApiGatewayV2.UpdateAuthorizer

-- | Updates an Authorizer.
--   
--   <i>See:</i> <a>newUpdateAuthorizer</a> smart constructor.
data UpdateAuthorizer
UpdateAuthorizer' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe AuthorizerType -> Text -> Text -> UpdateAuthorizer

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter.
[$sel:authorizerCredentialsArn:UpdateAuthorizer'] :: UpdateAuthorizer -> Maybe Text

-- | This parameter is not used.
[$sel:identityValidationExpression:UpdateAuthorizer'] :: UpdateAuthorizer -> Maybe Text

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. By default, a Lambda authorizer must return an IAM policy. If
--   enabled, the Lambda authorizer can return a boolean value instead of
--   an IAM policy. Supported only for HTTP APIs. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>
[$sel:enableSimpleResponses:UpdateAuthorizer'] :: UpdateAuthorizer -> Maybe Bool

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
[$sel:authorizerUri:UpdateAuthorizer'] :: UpdateAuthorizer -> Maybe Text

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
[$sel:authorizerPayloadFormatVersion:UpdateAuthorizer'] :: UpdateAuthorizer -> Maybe Text

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
[$sel:jwtConfiguration:UpdateAuthorizer'] :: UpdateAuthorizer -> Maybe JWTConfiguration

-- | The name of the authorizer.
[$sel:name:UpdateAuthorizer'] :: UpdateAuthorizer -> Maybe Text

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
[$sel:authorizerResultTtlInSeconds:UpdateAuthorizer'] :: UpdateAuthorizer -> Maybe Natural

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
[$sel:identitySource:UpdateAuthorizer'] :: UpdateAuthorizer -> Maybe [Text]

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
[$sel:authorizerType:UpdateAuthorizer'] :: UpdateAuthorizer -> Maybe AuthorizerType

-- | The authorizer identifier.
[$sel:authorizerId:UpdateAuthorizer'] :: UpdateAuthorizer -> Text

-- | The API identifier.
[$sel:apiId:UpdateAuthorizer'] :: UpdateAuthorizer -> Text

-- | Create a value of <a>UpdateAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerCredentialsArn</a> - Specifies the
--   required credentials as an IAM role for API Gateway to invoke the
--   authorizer. To specify an IAM role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To use resource-based permissions
--   on the Lambda function, don't specify this parameter.
--   
--   <a>$sel:identityValidationExpression:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_identityValidationExpression</a> - This parameter
--   is not used.
--   
--   <a>$sel:enableSimpleResponses:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_enableSimpleResponses</a> - Specifies whether a
--   Lambda authorizer returns a response in a simple format. By default, a
--   Lambda authorizer must return an IAM policy. If enabled, the Lambda
--   authorizer can return a boolean value instead of an IAM policy.
--   Supported only for HTTP APIs. To learn more, see <a>Working with AWS
--   Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerUri</a> - The authorizer's Uniform
--   Resource Identifier (URI). For REQUEST authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerPayloadFormatVersion</a> - Specifies the
--   format of the payload sent to an HTTP API Lambda authorizer. Required
--   for HTTP API Lambda authorizers. Supported values are 1.0 and 2.0. To
--   learn more, see <a>Working with AWS Lambda authorizers for HTTP
--   APIs</a>.
--   
--   <a>$sel:jwtConfiguration:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_jwtConfiguration</a> - Represents the
--   configuration of a JWT authorizer. Required for the JWT authorizer
--   type. Supported only for HTTP APIs.
--   
--   <a>$sel:name:UpdateAuthorizer'</a>, <a>updateAuthorizer_name</a> - The
--   name of the authorizer.
--   
--   <a>$sel:authorizerResultTtlInSeconds:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerResultTtlInSeconds</a> - The time to
--   live (TTL) for cached authorizer results, in seconds. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway caches authorizer responses. The maximum value is 3600, or 1
--   hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:identitySource:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:authorizerType:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerType</a> - The authorizer type. Specify
--   REQUEST for a Lambda function using incoming request parameters.
--   Specify JWT to use JSON Web Tokens (supported only for HTTP APIs).
--   
--   <a>$sel:authorizerId:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerId</a> - The authorizer identifier.
--   
--   <a>$sel:apiId:UpdateAuthorizer'</a>, <a>updateAuthorizer_apiId</a> -
--   The API identifier.
newUpdateAuthorizer :: Text -> Text -> UpdateAuthorizer

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter.
updateAuthorizer_authorizerCredentialsArn :: Lens' UpdateAuthorizer (Maybe Text)

-- | This parameter is not used.
updateAuthorizer_identityValidationExpression :: Lens' UpdateAuthorizer (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. By default, a Lambda authorizer must return an IAM policy. If
--   enabled, the Lambda authorizer can return a boolean value instead of
--   an IAM policy. Supported only for HTTP APIs. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>
updateAuthorizer_enableSimpleResponses :: Lens' UpdateAuthorizer (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
updateAuthorizer_authorizerUri :: Lens' UpdateAuthorizer (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
updateAuthorizer_authorizerPayloadFormatVersion :: Lens' UpdateAuthorizer (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
updateAuthorizer_jwtConfiguration :: Lens' UpdateAuthorizer (Maybe JWTConfiguration)

-- | The name of the authorizer.
updateAuthorizer_name :: Lens' UpdateAuthorizer (Maybe Text)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
updateAuthorizer_authorizerResultTtlInSeconds :: Lens' UpdateAuthorizer (Maybe Natural)

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
updateAuthorizer_identitySource :: Lens' UpdateAuthorizer (Maybe [Text])

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
updateAuthorizer_authorizerType :: Lens' UpdateAuthorizer (Maybe AuthorizerType)

-- | The authorizer identifier.
updateAuthorizer_authorizerId :: Lens' UpdateAuthorizer Text

-- | The API identifier.
updateAuthorizer_apiId :: Lens' UpdateAuthorizer Text

-- | <i>See:</i> <a>newUpdateAuthorizerResponse</a> smart constructor.
data UpdateAuthorizerResponse
UpdateAuthorizerResponse' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe AuthorizerType -> Int -> UpdateAuthorizerResponse

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
[$sel:authorizerCredentialsArn:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Maybe Text

-- | The validation expression does not apply to the REQUEST authorizer.
[$sel:identityValidationExpression:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Maybe Text

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
[$sel:enableSimpleResponses:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Maybe Bool

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
[$sel:authorizerUri:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Maybe Text

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
[$sel:authorizerPayloadFormatVersion:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Maybe Text

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
[$sel:jwtConfiguration:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Maybe JWTConfiguration

-- | The authorizer identifier.
[$sel:authorizerId:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Maybe Text

-- | The name of the authorizer.
[$sel:name:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Maybe Text

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
[$sel:authorizerResultTtlInSeconds:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Maybe Natural

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
[$sel:identitySource:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Maybe [Text]

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
[$sel:authorizerType:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Maybe AuthorizerType

-- | The response's http status code.
[$sel:httpStatus:UpdateAuthorizerResponse'] :: UpdateAuthorizerResponse -> Int

-- | Create a value of <a>UpdateAuthorizerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerCredentialsArn</a> - Specifies
--   the required credentials as an IAM role for API Gateway to invoke the
--   authorizer. To specify an IAM role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To use resource-based permissions
--   on the Lambda function, don't specify this parameter. Supported only
--   for REQUEST authorizers.
--   
--   <a>$sel:identityValidationExpression:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_identityValidationExpression</a> - The
--   validation expression does not apply to the REQUEST authorizer.
--   
--   <a>$sel:enableSimpleResponses:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_enableSimpleResponses</a> - Specifies
--   whether a Lambda authorizer returns a response in a simple format. If
--   enabled, the Lambda authorizer can return a boolean value instead of
--   an IAM policy. Supported only for HTTP APIs. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerUri</a> - The authorizer's
--   Uniform Resource Identifier (URI). For REQUEST authorizers, this must
--   be a well-formed Lambda function URI, for example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerPayloadFormatVersion</a> -
--   Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
--   
--   <a>$sel:jwtConfiguration:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_jwtConfiguration</a> - Represents the
--   configuration of a JWT authorizer. Required for the JWT authorizer
--   type. Supported only for HTTP APIs.
--   
--   <a>$sel:authorizerId:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerId</a> - The authorizer
--   identifier.
--   
--   <a>$sel:name:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_name</a> - The name of the authorizer.
--   
--   <a>$sel:authorizerResultTtlInSeconds:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerResultTtlInSeconds</a> - The
--   time to live (TTL) for cached authorizer results, in seconds. If it
--   equals 0, authorization caching is disabled. If it is greater than 0,
--   API Gateway caches authorizer responses. The maximum value is 3600, or
--   1 hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:identitySource:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_identitySource</a> - The identity source
--   for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:authorizerType:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerType</a> - The authorizer type.
--   Specify REQUEST for a Lambda function using incoming request
--   parameters. Specify JWT to use JSON Web Tokens (supported only for
--   HTTP APIs).
--   
--   <a>$sel:httpStatus:UpdateAuthorizerResponse'</a>,
--   <a>updateAuthorizerResponse_httpStatus</a> - The response's http
--   status code.
newUpdateAuthorizerResponse :: Int -> UpdateAuthorizerResponse

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
updateAuthorizerResponse_authorizerCredentialsArn :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | The validation expression does not apply to the REQUEST authorizer.
updateAuthorizerResponse_identityValidationExpression :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
updateAuthorizerResponse_enableSimpleResponses :: Lens' UpdateAuthorizerResponse (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
updateAuthorizerResponse_authorizerUri :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
updateAuthorizerResponse_authorizerPayloadFormatVersion :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
updateAuthorizerResponse_jwtConfiguration :: Lens' UpdateAuthorizerResponse (Maybe JWTConfiguration)

-- | The authorizer identifier.
updateAuthorizerResponse_authorizerId :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | The name of the authorizer.
updateAuthorizerResponse_name :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
updateAuthorizerResponse_authorizerResultTtlInSeconds :: Lens' UpdateAuthorizerResponse (Maybe Natural)

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
updateAuthorizerResponse_identitySource :: Lens' UpdateAuthorizerResponse (Maybe [Text])

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
updateAuthorizerResponse_authorizerType :: Lens' UpdateAuthorizerResponse (Maybe AuthorizerType)

-- | The response's http status code.
updateAuthorizerResponse_httpStatus :: Lens' UpdateAuthorizerResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizer
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizer
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizer
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizer
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizerResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizerResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizerResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizerResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizer
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizerResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizer
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizer
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizer
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizer
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizer
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateAuthorizer.UpdateAuthorizer


-- | Updates a Deployment.
module Network.AWS.ApiGatewayV2.UpdateDeployment

-- | Updates a Deployment.
--   
--   <i>See:</i> <a>newUpdateDeployment</a> smart constructor.
data UpdateDeployment
UpdateDeployment' :: Maybe Text -> Text -> Text -> UpdateDeployment

-- | The description for the deployment resource.
[$sel:description:UpdateDeployment'] :: UpdateDeployment -> Maybe Text

-- | The API identifier.
[$sel:apiId:UpdateDeployment'] :: UpdateDeployment -> Text

-- | The deployment ID.
[$sel:deploymentId:UpdateDeployment'] :: UpdateDeployment -> Text

-- | Create a value of <a>UpdateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateDeployment'</a>,
--   <a>updateDeployment_description</a> - The description for the
--   deployment resource.
--   
--   <a>$sel:apiId:UpdateDeployment'</a>, <a>updateDeployment_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:deploymentId:UpdateDeployment'</a>,
--   <a>updateDeployment_deploymentId</a> - The deployment ID.
newUpdateDeployment :: Text -> Text -> UpdateDeployment

-- | The description for the deployment resource.
updateDeployment_description :: Lens' UpdateDeployment (Maybe Text)

-- | The API identifier.
updateDeployment_apiId :: Lens' UpdateDeployment Text

-- | The deployment ID.
updateDeployment_deploymentId :: Lens' UpdateDeployment Text

-- | <i>See:</i> <a>newUpdateDeploymentResponse</a> smart constructor.
data UpdateDeploymentResponse
UpdateDeploymentResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe DeploymentStatus -> Maybe Text -> Int -> UpdateDeploymentResponse

-- | The identifier for the deployment.
[$sel:deploymentId:UpdateDeploymentResponse'] :: UpdateDeploymentResponse -> Maybe Text

-- | Specifies whether a deployment was automatically released.
[$sel:autoDeployed:UpdateDeploymentResponse'] :: UpdateDeploymentResponse -> Maybe Bool

-- | May contain additional feedback on the status of an API deployment.
[$sel:deploymentStatusMessage:UpdateDeploymentResponse'] :: UpdateDeploymentResponse -> Maybe Text

-- | The date and time when the Deployment resource was created.
[$sel:createdDate:UpdateDeploymentResponse'] :: UpdateDeploymentResponse -> Maybe POSIX

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
[$sel:deploymentStatus:UpdateDeploymentResponse'] :: UpdateDeploymentResponse -> Maybe DeploymentStatus

-- | The description for the deployment.
[$sel:description:UpdateDeploymentResponse'] :: UpdateDeploymentResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateDeploymentResponse'] :: UpdateDeploymentResponse -> Int

-- | Create a value of <a>UpdateDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:UpdateDeployment'</a>,
--   <a>updateDeploymentResponse_deploymentId</a> - The identifier for the
--   deployment.
--   
--   <a>$sel:autoDeployed:UpdateDeploymentResponse'</a>,
--   <a>updateDeploymentResponse_autoDeployed</a> - Specifies whether a
--   deployment was automatically released.
--   
--   <a>$sel:deploymentStatusMessage:UpdateDeploymentResponse'</a>,
--   <a>updateDeploymentResponse_deploymentStatusMessage</a> - May contain
--   additional feedback on the status of an API deployment.
--   
--   <a>$sel:createdDate:UpdateDeploymentResponse'</a>,
--   <a>updateDeploymentResponse_createdDate</a> - The date and time when
--   the Deployment resource was created.
--   
--   <a>$sel:deploymentStatus:UpdateDeploymentResponse'</a>,
--   <a>updateDeploymentResponse_deploymentStatus</a> - The status of the
--   deployment: PENDING, FAILED, or SUCCEEDED.
--   
--   <a>$sel:description:UpdateDeployment'</a>,
--   <a>updateDeploymentResponse_description</a> - The description for the
--   deployment.
--   
--   <a>$sel:httpStatus:UpdateDeploymentResponse'</a>,
--   <a>updateDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeploymentResponse :: Int -> UpdateDeploymentResponse

-- | The identifier for the deployment.
updateDeploymentResponse_deploymentId :: Lens' UpdateDeploymentResponse (Maybe Text)

-- | Specifies whether a deployment was automatically released.
updateDeploymentResponse_autoDeployed :: Lens' UpdateDeploymentResponse (Maybe Bool)

-- | May contain additional feedback on the status of an API deployment.
updateDeploymentResponse_deploymentStatusMessage :: Lens' UpdateDeploymentResponse (Maybe Text)

-- | The date and time when the Deployment resource was created.
updateDeploymentResponse_createdDate :: Lens' UpdateDeploymentResponse (Maybe UTCTime)

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
updateDeploymentResponse_deploymentStatus :: Lens' UpdateDeploymentResponse (Maybe DeploymentStatus)

-- | The description for the deployment.
updateDeploymentResponse_description :: Lens' UpdateDeploymentResponse (Maybe Text)

-- | The response's http status code.
updateDeploymentResponse_httpStatus :: Lens' UpdateDeploymentResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeployment
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeployment
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeployment
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeployment
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeploymentResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeploymentResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeploymentResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeploymentResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeployment
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeploymentResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeployment
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeployment
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeployment
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeployment
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeployment
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateDeployment.UpdateDeployment


-- | Updates a domain name.
module Network.AWS.ApiGatewayV2.UpdateDomainName

-- | Updates a DomainName.
--   
--   <i>See:</i> <a>newUpdateDomainName</a> smart constructor.
data UpdateDomainName
UpdateDomainName' :: Maybe [DomainNameConfiguration] -> Maybe MutualTlsAuthenticationInput -> Text -> UpdateDomainName

-- | The domain name configurations.
[$sel:domainNameConfigurations:UpdateDomainName'] :: UpdateDomainName -> Maybe [DomainNameConfiguration]

-- | The mutual TLS authentication configuration for a custom domain name.
[$sel:mutualTlsAuthentication:UpdateDomainName'] :: UpdateDomainName -> Maybe MutualTlsAuthenticationInput

-- | The domain name.
[$sel:domainName:UpdateDomainName'] :: UpdateDomainName -> Text

-- | Create a value of <a>UpdateDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:UpdateDomainName'</a>,
--   <a>updateDomainName_domainNameConfigurations</a> - The domain name
--   configurations.
--   
--   <a>$sel:mutualTlsAuthentication:UpdateDomainName'</a>,
--   <a>updateDomainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name.
--   
--   <a>$sel:domainName:UpdateDomainName'</a>,
--   <a>updateDomainName_domainName</a> - The domain name.
newUpdateDomainName :: Text -> UpdateDomainName

-- | The domain name configurations.
updateDomainName_domainNameConfigurations :: Lens' UpdateDomainName (Maybe [DomainNameConfiguration])

-- | The mutual TLS authentication configuration for a custom domain name.
updateDomainName_mutualTlsAuthentication :: Lens' UpdateDomainName (Maybe MutualTlsAuthenticationInput)

-- | The domain name.
updateDomainName_domainName :: Lens' UpdateDomainName Text

-- | <i>See:</i> <a>newUpdateDomainNameResponse</a> smart constructor.
data UpdateDomainNameResponse
UpdateDomainNameResponse' :: Maybe [DomainNameConfiguration] -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> UpdateDomainNameResponse

-- | The domain name configurations.
[$sel:domainNameConfigurations:UpdateDomainNameResponse'] :: UpdateDomainNameResponse -> Maybe [DomainNameConfiguration]

-- | The name of the DomainName resource.
[$sel:domainName:UpdateDomainNameResponse'] :: UpdateDomainNameResponse -> Maybe Text

-- | The mutual TLS authentication configuration for a custom domain name.
[$sel:mutualTlsAuthentication:UpdateDomainNameResponse'] :: UpdateDomainNameResponse -> Maybe MutualTlsAuthentication

-- | The API mapping selection expression.
[$sel:apiMappingSelectionExpression:UpdateDomainNameResponse'] :: UpdateDomainNameResponse -> Maybe Text

-- | The collection of tags associated with a domain name.
[$sel:tags:UpdateDomainNameResponse'] :: UpdateDomainNameResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:UpdateDomainNameResponse'] :: UpdateDomainNameResponse -> Int

-- | Create a value of <a>UpdateDomainNameResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:UpdateDomainName'</a>,
--   <a>updateDomainNameResponse_domainNameConfigurations</a> - The domain
--   name configurations.
--   
--   <a>$sel:domainName:UpdateDomainName'</a>,
--   <a>updateDomainNameResponse_domainName</a> - The name of the
--   DomainName resource.
--   
--   <a>$sel:mutualTlsAuthentication:UpdateDomainName'</a>,
--   <a>updateDomainNameResponse_mutualTlsAuthentication</a> - The mutual
--   TLS authentication configuration for a custom domain name.
--   
--   <a>$sel:apiMappingSelectionExpression:UpdateDomainNameResponse'</a>,
--   <a>updateDomainNameResponse_apiMappingSelectionExpression</a> - The
--   API mapping selection expression.
--   
--   <a>$sel:tags:UpdateDomainNameResponse'</a>,
--   <a>updateDomainNameResponse_tags</a> - The collection of tags
--   associated with a domain name.
--   
--   <a>$sel:httpStatus:UpdateDomainNameResponse'</a>,
--   <a>updateDomainNameResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDomainNameResponse :: Int -> UpdateDomainNameResponse

-- | The domain name configurations.
updateDomainNameResponse_domainNameConfigurations :: Lens' UpdateDomainNameResponse (Maybe [DomainNameConfiguration])

-- | The name of the DomainName resource.
updateDomainNameResponse_domainName :: Lens' UpdateDomainNameResponse (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
updateDomainNameResponse_mutualTlsAuthentication :: Lens' UpdateDomainNameResponse (Maybe MutualTlsAuthentication)

-- | The API mapping selection expression.
updateDomainNameResponse_apiMappingSelectionExpression :: Lens' UpdateDomainNameResponse (Maybe Text)

-- | The collection of tags associated with a domain name.
updateDomainNameResponse_tags :: Lens' UpdateDomainNameResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateDomainNameResponse_httpStatus :: Lens' UpdateDomainNameResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainName
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainName
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainName
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainName
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainNameResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainNameResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainNameResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainNameResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainName
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainNameResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainName
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainName
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainName
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainName
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainName
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateDomainName.UpdateDomainName


-- | Updates an Integration.
module Network.AWS.ApiGatewayV2.UpdateIntegration

-- | Updates an Integration.
--   
--   <i>See:</i> <a>newUpdateIntegration</a> smart constructor.
data UpdateIntegration
UpdateIntegration' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfigInput -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ContentHandlingStrategy -> Maybe IntegrationType -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Text -> Text -> UpdateIntegration

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
[$sel:requestTemplates:UpdateIntegration'] :: UpdateIntegration -> Maybe (HashMap Text Text)

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
[$sel:integrationSubtype:UpdateIntegration'] :: UpdateIntegration -> Maybe Text

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentialsArn:UpdateIntegration'] :: UpdateIntegration -> Maybe Text

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
[$sel:integrationUri:UpdateIntegration'] :: UpdateIntegration -> Maybe Text

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API integrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to the backend. The key should
--   follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
[$sel:requestParameters:UpdateIntegration'] :: UpdateIntegration -> Maybe (HashMap Text Text)

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
[$sel:connectionId:UpdateIntegration'] :: UpdateIntegration -> Maybe Text

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
[$sel:passthroughBehavior:UpdateIntegration'] :: UpdateIntegration -> Maybe PassthroughBehavior

-- | Specifies the integration's HTTP method type.
[$sel:integrationMethod:UpdateIntegration'] :: UpdateIntegration -> Maybe Text

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
[$sel:tlsConfig:UpdateIntegration'] :: UpdateIntegration -> Maybe TlsConfigInput

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
[$sel:payloadFormatVersion:UpdateIntegration'] :: UpdateIntegration -> Maybe Text

-- | The template selection expression for the integration.
[$sel:templateSelectionExpression:UpdateIntegration'] :: UpdateIntegration -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
[$sel:timeoutInMillis:UpdateIntegration'] :: UpdateIntegration -> Maybe Natural

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:UpdateIntegration'] :: UpdateIntegration -> Maybe ContentHandlingStrategy

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration. For HTTP API private
--   integrations, use an HTTP_PROXY integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
[$sel:integrationType:UpdateIntegration'] :: UpdateIntegration -> Maybe IntegrationType

-- | The description of the integration
[$sel:description:UpdateIntegration'] :: UpdateIntegration -> Maybe Text

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
[$sel:connectionType:UpdateIntegration'] :: UpdateIntegration -> Maybe ConnectionType

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
[$sel:responseParameters:UpdateIntegration'] :: UpdateIntegration -> Maybe (HashMap Text (HashMap Text Text))

-- | The API identifier.
[$sel:apiId:UpdateIntegration'] :: UpdateIntegration -> Text

-- | The integration ID.
[$sel:integrationId:UpdateIntegration'] :: UpdateIntegration -> Text

-- | Create a value of <a>UpdateIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestTemplates:UpdateIntegration'</a>,
--   <a>updateIntegration_requestTemplates</a> - Represents a map of
--   Velocity templates that are applied on the request payload based on
--   the value of the Content-Type header sent by the client. The content
--   type value is the key in this map, and the template (as a String) is
--   the value. Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:UpdateIntegration'</a>,
--   <a>updateIntegration_integrationSubtype</a> - Supported only for HTTP
--   API AWS_PROXY integrations. Specifies the AWS service action to
--   invoke. To learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:UpdateIntegration'</a>,
--   <a>updateIntegration_credentialsArn</a> - Specifies the credentials
--   required for the integration, if any. For AWS integrations, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify the
--   string arn:aws:iam::*:user/*. To use resource-based permissions on
--   supported AWS services, specify null.
--   
--   <a>$sel:integrationUri:UpdateIntegration'</a>,
--   <a>updateIntegration_integrationUri</a> - For a Lambda integration,
--   specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:requestParameters:UpdateIntegration'</a>,
--   <a>updateIntegration_requestParameters</a> - For WebSocket APIs, a
--   key-value map specifying request parameters that are passed from the
--   method request to the backend. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the backend. The method request parameter
--   value must match the pattern of method.request.{location}.{name} ,
--   where {location} is querystring, path, or header; and {name} must be a
--   valid and unique method request parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API integrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to the backend. The key should
--   follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:UpdateIntegration'</a>,
--   <a>updateIntegration_connectionId</a> - The ID of the VPC link for a
--   private integration. Supported only for HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:UpdateIntegration'</a>,
--   <a>updateIntegration_passthroughBehavior</a> - Specifies the
--   pass-through behavior for incoming requests based on the Content-Type
--   header in the request, and the available mapping templates specified
--   as the requestTemplates property on the Integration resource. There
--   are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.
--   Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:UpdateIntegration'</a>,
--   <a>updateIntegration_integrationMethod</a> - Specifies the
--   integration's HTTP method type.
--   
--   <a>$sel:tlsConfig:UpdateIntegration'</a>,
--   <a>updateIntegration_tlsConfig</a> - The TLS configuration for a
--   private integration. If you specify a TLS configuration, private
--   integration traffic uses the HTTPS protocol. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:payloadFormatVersion:UpdateIntegration'</a>,
--   <a>updateIntegration_payloadFormatVersion</a> - Specifies the format
--   of the payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:UpdateIntegration'</a>,
--   <a>updateIntegration_templateSelectionExpression</a> - The template
--   selection expression for the integration.
--   
--   <a>$sel:timeoutInMillis:UpdateIntegration'</a>,
--   <a>updateIntegration_timeoutInMillis</a> - Custom timeout between 50
--   and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000
--   milliseconds for HTTP APIs. The default timeout is 29 seconds for
--   WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:contentHandlingStrategy:UpdateIntegration'</a>,
--   <a>updateIntegration_contentHandlingStrategy</a> - Supported only for
--   WebSocket APIs. Specifies how to handle response payload content type
--   conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:integrationType:UpdateIntegration'</a>,
--   <a>updateIntegration_integrationType</a> - The integration type of an
--   integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration. For HTTP API private
--   integrations, use an HTTP_PROXY integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:description:UpdateIntegration'</a>,
--   <a>updateIntegration_description</a> - The description of the
--   integration
--   
--   <a>$sel:connectionType:UpdateIntegration'</a>,
--   <a>updateIntegration_connectionType</a> - The type of the network
--   connection to the integration endpoint. Specify INTERNET for
--   connections through the public routable internet or VPC_LINK for
--   private connections between API Gateway and resources in a VPC. The
--   default value is INTERNET.
--   
--   <a>$sel:responseParameters:UpdateIntegration'</a>,
--   <a>updateIntegration_responseParameters</a> - Supported only for HTTP
--   APIs. You use response parameters to transform the HTTP response from
--   a backend integration before returning the response to clients.
--   Specify a key-value map from a selection key to response parameters.
--   The selection key must be a valid HTTP status code within the range of
--   200-599. Response parameters are a key-value map. The key must match
--   pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:apiId:UpdateIntegration'</a>, <a>updateIntegration_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:integrationId:UpdateIntegration'</a>,
--   <a>updateIntegration_integrationId</a> - The integration ID.
newUpdateIntegration :: Text -> Text -> UpdateIntegration

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
updateIntegration_requestTemplates :: Lens' UpdateIntegration (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
updateIntegration_integrationSubtype :: Lens' UpdateIntegration (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
updateIntegration_credentialsArn :: Lens' UpdateIntegration (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
updateIntegration_integrationUri :: Lens' UpdateIntegration (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API integrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to the backend. The key should
--   follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
updateIntegration_requestParameters :: Lens' UpdateIntegration (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
updateIntegration_connectionId :: Lens' UpdateIntegration (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
updateIntegration_passthroughBehavior :: Lens' UpdateIntegration (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
updateIntegration_integrationMethod :: Lens' UpdateIntegration (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
updateIntegration_tlsConfig :: Lens' UpdateIntegration (Maybe TlsConfigInput)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
updateIntegration_payloadFormatVersion :: Lens' UpdateIntegration (Maybe Text)

-- | The template selection expression for the integration.
updateIntegration_templateSelectionExpression :: Lens' UpdateIntegration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
updateIntegration_timeoutInMillis :: Lens' UpdateIntegration (Maybe Natural)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
updateIntegration_contentHandlingStrategy :: Lens' UpdateIntegration (Maybe ContentHandlingStrategy)

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration. For HTTP API private
--   integrations, use an HTTP_PROXY integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
updateIntegration_integrationType :: Lens' UpdateIntegration (Maybe IntegrationType)

-- | The description of the integration
updateIntegration_description :: Lens' UpdateIntegration (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
updateIntegration_connectionType :: Lens' UpdateIntegration (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
updateIntegration_responseParameters :: Lens' UpdateIntegration (Maybe (HashMap Text (HashMap Text Text)))

-- | The API identifier.
updateIntegration_apiId :: Lens' UpdateIntegration Text

-- | The integration ID.
updateIntegration_integrationId :: Lens' UpdateIntegration Text

-- | <i>See:</i> <a>newUpdateIntegrationResponse'</a> smart constructor.
data UpdateIntegrationResponse'
UpdateIntegrationResponse'' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfig -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Bool -> Maybe ContentHandlingStrategy -> Maybe IntegrationType -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Int -> UpdateIntegrationResponse'

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
[$sel:integrationResponseSelectionExpression:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Text

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
[$sel:requestTemplates:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe (HashMap Text Text)

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
[$sel:integrationSubtype:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Text

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
[$sel:credentialsArn:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Text

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
[$sel:integrationUri:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Text

-- | Represents the identifier of an integration.
[$sel:integrationId:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Text

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
[$sel:requestParameters:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe (HashMap Text Text)

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
[$sel:connectionId:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Text

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
[$sel:passthroughBehavior:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe PassthroughBehavior

-- | Specifies the integration's HTTP method type.
[$sel:integrationMethod:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Text

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
[$sel:tlsConfig:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe TlsConfig

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
[$sel:payloadFormatVersion:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Text

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
[$sel:templateSelectionExpression:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Text

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
[$sel:timeoutInMillis:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Natural

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
[$sel:apiGatewayManaged:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Bool

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe ContentHandlingStrategy

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
[$sel:integrationType:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe IntegrationType

-- | Represents the description of an integration.
[$sel:description:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe Text

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
[$sel:connectionType:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe ConnectionType

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
[$sel:responseParameters:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Maybe (HashMap Text (HashMap Text Text))

-- | The response's http status code.
[$sel:httpStatus:UpdateIntegrationResponse''] :: UpdateIntegrationResponse' -> Int

-- | Create a value of <a>UpdateIntegrationResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:integrationResponseSelectionExpression:UpdateIntegrationResponse''</a>,
--   <a>updateIntegrationResponse'_integrationResponseSelectionExpression</a>
--   - The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
--   
--   <a>$sel:requestTemplates:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_requestTemplates</a> - Represents a map
--   of Velocity templates that are applied on the request payload based on
--   the value of the Content-Type header sent by the client. The content
--   type value is the key in this map, and the template (as a String) is
--   the value. Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_integrationSubtype</a> - Supported only
--   for HTTP API AWS_PROXY integrations. Specifies the AWS service action
--   to invoke. To learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_credentialsArn</a> - Specifies the
--   credentials required for the integration, if any. For AWS
--   integrations, three options are available. To specify an IAM Role for
--   API Gateway to assume, use the role's Amazon Resource Name (ARN). To
--   require that the caller's identity be passed through from the request,
--   specify the string arn:aws:iam::*:user/*. To use resource-based
--   permissions on supported AWS services, specify null.
--   
--   <a>$sel:integrationUri:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_integrationUri</a> - For a Lambda
--   integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:integrationId:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_integrationId</a> - Represents the
--   identifier of an integration.
--   
--   <a>$sel:requestParameters:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_requestParameters</a> - For WebSocket
--   APIs, a key-value map specifying request parameters that are passed
--   from the method request to the backend. The key is an integration
--   request parameter name and the associated value is a method request
--   parameter value or static value that must be enclosed within single
--   quotes and pre-encoded as required by the backend. The method request
--   parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_connectionId</a> - The ID of the VPC
--   link for a private integration. Supported only for HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_passthroughBehavior</a> - Specifies the
--   pass-through behavior for incoming requests based on the Content-Type
--   header in the request, and the available mapping templates specified
--   as the requestTemplates property on the Integration resource. There
--   are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.
--   Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_integrationMethod</a> - Specifies the
--   integration's HTTP method type.
--   
--   <a>$sel:tlsConfig:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_tlsConfig</a> - The TLS configuration
--   for a private integration. If you specify a TLS configuration, private
--   integration traffic uses the HTTPS protocol. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:payloadFormatVersion:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_payloadFormatVersion</a> - Specifies the
--   format of the payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_templateSelectionExpression</a> - The
--   template selection expression for the integration. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:timeoutInMillis:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_timeoutInMillis</a> - Custom timeout
--   between 50 and 29,000 milliseconds for WebSocket APIs and between 50
--   and 30,000 milliseconds for HTTP APIs. The default timeout is 29
--   seconds for WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:apiGatewayManaged:UpdateIntegrationResponse''</a>,
--   <a>updateIntegrationResponse'_apiGatewayManaged</a> - Specifies
--   whether an integration is managed by API Gateway. If you created an
--   API using using quick create, the resulting integration is managed by
--   API Gateway. You can update a managed integration, but you can't
--   delete it.
--   
--   <a>$sel:contentHandlingStrategy:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_contentHandlingStrategy</a> - Supported
--   only for WebSocket APIs. Specifies how to handle response payload
--   content type conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:integrationType:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_integrationType</a> - The integration
--   type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:description:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_description</a> - Represents the
--   description of an integration.
--   
--   <a>$sel:connectionType:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_connectionType</a> - The type of the
--   network connection to the integration endpoint. Specify INTERNET for
--   connections through the public routable internet or VPC_LINK for
--   private connections between API Gateway and resources in a VPC. The
--   default value is INTERNET.
--   
--   <a>$sel:responseParameters:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_responseParameters</a> - Supported only
--   for HTTP APIs. You use response parameters to transform the HTTP
--   response from a backend integration before returning the response to
--   clients. Specify a key-value map from a selection key to response
--   parameters. The selection key must be a valid HTTP status code within
--   the range of 200-599. Response parameters are a key-value map. The key
--   must match pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:httpStatus:UpdateIntegrationResponse''</a>,
--   <a>updateIntegrationResponse'_httpStatus</a> - The response's http
--   status code.
newUpdateIntegrationResponse' :: Int -> UpdateIntegrationResponse'

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
updateIntegrationResponse'_integrationResponseSelectionExpression :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
updateIntegrationResponse'_requestTemplates :: Lens' UpdateIntegrationResponse' (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
updateIntegrationResponse'_integrationSubtype :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
updateIntegrationResponse'_credentialsArn :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
updateIntegrationResponse'_integrationUri :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | Represents the identifier of an integration.
updateIntegrationResponse'_integrationId :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
updateIntegrationResponse'_requestParameters :: Lens' UpdateIntegrationResponse' (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
updateIntegrationResponse'_connectionId :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
updateIntegrationResponse'_passthroughBehavior :: Lens' UpdateIntegrationResponse' (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
updateIntegrationResponse'_integrationMethod :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
updateIntegrationResponse'_tlsConfig :: Lens' UpdateIntegrationResponse' (Maybe TlsConfig)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
updateIntegrationResponse'_payloadFormatVersion :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
updateIntegrationResponse'_templateSelectionExpression :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
updateIntegrationResponse'_timeoutInMillis :: Lens' UpdateIntegrationResponse' (Maybe Natural)

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
updateIntegrationResponse'_apiGatewayManaged :: Lens' UpdateIntegrationResponse' (Maybe Bool)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
updateIntegrationResponse'_contentHandlingStrategy :: Lens' UpdateIntegrationResponse' (Maybe ContentHandlingStrategy)

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
updateIntegrationResponse'_integrationType :: Lens' UpdateIntegrationResponse' (Maybe IntegrationType)

-- | Represents the description of an integration.
updateIntegrationResponse'_description :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
updateIntegrationResponse'_connectionType :: Lens' UpdateIntegrationResponse' (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
updateIntegrationResponse'_responseParameters :: Lens' UpdateIntegrationResponse' (Maybe (HashMap Text (HashMap Text Text)))

-- | The response's http status code.
updateIntegrationResponse'_httpStatus :: Lens' UpdateIntegrationResponse' Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegration
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegration
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegration
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegration
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegrationResponse'
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegrationResponse'
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegrationResponse'
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegrationResponse'
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegrationResponse'
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegration
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegration
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegration
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateIntegration.UpdateIntegration


-- | Updates an IntegrationResponses.
module Network.AWS.ApiGatewayV2.UpdateIntegrationResponse

-- | Updates an IntegrationResponses.
--   
--   <i>See:</i> <a>newUpdateIntegrationResponse</a> smart constructor.
data UpdateIntegrationResponse
UpdateIntegrationResponse' :: Maybe Text -> Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> UpdateIntegrationResponse

-- | The integration response key.
[$sel:integrationResponseKey:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Maybe Text

-- | The template selection expression for the integration response.
--   Supported only for WebSocket APIs.
[$sel:templateSelectionExpression:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Maybe Text

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Maybe ContentHandlingStrategy

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
[$sel:responseTemplates:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Maybe (HashMap Text Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name} , where name
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression} , where {name} is a valid
--   and unique response header name and {JSON-expression} is a valid JSON
--   expression without the $ prefix.
[$sel:responseParameters:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Maybe (HashMap Text Text)

-- | The API identifier.
[$sel:apiId:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Text

-- | The integration response ID.
[$sel:integrationResponseId:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Text

-- | The integration ID.
[$sel:integrationId:UpdateIntegrationResponse'] :: UpdateIntegrationResponse -> Text

-- | Create a value of <a>UpdateIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseKey:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_integrationResponseKey</a> - The
--   integration response key.
--   
--   <a>$sel:templateSelectionExpression:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_templateSelectionExpression</a> - The
--   template selection expression for the integration response. Supported
--   only for WebSocket APIs.
--   
--   <a>$sel:contentHandlingStrategy:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_contentHandlingStrategy</a> - Supported
--   only for WebSocket APIs. Specifies how to handle response payload
--   content type conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_responseTemplates</a> - The collection of
--   response templates for the integration response as a string-to-string
--   map of key-value pairs. Response templates are represented as a
--   key/value map, with a content-type as the key and a template as the
--   value.
--   
--   <a>$sel:responseParameters:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the backend. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of method.response.header.{name} , where name is a valid and
--   unique header name. The mapped non-static value must match the pattern
--   of integration.response.header.{name} or
--   integration.response.body.{JSON-expression} , where {name} is a valid
--   and unique response header name and {JSON-expression} is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:apiId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:integrationResponseId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_integrationResponseId</a> - The
--   integration response ID.
--   
--   <a>$sel:integrationId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_integrationId</a> - The integration ID.
newUpdateIntegrationResponse :: Text -> Text -> Text -> UpdateIntegrationResponse

-- | The integration response key.
updateIntegrationResponse_integrationResponseKey :: Lens' UpdateIntegrationResponse (Maybe Text)

-- | The template selection expression for the integration response.
--   Supported only for WebSocket APIs.
updateIntegrationResponse_templateSelectionExpression :: Lens' UpdateIntegrationResponse (Maybe Text)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
updateIntegrationResponse_contentHandlingStrategy :: Lens' UpdateIntegrationResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
updateIntegrationResponse_responseTemplates :: Lens' UpdateIntegrationResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name} , where name
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression} , where {name} is a valid
--   and unique response header name and {JSON-expression} is a valid JSON
--   expression without the $ prefix.
updateIntegrationResponse_responseParameters :: Lens' UpdateIntegrationResponse (Maybe (HashMap Text Text))

-- | The API identifier.
updateIntegrationResponse_apiId :: Lens' UpdateIntegrationResponse Text

-- | The integration response ID.
updateIntegrationResponse_integrationResponseId :: Lens' UpdateIntegrationResponse Text

-- | The integration ID.
updateIntegrationResponse_integrationId :: Lens' UpdateIntegrationResponse Text

-- | <i>See:</i> <a>newUpdateIntegrationResponseResponse</a> smart
--   constructor.
data UpdateIntegrationResponseResponse
UpdateIntegrationResponseResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Int -> UpdateIntegrationResponseResponse

-- | The integration response ID.
[$sel:integrationResponseId:UpdateIntegrationResponseResponse'] :: UpdateIntegrationResponseResponse -> Maybe Text

-- | The integration response key.
[$sel:integrationResponseKey:UpdateIntegrationResponseResponse'] :: UpdateIntegrationResponseResponse -> Maybe Text

-- | The template selection expressions for the integration response.
[$sel:templateSelectionExpression:UpdateIntegrationResponseResponse'] :: UpdateIntegrationResponseResponse -> Maybe Text

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
[$sel:contentHandlingStrategy:UpdateIntegrationResponseResponse'] :: UpdateIntegrationResponseResponse -> Maybe ContentHandlingStrategy

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
[$sel:responseTemplates:UpdateIntegrationResponseResponse'] :: UpdateIntegrationResponseResponse -> Maybe (HashMap Text Text)

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
[$sel:responseParameters:UpdateIntegrationResponseResponse'] :: UpdateIntegrationResponseResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:UpdateIntegrationResponseResponse'] :: UpdateIntegrationResponseResponse -> Int

-- | Create a value of <a>UpdateIntegrationResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_integrationResponseId</a> - The
--   integration response ID.
--   
--   <a>$sel:integrationResponseKey:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_integrationResponseKey</a> - The
--   integration response key.
--   
--   <a>$sel:templateSelectionExpression:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_templateSelectionExpression</a> -
--   The template selection expressions for the integration response.
--   
--   <a>$sel:contentHandlingStrategy:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_contentHandlingStrategy</a> -
--   Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_responseTemplates</a> - The
--   collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
--   
--   <a>$sel:responseParameters:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_responseParameters</a> - A
--   key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:httpStatus:UpdateIntegrationResponseResponse'</a>,
--   <a>updateIntegrationResponseResponse_httpStatus</a> - The response's
--   http status code.
newUpdateIntegrationResponseResponse :: Int -> UpdateIntegrationResponseResponse

-- | The integration response ID.
updateIntegrationResponseResponse_integrationResponseId :: Lens' UpdateIntegrationResponseResponse (Maybe Text)

-- | The integration response key.
updateIntegrationResponseResponse_integrationResponseKey :: Lens' UpdateIntegrationResponseResponse (Maybe Text)

-- | The template selection expressions for the integration response.
updateIntegrationResponseResponse_templateSelectionExpression :: Lens' UpdateIntegrationResponseResponse (Maybe Text)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
updateIntegrationResponseResponse_contentHandlingStrategy :: Lens' UpdateIntegrationResponseResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
updateIntegrationResponseResponse_responseTemplates :: Lens' UpdateIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
updateIntegrationResponseResponse_responseParameters :: Lens' UpdateIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateIntegrationResponseResponse_httpStatus :: Lens' UpdateIntegrationResponseResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponseResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponseResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponseResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponseResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponse
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateIntegrationResponse.UpdateIntegrationResponse


-- | Updates a Model.
module Network.AWS.ApiGatewayV2.UpdateModel

-- | Updates a Model.
--   
--   <i>See:</i> <a>newUpdateModel</a> smart constructor.
data UpdateModel
UpdateModel' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateModel

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
[$sel:schema:UpdateModel'] :: UpdateModel -> Maybe Text

-- | The name of the model.
[$sel:name:UpdateModel'] :: UpdateModel -> Maybe Text

-- | The description of the model.
[$sel:description:UpdateModel'] :: UpdateModel -> Maybe Text

-- | The content-type for the model, for example, "application/json".
[$sel:contentType:UpdateModel'] :: UpdateModel -> Maybe Text

-- | The model ID.
[$sel:modelId:UpdateModel'] :: UpdateModel -> Text

-- | The API identifier.
[$sel:apiId:UpdateModel'] :: UpdateModel -> Text

-- | Create a value of <a>UpdateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:UpdateModel'</a>, <a>updateModel_schema</a> - The
--   schema for the model. For application/json models, this should be JSON
--   schema draft 4 model.
--   
--   <a>$sel:name:UpdateModel'</a>, <a>updateModel_name</a> - The name of
--   the model.
--   
--   <a>$sel:description:UpdateModel'</a>, <a>updateModel_description</a> -
--   The description of the model.
--   
--   <a>$sel:contentType:UpdateModel'</a>, <a>updateModel_contentType</a> -
--   The content-type for the model, for example, "application/json".
--   
--   <a>$sel:modelId:UpdateModel'</a>, <a>updateModel_modelId</a> - The
--   model ID.
--   
--   <a>$sel:apiId:UpdateModel'</a>, <a>updateModel_apiId</a> - The API
--   identifier.
newUpdateModel :: Text -> Text -> UpdateModel

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
updateModel_schema :: Lens' UpdateModel (Maybe Text)

-- | The name of the model.
updateModel_name :: Lens' UpdateModel (Maybe Text)

-- | The description of the model.
updateModel_description :: Lens' UpdateModel (Maybe Text)

-- | The content-type for the model, for example, "application/json".
updateModel_contentType :: Lens' UpdateModel (Maybe Text)

-- | The model ID.
updateModel_modelId :: Lens' UpdateModel Text

-- | The API identifier.
updateModel_apiId :: Lens' UpdateModel Text

-- | <i>See:</i> <a>newUpdateModelResponse</a> smart constructor.
data UpdateModelResponse
UpdateModelResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateModelResponse

-- | The model identifier.
[$sel:modelId:UpdateModelResponse'] :: UpdateModelResponse -> Maybe Text

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
[$sel:schema:UpdateModelResponse'] :: UpdateModelResponse -> Maybe Text

-- | The name of the model. Must be alphanumeric.
[$sel:name:UpdateModelResponse'] :: UpdateModelResponse -> Maybe Text

-- | The description of the model.
[$sel:description:UpdateModelResponse'] :: UpdateModelResponse -> Maybe Text

-- | The content-type for the model, for example, "application/json".
[$sel:contentType:UpdateModelResponse'] :: UpdateModelResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateModelResponse'] :: UpdateModelResponse -> Int

-- | Create a value of <a>UpdateModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:UpdateModel'</a>, <a>updateModelResponse_modelId</a> -
--   The model identifier.
--   
--   <a>$sel:schema:UpdateModel'</a>, <a>updateModelResponse_schema</a> -
--   The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
--   
--   <a>$sel:name:UpdateModel'</a>, <a>updateModelResponse_name</a> - The
--   name of the model. Must be alphanumeric.
--   
--   <a>$sel:description:UpdateModel'</a>,
--   <a>updateModelResponse_description</a> - The description of the model.
--   
--   <a>$sel:contentType:UpdateModel'</a>,
--   <a>updateModelResponse_contentType</a> - The content-type for the
--   model, for example, "application/json".
--   
--   <a>$sel:httpStatus:UpdateModelResponse'</a>,
--   <a>updateModelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateModelResponse :: Int -> UpdateModelResponse

-- | The model identifier.
updateModelResponse_modelId :: Lens' UpdateModelResponse (Maybe Text)

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
updateModelResponse_schema :: Lens' UpdateModelResponse (Maybe Text)

-- | The name of the model. Must be alphanumeric.
updateModelResponse_name :: Lens' UpdateModelResponse (Maybe Text)

-- | The description of the model.
updateModelResponse_description :: Lens' UpdateModelResponse (Maybe Text)

-- | The content-type for the model, for example, "application/json".
updateModelResponse_contentType :: Lens' UpdateModelResponse (Maybe Text)

-- | The response's http status code.
updateModelResponse_httpStatus :: Lens' UpdateModelResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateModel.UpdateModel
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateModel.UpdateModel
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateModel.UpdateModel
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateModel.UpdateModel
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateModel.UpdateModelResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateModel.UpdateModelResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateModel.UpdateModelResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateModel.UpdateModelResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateModel.UpdateModel
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateModel.UpdateModelResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateModel.UpdateModel
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateModel.UpdateModel
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateModel.UpdateModel
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateModel.UpdateModel
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateModel.UpdateModel
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateModel.UpdateModel


-- | Updates a Route.
module Network.AWS.ApiGatewayV2.UpdateRoute

-- | Updates a Route.
--   
--   <i>See:</i> <a>newUpdateRoute</a> smart constructor.
data UpdateRoute
UpdateRoute' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateRoute

-- | The authorization scopes supported by this route.
[$sel:authorizationScopes:UpdateRoute'] :: UpdateRoute -> Maybe [Text]

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
[$sel:modelSelectionExpression:UpdateRoute'] :: UpdateRoute -> Maybe Text

-- | The request models for the route. Supported only for WebSocket APIs.
[$sel:requestModels:UpdateRoute'] :: UpdateRoute -> Maybe (HashMap Text Text)

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
[$sel:routeResponseSelectionExpression:UpdateRoute'] :: UpdateRoute -> Maybe Text

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
[$sel:requestParameters:UpdateRoute'] :: UpdateRoute -> Maybe (HashMap Text ParameterConstraints)

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
[$sel:authorizerId:UpdateRoute'] :: UpdateRoute -> Maybe Text

-- | The operation name for the route.
[$sel:operationName:UpdateRoute'] :: UpdateRoute -> Maybe Text

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
[$sel:authorizationType:UpdateRoute'] :: UpdateRoute -> Maybe AuthorizationType

-- | Specifies whether an API key is required for the route. Supported only
--   for WebSocket APIs.
[$sel:apiKeyRequired:UpdateRoute'] :: UpdateRoute -> Maybe Bool

-- | The route key for the route.
[$sel:routeKey:UpdateRoute'] :: UpdateRoute -> Maybe Text

-- | The target for the route.
[$sel:target:UpdateRoute'] :: UpdateRoute -> Maybe Text

-- | The API identifier.
[$sel:apiId:UpdateRoute'] :: UpdateRoute -> Text

-- | The route ID.
[$sel:routeId:UpdateRoute'] :: UpdateRoute -> Text

-- | Create a value of <a>UpdateRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:UpdateRoute'</a>,
--   <a>updateRoute_authorizationScopes</a> - The authorization scopes
--   supported by this route.
--   
--   <a>$sel:modelSelectionExpression:UpdateRoute'</a>,
--   <a>updateRoute_modelSelectionExpression</a> - The model selection
--   expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:UpdateRoute'</a>,
--   <a>updateRoute_requestModels</a> - The request models for the route.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:UpdateRoute'</a>,
--   <a>updateRoute_routeResponseSelectionExpression</a> - The route
--   response selection expression for the route. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:requestParameters:UpdateRoute'</a>,
--   <a>updateRoute_requestParameters</a> - The request parameters for the
--   route. Supported only for WebSocket APIs.
--   
--   <a>$sel:authorizerId:UpdateRoute'</a>, <a>updateRoute_authorizerId</a>
--   - The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
--   
--   <a>$sel:operationName:UpdateRoute'</a>,
--   <a>updateRoute_operationName</a> - The operation name for the route.
--   
--   <a>$sel:authorizationType:UpdateRoute'</a>,
--   <a>updateRoute_authorizationType</a> - The authorization type for the
--   route. For WebSocket APIs, valid values are NONE for open access,
--   AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda
--   authorizer For HTTP APIs, valid values are NONE for open access, JWT
--   for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:UpdateRoute'</a>,
--   <a>updateRoute_apiKeyRequired</a> - Specifies whether an API key is
--   required for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeKey:UpdateRoute'</a>, <a>updateRoute_routeKey</a> - The
--   route key for the route.
--   
--   <a>$sel:target:UpdateRoute'</a>, <a>updateRoute_target</a> - The
--   target for the route.
--   
--   <a>$sel:apiId:UpdateRoute'</a>, <a>updateRoute_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:routeId:UpdateRoute'</a>, <a>updateRoute_routeId</a> - The
--   route ID.
newUpdateRoute :: Text -> Text -> UpdateRoute

-- | The authorization scopes supported by this route.
updateRoute_authorizationScopes :: Lens' UpdateRoute (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
updateRoute_modelSelectionExpression :: Lens' UpdateRoute (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
updateRoute_requestModels :: Lens' UpdateRoute (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
updateRoute_routeResponseSelectionExpression :: Lens' UpdateRoute (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
updateRoute_requestParameters :: Lens' UpdateRoute (Maybe (HashMap Text ParameterConstraints))

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
updateRoute_authorizerId :: Lens' UpdateRoute (Maybe Text)

-- | The operation name for the route.
updateRoute_operationName :: Lens' UpdateRoute (Maybe Text)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
updateRoute_authorizationType :: Lens' UpdateRoute (Maybe AuthorizationType)

-- | Specifies whether an API key is required for the route. Supported only
--   for WebSocket APIs.
updateRoute_apiKeyRequired :: Lens' UpdateRoute (Maybe Bool)

-- | The route key for the route.
updateRoute_routeKey :: Lens' UpdateRoute (Maybe Text)

-- | The target for the route.
updateRoute_target :: Lens' UpdateRoute (Maybe Text)

-- | The API identifier.
updateRoute_apiId :: Lens' UpdateRoute Text

-- | The route ID.
updateRoute_routeId :: Lens' UpdateRoute Text

-- | <i>See:</i> <a>newUpdateRouteResponse'</a> smart constructor.
data UpdateRouteResponse'
UpdateRouteResponse'' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Maybe Text -> Int -> UpdateRouteResponse'

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
[$sel:authorizationScopes:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe [Text]

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
[$sel:modelSelectionExpression:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe Text

-- | The request models for the route. Supported only for WebSocket APIs.
[$sel:requestModels:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe (HashMap Text Text)

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
[$sel:routeResponseSelectionExpression:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe Text

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
[$sel:requestParameters:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe (HashMap Text ParameterConstraints)

-- | The route ID.
[$sel:routeId:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe Text

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
[$sel:authorizerId:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe Text

-- | The operation name for the route.
[$sel:operationName:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe Text

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
[$sel:apiGatewayManaged:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe Bool

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
[$sel:authorizationType:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe AuthorizationType

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
[$sel:apiKeyRequired:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe Bool

-- | The route key for the route.
[$sel:routeKey:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe Text

-- | The target for the route.
[$sel:target:UpdateRouteResponse''] :: UpdateRouteResponse' -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateRouteResponse''] :: UpdateRouteResponse' -> Int

-- | Create a value of <a>UpdateRouteResponse'</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:UpdateRoute'</a>,
--   <a>updateRouteResponse'_authorizationScopes</a> - A list of
--   authorization scopes configured on a route. The scopes are used with a
--   JWT authorizer to authorize the method invocation. The authorization
--   works by matching the route scopes against the scopes parsed from the
--   access token in the incoming request. The method invocation is
--   authorized if any route scope matches a claimed scope in the access
--   token. Otherwise, the invocation is not authorized. When the route
--   scope is configured, the client must provide an access token instead
--   of an identity token for authorization purposes.
--   
--   <a>$sel:modelSelectionExpression:UpdateRoute'</a>,
--   <a>updateRouteResponse'_modelSelectionExpression</a> - The model
--   selection expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:UpdateRoute'</a>,
--   <a>updateRouteResponse'_requestModels</a> - The request models for the
--   route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:UpdateRoute'</a>,
--   <a>updateRouteResponse'_routeResponseSelectionExpression</a> - The
--   route response selection expression for the route. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:requestParameters:UpdateRoute'</a>,
--   <a>updateRouteResponse'_requestParameters</a> - The request parameters
--   for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeId:UpdateRoute'</a>, <a>updateRouteResponse'_routeId</a>
--   - The route ID.
--   
--   <a>$sel:authorizerId:UpdateRoute'</a>,
--   <a>updateRouteResponse'_authorizerId</a> - The identifier of the
--   Authorizer resource to be associated with this route. The authorizer
--   identifier is generated by API Gateway when you created the
--   authorizer.
--   
--   <a>$sel:operationName:UpdateRoute'</a>,
--   <a>updateRouteResponse'_operationName</a> - The operation name for the
--   route.
--   
--   <a>$sel:apiGatewayManaged:UpdateRouteResponse''</a>,
--   <a>updateRouteResponse'_apiGatewayManaged</a> - Specifies whether a
--   route is managed by API Gateway. If you created an API using quick
--   create, the $default route is managed by API Gateway. You can't modify
--   the $default route key.
--   
--   <a>$sel:authorizationType:UpdateRoute'</a>,
--   <a>updateRouteResponse'_authorizationType</a> - The authorization type
--   for the route. For WebSocket APIs, valid values are NONE for open
--   access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a
--   Lambda authorizer For HTTP APIs, valid values are NONE for open
--   access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM
--   permissions, and CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:UpdateRoute'</a>,
--   <a>updateRouteResponse'_apiKeyRequired</a> - Specifies whether an API
--   key is required for this route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeKey:UpdateRoute'</a>,
--   <a>updateRouteResponse'_routeKey</a> - The route key for the route.
--   
--   <a>$sel:target:UpdateRoute'</a>, <a>updateRouteResponse'_target</a> -
--   The target for the route.
--   
--   <a>$sel:httpStatus:UpdateRouteResponse''</a>,
--   <a>updateRouteResponse'_httpStatus</a> - The response's http status
--   code.
newUpdateRouteResponse' :: Int -> UpdateRouteResponse'

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
updateRouteResponse'_authorizationScopes :: Lens' UpdateRouteResponse' (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
updateRouteResponse'_modelSelectionExpression :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
updateRouteResponse'_requestModels :: Lens' UpdateRouteResponse' (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
updateRouteResponse'_routeResponseSelectionExpression :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
updateRouteResponse'_requestParameters :: Lens' UpdateRouteResponse' (Maybe (HashMap Text ParameterConstraints))

-- | The route ID.
updateRouteResponse'_routeId :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
updateRouteResponse'_authorizerId :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The operation name for the route.
updateRouteResponse'_operationName :: Lens' UpdateRouteResponse' (Maybe Text)

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
updateRouteResponse'_apiGatewayManaged :: Lens' UpdateRouteResponse' (Maybe Bool)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
updateRouteResponse'_authorizationType :: Lens' UpdateRouteResponse' (Maybe AuthorizationType)

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
updateRouteResponse'_apiKeyRequired :: Lens' UpdateRouteResponse' (Maybe Bool)

-- | The route key for the route.
updateRouteResponse'_routeKey :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The target for the route.
updateRouteResponse'_target :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The response's http status code.
updateRouteResponse'_httpStatus :: Lens' UpdateRouteResponse' Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRoute
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRoute
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRoute
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRoute
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRouteResponse'
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRouteResponse'
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRouteResponse'
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRouteResponse'
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRoute
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRouteResponse'
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRoute
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRoute
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRoute
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRoute
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRoute
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateRoute.UpdateRoute


-- | Updates a RouteResponse.
module Network.AWS.ApiGatewayV2.UpdateRouteResponse

-- | Updates a RouteResponse.
--   
--   <i>See:</i> <a>newUpdateRouteResponse</a> smart constructor.
data UpdateRouteResponse
UpdateRouteResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Text -> Text -> Text -> UpdateRouteResponse

-- | The model selection expression for the route response. Supported only
--   for WebSocket APIs.
[$sel:modelSelectionExpression:UpdateRouteResponse'] :: UpdateRouteResponse -> Maybe Text

-- | The response models for the route response.
[$sel:responseModels:UpdateRouteResponse'] :: UpdateRouteResponse -> Maybe (HashMap Text Text)

-- | The route response key.
[$sel:routeResponseKey:UpdateRouteResponse'] :: UpdateRouteResponse -> Maybe Text

-- | The route response parameters.
[$sel:responseParameters:UpdateRouteResponse'] :: UpdateRouteResponse -> Maybe (HashMap Text ParameterConstraints)

-- | The route response ID.
[$sel:routeResponseId:UpdateRouteResponse'] :: UpdateRouteResponse -> Text

-- | The API identifier.
[$sel:apiId:UpdateRouteResponse'] :: UpdateRouteResponse -> Text

-- | The route ID.
[$sel:routeId:UpdateRouteResponse'] :: UpdateRouteResponse -> Text

-- | Create a value of <a>UpdateRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_modelSelectionExpression</a> - The model
--   selection expression for the route response. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:responseModels:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_responseModels</a> - The response models for
--   the route response.
--   
--   <a>$sel:routeResponseKey:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_routeResponseKey</a> - The route response key.
--   
--   <a>$sel:responseParameters:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_responseParameters</a> - The route response
--   parameters.
--   
--   <a>$sel:routeResponseId:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_routeResponseId</a> - The route response ID.
--   
--   <a>$sel:apiId:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:routeId:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_routeId</a> - The route ID.
newUpdateRouteResponse :: Text -> Text -> Text -> UpdateRouteResponse

-- | The model selection expression for the route response. Supported only
--   for WebSocket APIs.
updateRouteResponse_modelSelectionExpression :: Lens' UpdateRouteResponse (Maybe Text)

-- | The response models for the route response.
updateRouteResponse_responseModels :: Lens' UpdateRouteResponse (Maybe (HashMap Text Text))

-- | The route response key.
updateRouteResponse_routeResponseKey :: Lens' UpdateRouteResponse (Maybe Text)

-- | The route response parameters.
updateRouteResponse_responseParameters :: Lens' UpdateRouteResponse (Maybe (HashMap Text ParameterConstraints))

-- | The route response ID.
updateRouteResponse_routeResponseId :: Lens' UpdateRouteResponse Text

-- | The API identifier.
updateRouteResponse_apiId :: Lens' UpdateRouteResponse Text

-- | The route ID.
updateRouteResponse_routeId :: Lens' UpdateRouteResponse Text

-- | <i>See:</i> <a>newUpdateRouteResponseResponse</a> smart constructor.
data UpdateRouteResponseResponse
UpdateRouteResponseResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Int -> UpdateRouteResponseResponse

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
[$sel:modelSelectionExpression:UpdateRouteResponseResponse'] :: UpdateRouteResponseResponse -> Maybe Text

-- | Represents the response models of a route response.
[$sel:responseModels:UpdateRouteResponseResponse'] :: UpdateRouteResponseResponse -> Maybe (HashMap Text Text)

-- | Represents the identifier of a route response.
[$sel:routeResponseId:UpdateRouteResponseResponse'] :: UpdateRouteResponseResponse -> Maybe Text

-- | Represents the route response key of a route response.
[$sel:routeResponseKey:UpdateRouteResponseResponse'] :: UpdateRouteResponseResponse -> Maybe Text

-- | Represents the response parameters of a route response.
[$sel:responseParameters:UpdateRouteResponseResponse'] :: UpdateRouteResponseResponse -> Maybe (HashMap Text ParameterConstraints)

-- | The response's http status code.
[$sel:httpStatus:UpdateRouteResponseResponse'] :: UpdateRouteResponseResponse -> Int

-- | Create a value of <a>UpdateRouteResponseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:UpdateRouteResponse'</a>,
--   <a>updateRouteResponseResponse_modelSelectionExpression</a> -
--   Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:responseModels:UpdateRouteResponse'</a>,
--   <a>updateRouteResponseResponse_responseModels</a> - Represents the
--   response models of a route response.
--   
--   <a>$sel:routeResponseId:UpdateRouteResponse'</a>,
--   <a>updateRouteResponseResponse_routeResponseId</a> - Represents the
--   identifier of a route response.
--   
--   <a>$sel:routeResponseKey:UpdateRouteResponse'</a>,
--   <a>updateRouteResponseResponse_routeResponseKey</a> - Represents the
--   route response key of a route response.
--   
--   <a>$sel:responseParameters:UpdateRouteResponse'</a>,
--   <a>updateRouteResponseResponse_responseParameters</a> - Represents the
--   response parameters of a route response.
--   
--   <a>$sel:httpStatus:UpdateRouteResponseResponse'</a>,
--   <a>updateRouteResponseResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRouteResponseResponse :: Int -> UpdateRouteResponseResponse

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
updateRouteResponseResponse_modelSelectionExpression :: Lens' UpdateRouteResponseResponse (Maybe Text)

-- | Represents the response models of a route response.
updateRouteResponseResponse_responseModels :: Lens' UpdateRouteResponseResponse (Maybe (HashMap Text Text))

-- | Represents the identifier of a route response.
updateRouteResponseResponse_routeResponseId :: Lens' UpdateRouteResponseResponse (Maybe Text)

-- | Represents the route response key of a route response.
updateRouteResponseResponse_routeResponseKey :: Lens' UpdateRouteResponseResponse (Maybe Text)

-- | Represents the response parameters of a route response.
updateRouteResponseResponse_responseParameters :: Lens' UpdateRouteResponseResponse (Maybe (HashMap Text ParameterConstraints))

-- | The response's http status code.
updateRouteResponseResponse_httpStatus :: Lens' UpdateRouteResponseResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponse
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponseResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponseResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponseResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponseResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponseResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponse
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponse
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponse
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponse
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponse
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateRouteResponse.UpdateRouteResponse


-- | Updates a Stage.
module Network.AWS.ApiGatewayV2.UpdateStage

-- | Updates a Stage.
--   
--   <i>See:</i> <a>newUpdateStage</a> smart constructor.
data UpdateStage
UpdateStage' :: Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe RouteSettings -> Maybe Text -> Text -> Text -> UpdateStage

-- | The deployment identifier for the API stage. Can't be updated if
--   autoDeploy is enabled.
[$sel:deploymentId:UpdateStage'] :: UpdateStage -> Maybe Text

-- | Route settings for the stage.
[$sel:routeSettings:UpdateStage'] :: UpdateStage -> Maybe (HashMap Text RouteSettings)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:UpdateStage'] :: UpdateStage -> Maybe AccessLogSettings

-- | The identifier of a client certificate for a Stage.
[$sel:clientCertificateId:UpdateStage'] :: UpdateStage -> Maybe Text

-- | A map that defines the stage variables for a Stage. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
[$sel:stageVariables:UpdateStage'] :: UpdateStage -> Maybe (HashMap Text Text)

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
[$sel:autoDeploy:UpdateStage'] :: UpdateStage -> Maybe Bool

-- | The default route settings for the stage.
[$sel:defaultRouteSettings:UpdateStage'] :: UpdateStage -> Maybe RouteSettings

-- | The description for the API stage.
[$sel:description:UpdateStage'] :: UpdateStage -> Maybe Text

-- | The stage name. Stage names can contain only alphanumeric characters,
--   hyphens, and underscores, or be $default. Maximum length is 128
--   characters.
[$sel:stageName:UpdateStage'] :: UpdateStage -> Text

-- | The API identifier.
[$sel:apiId:UpdateStage'] :: UpdateStage -> Text

-- | Create a value of <a>UpdateStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:UpdateStage'</a>, <a>updateStage_deploymentId</a>
--   - The deployment identifier for the API stage. Can't be updated if
--   autoDeploy is enabled.
--   
--   <a>$sel:routeSettings:UpdateStage'</a>,
--   <a>updateStage_routeSettings</a> - Route settings for the stage.
--   
--   <a>$sel:accessLogSettings:UpdateStage'</a>,
--   <a>updateStage_accessLogSettings</a> - Settings for logging access in
--   this stage.
--   
--   <a>$sel:clientCertificateId:UpdateStage'</a>,
--   <a>updateStage_clientCertificateId</a> - The identifier of a client
--   certificate for a Stage.
--   
--   <a>$sel:stageVariables:UpdateStage'</a>,
--   <a>updateStage_stageVariables</a> - A map that defines the stage
--   variables for a Stage. Variable names can have alphanumeric and
--   underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:UpdateStage'</a>, <a>updateStage_autoDeploy</a> -
--   Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
--   
--   <a>$sel:defaultRouteSettings:UpdateStage'</a>,
--   <a>updateStage_defaultRouteSettings</a> - The default route settings
--   for the stage.
--   
--   <a>$sel:description:UpdateStage'</a>, <a>updateStage_description</a> -
--   The description for the API stage.
--   
--   <a>$sel:stageName:UpdateStage'</a>, <a>updateStage_stageName</a> - The
--   stage name. Stage names can contain only alphanumeric characters,
--   hyphens, and underscores, or be $default. Maximum length is 128
--   characters.
--   
--   <a>$sel:apiId:UpdateStage'</a>, <a>updateStage_apiId</a> - The API
--   identifier.
newUpdateStage :: Text -> Text -> UpdateStage

-- | The deployment identifier for the API stage. Can't be updated if
--   autoDeploy is enabled.
updateStage_deploymentId :: Lens' UpdateStage (Maybe Text)

-- | Route settings for the stage.
updateStage_routeSettings :: Lens' UpdateStage (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
updateStage_accessLogSettings :: Lens' UpdateStage (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage.
updateStage_clientCertificateId :: Lens' UpdateStage (Maybe Text)

-- | A map that defines the stage variables for a Stage. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
updateStage_stageVariables :: Lens' UpdateStage (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
updateStage_autoDeploy :: Lens' UpdateStage (Maybe Bool)

-- | The default route settings for the stage.
updateStage_defaultRouteSettings :: Lens' UpdateStage (Maybe RouteSettings)

-- | The description for the API stage.
updateStage_description :: Lens' UpdateStage (Maybe Text)

-- | The stage name. Stage names can contain only alphanumeric characters,
--   hyphens, and underscores, or be $default. Maximum length is 128
--   characters.
updateStage_stageName :: Lens' UpdateStage Text

-- | The API identifier.
updateStage_apiId :: Lens' UpdateStage Text

-- | <i>See:</i> <a>newUpdateStageResponse</a> smart constructor.
data UpdateStageResponse
UpdateStageResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe POSIX -> Maybe RouteSettings -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> UpdateStageResponse

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
[$sel:lastDeploymentStatusMessage:UpdateStageResponse'] :: UpdateStageResponse -> Maybe Text

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
[$sel:deploymentId:UpdateStageResponse'] :: UpdateStageResponse -> Maybe Text

-- | Route settings for the stage, by routeKey.
[$sel:routeSettings:UpdateStageResponse'] :: UpdateStageResponse -> Maybe (HashMap Text RouteSettings)

-- | Settings for logging access in this stage.
[$sel:accessLogSettings:UpdateStageResponse'] :: UpdateStageResponse -> Maybe AccessLogSettings

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
[$sel:clientCertificateId:UpdateStageResponse'] :: UpdateStageResponse -> Maybe Text

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
[$sel:stageVariables:UpdateStageResponse'] :: UpdateStageResponse -> Maybe (HashMap Text Text)

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
[$sel:autoDeploy:UpdateStageResponse'] :: UpdateStageResponse -> Maybe Bool

-- | The timestamp when the stage was created.
[$sel:createdDate:UpdateStageResponse'] :: UpdateStageResponse -> Maybe POSIX

-- | Default route settings for the stage.
[$sel:defaultRouteSettings:UpdateStageResponse'] :: UpdateStageResponse -> Maybe RouteSettings

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
[$sel:apiGatewayManaged:UpdateStageResponse'] :: UpdateStageResponse -> Maybe Bool

-- | The name of the stage.
[$sel:stageName:UpdateStageResponse'] :: UpdateStageResponse -> Maybe Text

-- | The timestamp when the stage was last updated.
[$sel:lastUpdatedDate:UpdateStageResponse'] :: UpdateStageResponse -> Maybe POSIX

-- | The description of the stage.
[$sel:description:UpdateStageResponse'] :: UpdateStageResponse -> Maybe Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
[$sel:tags:UpdateStageResponse'] :: UpdateStageResponse -> Maybe (HashMap Text Text)

-- | The response's http status code.
[$sel:httpStatus:UpdateStageResponse'] :: UpdateStageResponse -> Int

-- | Create a value of <a>UpdateStageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentStatusMessage:UpdateStageResponse'</a>,
--   <a>updateStageResponse_lastDeploymentStatusMessage</a> - Describes the
--   status of the last deployment of a stage. Supported only for stages
--   with autoDeploy enabled.
--   
--   <a>$sel:deploymentId:UpdateStage'</a>,
--   <a>updateStageResponse_deploymentId</a> - The identifier of the
--   Deployment that the Stage is associated with. Can't be updated if
--   autoDeploy is enabled.
--   
--   <a>$sel:routeSettings:UpdateStage'</a>,
--   <a>updateStageResponse_routeSettings</a> - Route settings for the
--   stage, by routeKey.
--   
--   <a>$sel:accessLogSettings:UpdateStage'</a>,
--   <a>updateStageResponse_accessLogSettings</a> - Settings for logging
--   access in this stage.
--   
--   <a>$sel:clientCertificateId:UpdateStage'</a>,
--   <a>updateStageResponse_clientCertificateId</a> - The identifier of a
--   client certificate for a Stage. Supported only for WebSocket APIs.
--   
--   <a>$sel:stageVariables:UpdateStage'</a>,
--   <a>updateStageResponse_stageVariables</a> - A map that defines the
--   stage variables for a stage resource. Variable names can have
--   alphanumeric and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:UpdateStage'</a>,
--   <a>updateStageResponse_autoDeploy</a> - Specifies whether updates to
--   an API automatically trigger a new deployment. The default value is
--   false.
--   
--   <a>$sel:createdDate:UpdateStageResponse'</a>,
--   <a>updateStageResponse_createdDate</a> - The timestamp when the stage
--   was created.
--   
--   <a>$sel:defaultRouteSettings:UpdateStage'</a>,
--   <a>updateStageResponse_defaultRouteSettings</a> - Default route
--   settings for the stage.
--   
--   <a>$sel:apiGatewayManaged:UpdateStageResponse'</a>,
--   <a>updateStageResponse_apiGatewayManaged</a> - Specifies whether a
--   stage is managed by API Gateway. If you created an API using quick
--   create, the $default stage is managed by API Gateway. You can't modify
--   the $default stage.
--   
--   <a>$sel:stageName:UpdateStage'</a>,
--   <a>updateStageResponse_stageName</a> - The name of the stage.
--   
--   <a>$sel:lastUpdatedDate:UpdateStageResponse'</a>,
--   <a>updateStageResponse_lastUpdatedDate</a> - The timestamp when the
--   stage was last updated.
--   
--   <a>$sel:description:UpdateStage'</a>,
--   <a>updateStageResponse_description</a> - The description of the stage.
--   
--   <a>$sel:tags:UpdateStageResponse'</a>, <a>updateStageResponse_tags</a>
--   - The collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:httpStatus:UpdateStageResponse'</a>,
--   <a>updateStageResponse_httpStatus</a> - The response's http status
--   code.
newUpdateStageResponse :: Int -> UpdateStageResponse

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
updateStageResponse_lastDeploymentStatusMessage :: Lens' UpdateStageResponse (Maybe Text)

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
updateStageResponse_deploymentId :: Lens' UpdateStageResponse (Maybe Text)

-- | Route settings for the stage, by routeKey.
updateStageResponse_routeSettings :: Lens' UpdateStageResponse (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
updateStageResponse_accessLogSettings :: Lens' UpdateStageResponse (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
updateStageResponse_clientCertificateId :: Lens' UpdateStageResponse (Maybe Text)

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
updateStageResponse_stageVariables :: Lens' UpdateStageResponse (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
updateStageResponse_autoDeploy :: Lens' UpdateStageResponse (Maybe Bool)

-- | The timestamp when the stage was created.
updateStageResponse_createdDate :: Lens' UpdateStageResponse (Maybe UTCTime)

-- | Default route settings for the stage.
updateStageResponse_defaultRouteSettings :: Lens' UpdateStageResponse (Maybe RouteSettings)

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
updateStageResponse_apiGatewayManaged :: Lens' UpdateStageResponse (Maybe Bool)

-- | The name of the stage.
updateStageResponse_stageName :: Lens' UpdateStageResponse (Maybe Text)

-- | The timestamp when the stage was last updated.
updateStageResponse_lastUpdatedDate :: Lens' UpdateStageResponse (Maybe UTCTime)

-- | The description of the stage.
updateStageResponse_description :: Lens' UpdateStageResponse (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
updateStageResponse_tags :: Lens' UpdateStageResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateStageResponse_httpStatus :: Lens' UpdateStageResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateStage.UpdateStage
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateStage.UpdateStage
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateStage.UpdateStage
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateStage.UpdateStage
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateStage.UpdateStageResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateStage.UpdateStageResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateStage.UpdateStageResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateStage.UpdateStageResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateStage.UpdateStage
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateStage.UpdateStageResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateStage.UpdateStage
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateStage.UpdateStage
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateStage.UpdateStage
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateStage.UpdateStage
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateStage.UpdateStage
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateStage.UpdateStage


-- | Updates a VPC link.
module Network.AWS.ApiGatewayV2.UpdateVpcLink

-- | Updates a VPC link.
--   
--   <i>See:</i> <a>newUpdateVpcLink</a> smart constructor.
data UpdateVpcLink
UpdateVpcLink' :: Maybe Text -> Text -> UpdateVpcLink

-- | The name of the VPC link.
[$sel:name:UpdateVpcLink'] :: UpdateVpcLink -> Maybe Text

-- | The ID of the VPC link.
[$sel:vpcLinkId:UpdateVpcLink'] :: UpdateVpcLink -> Text

-- | Create a value of <a>UpdateVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateVpcLink'</a>, <a>updateVpcLink_name</a> - The name
--   of the VPC link.
--   
--   <a>$sel:vpcLinkId:UpdateVpcLink'</a>, <a>updateVpcLink_vpcLinkId</a> -
--   The ID of the VPC link.
newUpdateVpcLink :: Text -> UpdateVpcLink

-- | The name of the VPC link.
updateVpcLink_name :: Lens' UpdateVpcLink (Maybe Text)

-- | The ID of the VPC link.
updateVpcLink_vpcLinkId :: Lens' UpdateVpcLink Text

-- | <i>See:</i> <a>newUpdateVpcLinkResponse</a> smart constructor.
data UpdateVpcLinkResponse
UpdateVpcLinkResponse' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe VpcLinkVersion -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe VpcLinkStatus -> Int -> UpdateVpcLinkResponse

-- | A list of security group IDs for the VPC link.
[$sel:securityGroupIds:UpdateVpcLinkResponse'] :: UpdateVpcLinkResponse -> Maybe [Text]

-- | A list of subnet IDs to include in the VPC link.
[$sel:subnetIds:UpdateVpcLinkResponse'] :: UpdateVpcLinkResponse -> Maybe [Text]

-- | The ID of the VPC link.
[$sel:vpcLinkId:UpdateVpcLinkResponse'] :: UpdateVpcLinkResponse -> Maybe Text

-- | The timestamp when the VPC link was created.
[$sel:createdDate:UpdateVpcLinkResponse'] :: UpdateVpcLinkResponse -> Maybe POSIX

-- | The version of the VPC link.
[$sel:vpcLinkVersion:UpdateVpcLinkResponse'] :: UpdateVpcLinkResponse -> Maybe VpcLinkVersion

-- | The name of the VPC link.
[$sel:name:UpdateVpcLinkResponse'] :: UpdateVpcLinkResponse -> Maybe Text

-- | A message summarizing the cause of the status of the VPC link.
[$sel:vpcLinkStatusMessage:UpdateVpcLinkResponse'] :: UpdateVpcLinkResponse -> Maybe Text

-- | Tags for the VPC link.
[$sel:tags:UpdateVpcLinkResponse'] :: UpdateVpcLinkResponse -> Maybe (HashMap Text Text)

-- | The status of the VPC link.
[$sel:vpcLinkStatus:UpdateVpcLinkResponse'] :: UpdateVpcLinkResponse -> Maybe VpcLinkStatus

-- | The response's http status code.
[$sel:httpStatus:UpdateVpcLinkResponse'] :: UpdateVpcLinkResponse -> Int

-- | Create a value of <a>UpdateVpcLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_securityGroupIds</a> - A list of security
--   group IDs for the VPC link.
--   
--   <a>$sel:subnetIds:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_subnetIds</a> - A list of subnet IDs to
--   include in the VPC link.
--   
--   <a>$sel:vpcLinkId:UpdateVpcLink'</a>,
--   <a>updateVpcLinkResponse_vpcLinkId</a> - The ID of the VPC link.
--   
--   <a>$sel:createdDate:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_createdDate</a> - The timestamp when the VPC
--   link was created.
--   
--   <a>$sel:vpcLinkVersion:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_vpcLinkVersion</a> - The version of the VPC
--   link.
--   
--   <a>$sel:name:UpdateVpcLink'</a>, <a>updateVpcLinkResponse_name</a> -
--   The name of the VPC link.
--   
--   <a>$sel:vpcLinkStatusMessage:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_vpcLinkStatusMessage</a> - A message
--   summarizing the cause of the status of the VPC link.
--   
--   <a>$sel:tags:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_tags</a> - Tags for the VPC link.
--   
--   <a>$sel:vpcLinkStatus:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_vpcLinkStatus</a> - The status of the VPC
--   link.
--   
--   <a>$sel:httpStatus:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_httpStatus</a> - The response's http status
--   code.
newUpdateVpcLinkResponse :: Int -> UpdateVpcLinkResponse

-- | A list of security group IDs for the VPC link.
updateVpcLinkResponse_securityGroupIds :: Lens' UpdateVpcLinkResponse (Maybe [Text])

-- | A list of subnet IDs to include in the VPC link.
updateVpcLinkResponse_subnetIds :: Lens' UpdateVpcLinkResponse (Maybe [Text])

-- | The ID of the VPC link.
updateVpcLinkResponse_vpcLinkId :: Lens' UpdateVpcLinkResponse (Maybe Text)

-- | The timestamp when the VPC link was created.
updateVpcLinkResponse_createdDate :: Lens' UpdateVpcLinkResponse (Maybe UTCTime)

-- | The version of the VPC link.
updateVpcLinkResponse_vpcLinkVersion :: Lens' UpdateVpcLinkResponse (Maybe VpcLinkVersion)

-- | The name of the VPC link.
updateVpcLinkResponse_name :: Lens' UpdateVpcLinkResponse (Maybe Text)

-- | A message summarizing the cause of the status of the VPC link.
updateVpcLinkResponse_vpcLinkStatusMessage :: Lens' UpdateVpcLinkResponse (Maybe Text)

-- | Tags for the VPC link.
updateVpcLinkResponse_tags :: Lens' UpdateVpcLinkResponse (Maybe (HashMap Text Text))

-- | The status of the VPC link.
updateVpcLinkResponse_vpcLinkStatus :: Lens' UpdateVpcLinkResponse (Maybe VpcLinkStatus)

-- | The response's http status code.
updateVpcLinkResponse_httpStatus :: Lens' UpdateVpcLinkResponse Int
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLink
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLink
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLink
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLink
instance GHC.Generics.Generic Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLinkResponse
instance GHC.Show.Show Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLinkResponse
instance GHC.Read.Read Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLinkResponse
instance GHC.Classes.Eq Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLinkResponse
instance Network.AWS.Types.AWSRequest Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLink
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLinkResponse
instance Data.Hashable.Class.Hashable Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLink
instance Control.DeepSeq.NFData Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLink
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLink
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLink
instance Network.AWS.Data.Path.ToPath Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLink
instance Network.AWS.Data.Query.ToQuery Network.AWS.ApiGatewayV2.UpdateVpcLink.UpdateVpcLink


module Network.AWS.ApiGatewayV2.Lens

-- | This property is part of quick create. It specifies the credentials
--   required for the integration, if any. For a Lambda integration, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, specify null. Currently, this property is not used for
--   HTTP integrations. Supported only for HTTP APIs.
createApi_credentialsArn :: Lens' CreateApi (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
createApi_disableExecuteApiEndpoint :: Lens' CreateApi (Maybe Bool)

-- | A version identifier for the API.
createApi_version :: Lens' CreateApi (Maybe Text)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
createApi_apiKeySelectionExpression :: Lens' CreateApi (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs. See <a>Configuring
--   CORS</a> for more information.
createApi_corsConfiguration :: Lens' CreateApi (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
createApi_routeSelectionExpression :: Lens' CreateApi (Maybe Text)

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
createApi_disableSchemaValidation :: Lens' CreateApi (Maybe Bool)

-- | The description of the API.
createApi_description :: Lens' CreateApi (Maybe Text)

-- | This property is part of quick create. If you don't specify a
--   routeKey, a default route of $default is created. The $default route
--   acts as a catch-all for any request made to your API, for a particular
--   stage. The $default route key can't be modified. You can add routes
--   after creating the API, and you can update the route keys of
--   additional routes. Supported only for HTTP APIs.
createApi_routeKey :: Lens' CreateApi (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
createApi_tags :: Lens' CreateApi (Maybe (HashMap Text Text))

-- | This property is part of quick create. Quick create produces an API
--   with an integration, a default catch-all route, and a default stage
--   which is configured to automatically deploy changes. For HTTP
--   integrations, specify a fully qualified URL. For Lambda integrations,
--   specify a function ARN. The type of the integration will be HTTP_PROXY
--   or AWS_PROXY, respectively. Supported only for HTTP APIs.
createApi_target :: Lens' CreateApi (Maybe Text)

-- | The API protocol.
createApi_protocolType :: Lens' CreateApi ProtocolType

-- | The name of the API.
createApi_name :: Lens' CreateApi Text

-- | The API ID.
createApiResponse_apiId :: Lens' CreateApiResponse (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
createApiResponse_disableExecuteApiEndpoint :: Lens' CreateApiResponse (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
createApiResponse_apiEndpoint :: Lens' CreateApiResponse (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
createApiResponse_warnings :: Lens' CreateApiResponse (Maybe [Text])

-- | The timestamp when the API was created.
createApiResponse_createdDate :: Lens' CreateApiResponse (Maybe UTCTime)

-- | The name of the API.
createApiResponse_name :: Lens' CreateApiResponse (Maybe Text)

-- | A version identifier for the API.
createApiResponse_version :: Lens' CreateApiResponse (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
createApiResponse_apiGatewayManaged :: Lens' CreateApiResponse (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
createApiResponse_apiKeySelectionExpression :: Lens' CreateApiResponse (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
createApiResponse_corsConfiguration :: Lens' CreateApiResponse (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
createApiResponse_routeSelectionExpression :: Lens' CreateApiResponse (Maybe Text)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
createApiResponse_importInfo :: Lens' CreateApiResponse (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
createApiResponse_disableSchemaValidation :: Lens' CreateApiResponse (Maybe Bool)

-- | The description of the API.
createApiResponse_description :: Lens' CreateApiResponse (Maybe Text)

-- | The API protocol.
createApiResponse_protocolType :: Lens' CreateApiResponse (Maybe ProtocolType)

-- | A collection of tags associated with the API.
createApiResponse_tags :: Lens' CreateApiResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createApiResponse_httpStatus :: Lens' CreateApiResponse Int

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getDeployments_nextToken :: Lens' GetDeployments (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getDeployments_maxResults :: Lens' GetDeployments (Maybe Text)

-- | The API identifier.
getDeployments_apiId :: Lens' GetDeployments Text

-- | The elements from this collection.
getDeploymentsResponse_items :: Lens' GetDeploymentsResponse (Maybe [Deployment])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getDeploymentsResponse_nextToken :: Lens' GetDeploymentsResponse (Maybe Text)

-- | The response's http status code.
getDeploymentsResponse_httpStatus :: Lens' GetDeploymentsResponse Int

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
deleteAccessLogSettings_stageName :: Lens' DeleteAccessLogSettings Text

-- | The API identifier.
deleteAccessLogSettings_apiId :: Lens' DeleteAccessLogSettings Text

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getRouteResponses_nextToken :: Lens' GetRouteResponses (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getRouteResponses_maxResults :: Lens' GetRouteResponses (Maybe Text)

-- | The route ID.
getRouteResponses_routeId :: Lens' GetRouteResponses Text

-- | The API identifier.
getRouteResponses_apiId :: Lens' GetRouteResponses Text

-- | The elements from this collection.
getRouteResponsesResponse_items :: Lens' GetRouteResponsesResponse (Maybe [RouteResponse])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getRouteResponsesResponse_nextToken :: Lens' GetRouteResponsesResponse (Maybe Text)

-- | The response's http status code.
getRouteResponsesResponse_httpStatus :: Lens' GetRouteResponsesResponse Int

-- | The API identifier.
getDeployment_apiId :: Lens' GetDeployment Text

-- | The deployment ID.
getDeployment_deploymentId :: Lens' GetDeployment Text

-- | The identifier for the deployment.
getDeploymentResponse_deploymentId :: Lens' GetDeploymentResponse (Maybe Text)

-- | Specifies whether a deployment was automatically released.
getDeploymentResponse_autoDeployed :: Lens' GetDeploymentResponse (Maybe Bool)

-- | May contain additional feedback on the status of an API deployment.
getDeploymentResponse_deploymentStatusMessage :: Lens' GetDeploymentResponse (Maybe Text)

-- | The date and time when the Deployment resource was created.
getDeploymentResponse_createdDate :: Lens' GetDeploymentResponse (Maybe UTCTime)

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
getDeploymentResponse_deploymentStatus :: Lens' GetDeploymentResponse (Maybe DeploymentStatus)

-- | The description for the deployment.
getDeploymentResponse_description :: Lens' GetDeploymentResponse (Maybe Text)

-- | The response's http status code.
getDeploymentResponse_httpStatus :: Lens' GetDeploymentResponse Int

-- | The resource ARN for the tag.
getTags_resourceArn :: Lens' GetTags Text

-- | Undocumented member.
getTagsResponse_tags :: Lens' GetTagsResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getTagsResponse_httpStatus :: Lens' GetTagsResponse Int

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getDomainNames_nextToken :: Lens' GetDomainNames (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getDomainNames_maxResults :: Lens' GetDomainNames (Maybe Text)

-- | The elements from this collection.
getDomainNamesResponse_items :: Lens' GetDomainNamesResponse (Maybe [DomainName])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getDomainNamesResponse_nextToken :: Lens' GetDomainNamesResponse (Maybe Text)

-- | The response's http status code.
getDomainNamesResponse_httpStatus :: Lens' GetDomainNamesResponse Int

-- | Specifies how to interpret the base path of the API during import.
--   Valid values are ignore, prepend, and split. The default value is
--   ignore. To learn more, see <a>Set the OpenAPI basePath Property</a>.
--   Supported only for HTTP APIs.
reimportApi_basepath :: Lens' ReimportApi (Maybe Text)

-- | Specifies whether to rollback the API creation when a warning is
--   encountered. By default, API creation continues if a warning is
--   encountered.
reimportApi_failOnWarnings :: Lens' ReimportApi (Maybe Bool)

-- | The API identifier.
reimportApi_apiId :: Lens' ReimportApi Text

-- | The OpenAPI definition. Supported only for HTTP APIs.
reimportApi_body :: Lens' ReimportApi Text

-- | The API ID.
reimportApiResponse_apiId :: Lens' ReimportApiResponse (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
reimportApiResponse_disableExecuteApiEndpoint :: Lens' ReimportApiResponse (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
reimportApiResponse_apiEndpoint :: Lens' ReimportApiResponse (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
reimportApiResponse_warnings :: Lens' ReimportApiResponse (Maybe [Text])

-- | The timestamp when the API was created.
reimportApiResponse_createdDate :: Lens' ReimportApiResponse (Maybe UTCTime)

-- | The name of the API.
reimportApiResponse_name :: Lens' ReimportApiResponse (Maybe Text)

-- | A version identifier for the API.
reimportApiResponse_version :: Lens' ReimportApiResponse (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
reimportApiResponse_apiGatewayManaged :: Lens' ReimportApiResponse (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
reimportApiResponse_apiKeySelectionExpression :: Lens' ReimportApiResponse (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
reimportApiResponse_corsConfiguration :: Lens' ReimportApiResponse (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
reimportApiResponse_routeSelectionExpression :: Lens' ReimportApiResponse (Maybe Text)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
reimportApiResponse_importInfo :: Lens' ReimportApiResponse (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
reimportApiResponse_disableSchemaValidation :: Lens' ReimportApiResponse (Maybe Bool)

-- | The description of the API.
reimportApiResponse_description :: Lens' ReimportApiResponse (Maybe Text)

-- | The API protocol.
reimportApiResponse_protocolType :: Lens' ReimportApiResponse (Maybe ProtocolType)

-- | A collection of tags associated with the API.
reimportApiResponse_tags :: Lens' ReimportApiResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
reimportApiResponse_httpStatus :: Lens' ReimportApiResponse Int

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getModels_nextToken :: Lens' GetModels (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getModels_maxResults :: Lens' GetModels (Maybe Text)

-- | The API identifier.
getModels_apiId :: Lens' GetModels Text

-- | The elements from this collection.
getModelsResponse_items :: Lens' GetModelsResponse (Maybe [Model])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getModelsResponse_nextToken :: Lens' GetModelsResponse (Maybe Text)

-- | The response's http status code.
getModelsResponse_httpStatus :: Lens' GetModelsResponse Int

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
createIntegration_requestTemplates :: Lens' CreateIntegration (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
createIntegration_integrationSubtype :: Lens' CreateIntegration (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
createIntegration_credentialsArn :: Lens' CreateIntegration (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
createIntegration_integrationUri :: Lens' CreateIntegration (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API integrations without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to the backend. The key should
--   follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
createIntegration_requestParameters :: Lens' CreateIntegration (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
createIntegration_connectionId :: Lens' CreateIntegration (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
createIntegration_passthroughBehavior :: Lens' CreateIntegration (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
createIntegration_integrationMethod :: Lens' CreateIntegration (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
createIntegration_tlsConfig :: Lens' CreateIntegration (Maybe TlsConfigInput)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
createIntegration_payloadFormatVersion :: Lens' CreateIntegration (Maybe Text)

-- | The template selection expression for the integration.
createIntegration_templateSelectionExpression :: Lens' CreateIntegration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
createIntegration_timeoutInMillis :: Lens' CreateIntegration (Maybe Natural)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
createIntegration_contentHandlingStrategy :: Lens' CreateIntegration (Maybe ContentHandlingStrategy)

-- | The description of the integration.
createIntegration_description :: Lens' CreateIntegration (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
createIntegration_connectionType :: Lens' CreateIntegration (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
createIntegration_responseParameters :: Lens' CreateIntegration (Maybe (HashMap Text (HashMap Text Text)))

-- | The API identifier.
createIntegration_apiId :: Lens' CreateIntegration Text

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration. For HTTP API private
--   integrations, use an HTTP_PROXY integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
createIntegration_integrationType :: Lens' CreateIntegration IntegrationType

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
createIntegrationResponse'_integrationResponseSelectionExpression :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
createIntegrationResponse'_requestTemplates :: Lens' CreateIntegrationResponse' (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
createIntegrationResponse'_integrationSubtype :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
createIntegrationResponse'_credentialsArn :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
createIntegrationResponse'_integrationUri :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | Represents the identifier of an integration.
createIntegrationResponse'_integrationId :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
createIntegrationResponse'_requestParameters :: Lens' CreateIntegrationResponse' (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
createIntegrationResponse'_connectionId :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
createIntegrationResponse'_passthroughBehavior :: Lens' CreateIntegrationResponse' (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
createIntegrationResponse'_integrationMethod :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
createIntegrationResponse'_tlsConfig :: Lens' CreateIntegrationResponse' (Maybe TlsConfig)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
createIntegrationResponse'_payloadFormatVersion :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
createIntegrationResponse'_templateSelectionExpression :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
createIntegrationResponse'_timeoutInMillis :: Lens' CreateIntegrationResponse' (Maybe Natural)

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
createIntegrationResponse'_apiGatewayManaged :: Lens' CreateIntegrationResponse' (Maybe Bool)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
createIntegrationResponse'_contentHandlingStrategy :: Lens' CreateIntegrationResponse' (Maybe ContentHandlingStrategy)

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
createIntegrationResponse'_integrationType :: Lens' CreateIntegrationResponse' (Maybe IntegrationType)

-- | Represents the description of an integration.
createIntegrationResponse'_description :: Lens' CreateIntegrationResponse' (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
createIntegrationResponse'_connectionType :: Lens' CreateIntegrationResponse' (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
createIntegrationResponse'_responseParameters :: Lens' CreateIntegrationResponse' (Maybe (HashMap Text (HashMap Text Text)))

-- | The response's http status code.
createIntegrationResponse'_httpStatus :: Lens' CreateIntegrationResponse' Int

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
deleteStage_stageName :: Lens' DeleteStage Text

-- | The API identifier.
deleteStage_apiId :: Lens' DeleteStage Text

-- | The deployment identifier for the API stage. Can't be updated if
--   autoDeploy is enabled.
updateStage_deploymentId :: Lens' UpdateStage (Maybe Text)

-- | Route settings for the stage.
updateStage_routeSettings :: Lens' UpdateStage (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
updateStage_accessLogSettings :: Lens' UpdateStage (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage.
updateStage_clientCertificateId :: Lens' UpdateStage (Maybe Text)

-- | A map that defines the stage variables for a Stage. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
updateStage_stageVariables :: Lens' UpdateStage (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
updateStage_autoDeploy :: Lens' UpdateStage (Maybe Bool)

-- | The default route settings for the stage.
updateStage_defaultRouteSettings :: Lens' UpdateStage (Maybe RouteSettings)

-- | The description for the API stage.
updateStage_description :: Lens' UpdateStage (Maybe Text)

-- | The stage name. Stage names can contain only alphanumeric characters,
--   hyphens, and underscores, or be $default. Maximum length is 128
--   characters.
updateStage_stageName :: Lens' UpdateStage Text

-- | The API identifier.
updateStage_apiId :: Lens' UpdateStage Text

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
updateStageResponse_lastDeploymentStatusMessage :: Lens' UpdateStageResponse (Maybe Text)

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
updateStageResponse_deploymentId :: Lens' UpdateStageResponse (Maybe Text)

-- | Route settings for the stage, by routeKey.
updateStageResponse_routeSettings :: Lens' UpdateStageResponse (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
updateStageResponse_accessLogSettings :: Lens' UpdateStageResponse (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
updateStageResponse_clientCertificateId :: Lens' UpdateStageResponse (Maybe Text)

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
updateStageResponse_stageVariables :: Lens' UpdateStageResponse (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
updateStageResponse_autoDeploy :: Lens' UpdateStageResponse (Maybe Bool)

-- | The timestamp when the stage was created.
updateStageResponse_createdDate :: Lens' UpdateStageResponse (Maybe UTCTime)

-- | Default route settings for the stage.
updateStageResponse_defaultRouteSettings :: Lens' UpdateStageResponse (Maybe RouteSettings)

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
updateStageResponse_apiGatewayManaged :: Lens' UpdateStageResponse (Maybe Bool)

-- | The name of the stage.
updateStageResponse_stageName :: Lens' UpdateStageResponse (Maybe Text)

-- | The timestamp when the stage was last updated.
updateStageResponse_lastUpdatedDate :: Lens' UpdateStageResponse (Maybe UTCTime)

-- | The description of the stage.
updateStageResponse_description :: Lens' UpdateStageResponse (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
updateStageResponse_tags :: Lens' UpdateStageResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateStageResponse_httpStatus :: Lens' UpdateStageResponse Int

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
deleteRouteSettings_stageName :: Lens' DeleteRouteSettings Text

-- | The route key.
deleteRouteSettings_routeKey :: Lens' DeleteRouteSettings Text

-- | The API identifier.
deleteRouteSettings_apiId :: Lens' DeleteRouteSettings Text

-- | The name of the Stage resource for the Deployment resource to create.
createDeployment_stageName :: Lens' CreateDeployment (Maybe Text)

-- | The description for the deployment resource.
createDeployment_description :: Lens' CreateDeployment (Maybe Text)

-- | The API identifier.
createDeployment_apiId :: Lens' CreateDeployment Text

-- | The identifier for the deployment.
createDeploymentResponse_deploymentId :: Lens' CreateDeploymentResponse (Maybe Text)

-- | Specifies whether a deployment was automatically released.
createDeploymentResponse_autoDeployed :: Lens' CreateDeploymentResponse (Maybe Bool)

-- | May contain additional feedback on the status of an API deployment.
createDeploymentResponse_deploymentStatusMessage :: Lens' CreateDeploymentResponse (Maybe Text)

-- | The date and time when the Deployment resource was created.
createDeploymentResponse_createdDate :: Lens' CreateDeploymentResponse (Maybe UTCTime)

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
createDeploymentResponse_deploymentStatus :: Lens' CreateDeploymentResponse (Maybe DeploymentStatus)

-- | The description for the deployment.
createDeploymentResponse_description :: Lens' CreateDeploymentResponse (Maybe Text)

-- | The response's http status code.
createDeploymentResponse_httpStatus :: Lens' CreateDeploymentResponse Int

-- | The API identifier.
deleteRoute_apiId :: Lens' DeleteRoute Text

-- | The route ID.
deleteRoute_routeId :: Lens' DeleteRoute Text

-- | The authorization scopes supported by this route.
updateRoute_authorizationScopes :: Lens' UpdateRoute (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
updateRoute_modelSelectionExpression :: Lens' UpdateRoute (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
updateRoute_requestModels :: Lens' UpdateRoute (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
updateRoute_routeResponseSelectionExpression :: Lens' UpdateRoute (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
updateRoute_requestParameters :: Lens' UpdateRoute (Maybe (HashMap Text ParameterConstraints))

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
updateRoute_authorizerId :: Lens' UpdateRoute (Maybe Text)

-- | The operation name for the route.
updateRoute_operationName :: Lens' UpdateRoute (Maybe Text)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
updateRoute_authorizationType :: Lens' UpdateRoute (Maybe AuthorizationType)

-- | Specifies whether an API key is required for the route. Supported only
--   for WebSocket APIs.
updateRoute_apiKeyRequired :: Lens' UpdateRoute (Maybe Bool)

-- | The route key for the route.
updateRoute_routeKey :: Lens' UpdateRoute (Maybe Text)

-- | The target for the route.
updateRoute_target :: Lens' UpdateRoute (Maybe Text)

-- | The API identifier.
updateRoute_apiId :: Lens' UpdateRoute Text

-- | The route ID.
updateRoute_routeId :: Lens' UpdateRoute Text

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
updateRouteResponse'_authorizationScopes :: Lens' UpdateRouteResponse' (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
updateRouteResponse'_modelSelectionExpression :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
updateRouteResponse'_requestModels :: Lens' UpdateRouteResponse' (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
updateRouteResponse'_routeResponseSelectionExpression :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
updateRouteResponse'_requestParameters :: Lens' UpdateRouteResponse' (Maybe (HashMap Text ParameterConstraints))

-- | The route ID.
updateRouteResponse'_routeId :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
updateRouteResponse'_authorizerId :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The operation name for the route.
updateRouteResponse'_operationName :: Lens' UpdateRouteResponse' (Maybe Text)

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
updateRouteResponse'_apiGatewayManaged :: Lens' UpdateRouteResponse' (Maybe Bool)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
updateRouteResponse'_authorizationType :: Lens' UpdateRouteResponse' (Maybe AuthorizationType)

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
updateRouteResponse'_apiKeyRequired :: Lens' UpdateRouteResponse' (Maybe Bool)

-- | The route key for the route.
updateRouteResponse'_routeKey :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The target for the route.
updateRouteResponse'_target :: Lens' UpdateRouteResponse' (Maybe Text)

-- | The response's http status code.
updateRouteResponse'_httpStatus :: Lens' UpdateRouteResponse' Int

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getVpcLinks_nextToken :: Lens' GetVpcLinks (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getVpcLinks_maxResults :: Lens' GetVpcLinks (Maybe Text)

-- | A collection of VPC links.
getVpcLinksResponse_items :: Lens' GetVpcLinksResponse (Maybe [VpcLink])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getVpcLinksResponse_nextToken :: Lens' GetVpcLinksResponse (Maybe Text)

-- | The response's http status code.
getVpcLinksResponse_httpStatus :: Lens' GetVpcLinksResponse Int

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getIntegrationResponses_nextToken :: Lens' GetIntegrationResponses (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getIntegrationResponses_maxResults :: Lens' GetIntegrationResponses (Maybe Text)

-- | The integration ID.
getIntegrationResponses_integrationId :: Lens' GetIntegrationResponses Text

-- | The API identifier.
getIntegrationResponses_apiId :: Lens' GetIntegrationResponses Text

-- | The elements from this collection.
getIntegrationResponsesResponse_items :: Lens' GetIntegrationResponsesResponse (Maybe [IntegrationResponse])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getIntegrationResponsesResponse_nextToken :: Lens' GetIntegrationResponsesResponse (Maybe Text)

-- | The response's http status code.
getIntegrationResponsesResponse_httpStatus :: Lens' GetIntegrationResponsesResponse Int

-- | The API identifier.
getIntegration_apiId :: Lens' GetIntegration Text

-- | The integration ID.
getIntegration_integrationId :: Lens' GetIntegration Text

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
getIntegrationResponse'_integrationResponseSelectionExpression :: Lens' GetIntegrationResponse' (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
getIntegrationResponse'_requestTemplates :: Lens' GetIntegrationResponse' (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
getIntegrationResponse'_integrationSubtype :: Lens' GetIntegrationResponse' (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
getIntegrationResponse'_credentialsArn :: Lens' GetIntegrationResponse' (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
getIntegrationResponse'_integrationUri :: Lens' GetIntegrationResponse' (Maybe Text)

-- | Represents the identifier of an integration.
getIntegrationResponse'_integrationId :: Lens' GetIntegrationResponse' (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
getIntegrationResponse'_requestParameters :: Lens' GetIntegrationResponse' (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
getIntegrationResponse'_connectionId :: Lens' GetIntegrationResponse' (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
getIntegrationResponse'_passthroughBehavior :: Lens' GetIntegrationResponse' (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
getIntegrationResponse'_integrationMethod :: Lens' GetIntegrationResponse' (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
getIntegrationResponse'_tlsConfig :: Lens' GetIntegrationResponse' (Maybe TlsConfig)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
getIntegrationResponse'_payloadFormatVersion :: Lens' GetIntegrationResponse' (Maybe Text)

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
getIntegrationResponse'_templateSelectionExpression :: Lens' GetIntegrationResponse' (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
getIntegrationResponse'_timeoutInMillis :: Lens' GetIntegrationResponse' (Maybe Natural)

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
getIntegrationResponse'_apiGatewayManaged :: Lens' GetIntegrationResponse' (Maybe Bool)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
getIntegrationResponse'_contentHandlingStrategy :: Lens' GetIntegrationResponse' (Maybe ContentHandlingStrategy)

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
getIntegrationResponse'_integrationType :: Lens' GetIntegrationResponse' (Maybe IntegrationType)

-- | Represents the description of an integration.
getIntegrationResponse'_description :: Lens' GetIntegrationResponse' (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
getIntegrationResponse'_connectionType :: Lens' GetIntegrationResponse' (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
getIntegrationResponse'_responseParameters :: Lens' GetIntegrationResponse' (Maybe (HashMap Text (HashMap Text Text)))

-- | The response's http status code.
getIntegrationResponse'_httpStatus :: Lens' GetIntegrationResponse' Int

-- | The API identifier.
deleteDeployment_apiId :: Lens' DeleteDeployment Text

-- | The deployment ID.
deleteDeployment_deploymentId :: Lens' DeleteDeployment Text

-- | The description for the deployment resource.
updateDeployment_description :: Lens' UpdateDeployment (Maybe Text)

-- | The API identifier.
updateDeployment_apiId :: Lens' UpdateDeployment Text

-- | The deployment ID.
updateDeployment_deploymentId :: Lens' UpdateDeployment Text

-- | The identifier for the deployment.
updateDeploymentResponse_deploymentId :: Lens' UpdateDeploymentResponse (Maybe Text)

-- | Specifies whether a deployment was automatically released.
updateDeploymentResponse_autoDeployed :: Lens' UpdateDeploymentResponse (Maybe Bool)

-- | May contain additional feedback on the status of an API deployment.
updateDeploymentResponse_deploymentStatusMessage :: Lens' UpdateDeploymentResponse (Maybe Text)

-- | The date and time when the Deployment resource was created.
updateDeploymentResponse_createdDate :: Lens' UpdateDeploymentResponse (Maybe UTCTime)

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
updateDeploymentResponse_deploymentStatus :: Lens' UpdateDeploymentResponse (Maybe DeploymentStatus)

-- | The description for the deployment.
updateDeploymentResponse_description :: Lens' UpdateDeploymentResponse (Maybe Text)

-- | The response's http status code.
updateDeploymentResponse_httpStatus :: Lens' UpdateDeploymentResponse Int

-- | The route response ID.
deleteRouteResponse_routeResponseId :: Lens' DeleteRouteResponse Text

-- | The API identifier.
deleteRouteResponse_apiId :: Lens' DeleteRouteResponse Text

-- | The route ID.
deleteRouteResponse_routeId :: Lens' DeleteRouteResponse Text

-- | The model selection expression for the route response. Supported only
--   for WebSocket APIs.
updateRouteResponse_modelSelectionExpression :: Lens' UpdateRouteResponse (Maybe Text)

-- | The response models for the route response.
updateRouteResponse_responseModels :: Lens' UpdateRouteResponse (Maybe (HashMap Text Text))

-- | The route response key.
updateRouteResponse_routeResponseKey :: Lens' UpdateRouteResponse (Maybe Text)

-- | The route response parameters.
updateRouteResponse_responseParameters :: Lens' UpdateRouteResponse (Maybe (HashMap Text ParameterConstraints))

-- | The route response ID.
updateRouteResponse_routeResponseId :: Lens' UpdateRouteResponse Text

-- | The API identifier.
updateRouteResponse_apiId :: Lens' UpdateRouteResponse Text

-- | The route ID.
updateRouteResponse_routeId :: Lens' UpdateRouteResponse Text

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
updateRouteResponseResponse_modelSelectionExpression :: Lens' UpdateRouteResponseResponse (Maybe Text)

-- | Represents the response models of a route response.
updateRouteResponseResponse_responseModels :: Lens' UpdateRouteResponseResponse (Maybe (HashMap Text Text))

-- | Represents the identifier of a route response.
updateRouteResponseResponse_routeResponseId :: Lens' UpdateRouteResponseResponse (Maybe Text)

-- | Represents the route response key of a route response.
updateRouteResponseResponse_routeResponseKey :: Lens' UpdateRouteResponseResponse (Maybe Text)

-- | Represents the response parameters of a route response.
updateRouteResponseResponse_responseParameters :: Lens' UpdateRouteResponseResponse (Maybe (HashMap Text ParameterConstraints))

-- | The response's http status code.
updateRouteResponseResponse_httpStatus :: Lens' UpdateRouteResponseResponse Int

-- | The ID of the VPC link.
getVpcLink_vpcLinkId :: Lens' GetVpcLink Text

-- | A list of security group IDs for the VPC link.
getVpcLinkResponse_securityGroupIds :: Lens' GetVpcLinkResponse (Maybe [Text])

-- | A list of subnet IDs to include in the VPC link.
getVpcLinkResponse_subnetIds :: Lens' GetVpcLinkResponse (Maybe [Text])

-- | The ID of the VPC link.
getVpcLinkResponse_vpcLinkId :: Lens' GetVpcLinkResponse (Maybe Text)

-- | The timestamp when the VPC link was created.
getVpcLinkResponse_createdDate :: Lens' GetVpcLinkResponse (Maybe UTCTime)

-- | The version of the VPC link.
getVpcLinkResponse_vpcLinkVersion :: Lens' GetVpcLinkResponse (Maybe VpcLinkVersion)

-- | The name of the VPC link.
getVpcLinkResponse_name :: Lens' GetVpcLinkResponse (Maybe Text)

-- | A message summarizing the cause of the status of the VPC link.
getVpcLinkResponse_vpcLinkStatusMessage :: Lens' GetVpcLinkResponse (Maybe Text)

-- | Tags for the VPC link.
getVpcLinkResponse_tags :: Lens' GetVpcLinkResponse (Maybe (HashMap Text Text))

-- | The status of the VPC link.
getVpcLinkResponse_vpcLinkStatus :: Lens' GetVpcLinkResponse (Maybe VpcLinkStatus)

-- | The response's http status code.
getVpcLinkResponse_httpStatus :: Lens' GetVpcLinkResponse Int

-- | The stage name. Stage names can contain only alphanumeric characters,
--   hyphens, and underscores, or be $default. Maximum length is 128
--   characters.
resetAuthorizersCache_stageName :: Lens' ResetAuthorizersCache Text

-- | The API identifier.
resetAuthorizersCache_apiId :: Lens' ResetAuthorizersCache Text

-- | The description of the model.
createModel_description :: Lens' CreateModel (Maybe Text)

-- | The content-type for the model, for example, "application/json".
createModel_contentType :: Lens' CreateModel (Maybe Text)

-- | The API identifier.
createModel_apiId :: Lens' CreateModel Text

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
createModel_schema :: Lens' CreateModel Text

-- | The name of the model. Must be alphanumeric.
createModel_name :: Lens' CreateModel Text

-- | The model identifier.
createModelResponse_modelId :: Lens' CreateModelResponse (Maybe Text)

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
createModelResponse_schema :: Lens' CreateModelResponse (Maybe Text)

-- | The name of the model. Must be alphanumeric.
createModelResponse_name :: Lens' CreateModelResponse (Maybe Text)

-- | The description of the model.
createModelResponse_description :: Lens' CreateModelResponse (Maybe Text)

-- | The content-type for the model, for example, "application/json".
createModelResponse_contentType :: Lens' CreateModelResponse (Maybe Text)

-- | The response's http status code.
createModelResponse_httpStatus :: Lens' CreateModelResponse Int

-- | The API identifier.
getIntegrationResponse_apiId :: Lens' GetIntegrationResponse Text

-- | The integration response ID.
getIntegrationResponse_integrationResponseId :: Lens' GetIntegrationResponse Text

-- | The integration ID.
getIntegrationResponse_integrationId :: Lens' GetIntegrationResponse Text

-- | The integration response ID.
getIntegrationResponseResponse_integrationResponseId :: Lens' GetIntegrationResponseResponse (Maybe Text)

-- | The integration response key.
getIntegrationResponseResponse_integrationResponseKey :: Lens' GetIntegrationResponseResponse (Maybe Text)

-- | The template selection expressions for the integration response.
getIntegrationResponseResponse_templateSelectionExpression :: Lens' GetIntegrationResponseResponse (Maybe Text)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
getIntegrationResponseResponse_contentHandlingStrategy :: Lens' GetIntegrationResponseResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
getIntegrationResponseResponse_responseTemplates :: Lens' GetIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
getIntegrationResponseResponse_responseParameters :: Lens' GetIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getIntegrationResponseResponse_httpStatus :: Lens' GetIntegrationResponseResponse Int

-- | The domain name configurations.
createDomainName_domainNameConfigurations :: Lens' CreateDomainName (Maybe [DomainNameConfiguration])

-- | The mutual TLS authentication configuration for a custom domain name.
createDomainName_mutualTlsAuthentication :: Lens' CreateDomainName (Maybe MutualTlsAuthenticationInput)

-- | The collection of tags associated with a domain name.
createDomainName_tags :: Lens' CreateDomainName (Maybe (HashMap Text Text))

-- | The domain name.
createDomainName_domainName :: Lens' CreateDomainName Text

-- | The domain name configurations.
createDomainNameResponse_domainNameConfigurations :: Lens' CreateDomainNameResponse (Maybe [DomainNameConfiguration])

-- | The name of the DomainName resource.
createDomainNameResponse_domainName :: Lens' CreateDomainNameResponse (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
createDomainNameResponse_mutualTlsAuthentication :: Lens' CreateDomainNameResponse (Maybe MutualTlsAuthentication)

-- | The API mapping selection expression.
createDomainNameResponse_apiMappingSelectionExpression :: Lens' CreateDomainNameResponse (Maybe Text)

-- | The collection of tags associated with a domain name.
createDomainNameResponse_tags :: Lens' CreateDomainNameResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createDomainNameResponse_httpStatus :: Lens' CreateDomainNameResponse Int

-- | The model ID.
deleteModel_modelId :: Lens' DeleteModel Text

-- | The API identifier.
deleteModel_apiId :: Lens' DeleteModel Text

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
updateModel_schema :: Lens' UpdateModel (Maybe Text)

-- | The name of the model.
updateModel_name :: Lens' UpdateModel (Maybe Text)

-- | The description of the model.
updateModel_description :: Lens' UpdateModel (Maybe Text)

-- | The content-type for the model, for example, "application/json".
updateModel_contentType :: Lens' UpdateModel (Maybe Text)

-- | The model ID.
updateModel_modelId :: Lens' UpdateModel Text

-- | The API identifier.
updateModel_apiId :: Lens' UpdateModel Text

-- | The model identifier.
updateModelResponse_modelId :: Lens' UpdateModelResponse (Maybe Text)

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
updateModelResponse_schema :: Lens' UpdateModelResponse (Maybe Text)

-- | The name of the model. Must be alphanumeric.
updateModelResponse_name :: Lens' UpdateModelResponse (Maybe Text)

-- | The description of the model.
updateModelResponse_description :: Lens' UpdateModelResponse (Maybe Text)

-- | The content-type for the model, for example, "application/json".
updateModelResponse_contentType :: Lens' UpdateModelResponse (Maybe Text)

-- | The response's http status code.
updateModelResponse_httpStatus :: Lens' UpdateModelResponse Int

-- | The model selection expression for the route response. Supported only
--   for WebSocket APIs.
createRouteResponse_modelSelectionExpression :: Lens' CreateRouteResponse (Maybe Text)

-- | The response models for the route response.
createRouteResponse_responseModels :: Lens' CreateRouteResponse (Maybe (HashMap Text Text))

-- | The route response parameters.
createRouteResponse_responseParameters :: Lens' CreateRouteResponse (Maybe (HashMap Text ParameterConstraints))

-- | The API identifier.
createRouteResponse_apiId :: Lens' CreateRouteResponse Text

-- | The route ID.
createRouteResponse_routeId :: Lens' CreateRouteResponse Text

-- | The route response key.
createRouteResponse_routeResponseKey :: Lens' CreateRouteResponse Text

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
createRouteResponseResponse_modelSelectionExpression :: Lens' CreateRouteResponseResponse (Maybe Text)

-- | Represents the response models of a route response.
createRouteResponseResponse_responseModels :: Lens' CreateRouteResponseResponse (Maybe (HashMap Text Text))

-- | Represents the identifier of a route response.
createRouteResponseResponse_routeResponseId :: Lens' CreateRouteResponseResponse (Maybe Text)

-- | Represents the route response key of a route response.
createRouteResponseResponse_routeResponseKey :: Lens' CreateRouteResponseResponse (Maybe Text)

-- | Represents the response parameters of a route response.
createRouteResponseResponse_responseParameters :: Lens' CreateRouteResponseResponse (Maybe (HashMap Text ParameterConstraints))

-- | The response's http status code.
createRouteResponseResponse_httpStatus :: Lens' CreateRouteResponseResponse Int

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getStages_nextToken :: Lens' GetStages (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getStages_maxResults :: Lens' GetStages (Maybe Text)

-- | The API identifier.
getStages_apiId :: Lens' GetStages Text

-- | The elements from this collection.
getStagesResponse_items :: Lens' GetStagesResponse (Maybe [Stage])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getStagesResponse_nextToken :: Lens' GetStagesResponse (Maybe Text)

-- | The response's http status code.
getStagesResponse_httpStatus :: Lens' GetStagesResponse Int

-- | The model ID.
getModel_modelId :: Lens' GetModel Text

-- | The API identifier.
getModel_apiId :: Lens' GetModel Text

-- | The model identifier.
getModelResponse_modelId :: Lens' GetModelResponse (Maybe Text)

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
getModelResponse_schema :: Lens' GetModelResponse (Maybe Text)

-- | The name of the model. Must be alphanumeric.
getModelResponse_name :: Lens' GetModelResponse (Maybe Text)

-- | The description of the model.
getModelResponse_description :: Lens' GetModelResponse (Maybe Text)

-- | The content-type for the model, for example, "application/json".
getModelResponse_contentType :: Lens' GetModelResponse (Maybe Text)

-- | The response's http status code.
getModelResponse_httpStatus :: Lens' GetModelResponse Int

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getApiMappings_nextToken :: Lens' GetApiMappings (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getApiMappings_maxResults :: Lens' GetApiMappings (Maybe Text)

-- | The domain name.
getApiMappings_domainName :: Lens' GetApiMappings Text

-- | The elements from this collection.
getApiMappingsResponse_items :: Lens' GetApiMappingsResponse (Maybe [ApiMapping])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getApiMappingsResponse_nextToken :: Lens' GetApiMappingsResponse (Maybe Text)

-- | The response's http status code.
getApiMappingsResponse_httpStatus :: Lens' GetApiMappingsResponse Int

-- | The template selection expression for the integration response.
--   Supported only for WebSocket APIs.
createIntegrationResponse_templateSelectionExpression :: Lens' CreateIntegrationResponse (Maybe Text)

-- | Specifies how to handle response payload content type conversions.
--   Supported values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the
--   following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
createIntegrationResponse_contentHandlingStrategy :: Lens' CreateIntegrationResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
createIntegrationResponse_responseTemplates :: Lens' CreateIntegrationResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where {name}
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where {name} is a valid
--   and unique response header name and {JSON-expression} is a valid JSON
--   expression without the $ prefix.
createIntegrationResponse_responseParameters :: Lens' CreateIntegrationResponse (Maybe (HashMap Text Text))

-- | The API identifier.
createIntegrationResponse_apiId :: Lens' CreateIntegrationResponse Text

-- | The integration ID.
createIntegrationResponse_integrationId :: Lens' CreateIntegrationResponse Text

-- | The integration response key.
createIntegrationResponse_integrationResponseKey :: Lens' CreateIntegrationResponse Text

-- | The integration response ID.
createIntegrationResponseResponse_integrationResponseId :: Lens' CreateIntegrationResponseResponse (Maybe Text)

-- | The integration response key.
createIntegrationResponseResponse_integrationResponseKey :: Lens' CreateIntegrationResponseResponse (Maybe Text)

-- | The template selection expressions for the integration response.
createIntegrationResponseResponse_templateSelectionExpression :: Lens' CreateIntegrationResponseResponse (Maybe Text)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
createIntegrationResponseResponse_contentHandlingStrategy :: Lens' CreateIntegrationResponseResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
createIntegrationResponseResponse_responseTemplates :: Lens' CreateIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
createIntegrationResponseResponse_responseParameters :: Lens' CreateIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createIntegrationResponseResponse_httpStatus :: Lens' CreateIntegrationResponseResponse Int

-- | The domain name.
getDomainName_domainName :: Lens' GetDomainName Text

-- | The domain name configurations.
getDomainNameResponse_domainNameConfigurations :: Lens' GetDomainNameResponse (Maybe [DomainNameConfiguration])

-- | The name of the DomainName resource.
getDomainNameResponse_domainName :: Lens' GetDomainNameResponse (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
getDomainNameResponse_mutualTlsAuthentication :: Lens' GetDomainNameResponse (Maybe MutualTlsAuthentication)

-- | The API mapping selection expression.
getDomainNameResponse_apiMappingSelectionExpression :: Lens' GetDomainNameResponse (Maybe Text)

-- | The collection of tags associated with a domain name.
getDomainNameResponse_tags :: Lens' GetDomainNameResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getDomainNameResponse_httpStatus :: Lens' GetDomainNameResponse Int

-- | A list of security group IDs for the VPC link.
createVpcLink_securityGroupIds :: Lens' CreateVpcLink (Maybe [Text])

-- | A list of tags.
createVpcLink_tags :: Lens' CreateVpcLink (Maybe (HashMap Text Text))

-- | A list of subnet IDs to include in the VPC link.
createVpcLink_subnetIds :: Lens' CreateVpcLink [Text]

-- | The name of the VPC link.
createVpcLink_name :: Lens' CreateVpcLink Text

-- | A list of security group IDs for the VPC link.
createVpcLinkResponse_securityGroupIds :: Lens' CreateVpcLinkResponse (Maybe [Text])

-- | A list of subnet IDs to include in the VPC link.
createVpcLinkResponse_subnetIds :: Lens' CreateVpcLinkResponse (Maybe [Text])

-- | The ID of the VPC link.
createVpcLinkResponse_vpcLinkId :: Lens' CreateVpcLinkResponse (Maybe Text)

-- | The timestamp when the VPC link was created.
createVpcLinkResponse_createdDate :: Lens' CreateVpcLinkResponse (Maybe UTCTime)

-- | The version of the VPC link.
createVpcLinkResponse_vpcLinkVersion :: Lens' CreateVpcLinkResponse (Maybe VpcLinkVersion)

-- | The name of the VPC link.
createVpcLinkResponse_name :: Lens' CreateVpcLinkResponse (Maybe Text)

-- | A message summarizing the cause of the status of the VPC link.
createVpcLinkResponse_vpcLinkStatusMessage :: Lens' CreateVpcLinkResponse (Maybe Text)

-- | Tags for the VPC link.
createVpcLinkResponse_tags :: Lens' CreateVpcLinkResponse (Maybe (HashMap Text Text))

-- | The status of the VPC link.
createVpcLinkResponse_vpcLinkStatus :: Lens' CreateVpcLinkResponse (Maybe VpcLinkStatus)

-- | The response's http status code.
createVpcLinkResponse_httpStatus :: Lens' CreateVpcLinkResponse Int

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getAuthorizers_nextToken :: Lens' GetAuthorizers (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getAuthorizers_maxResults :: Lens' GetAuthorizers (Maybe Text)

-- | The API identifier.
getAuthorizers_apiId :: Lens' GetAuthorizers Text

-- | The elements from this collection.
getAuthorizersResponse_items :: Lens' GetAuthorizersResponse (Maybe [Authorizer])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getAuthorizersResponse_nextToken :: Lens' GetAuthorizersResponse (Maybe Text)

-- | The response's http status code.
getAuthorizersResponse_httpStatus :: Lens' GetAuthorizersResponse Int

-- | The route response ID.
getRouteResponse_routeResponseId :: Lens' GetRouteResponse Text

-- | The API identifier.
getRouteResponse_apiId :: Lens' GetRouteResponse Text

-- | The route ID.
getRouteResponse_routeId :: Lens' GetRouteResponse Text

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
getRouteResponseResponse_modelSelectionExpression :: Lens' GetRouteResponseResponse (Maybe Text)

-- | Represents the response models of a route response.
getRouteResponseResponse_responseModels :: Lens' GetRouteResponseResponse (Maybe (HashMap Text Text))

-- | Represents the identifier of a route response.
getRouteResponseResponse_routeResponseId :: Lens' GetRouteResponseResponse (Maybe Text)

-- | Represents the route response key of a route response.
getRouteResponseResponse_routeResponseKey :: Lens' GetRouteResponseResponse (Maybe Text)

-- | Represents the response parameters of a route response.
getRouteResponseResponse_responseParameters :: Lens' GetRouteResponseResponse (Maybe (HashMap Text ParameterConstraints))

-- | The response's http status code.
getRouteResponseResponse_httpStatus :: Lens' GetRouteResponseResponse Int

-- | The version of the API Gateway export algorithm. API Gateway uses the
--   latest version by default. Currently, the only supported version is
--   1.0.
exportApi_exportVersion :: Lens' ExportApi (Maybe Text)

-- | The name of the API stage to export. If you don't specify this
--   property, a representation of the latest API configuration is
--   exported.
exportApi_stageName :: Lens' ExportApi (Maybe Text)

-- | Specifies whether to include <a>API Gateway extensions</a> in the
--   exported API definition. API Gateway extensions are included by
--   default.
exportApi_includeExtensions :: Lens' ExportApi (Maybe Bool)

-- | The version of the API specification to use. OAS30, for OpenAPI 3.0,
--   is the only supported value.
exportApi_specification :: Lens' ExportApi Text

-- | The output type of the exported definition file. Valid values are JSON
--   and YAML.
exportApi_outputType :: Lens' ExportApi Text

-- | The API identifier.
exportApi_apiId :: Lens' ExportApi Text

-- | Undocumented member.
exportApiResponse_body :: Lens' ExportApiResponse (Maybe ByteString)

-- | The response's http status code.
exportApiResponse_httpStatus :: Lens' ExportApiResponse Int

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getRoutes_nextToken :: Lens' GetRoutes (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getRoutes_maxResults :: Lens' GetRoutes (Maybe Text)

-- | The API identifier.
getRoutes_apiId :: Lens' GetRoutes Text

-- | The elements from this collection.
getRoutesResponse_items :: Lens' GetRoutesResponse (Maybe [Route])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getRoutesResponse_nextToken :: Lens' GetRoutesResponse (Maybe Text)

-- | The response's http status code.
getRoutesResponse_httpStatus :: Lens' GetRoutesResponse Int

-- | The API identifier.
deleteCorsConfiguration_apiId :: Lens' DeleteCorsConfiguration Text

-- | The ID of the VPC link.
deleteVpcLink_vpcLinkId :: Lens' DeleteVpcLink Text

-- | The response's http status code.
deleteVpcLinkResponse_httpStatus :: Lens' DeleteVpcLinkResponse Int

-- | The name of the VPC link.
updateVpcLink_name :: Lens' UpdateVpcLink (Maybe Text)

-- | The ID of the VPC link.
updateVpcLink_vpcLinkId :: Lens' UpdateVpcLink Text

-- | A list of security group IDs for the VPC link.
updateVpcLinkResponse_securityGroupIds :: Lens' UpdateVpcLinkResponse (Maybe [Text])

-- | A list of subnet IDs to include in the VPC link.
updateVpcLinkResponse_subnetIds :: Lens' UpdateVpcLinkResponse (Maybe [Text])

-- | The ID of the VPC link.
updateVpcLinkResponse_vpcLinkId :: Lens' UpdateVpcLinkResponse (Maybe Text)

-- | The timestamp when the VPC link was created.
updateVpcLinkResponse_createdDate :: Lens' UpdateVpcLinkResponse (Maybe UTCTime)

-- | The version of the VPC link.
updateVpcLinkResponse_vpcLinkVersion :: Lens' UpdateVpcLinkResponse (Maybe VpcLinkVersion)

-- | The name of the VPC link.
updateVpcLinkResponse_name :: Lens' UpdateVpcLinkResponse (Maybe Text)

-- | A message summarizing the cause of the status of the VPC link.
updateVpcLinkResponse_vpcLinkStatusMessage :: Lens' UpdateVpcLinkResponse (Maybe Text)

-- | Tags for the VPC link.
updateVpcLinkResponse_tags :: Lens' UpdateVpcLinkResponse (Maybe (HashMap Text Text))

-- | The status of the VPC link.
updateVpcLinkResponse_vpcLinkStatus :: Lens' UpdateVpcLinkResponse (Maybe VpcLinkStatus)

-- | The response's http status code.
updateVpcLinkResponse_httpStatus :: Lens' UpdateVpcLinkResponse Int

-- | The API identifier.
deleteIntegrationResponse_apiId :: Lens' DeleteIntegrationResponse Text

-- | The integration response ID.
deleteIntegrationResponse_integrationResponseId :: Lens' DeleteIntegrationResponse Text

-- | The integration ID.
deleteIntegrationResponse_integrationId :: Lens' DeleteIntegrationResponse Text

-- | The integration response key.
updateIntegrationResponse_integrationResponseKey :: Lens' UpdateIntegrationResponse (Maybe Text)

-- | The template selection expression for the integration response.
--   Supported only for WebSocket APIs.
updateIntegrationResponse_templateSelectionExpression :: Lens' UpdateIntegrationResponse (Maybe Text)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
updateIntegrationResponse_contentHandlingStrategy :: Lens' UpdateIntegrationResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
updateIntegrationResponse_responseTemplates :: Lens' UpdateIntegrationResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name} , where name
--   is a valid and unique header name. The mapped non-static value must
--   match the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression} , where {name} is a valid
--   and unique response header name and {JSON-expression} is a valid JSON
--   expression without the $ prefix.
updateIntegrationResponse_responseParameters :: Lens' UpdateIntegrationResponse (Maybe (HashMap Text Text))

-- | The API identifier.
updateIntegrationResponse_apiId :: Lens' UpdateIntegrationResponse Text

-- | The integration response ID.
updateIntegrationResponse_integrationResponseId :: Lens' UpdateIntegrationResponse Text

-- | The integration ID.
updateIntegrationResponse_integrationId :: Lens' UpdateIntegrationResponse Text

-- | The integration response ID.
updateIntegrationResponseResponse_integrationResponseId :: Lens' UpdateIntegrationResponseResponse (Maybe Text)

-- | The integration response key.
updateIntegrationResponseResponse_integrationResponseKey :: Lens' UpdateIntegrationResponseResponse (Maybe Text)

-- | The template selection expressions for the integration response.
updateIntegrationResponseResponse_templateSelectionExpression :: Lens' UpdateIntegrationResponseResponse (Maybe Text)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
updateIntegrationResponseResponse_contentHandlingStrategy :: Lens' UpdateIntegrationResponseResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
updateIntegrationResponseResponse_responseTemplates :: Lens' UpdateIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
updateIntegrationResponseResponse_responseParameters :: Lens' UpdateIntegrationResponseResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateIntegrationResponseResponse_httpStatus :: Lens' UpdateIntegrationResponseResponse Int

-- | The API identifier.
deleteIntegration_apiId :: Lens' DeleteIntegration Text

-- | The integration ID.
deleteIntegration_integrationId :: Lens' DeleteIntegration Text

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
updateIntegration_requestTemplates :: Lens' UpdateIntegration (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
updateIntegration_integrationSubtype :: Lens' UpdateIntegration (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
updateIntegration_credentialsArn :: Lens' UpdateIntegration (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
updateIntegration_integrationUri :: Lens' UpdateIntegration (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API integrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to the backend. The key should
--   follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
updateIntegration_requestParameters :: Lens' UpdateIntegration (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
updateIntegration_connectionId :: Lens' UpdateIntegration (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
updateIntegration_passthroughBehavior :: Lens' UpdateIntegration (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
updateIntegration_integrationMethod :: Lens' UpdateIntegration (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
updateIntegration_tlsConfig :: Lens' UpdateIntegration (Maybe TlsConfigInput)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
updateIntegration_payloadFormatVersion :: Lens' UpdateIntegration (Maybe Text)

-- | The template selection expression for the integration.
updateIntegration_templateSelectionExpression :: Lens' UpdateIntegration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
updateIntegration_timeoutInMillis :: Lens' UpdateIntegration (Maybe Natural)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
updateIntegration_contentHandlingStrategy :: Lens' UpdateIntegration (Maybe ContentHandlingStrategy)

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration. For HTTP API private
--   integrations, use an HTTP_PROXY integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
updateIntegration_integrationType :: Lens' UpdateIntegration (Maybe IntegrationType)

-- | The description of the integration
updateIntegration_description :: Lens' UpdateIntegration (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
updateIntegration_connectionType :: Lens' UpdateIntegration (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
updateIntegration_responseParameters :: Lens' UpdateIntegration (Maybe (HashMap Text (HashMap Text Text)))

-- | The API identifier.
updateIntegration_apiId :: Lens' UpdateIntegration Text

-- | The integration ID.
updateIntegration_integrationId :: Lens' UpdateIntegration Text

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
updateIntegrationResponse'_integrationResponseSelectionExpression :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
updateIntegrationResponse'_requestTemplates :: Lens' UpdateIntegrationResponse' (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
updateIntegrationResponse'_integrationSubtype :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
updateIntegrationResponse'_credentialsArn :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
updateIntegrationResponse'_integrationUri :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | Represents the identifier of an integration.
updateIntegrationResponse'_integrationId :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
updateIntegrationResponse'_requestParameters :: Lens' UpdateIntegrationResponse' (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
updateIntegrationResponse'_connectionId :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
updateIntegrationResponse'_passthroughBehavior :: Lens' UpdateIntegrationResponse' (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
updateIntegrationResponse'_integrationMethod :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
updateIntegrationResponse'_tlsConfig :: Lens' UpdateIntegrationResponse' (Maybe TlsConfig)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
updateIntegrationResponse'_payloadFormatVersion :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
updateIntegrationResponse'_templateSelectionExpression :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
updateIntegrationResponse'_timeoutInMillis :: Lens' UpdateIntegrationResponse' (Maybe Natural)

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
updateIntegrationResponse'_apiGatewayManaged :: Lens' UpdateIntegrationResponse' (Maybe Bool)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
updateIntegrationResponse'_contentHandlingStrategy :: Lens' UpdateIntegrationResponse' (Maybe ContentHandlingStrategy)

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
updateIntegrationResponse'_integrationType :: Lens' UpdateIntegrationResponse' (Maybe IntegrationType)

-- | Represents the description of an integration.
updateIntegrationResponse'_description :: Lens' UpdateIntegrationResponse' (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
updateIntegrationResponse'_connectionType :: Lens' UpdateIntegrationResponse' (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
updateIntegrationResponse'_responseParameters :: Lens' UpdateIntegrationResponse' (Maybe (HashMap Text (HashMap Text Text)))

-- | The response's http status code.
updateIntegrationResponse'_httpStatus :: Lens' UpdateIntegrationResponse' Int

-- | The API identifier.
getRoute_apiId :: Lens' GetRoute Text

-- | The route ID.
getRoute_routeId :: Lens' GetRoute Text

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
getRouteResponse'_authorizationScopes :: Lens' GetRouteResponse' (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
getRouteResponse'_modelSelectionExpression :: Lens' GetRouteResponse' (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
getRouteResponse'_requestModels :: Lens' GetRouteResponse' (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
getRouteResponse'_routeResponseSelectionExpression :: Lens' GetRouteResponse' (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
getRouteResponse'_requestParameters :: Lens' GetRouteResponse' (Maybe (HashMap Text ParameterConstraints))

-- | The route ID.
getRouteResponse'_routeId :: Lens' GetRouteResponse' (Maybe Text)

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
getRouteResponse'_authorizerId :: Lens' GetRouteResponse' (Maybe Text)

-- | The operation name for the route.
getRouteResponse'_operationName :: Lens' GetRouteResponse' (Maybe Text)

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
getRouteResponse'_apiGatewayManaged :: Lens' GetRouteResponse' (Maybe Bool)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
getRouteResponse'_authorizationType :: Lens' GetRouteResponse' (Maybe AuthorizationType)

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
getRouteResponse'_apiKeyRequired :: Lens' GetRouteResponse' (Maybe Bool)

-- | The route key for the route.
getRouteResponse'_routeKey :: Lens' GetRouteResponse' (Maybe Text)

-- | The target for the route.
getRouteResponse'_target :: Lens' GetRouteResponse' (Maybe Text)

-- | The response's http status code.
getRouteResponse'_httpStatus :: Lens' GetRouteResponse' Int

-- | The authorizer identifier.
getAuthorizer_authorizerId :: Lens' GetAuthorizer Text

-- | The API identifier.
getAuthorizer_apiId :: Lens' GetAuthorizer Text

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
getAuthorizerResponse_authorizerCredentialsArn :: Lens' GetAuthorizerResponse (Maybe Text)

-- | The validation expression does not apply to the REQUEST authorizer.
getAuthorizerResponse_identityValidationExpression :: Lens' GetAuthorizerResponse (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
getAuthorizerResponse_enableSimpleResponses :: Lens' GetAuthorizerResponse (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
getAuthorizerResponse_authorizerUri :: Lens' GetAuthorizerResponse (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
getAuthorizerResponse_authorizerPayloadFormatVersion :: Lens' GetAuthorizerResponse (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
getAuthorizerResponse_jwtConfiguration :: Lens' GetAuthorizerResponse (Maybe JWTConfiguration)

-- | The authorizer identifier.
getAuthorizerResponse_authorizerId :: Lens' GetAuthorizerResponse (Maybe Text)

-- | The name of the authorizer.
getAuthorizerResponse_name :: Lens' GetAuthorizerResponse (Maybe Text)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
getAuthorizerResponse_authorizerResultTtlInSeconds :: Lens' GetAuthorizerResponse (Maybe Natural)

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
getAuthorizerResponse_identitySource :: Lens' GetAuthorizerResponse (Maybe [Text])

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
getAuthorizerResponse_authorizerType :: Lens' GetAuthorizerResponse (Maybe AuthorizerType)

-- | The response's http status code.
getAuthorizerResponse_httpStatus :: Lens' GetAuthorizerResponse Int

-- | The stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
getStage_stageName :: Lens' GetStage Text

-- | The API identifier.
getStage_apiId :: Lens' GetStage Text

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
getStageResponse_lastDeploymentStatusMessage :: Lens' GetStageResponse (Maybe Text)

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
getStageResponse_deploymentId :: Lens' GetStageResponse (Maybe Text)

-- | Route settings for the stage, by routeKey.
getStageResponse_routeSettings :: Lens' GetStageResponse (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
getStageResponse_accessLogSettings :: Lens' GetStageResponse (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
getStageResponse_clientCertificateId :: Lens' GetStageResponse (Maybe Text)

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
getStageResponse_stageVariables :: Lens' GetStageResponse (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
getStageResponse_autoDeploy :: Lens' GetStageResponse (Maybe Bool)

-- | The timestamp when the stage was created.
getStageResponse_createdDate :: Lens' GetStageResponse (Maybe UTCTime)

-- | Default route settings for the stage.
getStageResponse_defaultRouteSettings :: Lens' GetStageResponse (Maybe RouteSettings)

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
getStageResponse_apiGatewayManaged :: Lens' GetStageResponse (Maybe Bool)

-- | The name of the stage.
getStageResponse_stageName :: Lens' GetStageResponse (Maybe Text)

-- | The timestamp when the stage was last updated.
getStageResponse_lastUpdatedDate :: Lens' GetStageResponse (Maybe UTCTime)

-- | The description of the stage.
getStageResponse_description :: Lens' GetStageResponse (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
getStageResponse_tags :: Lens' GetStageResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getStageResponse_httpStatus :: Lens' GetStageResponse Int

-- | The API mapping identifier.
getApiMapping_apiMappingId :: Lens' GetApiMapping Text

-- | The domain name.
getApiMapping_domainName :: Lens' GetApiMapping Text

-- | The API stage.
getApiMappingResponse_stage :: Lens' GetApiMappingResponse (Maybe Text)

-- | The API identifier.
getApiMappingResponse_apiId :: Lens' GetApiMappingResponse (Maybe Text)

-- | The API mapping key.
getApiMappingResponse_apiMappingKey :: Lens' GetApiMappingResponse (Maybe Text)

-- | The API mapping identifier.
getApiMappingResponse_apiMappingId :: Lens' GetApiMappingResponse (Maybe Text)

-- | The response's http status code.
getApiMappingResponse_httpStatus :: Lens' GetApiMappingResponse Int

-- | Specifies how to interpret the base path of the API during import.
--   Valid values are ignore, prepend, and split. The default value is
--   ignore. To learn more, see <a>Set the OpenAPI basePath Property</a>.
--   Supported only for HTTP APIs.
importApi_basepath :: Lens' ImportApi (Maybe Text)

-- | Specifies whether to rollback the API creation when a warning is
--   encountered. By default, API creation continues if a warning is
--   encountered.
importApi_failOnWarnings :: Lens' ImportApi (Maybe Bool)

-- | The OpenAPI definition. Supported only for HTTP APIs.
importApi_body :: Lens' ImportApi Text

-- | The API ID.
importApiResponse_apiId :: Lens' ImportApiResponse (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
importApiResponse_disableExecuteApiEndpoint :: Lens' ImportApiResponse (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
importApiResponse_apiEndpoint :: Lens' ImportApiResponse (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
importApiResponse_warnings :: Lens' ImportApiResponse (Maybe [Text])

-- | The timestamp when the API was created.
importApiResponse_createdDate :: Lens' ImportApiResponse (Maybe UTCTime)

-- | The name of the API.
importApiResponse_name :: Lens' ImportApiResponse (Maybe Text)

-- | A version identifier for the API.
importApiResponse_version :: Lens' ImportApiResponse (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
importApiResponse_apiGatewayManaged :: Lens' ImportApiResponse (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
importApiResponse_apiKeySelectionExpression :: Lens' ImportApiResponse (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
importApiResponse_corsConfiguration :: Lens' ImportApiResponse (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
importApiResponse_routeSelectionExpression :: Lens' ImportApiResponse (Maybe Text)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
importApiResponse_importInfo :: Lens' ImportApiResponse (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
importApiResponse_disableSchemaValidation :: Lens' ImportApiResponse (Maybe Bool)

-- | The description of the API.
importApiResponse_description :: Lens' ImportApiResponse (Maybe Text)

-- | The API protocol.
importApiResponse_protocolType :: Lens' ImportApiResponse (Maybe ProtocolType)

-- | A collection of tags associated with the API.
importApiResponse_tags :: Lens' ImportApiResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
importApiResponse_httpStatus :: Lens' ImportApiResponse Int

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getApis_nextToken :: Lens' GetApis (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getApis_maxResults :: Lens' GetApis (Maybe Text)

-- | The elements from this collection.
getApisResponse_items :: Lens' GetApisResponse (Maybe [Api])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getApisResponse_nextToken :: Lens' GetApisResponse (Maybe Text)

-- | The response's http status code.
getApisResponse_httpStatus :: Lens' GetApisResponse Int

-- | The API stage.
updateApiMapping_stage :: Lens' UpdateApiMapping (Maybe Text)

-- | The API mapping key.
updateApiMapping_apiMappingKey :: Lens' UpdateApiMapping (Maybe Text)

-- | The API mapping identifier.
updateApiMapping_apiMappingId :: Lens' UpdateApiMapping Text

-- | The API identifier.
updateApiMapping_apiId :: Lens' UpdateApiMapping Text

-- | The domain name.
updateApiMapping_domainName :: Lens' UpdateApiMapping Text

-- | The API stage.
updateApiMappingResponse_stage :: Lens' UpdateApiMappingResponse (Maybe Text)

-- | The API identifier.
updateApiMappingResponse_apiId :: Lens' UpdateApiMappingResponse (Maybe Text)

-- | The API mapping key.
updateApiMappingResponse_apiMappingKey :: Lens' UpdateApiMappingResponse (Maybe Text)

-- | The API mapping identifier.
updateApiMappingResponse_apiMappingId :: Lens' UpdateApiMappingResponse (Maybe Text)

-- | The response's http status code.
updateApiMappingResponse_httpStatus :: Lens' UpdateApiMappingResponse Int

-- | The API mapping identifier.
deleteApiMapping_apiMappingId :: Lens' DeleteApiMapping Text

-- | The domain name.
deleteApiMapping_domainName :: Lens' DeleteApiMapping Text

-- | The authorization scopes supported by this route.
createRoute_authorizationScopes :: Lens' CreateRoute (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
createRoute_modelSelectionExpression :: Lens' CreateRoute (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
createRoute_requestModels :: Lens' CreateRoute (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
createRoute_routeResponseSelectionExpression :: Lens' CreateRoute (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
createRoute_requestParameters :: Lens' CreateRoute (Maybe (HashMap Text ParameterConstraints))

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
createRoute_authorizerId :: Lens' CreateRoute (Maybe Text)

-- | The operation name for the route.
createRoute_operationName :: Lens' CreateRoute (Maybe Text)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
createRoute_authorizationType :: Lens' CreateRoute (Maybe AuthorizationType)

-- | Specifies whether an API key is required for the route. Supported only
--   for WebSocket APIs.
createRoute_apiKeyRequired :: Lens' CreateRoute (Maybe Bool)

-- | The target for the route.
createRoute_target :: Lens' CreateRoute (Maybe Text)

-- | The API identifier.
createRoute_apiId :: Lens' CreateRoute Text

-- | The route key for the route.
createRoute_routeKey :: Lens' CreateRoute Text

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
createRouteResponse'_authorizationScopes :: Lens' CreateRouteResponse' (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
createRouteResponse'_modelSelectionExpression :: Lens' CreateRouteResponse' (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
createRouteResponse'_requestModels :: Lens' CreateRouteResponse' (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
createRouteResponse'_routeResponseSelectionExpression :: Lens' CreateRouteResponse' (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
createRouteResponse'_requestParameters :: Lens' CreateRouteResponse' (Maybe (HashMap Text ParameterConstraints))

-- | The route ID.
createRouteResponse'_routeId :: Lens' CreateRouteResponse' (Maybe Text)

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
createRouteResponse'_authorizerId :: Lens' CreateRouteResponse' (Maybe Text)

-- | The operation name for the route.
createRouteResponse'_operationName :: Lens' CreateRouteResponse' (Maybe Text)

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
createRouteResponse'_apiGatewayManaged :: Lens' CreateRouteResponse' (Maybe Bool)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
createRouteResponse'_authorizationType :: Lens' CreateRouteResponse' (Maybe AuthorizationType)

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
createRouteResponse'_apiKeyRequired :: Lens' CreateRouteResponse' (Maybe Bool)

-- | The route key for the route.
createRouteResponse'_routeKey :: Lens' CreateRouteResponse' (Maybe Text)

-- | The target for the route.
createRouteResponse'_target :: Lens' CreateRouteResponse' (Maybe Text)

-- | The response's http status code.
createRouteResponse'_httpStatus :: Lens' CreateRouteResponse' Int

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
createAuthorizer_authorizerCredentialsArn :: Lens' CreateAuthorizer (Maybe Text)

-- | This parameter is not used.
createAuthorizer_identityValidationExpression :: Lens' CreateAuthorizer (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. By default, a Lambda authorizer must return an IAM policy. If
--   enabled, the Lambda authorizer can return a boolean value instead of
--   an IAM policy. Supported only for HTTP APIs. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>
createAuthorizer_enableSimpleResponses :: Lens' CreateAuthorizer (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
createAuthorizer_authorizerUri :: Lens' CreateAuthorizer (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
createAuthorizer_authorizerPayloadFormatVersion :: Lens' CreateAuthorizer (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
createAuthorizer_jwtConfiguration :: Lens' CreateAuthorizer (Maybe JWTConfiguration)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
createAuthorizer_authorizerResultTtlInSeconds :: Lens' CreateAuthorizer (Maybe Natural)

-- | The API identifier.
createAuthorizer_apiId :: Lens' CreateAuthorizer Text

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
createAuthorizer_authorizerType :: Lens' CreateAuthorizer AuthorizerType

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
createAuthorizer_identitySource :: Lens' CreateAuthorizer [Text]

-- | The name of the authorizer.
createAuthorizer_name :: Lens' CreateAuthorizer Text

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
createAuthorizerResponse_authorizerCredentialsArn :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | The validation expression does not apply to the REQUEST authorizer.
createAuthorizerResponse_identityValidationExpression :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
createAuthorizerResponse_enableSimpleResponses :: Lens' CreateAuthorizerResponse (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
createAuthorizerResponse_authorizerUri :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
createAuthorizerResponse_authorizerPayloadFormatVersion :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
createAuthorizerResponse_jwtConfiguration :: Lens' CreateAuthorizerResponse (Maybe JWTConfiguration)

-- | The authorizer identifier.
createAuthorizerResponse_authorizerId :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | The name of the authorizer.
createAuthorizerResponse_name :: Lens' CreateAuthorizerResponse (Maybe Text)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
createAuthorizerResponse_authorizerResultTtlInSeconds :: Lens' CreateAuthorizerResponse (Maybe Natural)

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
createAuthorizerResponse_identitySource :: Lens' CreateAuthorizerResponse (Maybe [Text])

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
createAuthorizerResponse_authorizerType :: Lens' CreateAuthorizerResponse (Maybe AuthorizerType)

-- | The response's http status code.
createAuthorizerResponse_httpStatus :: Lens' CreateAuthorizerResponse Int

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter.
updateAuthorizer_authorizerCredentialsArn :: Lens' UpdateAuthorizer (Maybe Text)

-- | This parameter is not used.
updateAuthorizer_identityValidationExpression :: Lens' UpdateAuthorizer (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. By default, a Lambda authorizer must return an IAM policy. If
--   enabled, the Lambda authorizer can return a boolean value instead of
--   an IAM policy. Supported only for HTTP APIs. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>
updateAuthorizer_enableSimpleResponses :: Lens' UpdateAuthorizer (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
updateAuthorizer_authorizerUri :: Lens' UpdateAuthorizer (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
updateAuthorizer_authorizerPayloadFormatVersion :: Lens' UpdateAuthorizer (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
updateAuthorizer_jwtConfiguration :: Lens' UpdateAuthorizer (Maybe JWTConfiguration)

-- | The name of the authorizer.
updateAuthorizer_name :: Lens' UpdateAuthorizer (Maybe Text)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
updateAuthorizer_authorizerResultTtlInSeconds :: Lens' UpdateAuthorizer (Maybe Natural)

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
updateAuthorizer_identitySource :: Lens' UpdateAuthorizer (Maybe [Text])

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
updateAuthorizer_authorizerType :: Lens' UpdateAuthorizer (Maybe AuthorizerType)

-- | The authorizer identifier.
updateAuthorizer_authorizerId :: Lens' UpdateAuthorizer Text

-- | The API identifier.
updateAuthorizer_apiId :: Lens' UpdateAuthorizer Text

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
updateAuthorizerResponse_authorizerCredentialsArn :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | The validation expression does not apply to the REQUEST authorizer.
updateAuthorizerResponse_identityValidationExpression :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
updateAuthorizerResponse_enableSimpleResponses :: Lens' UpdateAuthorizerResponse (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
updateAuthorizerResponse_authorizerUri :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
updateAuthorizerResponse_authorizerPayloadFormatVersion :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
updateAuthorizerResponse_jwtConfiguration :: Lens' UpdateAuthorizerResponse (Maybe JWTConfiguration)

-- | The authorizer identifier.
updateAuthorizerResponse_authorizerId :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | The name of the authorizer.
updateAuthorizerResponse_name :: Lens' UpdateAuthorizerResponse (Maybe Text)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
updateAuthorizerResponse_authorizerResultTtlInSeconds :: Lens' UpdateAuthorizerResponse (Maybe Natural)

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
updateAuthorizerResponse_identitySource :: Lens' UpdateAuthorizerResponse (Maybe [Text])

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
updateAuthorizerResponse_authorizerType :: Lens' UpdateAuthorizerResponse (Maybe AuthorizerType)

-- | The response's http status code.
updateAuthorizerResponse_httpStatus :: Lens' UpdateAuthorizerResponse Int

-- | The authorizer identifier.
deleteAuthorizer_authorizerId :: Lens' DeleteAuthorizer Text

-- | The API identifier.
deleteAuthorizer_apiId :: Lens' DeleteAuthorizer Text

-- | The API mapping key.
createApiMapping_apiMappingKey :: Lens' CreateApiMapping (Maybe Text)

-- | The domain name.
createApiMapping_domainName :: Lens' CreateApiMapping Text

-- | The API stage.
createApiMapping_stage :: Lens' CreateApiMapping Text

-- | The API identifier.
createApiMapping_apiId :: Lens' CreateApiMapping Text

-- | The API stage.
createApiMappingResponse_stage :: Lens' CreateApiMappingResponse (Maybe Text)

-- | The API identifier.
createApiMappingResponse_apiId :: Lens' CreateApiMappingResponse (Maybe Text)

-- | The API mapping key.
createApiMappingResponse_apiMappingKey :: Lens' CreateApiMappingResponse (Maybe Text)

-- | The API mapping identifier.
createApiMappingResponse_apiMappingId :: Lens' CreateApiMappingResponse (Maybe Text)

-- | The response's http status code.
createApiMappingResponse_httpStatus :: Lens' CreateApiMappingResponse Int

-- | The route request parameter key.
deleteRouteRequestParameter_requestParameterKey :: Lens' DeleteRouteRequestParameter Text

-- | The API identifier.
deleteRouteRequestParameter_apiId :: Lens' DeleteRouteRequestParameter Text

-- | The route ID.
deleteRouteRequestParameter_routeId :: Lens' DeleteRouteRequestParameter Text

-- | The collection of tags. Each tag element is associated with a given
--   resource.
tagResource_tags :: Lens' TagResource (Maybe (HashMap Text Text))

-- | The resource ARN for the tag.
tagResource_resourceArn :: Lens' TagResource Text

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The deployment identifier of the API stage.
createStage_deploymentId :: Lens' CreateStage (Maybe Text)

-- | Route settings for the stage, by routeKey.
createStage_routeSettings :: Lens' CreateStage (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
createStage_accessLogSettings :: Lens' CreateStage (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
createStage_clientCertificateId :: Lens' CreateStage (Maybe Text)

-- | A map that defines the stage variables for a Stage. Variable names can
--   have alphanumeric and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
createStage_stageVariables :: Lens' CreateStage (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
createStage_autoDeploy :: Lens' CreateStage (Maybe Bool)

-- | The default route settings for the stage.
createStage_defaultRouteSettings :: Lens' CreateStage (Maybe RouteSettings)

-- | The description for the API stage.
createStage_description :: Lens' CreateStage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
createStage_tags :: Lens' CreateStage (Maybe (HashMap Text Text))

-- | The API identifier.
createStage_apiId :: Lens' CreateStage Text

-- | The name of the stage.
createStage_stageName :: Lens' CreateStage Text

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
createStageResponse_lastDeploymentStatusMessage :: Lens' CreateStageResponse (Maybe Text)

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
createStageResponse_deploymentId :: Lens' CreateStageResponse (Maybe Text)

-- | Route settings for the stage, by routeKey.
createStageResponse_routeSettings :: Lens' CreateStageResponse (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
createStageResponse_accessLogSettings :: Lens' CreateStageResponse (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
createStageResponse_clientCertificateId :: Lens' CreateStageResponse (Maybe Text)

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
createStageResponse_stageVariables :: Lens' CreateStageResponse (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
createStageResponse_autoDeploy :: Lens' CreateStageResponse (Maybe Bool)

-- | The timestamp when the stage was created.
createStageResponse_createdDate :: Lens' CreateStageResponse (Maybe UTCTime)

-- | Default route settings for the stage.
createStageResponse_defaultRouteSettings :: Lens' CreateStageResponse (Maybe RouteSettings)

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
createStageResponse_apiGatewayManaged :: Lens' CreateStageResponse (Maybe Bool)

-- | The name of the stage.
createStageResponse_stageName :: Lens' CreateStageResponse (Maybe Text)

-- | The timestamp when the stage was last updated.
createStageResponse_lastUpdatedDate :: Lens' CreateStageResponse (Maybe UTCTime)

-- | The description of the stage.
createStageResponse_description :: Lens' CreateStageResponse (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
createStageResponse_tags :: Lens' CreateStageResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
createStageResponse_httpStatus :: Lens' CreateStageResponse Int

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getIntegrations_nextToken :: Lens' GetIntegrations (Maybe Text)

-- | The maximum number of elements to be returned for this resource.
getIntegrations_maxResults :: Lens' GetIntegrations (Maybe Text)

-- | The API identifier.
getIntegrations_apiId :: Lens' GetIntegrations Text

-- | The elements from this collection.
getIntegrationsResponse_items :: Lens' GetIntegrationsResponse (Maybe [Integration])

-- | The next page of elements from this collection. Not valid for the last
--   element of the collection.
getIntegrationsResponse_nextToken :: Lens' GetIntegrationsResponse (Maybe Text)

-- | The response's http status code.
getIntegrationsResponse_httpStatus :: Lens' GetIntegrationsResponse Int

-- | The resource ARN for the tag.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The Tag keys to delete
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The domain name configurations.
updateDomainName_domainNameConfigurations :: Lens' UpdateDomainName (Maybe [DomainNameConfiguration])

-- | The mutual TLS authentication configuration for a custom domain name.
updateDomainName_mutualTlsAuthentication :: Lens' UpdateDomainName (Maybe MutualTlsAuthenticationInput)

-- | The domain name.
updateDomainName_domainName :: Lens' UpdateDomainName Text

-- | The domain name configurations.
updateDomainNameResponse_domainNameConfigurations :: Lens' UpdateDomainNameResponse (Maybe [DomainNameConfiguration])

-- | The name of the DomainName resource.
updateDomainNameResponse_domainName :: Lens' UpdateDomainNameResponse (Maybe Text)

-- | The mutual TLS authentication configuration for a custom domain name.
updateDomainNameResponse_mutualTlsAuthentication :: Lens' UpdateDomainNameResponse (Maybe MutualTlsAuthentication)

-- | The API mapping selection expression.
updateDomainNameResponse_apiMappingSelectionExpression :: Lens' UpdateDomainNameResponse (Maybe Text)

-- | The collection of tags associated with a domain name.
updateDomainNameResponse_tags :: Lens' UpdateDomainNameResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateDomainNameResponse_httpStatus :: Lens' UpdateDomainNameResponse Int

-- | The domain name.
deleteDomainName_domainName :: Lens' DeleteDomainName Text

-- | The API identifier.
getApi_apiId :: Lens' GetApi Text

-- | The API ID.
getApiResponse_apiId :: Lens' GetApiResponse (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
getApiResponse_disableExecuteApiEndpoint :: Lens' GetApiResponse (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
getApiResponse_apiEndpoint :: Lens' GetApiResponse (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
getApiResponse_warnings :: Lens' GetApiResponse (Maybe [Text])

-- | The timestamp when the API was created.
getApiResponse_createdDate :: Lens' GetApiResponse (Maybe UTCTime)

-- | The name of the API.
getApiResponse_name :: Lens' GetApiResponse (Maybe Text)

-- | A version identifier for the API.
getApiResponse_version :: Lens' GetApiResponse (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
getApiResponse_apiGatewayManaged :: Lens' GetApiResponse (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
getApiResponse_apiKeySelectionExpression :: Lens' GetApiResponse (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
getApiResponse_corsConfiguration :: Lens' GetApiResponse (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
getApiResponse_routeSelectionExpression :: Lens' GetApiResponse (Maybe Text)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
getApiResponse_importInfo :: Lens' GetApiResponse (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
getApiResponse_disableSchemaValidation :: Lens' GetApiResponse (Maybe Bool)

-- | The description of the API.
getApiResponse_description :: Lens' GetApiResponse (Maybe Text)

-- | The API protocol.
getApiResponse_protocolType :: Lens' GetApiResponse (Maybe ProtocolType)

-- | A collection of tags associated with the API.
getApiResponse_tags :: Lens' GetApiResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
getApiResponse_httpStatus :: Lens' GetApiResponse Int

-- | The API identifier.
deleteApi_apiId :: Lens' DeleteApi Text

-- | This property is part of quick create. It specifies the credentials
--   required for the integration, if any. For a Lambda integration, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, don't specify this parameter. Currently, this property
--   is not used for HTTP integrations. If provided, this value replaces
--   the credentials associated with the quick create integration.
--   Supported only for HTTP APIs.
updateApi_credentialsArn :: Lens' UpdateApi (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
updateApi_disableExecuteApiEndpoint :: Lens' UpdateApi (Maybe Bool)

-- | The name of the API.
updateApi_name :: Lens' UpdateApi (Maybe Text)

-- | A version identifier for the API.
updateApi_version :: Lens' UpdateApi (Maybe Text)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
updateApi_apiKeySelectionExpression :: Lens' UpdateApi (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
updateApi_corsConfiguration :: Lens' UpdateApi (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
updateApi_routeSelectionExpression :: Lens' UpdateApi (Maybe Text)

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
updateApi_disableSchemaValidation :: Lens' UpdateApi (Maybe Bool)

-- | The description of the API.
updateApi_description :: Lens' UpdateApi (Maybe Text)

-- | This property is part of quick create. If not specified, the route
--   created using quick create is kept. Otherwise, this value replaces the
--   route key of the quick create route. Additional routes may still be
--   added after the API is updated. Supported only for HTTP APIs.
updateApi_routeKey :: Lens' UpdateApi (Maybe Text)

-- | This property is part of quick create. For HTTP integrations, specify
--   a fully qualified URL. For Lambda integrations, specify a function
--   ARN. The type of the integration will be HTTP_PROXY or AWS_PROXY,
--   respectively. The value provided updates the integration URI and
--   integration type. You can update a quick-created target, but you can't
--   remove it from an API. Supported only for HTTP APIs.
updateApi_target :: Lens' UpdateApi (Maybe Text)

-- | The API identifier.
updateApi_apiId :: Lens' UpdateApi Text

-- | The API ID.
updateApiResponse_apiId :: Lens' UpdateApiResponse (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
updateApiResponse_disableExecuteApiEndpoint :: Lens' UpdateApiResponse (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
updateApiResponse_apiEndpoint :: Lens' UpdateApiResponse (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
updateApiResponse_warnings :: Lens' UpdateApiResponse (Maybe [Text])

-- | The timestamp when the API was created.
updateApiResponse_createdDate :: Lens' UpdateApiResponse (Maybe UTCTime)

-- | The name of the API.
updateApiResponse_name :: Lens' UpdateApiResponse (Maybe Text)

-- | A version identifier for the API.
updateApiResponse_version :: Lens' UpdateApiResponse (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
updateApiResponse_apiGatewayManaged :: Lens' UpdateApiResponse (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
updateApiResponse_apiKeySelectionExpression :: Lens' UpdateApiResponse (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
updateApiResponse_corsConfiguration :: Lens' UpdateApiResponse (Maybe Cors)

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
updateApiResponse_routeSelectionExpression :: Lens' UpdateApiResponse (Maybe Text)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
updateApiResponse_importInfo :: Lens' UpdateApiResponse (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
updateApiResponse_disableSchemaValidation :: Lens' UpdateApiResponse (Maybe Bool)

-- | The description of the API.
updateApiResponse_description :: Lens' UpdateApiResponse (Maybe Text)

-- | The API protocol.
updateApiResponse_protocolType :: Lens' UpdateApiResponse (Maybe ProtocolType)

-- | A collection of tags associated with the API.
updateApiResponse_tags :: Lens' UpdateApiResponse (Maybe (HashMap Text Text))

-- | The response's http status code.
updateApiResponse_httpStatus :: Lens' UpdateApiResponse Int

-- | The model ID.
getModelTemplate_modelId :: Lens' GetModelTemplate Text

-- | The API identifier.
getModelTemplate_apiId :: Lens' GetModelTemplate Text

-- | The template value.
getModelTemplateResponse_value :: Lens' GetModelTemplateResponse (Maybe Text)

-- | The response's http status code.
getModelTemplateResponse_httpStatus :: Lens' GetModelTemplateResponse Int

-- | A single line format of the access logs of data, as specified by
--   selected $context variables. The format must include at least
--   $context.requestId.
accessLogSettings_format :: Lens' AccessLogSettings (Maybe Text)

-- | The ARN of the CloudWatch Logs log group to receive access logs.
accessLogSettings_destinationArn :: Lens' AccessLogSettings (Maybe Text)

-- | The API ID.
api_apiId :: Lens' Api (Maybe Text)

-- | Specifies whether clients can invoke your API by using the default
--   execute-api endpoint. By default, clients can invoke your API with the
--   default https://{api_id}.execute-api.{region}.amazonaws.com endpoint.
--   To require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
api_disableExecuteApiEndpoint :: Lens' Api (Maybe Bool)

-- | The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
api_apiEndpoint :: Lens' Api (Maybe Text)

-- | The warning messages reported when failonwarnings is turned on during
--   API import.
api_warnings :: Lens' Api (Maybe [Text])

-- | The timestamp when the API was created.
api_createdDate :: Lens' Api (Maybe UTCTime)

-- | A version identifier for the API.
api_version :: Lens' Api (Maybe Text)

-- | Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
api_apiGatewayManaged :: Lens' Api (Maybe Bool)

-- | An API key selection expression. Supported only for WebSocket APIs.
--   See <a>API Key Selection Expressions</a>.
api_apiKeySelectionExpression :: Lens' Api (Maybe Text)

-- | A CORS configuration. Supported only for HTTP APIs.
api_corsConfiguration :: Lens' Api (Maybe Cors)

-- | The validation information during API import. This may include
--   particular properties of your OpenAPI definition which are ignored
--   during import. Supported only for HTTP APIs.
api_importInfo :: Lens' Api (Maybe [Text])

-- | Avoid validating models when creating a deployment. Supported only for
--   WebSocket APIs.
api_disableSchemaValidation :: Lens' Api (Maybe Bool)

-- | The description of the API.
api_description :: Lens' Api (Maybe Text)

-- | A collection of tags associated with the API.
api_tags :: Lens' Api (Maybe (HashMap Text Text))

-- | The route selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
api_routeSelectionExpression :: Lens' Api Text

-- | The name of the API.
api_name :: Lens' Api Text

-- | The API protocol.
api_protocolType :: Lens' Api ProtocolType

-- | The API mapping key.
apiMapping_apiMappingKey :: Lens' ApiMapping (Maybe Text)

-- | The API mapping identifier.
apiMapping_apiMappingId :: Lens' ApiMapping (Maybe Text)

-- | The API stage.
apiMapping_stage :: Lens' ApiMapping Text

-- | The API identifier.
apiMapping_apiId :: Lens' ApiMapping Text

-- | Specifies the required credentials as an IAM role for API Gateway to
--   invoke the authorizer. To specify an IAM role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To use
--   resource-based permissions on the Lambda function, don't specify this
--   parameter. Supported only for REQUEST authorizers.
authorizer_authorizerCredentialsArn :: Lens' Authorizer (Maybe Text)

-- | The validation expression does not apply to the REQUEST authorizer.
authorizer_identityValidationExpression :: Lens' Authorizer (Maybe Text)

-- | Specifies whether a Lambda authorizer returns a response in a simple
--   format. If enabled, the Lambda authorizer can return a boolean value
--   instead of an IAM policy. Supported only for HTTP APIs. To learn more,
--   see <a>Working with AWS Lambda authorizers for HTTP APIs</a>
authorizer_enableSimpleResponses :: Lens' Authorizer (Maybe Bool)

-- | The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
authorizer_authorizerUri :: Lens' Authorizer (Maybe Text)

-- | Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
authorizer_authorizerPayloadFormatVersion :: Lens' Authorizer (Maybe Text)

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
authorizer_jwtConfiguration :: Lens' Authorizer (Maybe JWTConfiguration)

-- | The authorizer identifier.
authorizer_authorizerId :: Lens' Authorizer (Maybe Text)

-- | The time to live (TTL) for cached authorizer results, in seconds. If
--   it equals 0, authorization caching is disabled. If it is greater than
--   0, API Gateway caches authorizer responses. The maximum value is 3600,
--   or 1 hour. Supported only for HTTP API Lambda authorizers.
authorizer_authorizerResultTtlInSeconds :: Lens' Authorizer (Maybe Natural)

-- | The identity source for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
authorizer_identitySource :: Lens' Authorizer (Maybe [Text])

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
authorizer_authorizerType :: Lens' Authorizer (Maybe AuthorizerType)

-- | The name of the authorizer.
authorizer_name :: Lens' Authorizer Text

-- | The number of seconds that the browser should cache preflight request
--   results. Supported only for HTTP APIs.
cors_maxAge :: Lens' Cors (Maybe Int)

-- | Represents a collection of allowed HTTP methods. Supported only for
--   HTTP APIs.
cors_allowMethods :: Lens' Cors (Maybe [Text])

-- | Represents a collection of allowed headers. Supported only for HTTP
--   APIs.
cors_allowHeaders :: Lens' Cors (Maybe [Text])

-- | Represents a collection of exposed headers. Supported only for HTTP
--   APIs.
cors_exposeHeaders :: Lens' Cors (Maybe [Text])

-- | Represents a collection of allowed origins. Supported only for HTTP
--   APIs.
cors_allowOrigins :: Lens' Cors (Maybe [Text])

-- | Specifies whether credentials are included in the CORS request.
--   Supported only for HTTP APIs.
cors_allowCredentials :: Lens' Cors (Maybe Bool)

-- | The identifier for the deployment.
deployment_deploymentId :: Lens' Deployment (Maybe Text)

-- | Specifies whether a deployment was automatically released.
deployment_autoDeployed :: Lens' Deployment (Maybe Bool)

-- | May contain additional feedback on the status of an API deployment.
deployment_deploymentStatusMessage :: Lens' Deployment (Maybe Text)

-- | The date and time when the Deployment resource was created.
deployment_createdDate :: Lens' Deployment (Maybe UTCTime)

-- | The status of the deployment: PENDING, FAILED, or SUCCEEDED.
deployment_deploymentStatus :: Lens' Deployment (Maybe DeploymentStatus)

-- | The description for the deployment.
deployment_description :: Lens' Deployment (Maybe Text)

-- | The domain name configurations.
domainName_domainNameConfigurations :: Lens' DomainName (Maybe [DomainNameConfiguration])

-- | The mutual TLS authentication configuration for a custom domain name.
domainName_mutualTlsAuthentication :: Lens' DomainName (Maybe MutualTlsAuthentication)

-- | The API mapping selection expression.
domainName_apiMappingSelectionExpression :: Lens' DomainName (Maybe Text)

-- | The collection of tags associated with a domain name.
domainName_tags :: Lens' DomainName (Maybe (HashMap Text Text))

-- | The name of the DomainName resource.
domainName_domainName :: Lens' DomainName Text

-- | A domain name for the API.
domainNameConfiguration_apiGatewayDomainName :: Lens' DomainNameConfiguration (Maybe Text)

-- | The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn
domainNameConfiguration_ownershipVerificationCertificateArn :: Lens' DomainNameConfiguration (Maybe Text)

-- | The user-friendly name of the certificate that will be used by the
--   edge-optimized endpoint for this domain name.
domainNameConfiguration_certificateName :: Lens' DomainNameConfiguration (Maybe Text)

-- | The Amazon Route 53 Hosted Zone ID of the endpoint.
domainNameConfiguration_hostedZoneId :: Lens' DomainNameConfiguration (Maybe Text)

-- | An AWS-managed certificate that will be used by the edge-optimized
--   endpoint for this domain name. AWS Certificate Manager is the only
--   supported source.
domainNameConfiguration_certificateArn :: Lens' DomainNameConfiguration (Maybe Text)

-- | The endpoint type.
domainNameConfiguration_endpointType :: Lens' DomainNameConfiguration (Maybe EndpointType)

-- | The Transport Layer Security (TLS) version of the security policy for
--   this domain name. The valid values are TLS_1_0 and TLS_1_2.
domainNameConfiguration_securityPolicy :: Lens' DomainNameConfiguration (Maybe SecurityPolicy)

-- | The timestamp when the certificate that was used by edge-optimized
--   endpoint for this domain name was uploaded.
domainNameConfiguration_certificateUploadDate :: Lens' DomainNameConfiguration (Maybe UTCTime)

-- | An optional text message containing detailed information about status
--   of the domain name migration.
domainNameConfiguration_domainNameStatusMessage :: Lens' DomainNameConfiguration (Maybe Text)

-- | The status of the domain name migration. The valid values are
--   AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and
--   PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain
--   cannot be modified further until the existing operation is complete.
--   If it is AVAILABLE, the domain can be updated.
domainNameConfiguration_domainNameStatus :: Lens' DomainNameConfiguration (Maybe DomainNameStatus)

-- | The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
integration_integrationResponseSelectionExpression :: Lens' Integration (Maybe Text)

-- | Represents a map of Velocity templates that are applied on the request
--   payload based on the value of the Content-Type header sent by the
--   client. The content type value is the key in this map, and the
--   template (as a String) is the value. Supported only for WebSocket
--   APIs.
integration_requestTemplates :: Lens' Integration (Maybe (HashMap Text Text))

-- | Supported only for HTTP API AWS_PROXY integrations. Specifies the AWS
--   service action to invoke. To learn more, see <a>Integration subtype
--   reference</a>.
integration_integrationSubtype :: Lens' Integration (Maybe Text)

-- | Specifies the credentials required for the integration, if any. For
--   AWS integrations, three options are available. To specify an IAM Role
--   for API Gateway to assume, use the role's Amazon Resource Name (ARN).
--   To require that the caller's identity be passed through from the
--   request, specify the string arn:aws:iam::*:user/*. To use
--   resource-based permissions on supported AWS services, specify null.
integration_credentialsArn :: Lens' Integration (Maybe Text)

-- | For a Lambda integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
integration_integrationUri :: Lens' Integration (Maybe Text)

-- | Represents the identifier of an integration.
integration_integrationId :: Lens' Integration (Maybe Text)

-- | For WebSocket APIs, a key-value map specifying request parameters that
--   are passed from the method request to the backend. The key is an
--   integration request parameter name and the associated value is a
--   method request parameter value or static value that must be enclosed
--   within single quotes and pre-encoded as required by the backend. The
--   method request parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
integration_requestParameters :: Lens' Integration (Maybe (HashMap Text Text))

-- | The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
integration_connectionId :: Lens' Integration (Maybe Text)

-- | Specifies the pass-through behavior for incoming requests based on the
--   Content-Type header in the request, and the available mapping
--   templates specified as the requestTemplates property on the
--   Integration resource. There are three valid values: WHEN_NO_MATCH,
--   WHEN_NO_TEMPLATES, and NEVER. Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
integration_passthroughBehavior :: Lens' Integration (Maybe PassthroughBehavior)

-- | Specifies the integration's HTTP method type.
integration_integrationMethod :: Lens' Integration (Maybe Text)

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
integration_tlsConfig :: Lens' Integration (Maybe TlsConfig)

-- | Specifies the format of the payload sent to an integration. Required
--   for HTTP APIs.
integration_payloadFormatVersion :: Lens' Integration (Maybe Text)

-- | The template selection expression for the integration. Supported only
--   for WebSocket APIs.
integration_templateSelectionExpression :: Lens' Integration (Maybe Text)

-- | Custom timeout between 50 and 29,000 milliseconds for WebSocket APIs
--   and between 50 and 30,000 milliseconds for HTTP APIs. The default
--   timeout is 29 seconds for WebSocket APIs and 30 seconds for HTTP APIs.
integration_timeoutInMillis :: Lens' Integration (Maybe Natural)

-- | Specifies whether an integration is managed by API Gateway. If you
--   created an API using using quick create, the resulting integration is
--   managed by API Gateway. You can update a managed integration, but you
--   can't delete it.
integration_apiGatewayManaged :: Lens' Integration (Maybe Bool)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
integration_contentHandlingStrategy :: Lens' Integration (Maybe ContentHandlingStrategy)

-- | The integration type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
integration_integrationType :: Lens' Integration (Maybe IntegrationType)

-- | Represents the description of an integration.
integration_description :: Lens' Integration (Maybe Text)

-- | The type of the network connection to the integration endpoint.
--   Specify INTERNET for connections through the public routable internet
--   or VPC_LINK for private connections between API Gateway and resources
--   in a VPC. The default value is INTERNET.
integration_connectionType :: Lens' Integration (Maybe ConnectionType)

-- | Supported only for HTTP APIs. You use response parameters to transform
--   the HTTP response from a backend integration before returning the
--   response to clients. Specify a key-value map from a selection key to
--   response parameters. The selection key must be a valid HTTP status
--   code within the range of 200-599. Response parameters are a key-value
--   map. The key must match pattern
--   &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
integration_responseParameters :: Lens' Integration (Maybe (HashMap Text (HashMap Text Text)))

-- | The integration response ID.
integrationResponse_integrationResponseId :: Lens' IntegrationResponse (Maybe Text)

-- | The template selection expressions for the integration response.
integrationResponse_templateSelectionExpression :: Lens' IntegrationResponse (Maybe Text)

-- | Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
integrationResponse_contentHandlingStrategy :: Lens' IntegrationResponse (Maybe ContentHandlingStrategy)

-- | The collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
integrationResponse_responseTemplates :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | A key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
integrationResponse_responseParameters :: Lens' IntegrationResponse (Maybe (HashMap Text Text))

-- | The integration response key.
integrationResponse_integrationResponseKey :: Lens' IntegrationResponse Text

-- | A list of the intended recipients of the JWT. A valid JWT must provide
--   an aud that matches at least one entry in this list. See <a>RFC
--   7519</a>. Supported only for HTTP APIs.
jWTConfiguration_audience :: Lens' JWTConfiguration (Maybe [Text])

-- | The base domain of the identity provider that issues JSON Web Tokens.
--   For example, an Amazon Cognito user pool has the following format:
--   https://cognito-idp.{region}.amazonaws.com/{userPoolId} . Required for
--   the JWT authorizer type. Supported only for HTTP APIs.
jWTConfiguration_issuer :: Lens' JWTConfiguration (Maybe Text)

-- | The model identifier.
model_modelId :: Lens' Model (Maybe Text)

-- | The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
model_schema :: Lens' Model (Maybe Text)

-- | The description of the model.
model_description :: Lens' Model (Maybe Text)

-- | The content-type for the model, for example, "application/json".
model_contentType :: Lens' Model (Maybe Text)

-- | The name of the model. Must be alphanumeric.
model_name :: Lens' Model Text

-- | A list of warnings that API Gateway returns while processing your
--   truststore. Invalid certificates produce warnings. Mutual TLS is still
--   enabled, but some clients might not be able to access your API. To
--   resolve warnings, upload a new truststore to S3, and then update you
--   domain name to use the new version.
mutualTlsAuthentication_truststoreWarnings :: Lens' MutualTlsAuthentication (Maybe [Text])

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example, s3://bucket-name/key-name. The truststore
--   can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthentication_truststoreUri :: Lens' MutualTlsAuthentication (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthentication_truststoreVersion :: Lens' MutualTlsAuthentication (Maybe Text)

-- | An Amazon S3 URL that specifies the truststore for mutual TLS
--   authentication, for example, s3://bucket-name/key-name. The truststore
--   can contain certificates from public or private certificate
--   authorities. To update the truststore, upload a new version to S3, and
--   then update your custom domain name to use the new version. To update
--   the truststore, you must have permissions to access the S3 object.
mutualTlsAuthenticationInput_truststoreUri :: Lens' MutualTlsAuthenticationInput (Maybe Text)

-- | The version of the S3 object that contains your truststore. To specify
--   a version, you must have versioning enabled for the S3 bucket.
mutualTlsAuthenticationInput_truststoreVersion :: Lens' MutualTlsAuthenticationInput (Maybe Text)

-- | Whether or not the parameter is required.
parameterConstraints_required :: Lens' ParameterConstraints (Maybe Bool)

-- | A list of authorization scopes configured on a route. The scopes are
--   used with a JWT authorizer to authorize the method invocation. The
--   authorization works by matching the route scopes against the scopes
--   parsed from the access token in the incoming request. The method
--   invocation is authorized if any route scope matches a claimed scope in
--   the access token. Otherwise, the invocation is not authorized. When
--   the route scope is configured, the client must provide an access token
--   instead of an identity token for authorization purposes.
route_authorizationScopes :: Lens' Route (Maybe [Text])

-- | The model selection expression for the route. Supported only for
--   WebSocket APIs.
route_modelSelectionExpression :: Lens' Route (Maybe Text)

-- | The request models for the route. Supported only for WebSocket APIs.
route_requestModels :: Lens' Route (Maybe (HashMap Text Text))

-- | The route response selection expression for the route. Supported only
--   for WebSocket APIs.
route_routeResponseSelectionExpression :: Lens' Route (Maybe Text)

-- | The request parameters for the route. Supported only for WebSocket
--   APIs.
route_requestParameters :: Lens' Route (Maybe (HashMap Text ParameterConstraints))

-- | The route ID.
route_routeId :: Lens' Route (Maybe Text)

-- | The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
route_authorizerId :: Lens' Route (Maybe Text)

-- | The operation name for the route.
route_operationName :: Lens' Route (Maybe Text)

-- | Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
route_apiGatewayManaged :: Lens' Route (Maybe Bool)

-- | The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
route_authorizationType :: Lens' Route (Maybe AuthorizationType)

-- | Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
route_apiKeyRequired :: Lens' Route (Maybe Bool)

-- | The target for the route.
route_target :: Lens' Route (Maybe Text)

-- | The route key for the route.
route_routeKey :: Lens' Route Text

-- | Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
routeResponse_modelSelectionExpression :: Lens' RouteResponse (Maybe Text)

-- | Represents the response models of a route response.
routeResponse_responseModels :: Lens' RouteResponse (Maybe (HashMap Text Text))

-- | Represents the identifier of a route response.
routeResponse_routeResponseId :: Lens' RouteResponse (Maybe Text)

-- | Represents the response parameters of a route response.
routeResponse_responseParameters :: Lens' RouteResponse (Maybe (HashMap Text ParameterConstraints))

-- | Represents the route response key of a route response.
routeResponse_routeResponseKey :: Lens' RouteResponse Text

-- | Specifies whether (true) or not (false) data trace logging is enabled
--   for this route. This property affects the log entries pushed to Amazon
--   CloudWatch Logs. Supported only for WebSocket APIs.
routeSettings_dataTraceEnabled :: Lens' RouteSettings (Maybe Bool)

-- | Specifies the throttling burst limit.
routeSettings_throttlingBurstLimit :: Lens' RouteSettings (Maybe Int)

-- | Specifies the logging level for this route: INFO, ERROR, or OFF. This
--   property affects the log entries pushed to Amazon CloudWatch Logs.
--   Supported only for WebSocket APIs.
routeSettings_loggingLevel :: Lens' RouteSettings (Maybe LoggingLevel)

-- | Specifies the throttling rate limit.
routeSettings_throttlingRateLimit :: Lens' RouteSettings (Maybe Double)

-- | Specifies whether detailed metrics are enabled.
routeSettings_detailedMetricsEnabled :: Lens' RouteSettings (Maybe Bool)

-- | Describes the status of the last deployment of a stage. Supported only
--   for stages with autoDeploy enabled.
stage_lastDeploymentStatusMessage :: Lens' Stage (Maybe Text)

-- | The identifier of the Deployment that the Stage is associated with.
--   Can't be updated if autoDeploy is enabled.
stage_deploymentId :: Lens' Stage (Maybe Text)

-- | Route settings for the stage, by routeKey.
stage_routeSettings :: Lens' Stage (Maybe (HashMap Text RouteSettings))

-- | Settings for logging access in this stage.
stage_accessLogSettings :: Lens' Stage (Maybe AccessLogSettings)

-- | The identifier of a client certificate for a Stage. Supported only for
--   WebSocket APIs.
stage_clientCertificateId :: Lens' Stage (Maybe Text)

-- | A map that defines the stage variables for a stage resource. Variable
--   names can have alphanumeric and underscore characters, and the values
--   must match [A-Za-z0-9-._~:/?#&amp;=,]+.
stage_stageVariables :: Lens' Stage (Maybe (HashMap Text Text))

-- | Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
stage_autoDeploy :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was created.
stage_createdDate :: Lens' Stage (Maybe UTCTime)

-- | Default route settings for the stage.
stage_defaultRouteSettings :: Lens' Stage (Maybe RouteSettings)

-- | Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
stage_apiGatewayManaged :: Lens' Stage (Maybe Bool)

-- | The timestamp when the stage was last updated.
stage_lastUpdatedDate :: Lens' Stage (Maybe UTCTime)

-- | The description of the stage.
stage_description :: Lens' Stage (Maybe Text)

-- | The collection of tags. Each tag element is associated with a given
--   resource.
stage_tags :: Lens' Stage (Maybe (HashMap Text Text))

-- | The name of the stage.
stage_stageName :: Lens' Stage Text

-- | If you specify a server name, API Gateway uses it to verify the
--   hostname on the integration's certificate. The server name is also
--   included in the TLS handshake to support Server Name Indication (SNI)
--   or virtual hosting.
tlsConfig_serverNameToVerify :: Lens' TlsConfig (Maybe Text)

-- | If you specify a server name, API Gateway uses it to verify the
--   hostname on the integration's certificate. The server name is also
--   included in the TLS handshake to support Server Name Indication (SNI)
--   or virtual hosting.
tlsConfigInput_serverNameToVerify :: Lens' TlsConfigInput (Maybe Text)

-- | The timestamp when the VPC link was created.
vpcLink_createdDate :: Lens' VpcLink (Maybe UTCTime)

-- | The version of the VPC link.
vpcLink_vpcLinkVersion :: Lens' VpcLink (Maybe VpcLinkVersion)

-- | A message summarizing the cause of the status of the VPC link.
vpcLink_vpcLinkStatusMessage :: Lens' VpcLink (Maybe Text)

-- | Tags for the VPC link.
vpcLink_tags :: Lens' VpcLink (Maybe (HashMap Text Text))

-- | The status of the VPC link.
vpcLink_vpcLinkStatus :: Lens' VpcLink (Maybe VpcLinkStatus)

-- | The ID of the VPC link.
vpcLink_vpcLinkId :: Lens' VpcLink Text

-- | A list of security group IDs for the VPC link.
vpcLink_securityGroupIds :: Lens' VpcLink [Text]

-- | A list of subnet IDs to include in the VPC link.
vpcLink_subnetIds :: Lens' VpcLink [Text]

-- | The name of the VPC link.
vpcLink_name :: Lens' VpcLink Text


module Network.AWS.ApiGatewayV2.Waiters


-- | Derived from API version <tt>2018-11-29</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon API Gateway V2
module Network.AWS.ApiGatewayV2

-- | API version <tt>2018-11-29</tt> of the Amazon ApiGatewayV2 SDK
--   configuration.
defaultService :: Service

-- | Prism for AccessDeniedException' errors.
_AccessDeniedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The requested operation would cause a conflict with the current state
--   of a service resource associated with the request. Resolve the
--   conflict before retrying this request. See the accompanying error
--   message for details.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The resource specified in the request was not found. See the message
--   field for more information.
_NotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | A limit has been exceeded. See the accompanying error message for
--   details.
_TooManyRequestsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request is not valid, for example, the input is incomplete or
--   incorrect. See the accompanying error message for details.
_BadRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Creates a new Api resource to represent an API.
--   
--   <i>See:</i> <a>newCreateApi</a> smart constructor.
data CreateApi
CreateApi' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> ProtocolType -> Text -> CreateApi

-- | Create a value of <a>CreateApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:credentialsArn:CreateApi'</a>, <a>createApi_credentialsArn</a>
--   - This property is part of quick create. It specifies the credentials
--   required for the integration, if any. For a Lambda integration, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, specify null. Currently, this property is not used for
--   HTTP integrations. Supported only for HTTP APIs.
--   
--   <a>$sel:disableExecuteApiEndpoint:CreateApi'</a>,
--   <a>createApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default execute-api endpoint. By
--   default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:version:CreateApi'</a>, <a>createApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySelectionExpression:CreateApi'</a>,
--   <a>createApi_apiKeySelectionExpression</a> - An API key selection
--   expression. Supported only for WebSocket APIs. See <a>API Key
--   Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:CreateApi'</a>,
--   <a>createApi_corsConfiguration</a> - A CORS configuration. Supported
--   only for HTTP APIs. See <a>Configuring CORS</a> for more information.
--   
--   <a>$sel:routeSelectionExpression:CreateApi'</a>,
--   <a>createApi_routeSelectionExpression</a> - The route selection
--   expression for the API. For HTTP APIs, the routeSelectionExpression
--   must be ${request.method} ${request.path}. If not provided, this will
--   be the default for HTTP APIs. This property is required for WebSocket
--   APIs.
--   
--   <a>$sel:disableSchemaValidation:CreateApi'</a>,
--   <a>createApi_disableSchemaValidation</a> - Avoid validating models
--   when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:CreateApi'</a>, <a>createApi_description</a> - The
--   description of the API.
--   
--   <a>$sel:routeKey:CreateApi'</a>, <a>createApi_routeKey</a> - This
--   property is part of quick create. If you don't specify a routeKey, a
--   default route of $default is created. The $default route acts as a
--   catch-all for any request made to your API, for a particular stage.
--   The $default route key can't be modified. You can add routes after
--   creating the API, and you can update the route keys of additional
--   routes. Supported only for HTTP APIs.
--   
--   <a>$sel:tags:CreateApi'</a>, <a>createApi_tags</a> - The collection of
--   tags. Each tag element is associated with a given resource.
--   
--   <a>$sel:target:CreateApi'</a>, <a>createApi_target</a> - This property
--   is part of quick create. Quick create produces an API with an
--   integration, a default catch-all route, and a default stage which is
--   configured to automatically deploy changes. For HTTP integrations,
--   specify a fully qualified URL. For Lambda integrations, specify a
--   function ARN. The type of the integration will be HTTP_PROXY or
--   AWS_PROXY, respectively. Supported only for HTTP APIs.
--   
--   <a>$sel:protocolType:CreateApi'</a>, <a>createApi_protocolType</a> -
--   The API protocol.
--   
--   <a>$sel:name:CreateApi'</a>, <a>createApi_name</a> - The name of the
--   API.
newCreateApi :: ProtocolType -> Text -> CreateApi

-- | <i>See:</i> <a>newCreateApiResponse</a> smart constructor.
data CreateApiResponse
CreateApiResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe ProtocolType -> Maybe (HashMap Text Text) -> Int -> CreateApiResponse

-- | Create a value of <a>CreateApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:CreateApiResponse'</a>, <a>createApiResponse_apiId</a> -
--   The API ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:CreateApi'</a>,
--   <a>createApiResponse_disableExecuteApiEndpoint</a> - Specifies whether
--   clients can invoke your API by using the default execute-api endpoint.
--   By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:CreateApiResponse'</a>,
--   <a>createApiResponse_apiEndpoint</a> - The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
--   
--   <a>$sel:warnings:CreateApiResponse'</a>,
--   <a>createApiResponse_warnings</a> - The warning messages reported when
--   failonwarnings is turned on during API import.
--   
--   <a>$sel:createdDate:CreateApiResponse'</a>,
--   <a>createApiResponse_createdDate</a> - The timestamp when the API was
--   created.
--   
--   <a>$sel:name:CreateApi'</a>, <a>createApiResponse_name</a> - The name
--   of the API.
--   
--   <a>$sel:version:CreateApi'</a>, <a>createApiResponse_version</a> - A
--   version identifier for the API.
--   
--   <a>$sel:apiGatewayManaged:CreateApiResponse'</a>,
--   <a>createApiResponse_apiGatewayManaged</a> - Specifies whether an API
--   is managed by API Gateway. You can't update or delete a managed API by
--   using API Gateway. A managed API can be deleted only through the
--   tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:CreateApi'</a>,
--   <a>createApiResponse_apiKeySelectionExpression</a> - An API key
--   selection expression. Supported only for WebSocket APIs. See <a>API
--   Key Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:CreateApi'</a>,
--   <a>createApiResponse_corsConfiguration</a> - A CORS configuration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:CreateApi'</a>,
--   <a>createApiResponse_routeSelectionExpression</a> - The route
--   selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
--   
--   <a>$sel:importInfo:CreateApiResponse'</a>,
--   <a>createApiResponse_importInfo</a> - The validation information
--   during API import. This may include particular properties of your
--   OpenAPI definition which are ignored during import. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:disableSchemaValidation:CreateApi'</a>,
--   <a>createApiResponse_disableSchemaValidation</a> - Avoid validating
--   models when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:CreateApi'</a>,
--   <a>createApiResponse_description</a> - The description of the API.
--   
--   <a>$sel:protocolType:CreateApi'</a>,
--   <a>createApiResponse_protocolType</a> - The API protocol.
--   
--   <a>$sel:tags:CreateApi'</a>, <a>createApiResponse_tags</a> - A
--   collection of tags associated with the API.
--   
--   <a>$sel:httpStatus:CreateApiResponse'</a>,
--   <a>createApiResponse_httpStatus</a> - The response's http status code.
newCreateApiResponse :: Int -> CreateApiResponse

-- | <i>See:</i> <a>newGetDeployments</a> smart constructor.
data GetDeployments
GetDeployments' :: Maybe Text -> Maybe Text -> Text -> GetDeployments

-- | Create a value of <a>GetDeployments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDeployments'</a>, <a>getDeployments_nextToken</a>
--   - The next page of elements from this collection. Not valid for the
--   last element of the collection.
--   
--   <a>$sel:maxResults:GetDeployments'</a>,
--   <a>getDeployments_maxResults</a> - The maximum number of elements to
--   be returned for this resource.
--   
--   <a>$sel:apiId:GetDeployments'</a>, <a>getDeployments_apiId</a> - The
--   API identifier.
newGetDeployments :: Text -> GetDeployments

-- | <i>See:</i> <a>newGetDeploymentsResponse</a> smart constructor.
data GetDeploymentsResponse
GetDeploymentsResponse' :: Maybe [Deployment] -> Maybe Text -> Int -> GetDeploymentsResponse

-- | Create a value of <a>GetDeploymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDeploymentsResponse'</a>,
--   <a>getDeploymentsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetDeployments'</a>,
--   <a>getDeploymentsResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetDeploymentsResponse'</a>,
--   <a>getDeploymentsResponse_httpStatus</a> - The response's http status
--   code.
newGetDeploymentsResponse :: Int -> GetDeploymentsResponse

-- | <i>See:</i> <a>newDeleteAccessLogSettings</a> smart constructor.
data DeleteAccessLogSettings
DeleteAccessLogSettings' :: Text -> Text -> DeleteAccessLogSettings

-- | Create a value of <a>DeleteAccessLogSettings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:DeleteAccessLogSettings'</a>,
--   <a>deleteAccessLogSettings_stageName</a> - The stage name. Stage names
--   can only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
--   
--   <a>$sel:apiId:DeleteAccessLogSettings'</a>,
--   <a>deleteAccessLogSettings_apiId</a> - The API identifier.
newDeleteAccessLogSettings :: Text -> Text -> DeleteAccessLogSettings

-- | <i>See:</i> <a>newDeleteAccessLogSettingsResponse</a> smart
--   constructor.
data DeleteAccessLogSettingsResponse
DeleteAccessLogSettingsResponse' :: DeleteAccessLogSettingsResponse

-- | Create a value of <a>DeleteAccessLogSettingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAccessLogSettingsResponse :: DeleteAccessLogSettingsResponse

-- | <i>See:</i> <a>newGetRouteResponses</a> smart constructor.
data GetRouteResponses
GetRouteResponses' :: Maybe Text -> Maybe Text -> Text -> Text -> GetRouteResponses

-- | Create a value of <a>GetRouteResponses</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetRouteResponses'</a>,
--   <a>getRouteResponses_nextToken</a> - The next page of elements from
--   this collection. Not valid for the last element of the collection.
--   
--   <a>$sel:maxResults:GetRouteResponses'</a>,
--   <a>getRouteResponses_maxResults</a> - The maximum number of elements
--   to be returned for this resource.
--   
--   <a>$sel:routeId:GetRouteResponses'</a>,
--   <a>getRouteResponses_routeId</a> - The route ID.
--   
--   <a>$sel:apiId:GetRouteResponses'</a>, <a>getRouteResponses_apiId</a> -
--   The API identifier.
newGetRouteResponses :: Text -> Text -> GetRouteResponses

-- | <i>See:</i> <a>newGetRouteResponsesResponse</a> smart constructor.
data GetRouteResponsesResponse
GetRouteResponsesResponse' :: Maybe [RouteResponse] -> Maybe Text -> Int -> GetRouteResponsesResponse

-- | Create a value of <a>GetRouteResponsesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetRouteResponsesResponse'</a>,
--   <a>getRouteResponsesResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetRouteResponses'</a>,
--   <a>getRouteResponsesResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetRouteResponsesResponse'</a>,
--   <a>getRouteResponsesResponse_httpStatus</a> - The response's http
--   status code.
newGetRouteResponsesResponse :: Int -> GetRouteResponsesResponse

-- | <i>See:</i> <a>newGetDeployment</a> smart constructor.
data GetDeployment
GetDeployment' :: Text -> Text -> GetDeployment

-- | Create a value of <a>GetDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetDeployment'</a>, <a>getDeployment_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:deploymentId:GetDeployment'</a>,
--   <a>getDeployment_deploymentId</a> - The deployment ID.
newGetDeployment :: Text -> Text -> GetDeployment

-- | <i>See:</i> <a>newGetDeploymentResponse</a> smart constructor.
data GetDeploymentResponse
GetDeploymentResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe DeploymentStatus -> Maybe Text -> Int -> GetDeploymentResponse

-- | Create a value of <a>GetDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:GetDeployment'</a>,
--   <a>getDeploymentResponse_deploymentId</a> - The identifier for the
--   deployment.
--   
--   <a>$sel:autoDeployed:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_autoDeployed</a> - Specifies whether a
--   deployment was automatically released.
--   
--   <a>$sel:deploymentStatusMessage:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_deploymentStatusMessage</a> - May contain
--   additional feedback on the status of an API deployment.
--   
--   <a>$sel:createdDate:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_createdDate</a> - The date and time when the
--   Deployment resource was created.
--   
--   <a>$sel:deploymentStatus:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_deploymentStatus</a> - The status of the
--   deployment: PENDING, FAILED, or SUCCEEDED.
--   
--   <a>$sel:description:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_description</a> - The description for the
--   deployment.
--   
--   <a>$sel:httpStatus:GetDeploymentResponse'</a>,
--   <a>getDeploymentResponse_httpStatus</a> - The response's http status
--   code.
newGetDeploymentResponse :: Int -> GetDeploymentResponse

-- | <i>See:</i> <a>newGetTags</a> smart constructor.
data GetTags
GetTags' :: Text -> GetTags

-- | Create a value of <a>GetTags</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:GetTags'</a>, <a>getTags_resourceArn</a> - The
--   resource ARN for the tag.
newGetTags :: Text -> GetTags

-- | <i>See:</i> <a>newGetTagsResponse</a> smart constructor.
data GetTagsResponse
GetTagsResponse' :: Maybe (HashMap Text Text) -> Int -> GetTagsResponse

-- | Create a value of <a>GetTagsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:GetTagsResponse'</a>, <a>getTagsResponse_tags</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:GetTagsResponse'</a>,
--   <a>getTagsResponse_httpStatus</a> - The response's http status code.
newGetTagsResponse :: Int -> GetTagsResponse

-- | <i>See:</i> <a>newGetDomainNames</a> smart constructor.
data GetDomainNames
GetDomainNames' :: Maybe Text -> Maybe Text -> GetDomainNames

-- | Create a value of <a>GetDomainNames</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetDomainNames'</a>, <a>getDomainNames_nextToken</a>
--   - The next page of elements from this collection. Not valid for the
--   last element of the collection.
--   
--   <a>$sel:maxResults:GetDomainNames'</a>,
--   <a>getDomainNames_maxResults</a> - The maximum number of elements to
--   be returned for this resource.
newGetDomainNames :: GetDomainNames

-- | <i>See:</i> <a>newGetDomainNamesResponse</a> smart constructor.
data GetDomainNamesResponse
GetDomainNamesResponse' :: Maybe [DomainName] -> Maybe Text -> Int -> GetDomainNamesResponse

-- | Create a value of <a>GetDomainNamesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetDomainNamesResponse'</a>,
--   <a>getDomainNamesResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetDomainNames'</a>,
--   <a>getDomainNamesResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetDomainNamesResponse'</a>,
--   <a>getDomainNamesResponse_httpStatus</a> - The response's http status
--   code.
newGetDomainNamesResponse :: Int -> GetDomainNamesResponse

-- | <i>See:</i> <a>newReimportApi</a> smart constructor.
data ReimportApi
ReimportApi' :: Maybe Text -> Maybe Bool -> Text -> Text -> ReimportApi

-- | Create a value of <a>ReimportApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:basepath:ReimportApi'</a>, <a>reimportApi_basepath</a> -
--   Specifies how to interpret the base path of the API during import.
--   Valid values are ignore, prepend, and split. The default value is
--   ignore. To learn more, see <a>Set the OpenAPI basePath Property</a>.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:failOnWarnings:ReimportApi'</a>,
--   <a>reimportApi_failOnWarnings</a> - Specifies whether to rollback the
--   API creation when a warning is encountered. By default, API creation
--   continues if a warning is encountered.
--   
--   <a>$sel:apiId:ReimportApi'</a>, <a>reimportApi_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:body:ReimportApi'</a>, <a>reimportApi_body</a> - The OpenAPI
--   definition. Supported only for HTTP APIs.
newReimportApi :: Text -> Text -> ReimportApi

-- | <i>See:</i> <a>newReimportApiResponse</a> smart constructor.
data ReimportApiResponse
ReimportApiResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe ProtocolType -> Maybe (HashMap Text Text) -> Int -> ReimportApiResponse

-- | Create a value of <a>ReimportApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:ReimportApi'</a>, <a>reimportApiResponse_apiId</a> - The
--   API ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_disableExecuteApiEndpoint</a> - Specifies
--   whether clients can invoke your API by using the default execute-api
--   endpoint. By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_apiEndpoint</a> - The URI of the API, of the
--   form {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
--   
--   <a>$sel:warnings:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_warnings</a> - The warning messages reported
--   when failonwarnings is turned on during API import.
--   
--   <a>$sel:createdDate:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_createdDate</a> - The timestamp when the API
--   was created.
--   
--   <a>$sel:name:ReimportApiResponse'</a>, <a>reimportApiResponse_name</a>
--   - The name of the API.
--   
--   <a>$sel:version:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_version</a> - A version identifier for the API.
--   
--   <a>$sel:apiGatewayManaged:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_apiGatewayManaged</a> - Specifies whether an
--   API is managed by API Gateway. You can't update or delete a managed
--   API by using API Gateway. A managed API can be deleted only through
--   the tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_apiKeySelectionExpression</a> - An API key
--   selection expression. Supported only for WebSocket APIs. See <a>API
--   Key Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_corsConfiguration</a> - A CORS configuration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_routeSelectionExpression</a> - The route
--   selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
--   
--   <a>$sel:importInfo:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_importInfo</a> - The validation information
--   during API import. This may include particular properties of your
--   OpenAPI definition which are ignored during import. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:disableSchemaValidation:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_disableSchemaValidation</a> - Avoid validating
--   models when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_description</a> - The description of the API.
--   
--   <a>$sel:protocolType:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_protocolType</a> - The API protocol.
--   
--   <a>$sel:tags:ReimportApiResponse'</a>, <a>reimportApiResponse_tags</a>
--   - A collection of tags associated with the API.
--   
--   <a>$sel:httpStatus:ReimportApiResponse'</a>,
--   <a>reimportApiResponse_httpStatus</a> - The response's http status
--   code.
newReimportApiResponse :: Int -> ReimportApiResponse

-- | <i>See:</i> <a>newGetModels</a> smart constructor.
data GetModels
GetModels' :: Maybe Text -> Maybe Text -> Text -> GetModels

-- | Create a value of <a>GetModels</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetModels'</a>, <a>getModels_nextToken</a> - The
--   next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:maxResults:GetModels'</a>, <a>getModels_maxResults</a> - The
--   maximum number of elements to be returned for this resource.
--   
--   <a>$sel:apiId:GetModels'</a>, <a>getModels_apiId</a> - The API
--   identifier.
newGetModels :: Text -> GetModels

-- | <i>See:</i> <a>newGetModelsResponse</a> smart constructor.
data GetModelsResponse
GetModelsResponse' :: Maybe [Model] -> Maybe Text -> Int -> GetModelsResponse

-- | Create a value of <a>GetModelsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetModelsResponse'</a>, <a>getModelsResponse_items</a> -
--   The elements from this collection.
--   
--   <a>$sel:nextToken:GetModels'</a>, <a>getModelsResponse_nextToken</a> -
--   The next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:httpStatus:GetModelsResponse'</a>,
--   <a>getModelsResponse_httpStatus</a> - The response's http status code.
newGetModelsResponse :: Int -> GetModelsResponse

-- | Creates a new Integration resource to represent an integration.
--   
--   <i>See:</i> <a>newCreateIntegration</a> smart constructor.
data CreateIntegration
CreateIntegration' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfigInput -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ContentHandlingStrategy -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Text -> IntegrationType -> CreateIntegration

-- | Create a value of <a>CreateIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestTemplates:CreateIntegration'</a>,
--   <a>createIntegration_requestTemplates</a> - Represents a map of
--   Velocity templates that are applied on the request payload based on
--   the value of the Content-Type header sent by the client. The content
--   type value is the key in this map, and the template (as a String) is
--   the value. Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:CreateIntegration'</a>,
--   <a>createIntegration_integrationSubtype</a> - Supported only for HTTP
--   API AWS_PROXY integrations. Specifies the AWS service action to
--   invoke. To learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:CreateIntegration'</a>,
--   <a>createIntegration_credentialsArn</a> - Specifies the credentials
--   required for the integration, if any. For AWS integrations, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify the
--   string arn:aws:iam::*:user/*. To use resource-based permissions on
--   supported AWS services, specify null.
--   
--   <a>$sel:integrationUri:CreateIntegration'</a>,
--   <a>createIntegration_integrationUri</a> - For a Lambda integration,
--   specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:requestParameters:CreateIntegration'</a>,
--   <a>createIntegration_requestParameters</a> - For WebSocket APIs, a
--   key-value map specifying request parameters that are passed from the
--   method request to the backend. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the backend. The method request parameter
--   value must match the pattern of method.request.{location}.{name} ,
--   where {location} is querystring, path, or header; and {name} must be a
--   valid and unique method request parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API integrations without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to the backend. The key should
--   follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:CreateIntegration'</a>,
--   <a>createIntegration_connectionId</a> - The ID of the VPC link for a
--   private integration. Supported only for HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:CreateIntegration'</a>,
--   <a>createIntegration_passthroughBehavior</a> - Specifies the
--   pass-through behavior for incoming requests based on the Content-Type
--   header in the request, and the available mapping templates specified
--   as the requestTemplates property on the Integration resource. There
--   are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.
--   Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:CreateIntegration'</a>,
--   <a>createIntegration_integrationMethod</a> - Specifies the
--   integration's HTTP method type.
--   
--   <a>$sel:tlsConfig:CreateIntegration'</a>,
--   <a>createIntegration_tlsConfig</a> - The TLS configuration for a
--   private integration. If you specify a TLS configuration, private
--   integration traffic uses the HTTPS protocol. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:payloadFormatVersion:CreateIntegration'</a>,
--   <a>createIntegration_payloadFormatVersion</a> - Specifies the format
--   of the payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:CreateIntegration'</a>,
--   <a>createIntegration_templateSelectionExpression</a> - The template
--   selection expression for the integration.
--   
--   <a>$sel:timeoutInMillis:CreateIntegration'</a>,
--   <a>createIntegration_timeoutInMillis</a> - Custom timeout between 50
--   and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000
--   milliseconds for HTTP APIs. The default timeout is 29 seconds for
--   WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:contentHandlingStrategy:CreateIntegration'</a>,
--   <a>createIntegration_contentHandlingStrategy</a> - Supported only for
--   WebSocket APIs. Specifies how to handle response payload content type
--   conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:description:CreateIntegration'</a>,
--   <a>createIntegration_description</a> - The description of the
--   integration.
--   
--   <a>$sel:connectionType:CreateIntegration'</a>,
--   <a>createIntegration_connectionType</a> - The type of the network
--   connection to the integration endpoint. Specify INTERNET for
--   connections through the public routable internet or VPC_LINK for
--   private connections between API Gateway and resources in a VPC. The
--   default value is INTERNET.
--   
--   <a>$sel:responseParameters:CreateIntegration'</a>,
--   <a>createIntegration_responseParameters</a> - Supported only for HTTP
--   APIs. You use response parameters to transform the HTTP response from
--   a backend integration before returning the response to clients.
--   Specify a key-value map from a selection key to response parameters.
--   The selection key must be a valid HTTP status code within the range of
--   200-599. Response parameters are a key-value map. The key must match
--   pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:apiId:CreateIntegration'</a>, <a>createIntegration_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:integrationType:CreateIntegration'</a>,
--   <a>createIntegration_integrationType</a> - The integration type of an
--   integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration. For HTTP API private
--   integrations, use an HTTP_PROXY integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
newCreateIntegration :: Text -> IntegrationType -> CreateIntegration

-- | <i>See:</i> <a>newCreateIntegrationResponse'</a> smart constructor.
data CreateIntegrationResponse'
CreateIntegrationResponse'' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfig -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Bool -> Maybe ContentHandlingStrategy -> Maybe IntegrationType -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Int -> CreateIntegrationResponse'

-- | Create a value of <a>CreateIntegrationResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:integrationResponseSelectionExpression:CreateIntegrationResponse''</a>,
--   <a>createIntegrationResponse'_integrationResponseSelectionExpression</a>
--   - The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
--   
--   <a>$sel:requestTemplates:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_requestTemplates</a> - Represents a map
--   of Velocity templates that are applied on the request payload based on
--   the value of the Content-Type header sent by the client. The content
--   type value is the key in this map, and the template (as a String) is
--   the value. Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_integrationSubtype</a> - Supported only
--   for HTTP API AWS_PROXY integrations. Specifies the AWS service action
--   to invoke. To learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_credentialsArn</a> - Specifies the
--   credentials required for the integration, if any. For AWS
--   integrations, three options are available. To specify an IAM Role for
--   API Gateway to assume, use the role's Amazon Resource Name (ARN). To
--   require that the caller's identity be passed through from the request,
--   specify the string arn:aws:iam::*:user/*. To use resource-based
--   permissions on supported AWS services, specify null.
--   
--   <a>$sel:integrationUri:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_integrationUri</a> - For a Lambda
--   integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:integrationId:CreateIntegrationResponse''</a>,
--   <a>createIntegrationResponse'_integrationId</a> - Represents the
--   identifier of an integration.
--   
--   <a>$sel:requestParameters:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_requestParameters</a> - For WebSocket
--   APIs, a key-value map specifying request parameters that are passed
--   from the method request to the backend. The key is an integration
--   request parameter name and the associated value is a method request
--   parameter value or static value that must be enclosed within single
--   quotes and pre-encoded as required by the backend. The method request
--   parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_connectionId</a> - The ID of the VPC
--   link for a private integration. Supported only for HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_passthroughBehavior</a> - Specifies the
--   pass-through behavior for incoming requests based on the Content-Type
--   header in the request, and the available mapping templates specified
--   as the requestTemplates property on the Integration resource. There
--   are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.
--   Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_integrationMethod</a> - Specifies the
--   integration's HTTP method type.
--   
--   <a>$sel:tlsConfig:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_tlsConfig</a> - The TLS configuration
--   for a private integration. If you specify a TLS configuration, private
--   integration traffic uses the HTTPS protocol. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:payloadFormatVersion:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_payloadFormatVersion</a> - Specifies the
--   format of the payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_templateSelectionExpression</a> - The
--   template selection expression for the integration. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:timeoutInMillis:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_timeoutInMillis</a> - Custom timeout
--   between 50 and 29,000 milliseconds for WebSocket APIs and between 50
--   and 30,000 milliseconds for HTTP APIs. The default timeout is 29
--   seconds for WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:apiGatewayManaged:CreateIntegrationResponse''</a>,
--   <a>createIntegrationResponse'_apiGatewayManaged</a> - Specifies
--   whether an integration is managed by API Gateway. If you created an
--   API using using quick create, the resulting integration is managed by
--   API Gateway. You can update a managed integration, but you can't
--   delete it.
--   
--   <a>$sel:contentHandlingStrategy:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_contentHandlingStrategy</a> - Supported
--   only for WebSocket APIs. Specifies how to handle response payload
--   content type conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:integrationType:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_integrationType</a> - The integration
--   type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:description:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_description</a> - Represents the
--   description of an integration.
--   
--   <a>$sel:connectionType:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_connectionType</a> - The type of the
--   network connection to the integration endpoint. Specify INTERNET for
--   connections through the public routable internet or VPC_LINK for
--   private connections between API Gateway and resources in a VPC. The
--   default value is INTERNET.
--   
--   <a>$sel:responseParameters:CreateIntegration'</a>,
--   <a>createIntegrationResponse'_responseParameters</a> - Supported only
--   for HTTP APIs. You use response parameters to transform the HTTP
--   response from a backend integration before returning the response to
--   clients. Specify a key-value map from a selection key to response
--   parameters. The selection key must be a valid HTTP status code within
--   the range of 200-599. Response parameters are a key-value map. The key
--   must match pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:httpStatus:CreateIntegrationResponse''</a>,
--   <a>createIntegrationResponse'_httpStatus</a> - The response's http
--   status code.
newCreateIntegrationResponse' :: Int -> CreateIntegrationResponse'

-- | <i>See:</i> <a>newDeleteStage</a> smart constructor.
data DeleteStage
DeleteStage' :: Text -> Text -> DeleteStage

-- | Create a value of <a>DeleteStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:DeleteStage'</a>, <a>deleteStage_stageName</a> - The
--   stage name. Stage names can only contain alphanumeric characters,
--   hyphens, and underscores. Maximum length is 128 characters.
--   
--   <a>$sel:apiId:DeleteStage'</a>, <a>deleteStage_apiId</a> - The API
--   identifier.
newDeleteStage :: Text -> Text -> DeleteStage

-- | <i>See:</i> <a>newDeleteStageResponse</a> smart constructor.
data DeleteStageResponse
DeleteStageResponse' :: DeleteStageResponse

-- | Create a value of <a>DeleteStageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteStageResponse :: DeleteStageResponse

-- | Updates a Stage.
--   
--   <i>See:</i> <a>newUpdateStage</a> smart constructor.
data UpdateStage
UpdateStage' :: Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe RouteSettings -> Maybe Text -> Text -> Text -> UpdateStage

-- | Create a value of <a>UpdateStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:UpdateStage'</a>, <a>updateStage_deploymentId</a>
--   - The deployment identifier for the API stage. Can't be updated if
--   autoDeploy is enabled.
--   
--   <a>$sel:routeSettings:UpdateStage'</a>,
--   <a>updateStage_routeSettings</a> - Route settings for the stage.
--   
--   <a>$sel:accessLogSettings:UpdateStage'</a>,
--   <a>updateStage_accessLogSettings</a> - Settings for logging access in
--   this stage.
--   
--   <a>$sel:clientCertificateId:UpdateStage'</a>,
--   <a>updateStage_clientCertificateId</a> - The identifier of a client
--   certificate for a Stage.
--   
--   <a>$sel:stageVariables:UpdateStage'</a>,
--   <a>updateStage_stageVariables</a> - A map that defines the stage
--   variables for a Stage. Variable names can have alphanumeric and
--   underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:UpdateStage'</a>, <a>updateStage_autoDeploy</a> -
--   Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
--   
--   <a>$sel:defaultRouteSettings:UpdateStage'</a>,
--   <a>updateStage_defaultRouteSettings</a> - The default route settings
--   for the stage.
--   
--   <a>$sel:description:UpdateStage'</a>, <a>updateStage_description</a> -
--   The description for the API stage.
--   
--   <a>$sel:stageName:UpdateStage'</a>, <a>updateStage_stageName</a> - The
--   stage name. Stage names can contain only alphanumeric characters,
--   hyphens, and underscores, or be $default. Maximum length is 128
--   characters.
--   
--   <a>$sel:apiId:UpdateStage'</a>, <a>updateStage_apiId</a> - The API
--   identifier.
newUpdateStage :: Text -> Text -> UpdateStage

-- | <i>See:</i> <a>newUpdateStageResponse</a> smart constructor.
data UpdateStageResponse
UpdateStageResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe POSIX -> Maybe RouteSettings -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> UpdateStageResponse

-- | Create a value of <a>UpdateStageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentStatusMessage:UpdateStageResponse'</a>,
--   <a>updateStageResponse_lastDeploymentStatusMessage</a> - Describes the
--   status of the last deployment of a stage. Supported only for stages
--   with autoDeploy enabled.
--   
--   <a>$sel:deploymentId:UpdateStage'</a>,
--   <a>updateStageResponse_deploymentId</a> - The identifier of the
--   Deployment that the Stage is associated with. Can't be updated if
--   autoDeploy is enabled.
--   
--   <a>$sel:routeSettings:UpdateStage'</a>,
--   <a>updateStageResponse_routeSettings</a> - Route settings for the
--   stage, by routeKey.
--   
--   <a>$sel:accessLogSettings:UpdateStage'</a>,
--   <a>updateStageResponse_accessLogSettings</a> - Settings for logging
--   access in this stage.
--   
--   <a>$sel:clientCertificateId:UpdateStage'</a>,
--   <a>updateStageResponse_clientCertificateId</a> - The identifier of a
--   client certificate for a Stage. Supported only for WebSocket APIs.
--   
--   <a>$sel:stageVariables:UpdateStage'</a>,
--   <a>updateStageResponse_stageVariables</a> - A map that defines the
--   stage variables for a stage resource. Variable names can have
--   alphanumeric and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:UpdateStage'</a>,
--   <a>updateStageResponse_autoDeploy</a> - Specifies whether updates to
--   an API automatically trigger a new deployment. The default value is
--   false.
--   
--   <a>$sel:createdDate:UpdateStageResponse'</a>,
--   <a>updateStageResponse_createdDate</a> - The timestamp when the stage
--   was created.
--   
--   <a>$sel:defaultRouteSettings:UpdateStage'</a>,
--   <a>updateStageResponse_defaultRouteSettings</a> - Default route
--   settings for the stage.
--   
--   <a>$sel:apiGatewayManaged:UpdateStageResponse'</a>,
--   <a>updateStageResponse_apiGatewayManaged</a> - Specifies whether a
--   stage is managed by API Gateway. If you created an API using quick
--   create, the $default stage is managed by API Gateway. You can't modify
--   the $default stage.
--   
--   <a>$sel:stageName:UpdateStage'</a>,
--   <a>updateStageResponse_stageName</a> - The name of the stage.
--   
--   <a>$sel:lastUpdatedDate:UpdateStageResponse'</a>,
--   <a>updateStageResponse_lastUpdatedDate</a> - The timestamp when the
--   stage was last updated.
--   
--   <a>$sel:description:UpdateStage'</a>,
--   <a>updateStageResponse_description</a> - The description of the stage.
--   
--   <a>$sel:tags:UpdateStageResponse'</a>, <a>updateStageResponse_tags</a>
--   - The collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:httpStatus:UpdateStageResponse'</a>,
--   <a>updateStageResponse_httpStatus</a> - The response's http status
--   code.
newUpdateStageResponse :: Int -> UpdateStageResponse

-- | <i>See:</i> <a>newDeleteRouteSettings</a> smart constructor.
data DeleteRouteSettings
DeleteRouteSettings' :: Text -> Text -> Text -> DeleteRouteSettings

-- | Create a value of <a>DeleteRouteSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:DeleteRouteSettings'</a>,
--   <a>deleteRouteSettings_stageName</a> - The stage name. Stage names can
--   only contain alphanumeric characters, hyphens, and underscores.
--   Maximum length is 128 characters.
--   
--   <a>$sel:routeKey:DeleteRouteSettings'</a>,
--   <a>deleteRouteSettings_routeKey</a> - The route key.
--   
--   <a>$sel:apiId:DeleteRouteSettings'</a>,
--   <a>deleteRouteSettings_apiId</a> - The API identifier.
newDeleteRouteSettings :: Text -> Text -> Text -> DeleteRouteSettings

-- | <i>See:</i> <a>newDeleteRouteSettingsResponse</a> smart constructor.
data DeleteRouteSettingsResponse
DeleteRouteSettingsResponse' :: DeleteRouteSettingsResponse

-- | Create a value of <a>DeleteRouteSettingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRouteSettingsResponse :: DeleteRouteSettingsResponse

-- | Creates a new Deployment resource to represent a deployment.
--   
--   <i>See:</i> <a>newCreateDeployment</a> smart constructor.
data CreateDeployment
CreateDeployment' :: Maybe Text -> Maybe Text -> Text -> CreateDeployment

-- | Create a value of <a>CreateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:CreateDeployment'</a>,
--   <a>createDeployment_stageName</a> - The name of the Stage resource for
--   the Deployment resource to create.
--   
--   <a>$sel:description:CreateDeployment'</a>,
--   <a>createDeployment_description</a> - The description for the
--   deployment resource.
--   
--   <a>$sel:apiId:CreateDeployment'</a>, <a>createDeployment_apiId</a> -
--   The API identifier.
newCreateDeployment :: Text -> CreateDeployment

-- | <i>See:</i> <a>newCreateDeploymentResponse</a> smart constructor.
data CreateDeploymentResponse
CreateDeploymentResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe DeploymentStatus -> Maybe Text -> Int -> CreateDeploymentResponse

-- | Create a value of <a>CreateDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_deploymentId</a> - The identifier for the
--   deployment.
--   
--   <a>$sel:autoDeployed:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_autoDeployed</a> - Specifies whether a
--   deployment was automatically released.
--   
--   <a>$sel:deploymentStatusMessage:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_deploymentStatusMessage</a> - May contain
--   additional feedback on the status of an API deployment.
--   
--   <a>$sel:createdDate:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_createdDate</a> - The date and time when
--   the Deployment resource was created.
--   
--   <a>$sel:deploymentStatus:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_deploymentStatus</a> - The status of the
--   deployment: PENDING, FAILED, or SUCCEEDED.
--   
--   <a>$sel:description:CreateDeployment'</a>,
--   <a>createDeploymentResponse_description</a> - The description for the
--   deployment.
--   
--   <a>$sel:httpStatus:CreateDeploymentResponse'</a>,
--   <a>createDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newCreateDeploymentResponse :: Int -> CreateDeploymentResponse

-- | <i>See:</i> <a>newDeleteRoute</a> smart constructor.
data DeleteRoute
DeleteRoute' :: Text -> Text -> DeleteRoute

-- | Create a value of <a>DeleteRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteRoute'</a>, <a>deleteRoute_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:routeId:DeleteRoute'</a>, <a>deleteRoute_routeId</a> - The
--   route ID.
newDeleteRoute :: Text -> Text -> DeleteRoute

-- | <i>See:</i> <a>newDeleteRouteResponse'</a> smart constructor.
data DeleteRouteResponse'
DeleteRouteResponse'' :: DeleteRouteResponse'

-- | Create a value of <a>DeleteRouteResponse'</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRouteResponse' :: DeleteRouteResponse'

-- | Updates a Route.
--   
--   <i>See:</i> <a>newUpdateRoute</a> smart constructor.
data UpdateRoute
UpdateRoute' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateRoute

-- | Create a value of <a>UpdateRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:UpdateRoute'</a>,
--   <a>updateRoute_authorizationScopes</a> - The authorization scopes
--   supported by this route.
--   
--   <a>$sel:modelSelectionExpression:UpdateRoute'</a>,
--   <a>updateRoute_modelSelectionExpression</a> - The model selection
--   expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:UpdateRoute'</a>,
--   <a>updateRoute_requestModels</a> - The request models for the route.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:UpdateRoute'</a>,
--   <a>updateRoute_routeResponseSelectionExpression</a> - The route
--   response selection expression for the route. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:requestParameters:UpdateRoute'</a>,
--   <a>updateRoute_requestParameters</a> - The request parameters for the
--   route. Supported only for WebSocket APIs.
--   
--   <a>$sel:authorizerId:UpdateRoute'</a>, <a>updateRoute_authorizerId</a>
--   - The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
--   
--   <a>$sel:operationName:UpdateRoute'</a>,
--   <a>updateRoute_operationName</a> - The operation name for the route.
--   
--   <a>$sel:authorizationType:UpdateRoute'</a>,
--   <a>updateRoute_authorizationType</a> - The authorization type for the
--   route. For WebSocket APIs, valid values are NONE for open access,
--   AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda
--   authorizer For HTTP APIs, valid values are NONE for open access, JWT
--   for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:UpdateRoute'</a>,
--   <a>updateRoute_apiKeyRequired</a> - Specifies whether an API key is
--   required for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeKey:UpdateRoute'</a>, <a>updateRoute_routeKey</a> - The
--   route key for the route.
--   
--   <a>$sel:target:UpdateRoute'</a>, <a>updateRoute_target</a> - The
--   target for the route.
--   
--   <a>$sel:apiId:UpdateRoute'</a>, <a>updateRoute_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:routeId:UpdateRoute'</a>, <a>updateRoute_routeId</a> - The
--   route ID.
newUpdateRoute :: Text -> Text -> UpdateRoute

-- | <i>See:</i> <a>newUpdateRouteResponse'</a> smart constructor.
data UpdateRouteResponse'
UpdateRouteResponse'' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Maybe Text -> Int -> UpdateRouteResponse'

-- | Create a value of <a>UpdateRouteResponse'</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:UpdateRoute'</a>,
--   <a>updateRouteResponse'_authorizationScopes</a> - A list of
--   authorization scopes configured on a route. The scopes are used with a
--   JWT authorizer to authorize the method invocation. The authorization
--   works by matching the route scopes against the scopes parsed from the
--   access token in the incoming request. The method invocation is
--   authorized if any route scope matches a claimed scope in the access
--   token. Otherwise, the invocation is not authorized. When the route
--   scope is configured, the client must provide an access token instead
--   of an identity token for authorization purposes.
--   
--   <a>$sel:modelSelectionExpression:UpdateRoute'</a>,
--   <a>updateRouteResponse'_modelSelectionExpression</a> - The model
--   selection expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:UpdateRoute'</a>,
--   <a>updateRouteResponse'_requestModels</a> - The request models for the
--   route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:UpdateRoute'</a>,
--   <a>updateRouteResponse'_routeResponseSelectionExpression</a> - The
--   route response selection expression for the route. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:requestParameters:UpdateRoute'</a>,
--   <a>updateRouteResponse'_requestParameters</a> - The request parameters
--   for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeId:UpdateRoute'</a>, <a>updateRouteResponse'_routeId</a>
--   - The route ID.
--   
--   <a>$sel:authorizerId:UpdateRoute'</a>,
--   <a>updateRouteResponse'_authorizerId</a> - The identifier of the
--   Authorizer resource to be associated with this route. The authorizer
--   identifier is generated by API Gateway when you created the
--   authorizer.
--   
--   <a>$sel:operationName:UpdateRoute'</a>,
--   <a>updateRouteResponse'_operationName</a> - The operation name for the
--   route.
--   
--   <a>$sel:apiGatewayManaged:UpdateRouteResponse''</a>,
--   <a>updateRouteResponse'_apiGatewayManaged</a> - Specifies whether a
--   route is managed by API Gateway. If you created an API using quick
--   create, the $default route is managed by API Gateway. You can't modify
--   the $default route key.
--   
--   <a>$sel:authorizationType:UpdateRoute'</a>,
--   <a>updateRouteResponse'_authorizationType</a> - The authorization type
--   for the route. For WebSocket APIs, valid values are NONE for open
--   access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a
--   Lambda authorizer For HTTP APIs, valid values are NONE for open
--   access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM
--   permissions, and CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:UpdateRoute'</a>,
--   <a>updateRouteResponse'_apiKeyRequired</a> - Specifies whether an API
--   key is required for this route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeKey:UpdateRoute'</a>,
--   <a>updateRouteResponse'_routeKey</a> - The route key for the route.
--   
--   <a>$sel:target:UpdateRoute'</a>, <a>updateRouteResponse'_target</a> -
--   The target for the route.
--   
--   <a>$sel:httpStatus:UpdateRouteResponse''</a>,
--   <a>updateRouteResponse'_httpStatus</a> - The response's http status
--   code.
newUpdateRouteResponse' :: Int -> UpdateRouteResponse'

-- | <i>See:</i> <a>newGetVpcLinks</a> smart constructor.
data GetVpcLinks
GetVpcLinks' :: Maybe Text -> Maybe Text -> GetVpcLinks

-- | Create a value of <a>GetVpcLinks</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetVpcLinks'</a>, <a>getVpcLinks_nextToken</a> - The
--   next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:maxResults:GetVpcLinks'</a>, <a>getVpcLinks_maxResults</a> -
--   The maximum number of elements to be returned for this resource.
newGetVpcLinks :: GetVpcLinks

-- | <i>See:</i> <a>newGetVpcLinksResponse</a> smart constructor.
data GetVpcLinksResponse
GetVpcLinksResponse' :: Maybe [VpcLink] -> Maybe Text -> Int -> GetVpcLinksResponse

-- | Create a value of <a>GetVpcLinksResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetVpcLinksResponse'</a>,
--   <a>getVpcLinksResponse_items</a> - A collection of VPC links.
--   
--   <a>$sel:nextToken:GetVpcLinks'</a>,
--   <a>getVpcLinksResponse_nextToken</a> - The next page of elements from
--   this collection. Not valid for the last element of the collection.
--   
--   <a>$sel:httpStatus:GetVpcLinksResponse'</a>,
--   <a>getVpcLinksResponse_httpStatus</a> - The response's http status
--   code.
newGetVpcLinksResponse :: Int -> GetVpcLinksResponse

-- | <i>See:</i> <a>newGetIntegrationResponses</a> smart constructor.
data GetIntegrationResponses
GetIntegrationResponses' :: Maybe Text -> Maybe Text -> Text -> Text -> GetIntegrationResponses

-- | Create a value of <a>GetIntegrationResponses</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetIntegrationResponses'</a>,
--   <a>getIntegrationResponses_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:maxResults:GetIntegrationResponses'</a>,
--   <a>getIntegrationResponses_maxResults</a> - The maximum number of
--   elements to be returned for this resource.
--   
--   <a>$sel:integrationId:GetIntegrationResponses'</a>,
--   <a>getIntegrationResponses_integrationId</a> - The integration ID.
--   
--   <a>$sel:apiId:GetIntegrationResponses'</a>,
--   <a>getIntegrationResponses_apiId</a> - The API identifier.
newGetIntegrationResponses :: Text -> Text -> GetIntegrationResponses

-- | <i>See:</i> <a>newGetIntegrationResponsesResponse</a> smart
--   constructor.
data GetIntegrationResponsesResponse
GetIntegrationResponsesResponse' :: Maybe [IntegrationResponse] -> Maybe Text -> Int -> GetIntegrationResponsesResponse

-- | Create a value of <a>GetIntegrationResponsesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetIntegrationResponsesResponse'</a>,
--   <a>getIntegrationResponsesResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetIntegrationResponses'</a>,
--   <a>getIntegrationResponsesResponse_nextToken</a> - The next page of
--   elements from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetIntegrationResponsesResponse'</a>,
--   <a>getIntegrationResponsesResponse_httpStatus</a> - The response's
--   http status code.
newGetIntegrationResponsesResponse :: Int -> GetIntegrationResponsesResponse

-- | <i>See:</i> <a>newGetIntegration</a> smart constructor.
data GetIntegration
GetIntegration' :: Text -> Text -> GetIntegration

-- | Create a value of <a>GetIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetIntegration'</a>, <a>getIntegration_apiId</a> - The
--   API identifier.
--   
--   <a>$sel:integrationId:GetIntegration'</a>,
--   <a>getIntegration_integrationId</a> - The integration ID.
newGetIntegration :: Text -> Text -> GetIntegration

-- | <i>See:</i> <a>newGetIntegrationResponse'</a> smart constructor.
data GetIntegrationResponse'
GetIntegrationResponse'' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfig -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Bool -> Maybe ContentHandlingStrategy -> Maybe IntegrationType -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Int -> GetIntegrationResponse'

-- | Create a value of <a>GetIntegrationResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:integrationResponseSelectionExpression:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_integrationResponseSelectionExpression</a>
--   - The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
--   
--   <a>$sel:requestTemplates:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_requestTemplates</a> - Represents a map of
--   Velocity templates that are applied on the request payload based on
--   the value of the Content-Type header sent by the client. The content
--   type value is the key in this map, and the template (as a String) is
--   the value. Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_integrationSubtype</a> - Supported only for
--   HTTP API AWS_PROXY integrations. Specifies the AWS service action to
--   invoke. To learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_credentialsArn</a> - Specifies the
--   credentials required for the integration, if any. For AWS
--   integrations, three options are available. To specify an IAM Role for
--   API Gateway to assume, use the role's Amazon Resource Name (ARN). To
--   require that the caller's identity be passed through from the request,
--   specify the string arn:aws:iam::*:user/*. To use resource-based
--   permissions on supported AWS services, specify null.
--   
--   <a>$sel:integrationUri:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_integrationUri</a> - For a Lambda
--   integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:integrationId:GetIntegration'</a>,
--   <a>getIntegrationResponse'_integrationId</a> - Represents the
--   identifier of an integration.
--   
--   <a>$sel:requestParameters:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_requestParameters</a> - For WebSocket APIs,
--   a key-value map specifying request parameters that are passed from the
--   method request to the backend. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the backend. The method request parameter
--   value must match the pattern of method.request.{location}.{name} ,
--   where {location} is querystring, path, or header; and {name} must be a
--   valid and unique method request parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_connectionId</a> - The ID of the VPC link
--   for a private integration. Supported only for HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_passthroughBehavior</a> - Specifies the
--   pass-through behavior for incoming requests based on the Content-Type
--   header in the request, and the available mapping templates specified
--   as the requestTemplates property on the Integration resource. There
--   are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.
--   Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_integrationMethod</a> - Specifies the
--   integration's HTTP method type.
--   
--   <a>$sel:tlsConfig:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_tlsConfig</a> - The TLS configuration for a
--   private integration. If you specify a TLS configuration, private
--   integration traffic uses the HTTPS protocol. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:payloadFormatVersion:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_payloadFormatVersion</a> - Specifies the
--   format of the payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_templateSelectionExpression</a> - The
--   template selection expression for the integration. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:timeoutInMillis:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_timeoutInMillis</a> - Custom timeout
--   between 50 and 29,000 milliseconds for WebSocket APIs and between 50
--   and 30,000 milliseconds for HTTP APIs. The default timeout is 29
--   seconds for WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:apiGatewayManaged:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_apiGatewayManaged</a> - Specifies whether
--   an integration is managed by API Gateway. If you created an API using
--   using quick create, the resulting integration is managed by API
--   Gateway. You can update a managed integration, but you can't delete
--   it.
--   
--   <a>$sel:contentHandlingStrategy:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_contentHandlingStrategy</a> - Supported
--   only for WebSocket APIs. Specifies how to handle response payload
--   content type conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:integrationType:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_integrationType</a> - The integration type
--   of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:description:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_description</a> - Represents the
--   description of an integration.
--   
--   <a>$sel:connectionType:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_connectionType</a> - The type of the
--   network connection to the integration endpoint. Specify INTERNET for
--   connections through the public routable internet or VPC_LINK for
--   private connections between API Gateway and resources in a VPC. The
--   default value is INTERNET.
--   
--   <a>$sel:responseParameters:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_responseParameters</a> - Supported only for
--   HTTP APIs. You use response parameters to transform the HTTP response
--   from a backend integration before returning the response to clients.
--   Specify a key-value map from a selection key to response parameters.
--   The selection key must be a valid HTTP status code within the range of
--   200-599. Response parameters are a key-value map. The key must match
--   pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:httpStatus:GetIntegrationResponse''</a>,
--   <a>getIntegrationResponse'_httpStatus</a> - The response's http status
--   code.
newGetIntegrationResponse' :: Int -> GetIntegrationResponse'

-- | <i>See:</i> <a>newDeleteDeployment</a> smart constructor.
data DeleteDeployment
DeleteDeployment' :: Text -> Text -> DeleteDeployment

-- | Create a value of <a>DeleteDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteDeployment'</a>, <a>deleteDeployment_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:deploymentId:DeleteDeployment'</a>,
--   <a>deleteDeployment_deploymentId</a> - The deployment ID.
newDeleteDeployment :: Text -> Text -> DeleteDeployment

-- | <i>See:</i> <a>newDeleteDeploymentResponse</a> smart constructor.
data DeleteDeploymentResponse
DeleteDeploymentResponse' :: DeleteDeploymentResponse

-- | Create a value of <a>DeleteDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDeploymentResponse :: DeleteDeploymentResponse

-- | Updates a Deployment.
--   
--   <i>See:</i> <a>newUpdateDeployment</a> smart constructor.
data UpdateDeployment
UpdateDeployment' :: Maybe Text -> Text -> Text -> UpdateDeployment

-- | Create a value of <a>UpdateDeployment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:UpdateDeployment'</a>,
--   <a>updateDeployment_description</a> - The description for the
--   deployment resource.
--   
--   <a>$sel:apiId:UpdateDeployment'</a>, <a>updateDeployment_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:deploymentId:UpdateDeployment'</a>,
--   <a>updateDeployment_deploymentId</a> - The deployment ID.
newUpdateDeployment :: Text -> Text -> UpdateDeployment

-- | <i>See:</i> <a>newUpdateDeploymentResponse</a> smart constructor.
data UpdateDeploymentResponse
UpdateDeploymentResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe DeploymentStatus -> Maybe Text -> Int -> UpdateDeploymentResponse

-- | Create a value of <a>UpdateDeploymentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:UpdateDeployment'</a>,
--   <a>updateDeploymentResponse_deploymentId</a> - The identifier for the
--   deployment.
--   
--   <a>$sel:autoDeployed:UpdateDeploymentResponse'</a>,
--   <a>updateDeploymentResponse_autoDeployed</a> - Specifies whether a
--   deployment was automatically released.
--   
--   <a>$sel:deploymentStatusMessage:UpdateDeploymentResponse'</a>,
--   <a>updateDeploymentResponse_deploymentStatusMessage</a> - May contain
--   additional feedback on the status of an API deployment.
--   
--   <a>$sel:createdDate:UpdateDeploymentResponse'</a>,
--   <a>updateDeploymentResponse_createdDate</a> - The date and time when
--   the Deployment resource was created.
--   
--   <a>$sel:deploymentStatus:UpdateDeploymentResponse'</a>,
--   <a>updateDeploymentResponse_deploymentStatus</a> - The status of the
--   deployment: PENDING, FAILED, or SUCCEEDED.
--   
--   <a>$sel:description:UpdateDeployment'</a>,
--   <a>updateDeploymentResponse_description</a> - The description for the
--   deployment.
--   
--   <a>$sel:httpStatus:UpdateDeploymentResponse'</a>,
--   <a>updateDeploymentResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDeploymentResponse :: Int -> UpdateDeploymentResponse

-- | <i>See:</i> <a>newDeleteRouteResponse</a> smart constructor.
data DeleteRouteResponse
DeleteRouteResponse' :: Text -> Text -> Text -> DeleteRouteResponse

-- | Create a value of <a>DeleteRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routeResponseId:DeleteRouteResponse'</a>,
--   <a>deleteRouteResponse_routeResponseId</a> - The route response ID.
--   
--   <a>$sel:apiId:DeleteRouteResponse'</a>,
--   <a>deleteRouteResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:routeId:DeleteRouteResponse'</a>,
--   <a>deleteRouteResponse_routeId</a> - The route ID.
newDeleteRouteResponse :: Text -> Text -> Text -> DeleteRouteResponse

-- | <i>See:</i> <a>newDeleteRouteResponseResponse</a> smart constructor.
data DeleteRouteResponseResponse
DeleteRouteResponseResponse' :: DeleteRouteResponseResponse

-- | Create a value of <a>DeleteRouteResponseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRouteResponseResponse :: DeleteRouteResponseResponse

-- | Updates a RouteResponse.
--   
--   <i>See:</i> <a>newUpdateRouteResponse</a> smart constructor.
data UpdateRouteResponse
UpdateRouteResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Text -> Text -> Text -> UpdateRouteResponse

-- | Create a value of <a>UpdateRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_modelSelectionExpression</a> - The model
--   selection expression for the route response. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:responseModels:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_responseModels</a> - The response models for
--   the route response.
--   
--   <a>$sel:routeResponseKey:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_routeResponseKey</a> - The route response key.
--   
--   <a>$sel:responseParameters:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_responseParameters</a> - The route response
--   parameters.
--   
--   <a>$sel:routeResponseId:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_routeResponseId</a> - The route response ID.
--   
--   <a>$sel:apiId:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:routeId:UpdateRouteResponse'</a>,
--   <a>updateRouteResponse_routeId</a> - The route ID.
newUpdateRouteResponse :: Text -> Text -> Text -> UpdateRouteResponse

-- | <i>See:</i> <a>newUpdateRouteResponseResponse</a> smart constructor.
data UpdateRouteResponseResponse
UpdateRouteResponseResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Int -> UpdateRouteResponseResponse

-- | Create a value of <a>UpdateRouteResponseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:UpdateRouteResponse'</a>,
--   <a>updateRouteResponseResponse_modelSelectionExpression</a> -
--   Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:responseModels:UpdateRouteResponse'</a>,
--   <a>updateRouteResponseResponse_responseModels</a> - Represents the
--   response models of a route response.
--   
--   <a>$sel:routeResponseId:UpdateRouteResponse'</a>,
--   <a>updateRouteResponseResponse_routeResponseId</a> - Represents the
--   identifier of a route response.
--   
--   <a>$sel:routeResponseKey:UpdateRouteResponse'</a>,
--   <a>updateRouteResponseResponse_routeResponseKey</a> - Represents the
--   route response key of a route response.
--   
--   <a>$sel:responseParameters:UpdateRouteResponse'</a>,
--   <a>updateRouteResponseResponse_responseParameters</a> - Represents the
--   response parameters of a route response.
--   
--   <a>$sel:httpStatus:UpdateRouteResponseResponse'</a>,
--   <a>updateRouteResponseResponse_httpStatus</a> - The response's http
--   status code.
newUpdateRouteResponseResponse :: Int -> UpdateRouteResponseResponse

-- | <i>See:</i> <a>newGetVpcLink</a> smart constructor.
data GetVpcLink
GetVpcLink' :: Text -> GetVpcLink

-- | Create a value of <a>GetVpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcLinkId:GetVpcLink'</a>, <a>getVpcLink_vpcLinkId</a> - The
--   ID of the VPC link.
newGetVpcLink :: Text -> GetVpcLink

-- | <i>See:</i> <a>newGetVpcLinkResponse</a> smart constructor.
data GetVpcLinkResponse
GetVpcLinkResponse' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe VpcLinkVersion -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe VpcLinkStatus -> Int -> GetVpcLinkResponse

-- | Create a value of <a>GetVpcLinkResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_securityGroupIds</a> - A list of security group
--   IDs for the VPC link.
--   
--   <a>$sel:subnetIds:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_subnetIds</a> - A list of subnet IDs to include
--   in the VPC link.
--   
--   <a>$sel:vpcLinkId:GetVpcLink'</a>, <a>getVpcLinkResponse_vpcLinkId</a>
--   - The ID of the VPC link.
--   
--   <a>$sel:createdDate:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_createdDate</a> - The timestamp when the VPC
--   link was created.
--   
--   <a>$sel:vpcLinkVersion:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_vpcLinkVersion</a> - The version of the VPC
--   link.
--   
--   <a>$sel:name:GetVpcLinkResponse'</a>, <a>getVpcLinkResponse_name</a> -
--   The name of the VPC link.
--   
--   <a>$sel:vpcLinkStatusMessage:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_vpcLinkStatusMessage</a> - A message summarizing
--   the cause of the status of the VPC link.
--   
--   <a>$sel:tags:GetVpcLinkResponse'</a>, <a>getVpcLinkResponse_tags</a> -
--   Tags for the VPC link.
--   
--   <a>$sel:vpcLinkStatus:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_vpcLinkStatus</a> - The status of the VPC link.
--   
--   <a>$sel:httpStatus:GetVpcLinkResponse'</a>,
--   <a>getVpcLinkResponse_httpStatus</a> - The response's http status
--   code.
newGetVpcLinkResponse :: Int -> GetVpcLinkResponse

-- | <i>See:</i> <a>newResetAuthorizersCache</a> smart constructor.
data ResetAuthorizersCache
ResetAuthorizersCache' :: Text -> Text -> ResetAuthorizersCache

-- | Create a value of <a>ResetAuthorizersCache</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:ResetAuthorizersCache'</a>,
--   <a>resetAuthorizersCache_stageName</a> - The stage name. Stage names
--   can contain only alphanumeric characters, hyphens, and underscores, or
--   be $default. Maximum length is 128 characters.
--   
--   <a>$sel:apiId:ResetAuthorizersCache'</a>,
--   <a>resetAuthorizersCache_apiId</a> - The API identifier.
newResetAuthorizersCache :: Text -> Text -> ResetAuthorizersCache

-- | <i>See:</i> <a>newResetAuthorizersCacheResponse</a> smart constructor.
data ResetAuthorizersCacheResponse
ResetAuthorizersCacheResponse' :: ResetAuthorizersCacheResponse

-- | Create a value of <a>ResetAuthorizersCacheResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newResetAuthorizersCacheResponse :: ResetAuthorizersCacheResponse

-- | Creates a new Model.
--   
--   <i>See:</i> <a>newCreateModel</a> smart constructor.
data CreateModel
CreateModel' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> CreateModel

-- | Create a value of <a>CreateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:description:CreateModel'</a>, <a>createModel_description</a> -
--   The description of the model.
--   
--   <a>$sel:contentType:CreateModel'</a>, <a>createModel_contentType</a> -
--   The content-type for the model, for example, "application/json".
--   
--   <a>$sel:apiId:CreateModel'</a>, <a>createModel_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:schema:CreateModel'</a>, <a>createModel_schema</a> - The
--   schema for the model. For application/json models, this should be JSON
--   schema draft 4 model.
--   
--   <a>$sel:name:CreateModel'</a>, <a>createModel_name</a> - The name of
--   the model. Must be alphanumeric.
newCreateModel :: Text -> Text -> Text -> CreateModel

-- | <i>See:</i> <a>newCreateModelResponse</a> smart constructor.
data CreateModelResponse
CreateModelResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateModelResponse

-- | Create a value of <a>CreateModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:CreateModelResponse'</a>,
--   <a>createModelResponse_modelId</a> - The model identifier.
--   
--   <a>$sel:schema:CreateModel'</a>, <a>createModelResponse_schema</a> -
--   The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
--   
--   <a>$sel:name:CreateModel'</a>, <a>createModelResponse_name</a> - The
--   name of the model. Must be alphanumeric.
--   
--   <a>$sel:description:CreateModel'</a>,
--   <a>createModelResponse_description</a> - The description of the model.
--   
--   <a>$sel:contentType:CreateModel'</a>,
--   <a>createModelResponse_contentType</a> - The content-type for the
--   model, for example, "application/json".
--   
--   <a>$sel:httpStatus:CreateModelResponse'</a>,
--   <a>createModelResponse_httpStatus</a> - The response's http status
--   code.
newCreateModelResponse :: Int -> CreateModelResponse

-- | <i>See:</i> <a>newGetIntegrationResponse</a> smart constructor.
data GetIntegrationResponse
GetIntegrationResponse' :: Text -> Text -> Text -> GetIntegrationResponse

-- | Create a value of <a>GetIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:integrationResponseId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_integrationResponseId</a> - The integration
--   response ID.
--   
--   <a>$sel:integrationId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponse_integrationId</a> - The integration ID.
newGetIntegrationResponse :: Text -> Text -> Text -> GetIntegrationResponse

-- | <i>See:</i> <a>newGetIntegrationResponseResponse</a> smart
--   constructor.
data GetIntegrationResponseResponse
GetIntegrationResponseResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Int -> GetIntegrationResponseResponse

-- | Create a value of <a>GetIntegrationResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseId:GetIntegrationResponse'</a>,
--   <a>getIntegrationResponseResponse_integrationResponseId</a> - The
--   integration response ID.
--   
--   <a>$sel:integrationResponseKey:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_integrationResponseKey</a> - The
--   integration response key.
--   
--   
--   <a>$sel:templateSelectionExpression:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_templateSelectionExpression</a> -
--   The template selection expressions for the integration response.
--   
--   <a>$sel:contentHandlingStrategy:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_contentHandlingStrategy</a> -
--   Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_responseTemplates</a> - The
--   collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
--   
--   <a>$sel:responseParameters:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_responseParameters</a> - A key-value
--   map specifying response parameters that are passed to the method
--   response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:httpStatus:GetIntegrationResponseResponse'</a>,
--   <a>getIntegrationResponseResponse_httpStatus</a> - The response's http
--   status code.
newGetIntegrationResponseResponse :: Int -> GetIntegrationResponseResponse

-- | Creates a new DomainName resource to represent a domain name.
--   
--   <i>See:</i> <a>newCreateDomainName</a> smart constructor.
data CreateDomainName
CreateDomainName' :: Maybe [DomainNameConfiguration] -> Maybe MutualTlsAuthenticationInput -> Maybe (HashMap Text Text) -> Text -> CreateDomainName

-- | Create a value of <a>CreateDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:CreateDomainName'</a>,
--   <a>createDomainName_domainNameConfigurations</a> - The domain name
--   configurations.
--   
--   <a>$sel:mutualTlsAuthentication:CreateDomainName'</a>,
--   <a>createDomainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name.
--   
--   <a>$sel:tags:CreateDomainName'</a>, <a>createDomainName_tags</a> - The
--   collection of tags associated with a domain name.
--   
--   <a>$sel:domainName:CreateDomainName'</a>,
--   <a>createDomainName_domainName</a> - The domain name.
newCreateDomainName :: Text -> CreateDomainName

-- | <i>See:</i> <a>newCreateDomainNameResponse</a> smart constructor.
data CreateDomainNameResponse
CreateDomainNameResponse' :: Maybe [DomainNameConfiguration] -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateDomainNameResponse

-- | Create a value of <a>CreateDomainNameResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:CreateDomainName'</a>,
--   <a>createDomainNameResponse_domainNameConfigurations</a> - The domain
--   name configurations.
--   
--   <a>$sel:domainName:CreateDomainName'</a>,
--   <a>createDomainNameResponse_domainName</a> - The name of the
--   DomainName resource.
--   
--   <a>$sel:mutualTlsAuthentication:CreateDomainName'</a>,
--   <a>createDomainNameResponse_mutualTlsAuthentication</a> - The mutual
--   TLS authentication configuration for a custom domain name.
--   
--   <a>$sel:apiMappingSelectionExpression:CreateDomainNameResponse'</a>,
--   <a>createDomainNameResponse_apiMappingSelectionExpression</a> - The
--   API mapping selection expression.
--   
--   <a>$sel:tags:CreateDomainName'</a>,
--   <a>createDomainNameResponse_tags</a> - The collection of tags
--   associated with a domain name.
--   
--   <a>$sel:httpStatus:CreateDomainNameResponse'</a>,
--   <a>createDomainNameResponse_httpStatus</a> - The response's http
--   status code.
newCreateDomainNameResponse :: Int -> CreateDomainNameResponse

-- | <i>See:</i> <a>newDeleteModel</a> smart constructor.
data DeleteModel
DeleteModel' :: Text -> Text -> DeleteModel

-- | Create a value of <a>DeleteModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:DeleteModel'</a>, <a>deleteModel_modelId</a> - The
--   model ID.
--   
--   <a>$sel:apiId:DeleteModel'</a>, <a>deleteModel_apiId</a> - The API
--   identifier.
newDeleteModel :: Text -> Text -> DeleteModel

-- | <i>See:</i> <a>newDeleteModelResponse</a> smart constructor.
data DeleteModelResponse
DeleteModelResponse' :: DeleteModelResponse

-- | Create a value of <a>DeleteModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteModelResponse :: DeleteModelResponse

-- | Updates a Model.
--   
--   <i>See:</i> <a>newUpdateModel</a> smart constructor.
data UpdateModel
UpdateModel' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Text -> UpdateModel

-- | Create a value of <a>UpdateModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:schema:UpdateModel'</a>, <a>updateModel_schema</a> - The
--   schema for the model. For application/json models, this should be JSON
--   schema draft 4 model.
--   
--   <a>$sel:name:UpdateModel'</a>, <a>updateModel_name</a> - The name of
--   the model.
--   
--   <a>$sel:description:UpdateModel'</a>, <a>updateModel_description</a> -
--   The description of the model.
--   
--   <a>$sel:contentType:UpdateModel'</a>, <a>updateModel_contentType</a> -
--   The content-type for the model, for example, "application/json".
--   
--   <a>$sel:modelId:UpdateModel'</a>, <a>updateModel_modelId</a> - The
--   model ID.
--   
--   <a>$sel:apiId:UpdateModel'</a>, <a>updateModel_apiId</a> - The API
--   identifier.
newUpdateModel :: Text -> Text -> UpdateModel

-- | <i>See:</i> <a>newUpdateModelResponse</a> smart constructor.
data UpdateModelResponse
UpdateModelResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateModelResponse

-- | Create a value of <a>UpdateModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:UpdateModel'</a>, <a>updateModelResponse_modelId</a> -
--   The model identifier.
--   
--   <a>$sel:schema:UpdateModel'</a>, <a>updateModelResponse_schema</a> -
--   The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
--   
--   <a>$sel:name:UpdateModel'</a>, <a>updateModelResponse_name</a> - The
--   name of the model. Must be alphanumeric.
--   
--   <a>$sel:description:UpdateModel'</a>,
--   <a>updateModelResponse_description</a> - The description of the model.
--   
--   <a>$sel:contentType:UpdateModel'</a>,
--   <a>updateModelResponse_contentType</a> - The content-type for the
--   model, for example, "application/json".
--   
--   <a>$sel:httpStatus:UpdateModelResponse'</a>,
--   <a>updateModelResponse_httpStatus</a> - The response's http status
--   code.
newUpdateModelResponse :: Int -> UpdateModelResponse

-- | Creates a new RouteResponse resource to represent a route response.
--   
--   <i>See:</i> <a>newCreateRouteResponse</a> smart constructor.
data CreateRouteResponse
CreateRouteResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe (HashMap Text ParameterConstraints) -> Text -> Text -> Text -> CreateRouteResponse

-- | Create a value of <a>CreateRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:CreateRouteResponse'</a>,
--   <a>createRouteResponse_modelSelectionExpression</a> - The model
--   selection expression for the route response. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:responseModels:CreateRouteResponse'</a>,
--   <a>createRouteResponse_responseModels</a> - The response models for
--   the route response.
--   
--   <a>$sel:responseParameters:CreateRouteResponse'</a>,
--   <a>createRouteResponse_responseParameters</a> - The route response
--   parameters.
--   
--   <a>$sel:apiId:CreateRouteResponse'</a>,
--   <a>createRouteResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:routeId:CreateRouteResponse'</a>,
--   <a>createRouteResponse_routeId</a> - The route ID.
--   
--   <a>$sel:routeResponseKey:CreateRouteResponse'</a>,
--   <a>createRouteResponse_routeResponseKey</a> - The route response key.
newCreateRouteResponse :: Text -> Text -> Text -> CreateRouteResponse

-- | <i>See:</i> <a>newCreateRouteResponseResponse</a> smart constructor.
data CreateRouteResponseResponse
CreateRouteResponseResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Int -> CreateRouteResponseResponse

-- | Create a value of <a>CreateRouteResponseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:CreateRouteResponse'</a>,
--   <a>createRouteResponseResponse_modelSelectionExpression</a> -
--   Represents the model selection expression of a route response.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:responseModels:CreateRouteResponse'</a>,
--   <a>createRouteResponseResponse_responseModels</a> - Represents the
--   response models of a route response.
--   
--   <a>$sel:routeResponseId:CreateRouteResponseResponse'</a>,
--   <a>createRouteResponseResponse_routeResponseId</a> - Represents the
--   identifier of a route response.
--   
--   <a>$sel:routeResponseKey:CreateRouteResponse'</a>,
--   <a>createRouteResponseResponse_routeResponseKey</a> - Represents the
--   route response key of a route response.
--   
--   <a>$sel:responseParameters:CreateRouteResponse'</a>,
--   <a>createRouteResponseResponse_responseParameters</a> - Represents the
--   response parameters of a route response.
--   
--   <a>$sel:httpStatus:CreateRouteResponseResponse'</a>,
--   <a>createRouteResponseResponse_httpStatus</a> - The response's http
--   status code.
newCreateRouteResponseResponse :: Int -> CreateRouteResponseResponse

-- | <i>See:</i> <a>newGetStages</a> smart constructor.
data GetStages
GetStages' :: Maybe Text -> Maybe Text -> Text -> GetStages

-- | Create a value of <a>GetStages</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetStages'</a>, <a>getStages_nextToken</a> - The
--   next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:maxResults:GetStages'</a>, <a>getStages_maxResults</a> - The
--   maximum number of elements to be returned for this resource.
--   
--   <a>$sel:apiId:GetStages'</a>, <a>getStages_apiId</a> - The API
--   identifier.
newGetStages :: Text -> GetStages

-- | <i>See:</i> <a>newGetStagesResponse</a> smart constructor.
data GetStagesResponse
GetStagesResponse' :: Maybe [Stage] -> Maybe Text -> Int -> GetStagesResponse

-- | Create a value of <a>GetStagesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetStagesResponse'</a>, <a>getStagesResponse_items</a> -
--   The elements from this collection.
--   
--   <a>$sel:nextToken:GetStages'</a>, <a>getStagesResponse_nextToken</a> -
--   The next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:httpStatus:GetStagesResponse'</a>,
--   <a>getStagesResponse_httpStatus</a> - The response's http status code.
newGetStagesResponse :: Int -> GetStagesResponse

-- | <i>See:</i> <a>newGetModel</a> smart constructor.
data GetModel
GetModel' :: Text -> Text -> GetModel

-- | Create a value of <a>GetModel</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:GetModel'</a>, <a>getModel_modelId</a> - The model ID.
--   
--   <a>$sel:apiId:GetModel'</a>, <a>getModel_apiId</a> - The API
--   identifier.
newGetModel :: Text -> Text -> GetModel

-- | <i>See:</i> <a>newGetModelResponse</a> smart constructor.
data GetModelResponse
GetModelResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetModelResponse

-- | Create a value of <a>GetModelResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:GetModel'</a>, <a>getModelResponse_modelId</a> - The
--   model identifier.
--   
--   <a>$sel:schema:GetModelResponse'</a>, <a>getModelResponse_schema</a> -
--   The schema for the model. For application/json models, this should be
--   JSON schema draft 4 model.
--   
--   <a>$sel:name:GetModelResponse'</a>, <a>getModelResponse_name</a> - The
--   name of the model. Must be alphanumeric.
--   
--   <a>$sel:description:GetModelResponse'</a>,
--   <a>getModelResponse_description</a> - The description of the model.
--   
--   <a>$sel:contentType:GetModelResponse'</a>,
--   <a>getModelResponse_contentType</a> - The content-type for the model,
--   for example, "application/json".
--   
--   <a>$sel:httpStatus:GetModelResponse'</a>,
--   <a>getModelResponse_httpStatus</a> - The response's http status code.
newGetModelResponse :: Int -> GetModelResponse

-- | <i>See:</i> <a>newGetApiMappings</a> smart constructor.
data GetApiMappings
GetApiMappings' :: Maybe Text -> Maybe Text -> Text -> GetApiMappings

-- | Create a value of <a>GetApiMappings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetApiMappings'</a>, <a>getApiMappings_nextToken</a>
--   - The next page of elements from this collection. Not valid for the
--   last element of the collection.
--   
--   <a>$sel:maxResults:GetApiMappings'</a>,
--   <a>getApiMappings_maxResults</a> - The maximum number of elements to
--   be returned for this resource.
--   
--   <a>$sel:domainName:GetApiMappings'</a>,
--   <a>getApiMappings_domainName</a> - The domain name.
newGetApiMappings :: Text -> GetApiMappings

-- | <i>See:</i> <a>newGetApiMappingsResponse</a> smart constructor.
data GetApiMappingsResponse
GetApiMappingsResponse' :: Maybe [ApiMapping] -> Maybe Text -> Int -> GetApiMappingsResponse

-- | Create a value of <a>GetApiMappingsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetApiMappingsResponse'</a>,
--   <a>getApiMappingsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetApiMappings'</a>,
--   <a>getApiMappingsResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetApiMappingsResponse'</a>,
--   <a>getApiMappingsResponse_httpStatus</a> - The response's http status
--   code.
newGetApiMappingsResponse :: Int -> GetApiMappingsResponse

-- | Creates a new IntegrationResponse resource to represent an integration
--   response.
--   
--   <i>See:</i> <a>newCreateIntegrationResponse</a> smart constructor.
data CreateIntegrationResponse
CreateIntegrationResponse' :: Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> CreateIntegrationResponse

-- | Create a value of <a>CreateIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:templateSelectionExpression:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_templateSelectionExpression</a> - The
--   template selection expression for the integration response. Supported
--   only for WebSocket APIs.
--   
--   <a>$sel:contentHandlingStrategy:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_contentHandlingStrategy</a> - Specifies
--   how to handle response payload content type conversions. Supported
--   values are CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following
--   behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_responseTemplates</a> - The collection of
--   response templates for the integration response as a string-to-string
--   map of key-value pairs. Response templates are represented as a
--   key/value map, with a content-type as the key and a template as the
--   value.
--   
--   <a>$sel:responseParameters:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the backend. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of method.response.header.{name}, where {name} is a valid and
--   unique header name. The mapped non-static value must match the pattern
--   of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where {name} is a valid
--   and unique response header name and {JSON-expression} is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:apiId:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:integrationId:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_integrationId</a> - The integration ID.
--   
--   <a>$sel:integrationResponseKey:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponse_integrationResponseKey</a> - The
--   integration response key.
newCreateIntegrationResponse :: Text -> Text -> Text -> CreateIntegrationResponse

-- | <i>See:</i> <a>newCreateIntegrationResponseResponse</a> smart
--   constructor.
data CreateIntegrationResponseResponse
CreateIntegrationResponseResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Int -> CreateIntegrationResponseResponse

-- | Create a value of <a>CreateIntegrationResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseId:CreateIntegrationResponseResponse'</a>,
--   <a>createIntegrationResponseResponse_integrationResponseId</a> - The
--   integration response ID.
--   
--   <a>$sel:integrationResponseKey:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponseResponse_integrationResponseKey</a> - The
--   integration response key.
--   
--   <a>$sel:templateSelectionExpression:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponseResponse_templateSelectionExpression</a> -
--   The template selection expressions for the integration response.
--   
--   <a>$sel:contentHandlingStrategy:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponseResponse_contentHandlingStrategy</a> -
--   Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponseResponse_responseTemplates</a> - The
--   collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
--   
--   <a>$sel:responseParameters:CreateIntegrationResponse'</a>,
--   <a>createIntegrationResponseResponse_responseParameters</a> - A
--   key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:httpStatus:CreateIntegrationResponseResponse'</a>,
--   <a>createIntegrationResponseResponse_httpStatus</a> - The response's
--   http status code.
newCreateIntegrationResponseResponse :: Int -> CreateIntegrationResponseResponse

-- | <i>See:</i> <a>newGetDomainName</a> smart constructor.
data GetDomainName
GetDomainName' :: Text -> GetDomainName

-- | Create a value of <a>GetDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:GetDomainName'</a>, <a>getDomainName_domainName</a>
--   - The domain name.
newGetDomainName :: Text -> GetDomainName

-- | <i>See:</i> <a>newGetDomainNameResponse</a> smart constructor.
data GetDomainNameResponse
GetDomainNameResponse' :: Maybe [DomainNameConfiguration] -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetDomainNameResponse

-- | Create a value of <a>GetDomainNameResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:GetDomainNameResponse'</a>,
--   <a>getDomainNameResponse_domainNameConfigurations</a> - The domain
--   name configurations.
--   
--   <a>$sel:domainName:GetDomainName'</a>,
--   <a>getDomainNameResponse_domainName</a> - The name of the DomainName
--   resource.
--   
--   <a>$sel:mutualTlsAuthentication:GetDomainNameResponse'</a>,
--   <a>getDomainNameResponse_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name.
--   
--   <a>$sel:apiMappingSelectionExpression:GetDomainNameResponse'</a>,
--   <a>getDomainNameResponse_apiMappingSelectionExpression</a> - The API
--   mapping selection expression.
--   
--   <a>$sel:tags:GetDomainNameResponse'</a>,
--   <a>getDomainNameResponse_tags</a> - The collection of tags associated
--   with a domain name.
--   
--   <a>$sel:httpStatus:GetDomainNameResponse'</a>,
--   <a>getDomainNameResponse_httpStatus</a> - The response's http status
--   code.
newGetDomainNameResponse :: Int -> GetDomainNameResponse

-- | Creates a VPC link
--   
--   <i>See:</i> <a>newCreateVpcLink</a> smart constructor.
data CreateVpcLink
CreateVpcLink' :: Maybe [Text] -> Maybe (HashMap Text Text) -> [Text] -> Text -> CreateVpcLink

-- | Create a value of <a>CreateVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:CreateVpcLink'</a>,
--   <a>createVpcLink_securityGroupIds</a> - A list of security group IDs
--   for the VPC link.
--   
--   <a>$sel:tags:CreateVpcLink'</a>, <a>createVpcLink_tags</a> - A list of
--   tags.
--   
--   <a>$sel:subnetIds:CreateVpcLink'</a>, <a>createVpcLink_subnetIds</a> -
--   A list of subnet IDs to include in the VPC link.
--   
--   <a>$sel:name:CreateVpcLink'</a>, <a>createVpcLink_name</a> - The name
--   of the VPC link.
newCreateVpcLink :: Text -> CreateVpcLink

-- | <i>See:</i> <a>newCreateVpcLinkResponse</a> smart constructor.
data CreateVpcLinkResponse
CreateVpcLinkResponse' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe VpcLinkVersion -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe VpcLinkStatus -> Int -> CreateVpcLinkResponse

-- | Create a value of <a>CreateVpcLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:CreateVpcLink'</a>,
--   <a>createVpcLinkResponse_securityGroupIds</a> - A list of security
--   group IDs for the VPC link.
--   
--   <a>$sel:subnetIds:CreateVpcLink'</a>,
--   <a>createVpcLinkResponse_subnetIds</a> - A list of subnet IDs to
--   include in the VPC link.
--   
--   <a>$sel:vpcLinkId:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_vpcLinkId</a> - The ID of the VPC link.
--   
--   <a>$sel:createdDate:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_createdDate</a> - The timestamp when the VPC
--   link was created.
--   
--   <a>$sel:vpcLinkVersion:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_vpcLinkVersion</a> - The version of the VPC
--   link.
--   
--   <a>$sel:name:CreateVpcLink'</a>, <a>createVpcLinkResponse_name</a> -
--   The name of the VPC link.
--   
--   <a>$sel:vpcLinkStatusMessage:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_vpcLinkStatusMessage</a> - A message
--   summarizing the cause of the status of the VPC link.
--   
--   <a>$sel:tags:CreateVpcLink'</a>, <a>createVpcLinkResponse_tags</a> -
--   Tags for the VPC link.
--   
--   <a>$sel:vpcLinkStatus:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_vpcLinkStatus</a> - The status of the VPC
--   link.
--   
--   <a>$sel:httpStatus:CreateVpcLinkResponse'</a>,
--   <a>createVpcLinkResponse_httpStatus</a> - The response's http status
--   code.
newCreateVpcLinkResponse :: Int -> CreateVpcLinkResponse

-- | <i>See:</i> <a>newGetAuthorizers</a> smart constructor.
data GetAuthorizers
GetAuthorizers' :: Maybe Text -> Maybe Text -> Text -> GetAuthorizers

-- | Create a value of <a>GetAuthorizers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetAuthorizers'</a>, <a>getAuthorizers_nextToken</a>
--   - The next page of elements from this collection. Not valid for the
--   last element of the collection.
--   
--   <a>$sel:maxResults:GetAuthorizers'</a>,
--   <a>getAuthorizers_maxResults</a> - The maximum number of elements to
--   be returned for this resource.
--   
--   <a>$sel:apiId:GetAuthorizers'</a>, <a>getAuthorizers_apiId</a> - The
--   API identifier.
newGetAuthorizers :: Text -> GetAuthorizers

-- | <i>See:</i> <a>newGetAuthorizersResponse</a> smart constructor.
data GetAuthorizersResponse
GetAuthorizersResponse' :: Maybe [Authorizer] -> Maybe Text -> Int -> GetAuthorizersResponse

-- | Create a value of <a>GetAuthorizersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetAuthorizersResponse'</a>,
--   <a>getAuthorizersResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetAuthorizers'</a>,
--   <a>getAuthorizersResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetAuthorizersResponse'</a>,
--   <a>getAuthorizersResponse_httpStatus</a> - The response's http status
--   code.
newGetAuthorizersResponse :: Int -> GetAuthorizersResponse

-- | <i>See:</i> <a>newGetRouteResponse</a> smart constructor.
data GetRouteResponse
GetRouteResponse' :: Text -> Text -> Text -> GetRouteResponse

-- | Create a value of <a>GetRouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:routeResponseId:GetRouteResponse'</a>,
--   <a>getRouteResponse_routeResponseId</a> - The route response ID.
--   
--   <a>$sel:apiId:GetRouteResponse'</a>, <a>getRouteResponse_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:routeId:GetRouteResponse'</a>, <a>getRouteResponse_routeId</a>
--   - The route ID.
newGetRouteResponse :: Text -> Text -> Text -> GetRouteResponse

-- | <i>See:</i> <a>newGetRouteResponseResponse</a> smart constructor.
data GetRouteResponseResponse
GetRouteResponseResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Int -> GetRouteResponseResponse

-- | Create a value of <a>GetRouteResponseResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:GetRouteResponseResponse'</a>,
--   <a>getRouteResponseResponse_modelSelectionExpression</a> - Represents
--   the model selection expression of a route response. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:responseModels:GetRouteResponseResponse'</a>,
--   <a>getRouteResponseResponse_responseModels</a> - Represents the
--   response models of a route response.
--   
--   <a>$sel:routeResponseId:GetRouteResponse'</a>,
--   <a>getRouteResponseResponse_routeResponseId</a> - Represents the
--   identifier of a route response.
--   
--   <a>$sel:routeResponseKey:GetRouteResponseResponse'</a>,
--   <a>getRouteResponseResponse_routeResponseKey</a> - Represents the
--   route response key of a route response.
--   
--   <a>$sel:responseParameters:GetRouteResponseResponse'</a>,
--   <a>getRouteResponseResponse_responseParameters</a> - Represents the
--   response parameters of a route response.
--   
--   <a>$sel:httpStatus:GetRouteResponseResponse'</a>,
--   <a>getRouteResponseResponse_httpStatus</a> - The response's http
--   status code.
newGetRouteResponseResponse :: Int -> GetRouteResponseResponse

-- | <i>See:</i> <a>newExportApi</a> smart constructor.
data ExportApi
ExportApi' :: Maybe Text -> Maybe Text -> Maybe Bool -> Text -> Text -> Text -> ExportApi

-- | Create a value of <a>ExportApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:exportVersion:ExportApi'</a>, <a>exportApi_exportVersion</a> -
--   The version of the API Gateway export algorithm. API Gateway uses the
--   latest version by default. Currently, the only supported version is
--   1.0.
--   
--   <a>$sel:stageName:ExportApi'</a>, <a>exportApi_stageName</a> - The
--   name of the API stage to export. If you don't specify this property, a
--   representation of the latest API configuration is exported.
--   
--   <a>$sel:includeExtensions:ExportApi'</a>,
--   <a>exportApi_includeExtensions</a> - Specifies whether to include
--   <a>API Gateway extensions</a> in the exported API definition. API
--   Gateway extensions are included by default.
--   
--   <a>$sel:specification:ExportApi'</a>, <a>exportApi_specification</a> -
--   The version of the API specification to use. OAS30, for OpenAPI 3.0,
--   is the only supported value.
--   
--   <a>$sel:outputType:ExportApi'</a>, <a>exportApi_outputType</a> - The
--   output type of the exported definition file. Valid values are JSON and
--   YAML.
--   
--   <a>$sel:apiId:ExportApi'</a>, <a>exportApi_apiId</a> - The API
--   identifier.
newExportApi :: Text -> Text -> Text -> ExportApi

-- | <i>See:</i> <a>newExportApiResponse</a> smart constructor.
data ExportApiResponse
ExportApiResponse' :: Maybe ByteString -> Int -> ExportApiResponse

-- | Create a value of <a>ExportApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:body:ExportApiResponse'</a>, <a>exportApiResponse_body</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:ExportApiResponse'</a>,
--   <a>exportApiResponse_httpStatus</a> - The response's http status code.
newExportApiResponse :: Int -> ExportApiResponse

-- | <i>See:</i> <a>newGetRoutes</a> smart constructor.
data GetRoutes
GetRoutes' :: Maybe Text -> Maybe Text -> Text -> GetRoutes

-- | Create a value of <a>GetRoutes</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetRoutes'</a>, <a>getRoutes_nextToken</a> - The
--   next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:maxResults:GetRoutes'</a>, <a>getRoutes_maxResults</a> - The
--   maximum number of elements to be returned for this resource.
--   
--   <a>$sel:apiId:GetRoutes'</a>, <a>getRoutes_apiId</a> - The API
--   identifier.
newGetRoutes :: Text -> GetRoutes

-- | <i>See:</i> <a>newGetRoutesResponse</a> smart constructor.
data GetRoutesResponse
GetRoutesResponse' :: Maybe [Route] -> Maybe Text -> Int -> GetRoutesResponse

-- | Create a value of <a>GetRoutesResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetRoutesResponse'</a>, <a>getRoutesResponse_items</a> -
--   The elements from this collection.
--   
--   <a>$sel:nextToken:GetRoutes'</a>, <a>getRoutesResponse_nextToken</a> -
--   The next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:httpStatus:GetRoutesResponse'</a>,
--   <a>getRoutesResponse_httpStatus</a> - The response's http status code.
newGetRoutesResponse :: Int -> GetRoutesResponse

-- | <i>See:</i> <a>newDeleteCorsConfiguration</a> smart constructor.
data DeleteCorsConfiguration
DeleteCorsConfiguration' :: Text -> DeleteCorsConfiguration

-- | Create a value of <a>DeleteCorsConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteCorsConfiguration'</a>,
--   <a>deleteCorsConfiguration_apiId</a> - The API identifier.
newDeleteCorsConfiguration :: Text -> DeleteCorsConfiguration

-- | <i>See:</i> <a>newDeleteCorsConfigurationResponse</a> smart
--   constructor.
data DeleteCorsConfigurationResponse
DeleteCorsConfigurationResponse' :: DeleteCorsConfigurationResponse

-- | Create a value of <a>DeleteCorsConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteCorsConfigurationResponse :: DeleteCorsConfigurationResponse

-- | <i>See:</i> <a>newDeleteVpcLink</a> smart constructor.
data DeleteVpcLink
DeleteVpcLink' :: Text -> DeleteVpcLink

-- | Create a value of <a>DeleteVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcLinkId:DeleteVpcLink'</a>, <a>deleteVpcLink_vpcLinkId</a> -
--   The ID of the VPC link.
newDeleteVpcLink :: Text -> DeleteVpcLink

-- | <i>See:</i> <a>newDeleteVpcLinkResponse</a> smart constructor.
data DeleteVpcLinkResponse
DeleteVpcLinkResponse' :: Int -> DeleteVpcLinkResponse

-- | Create a value of <a>DeleteVpcLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteVpcLinkResponse'</a>,
--   <a>deleteVpcLinkResponse_httpStatus</a> - The response's http status
--   code.
newDeleteVpcLinkResponse :: Int -> DeleteVpcLinkResponse

-- | Updates a VPC link.
--   
--   <i>See:</i> <a>newUpdateVpcLink</a> smart constructor.
data UpdateVpcLink
UpdateVpcLink' :: Maybe Text -> Text -> UpdateVpcLink

-- | Create a value of <a>UpdateVpcLink</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:UpdateVpcLink'</a>, <a>updateVpcLink_name</a> - The name
--   of the VPC link.
--   
--   <a>$sel:vpcLinkId:UpdateVpcLink'</a>, <a>updateVpcLink_vpcLinkId</a> -
--   The ID of the VPC link.
newUpdateVpcLink :: Text -> UpdateVpcLink

-- | <i>See:</i> <a>newUpdateVpcLinkResponse</a> smart constructor.
data UpdateVpcLinkResponse
UpdateVpcLinkResponse' :: Maybe [Text] -> Maybe [Text] -> Maybe Text -> Maybe POSIX -> Maybe VpcLinkVersion -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe VpcLinkStatus -> Int -> UpdateVpcLinkResponse

-- | Create a value of <a>UpdateVpcLinkResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:securityGroupIds:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_securityGroupIds</a> - A list of security
--   group IDs for the VPC link.
--   
--   <a>$sel:subnetIds:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_subnetIds</a> - A list of subnet IDs to
--   include in the VPC link.
--   
--   <a>$sel:vpcLinkId:UpdateVpcLink'</a>,
--   <a>updateVpcLinkResponse_vpcLinkId</a> - The ID of the VPC link.
--   
--   <a>$sel:createdDate:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_createdDate</a> - The timestamp when the VPC
--   link was created.
--   
--   <a>$sel:vpcLinkVersion:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_vpcLinkVersion</a> - The version of the VPC
--   link.
--   
--   <a>$sel:name:UpdateVpcLink'</a>, <a>updateVpcLinkResponse_name</a> -
--   The name of the VPC link.
--   
--   <a>$sel:vpcLinkStatusMessage:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_vpcLinkStatusMessage</a> - A message
--   summarizing the cause of the status of the VPC link.
--   
--   <a>$sel:tags:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_tags</a> - Tags for the VPC link.
--   
--   <a>$sel:vpcLinkStatus:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_vpcLinkStatus</a> - The status of the VPC
--   link.
--   
--   <a>$sel:httpStatus:UpdateVpcLinkResponse'</a>,
--   <a>updateVpcLinkResponse_httpStatus</a> - The response's http status
--   code.
newUpdateVpcLinkResponse :: Int -> UpdateVpcLinkResponse

-- | <i>See:</i> <a>newDeleteIntegrationResponse</a> smart constructor.
data DeleteIntegrationResponse
DeleteIntegrationResponse' :: Text -> Text -> Text -> DeleteIntegrationResponse

-- | Create a value of <a>DeleteIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:integrationResponseId:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_integrationResponseId</a> - The
--   integration response ID.
--   
--   <a>$sel:integrationId:DeleteIntegrationResponse'</a>,
--   <a>deleteIntegrationResponse_integrationId</a> - The integration ID.
newDeleteIntegrationResponse :: Text -> Text -> Text -> DeleteIntegrationResponse

-- | <i>See:</i> <a>newDeleteIntegrationResponseResponse</a> smart
--   constructor.
data DeleteIntegrationResponseResponse
DeleteIntegrationResponseResponse' :: DeleteIntegrationResponseResponse

-- | Create a value of <a>DeleteIntegrationResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntegrationResponseResponse :: DeleteIntegrationResponseResponse

-- | Updates an IntegrationResponses.
--   
--   <i>See:</i> <a>newUpdateIntegrationResponse</a> smart constructor.
data UpdateIntegrationResponse
UpdateIntegrationResponse' :: Maybe Text -> Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Text -> Text -> Text -> UpdateIntegrationResponse

-- | Create a value of <a>UpdateIntegrationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseKey:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_integrationResponseKey</a> - The
--   integration response key.
--   
--   <a>$sel:templateSelectionExpression:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_templateSelectionExpression</a> - The
--   template selection expression for the integration response. Supported
--   only for WebSocket APIs.
--   
--   <a>$sel:contentHandlingStrategy:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_contentHandlingStrategy</a> - Supported
--   only for WebSocket APIs. Specifies how to handle response payload
--   content type conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_responseTemplates</a> - The collection of
--   response templates for the integration response as a string-to-string
--   map of key-value pairs. Response templates are represented as a
--   key/value map, with a content-type as the key and a template as the
--   value.
--   
--   <a>$sel:responseParameters:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the backend. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of method.response.header.{name} , where name is a valid and
--   unique header name. The mapped non-static value must match the pattern
--   of integration.response.header.{name} or
--   integration.response.body.{JSON-expression} , where {name} is a valid
--   and unique response header name and {JSON-expression} is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:apiId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:integrationResponseId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_integrationResponseId</a> - The
--   integration response ID.
--   
--   <a>$sel:integrationId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponse_integrationId</a> - The integration ID.
newUpdateIntegrationResponse :: Text -> Text -> Text -> UpdateIntegrationResponse

-- | <i>See:</i> <a>newUpdateIntegrationResponseResponse</a> smart
--   constructor.
data UpdateIntegrationResponseResponse
UpdateIntegrationResponseResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Int -> UpdateIntegrationResponseResponse

-- | Create a value of <a>UpdateIntegrationResponseResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseId:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_integrationResponseId</a> - The
--   integration response ID.
--   
--   <a>$sel:integrationResponseKey:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_integrationResponseKey</a> - The
--   integration response key.
--   
--   <a>$sel:templateSelectionExpression:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_templateSelectionExpression</a> -
--   The template selection expressions for the integration response.
--   
--   <a>$sel:contentHandlingStrategy:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_contentHandlingStrategy</a> -
--   Supported only for WebSocket APIs. Specifies how to handle response
--   payload content type conversions. Supported values are
--   CONVERT_TO_BINARY and CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_responseTemplates</a> - The
--   collection of response templates for the integration response as a
--   string-to-string map of key-value pairs. Response templates are
--   represented as a key/value map, with a content-type as the key and a
--   template as the value.
--   
--   <a>$sel:responseParameters:UpdateIntegrationResponse'</a>,
--   <a>updateIntegrationResponseResponse_responseParameters</a> - A
--   key-value map specifying response parameters that are passed to the
--   method response from the backend. The key is a method response header
--   parameter name and the mapped value is an integration response header
--   value, a static value enclosed within a pair of single quotes, or a
--   JSON expression from the integration response body. The mapping key
--   must match the pattern of method.response.header.{name}, where name is
--   a valid and unique header name. The mapped non-static value must match
--   the pattern of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:httpStatus:UpdateIntegrationResponseResponse'</a>,
--   <a>updateIntegrationResponseResponse_httpStatus</a> - The response's
--   http status code.
newUpdateIntegrationResponseResponse :: Int -> UpdateIntegrationResponseResponse

-- | <i>See:</i> <a>newDeleteIntegration</a> smart constructor.
data DeleteIntegration
DeleteIntegration' :: Text -> Text -> DeleteIntegration

-- | Create a value of <a>DeleteIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteIntegration'</a>, <a>deleteIntegration_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:integrationId:DeleteIntegration'</a>,
--   <a>deleteIntegration_integrationId</a> - The integration ID.
newDeleteIntegration :: Text -> Text -> DeleteIntegration

-- | <i>See:</i> <a>newDeleteIntegrationResponse'</a> smart constructor.
data DeleteIntegrationResponse'
DeleteIntegrationResponse'' :: DeleteIntegrationResponse'

-- | Create a value of <a>DeleteIntegrationResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteIntegrationResponse' :: DeleteIntegrationResponse'

-- | Updates an Integration.
--   
--   <i>See:</i> <a>newUpdateIntegration</a> smart constructor.
data UpdateIntegration
UpdateIntegration' :: Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfigInput -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ContentHandlingStrategy -> Maybe IntegrationType -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Text -> Text -> UpdateIntegration

-- | Create a value of <a>UpdateIntegration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestTemplates:UpdateIntegration'</a>,
--   <a>updateIntegration_requestTemplates</a> - Represents a map of
--   Velocity templates that are applied on the request payload based on
--   the value of the Content-Type header sent by the client. The content
--   type value is the key in this map, and the template (as a String) is
--   the value. Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:UpdateIntegration'</a>,
--   <a>updateIntegration_integrationSubtype</a> - Supported only for HTTP
--   API AWS_PROXY integrations. Specifies the AWS service action to
--   invoke. To learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:UpdateIntegration'</a>,
--   <a>updateIntegration_credentialsArn</a> - Specifies the credentials
--   required for the integration, if any. For AWS integrations, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify the
--   string arn:aws:iam::*:user/*. To use resource-based permissions on
--   supported AWS services, specify null.
--   
--   <a>$sel:integrationUri:UpdateIntegration'</a>,
--   <a>updateIntegration_integrationUri</a> - For a Lambda integration,
--   specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:requestParameters:UpdateIntegration'</a>,
--   <a>updateIntegration_requestParameters</a> - For WebSocket APIs, a
--   key-value map specifying request parameters that are passed from the
--   method request to the backend. The key is an integration request
--   parameter name and the associated value is a method request parameter
--   value or static value that must be enclosed within single quotes and
--   pre-encoded as required by the backend. The method request parameter
--   value must match the pattern of method.request.{location}.{name} ,
--   where {location} is querystring, path, or header; and {name} must be a
--   valid and unique method request parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API integrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to the backend. The key should
--   follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt; where
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:UpdateIntegration'</a>,
--   <a>updateIntegration_connectionId</a> - The ID of the VPC link for a
--   private integration. Supported only for HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:UpdateIntegration'</a>,
--   <a>updateIntegration_passthroughBehavior</a> - Specifies the
--   pass-through behavior for incoming requests based on the Content-Type
--   header in the request, and the available mapping templates specified
--   as the requestTemplates property on the Integration resource. There
--   are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.
--   Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:UpdateIntegration'</a>,
--   <a>updateIntegration_integrationMethod</a> - Specifies the
--   integration's HTTP method type.
--   
--   <a>$sel:tlsConfig:UpdateIntegration'</a>,
--   <a>updateIntegration_tlsConfig</a> - The TLS configuration for a
--   private integration. If you specify a TLS configuration, private
--   integration traffic uses the HTTPS protocol. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:payloadFormatVersion:UpdateIntegration'</a>,
--   <a>updateIntegration_payloadFormatVersion</a> - Specifies the format
--   of the payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:UpdateIntegration'</a>,
--   <a>updateIntegration_templateSelectionExpression</a> - The template
--   selection expression for the integration.
--   
--   <a>$sel:timeoutInMillis:UpdateIntegration'</a>,
--   <a>updateIntegration_timeoutInMillis</a> - Custom timeout between 50
--   and 29,000 milliseconds for WebSocket APIs and between 50 and 30,000
--   milliseconds for HTTP APIs. The default timeout is 29 seconds for
--   WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:contentHandlingStrategy:UpdateIntegration'</a>,
--   <a>updateIntegration_contentHandlingStrategy</a> - Supported only for
--   WebSocket APIs. Specifies how to handle response payload content type
--   conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:integrationType:UpdateIntegration'</a>,
--   <a>updateIntegration_integrationType</a> - The integration type of an
--   integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration. For HTTP API private
--   integrations, use an HTTP_PROXY integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:description:UpdateIntegration'</a>,
--   <a>updateIntegration_description</a> - The description of the
--   integration
--   
--   <a>$sel:connectionType:UpdateIntegration'</a>,
--   <a>updateIntegration_connectionType</a> - The type of the network
--   connection to the integration endpoint. Specify INTERNET for
--   connections through the public routable internet or VPC_LINK for
--   private connections between API Gateway and resources in a VPC. The
--   default value is INTERNET.
--   
--   <a>$sel:responseParameters:UpdateIntegration'</a>,
--   <a>updateIntegration_responseParameters</a> - Supported only for HTTP
--   APIs. You use response parameters to transform the HTTP response from
--   a backend integration before returning the response to clients.
--   Specify a key-value map from a selection key to response parameters.
--   The selection key must be a valid HTTP status code within the range of
--   200-599. Response parameters are a key-value map. The key must match
--   pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:apiId:UpdateIntegration'</a>, <a>updateIntegration_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:integrationId:UpdateIntegration'</a>,
--   <a>updateIntegration_integrationId</a> - The integration ID.
newUpdateIntegration :: Text -> Text -> UpdateIntegration

-- | <i>See:</i> <a>newUpdateIntegrationResponse'</a> smart constructor.
data UpdateIntegrationResponse'
UpdateIntegrationResponse'' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfig -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Bool -> Maybe ContentHandlingStrategy -> Maybe IntegrationType -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Int -> UpdateIntegrationResponse'

-- | Create a value of <a>UpdateIntegrationResponse'</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:integrationResponseSelectionExpression:UpdateIntegrationResponse''</a>,
--   <a>updateIntegrationResponse'_integrationResponseSelectionExpression</a>
--   - The integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
--   
--   <a>$sel:requestTemplates:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_requestTemplates</a> - Represents a map
--   of Velocity templates that are applied on the request payload based on
--   the value of the Content-Type header sent by the client. The content
--   type value is the key in this map, and the template (as a String) is
--   the value. Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_integrationSubtype</a> - Supported only
--   for HTTP API AWS_PROXY integrations. Specifies the AWS service action
--   to invoke. To learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_credentialsArn</a> - Specifies the
--   credentials required for the integration, if any. For AWS
--   integrations, three options are available. To specify an IAM Role for
--   API Gateway to assume, use the role's Amazon Resource Name (ARN). To
--   require that the caller's identity be passed through from the request,
--   specify the string arn:aws:iam::*:user/*. To use resource-based
--   permissions on supported AWS services, specify null.
--   
--   <a>$sel:integrationUri:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_integrationUri</a> - For a Lambda
--   integration, specify the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:integrationId:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_integrationId</a> - Represents the
--   identifier of an integration.
--   
--   <a>$sel:requestParameters:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_requestParameters</a> - For WebSocket
--   APIs, a key-value map specifying request parameters that are passed
--   from the method request to the backend. The key is an integration
--   request parameter name and the associated value is a method request
--   parameter value or static value that must be enclosed within single
--   quotes and pre-encoded as required by the backend. The method request
--   parameter value must match the pattern of
--   method.request.{location}.{name} , where {location} is querystring,
--   path, or header; and {name} must be a valid and unique method request
--   parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_connectionId</a> - The ID of the VPC
--   link for a private integration. Supported only for HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_passthroughBehavior</a> - Specifies the
--   pass-through behavior for incoming requests based on the Content-Type
--   header in the request, and the available mapping templates specified
--   as the requestTemplates property on the Integration resource. There
--   are three valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER.
--   Supported only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_integrationMethod</a> - Specifies the
--   integration's HTTP method type.
--   
--   <a>$sel:tlsConfig:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_tlsConfig</a> - The TLS configuration
--   for a private integration. If you specify a TLS configuration, private
--   integration traffic uses the HTTPS protocol. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:payloadFormatVersion:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_payloadFormatVersion</a> - Specifies the
--   format of the payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_templateSelectionExpression</a> - The
--   template selection expression for the integration. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:timeoutInMillis:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_timeoutInMillis</a> - Custom timeout
--   between 50 and 29,000 milliseconds for WebSocket APIs and between 50
--   and 30,000 milliseconds for HTTP APIs. The default timeout is 29
--   seconds for WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:apiGatewayManaged:UpdateIntegrationResponse''</a>,
--   <a>updateIntegrationResponse'_apiGatewayManaged</a> - Specifies
--   whether an integration is managed by API Gateway. If you created an
--   API using using quick create, the resulting integration is managed by
--   API Gateway. You can update a managed integration, but you can't
--   delete it.
--   
--   <a>$sel:contentHandlingStrategy:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_contentHandlingStrategy</a> - Supported
--   only for WebSocket APIs. Specifies how to handle response payload
--   content type conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:integrationType:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_integrationType</a> - The integration
--   type of an integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:description:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_description</a> - Represents the
--   description of an integration.
--   
--   <a>$sel:connectionType:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_connectionType</a> - The type of the
--   network connection to the integration endpoint. Specify INTERNET for
--   connections through the public routable internet or VPC_LINK for
--   private connections between API Gateway and resources in a VPC. The
--   default value is INTERNET.
--   
--   <a>$sel:responseParameters:UpdateIntegration'</a>,
--   <a>updateIntegrationResponse'_responseParameters</a> - Supported only
--   for HTTP APIs. You use response parameters to transform the HTTP
--   response from a backend integration before returning the response to
--   clients. Specify a key-value map from a selection key to response
--   parameters. The selection key must be a valid HTTP status code within
--   the range of 200-599. Response parameters are a key-value map. The key
--   must match pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:httpStatus:UpdateIntegrationResponse''</a>,
--   <a>updateIntegrationResponse'_httpStatus</a> - The response's http
--   status code.
newUpdateIntegrationResponse' :: Int -> UpdateIntegrationResponse'

-- | <i>See:</i> <a>newGetRoute</a> smart constructor.
data GetRoute
GetRoute' :: Text -> Text -> GetRoute

-- | Create a value of <a>GetRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetRoute'</a>, <a>getRoute_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:routeId:GetRoute'</a>, <a>getRoute_routeId</a> - The route ID.
newGetRoute :: Text -> Text -> GetRoute

-- | <i>See:</i> <a>newGetRouteResponse'</a> smart constructor.
data GetRouteResponse'
GetRouteResponse'' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Maybe Text -> Int -> GetRouteResponse'

-- | Create a value of <a>GetRouteResponse'</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:GetRouteResponse''</a>,
--   <a>getRouteResponse'_authorizationScopes</a> - A list of authorization
--   scopes configured on a route. The scopes are used with a JWT
--   authorizer to authorize the method invocation. The authorization works
--   by matching the route scopes against the scopes parsed from the access
--   token in the incoming request. The method invocation is authorized if
--   any route scope matches a claimed scope in the access token.
--   Otherwise, the invocation is not authorized. When the route scope is
--   configured, the client must provide an access token instead of an
--   identity token for authorization purposes.
--   
--   <a>$sel:modelSelectionExpression:GetRouteResponse''</a>,
--   <a>getRouteResponse'_modelSelectionExpression</a> - The model
--   selection expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:GetRouteResponse''</a>,
--   <a>getRouteResponse'_requestModels</a> - The request models for the
--   route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:GetRouteResponse''</a>,
--   <a>getRouteResponse'_routeResponseSelectionExpression</a> - The route
--   response selection expression for the route. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:requestParameters:GetRouteResponse''</a>,
--   <a>getRouteResponse'_requestParameters</a> - The request parameters
--   for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeId:GetRoute'</a>, <a>getRouteResponse'_routeId</a> - The
--   route ID.
--   
--   <a>$sel:authorizerId:GetRouteResponse''</a>,
--   <a>getRouteResponse'_authorizerId</a> - The identifier of the
--   Authorizer resource to be associated with this route. The authorizer
--   identifier is generated by API Gateway when you created the
--   authorizer.
--   
--   <a>$sel:operationName:GetRouteResponse''</a>,
--   <a>getRouteResponse'_operationName</a> - The operation name for the
--   route.
--   
--   <a>$sel:apiGatewayManaged:GetRouteResponse''</a>,
--   <a>getRouteResponse'_apiGatewayManaged</a> - Specifies whether a route
--   is managed by API Gateway. If you created an API using quick create,
--   the $default route is managed by API Gateway. You can't modify the
--   $default route key.
--   
--   <a>$sel:authorizationType:GetRouteResponse''</a>,
--   <a>getRouteResponse'_authorizationType</a> - The authorization type
--   for the route. For WebSocket APIs, valid values are NONE for open
--   access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a
--   Lambda authorizer For HTTP APIs, valid values are NONE for open
--   access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM
--   permissions, and CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:GetRouteResponse''</a>,
--   <a>getRouteResponse'_apiKeyRequired</a> - Specifies whether an API key
--   is required for this route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeKey:GetRouteResponse''</a>,
--   <a>getRouteResponse'_routeKey</a> - The route key for the route.
--   
--   <a>$sel:target:GetRouteResponse''</a>, <a>getRouteResponse'_target</a>
--   - The target for the route.
--   
--   <a>$sel:httpStatus:GetRouteResponse''</a>,
--   <a>getRouteResponse'_httpStatus</a> - The response's http status code.
newGetRouteResponse' :: Int -> GetRouteResponse'

-- | <i>See:</i> <a>newGetAuthorizer</a> smart constructor.
data GetAuthorizer
GetAuthorizer' :: Text -> Text -> GetAuthorizer

-- | Create a value of <a>GetAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerId:GetAuthorizer'</a>,
--   <a>getAuthorizer_authorizerId</a> - The authorizer identifier.
--   
--   <a>$sel:apiId:GetAuthorizer'</a>, <a>getAuthorizer_apiId</a> - The API
--   identifier.
newGetAuthorizer :: Text -> Text -> GetAuthorizer

-- | <i>See:</i> <a>newGetAuthorizerResponse</a> smart constructor.
data GetAuthorizerResponse
GetAuthorizerResponse' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe AuthorizerType -> Int -> GetAuthorizerResponse

-- | Create a value of <a>GetAuthorizerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_authorizerCredentialsArn</a> - Specifies the
--   required credentials as an IAM role for API Gateway to invoke the
--   authorizer. To specify an IAM role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To use resource-based permissions
--   on the Lambda function, don't specify this parameter. Supported only
--   for REQUEST authorizers.
--   
--   <a>$sel:identityValidationExpression:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_identityValidationExpression</a> - The
--   validation expression does not apply to the REQUEST authorizer.
--   
--   <a>$sel:enableSimpleResponses:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_enableSimpleResponses</a> - Specifies whether
--   a Lambda authorizer returns a response in a simple format. If enabled,
--   the Lambda authorizer can return a boolean value instead of an IAM
--   policy. Supported only for HTTP APIs. To learn more, see <a>Working
--   with AWS Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_authorizerUri</a> - The authorizer's Uniform
--   Resource Identifier (URI). For REQUEST authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_authorizerPayloadFormatVersion</a> -
--   Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
--   
--   <a>$sel:jwtConfiguration:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_jwtConfiguration</a> - Represents the
--   configuration of a JWT authorizer. Required for the JWT authorizer
--   type. Supported only for HTTP APIs.
--   
--   <a>$sel:authorizerId:GetAuthorizer'</a>,
--   <a>getAuthorizerResponse_authorizerId</a> - The authorizer identifier.
--   
--   <a>$sel:name:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_name</a> - The name of the authorizer.
--   
--   <a>$sel:authorizerResultTtlInSeconds:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_authorizerResultTtlInSeconds</a> - The time
--   to live (TTL) for cached authorizer results, in seconds. If it equals
--   0, authorization caching is disabled. If it is greater than 0, API
--   Gateway caches authorizer responses. The maximum value is 3600, or 1
--   hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:identitySource:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_identitySource</a> - The identity source for
--   which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:authorizerType:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_authorizerType</a> - The authorizer type.
--   Specify REQUEST for a Lambda function using incoming request
--   parameters. Specify JWT to use JSON Web Tokens (supported only for
--   HTTP APIs).
--   
--   <a>$sel:httpStatus:GetAuthorizerResponse'</a>,
--   <a>getAuthorizerResponse_httpStatus</a> - The response's http status
--   code.
newGetAuthorizerResponse :: Int -> GetAuthorizerResponse

-- | <i>See:</i> <a>newGetStage</a> smart constructor.
data GetStage
GetStage' :: Text -> Text -> GetStage

-- | Create a value of <a>GetStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stageName:GetStage'</a>, <a>getStage_stageName</a> - The stage
--   name. Stage names can only contain alphanumeric characters, hyphens,
--   and underscores. Maximum length is 128 characters.
--   
--   <a>$sel:apiId:GetStage'</a>, <a>getStage_apiId</a> - The API
--   identifier.
newGetStage :: Text -> Text -> GetStage

-- | <i>See:</i> <a>newGetStageResponse</a> smart constructor.
data GetStageResponse
GetStageResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe POSIX -> Maybe RouteSettings -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> GetStageResponse

-- | Create a value of <a>GetStageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentStatusMessage:GetStageResponse'</a>,
--   <a>getStageResponse_lastDeploymentStatusMessage</a> - Describes the
--   status of the last deployment of a stage. Supported only for stages
--   with autoDeploy enabled.
--   
--   <a>$sel:deploymentId:GetStageResponse'</a>,
--   <a>getStageResponse_deploymentId</a> - The identifier of the
--   Deployment that the Stage is associated with. Can't be updated if
--   autoDeploy is enabled.
--   
--   <a>$sel:routeSettings:GetStageResponse'</a>,
--   <a>getStageResponse_routeSettings</a> - Route settings for the stage,
--   by routeKey.
--   
--   <a>$sel:accessLogSettings:GetStageResponse'</a>,
--   <a>getStageResponse_accessLogSettings</a> - Settings for logging
--   access in this stage.
--   
--   <a>$sel:clientCertificateId:GetStageResponse'</a>,
--   <a>getStageResponse_clientCertificateId</a> - The identifier of a
--   client certificate for a Stage. Supported only for WebSocket APIs.
--   
--   <a>$sel:stageVariables:GetStageResponse'</a>,
--   <a>getStageResponse_stageVariables</a> - A map that defines the stage
--   variables for a stage resource. Variable names can have alphanumeric
--   and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:GetStageResponse'</a>,
--   <a>getStageResponse_autoDeploy</a> - Specifies whether updates to an
--   API automatically trigger a new deployment. The default value is
--   false.
--   
--   <a>$sel:createdDate:GetStageResponse'</a>,
--   <a>getStageResponse_createdDate</a> - The timestamp when the stage was
--   created.
--   
--   <a>$sel:defaultRouteSettings:GetStageResponse'</a>,
--   <a>getStageResponse_defaultRouteSettings</a> - Default route settings
--   for the stage.
--   
--   <a>$sel:apiGatewayManaged:GetStageResponse'</a>,
--   <a>getStageResponse_apiGatewayManaged</a> - Specifies whether a stage
--   is managed by API Gateway. If you created an API using quick create,
--   the $default stage is managed by API Gateway. You can't modify the
--   $default stage.
--   
--   <a>$sel:stageName:GetStage'</a>, <a>getStageResponse_stageName</a> -
--   The name of the stage.
--   
--   <a>$sel:lastUpdatedDate:GetStageResponse'</a>,
--   <a>getStageResponse_lastUpdatedDate</a> - The timestamp when the stage
--   was last updated.
--   
--   <a>$sel:description:GetStageResponse'</a>,
--   <a>getStageResponse_description</a> - The description of the stage.
--   
--   <a>$sel:tags:GetStageResponse'</a>, <a>getStageResponse_tags</a> - The
--   collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:httpStatus:GetStageResponse'</a>,
--   <a>getStageResponse_httpStatus</a> - The response's http status code.
newGetStageResponse :: Int -> GetStageResponse

-- | <i>See:</i> <a>newGetApiMapping</a> smart constructor.
data GetApiMapping
GetApiMapping' :: Text -> Text -> GetApiMapping

-- | Create a value of <a>GetApiMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiMappingId:GetApiMapping'</a>,
--   <a>getApiMapping_apiMappingId</a> - The API mapping identifier.
--   
--   <a>$sel:domainName:GetApiMapping'</a>, <a>getApiMapping_domainName</a>
--   - The domain name.
newGetApiMapping :: Text -> Text -> GetApiMapping

-- | <i>See:</i> <a>newGetApiMappingResponse</a> smart constructor.
data GetApiMappingResponse
GetApiMappingResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> GetApiMappingResponse

-- | Create a value of <a>GetApiMappingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:GetApiMappingResponse'</a>,
--   <a>getApiMappingResponse_stage</a> - The API stage.
--   
--   <a>$sel:apiId:GetApiMappingResponse'</a>,
--   <a>getApiMappingResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:apiMappingKey:GetApiMappingResponse'</a>,
--   <a>getApiMappingResponse_apiMappingKey</a> - The API mapping key.
--   
--   <a>$sel:apiMappingId:GetApiMapping'</a>,
--   <a>getApiMappingResponse_apiMappingId</a> - The API mapping
--   identifier.
--   
--   <a>$sel:httpStatus:GetApiMappingResponse'</a>,
--   <a>getApiMappingResponse_httpStatus</a> - The response's http status
--   code.
newGetApiMappingResponse :: Int -> GetApiMappingResponse

-- | <i>See:</i> <a>newImportApi</a> smart constructor.
data ImportApi
ImportApi' :: Maybe Text -> Maybe Bool -> Text -> ImportApi

-- | Create a value of <a>ImportApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:basepath:ImportApi'</a>, <a>importApi_basepath</a> - Specifies
--   how to interpret the base path of the API during import. Valid values
--   are ignore, prepend, and split. The default value is ignore. To learn
--   more, see <a>Set the OpenAPI basePath Property</a>. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:failOnWarnings:ImportApi'</a>, <a>importApi_failOnWarnings</a>
--   - Specifies whether to rollback the API creation when a warning is
--   encountered. By default, API creation continues if a warning is
--   encountered.
--   
--   <a>$sel:body:ImportApi'</a>, <a>importApi_body</a> - The OpenAPI
--   definition. Supported only for HTTP APIs.
newImportApi :: Text -> ImportApi

-- | <i>See:</i> <a>newImportApiResponse</a> smart constructor.
data ImportApiResponse
ImportApiResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe ProtocolType -> Maybe (HashMap Text Text) -> Int -> ImportApiResponse

-- | Create a value of <a>ImportApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:ImportApiResponse'</a>, <a>importApiResponse_apiId</a> -
--   The API ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:ImportApiResponse'</a>,
--   <a>importApiResponse_disableExecuteApiEndpoint</a> - Specifies whether
--   clients can invoke your API by using the default execute-api endpoint.
--   By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:ImportApiResponse'</a>,
--   <a>importApiResponse_apiEndpoint</a> - The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
--   
--   <a>$sel:warnings:ImportApiResponse'</a>,
--   <a>importApiResponse_warnings</a> - The warning messages reported when
--   failonwarnings is turned on during API import.
--   
--   <a>$sel:createdDate:ImportApiResponse'</a>,
--   <a>importApiResponse_createdDate</a> - The timestamp when the API was
--   created.
--   
--   <a>$sel:name:ImportApiResponse'</a>, <a>importApiResponse_name</a> -
--   The name of the API.
--   
--   <a>$sel:version:ImportApiResponse'</a>,
--   <a>importApiResponse_version</a> - A version identifier for the API.
--   
--   <a>$sel:apiGatewayManaged:ImportApiResponse'</a>,
--   <a>importApiResponse_apiGatewayManaged</a> - Specifies whether an API
--   is managed by API Gateway. You can't update or delete a managed API by
--   using API Gateway. A managed API can be deleted only through the
--   tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:ImportApiResponse'</a>,
--   <a>importApiResponse_apiKeySelectionExpression</a> - An API key
--   selection expression. Supported only for WebSocket APIs. See <a>API
--   Key Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:ImportApiResponse'</a>,
--   <a>importApiResponse_corsConfiguration</a> - A CORS configuration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:ImportApiResponse'</a>,
--   <a>importApiResponse_routeSelectionExpression</a> - The route
--   selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
--   
--   <a>$sel:importInfo:ImportApiResponse'</a>,
--   <a>importApiResponse_importInfo</a> - The validation information
--   during API import. This may include particular properties of your
--   OpenAPI definition which are ignored during import. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:disableSchemaValidation:ImportApiResponse'</a>,
--   <a>importApiResponse_disableSchemaValidation</a> - Avoid validating
--   models when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:ImportApiResponse'</a>,
--   <a>importApiResponse_description</a> - The description of the API.
--   
--   <a>$sel:protocolType:ImportApiResponse'</a>,
--   <a>importApiResponse_protocolType</a> - The API protocol.
--   
--   <a>$sel:tags:ImportApiResponse'</a>, <a>importApiResponse_tags</a> - A
--   collection of tags associated with the API.
--   
--   <a>$sel:httpStatus:ImportApiResponse'</a>,
--   <a>importApiResponse_httpStatus</a> - The response's http status code.
newImportApiResponse :: Int -> ImportApiResponse

-- | <i>See:</i> <a>newGetApis</a> smart constructor.
data GetApis
GetApis' :: Maybe Text -> Maybe Text -> GetApis

-- | Create a value of <a>GetApis</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetApis'</a>, <a>getApis_nextToken</a> - The next
--   page of elements from this collection. Not valid for the last element
--   of the collection.
--   
--   <a>$sel:maxResults:GetApis'</a>, <a>getApis_maxResults</a> - The
--   maximum number of elements to be returned for this resource.
newGetApis :: GetApis

-- | <i>See:</i> <a>newGetApisResponse</a> smart constructor.
data GetApisResponse
GetApisResponse' :: Maybe [Api] -> Maybe Text -> Int -> GetApisResponse

-- | Create a value of <a>GetApisResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetApisResponse'</a>, <a>getApisResponse_items</a> - The
--   elements from this collection.
--   
--   <a>$sel:nextToken:GetApis'</a>, <a>getApisResponse_nextToken</a> - The
--   next page of elements from this collection. Not valid for the last
--   element of the collection.
--   
--   <a>$sel:httpStatus:GetApisResponse'</a>,
--   <a>getApisResponse_httpStatus</a> - The response's http status code.
newGetApisResponse :: Int -> GetApisResponse

-- | Updates an ApiMapping.
--   
--   <i>See:</i> <a>newUpdateApiMapping</a> smart constructor.
data UpdateApiMapping
UpdateApiMapping' :: Maybe Text -> Maybe Text -> Text -> Text -> Text -> UpdateApiMapping

-- | Create a value of <a>UpdateApiMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:UpdateApiMapping'</a>, <a>updateApiMapping_stage</a> -
--   The API stage.
--   
--   <a>$sel:apiMappingKey:UpdateApiMapping'</a>,
--   <a>updateApiMapping_apiMappingKey</a> - The API mapping key.
--   
--   <a>$sel:apiMappingId:UpdateApiMapping'</a>,
--   <a>updateApiMapping_apiMappingId</a> - The API mapping identifier.
--   
--   <a>$sel:apiId:UpdateApiMapping'</a>, <a>updateApiMapping_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:domainName:UpdateApiMapping'</a>,
--   <a>updateApiMapping_domainName</a> - The domain name.
newUpdateApiMapping :: Text -> Text -> Text -> UpdateApiMapping

-- | <i>See:</i> <a>newUpdateApiMappingResponse</a> smart constructor.
data UpdateApiMappingResponse
UpdateApiMappingResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> UpdateApiMappingResponse

-- | Create a value of <a>UpdateApiMappingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:UpdateApiMapping'</a>,
--   <a>updateApiMappingResponse_stage</a> - The API stage.
--   
--   <a>$sel:apiId:UpdateApiMapping'</a>,
--   <a>updateApiMappingResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:apiMappingKey:UpdateApiMapping'</a>,
--   <a>updateApiMappingResponse_apiMappingKey</a> - The API mapping key.
--   
--   <a>$sel:apiMappingId:UpdateApiMapping'</a>,
--   <a>updateApiMappingResponse_apiMappingId</a> - The API mapping
--   identifier.
--   
--   <a>$sel:httpStatus:UpdateApiMappingResponse'</a>,
--   <a>updateApiMappingResponse_httpStatus</a> - The response's http
--   status code.
newUpdateApiMappingResponse :: Int -> UpdateApiMappingResponse

-- | <i>See:</i> <a>newDeleteApiMapping</a> smart constructor.
data DeleteApiMapping
DeleteApiMapping' :: Text -> Text -> DeleteApiMapping

-- | Create a value of <a>DeleteApiMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiMappingId:DeleteApiMapping'</a>,
--   <a>deleteApiMapping_apiMappingId</a> - The API mapping identifier.
--   
--   <a>$sel:domainName:DeleteApiMapping'</a>,
--   <a>deleteApiMapping_domainName</a> - The domain name.
newDeleteApiMapping :: Text -> Text -> DeleteApiMapping

-- | <i>See:</i> <a>newDeleteApiMappingResponse</a> smart constructor.
data DeleteApiMappingResponse
DeleteApiMappingResponse' :: DeleteApiMappingResponse

-- | Create a value of <a>DeleteApiMappingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteApiMappingResponse :: DeleteApiMappingResponse

-- | Creates a new Route resource to represent a route.
--   
--   <i>See:</i> <a>newCreateRoute</a> smart constructor.
data CreateRoute
CreateRoute' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Text -> Text -> CreateRoute

-- | Create a value of <a>CreateRoute</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:CreateRoute'</a>,
--   <a>createRoute_authorizationScopes</a> - The authorization scopes
--   supported by this route.
--   
--   <a>$sel:modelSelectionExpression:CreateRoute'</a>,
--   <a>createRoute_modelSelectionExpression</a> - The model selection
--   expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:CreateRoute'</a>,
--   <a>createRoute_requestModels</a> - The request models for the route.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:CreateRoute'</a>,
--   <a>createRoute_routeResponseSelectionExpression</a> - The route
--   response selection expression for the route. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:requestParameters:CreateRoute'</a>,
--   <a>createRoute_requestParameters</a> - The request parameters for the
--   route. Supported only for WebSocket APIs.
--   
--   <a>$sel:authorizerId:CreateRoute'</a>, <a>createRoute_authorizerId</a>
--   - The identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
--   
--   <a>$sel:operationName:CreateRoute'</a>,
--   <a>createRoute_operationName</a> - The operation name for the route.
--   
--   <a>$sel:authorizationType:CreateRoute'</a>,
--   <a>createRoute_authorizationType</a> - The authorization type for the
--   route. For WebSocket APIs, valid values are NONE for open access,
--   AWS_IAM for using AWS IAM permissions, and CUSTOM for using a Lambda
--   authorizer For HTTP APIs, valid values are NONE for open access, JWT
--   for using JSON Web Tokens, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:CreateRoute'</a>,
--   <a>createRoute_apiKeyRequired</a> - Specifies whether an API key is
--   required for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:target:CreateRoute'</a>, <a>createRoute_target</a> - The
--   target for the route.
--   
--   <a>$sel:apiId:CreateRoute'</a>, <a>createRoute_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:routeKey:CreateRoute'</a>, <a>createRoute_routeKey</a> - The
--   route key for the route.
newCreateRoute :: Text -> Text -> CreateRoute

-- | <i>See:</i> <a>newCreateRouteResponse'</a> smart constructor.
data CreateRouteResponse'
CreateRouteResponse'' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Maybe Text -> Int -> CreateRouteResponse'

-- | Create a value of <a>CreateRouteResponse'</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:CreateRoute'</a>,
--   <a>createRouteResponse'_authorizationScopes</a> - A list of
--   authorization scopes configured on a route. The scopes are used with a
--   JWT authorizer to authorize the method invocation. The authorization
--   works by matching the route scopes against the scopes parsed from the
--   access token in the incoming request. The method invocation is
--   authorized if any route scope matches a claimed scope in the access
--   token. Otherwise, the invocation is not authorized. When the route
--   scope is configured, the client must provide an access token instead
--   of an identity token for authorization purposes.
--   
--   <a>$sel:modelSelectionExpression:CreateRoute'</a>,
--   <a>createRouteResponse'_modelSelectionExpression</a> - The model
--   selection expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:CreateRoute'</a>,
--   <a>createRouteResponse'_requestModels</a> - The request models for the
--   route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:CreateRoute'</a>,
--   <a>createRouteResponse'_routeResponseSelectionExpression</a> - The
--   route response selection expression for the route. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:requestParameters:CreateRoute'</a>,
--   <a>createRouteResponse'_requestParameters</a> - The request parameters
--   for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeId:CreateRouteResponse''</a>,
--   <a>createRouteResponse'_routeId</a> - The route ID.
--   
--   <a>$sel:authorizerId:CreateRoute'</a>,
--   <a>createRouteResponse'_authorizerId</a> - The identifier of the
--   Authorizer resource to be associated with this route. The authorizer
--   identifier is generated by API Gateway when you created the
--   authorizer.
--   
--   <a>$sel:operationName:CreateRoute'</a>,
--   <a>createRouteResponse'_operationName</a> - The operation name for the
--   route.
--   
--   <a>$sel:apiGatewayManaged:CreateRouteResponse''</a>,
--   <a>createRouteResponse'_apiGatewayManaged</a> - Specifies whether a
--   route is managed by API Gateway. If you created an API using quick
--   create, the $default route is managed by API Gateway. You can't modify
--   the $default route key.
--   
--   <a>$sel:authorizationType:CreateRoute'</a>,
--   <a>createRouteResponse'_authorizationType</a> - The authorization type
--   for the route. For WebSocket APIs, valid values are NONE for open
--   access, AWS_IAM for using AWS IAM permissions, and CUSTOM for using a
--   Lambda authorizer For HTTP APIs, valid values are NONE for open
--   access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM
--   permissions, and CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:CreateRoute'</a>,
--   <a>createRouteResponse'_apiKeyRequired</a> - Specifies whether an API
--   key is required for this route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeKey:CreateRoute'</a>,
--   <a>createRouteResponse'_routeKey</a> - The route key for the route.
--   
--   <a>$sel:target:CreateRoute'</a>, <a>createRouteResponse'_target</a> -
--   The target for the route.
--   
--   <a>$sel:httpStatus:CreateRouteResponse''</a>,
--   <a>createRouteResponse'_httpStatus</a> - The response's http status
--   code.
newCreateRouteResponse' :: Int -> CreateRouteResponse'

-- | Creates a new Authorizer resource to represent an authorizer.
--   
--   <i>See:</i> <a>newCreateAuthorizer</a> smart constructor.
data CreateAuthorizer
CreateAuthorizer' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Natural -> Text -> AuthorizerType -> [Text] -> Text -> CreateAuthorizer

-- | Create a value of <a>CreateAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerCredentialsArn</a> - Specifies the
--   required credentials as an IAM role for API Gateway to invoke the
--   authorizer. To specify an IAM role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To use resource-based permissions
--   on the Lambda function, don't specify this parameter. Supported only
--   for REQUEST authorizers.
--   
--   <a>$sel:identityValidationExpression:CreateAuthorizer'</a>,
--   <a>createAuthorizer_identityValidationExpression</a> - This parameter
--   is not used.
--   
--   <a>$sel:enableSimpleResponses:CreateAuthorizer'</a>,
--   <a>createAuthorizer_enableSimpleResponses</a> - Specifies whether a
--   Lambda authorizer returns a response in a simple format. By default, a
--   Lambda authorizer must return an IAM policy. If enabled, the Lambda
--   authorizer can return a boolean value instead of an IAM policy.
--   Supported only for HTTP APIs. To learn more, see <a>Working with AWS
--   Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerUri</a> - The authorizer's Uniform
--   Resource Identifier (URI). For REQUEST authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerPayloadFormatVersion</a> - Specifies the
--   format of the payload sent to an HTTP API Lambda authorizer. Required
--   for HTTP API Lambda authorizers. Supported values are 1.0 and 2.0. To
--   learn more, see <a>Working with AWS Lambda authorizers for HTTP
--   APIs</a>.
--   
--   <a>$sel:jwtConfiguration:CreateAuthorizer'</a>,
--   <a>createAuthorizer_jwtConfiguration</a> - Represents the
--   configuration of a JWT authorizer. Required for the JWT authorizer
--   type. Supported only for HTTP APIs.
--   
--   <a>$sel:authorizerResultTtlInSeconds:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerResultTtlInSeconds</a> - The time to
--   live (TTL) for cached authorizer results, in seconds. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway caches authorizer responses. The maximum value is 3600, or 1
--   hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:apiId:CreateAuthorizer'</a>, <a>createAuthorizer_apiId</a> -
--   The API identifier.
--   
--   <a>$sel:authorizerType:CreateAuthorizer'</a>,
--   <a>createAuthorizer_authorizerType</a> - The authorizer type. Specify
--   REQUEST for a Lambda function using incoming request parameters.
--   Specify JWT to use JSON Web Tokens (supported only for HTTP APIs).
--   
--   <a>$sel:identitySource:CreateAuthorizer'</a>,
--   <a>createAuthorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:name:CreateAuthorizer'</a>, <a>createAuthorizer_name</a> - The
--   name of the authorizer.
newCreateAuthorizer :: Text -> AuthorizerType -> Text -> CreateAuthorizer

-- | <i>See:</i> <a>newCreateAuthorizerResponse</a> smart constructor.
data CreateAuthorizerResponse
CreateAuthorizerResponse' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe AuthorizerType -> Int -> CreateAuthorizerResponse

-- | Create a value of <a>CreateAuthorizerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_authorizerCredentialsArn</a> - Specifies
--   the required credentials as an IAM role for API Gateway to invoke the
--   authorizer. To specify an IAM role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To use resource-based permissions
--   on the Lambda function, don't specify this parameter. Supported only
--   for REQUEST authorizers.
--   
--   <a>$sel:identityValidationExpression:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_identityValidationExpression</a> - The
--   validation expression does not apply to the REQUEST authorizer.
--   
--   <a>$sel:enableSimpleResponses:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_enableSimpleResponses</a> - Specifies
--   whether a Lambda authorizer returns a response in a simple format. If
--   enabled, the Lambda authorizer can return a boolean value instead of
--   an IAM policy. Supported only for HTTP APIs. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_authorizerUri</a> - The authorizer's
--   Uniform Resource Identifier (URI). For REQUEST authorizers, this must
--   be a well-formed Lambda function URI, for example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_authorizerPayloadFormatVersion</a> -
--   Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
--   
--   <a>$sel:jwtConfiguration:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_jwtConfiguration</a> - Represents the
--   configuration of a JWT authorizer. Required for the JWT authorizer
--   type. Supported only for HTTP APIs.
--   
--   <a>$sel:authorizerId:CreateAuthorizerResponse'</a>,
--   <a>createAuthorizerResponse_authorizerId</a> - The authorizer
--   identifier.
--   
--   <a>$sel:name:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_name</a> - The name of the authorizer.
--   
--   <a>$sel:authorizerResultTtlInSeconds:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_authorizerResultTtlInSeconds</a> - The
--   time to live (TTL) for cached authorizer results, in seconds. If it
--   equals 0, authorization caching is disabled. If it is greater than 0,
--   API Gateway caches authorizer responses. The maximum value is 3600, or
--   1 hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:identitySource:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_identitySource</a> - The identity source
--   for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:authorizerType:CreateAuthorizer'</a>,
--   <a>createAuthorizerResponse_authorizerType</a> - The authorizer type.
--   Specify REQUEST for a Lambda function using incoming request
--   parameters. Specify JWT to use JSON Web Tokens (supported only for
--   HTTP APIs).
--   
--   <a>$sel:httpStatus:CreateAuthorizerResponse'</a>,
--   <a>createAuthorizerResponse_httpStatus</a> - The response's http
--   status code.
newCreateAuthorizerResponse :: Int -> CreateAuthorizerResponse

-- | Updates an Authorizer.
--   
--   <i>See:</i> <a>newUpdateAuthorizer</a> smart constructor.
data UpdateAuthorizer
UpdateAuthorizer' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe AuthorizerType -> Text -> Text -> UpdateAuthorizer

-- | Create a value of <a>UpdateAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerCredentialsArn</a> - Specifies the
--   required credentials as an IAM role for API Gateway to invoke the
--   authorizer. To specify an IAM role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To use resource-based permissions
--   on the Lambda function, don't specify this parameter.
--   
--   <a>$sel:identityValidationExpression:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_identityValidationExpression</a> - This parameter
--   is not used.
--   
--   <a>$sel:enableSimpleResponses:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_enableSimpleResponses</a> - Specifies whether a
--   Lambda authorizer returns a response in a simple format. By default, a
--   Lambda authorizer must return an IAM policy. If enabled, the Lambda
--   authorizer can return a boolean value instead of an IAM policy.
--   Supported only for HTTP APIs. To learn more, see <a>Working with AWS
--   Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerUri</a> - The authorizer's Uniform
--   Resource Identifier (URI). For REQUEST authorizers, this must be a
--   well-formed Lambda function URI, for example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerPayloadFormatVersion</a> - Specifies the
--   format of the payload sent to an HTTP API Lambda authorizer. Required
--   for HTTP API Lambda authorizers. Supported values are 1.0 and 2.0. To
--   learn more, see <a>Working with AWS Lambda authorizers for HTTP
--   APIs</a>.
--   
--   <a>$sel:jwtConfiguration:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_jwtConfiguration</a> - Represents the
--   configuration of a JWT authorizer. Required for the JWT authorizer
--   type. Supported only for HTTP APIs.
--   
--   <a>$sel:name:UpdateAuthorizer'</a>, <a>updateAuthorizer_name</a> - The
--   name of the authorizer.
--   
--   <a>$sel:authorizerResultTtlInSeconds:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerResultTtlInSeconds</a> - The time to
--   live (TTL) for cached authorizer results, in seconds. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway caches authorizer responses. The maximum value is 3600, or 1
--   hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:identitySource:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:authorizerType:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerType</a> - The authorizer type. Specify
--   REQUEST for a Lambda function using incoming request parameters.
--   Specify JWT to use JSON Web Tokens (supported only for HTTP APIs).
--   
--   <a>$sel:authorizerId:UpdateAuthorizer'</a>,
--   <a>updateAuthorizer_authorizerId</a> - The authorizer identifier.
--   
--   <a>$sel:apiId:UpdateAuthorizer'</a>, <a>updateAuthorizer_apiId</a> -
--   The API identifier.
newUpdateAuthorizer :: Text -> Text -> UpdateAuthorizer

-- | <i>See:</i> <a>newUpdateAuthorizerResponse</a> smart constructor.
data UpdateAuthorizerResponse
UpdateAuthorizerResponse' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe AuthorizerType -> Int -> UpdateAuthorizerResponse

-- | Create a value of <a>UpdateAuthorizerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerCredentialsArn</a> - Specifies
--   the required credentials as an IAM role for API Gateway to invoke the
--   authorizer. To specify an IAM role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To use resource-based permissions
--   on the Lambda function, don't specify this parameter. Supported only
--   for REQUEST authorizers.
--   
--   <a>$sel:identityValidationExpression:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_identityValidationExpression</a> - The
--   validation expression does not apply to the REQUEST authorizer.
--   
--   <a>$sel:enableSimpleResponses:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_enableSimpleResponses</a> - Specifies
--   whether a Lambda authorizer returns a response in a simple format. If
--   enabled, the Lambda authorizer can return a boolean value instead of
--   an IAM policy. Supported only for HTTP APIs. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerUri</a> - The authorizer's
--   Uniform Resource Identifier (URI). For REQUEST authorizers, this must
--   be a well-formed Lambda function URI, for example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerPayloadFormatVersion</a> -
--   Specifies the format of the payload sent to an HTTP API Lambda
--   authorizer. Required for HTTP API Lambda authorizers. Supported values
--   are 1.0 and 2.0. To learn more, see <a>Working with AWS Lambda
--   authorizers for HTTP APIs</a>.
--   
--   <a>$sel:jwtConfiguration:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_jwtConfiguration</a> - Represents the
--   configuration of a JWT authorizer. Required for the JWT authorizer
--   type. Supported only for HTTP APIs.
--   
--   <a>$sel:authorizerId:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerId</a> - The authorizer
--   identifier.
--   
--   <a>$sel:name:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_name</a> - The name of the authorizer.
--   
--   <a>$sel:authorizerResultTtlInSeconds:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerResultTtlInSeconds</a> - The
--   time to live (TTL) for cached authorizer results, in seconds. If it
--   equals 0, authorization caching is disabled. If it is greater than 0,
--   API Gateway caches authorizer responses. The maximum value is 3600, or
--   1 hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:identitySource:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_identitySource</a> - The identity source
--   for which authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:authorizerType:UpdateAuthorizer'</a>,
--   <a>updateAuthorizerResponse_authorizerType</a> - The authorizer type.
--   Specify REQUEST for a Lambda function using incoming request
--   parameters. Specify JWT to use JSON Web Tokens (supported only for
--   HTTP APIs).
--   
--   <a>$sel:httpStatus:UpdateAuthorizerResponse'</a>,
--   <a>updateAuthorizerResponse_httpStatus</a> - The response's http
--   status code.
newUpdateAuthorizerResponse :: Int -> UpdateAuthorizerResponse

-- | <i>See:</i> <a>newDeleteAuthorizer</a> smart constructor.
data DeleteAuthorizer
DeleteAuthorizer' :: Text -> Text -> DeleteAuthorizer

-- | Create a value of <a>DeleteAuthorizer</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerId:DeleteAuthorizer'</a>,
--   <a>deleteAuthorizer_authorizerId</a> - The authorizer identifier.
--   
--   <a>$sel:apiId:DeleteAuthorizer'</a>, <a>deleteAuthorizer_apiId</a> -
--   The API identifier.
newDeleteAuthorizer :: Text -> Text -> DeleteAuthorizer

-- | <i>See:</i> <a>newDeleteAuthorizerResponse</a> smart constructor.
data DeleteAuthorizerResponse
DeleteAuthorizerResponse' :: DeleteAuthorizerResponse

-- | Create a value of <a>DeleteAuthorizerResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteAuthorizerResponse :: DeleteAuthorizerResponse

-- | Creates a new ApiMapping resource to represent an API mapping.
--   
--   <i>See:</i> <a>newCreateApiMapping</a> smart constructor.
data CreateApiMapping
CreateApiMapping' :: Maybe Text -> Text -> Text -> Text -> CreateApiMapping

-- | Create a value of <a>CreateApiMapping</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiMappingKey:CreateApiMapping'</a>,
--   <a>createApiMapping_apiMappingKey</a> - The API mapping key.
--   
--   <a>$sel:domainName:CreateApiMapping'</a>,
--   <a>createApiMapping_domainName</a> - The domain name.
--   
--   <a>$sel:stage:CreateApiMapping'</a>, <a>createApiMapping_stage</a> -
--   The API stage.
--   
--   <a>$sel:apiId:CreateApiMapping'</a>, <a>createApiMapping_apiId</a> -
--   The API identifier.
newCreateApiMapping :: Text -> Text -> Text -> CreateApiMapping

-- | <i>See:</i> <a>newCreateApiMappingResponse</a> smart constructor.
data CreateApiMappingResponse
CreateApiMappingResponse' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Int -> CreateApiMappingResponse

-- | Create a value of <a>CreateApiMappingResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:stage:CreateApiMapping'</a>,
--   <a>createApiMappingResponse_stage</a> - The API stage.
--   
--   <a>$sel:apiId:CreateApiMapping'</a>,
--   <a>createApiMappingResponse_apiId</a> - The API identifier.
--   
--   <a>$sel:apiMappingKey:CreateApiMapping'</a>,
--   <a>createApiMappingResponse_apiMappingKey</a> - The API mapping key.
--   
--   <a>$sel:apiMappingId:CreateApiMappingResponse'</a>,
--   <a>createApiMappingResponse_apiMappingId</a> - The API mapping
--   identifier.
--   
--   <a>$sel:httpStatus:CreateApiMappingResponse'</a>,
--   <a>createApiMappingResponse_httpStatus</a> - The response's http
--   status code.
newCreateApiMappingResponse :: Int -> CreateApiMappingResponse

-- | <i>See:</i> <a>newDeleteRouteRequestParameter</a> smart constructor.
data DeleteRouteRequestParameter
DeleteRouteRequestParameter' :: Text -> Text -> Text -> DeleteRouteRequestParameter

-- | Create a value of <a>DeleteRouteRequestParameter</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:requestParameterKey:DeleteRouteRequestParameter'</a>,
--   <a>deleteRouteRequestParameter_requestParameterKey</a> - The route
--   request parameter key.
--   
--   <a>$sel:apiId:DeleteRouteRequestParameter'</a>,
--   <a>deleteRouteRequestParameter_apiId</a> - The API identifier.
--   
--   <a>$sel:routeId:DeleteRouteRequestParameter'</a>,
--   <a>deleteRouteRequestParameter_routeId</a> - The route ID.
newDeleteRouteRequestParameter :: Text -> Text -> Text -> DeleteRouteRequestParameter

-- | <i>See:</i> <a>newDeleteRouteRequestParameterResponse</a> smart
--   constructor.
data DeleteRouteRequestParameterResponse
DeleteRouteRequestParameterResponse' :: DeleteRouteRequestParameterResponse

-- | Create a value of <a>DeleteRouteRequestParameterResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteRouteRequestParameterResponse :: DeleteRouteRequestParameterResponse

-- | Creates a new Tag resource to represent a tag.
--   
--   <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Maybe (HashMap Text Text) -> Text -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The
--   collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The resource ARN for the tag.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | Creates a new Stage resource to represent a stage.
--   
--   <i>See:</i> <a>newCreateStage</a> smart constructor.
data CreateStage
CreateStage' :: Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe RouteSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> CreateStage

-- | Create a value of <a>CreateStage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:CreateStage'</a>, <a>createStage_deploymentId</a>
--   - The deployment identifier of the API stage.
--   
--   <a>$sel:routeSettings:CreateStage'</a>,
--   <a>createStage_routeSettings</a> - Route settings for the stage, by
--   routeKey.
--   
--   <a>$sel:accessLogSettings:CreateStage'</a>,
--   <a>createStage_accessLogSettings</a> - Settings for logging access in
--   this stage.
--   
--   <a>$sel:clientCertificateId:CreateStage'</a>,
--   <a>createStage_clientCertificateId</a> - The identifier of a client
--   certificate for a Stage. Supported only for WebSocket APIs.
--   
--   <a>$sel:stageVariables:CreateStage'</a>,
--   <a>createStage_stageVariables</a> - A map that defines the stage
--   variables for a Stage. Variable names can have alphanumeric and
--   underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:CreateStage'</a>, <a>createStage_autoDeploy</a> -
--   Specifies whether updates to an API automatically trigger a new
--   deployment. The default value is false.
--   
--   <a>$sel:defaultRouteSettings:CreateStage'</a>,
--   <a>createStage_defaultRouteSettings</a> - The default route settings
--   for the stage.
--   
--   <a>$sel:description:CreateStage'</a>, <a>createStage_description</a> -
--   The description for the API stage.
--   
--   <a>$sel:tags:CreateStage'</a>, <a>createStage_tags</a> - The
--   collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:apiId:CreateStage'</a>, <a>createStage_apiId</a> - The API
--   identifier.
--   
--   <a>$sel:stageName:CreateStage'</a>, <a>createStage_stageName</a> - The
--   name of the stage.
newCreateStage :: Text -> Text -> CreateStage

-- | <i>See:</i> <a>newCreateStageResponse</a> smart constructor.
data CreateStageResponse
CreateStageResponse' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe POSIX -> Maybe RouteSettings -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> CreateStageResponse

-- | Create a value of <a>CreateStageResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentStatusMessage:CreateStageResponse'</a>,
--   <a>createStageResponse_lastDeploymentStatusMessage</a> - Describes the
--   status of the last deployment of a stage. Supported only for stages
--   with autoDeploy enabled.
--   
--   <a>$sel:deploymentId:CreateStage'</a>,
--   <a>createStageResponse_deploymentId</a> - The identifier of the
--   Deployment that the Stage is associated with. Can't be updated if
--   autoDeploy is enabled.
--   
--   <a>$sel:routeSettings:CreateStage'</a>,
--   <a>createStageResponse_routeSettings</a> - Route settings for the
--   stage, by routeKey.
--   
--   <a>$sel:accessLogSettings:CreateStage'</a>,
--   <a>createStageResponse_accessLogSettings</a> - Settings for logging
--   access in this stage.
--   
--   <a>$sel:clientCertificateId:CreateStage'</a>,
--   <a>createStageResponse_clientCertificateId</a> - The identifier of a
--   client certificate for a Stage. Supported only for WebSocket APIs.
--   
--   <a>$sel:stageVariables:CreateStage'</a>,
--   <a>createStageResponse_stageVariables</a> - A map that defines the
--   stage variables for a stage resource. Variable names can have
--   alphanumeric and underscore characters, and the values must match
--   [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:CreateStage'</a>,
--   <a>createStageResponse_autoDeploy</a> - Specifies whether updates to
--   an API automatically trigger a new deployment. The default value is
--   false.
--   
--   <a>$sel:createdDate:CreateStageResponse'</a>,
--   <a>createStageResponse_createdDate</a> - The timestamp when the stage
--   was created.
--   
--   <a>$sel:defaultRouteSettings:CreateStage'</a>,
--   <a>createStageResponse_defaultRouteSettings</a> - Default route
--   settings for the stage.
--   
--   <a>$sel:apiGatewayManaged:CreateStageResponse'</a>,
--   <a>createStageResponse_apiGatewayManaged</a> - Specifies whether a
--   stage is managed by API Gateway. If you created an API using quick
--   create, the $default stage is managed by API Gateway. You can't modify
--   the $default stage.
--   
--   <a>$sel:stageName:CreateStage'</a>,
--   <a>createStageResponse_stageName</a> - The name of the stage.
--   
--   <a>$sel:lastUpdatedDate:CreateStageResponse'</a>,
--   <a>createStageResponse_lastUpdatedDate</a> - The timestamp when the
--   stage was last updated.
--   
--   <a>$sel:description:CreateStage'</a>,
--   <a>createStageResponse_description</a> - The description of the stage.
--   
--   <a>$sel:tags:CreateStage'</a>, <a>createStageResponse_tags</a> - The
--   collection of tags. Each tag element is associated with a given
--   resource.
--   
--   <a>$sel:httpStatus:CreateStageResponse'</a>,
--   <a>createStageResponse_httpStatus</a> - The response's http status
--   code.
newCreateStageResponse :: Int -> CreateStageResponse

-- | <i>See:</i> <a>newGetIntegrations</a> smart constructor.
data GetIntegrations
GetIntegrations' :: Maybe Text -> Maybe Text -> Text -> GetIntegrations

-- | Create a value of <a>GetIntegrations</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:GetIntegrations'</a>,
--   <a>getIntegrations_nextToken</a> - The next page of elements from this
--   collection. Not valid for the last element of the collection.
--   
--   <a>$sel:maxResults:GetIntegrations'</a>,
--   <a>getIntegrations_maxResults</a> - The maximum number of elements to
--   be returned for this resource.
--   
--   <a>$sel:apiId:GetIntegrations'</a>, <a>getIntegrations_apiId</a> - The
--   API identifier.
newGetIntegrations :: Text -> GetIntegrations

-- | <i>See:</i> <a>newGetIntegrationsResponse</a> smart constructor.
data GetIntegrationsResponse
GetIntegrationsResponse' :: Maybe [Integration] -> Maybe Text -> Int -> GetIntegrationsResponse

-- | Create a value of <a>GetIntegrationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:items:GetIntegrationsResponse'</a>,
--   <a>getIntegrationsResponse_items</a> - The elements from this
--   collection.
--   
--   <a>$sel:nextToken:GetIntegrations'</a>,
--   <a>getIntegrationsResponse_nextToken</a> - The next page of elements
--   from this collection. Not valid for the last element of the
--   collection.
--   
--   <a>$sel:httpStatus:GetIntegrationsResponse'</a>,
--   <a>getIntegrationsResponse_httpStatus</a> - The response's http status
--   code.
newGetIntegrationsResponse :: Int -> GetIntegrationsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The resource ARN for the tag.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   Tag keys to delete
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newUntagResourceResponse :: UntagResourceResponse

-- | Updates a DomainName.
--   
--   <i>See:</i> <a>newUpdateDomainName</a> smart constructor.
data UpdateDomainName
UpdateDomainName' :: Maybe [DomainNameConfiguration] -> Maybe MutualTlsAuthenticationInput -> Text -> UpdateDomainName

-- | Create a value of <a>UpdateDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:UpdateDomainName'</a>,
--   <a>updateDomainName_domainNameConfigurations</a> - The domain name
--   configurations.
--   
--   <a>$sel:mutualTlsAuthentication:UpdateDomainName'</a>,
--   <a>updateDomainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name.
--   
--   <a>$sel:domainName:UpdateDomainName'</a>,
--   <a>updateDomainName_domainName</a> - The domain name.
newUpdateDomainName :: Text -> UpdateDomainName

-- | <i>See:</i> <a>newUpdateDomainNameResponse</a> smart constructor.
data UpdateDomainNameResponse
UpdateDomainNameResponse' :: Maybe [DomainNameConfiguration] -> Maybe Text -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe (HashMap Text Text) -> Int -> UpdateDomainNameResponse

-- | Create a value of <a>UpdateDomainNameResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:UpdateDomainName'</a>,
--   <a>updateDomainNameResponse_domainNameConfigurations</a> - The domain
--   name configurations.
--   
--   <a>$sel:domainName:UpdateDomainName'</a>,
--   <a>updateDomainNameResponse_domainName</a> - The name of the
--   DomainName resource.
--   
--   <a>$sel:mutualTlsAuthentication:UpdateDomainName'</a>,
--   <a>updateDomainNameResponse_mutualTlsAuthentication</a> - The mutual
--   TLS authentication configuration for a custom domain name.
--   
--   <a>$sel:apiMappingSelectionExpression:UpdateDomainNameResponse'</a>,
--   <a>updateDomainNameResponse_apiMappingSelectionExpression</a> - The
--   API mapping selection expression.
--   
--   <a>$sel:tags:UpdateDomainNameResponse'</a>,
--   <a>updateDomainNameResponse_tags</a> - The collection of tags
--   associated with a domain name.
--   
--   <a>$sel:httpStatus:UpdateDomainNameResponse'</a>,
--   <a>updateDomainNameResponse_httpStatus</a> - The response's http
--   status code.
newUpdateDomainNameResponse :: Int -> UpdateDomainNameResponse

-- | <i>See:</i> <a>newDeleteDomainName</a> smart constructor.
data DeleteDomainName
DeleteDomainName' :: Text -> DeleteDomainName

-- | Create a value of <a>DeleteDomainName</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainName:DeleteDomainName'</a>,
--   <a>deleteDomainName_domainName</a> - The domain name.
newDeleteDomainName :: Text -> DeleteDomainName

-- | <i>See:</i> <a>newDeleteDomainNameResponse</a> smart constructor.
data DeleteDomainNameResponse
DeleteDomainNameResponse' :: DeleteDomainNameResponse

-- | Create a value of <a>DeleteDomainNameResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteDomainNameResponse :: DeleteDomainNameResponse

-- | <i>See:</i> <a>newGetApi</a> smart constructor.
data GetApi
GetApi' :: Text -> GetApi

-- | Create a value of <a>GetApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetApi'</a>, <a>getApi_apiId</a> - The API identifier.
newGetApi :: Text -> GetApi

-- | <i>See:</i> <a>newGetApiResponse</a> smart constructor.
data GetApiResponse
GetApiResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe ProtocolType -> Maybe (HashMap Text Text) -> Int -> GetApiResponse

-- | Create a value of <a>GetApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:GetApi'</a>, <a>getApiResponse_apiId</a> - The API ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:GetApiResponse'</a>,
--   <a>getApiResponse_disableExecuteApiEndpoint</a> - Specifies whether
--   clients can invoke your API by using the default execute-api endpoint.
--   By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:GetApiResponse'</a>,
--   <a>getApiResponse_apiEndpoint</a> - The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
--   
--   <a>$sel:warnings:GetApiResponse'</a>, <a>getApiResponse_warnings</a> -
--   The warning messages reported when failonwarnings is turned on during
--   API import.
--   
--   <a>$sel:createdDate:GetApiResponse'</a>,
--   <a>getApiResponse_createdDate</a> - The timestamp when the API was
--   created.
--   
--   <a>$sel:name:GetApiResponse'</a>, <a>getApiResponse_name</a> - The
--   name of the API.
--   
--   <a>$sel:version:GetApiResponse'</a>, <a>getApiResponse_version</a> - A
--   version identifier for the API.
--   
--   <a>$sel:apiGatewayManaged:GetApiResponse'</a>,
--   <a>getApiResponse_apiGatewayManaged</a> - Specifies whether an API is
--   managed by API Gateway. You can't update or delete a managed API by
--   using API Gateway. A managed API can be deleted only through the
--   tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:GetApiResponse'</a>,
--   <a>getApiResponse_apiKeySelectionExpression</a> - An API key selection
--   expression. Supported only for WebSocket APIs. See <a>API Key
--   Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:GetApiResponse'</a>,
--   <a>getApiResponse_corsConfiguration</a> - A CORS configuration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:GetApiResponse'</a>,
--   <a>getApiResponse_routeSelectionExpression</a> - The route selection
--   expression for the API. For HTTP APIs, the routeSelectionExpression
--   must be ${request.method} ${request.path}. If not provided, this will
--   be the default for HTTP APIs. This property is required for WebSocket
--   APIs.
--   
--   <a>$sel:importInfo:GetApiResponse'</a>,
--   <a>getApiResponse_importInfo</a> - The validation information during
--   API import. This may include particular properties of your OpenAPI
--   definition which are ignored during import. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:disableSchemaValidation:GetApiResponse'</a>,
--   <a>getApiResponse_disableSchemaValidation</a> - Avoid validating
--   models when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:GetApiResponse'</a>,
--   <a>getApiResponse_description</a> - The description of the API.
--   
--   <a>$sel:protocolType:GetApiResponse'</a>,
--   <a>getApiResponse_protocolType</a> - The API protocol.
--   
--   <a>$sel:tags:GetApiResponse'</a>, <a>getApiResponse_tags</a> - A
--   collection of tags associated with the API.
--   
--   <a>$sel:httpStatus:GetApiResponse'</a>,
--   <a>getApiResponse_httpStatus</a> - The response's http status code.
newGetApiResponse :: Int -> GetApiResponse

-- | <i>See:</i> <a>newDeleteApi</a> smart constructor.
data DeleteApi
DeleteApi' :: Text -> DeleteApi

-- | Create a value of <a>DeleteApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:DeleteApi'</a>, <a>deleteApi_apiId</a> - The API
--   identifier.
newDeleteApi :: Text -> DeleteApi

-- | <i>See:</i> <a>newDeleteApiResponse</a> smart constructor.
data DeleteApiResponse
DeleteApiResponse' :: DeleteApiResponse

-- | Create a value of <a>DeleteApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newDeleteApiResponse :: DeleteApiResponse

-- | Updates an Api.
--   
--   <i>See:</i> <a>newUpdateApi</a> smart constructor.
data UpdateApi
UpdateApi' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> UpdateApi

-- | Create a value of <a>UpdateApi</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:credentialsArn:UpdateApi'</a>, <a>updateApi_credentialsArn</a>
--   - This property is part of quick create. It specifies the credentials
--   required for the integration, if any. For a Lambda integration, three
--   options are available. To specify an IAM Role for API Gateway to
--   assume, use the role's Amazon Resource Name (ARN). To require that the
--   caller's identity be passed through from the request, specify
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, don't specify this parameter. Currently, this property
--   is not used for HTTP integrations. If provided, this value replaces
--   the credentials associated with the quick create integration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:disableExecuteApiEndpoint:UpdateApi'</a>,
--   <a>updateApi_disableExecuteApiEndpoint</a> - Specifies whether clients
--   can invoke your API by using the default execute-api endpoint. By
--   default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:name:UpdateApi'</a>, <a>updateApi_name</a> - The name of the
--   API.
--   
--   <a>$sel:version:UpdateApi'</a>, <a>updateApi_version</a> - A version
--   identifier for the API.
--   
--   <a>$sel:apiKeySelectionExpression:UpdateApi'</a>,
--   <a>updateApi_apiKeySelectionExpression</a> - An API key selection
--   expression. Supported only for WebSocket APIs. See <a>API Key
--   Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:UpdateApi'</a>,
--   <a>updateApi_corsConfiguration</a> - A CORS configuration. Supported
--   only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:UpdateApi'</a>,
--   <a>updateApi_routeSelectionExpression</a> - The route selection
--   expression for the API. For HTTP APIs, the routeSelectionExpression
--   must be ${request.method} ${request.path}. If not provided, this will
--   be the default for HTTP APIs. This property is required for WebSocket
--   APIs.
--   
--   <a>$sel:disableSchemaValidation:UpdateApi'</a>,
--   <a>updateApi_disableSchemaValidation</a> - Avoid validating models
--   when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:UpdateApi'</a>, <a>updateApi_description</a> - The
--   description of the API.
--   
--   <a>$sel:routeKey:UpdateApi'</a>, <a>updateApi_routeKey</a> - This
--   property is part of quick create. If not specified, the route created
--   using quick create is kept. Otherwise, this value replaces the route
--   key of the quick create route. Additional routes may still be added
--   after the API is updated. Supported only for HTTP APIs.
--   
--   <a>$sel:target:UpdateApi'</a>, <a>updateApi_target</a> - This property
--   is part of quick create. For HTTP integrations, specify a fully
--   qualified URL. For Lambda integrations, specify a function ARN. The
--   type of the integration will be HTTP_PROXY or AWS_PROXY, respectively.
--   The value provided updates the integration URI and integration type.
--   You can update a quick-created target, but you can't remove it from an
--   API. Supported only for HTTP APIs.
--   
--   <a>$sel:apiId:UpdateApi'</a>, <a>updateApi_apiId</a> - The API
--   identifier.
newUpdateApi :: Text -> UpdateApi

-- | <i>See:</i> <a>newUpdateApiResponse</a> smart constructor.
data UpdateApiResponse
UpdateApiResponse' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe Text -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe ProtocolType -> Maybe (HashMap Text Text) -> Int -> UpdateApiResponse

-- | Create a value of <a>UpdateApiResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:UpdateApi'</a>, <a>updateApiResponse_apiId</a> - The API
--   ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:UpdateApi'</a>,
--   <a>updateApiResponse_disableExecuteApiEndpoint</a> - Specifies whether
--   clients can invoke your API by using the default execute-api endpoint.
--   By default, clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:UpdateApiResponse'</a>,
--   <a>updateApiResponse_apiEndpoint</a> - The URI of the API, of the form
--   {api-id}.execute-api.{region}.amazonaws.com. The stage name is
--   typically appended to this URI to form a complete path to a deployed
--   API stage.
--   
--   <a>$sel:warnings:UpdateApiResponse'</a>,
--   <a>updateApiResponse_warnings</a> - The warning messages reported when
--   failonwarnings is turned on during API import.
--   
--   <a>$sel:createdDate:UpdateApiResponse'</a>,
--   <a>updateApiResponse_createdDate</a> - The timestamp when the API was
--   created.
--   
--   <a>$sel:name:UpdateApi'</a>, <a>updateApiResponse_name</a> - The name
--   of the API.
--   
--   <a>$sel:version:UpdateApi'</a>, <a>updateApiResponse_version</a> - A
--   version identifier for the API.
--   
--   <a>$sel:apiGatewayManaged:UpdateApiResponse'</a>,
--   <a>updateApiResponse_apiGatewayManaged</a> - Specifies whether an API
--   is managed by API Gateway. You can't update or delete a managed API by
--   using API Gateway. A managed API can be deleted only through the
--   tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:UpdateApi'</a>,
--   <a>updateApiResponse_apiKeySelectionExpression</a> - An API key
--   selection expression. Supported only for WebSocket APIs. See <a>API
--   Key Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:UpdateApi'</a>,
--   <a>updateApiResponse_corsConfiguration</a> - A CORS configuration.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:routeSelectionExpression:UpdateApi'</a>,
--   <a>updateApiResponse_routeSelectionExpression</a> - The route
--   selection expression for the API. For HTTP APIs, the
--   routeSelectionExpression must be ${request.method} ${request.path}. If
--   not provided, this will be the default for HTTP APIs. This property is
--   required for WebSocket APIs.
--   
--   <a>$sel:importInfo:UpdateApiResponse'</a>,
--   <a>updateApiResponse_importInfo</a> - The validation information
--   during API import. This may include particular properties of your
--   OpenAPI definition which are ignored during import. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:disableSchemaValidation:UpdateApi'</a>,
--   <a>updateApiResponse_disableSchemaValidation</a> - Avoid validating
--   models when creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:UpdateApi'</a>,
--   <a>updateApiResponse_description</a> - The description of the API.
--   
--   <a>$sel:protocolType:UpdateApiResponse'</a>,
--   <a>updateApiResponse_protocolType</a> - The API protocol.
--   
--   <a>$sel:tags:UpdateApiResponse'</a>, <a>updateApiResponse_tags</a> - A
--   collection of tags associated with the API.
--   
--   <a>$sel:httpStatus:UpdateApiResponse'</a>,
--   <a>updateApiResponse_httpStatus</a> - The response's http status code.
newUpdateApiResponse :: Int -> UpdateApiResponse

-- | <i>See:</i> <a>newGetModelTemplate</a> smart constructor.
data GetModelTemplate
GetModelTemplate' :: Text -> Text -> GetModelTemplate

-- | Create a value of <a>GetModelTemplate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:GetModelTemplate'</a>, <a>getModelTemplate_modelId</a>
--   - The model ID.
--   
--   <a>$sel:apiId:GetModelTemplate'</a>, <a>getModelTemplate_apiId</a> -
--   The API identifier.
newGetModelTemplate :: Text -> Text -> GetModelTemplate

-- | <i>See:</i> <a>newGetModelTemplateResponse</a> smart constructor.
data GetModelTemplateResponse
GetModelTemplateResponse' :: Maybe Text -> Int -> GetModelTemplateResponse

-- | Create a value of <a>GetModelTemplateResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:GetModelTemplateResponse'</a>,
--   <a>getModelTemplateResponse_value</a> - The template value.
--   
--   <a>$sel:httpStatus:GetModelTemplateResponse'</a>,
--   <a>getModelTemplateResponse_httpStatus</a> - The response's http
--   status code.
newGetModelTemplateResponse :: Int -> GetModelTemplateResponse

-- | The authorization type. For WebSocket APIs, valid values are NONE for
--   open access, AWS_IAM for using AWS IAM permissions, and CUSTOM for
--   using a Lambda authorizer. For HTTP APIs, valid values are NONE for
--   open access, JWT for using JSON Web Tokens, AWS_IAM for using AWS IAM
--   permissions, and CUSTOM for using a Lambda authorizer.
newtype AuthorizationType
AuthorizationType' :: Text -> AuthorizationType
[fromAuthorizationType] :: AuthorizationType -> Text
pattern AuthorizationType_AWS_IAM :: AuthorizationType
pattern AuthorizationType_CUSTOM :: AuthorizationType
pattern AuthorizationType_JWT :: AuthorizationType
pattern AuthorizationType_NONE :: AuthorizationType

-- | The authorizer type. Specify REQUEST for a Lambda function using
--   incoming request parameters. Specify JWT to use JSON Web Tokens
--   (supported only for HTTP APIs).
newtype AuthorizerType
AuthorizerType' :: Text -> AuthorizerType
[fromAuthorizerType] :: AuthorizerType -> Text
pattern AuthorizerType_JWT :: AuthorizerType
pattern AuthorizerType_REQUEST :: AuthorizerType

-- | Represents a connection type.
newtype ConnectionType
ConnectionType' :: Text -> ConnectionType
[fromConnectionType] :: ConnectionType -> Text
pattern ConnectionType_INTERNET :: ConnectionType
pattern ConnectionType_VPC_LINK :: ConnectionType

-- | Specifies how to handle response payload content type conversions.
--   Supported only for WebSocket APIs.
newtype ContentHandlingStrategy
ContentHandlingStrategy' :: Text -> ContentHandlingStrategy
[fromContentHandlingStrategy] :: ContentHandlingStrategy -> Text
pattern ContentHandlingStrategy_CONVERT_TO_BINARY :: ContentHandlingStrategy
pattern ContentHandlingStrategy_CONVERT_TO_TEXT :: ContentHandlingStrategy

-- | Represents a deployment status.
newtype DeploymentStatus
DeploymentStatus' :: Text -> DeploymentStatus
[fromDeploymentStatus] :: DeploymentStatus -> Text
pattern DeploymentStatus_DEPLOYED :: DeploymentStatus
pattern DeploymentStatus_FAILED :: DeploymentStatus
pattern DeploymentStatus_PENDING :: DeploymentStatus

-- | The status of the domain name migration. The valid values are
--   AVAILABLE, UPDATING, PENDING_CERTIFICATE_REIMPORT, and
--   PENDING_OWNERSHIP_VERIFICATION. If the status is UPDATING, the domain
--   cannot be modified further until the existing operation is complete.
--   If it is AVAILABLE, the domain can be updated.
newtype DomainNameStatus
DomainNameStatus' :: Text -> DomainNameStatus
[fromDomainNameStatus] :: DomainNameStatus -> Text
pattern DomainNameStatus_AVAILABLE :: DomainNameStatus
pattern DomainNameStatus_PENDING_CERTIFICATE_REIMPORT :: DomainNameStatus
pattern DomainNameStatus_PENDING_OWNERSHIP_VERIFICATION :: DomainNameStatus
pattern DomainNameStatus_UPDATING :: DomainNameStatus

-- | Represents an endpoint type.
newtype EndpointType
EndpointType' :: Text -> EndpointType
[fromEndpointType] :: EndpointType -> Text
pattern EndpointType_EDGE :: EndpointType
pattern EndpointType_REGIONAL :: EndpointType

-- | Represents an API method integration type.
newtype IntegrationType
IntegrationType' :: Text -> IntegrationType
[fromIntegrationType] :: IntegrationType -> Text
pattern IntegrationType_AWS :: IntegrationType
pattern IntegrationType_AWS_PROXY :: IntegrationType
pattern IntegrationType_HTTP :: IntegrationType
pattern IntegrationType_HTTP_PROXY :: IntegrationType
pattern IntegrationType_MOCK :: IntegrationType

-- | The logging level.
newtype LoggingLevel
LoggingLevel' :: Text -> LoggingLevel
[fromLoggingLevel] :: LoggingLevel -> Text
pattern LoggingLevel_ERROR :: LoggingLevel
pattern LoggingLevel_INFO :: LoggingLevel
pattern LoggingLevel_OFF :: LoggingLevel

-- | Represents passthrough behavior for an integration response. Supported
--   only for WebSocket APIs.
newtype PassthroughBehavior
PassthroughBehavior' :: Text -> PassthroughBehavior
[fromPassthroughBehavior] :: PassthroughBehavior -> Text
pattern PassthroughBehavior_NEVER :: PassthroughBehavior
pattern PassthroughBehavior_WHEN_NO_MATCH :: PassthroughBehavior
pattern PassthroughBehavior_WHEN_NO_TEMPLATES :: PassthroughBehavior

-- | Represents a protocol type.
newtype ProtocolType
ProtocolType' :: Text -> ProtocolType
[fromProtocolType] :: ProtocolType -> Text
pattern ProtocolType_HTTP :: ProtocolType
pattern ProtocolType_WEBSOCKET :: ProtocolType

-- | The Transport Layer Security (TLS) version of the security policy for
--   this domain name. The valid values are TLS_1_0 and TLS_1_2.
newtype SecurityPolicy
SecurityPolicy' :: Text -> SecurityPolicy
[fromSecurityPolicy] :: SecurityPolicy -> Text
pattern SecurityPolicy_TLS_1_0 :: SecurityPolicy
pattern SecurityPolicy_TLS_1_2 :: SecurityPolicy

-- | The status of the VPC link.
newtype VpcLinkStatus
VpcLinkStatus' :: Text -> VpcLinkStatus
[fromVpcLinkStatus] :: VpcLinkStatus -> Text
pattern VpcLinkStatus_AVAILABLE :: VpcLinkStatus
pattern VpcLinkStatus_DELETING :: VpcLinkStatus
pattern VpcLinkStatus_FAILED :: VpcLinkStatus
pattern VpcLinkStatus_INACTIVE :: VpcLinkStatus
pattern VpcLinkStatus_PENDING :: VpcLinkStatus

-- | The version of the VPC link.
newtype VpcLinkVersion
VpcLinkVersion' :: Text -> VpcLinkVersion
[fromVpcLinkVersion] :: VpcLinkVersion -> Text
pattern VpcLinkVersion_V2 :: VpcLinkVersion

-- | Settings for logging access in a stage.
--   
--   <i>See:</i> <a>newAccessLogSettings</a> smart constructor.
data AccessLogSettings
AccessLogSettings' :: Maybe Text -> Maybe Text -> AccessLogSettings

-- | Create a value of <a>AccessLogSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:format:AccessLogSettings'</a>, <a>accessLogSettings_format</a>
--   - A single line format of the access logs of data, as specified by
--   selected $context variables. The format must include at least
--   $context.requestId.
--   
--   <a>$sel:destinationArn:AccessLogSettings'</a>,
--   <a>accessLogSettings_destinationArn</a> - The ARN of the CloudWatch
--   Logs log group to receive access logs.
newAccessLogSettings :: AccessLogSettings

-- | Represents an API.
--   
--   <i>See:</i> <a>newApi</a> smart constructor.
data Api
Api' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe [Text] -> Maybe POSIX -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Cors -> Maybe [Text] -> Maybe Bool -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Text -> ProtocolType -> Api

-- | Create a value of <a>Api</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiId:Api'</a>, <a>api_apiId</a> - The API ID.
--   
--   <a>$sel:disableExecuteApiEndpoint:Api'</a>,
--   <a>api_disableExecuteApiEndpoint</a> - Specifies whether clients can
--   invoke your API by using the default execute-api endpoint. By default,
--   clients can invoke your API with the default
--   https://{api_id}.execute-api.{region}.amazonaws.com endpoint. To
--   require that clients use a custom domain name to invoke your API,
--   disable the default endpoint.
--   
--   <a>$sel:apiEndpoint:Api'</a>, <a>api_apiEndpoint</a> - The URI of the
--   API, of the form {api-id}.execute-api.{region}.amazonaws.com. The
--   stage name is typically appended to this URI to form a complete path
--   to a deployed API stage.
--   
--   <a>$sel:warnings:Api'</a>, <a>api_warnings</a> - The warning messages
--   reported when failonwarnings is turned on during API import.
--   
--   <a>$sel:createdDate:Api'</a>, <a>api_createdDate</a> - The timestamp
--   when the API was created.
--   
--   <a>$sel:version:Api'</a>, <a>api_version</a> - A version identifier
--   for the API.
--   
--   <a>$sel:apiGatewayManaged:Api'</a>, <a>api_apiGatewayManaged</a> -
--   Specifies whether an API is managed by API Gateway. You can't update
--   or delete a managed API by using API Gateway. A managed API can be
--   deleted only through the tooling or service that created it.
--   
--   <a>$sel:apiKeySelectionExpression:Api'</a>,
--   <a>api_apiKeySelectionExpression</a> - An API key selection
--   expression. Supported only for WebSocket APIs. See <a>API Key
--   Selection Expressions</a>.
--   
--   <a>$sel:corsConfiguration:Api'</a>, <a>api_corsConfiguration</a> - A
--   CORS configuration. Supported only for HTTP APIs.
--   
--   <a>$sel:importInfo:Api'</a>, <a>api_importInfo</a> - The validation
--   information during API import. This may include particular properties
--   of your OpenAPI definition which are ignored during import. Supported
--   only for HTTP APIs.
--   
--   <a>$sel:disableSchemaValidation:Api'</a>,
--   <a>api_disableSchemaValidation</a> - Avoid validating models when
--   creating a deployment. Supported only for WebSocket APIs.
--   
--   <a>$sel:description:Api'</a>, <a>api_description</a> - The description
--   of the API.
--   
--   <a>$sel:tags:Api'</a>, <a>api_tags</a> - A collection of tags
--   associated with the API.
--   
--   <a>$sel:routeSelectionExpression:Api'</a>,
--   <a>api_routeSelectionExpression</a> - The route selection expression
--   for the API. For HTTP APIs, the routeSelectionExpression must be
--   ${request.method} ${request.path}. If not provided, this will be the
--   default for HTTP APIs. This property is required for WebSocket APIs.
--   
--   <a>$sel:name:Api'</a>, <a>api_name</a> - The name of the API.
--   
--   <a>$sel:protocolType:Api'</a>, <a>api_protocolType</a> - The API
--   protocol.
newApi :: Text -> Text -> ProtocolType -> Api

-- | Represents an API mapping.
--   
--   <i>See:</i> <a>newApiMapping</a> smart constructor.
data ApiMapping
ApiMapping' :: Maybe Text -> Maybe Text -> Text -> Text -> ApiMapping

-- | Create a value of <a>ApiMapping</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiMappingKey:ApiMapping'</a>, <a>apiMapping_apiMappingKey</a>
--   - The API mapping key.
--   
--   <a>$sel:apiMappingId:ApiMapping'</a>, <a>apiMapping_apiMappingId</a> -
--   The API mapping identifier.
--   
--   <a>$sel:stage:ApiMapping'</a>, <a>apiMapping_stage</a> - The API
--   stage.
--   
--   <a>$sel:apiId:ApiMapping'</a>, <a>apiMapping_apiId</a> - The API
--   identifier.
newApiMapping :: Text -> Text -> ApiMapping

-- | Represents an authorizer.
--   
--   <i>See:</i> <a>newAuthorizer</a> smart constructor.
data Authorizer
Authorizer' :: Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Text -> Maybe Text -> Maybe JWTConfiguration -> Maybe Text -> Maybe Natural -> Maybe [Text] -> Maybe AuthorizerType -> Text -> Authorizer

-- | Create a value of <a>Authorizer</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizerCredentialsArn:Authorizer'</a>,
--   <a>authorizer_authorizerCredentialsArn</a> - Specifies the required
--   credentials as an IAM role for API Gateway to invoke the authorizer.
--   To specify an IAM role for API Gateway to assume, use the role's
--   Amazon Resource Name (ARN). To use resource-based permissions on the
--   Lambda function, don't specify this parameter. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:identityValidationExpression:Authorizer'</a>,
--   <a>authorizer_identityValidationExpression</a> - The validation
--   expression does not apply to the REQUEST authorizer.
--   
--   <a>$sel:enableSimpleResponses:Authorizer'</a>,
--   <a>authorizer_enableSimpleResponses</a> - Specifies whether a Lambda
--   authorizer returns a response in a simple format. If enabled, the
--   Lambda authorizer can return a boolean value instead of an IAM policy.
--   Supported only for HTTP APIs. To learn more, see <a>Working with AWS
--   Lambda authorizers for HTTP APIs</a>
--   
--   <a>$sel:authorizerUri:Authorizer'</a>, <a>authorizer_authorizerUri</a>
--   - The authorizer's Uniform Resource Identifier (URI). For REQUEST
--   authorizers, this must be a well-formed Lambda function URI, for
--   example,
--   arn:aws:apigateway:us-west-2:lambda:path/2015-03-31/functions/arn:aws:lambda:us-west-2:{account_id}:function:{lambda_function_name}/invocations.
--   In general, the URI has this form:
--   arn:aws:apigateway:{region}:lambda:path/{service_api} , where {region}
--   is the same as the region hosting the Lambda function, path indicates
--   that the remaining substring in the URI should be treated as the path
--   to the resource, including the initial /. For Lambda functions, this
--   is usually of the form
--   /2015-03-31/functions/[FunctionARN]/invocations. Supported only for
--   REQUEST authorizers.
--   
--   <a>$sel:authorizerPayloadFormatVersion:Authorizer'</a>,
--   <a>authorizer_authorizerPayloadFormatVersion</a> - Specifies the
--   format of the payload sent to an HTTP API Lambda authorizer. Required
--   for HTTP API Lambda authorizers. Supported values are 1.0 and 2.0. To
--   learn more, see <a>Working with AWS Lambda authorizers for HTTP
--   APIs</a>.
--   
--   <a>$sel:jwtConfiguration:Authorizer'</a>,
--   <a>authorizer_jwtConfiguration</a> - Represents the configuration of a
--   JWT authorizer. Required for the JWT authorizer type. Supported only
--   for HTTP APIs.
--   
--   <a>$sel:authorizerId:Authorizer'</a>, <a>authorizer_authorizerId</a> -
--   The authorizer identifier.
--   
--   <a>$sel:authorizerResultTtlInSeconds:Authorizer'</a>,
--   <a>authorizer_authorizerResultTtlInSeconds</a> - The time to live
--   (TTL) for cached authorizer results, in seconds. If it equals 0,
--   authorization caching is disabled. If it is greater than 0, API
--   Gateway caches authorizer responses. The maximum value is 3600, or 1
--   hour. Supported only for HTTP API Lambda authorizers.
--   
--   <a>$sel:identitySource:Authorizer'</a>,
--   <a>authorizer_identitySource</a> - The identity source for which
--   authorization is requested.
--   
--   For a REQUEST authorizer, this is optional. The value is a set of one
--   or more mapping expressions of the specified request parameters. The
--   identity source can be headers, query string parameters, stage
--   variables, and context parameters. For example, if an Auth header and
--   a Name query string parameter are defined as identity sources, this
--   value is route.request.header.Auth, route.request.querystring.Name for
--   WebSocket APIs. For HTTP APIs, use selection expressions prefixed with
--   $, for example, $request.header.Auth, $request.querystring.Name. These
--   parameters are used to perform runtime validation for Lambda-based
--   authorizers by verifying all of the identity-related request
--   parameters are present in the request, not null, and non-empty. Only
--   when this is true does the authorizer invoke the authorizer Lambda
--   function. Otherwise, it returns a 401 Unauthorized response without
--   calling the Lambda function. For HTTP APIs, identity sources are also
--   used as the cache key when caching is enabled. To learn more, see
--   <a>Working with AWS Lambda authorizers for HTTP APIs</a>.
--   
--   For JWT, a single entry that specifies where to extract the JSON Web
--   Token (JWT) from inbound requests. Currently only header-based and
--   query parameter-based selections are supported, for example
--   $request.header.Authorization.
--   
--   <a>$sel:authorizerType:Authorizer'</a>,
--   <a>authorizer_authorizerType</a> - The authorizer type. Specify
--   REQUEST for a Lambda function using incoming request parameters.
--   Specify JWT to use JSON Web Tokens (supported only for HTTP APIs).
--   
--   <a>$sel:name:Authorizer'</a>, <a>authorizer_name</a> - The name of the
--   authorizer.
newAuthorizer :: Text -> Authorizer

-- | Represents a CORS configuration. Supported only for HTTP APIs. See
--   <a>Configuring CORS</a> for more information.
--   
--   <i>See:</i> <a>newCors</a> smart constructor.
data Cors
Cors' :: Maybe Int -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe [Text] -> Maybe Bool -> Cors

-- | Create a value of <a>Cors</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:maxAge:Cors'</a>, <a>cors_maxAge</a> - The number of seconds
--   that the browser should cache preflight request results. Supported
--   only for HTTP APIs.
--   
--   <a>$sel:allowMethods:Cors'</a>, <a>cors_allowMethods</a> - Represents
--   a collection of allowed HTTP methods. Supported only for HTTP APIs.
--   
--   <a>$sel:allowHeaders:Cors'</a>, <a>cors_allowHeaders</a> - Represents
--   a collection of allowed headers. Supported only for HTTP APIs.
--   
--   <a>$sel:exposeHeaders:Cors'</a>, <a>cors_exposeHeaders</a> -
--   Represents a collection of exposed headers. Supported only for HTTP
--   APIs.
--   
--   <a>$sel:allowOrigins:Cors'</a>, <a>cors_allowOrigins</a> - Represents
--   a collection of allowed origins. Supported only for HTTP APIs.
--   
--   <a>$sel:allowCredentials:Cors'</a>, <a>cors_allowCredentials</a> -
--   Specifies whether credentials are included in the CORS request.
--   Supported only for HTTP APIs.
newCors :: Cors

-- | An immutable representation of an API that can be called by users. A
--   Deployment must be associated with a Stage for it to be callable over
--   the internet.
--   
--   <i>See:</i> <a>newDeployment</a> smart constructor.
data Deployment
Deployment' :: Maybe Text -> Maybe Bool -> Maybe Text -> Maybe POSIX -> Maybe DeploymentStatus -> Maybe Text -> Deployment

-- | Create a value of <a>Deployment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:deploymentId:Deployment'</a>, <a>deployment_deploymentId</a> -
--   The identifier for the deployment.
--   
--   <a>$sel:autoDeployed:Deployment'</a>, <a>deployment_autoDeployed</a> -
--   Specifies whether a deployment was automatically released.
--   
--   <a>$sel:deploymentStatusMessage:Deployment'</a>,
--   <a>deployment_deploymentStatusMessage</a> - May contain additional
--   feedback on the status of an API deployment.
--   
--   <a>$sel:createdDate:Deployment'</a>, <a>deployment_createdDate</a> -
--   The date and time when the Deployment resource was created.
--   
--   <a>$sel:deploymentStatus:Deployment'</a>,
--   <a>deployment_deploymentStatus</a> - The status of the deployment:
--   PENDING, FAILED, or SUCCEEDED.
--   
--   <a>$sel:description:Deployment'</a>, <a>deployment_description</a> -
--   The description for the deployment.
newDeployment :: Deployment

-- | Represents a domain name.
--   
--   <i>See:</i> <a>newDomainName</a> smart constructor.
data DomainName
DomainName' :: Maybe [DomainNameConfiguration] -> Maybe MutualTlsAuthentication -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> DomainName

-- | Create a value of <a>DomainName</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:domainNameConfigurations:DomainName'</a>,
--   <a>domainName_domainNameConfigurations</a> - The domain name
--   configurations.
--   
--   <a>$sel:mutualTlsAuthentication:DomainName'</a>,
--   <a>domainName_mutualTlsAuthentication</a> - The mutual TLS
--   authentication configuration for a custom domain name.
--   
--   <a>$sel:apiMappingSelectionExpression:DomainName'</a>,
--   <a>domainName_apiMappingSelectionExpression</a> - The API mapping
--   selection expression.
--   
--   <a>$sel:tags:DomainName'</a>, <a>domainName_tags</a> - The collection
--   of tags associated with a domain name.
--   
--   <a>$sel:domainName:DomainName'</a>, <a>domainName_domainName</a> - The
--   name of the DomainName resource.
newDomainName :: Text -> DomainName

-- | The domain name configuration.
--   
--   <i>See:</i> <a>newDomainNameConfiguration</a> smart constructor.
data DomainNameConfiguration
DomainNameConfiguration' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe EndpointType -> Maybe SecurityPolicy -> Maybe POSIX -> Maybe Text -> Maybe DomainNameStatus -> DomainNameConfiguration

-- | Create a value of <a>DomainNameConfiguration</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:apiGatewayDomainName:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_apiGatewayDomainName</a> - A domain name
--   for the API.
--   
--   
--   <a>$sel:ownershipVerificationCertificateArn:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_ownershipVerificationCertificateArn</a> -
--   The ARN of the public certificate issued by ACM to validate ownership
--   of your custom domain. Only required when configuring mutual TLS and
--   using an ACM imported or private CA certificate ARN as the
--   regionalCertificateArn
--   
--   <a>$sel:certificateName:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_certificateName</a> - The user-friendly
--   name of the certificate that will be used by the edge-optimized
--   endpoint for this domain name.
--   
--   <a>$sel:hostedZoneId:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_hostedZoneId</a> - The Amazon Route 53
--   Hosted Zone ID of the endpoint.
--   
--   <a>$sel:certificateArn:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_certificateArn</a> - An AWS-managed
--   certificate that will be used by the edge-optimized endpoint for this
--   domain name. AWS Certificate Manager is the only supported source.
--   
--   <a>$sel:endpointType:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_endpointType</a> - The endpoint type.
--   
--   <a>$sel:securityPolicy:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_securityPolicy</a> - The Transport Layer
--   Security (TLS) version of the security policy for this domain name.
--   The valid values are TLS_1_0 and TLS_1_2.
--   
--   <a>$sel:certificateUploadDate:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_certificateUploadDate</a> - The timestamp
--   when the certificate that was used by edge-optimized endpoint for this
--   domain name was uploaded.
--   
--   <a>$sel:domainNameStatusMessage:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_domainNameStatusMessage</a> - An optional
--   text message containing detailed information about status of the
--   domain name migration.
--   
--   <a>$sel:domainNameStatus:DomainNameConfiguration'</a>,
--   <a>domainNameConfiguration_domainNameStatus</a> - The status of the
--   domain name migration. The valid values are AVAILABLE, UPDATING,
--   PENDING_CERTIFICATE_REIMPORT, and PENDING_OWNERSHIP_VERIFICATION. If
--   the status is UPDATING, the domain cannot be modified further until
--   the existing operation is complete. If it is AVAILABLE, the domain can
--   be updated.
newDomainNameConfiguration :: DomainNameConfiguration

-- | Represents an integration.
--   
--   <i>See:</i> <a>newIntegration</a> smart constructor.
data Integration
Integration' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe PassthroughBehavior -> Maybe Text -> Maybe TlsConfig -> Maybe Text -> Maybe Text -> Maybe Natural -> Maybe Bool -> Maybe ContentHandlingStrategy -> Maybe IntegrationType -> Maybe Text -> Maybe ConnectionType -> Maybe (HashMap Text (HashMap Text Text)) -> Integration

-- | Create a value of <a>Integration</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseSelectionExpression:Integration'</a>,
--   <a>integration_integrationResponseSelectionExpression</a> - The
--   integration response selection expression for the integration.
--   Supported only for WebSocket APIs. See <a>Integration Response
--   Selection Expressions</a>.
--   
--   <a>$sel:requestTemplates:Integration'</a>,
--   <a>integration_requestTemplates</a> - Represents a map of Velocity
--   templates that are applied on the request payload based on the value
--   of the Content-Type header sent by the client. The content type value
--   is the key in this map, and the template (as a String) is the value.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:integrationSubtype:Integration'</a>,
--   <a>integration_integrationSubtype</a> - Supported only for HTTP API
--   AWS_PROXY integrations. Specifies the AWS service action to invoke. To
--   learn more, see <a>Integration subtype reference</a>.
--   
--   <a>$sel:credentialsArn:Integration'</a>,
--   <a>integration_credentialsArn</a> - Specifies the credentials required
--   for the integration, if any. For AWS integrations, three options are
--   available. To specify an IAM Role for API Gateway to assume, use the
--   role's Amazon Resource Name (ARN). To require that the caller's
--   identity be passed through from the request, specify the string
--   arn:aws:iam::*:user/*. To use resource-based permissions on supported
--   AWS services, specify null.
--   
--   <a>$sel:integrationUri:Integration'</a>,
--   <a>integration_integrationUri</a> - For a Lambda integration, specify
--   the URI of a Lambda function.
--   
--   For an HTTP integration, specify a fully-qualified URL.
--   
--   For an HTTP API private integration, specify the ARN of an Application
--   Load Balancer listener, Network Load Balancer listener, or AWS Cloud
--   Map service. If you specify the ARN of an AWS Cloud Map service, API
--   Gateway uses DiscoverInstances to identify resources. You can use
--   query parameters to target specific resources. To learn more, see
--   <a>DiscoverInstances</a>. For private integrations, all resources must
--   be owned by the same AWS account.
--   
--   <a>$sel:integrationId:Integration'</a>,
--   <a>integration_integrationId</a> - Represents the identifier of an
--   integration.
--   
--   <a>$sel:requestParameters:Integration'</a>,
--   <a>integration_requestParameters</a> - For WebSocket APIs, a key-value
--   map specifying request parameters that are passed from the method
--   request to the backend. The key is an integration request parameter
--   name and the associated value is a method request parameter value or
--   static value that must be enclosed within single quotes and
--   pre-encoded as required by the backend. The method request parameter
--   value must match the pattern of method.request.{location}.{name} ,
--   where {location} is querystring, path, or header; and {name} must be a
--   valid and unique method request parameter name.
--   
--   For HTTP API integrations with a specified integrationSubtype, request
--   parameters are a key-value map specifying parameters that are passed
--   to AWS_PROXY integrations. You can provide static values, or map
--   request data, stage variables, or context variables that are evaluated
--   at runtime. To learn more, see <a>Working with AWS service
--   integrations for HTTP APIs</a>.
--   
--   For HTTP API itegrations, without a specified integrationSubtype
--   request parameters are a key-value map specifying how to transform
--   HTTP requests before sending them to backend integrations. The key
--   should follow the pattern
--   &lt;action&gt;:&lt;header|querystring|path&gt;.&lt;location&gt;. The
--   action can be append, overwrite or remove. For values, you can provide
--   static values, or map request data, stage variables, or context
--   variables that are evaluated at runtime. To learn more, see
--   <a>Transforming API requests and responses</a>.
--   
--   <a>$sel:connectionId:Integration'</a>, <a>integration_connectionId</a>
--   - The ID of the VPC link for a private integration. Supported only for
--   HTTP APIs.
--   
--   <a>$sel:passthroughBehavior:Integration'</a>,
--   <a>integration_passthroughBehavior</a> - Specifies the pass-through
--   behavior for incoming requests based on the Content-Type header in the
--   request, and the available mapping templates specified as the
--   requestTemplates property on the Integration resource. There are three
--   valid values: WHEN_NO_MATCH, WHEN_NO_TEMPLATES, and NEVER. Supported
--   only for WebSocket APIs.
--   
--   WHEN_NO_MATCH passes the request body for unmapped content types
--   through to the integration backend without transformation.
--   
--   NEVER rejects unmapped content types with an HTTP 415 Unsupported
--   Media Type response.
--   
--   WHEN_NO_TEMPLATES allows pass-through when the integration has no
--   content types mapped to templates. However, if there is at least one
--   content type defined, unmapped content types will be rejected with the
--   same HTTP 415 Unsupported Media Type response.
--   
--   <a>$sel:integrationMethod:Integration'</a>,
--   <a>integration_integrationMethod</a> - Specifies the integration's
--   HTTP method type.
--   
--   <a>$sel:tlsConfig:Integration'</a>, <a>integration_tlsConfig</a> - The
--   TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
--   
--   <a>$sel:payloadFormatVersion:Integration'</a>,
--   <a>integration_payloadFormatVersion</a> - Specifies the format of the
--   payload sent to an integration. Required for HTTP APIs.
--   
--   <a>$sel:templateSelectionExpression:Integration'</a>,
--   <a>integration_templateSelectionExpression</a> - The template
--   selection expression for the integration. Supported only for WebSocket
--   APIs.
--   
--   <a>$sel:timeoutInMillis:Integration'</a>,
--   <a>integration_timeoutInMillis</a> - Custom timeout between 50 and
--   29,000 milliseconds for WebSocket APIs and between 50 and 30,000
--   milliseconds for HTTP APIs. The default timeout is 29 seconds for
--   WebSocket APIs and 30 seconds for HTTP APIs.
--   
--   <a>$sel:apiGatewayManaged:Integration'</a>,
--   <a>integration_apiGatewayManaged</a> - Specifies whether an
--   integration is managed by API Gateway. If you created an API using
--   using quick create, the resulting integration is managed by API
--   Gateway. You can update a managed integration, but you can't delete
--   it.
--   
--   <a>$sel:contentHandlingStrategy:Integration'</a>,
--   <a>integration_contentHandlingStrategy</a> - Supported only for
--   WebSocket APIs. Specifies how to handle response payload content type
--   conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:integrationType:Integration'</a>,
--   <a>integration_integrationType</a> - The integration type of an
--   integration. One of the following:
--   
--   AWS: for integrating the route or method request with an AWS service
--   action, including the Lambda function-invoking action. With the Lambda
--   function-invoking action, this is referred to as the Lambda custom
--   integration. With any other AWS service action, this is known as AWS
--   integration. Supported only for WebSocket APIs.
--   
--   AWS_PROXY: for integrating the route or method request with a Lambda
--   function or other AWS service action. This integration is also
--   referred to as a Lambda proxy integration.
--   
--   HTTP: for integrating the route or method request with an HTTP
--   endpoint. This integration is also referred to as the HTTP custom
--   integration. Supported only for WebSocket APIs.
--   
--   HTTP_PROXY: for integrating the route or method request with an HTTP
--   endpoint, with the client request passed through as-is. This is also
--   referred to as HTTP proxy integration.
--   
--   MOCK: for integrating the route or method request with API Gateway as
--   a "loopback" endpoint without invoking any backend. Supported only for
--   WebSocket APIs.
--   
--   <a>$sel:description:Integration'</a>, <a>integration_description</a> -
--   Represents the description of an integration.
--   
--   <a>$sel:connectionType:Integration'</a>,
--   <a>integration_connectionType</a> - The type of the network connection
--   to the integration endpoint. Specify INTERNET for connections through
--   the public routable internet or VPC_LINK for private connections
--   between API Gateway and resources in a VPC. The default value is
--   INTERNET.
--   
--   <a>$sel:responseParameters:Integration'</a>,
--   <a>integration_responseParameters</a> - Supported only for HTTP APIs.
--   You use response parameters to transform the HTTP response from a
--   backend integration before returning the response to clients. Specify
--   a key-value map from a selection key to response parameters. The
--   selection key must be a valid HTTP status code within the range of
--   200-599. Response parameters are a key-value map. The key must match
--   pattern &lt;action&gt;:&lt;header&gt;.&lt;location&gt; or
--   overwrite.statuscode. The action can be append, overwrite or remove.
--   The value can be a static value, or map to response data, stage
--   variables, or context variables that are evaluated at runtime. To
--   learn more, see <a>Transforming API requests and responses</a>.
newIntegration :: Integration

-- | Represents an integration response.
--   
--   <i>See:</i> <a>newIntegrationResponse</a> smart constructor.
data IntegrationResponse
IntegrationResponse' :: Maybe Text -> Maybe Text -> Maybe ContentHandlingStrategy -> Maybe (HashMap Text Text) -> Maybe (HashMap Text Text) -> Text -> IntegrationResponse

-- | Create a value of <a>IntegrationResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integrationResponseId:IntegrationResponse'</a>,
--   <a>integrationResponse_integrationResponseId</a> - The integration
--   response ID.
--   
--   <a>$sel:templateSelectionExpression:IntegrationResponse'</a>,
--   <a>integrationResponse_templateSelectionExpression</a> - The template
--   selection expressions for the integration response.
--   
--   <a>$sel:contentHandlingStrategy:IntegrationResponse'</a>,
--   <a>integrationResponse_contentHandlingStrategy</a> - Supported only
--   for WebSocket APIs. Specifies how to handle response payload content
--   type conversions. Supported values are CONVERT_TO_BINARY and
--   CONVERT_TO_TEXT, with the following behaviors:
--   
--   CONVERT_TO_BINARY: Converts a response payload from a Base64-encoded
--   string to the corresponding binary blob.
--   
--   CONVERT_TO_TEXT: Converts a response payload from a binary blob to a
--   Base64-encoded string.
--   
--   If this property is not defined, the response payload will be passed
--   through from the integration response to the route response or method
--   response without modification.
--   
--   <a>$sel:responseTemplates:IntegrationResponse'</a>,
--   <a>integrationResponse_responseTemplates</a> - The collection of
--   response templates for the integration response as a string-to-string
--   map of key-value pairs. Response templates are represented as a
--   key/value map, with a content-type as the key and a template as the
--   value.
--   
--   <a>$sel:responseParameters:IntegrationResponse'</a>,
--   <a>integrationResponse_responseParameters</a> - A key-value map
--   specifying response parameters that are passed to the method response
--   from the backend. The key is a method response header parameter name
--   and the mapped value is an integration response header value, a static
--   value enclosed within a pair of single quotes, or a JSON expression
--   from the integration response body. The mapping key must match the
--   pattern of method.response.header.{name}, where name is a valid and
--   unique header name. The mapped non-static value must match the pattern
--   of integration.response.header.{name} or
--   integration.response.body.{JSON-expression}, where name is a valid and
--   unique response header name and JSON-expression is a valid JSON
--   expression without the $ prefix.
--   
--   <a>$sel:integrationResponseKey:IntegrationResponse'</a>,
--   <a>integrationResponse_integrationResponseKey</a> - The integration
--   response key.
newIntegrationResponse :: Text -> IntegrationResponse

-- | Represents the configuration of a JWT authorizer. Required for the JWT
--   authorizer type. Supported only for HTTP APIs.
--   
--   <i>See:</i> <a>newJWTConfiguration</a> smart constructor.
data JWTConfiguration
JWTConfiguration' :: Maybe [Text] -> Maybe Text -> JWTConfiguration

-- | Create a value of <a>JWTConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:audience:JWTConfiguration'</a>,
--   <a>jWTConfiguration_audience</a> - A list of the intended recipients
--   of the JWT. A valid JWT must provide an aud that matches at least one
--   entry in this list. See <a>RFC 7519</a>. Supported only for HTTP APIs.
--   
--   <a>$sel:issuer:JWTConfiguration'</a>, <a>jWTConfiguration_issuer</a> -
--   The base domain of the identity provider that issues JSON Web Tokens.
--   For example, an Amazon Cognito user pool has the following format:
--   https://cognito-idp.{region}.amazonaws.com/{userPoolId} . Required for
--   the JWT authorizer type. Supported only for HTTP APIs.
newJWTConfiguration :: JWTConfiguration

-- | Represents a data model for an API. Supported only for WebSocket APIs.
--   See <a>Create Models and Mapping Templates for Request and Response
--   Mappings</a>.
--   
--   <i>See:</i> <a>newModel</a> smart constructor.
data Model
Model' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Text -> Model

-- | Create a value of <a>Model</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelId:Model'</a>, <a>model_modelId</a> - The model
--   identifier.
--   
--   <a>$sel:schema:Model'</a>, <a>model_schema</a> - The schema for the
--   model. For application/json models, this should be JSON schema draft 4
--   model.
--   
--   <a>$sel:description:Model'</a>, <a>model_description</a> - The
--   description of the model.
--   
--   <a>$sel:contentType:Model'</a>, <a>model_contentType</a> - The
--   content-type for the model, for example, "application/json".
--   
--   <a>$sel:name:Model'</a>, <a>model_name</a> - The name of the model.
--   Must be alphanumeric.
newModel :: Text -> Model

-- | <i>See:</i> <a>newMutualTlsAuthentication</a> smart constructor.
data MutualTlsAuthentication
MutualTlsAuthentication' :: Maybe [Text] -> Maybe Text -> Maybe Text -> MutualTlsAuthentication

-- | Create a value of <a>MutualTlsAuthentication</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreWarnings:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreWarnings</a> - A list of warnings
--   that API Gateway returns while processing your truststore. Invalid
--   certificates produce warnings. Mutual TLS is still enabled, but some
--   clients might not be able to access your API. To resolve warnings,
--   upload a new truststore to S3, and then update you domain name to use
--   the new version.
--   
--   <a>$sel:truststoreUri:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreUri</a> - An Amazon S3 URL that
--   specifies the truststore for mutual TLS authentication, for example,
--   s3://bucket-name/key-name. The truststore can contain certificates
--   from public or private certificate authorities. To update the
--   truststore, upload a new version to S3, and then update your custom
--   domain name to use the new version. To update the truststore, you must
--   have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthentication'</a>,
--   <a>mutualTlsAuthentication_truststoreVersion</a> - The version of the
--   S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthentication :: MutualTlsAuthentication

-- | <i>See:</i> <a>newMutualTlsAuthenticationInput</a> smart constructor.
data MutualTlsAuthenticationInput
MutualTlsAuthenticationInput' :: Maybe Text -> Maybe Text -> MutualTlsAuthenticationInput

-- | Create a value of <a>MutualTlsAuthenticationInput</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:truststoreUri:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreUri</a> - An Amazon S3 URL
--   that specifies the truststore for mutual TLS authentication, for
--   example, s3://bucket-name/key-name. The truststore can contain
--   certificates from public or private certificate authorities. To update
--   the truststore, upload a new version to S3, and then update your
--   custom domain name to use the new version. To update the truststore,
--   you must have permissions to access the S3 object.
--   
--   <a>$sel:truststoreVersion:MutualTlsAuthenticationInput'</a>,
--   <a>mutualTlsAuthenticationInput_truststoreVersion</a> - The version of
--   the S3 object that contains your truststore. To specify a version, you
--   must have versioning enabled for the S3 bucket.
newMutualTlsAuthenticationInput :: MutualTlsAuthenticationInput

-- | Validation constraints imposed on parameters of a request (path, query
--   string, headers).
--   
--   <i>See:</i> <a>newParameterConstraints</a> smart constructor.
data ParameterConstraints
ParameterConstraints' :: Maybe Bool -> ParameterConstraints

-- | Create a value of <a>ParameterConstraints</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:required:ParameterConstraints'</a>,
--   <a>parameterConstraints_required</a> - Whether or not the parameter is
--   required.
newParameterConstraints :: ParameterConstraints

-- | Represents a route.
--   
--   <i>See:</i> <a>newRoute</a> smart constructor.
data Route
Route' :: Maybe [Text] -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe AuthorizationType -> Maybe Bool -> Maybe Text -> Text -> Route

-- | Create a value of <a>Route</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:authorizationScopes:Route'</a>,
--   <a>route_authorizationScopes</a> - A list of authorization scopes
--   configured on a route. The scopes are used with a JWT authorizer to
--   authorize the method invocation. The authorization works by matching
--   the route scopes against the scopes parsed from the access token in
--   the incoming request. The method invocation is authorized if any route
--   scope matches a claimed scope in the access token. Otherwise, the
--   invocation is not authorized. When the route scope is configured, the
--   client must provide an access token instead of an identity token for
--   authorization purposes.
--   
--   <a>$sel:modelSelectionExpression:Route'</a>,
--   <a>route_modelSelectionExpression</a> - The model selection expression
--   for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestModels:Route'</a>, <a>route_requestModels</a> - The
--   request models for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:routeResponseSelectionExpression:Route'</a>,
--   <a>route_routeResponseSelectionExpression</a> - The route response
--   selection expression for the route. Supported only for WebSocket APIs.
--   
--   <a>$sel:requestParameters:Route'</a>, <a>route_requestParameters</a> -
--   The request parameters for the route. Supported only for WebSocket
--   APIs.
--   
--   <a>$sel:routeId:Route'</a>, <a>route_routeId</a> - The route ID.
--   
--   <a>$sel:authorizerId:Route'</a>, <a>route_authorizerId</a> - The
--   identifier of the Authorizer resource to be associated with this
--   route. The authorizer identifier is generated by API Gateway when you
--   created the authorizer.
--   
--   <a>$sel:operationName:Route'</a>, <a>route_operationName</a> - The
--   operation name for the route.
--   
--   <a>$sel:apiGatewayManaged:Route'</a>, <a>route_apiGatewayManaged</a> -
--   Specifies whether a route is managed by API Gateway. If you created an
--   API using quick create, the $default route is managed by API Gateway.
--   You can't modify the $default route key.
--   
--   <a>$sel:authorizationType:Route'</a>, <a>route_authorizationType</a> -
--   The authorization type for the route. For WebSocket APIs, valid values
--   are NONE for open access, AWS_IAM for using AWS IAM permissions, and
--   CUSTOM for using a Lambda authorizer For HTTP APIs, valid values are
--   NONE for open access, JWT for using JSON Web Tokens, AWS_IAM for using
--   AWS IAM permissions, and CUSTOM for using a Lambda authorizer.
--   
--   <a>$sel:apiKeyRequired:Route'</a>, <a>route_apiKeyRequired</a> -
--   Specifies whether an API key is required for this route. Supported
--   only for WebSocket APIs.
--   
--   <a>$sel:target:Route'</a>, <a>route_target</a> - The target for the
--   route.
--   
--   <a>$sel:routeKey:Route'</a>, <a>route_routeKey</a> - The route key for
--   the route.
newRoute :: Text -> Route

-- | Represents a route response.
--   
--   <i>See:</i> <a>newRouteResponse</a> smart constructor.
data RouteResponse
RouteResponse' :: Maybe Text -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe (HashMap Text ParameterConstraints) -> Text -> RouteResponse

-- | Create a value of <a>RouteResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:modelSelectionExpression:RouteResponse'</a>,
--   <a>routeResponse_modelSelectionExpression</a> - Represents the model
--   selection expression of a route response. Supported only for WebSocket
--   APIs.
--   
--   <a>$sel:responseModels:RouteResponse'</a>,
--   <a>routeResponse_responseModels</a> - Represents the response models
--   of a route response.
--   
--   <a>$sel:routeResponseId:RouteResponse'</a>,
--   <a>routeResponse_routeResponseId</a> - Represents the identifier of a
--   route response.
--   
--   <a>$sel:responseParameters:RouteResponse'</a>,
--   <a>routeResponse_responseParameters</a> - Represents the response
--   parameters of a route response.
--   
--   <a>$sel:routeResponseKey:RouteResponse'</a>,
--   <a>routeResponse_routeResponseKey</a> - Represents the route response
--   key of a route response.
newRouteResponse :: Text -> RouteResponse

-- | Represents a collection of route settings.
--   
--   <i>See:</i> <a>newRouteSettings</a> smart constructor.
data RouteSettings
RouteSettings' :: Maybe Bool -> Maybe Int -> Maybe LoggingLevel -> Maybe Double -> Maybe Bool -> RouteSettings

-- | Create a value of <a>RouteSettings</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:dataTraceEnabled:RouteSettings'</a>,
--   <a>routeSettings_dataTraceEnabled</a> - Specifies whether (true) or
--   not (false) data trace logging is enabled for this route. This
--   property affects the log entries pushed to Amazon CloudWatch Logs.
--   Supported only for WebSocket APIs.
--   
--   <a>$sel:throttlingBurstLimit:RouteSettings'</a>,
--   <a>routeSettings_throttlingBurstLimit</a> - Specifies the throttling
--   burst limit.
--   
--   <a>$sel:loggingLevel:RouteSettings'</a>,
--   <a>routeSettings_loggingLevel</a> - Specifies the logging level for
--   this route: INFO, ERROR, or OFF. This property affects the log entries
--   pushed to Amazon CloudWatch Logs. Supported only for WebSocket APIs.
--   
--   <a>$sel:throttlingRateLimit:RouteSettings'</a>,
--   <a>routeSettings_throttlingRateLimit</a> - Specifies the throttling
--   rate limit.
--   
--   <a>$sel:detailedMetricsEnabled:RouteSettings'</a>,
--   <a>routeSettings_detailedMetricsEnabled</a> - Specifies whether
--   detailed metrics are enabled.
newRouteSettings :: RouteSettings

-- | Represents an API stage.
--   
--   <i>See:</i> <a>newStage</a> smart constructor.
data Stage
Stage' :: Maybe Text -> Maybe Text -> Maybe (HashMap Text RouteSettings) -> Maybe AccessLogSettings -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe Bool -> Maybe POSIX -> Maybe RouteSettings -> Maybe Bool -> Maybe POSIX -> Maybe Text -> Maybe (HashMap Text Text) -> Text -> Stage

-- | Create a value of <a>Stage</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lastDeploymentStatusMessage:Stage'</a>,
--   <a>stage_lastDeploymentStatusMessage</a> - Describes the status of the
--   last deployment of a stage. Supported only for stages with autoDeploy
--   enabled.
--   
--   <a>$sel:deploymentId:Stage'</a>, <a>stage_deploymentId</a> - The
--   identifier of the Deployment that the Stage is associated with. Can't
--   be updated if autoDeploy is enabled.
--   
--   <a>$sel:routeSettings:Stage'</a>, <a>stage_routeSettings</a> - Route
--   settings for the stage, by routeKey.
--   
--   <a>$sel:accessLogSettings:Stage'</a>, <a>stage_accessLogSettings</a> -
--   Settings for logging access in this stage.
--   
--   <a>$sel:clientCertificateId:Stage'</a>,
--   <a>stage_clientCertificateId</a> - The identifier of a client
--   certificate for a Stage. Supported only for WebSocket APIs.
--   
--   <a>$sel:stageVariables:Stage'</a>, <a>stage_stageVariables</a> - A map
--   that defines the stage variables for a stage resource. Variable names
--   can have alphanumeric and underscore characters, and the values must
--   match [A-Za-z0-9-._~:/?#&amp;=,]+.
--   
--   <a>$sel:autoDeploy:Stage'</a>, <a>stage_autoDeploy</a> - Specifies
--   whether updates to an API automatically trigger a new deployment. The
--   default value is false.
--   
--   <a>$sel:createdDate:Stage'</a>, <a>stage_createdDate</a> - The
--   timestamp when the stage was created.
--   
--   <a>$sel:defaultRouteSettings:Stage'</a>,
--   <a>stage_defaultRouteSettings</a> - Default route settings for the
--   stage.
--   
--   <a>$sel:apiGatewayManaged:Stage'</a>, <a>stage_apiGatewayManaged</a> -
--   Specifies whether a stage is managed by API Gateway. If you created an
--   API using quick create, the $default stage is managed by API Gateway.
--   You can't modify the $default stage.
--   
--   <a>$sel:lastUpdatedDate:Stage'</a>, <a>stage_lastUpdatedDate</a> - The
--   timestamp when the stage was last updated.
--   
--   <a>$sel:description:Stage'</a>, <a>stage_description</a> - The
--   description of the stage.
--   
--   <a>$sel:tags:Stage'</a>, <a>stage_tags</a> - The collection of tags.
--   Each tag element is associated with a given resource.
--   
--   <a>$sel:stageName:Stage'</a>, <a>stage_stageName</a> - The name of the
--   stage.
newStage :: Text -> Stage

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
--   
--   <i>See:</i> <a>newTlsConfig</a> smart constructor.
data TlsConfig
TlsConfig' :: Maybe Text -> TlsConfig

-- | Create a value of <a>TlsConfig</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverNameToVerify:TlsConfig'</a>,
--   <a>tlsConfig_serverNameToVerify</a> - If you specify a server name,
--   API Gateway uses it to verify the hostname on the integration's
--   certificate. The server name is also included in the TLS handshake to
--   support Server Name Indication (SNI) or virtual hosting.
newTlsConfig :: TlsConfig

-- | The TLS configuration for a private integration. If you specify a TLS
--   configuration, private integration traffic uses the HTTPS protocol.
--   Supported only for HTTP APIs.
--   
--   <i>See:</i> <a>newTlsConfigInput</a> smart constructor.
data TlsConfigInput
TlsConfigInput' :: Maybe Text -> TlsConfigInput

-- | Create a value of <a>TlsConfigInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:serverNameToVerify:TlsConfigInput'</a>,
--   <a>tlsConfigInput_serverNameToVerify</a> - If you specify a server
--   name, API Gateway uses it to verify the hostname on the integration's
--   certificate. The server name is also included in the TLS handshake to
--   support Server Name Indication (SNI) or virtual hosting.
newTlsConfigInput :: TlsConfigInput

-- | Represents a VPC link.
--   
--   <i>See:</i> <a>newVpcLink</a> smart constructor.
data VpcLink
VpcLink' :: Maybe POSIX -> Maybe VpcLinkVersion -> Maybe Text -> Maybe (HashMap Text Text) -> Maybe VpcLinkStatus -> Text -> [Text] -> [Text] -> Text -> VpcLink

-- | Create a value of <a>VpcLink</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:createdDate:VpcLink'</a>, <a>vpcLink_createdDate</a> - The
--   timestamp when the VPC link was created.
--   
--   <a>$sel:vpcLinkVersion:VpcLink'</a>, <a>vpcLink_vpcLinkVersion</a> -
--   The version of the VPC link.
--   
--   <a>$sel:vpcLinkStatusMessage:VpcLink'</a>,
--   <a>vpcLink_vpcLinkStatusMessage</a> - A message summarizing the cause
--   of the status of the VPC link.
--   
--   <a>$sel:tags:VpcLink'</a>, <a>vpcLink_tags</a> - Tags for the VPC
--   link.
--   
--   <a>$sel:vpcLinkStatus:VpcLink'</a>, <a>vpcLink_vpcLinkStatus</a> - The
--   status of the VPC link.
--   
--   <a>$sel:vpcLinkId:VpcLink'</a>, <a>vpcLink_vpcLinkId</a> - The ID of
--   the VPC link.
--   
--   <a>$sel:securityGroupIds:VpcLink'</a>, <a>vpcLink_securityGroupIds</a>
--   - A list of security group IDs for the VPC link.
--   
--   <a>$sel:subnetIds:VpcLink'</a>, <a>vpcLink_subnetIds</a> - A list of
--   subnet IDs to include in the VPC link.
--   
--   <a>$sel:name:VpcLink'</a>, <a>vpcLink_name</a> - The name of the VPC
--   link.
newVpcLink :: Text -> Text -> VpcLink
