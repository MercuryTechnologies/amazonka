-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-codestar-connectionsZSamazonka-codestar-connections
@version 2.0


module Amazonka.CodeStarConnections.Types.ConnectionStatus
newtype ConnectionStatus
ConnectionStatus' :: Text -> ConnectionStatus
[fromConnectionStatus] :: ConnectionStatus -> Text
pattern ConnectionStatus_AVAILABLE :: ConnectionStatus
pattern ConnectionStatus_ERROR :: ConnectionStatus
pattern ConnectionStatus_PENDING :: ConnectionStatus
instance Amazonka.Data.XML.ToXML Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.XML.FromXML Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.Log.ToLog Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.Text.ToText Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Amazonka.Data.Text.FromText Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance GHC.Generics.Generic Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance GHC.Classes.Ord Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance GHC.Classes.Eq Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance GHC.Read.Read Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus
instance GHC.Show.Show Amazonka.CodeStarConnections.Types.ConnectionStatus.ConnectionStatus


module Amazonka.CodeStarConnections.Types.ProviderType
newtype ProviderType
ProviderType' :: Text -> ProviderType
[fromProviderType] :: ProviderType -> Text
pattern ProviderType_Bitbucket :: ProviderType
pattern ProviderType_GitHub :: ProviderType
pattern ProviderType_GitHubEnterpriseServer :: ProviderType
instance Amazonka.Data.XML.ToXML Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Amazonka.Data.XML.FromXML Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Amazonka.Data.Headers.ToHeader Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Amazonka.Data.Log.ToLog Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Amazonka.Data.ByteString.ToByteString Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Amazonka.Data.Text.ToText Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Amazonka.Data.Text.FromText Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance GHC.Generics.Generic Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance GHC.Classes.Ord Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance GHC.Classes.Eq Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance GHC.Read.Read Amazonka.CodeStarConnections.Types.ProviderType.ProviderType
instance GHC.Show.Show Amazonka.CodeStarConnections.Types.ProviderType.ProviderType


module Amazonka.CodeStarConnections.Types.Connection

-- | A resource that is used to connect third-party source providers with
--   services like AWS CodePipeline.
--   
--   Note: A connection created through CloudFormation, the CLI, or the SDK
--   is in `PENDING` status by default. You can make its status `AVAILABLE`
--   by updating the connection in the console.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe ConnectionStatus -> Maybe Text -> Maybe Text -> Connection

-- | The identifier of the external provider where your third-party code
--   repository is configured. For Bitbucket, this is the account ID of the
--   owner of the Bitbucket repository.
[$sel:ownerAccountId:Connection'] :: Connection -> Maybe Text

-- | The name of the external provider where your third-party code
--   repository is configured.
[$sel:providerType:Connection'] :: Connection -> Maybe ProviderType

-- | The name of the connection. Connection names must be unique in an AWS
--   user account.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The current status of the connection.
[$sel:connectionStatus:Connection'] :: Connection -> Maybe ConnectionStatus

-- | The Amazon Resource Name (ARN) of the host associated with the
--   connection.
[$sel:hostArn:Connection'] :: Connection -> Maybe Text

-- | The Amazon Resource Name (ARN) of the connection. The ARN is used as
--   the connection reference when the connection is shared between AWS
--   services.
--   
--   The ARN is never reused if the connection is deleted.
[$sel:connectionArn:Connection'] :: Connection -> Maybe Text

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerAccountId:Connection'</a>,
--   <a>connection_ownerAccountId</a> - The identifier of the external
--   provider where your third-party code repository is configured. For
--   Bitbucket, this is the account ID of the owner of the Bitbucket
--   repository.
--   
--   <a>$sel:providerType:Connection'</a>, <a>connection_providerType</a> -
--   The name of the external provider where your third-party code
--   repository is configured.
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   Connection names must be unique in an AWS user account.
--   
--   <a>$sel:connectionStatus:Connection'</a>,
--   <a>connection_connectionStatus</a> - The current status of the
--   connection.
--   
--   <a>$sel:hostArn:Connection'</a>, <a>connection_hostArn</a> - The
--   Amazon Resource Name (ARN) of the host associated with the connection.
--   
--   <a>$sel:connectionArn:Connection'</a>, <a>connection_connectionArn</a>
--   - The Amazon Resource Name (ARN) of the connection. The ARN is used as
--   the connection reference when the connection is shared between AWS
--   services.
--   
--   The ARN is never reused if the connection is deleted.
newConnection :: Connection

-- | The identifier of the external provider where your third-party code
--   repository is configured. For Bitbucket, this is the account ID of the
--   owner of the Bitbucket repository.
connection_ownerAccountId :: Lens' Connection (Maybe Text)

-- | The name of the external provider where your third-party code
--   repository is configured.
connection_providerType :: Lens' Connection (Maybe ProviderType)

-- | The name of the connection. Connection names must be unique in an AWS
--   user account.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The current status of the connection.
connection_connectionStatus :: Lens' Connection (Maybe ConnectionStatus)

-- | The Amazon Resource Name (ARN) of the host associated with the
--   connection.
connection_hostArn :: Lens' Connection (Maybe Text)

-- | The Amazon Resource Name (ARN) of the connection. The ARN is used as
--   the connection reference when the connection is shared between AWS
--   services.
--   
--   The ARN is never reused if the connection is deleted.
connection_connectionArn :: Lens' Connection (Maybe Text)
instance GHC.Generics.Generic Amazonka.CodeStarConnections.Types.Connection.Connection
instance GHC.Show.Show Amazonka.CodeStarConnections.Types.Connection.Connection
instance GHC.Read.Read Amazonka.CodeStarConnections.Types.Connection.Connection
instance GHC.Classes.Eq Amazonka.CodeStarConnections.Types.Connection.Connection
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeStarConnections.Types.Connection.Connection
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.Types.Connection.Connection
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.Types.Connection.Connection


module Amazonka.CodeStarConnections.Types.Tag

-- | A tag is a key-value pair that is used to manage the resource.
--   
--   This tag is available for use by AWS services that support tags.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text
instance GHC.Generics.Generic Amazonka.CodeStarConnections.Types.Tag.Tag
instance GHC.Show.Show Amazonka.CodeStarConnections.Types.Tag.Tag
instance GHC.Read.Read Amazonka.CodeStarConnections.Types.Tag.Tag
instance GHC.Classes.Eq Amazonka.CodeStarConnections.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeStarConnections.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.Types.Tag.Tag
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.Types.Tag.Tag


module Amazonka.CodeStarConnections.Types.VpcConfiguration

-- | The VPC configuration provisioned for the host.
--   
--   <i>See:</i> <a>newVpcConfiguration</a> smart constructor.
data VpcConfiguration
VpcConfiguration' :: Maybe Text -> Text -> NonEmpty Text -> NonEmpty Text -> VpcConfiguration

-- | The value of the Transport Layer Security (TLS) certificate associated
--   with the infrastructure where your provider type is installed.
[$sel:tlsCertificate:VpcConfiguration'] :: VpcConfiguration -> Maybe Text

-- | The ID of the Amazon VPC connected to the infrastructure where your
--   provider type is installed.
[$sel:vpcId:VpcConfiguration'] :: VpcConfiguration -> Text

-- | The ID of the subnet or subnets associated with the Amazon VPC
--   connected to the infrastructure where your provider type is installed.
[$sel:subnetIds:VpcConfiguration'] :: VpcConfiguration -> NonEmpty Text

-- | The ID of the security group or security groups associated with the
--   Amazon VPC connected to the infrastructure where your provider type is
--   installed.
[$sel:securityGroupIds:VpcConfiguration'] :: VpcConfiguration -> NonEmpty Text

-- | Create a value of <a>VpcConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tlsCertificate:VpcConfiguration'</a>,
--   <a>vpcConfiguration_tlsCertificate</a> - The value of the Transport
--   Layer Security (TLS) certificate associated with the infrastructure
--   where your provider type is installed.
--   
--   <a>$sel:vpcId:VpcConfiguration'</a>, <a>vpcConfiguration_vpcId</a> -
--   The ID of the Amazon VPC connected to the infrastructure where your
--   provider type is installed.
--   
--   <a>$sel:subnetIds:VpcConfiguration'</a>,
--   <a>vpcConfiguration_subnetIds</a> - The ID of the subnet or subnets
--   associated with the Amazon VPC connected to the infrastructure where
--   your provider type is installed.
--   
--   <a>$sel:securityGroupIds:VpcConfiguration'</a>,
--   <a>vpcConfiguration_securityGroupIds</a> - The ID of the security
--   group or security groups associated with the Amazon VPC connected to
--   the infrastructure where your provider type is installed.
newVpcConfiguration :: Text -> NonEmpty Text -> NonEmpty Text -> VpcConfiguration

-- | The value of the Transport Layer Security (TLS) certificate associated
--   with the infrastructure where your provider type is installed.
vpcConfiguration_tlsCertificate :: Lens' VpcConfiguration (Maybe Text)

-- | The ID of the Amazon VPC connected to the infrastructure where your
--   provider type is installed.
vpcConfiguration_vpcId :: Lens' VpcConfiguration Text

-- | The ID of the subnet or subnets associated with the Amazon VPC
--   connected to the infrastructure where your provider type is installed.
vpcConfiguration_subnetIds :: Lens' VpcConfiguration (NonEmpty Text)

-- | The ID of the security group or security groups associated with the
--   Amazon VPC connected to the infrastructure where your provider type is
--   installed.
vpcConfiguration_securityGroupIds :: Lens' VpcConfiguration (NonEmpty Text)
instance GHC.Generics.Generic Amazonka.CodeStarConnections.Types.VpcConfiguration.VpcConfiguration
instance GHC.Show.Show Amazonka.CodeStarConnections.Types.VpcConfiguration.VpcConfiguration
instance GHC.Read.Read Amazonka.CodeStarConnections.Types.VpcConfiguration.VpcConfiguration
instance GHC.Classes.Eq Amazonka.CodeStarConnections.Types.VpcConfiguration.VpcConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeStarConnections.Types.VpcConfiguration.VpcConfiguration
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.Types.VpcConfiguration.VpcConfiguration
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.Types.VpcConfiguration.VpcConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.Types.VpcConfiguration.VpcConfiguration


module Amazonka.CodeStarConnections.Types.Host

-- | A resource that represents the infrastructure where a third-party
--   provider is installed. The host is used when you create connections to
--   an installed third-party provider type, such as GitHub Enterprise
--   Server. You create one host for all connections to that provider.
--   
--   A host created through the CLI or the SDK is in `PENDING` status by
--   default. You can make its status `AVAILABLE` by setting up the host in
--   the console.
--   
--   <i>See:</i> <a>newHost</a> smart constructor.
data Host
Host' :: Maybe Text -> Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe VpcConfiguration -> Host

-- | The status of the host, such as PENDING, AVAILABLE,
--   VPC_CONFIG_DELETING, VPC_CONFIG_INITIALIZING, and
--   VPC_CONFIG_FAILED_INITIALIZATION.
[$sel:status:Host'] :: Host -> Maybe Text

-- | The endpoint of the infrastructure where your provider type is
--   installed.
[$sel:providerEndpoint:Host'] :: Host -> Maybe Text

-- | The name of the installed provider to be associated with your
--   connection. The host resource represents the infrastructure where your
--   provider type is installed. The valid provider type is GitHub
--   Enterprise Server.
[$sel:providerType:Host'] :: Host -> Maybe ProviderType

-- | The status description for the host.
[$sel:statusMessage:Host'] :: Host -> Maybe Text

-- | The name of the host.
[$sel:name:Host'] :: Host -> Maybe Text

-- | The Amazon Resource Name (ARN) of the host.
[$sel:hostArn:Host'] :: Host -> Maybe Text

-- | The VPC configuration provisioned for the host.
[$sel:vpcConfiguration:Host'] :: Host -> Maybe VpcConfiguration

-- | Create a value of <a>Host</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Host'</a>, <a>host_status</a> - The status of the host,
--   such as PENDING, AVAILABLE, VPC_CONFIG_DELETING,
--   VPC_CONFIG_INITIALIZING, and VPC_CONFIG_FAILED_INITIALIZATION.
--   
--   <a>$sel:providerEndpoint:Host'</a>, <a>host_providerEndpoint</a> - The
--   endpoint of the infrastructure where your provider type is installed.
--   
--   <a>$sel:providerType:Host'</a>, <a>host_providerType</a> - The name of
--   the installed provider to be associated with your connection. The host
--   resource represents the infrastructure where your provider type is
--   installed. The valid provider type is GitHub Enterprise Server.
--   
--   <a>$sel:statusMessage:Host'</a>, <a>host_statusMessage</a> - The
--   status description for the host.
--   
--   <a>$sel:name:Host'</a>, <a>host_name</a> - The name of the host.
--   
--   <a>$sel:hostArn:Host'</a>, <a>host_hostArn</a> - The Amazon Resource
--   Name (ARN) of the host.
--   
--   <a>$sel:vpcConfiguration:Host'</a>, <a>host_vpcConfiguration</a> - The
--   VPC configuration provisioned for the host.
newHost :: Host

-- | The status of the host, such as PENDING, AVAILABLE,
--   VPC_CONFIG_DELETING, VPC_CONFIG_INITIALIZING, and
--   VPC_CONFIG_FAILED_INITIALIZATION.
host_status :: Lens' Host (Maybe Text)

-- | The endpoint of the infrastructure where your provider type is
--   installed.
host_providerEndpoint :: Lens' Host (Maybe Text)

-- | The name of the installed provider to be associated with your
--   connection. The host resource represents the infrastructure where your
--   provider type is installed. The valid provider type is GitHub
--   Enterprise Server.
host_providerType :: Lens' Host (Maybe ProviderType)

-- | The status description for the host.
host_statusMessage :: Lens' Host (Maybe Text)

-- | The name of the host.
host_name :: Lens' Host (Maybe Text)

-- | The Amazon Resource Name (ARN) of the host.
host_hostArn :: Lens' Host (Maybe Text)

-- | The VPC configuration provisioned for the host.
host_vpcConfiguration :: Lens' Host (Maybe VpcConfiguration)
instance GHC.Generics.Generic Amazonka.CodeStarConnections.Types.Host.Host
instance GHC.Show.Show Amazonka.CodeStarConnections.Types.Host.Host
instance GHC.Read.Read Amazonka.CodeStarConnections.Types.Host.Host
instance GHC.Classes.Eq Amazonka.CodeStarConnections.Types.Host.Host
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.CodeStarConnections.Types.Host.Host
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.Types.Host.Host
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.Types.Host.Host


module Amazonka.CodeStarConnections.Types

-- | API version <tt>2019-12-01</tt> of the Amazon CodeStar connections SDK
--   configuration.
defaultService :: Service

-- | Resource not found. Verify the ARN for the host resource and try
--   again.
_ResourceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation is not supported. Check the connection status and try
--   again.
_UnsupportedOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two conflicting operations have been made on the same resource.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Resource not found. Verify the connection resource ARN and try again.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exceeded the maximum limit for connections.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ConnectionStatus
ConnectionStatus' :: Text -> ConnectionStatus
[fromConnectionStatus] :: ConnectionStatus -> Text
pattern ConnectionStatus_AVAILABLE :: ConnectionStatus
pattern ConnectionStatus_ERROR :: ConnectionStatus
pattern ConnectionStatus_PENDING :: ConnectionStatus
newtype ProviderType
ProviderType' :: Text -> ProviderType
[fromProviderType] :: ProviderType -> Text
pattern ProviderType_Bitbucket :: ProviderType
pattern ProviderType_GitHub :: ProviderType
pattern ProviderType_GitHubEnterpriseServer :: ProviderType

-- | A resource that is used to connect third-party source providers with
--   services like AWS CodePipeline.
--   
--   Note: A connection created through CloudFormation, the CLI, or the SDK
--   is in `PENDING` status by default. You can make its status `AVAILABLE`
--   by updating the connection in the console.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe ConnectionStatus -> Maybe Text -> Maybe Text -> Connection

-- | The identifier of the external provider where your third-party code
--   repository is configured. For Bitbucket, this is the account ID of the
--   owner of the Bitbucket repository.
[$sel:ownerAccountId:Connection'] :: Connection -> Maybe Text

-- | The name of the external provider where your third-party code
--   repository is configured.
[$sel:providerType:Connection'] :: Connection -> Maybe ProviderType

-- | The name of the connection. Connection names must be unique in an AWS
--   user account.
[$sel:connectionName:Connection'] :: Connection -> Maybe Text

-- | The current status of the connection.
[$sel:connectionStatus:Connection'] :: Connection -> Maybe ConnectionStatus

-- | The Amazon Resource Name (ARN) of the host associated with the
--   connection.
[$sel:hostArn:Connection'] :: Connection -> Maybe Text

-- | The Amazon Resource Name (ARN) of the connection. The ARN is used as
--   the connection reference when the connection is shared between AWS
--   services.
--   
--   The ARN is never reused if the connection is deleted.
[$sel:connectionArn:Connection'] :: Connection -> Maybe Text

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerAccountId:Connection'</a>,
--   <a>connection_ownerAccountId</a> - The identifier of the external
--   provider where your third-party code repository is configured. For
--   Bitbucket, this is the account ID of the owner of the Bitbucket
--   repository.
--   
--   <a>$sel:providerType:Connection'</a>, <a>connection_providerType</a> -
--   The name of the external provider where your third-party code
--   repository is configured.
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   Connection names must be unique in an AWS user account.
--   
--   <a>$sel:connectionStatus:Connection'</a>,
--   <a>connection_connectionStatus</a> - The current status of the
--   connection.
--   
--   <a>$sel:hostArn:Connection'</a>, <a>connection_hostArn</a> - The
--   Amazon Resource Name (ARN) of the host associated with the connection.
--   
--   <a>$sel:connectionArn:Connection'</a>, <a>connection_connectionArn</a>
--   - The Amazon Resource Name (ARN) of the connection. The ARN is used as
--   the connection reference when the connection is shared between AWS
--   services.
--   
--   The ARN is never reused if the connection is deleted.
newConnection :: Connection

-- | The identifier of the external provider where your third-party code
--   repository is configured. For Bitbucket, this is the account ID of the
--   owner of the Bitbucket repository.
connection_ownerAccountId :: Lens' Connection (Maybe Text)

-- | The name of the external provider where your third-party code
--   repository is configured.
connection_providerType :: Lens' Connection (Maybe ProviderType)

-- | The name of the connection. Connection names must be unique in an AWS
--   user account.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The current status of the connection.
connection_connectionStatus :: Lens' Connection (Maybe ConnectionStatus)

-- | The Amazon Resource Name (ARN) of the host associated with the
--   connection.
connection_hostArn :: Lens' Connection (Maybe Text)

-- | The Amazon Resource Name (ARN) of the connection. The ARN is used as
--   the connection reference when the connection is shared between AWS
--   services.
--   
--   The ARN is never reused if the connection is deleted.
connection_connectionArn :: Lens' Connection (Maybe Text)

-- | A resource that represents the infrastructure where a third-party
--   provider is installed. The host is used when you create connections to
--   an installed third-party provider type, such as GitHub Enterprise
--   Server. You create one host for all connections to that provider.
--   
--   A host created through the CLI or the SDK is in `PENDING` status by
--   default. You can make its status `AVAILABLE` by setting up the host in
--   the console.
--   
--   <i>See:</i> <a>newHost</a> smart constructor.
data Host
Host' :: Maybe Text -> Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe VpcConfiguration -> Host

-- | The status of the host, such as PENDING, AVAILABLE,
--   VPC_CONFIG_DELETING, VPC_CONFIG_INITIALIZING, and
--   VPC_CONFIG_FAILED_INITIALIZATION.
[$sel:status:Host'] :: Host -> Maybe Text

-- | The endpoint of the infrastructure where your provider type is
--   installed.
[$sel:providerEndpoint:Host'] :: Host -> Maybe Text

-- | The name of the installed provider to be associated with your
--   connection. The host resource represents the infrastructure where your
--   provider type is installed. The valid provider type is GitHub
--   Enterprise Server.
[$sel:providerType:Host'] :: Host -> Maybe ProviderType

-- | The status description for the host.
[$sel:statusMessage:Host'] :: Host -> Maybe Text

-- | The name of the host.
[$sel:name:Host'] :: Host -> Maybe Text

-- | The Amazon Resource Name (ARN) of the host.
[$sel:hostArn:Host'] :: Host -> Maybe Text

-- | The VPC configuration provisioned for the host.
[$sel:vpcConfiguration:Host'] :: Host -> Maybe VpcConfiguration

-- | Create a value of <a>Host</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Host'</a>, <a>host_status</a> - The status of the host,
--   such as PENDING, AVAILABLE, VPC_CONFIG_DELETING,
--   VPC_CONFIG_INITIALIZING, and VPC_CONFIG_FAILED_INITIALIZATION.
--   
--   <a>$sel:providerEndpoint:Host'</a>, <a>host_providerEndpoint</a> - The
--   endpoint of the infrastructure where your provider type is installed.
--   
--   <a>$sel:providerType:Host'</a>, <a>host_providerType</a> - The name of
--   the installed provider to be associated with your connection. The host
--   resource represents the infrastructure where your provider type is
--   installed. The valid provider type is GitHub Enterprise Server.
--   
--   <a>$sel:statusMessage:Host'</a>, <a>host_statusMessage</a> - The
--   status description for the host.
--   
--   <a>$sel:name:Host'</a>, <a>host_name</a> - The name of the host.
--   
--   <a>$sel:hostArn:Host'</a>, <a>host_hostArn</a> - The Amazon Resource
--   Name (ARN) of the host.
--   
--   <a>$sel:vpcConfiguration:Host'</a>, <a>host_vpcConfiguration</a> - The
--   VPC configuration provisioned for the host.
newHost :: Host

-- | The status of the host, such as PENDING, AVAILABLE,
--   VPC_CONFIG_DELETING, VPC_CONFIG_INITIALIZING, and
--   VPC_CONFIG_FAILED_INITIALIZATION.
host_status :: Lens' Host (Maybe Text)

-- | The endpoint of the infrastructure where your provider type is
--   installed.
host_providerEndpoint :: Lens' Host (Maybe Text)

-- | The name of the installed provider to be associated with your
--   connection. The host resource represents the infrastructure where your
--   provider type is installed. The valid provider type is GitHub
--   Enterprise Server.
host_providerType :: Lens' Host (Maybe ProviderType)

-- | The status description for the host.
host_statusMessage :: Lens' Host (Maybe Text)

-- | The name of the host.
host_name :: Lens' Host (Maybe Text)

-- | The Amazon Resource Name (ARN) of the host.
host_hostArn :: Lens' Host (Maybe Text)

-- | The VPC configuration provisioned for the host.
host_vpcConfiguration :: Lens' Host (Maybe VpcConfiguration)

-- | A tag is a key-value pair that is used to manage the resource.
--   
--   This tag is available for use by AWS services that support tags.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | The tag's key.
[$sel:key:Tag'] :: Tag -> Text

-- | The tag's value.
[$sel:value:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text

-- | The VPC configuration provisioned for the host.
--   
--   <i>See:</i> <a>newVpcConfiguration</a> smart constructor.
data VpcConfiguration
VpcConfiguration' :: Maybe Text -> Text -> NonEmpty Text -> NonEmpty Text -> VpcConfiguration

-- | The value of the Transport Layer Security (TLS) certificate associated
--   with the infrastructure where your provider type is installed.
[$sel:tlsCertificate:VpcConfiguration'] :: VpcConfiguration -> Maybe Text

-- | The ID of the Amazon VPC connected to the infrastructure where your
--   provider type is installed.
[$sel:vpcId:VpcConfiguration'] :: VpcConfiguration -> Text

-- | The ID of the subnet or subnets associated with the Amazon VPC
--   connected to the infrastructure where your provider type is installed.
[$sel:subnetIds:VpcConfiguration'] :: VpcConfiguration -> NonEmpty Text

-- | The ID of the security group or security groups associated with the
--   Amazon VPC connected to the infrastructure where your provider type is
--   installed.
[$sel:securityGroupIds:VpcConfiguration'] :: VpcConfiguration -> NonEmpty Text

-- | Create a value of <a>VpcConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tlsCertificate:VpcConfiguration'</a>,
--   <a>vpcConfiguration_tlsCertificate</a> - The value of the Transport
--   Layer Security (TLS) certificate associated with the infrastructure
--   where your provider type is installed.
--   
--   <a>$sel:vpcId:VpcConfiguration'</a>, <a>vpcConfiguration_vpcId</a> -
--   The ID of the Amazon VPC connected to the infrastructure where your
--   provider type is installed.
--   
--   <a>$sel:subnetIds:VpcConfiguration'</a>,
--   <a>vpcConfiguration_subnetIds</a> - The ID of the subnet or subnets
--   associated with the Amazon VPC connected to the infrastructure where
--   your provider type is installed.
--   
--   <a>$sel:securityGroupIds:VpcConfiguration'</a>,
--   <a>vpcConfiguration_securityGroupIds</a> - The ID of the security
--   group or security groups associated with the Amazon VPC connected to
--   the infrastructure where your provider type is installed.
newVpcConfiguration :: Text -> NonEmpty Text -> NonEmpty Text -> VpcConfiguration

-- | The value of the Transport Layer Security (TLS) certificate associated
--   with the infrastructure where your provider type is installed.
vpcConfiguration_tlsCertificate :: Lens' VpcConfiguration (Maybe Text)

-- | The ID of the Amazon VPC connected to the infrastructure where your
--   provider type is installed.
vpcConfiguration_vpcId :: Lens' VpcConfiguration Text

-- | The ID of the subnet or subnets associated with the Amazon VPC
--   connected to the infrastructure where your provider type is installed.
vpcConfiguration_subnetIds :: Lens' VpcConfiguration (NonEmpty Text)

-- | The ID of the security group or security groups associated with the
--   Amazon VPC connected to the infrastructure where your provider type is
--   installed.
vpcConfiguration_securityGroupIds :: Lens' VpcConfiguration (NonEmpty Text)


-- | Adds to or modifies the tags of the given resource. Tags are metadata
--   that can be used to manage a resource.
module Amazonka.CodeStarConnections.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | The Amazon Resource Name (ARN) of the resource to which you want to
--   add or update tags.
[$sel:resourceArn:TagResource'] :: TagResource -> Text

-- | The tags you want to modify or add to the resource.
[$sel:tags:TagResource'] :: TagResource -> [Tag]

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource to which you want to
--   add or update tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags you
--   want to modify or add to the resource.
newTagResource :: Text -> TagResource

-- | The Amazon Resource Name (ARN) of the resource to which you want to
--   add or update tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags you want to modify or add to the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Amazonka.CodeStarConnections.TagResource.TagResource
instance GHC.Show.Show Amazonka.CodeStarConnections.TagResource.TagResource
instance GHC.Read.Read Amazonka.CodeStarConnections.TagResource.TagResource
instance GHC.Classes.Eq Amazonka.CodeStarConnections.TagResource.TagResource
instance GHC.Generics.Generic Amazonka.CodeStarConnections.TagResource.TagResourceResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.TagResource.TagResourceResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.TagResource.TagResourceResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.TagResource.TagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.TagResource.TagResource
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.TagResource.TagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.TagResource.TagResource
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.TagResource.TagResource
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.TagResource.TagResource


-- | Gets the set of key-value pairs (metadata) that are used to manage the
--   resource.
module Amazonka.CodeStarConnections.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource for which you want to
--   get information about tags, if any.
[$sel:resourceArn:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource for which you want to get information about
--   tags, if any.
newListTagsForResource :: Text -> ListTagsForResource

-- | The Amazon Resource Name (ARN) of the resource for which you want to
--   get information about tags, if any.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | A list of tag key and value pairs associated with the specified
--   resource.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tag key and value
--   pairs associated with the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | A list of tag key and value pairs associated with the specified
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResource
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.ListTagsForResource.ListTagsForResource


-- | Lists the hosts associated with your account.
module Amazonka.CodeStarConnections.ListHosts

-- | <i>See:</i> <a>newListHosts</a> smart constructor.
data ListHosts
ListHosts' :: Maybe Text -> Maybe Natural -> ListHosts

-- | The token that was returned from the previous <tt>ListHosts</tt> call,
--   which can be used to return the next set of hosts in the list.
[$sel:nextToken:ListHosts'] :: ListHosts -> Maybe Text

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
[$sel:maxResults:ListHosts'] :: ListHosts -> Maybe Natural

-- | Create a value of <a>ListHosts</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHosts'</a>, <a>listHosts_nextToken</a> - The
--   token that was returned from the previous <tt>ListHosts</tt> call,
--   which can be used to return the next set of hosts in the list.
--   
--   <a>$sel:maxResults:ListHosts'</a>, <a>listHosts_maxResults</a> - The
--   maximum number of results to return in a single call. To retrieve the
--   remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
newListHosts :: ListHosts

-- | The token that was returned from the previous <tt>ListHosts</tt> call,
--   which can be used to return the next set of hosts in the list.
listHosts_nextToken :: Lens' ListHosts (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
listHosts_maxResults :: Lens' ListHosts (Maybe Natural)

-- | <i>See:</i> <a>newListHostsResponse</a> smart constructor.
data ListHostsResponse
ListHostsResponse' :: Maybe [Host] -> Maybe Text -> Int -> ListHostsResponse

-- | A list of hosts and the details for each host, such as status,
--   endpoint, and provider type.
[$sel:hosts:ListHostsResponse'] :: ListHostsResponse -> Maybe [Host]

-- | A token that can be used in the next <tt>ListHosts</tt> call. To view
--   all items in the list, continue to call this operation with each
--   subsequent token until no more <tt>nextToken</tt> values are returned.
[$sel:nextToken:ListHostsResponse'] :: ListHostsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListHostsResponse'] :: ListHostsResponse -> Int

-- | Create a value of <a>ListHostsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hosts:ListHostsResponse'</a>, <a>listHostsResponse_hosts</a> -
--   A list of hosts and the details for each host, such as status,
--   endpoint, and provider type.
--   
--   <a>$sel:nextToken:ListHosts'</a>, <a>listHostsResponse_nextToken</a> -
--   A token that can be used in the next <tt>ListHosts</tt> call. To view
--   all items in the list, continue to call this operation with each
--   subsequent token until no more <tt>nextToken</tt> values are returned.
--   
--   <a>$sel:httpStatus:ListHostsResponse'</a>,
--   <a>listHostsResponse_httpStatus</a> - The response's http status code.
newListHostsResponse :: Int -> ListHostsResponse

-- | A list of hosts and the details for each host, such as status,
--   endpoint, and provider type.
listHostsResponse_hosts :: Lens' ListHostsResponse (Maybe [Host])

-- | A token that can be used in the next <tt>ListHosts</tt> call. To view
--   all items in the list, continue to call this operation with each
--   subsequent token until no more <tt>nextToken</tt> values are returned.
listHostsResponse_nextToken :: Lens' ListHostsResponse (Maybe Text)

-- | The response's http status code.
listHostsResponse_httpStatus :: Lens' ListHostsResponse Int
instance GHC.Generics.Generic Amazonka.CodeStarConnections.ListHosts.ListHosts
instance GHC.Show.Show Amazonka.CodeStarConnections.ListHosts.ListHosts
instance GHC.Read.Read Amazonka.CodeStarConnections.ListHosts.ListHosts
instance GHC.Classes.Eq Amazonka.CodeStarConnections.ListHosts.ListHosts
instance GHC.Generics.Generic Amazonka.CodeStarConnections.ListHosts.ListHostsResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.ListHosts.ListHostsResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.ListHosts.ListHostsResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.ListHosts.ListHostsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.ListHosts.ListHosts
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.ListHosts.ListHostsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.ListHosts.ListHosts
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.ListHosts.ListHosts
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.ListHosts.ListHosts
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.ListHosts.ListHosts
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.ListHosts.ListHosts
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.ListHosts.ListHosts


-- | Lists the connections associated with your account.
module Amazonka.CodeStarConnections.ListConnections

-- | <i>See:</i> <a>newListConnections</a> smart constructor.
data ListConnections
ListConnections' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ProviderType -> ListConnections

-- | Filters the list of connections to those associated with a specified
--   host.
[$sel:hostArnFilter:ListConnections'] :: ListConnections -> Maybe Text

-- | The token that was returned from the previous <tt>ListConnections</tt>
--   call, which can be used to return the next set of connections in the
--   list.
[$sel:nextToken:ListConnections'] :: ListConnections -> Maybe Text

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
[$sel:maxResults:ListConnections'] :: ListConnections -> Maybe Natural

-- | Filters the list of connections to those associated with a specified
--   provider, such as Bitbucket.
[$sel:providerTypeFilter:ListConnections'] :: ListConnections -> Maybe ProviderType

-- | Create a value of <a>ListConnections</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostArnFilter:ListConnections'</a>,
--   <a>listConnections_hostArnFilter</a> - Filters the list of connections
--   to those associated with a specified host.
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnections_nextToken</a> - The token that was returned from
--   the previous <tt>ListConnections</tt> call, which can be used to
--   return the next set of connections in the list.
--   
--   <a>$sel:maxResults:ListConnections'</a>,
--   <a>listConnections_maxResults</a> - The maximum number of results to
--   return in a single call. To retrieve the remaining results, make
--   another call with the returned <tt>nextToken</tt> value.
--   
--   <a>$sel:providerTypeFilter:ListConnections'</a>,
--   <a>listConnections_providerTypeFilter</a> - Filters the list of
--   connections to those associated with a specified provider, such as
--   Bitbucket.
newListConnections :: ListConnections

-- | Filters the list of connections to those associated with a specified
--   host.
listConnections_hostArnFilter :: Lens' ListConnections (Maybe Text)

-- | The token that was returned from the previous <tt>ListConnections</tt>
--   call, which can be used to return the next set of connections in the
--   list.
listConnections_nextToken :: Lens' ListConnections (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
listConnections_maxResults :: Lens' ListConnections (Maybe Natural)

-- | Filters the list of connections to those associated with a specified
--   provider, such as Bitbucket.
listConnections_providerTypeFilter :: Lens' ListConnections (Maybe ProviderType)

-- | <i>See:</i> <a>newListConnectionsResponse</a> smart constructor.
data ListConnectionsResponse
ListConnectionsResponse' :: Maybe [Connection] -> Maybe Text -> Int -> ListConnectionsResponse

-- | A list of connections and the details for each connection, such as
--   status, owner, and provider type.
[$sel:connections:ListConnectionsResponse'] :: ListConnectionsResponse -> Maybe [Connection]

-- | A token that can be used in the next <tt>ListConnections</tt> call. To
--   view all items in the list, continue to call this operation with each
--   subsequent token until no more <tt>nextToken</tt> values are returned.
[$sel:nextToken:ListConnectionsResponse'] :: ListConnectionsResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:ListConnectionsResponse'] :: ListConnectionsResponse -> Int

-- | Create a value of <a>ListConnectionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_connections</a> - A list of connections and
--   the details for each connection, such as status, owner, and provider
--   type.
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnectionsResponse_nextToken</a> - A token that can be used in
--   the next <tt>ListConnections</tt> call. To view all items in the list,
--   continue to call this operation with each subsequent token until no
--   more <tt>nextToken</tt> values are returned.
--   
--   <a>$sel:httpStatus:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_httpStatus</a> - The response's http status
--   code.
newListConnectionsResponse :: Int -> ListConnectionsResponse

-- | A list of connections and the details for each connection, such as
--   status, owner, and provider type.
listConnectionsResponse_connections :: Lens' ListConnectionsResponse (Maybe [Connection])

-- | A token that can be used in the next <tt>ListConnections</tt> call. To
--   view all items in the list, continue to call this operation with each
--   subsequent token until no more <tt>nextToken</tt> values are returned.
listConnectionsResponse_nextToken :: Lens' ListConnectionsResponse (Maybe Text)

-- | The response's http status code.
listConnectionsResponse_httpStatus :: Lens' ListConnectionsResponse Int
instance GHC.Generics.Generic Amazonka.CodeStarConnections.ListConnections.ListConnections
instance GHC.Show.Show Amazonka.CodeStarConnections.ListConnections.ListConnections
instance GHC.Read.Read Amazonka.CodeStarConnections.ListConnections.ListConnections
instance GHC.Classes.Eq Amazonka.CodeStarConnections.ListConnections.ListConnections
instance GHC.Generics.Generic Amazonka.CodeStarConnections.ListConnections.ListConnectionsResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.ListConnections.ListConnectionsResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.ListConnections.ListConnectionsResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.ListConnections.ListConnectionsResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.ListConnections.ListConnections
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.ListConnections.ListConnectionsResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.ListConnections.ListConnections
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.ListConnections.ListConnections
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.ListConnections.ListConnections
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.ListConnections.ListConnections
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.ListConnections.ListConnections
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.ListConnections.ListConnections


-- | Returns the host ARN and details such as status, provider type,
--   endpoint, and, if applicable, the VPC configuration.
module Amazonka.CodeStarConnections.GetHost

-- | <i>See:</i> <a>newGetHost</a> smart constructor.
data GetHost
GetHost' :: Text -> GetHost

-- | The Amazon Resource Name (ARN) of the requested host.
[$sel:hostArn:GetHost'] :: GetHost -> Text

-- | Create a value of <a>GetHost</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostArn:GetHost'</a>, <a>getHost_hostArn</a> - The Amazon
--   Resource Name (ARN) of the requested host.
newGetHost :: Text -> GetHost

-- | The Amazon Resource Name (ARN) of the requested host.
getHost_hostArn :: Lens' GetHost Text

-- | <i>See:</i> <a>newGetHostResponse</a> smart constructor.
data GetHostResponse
GetHostResponse' :: Maybe Text -> Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe VpcConfiguration -> Int -> GetHostResponse

-- | The status of the requested host.
[$sel:status:GetHostResponse'] :: GetHostResponse -> Maybe Text

-- | The endpoint of the infrastructure represented by the requested host.
[$sel:providerEndpoint:GetHostResponse'] :: GetHostResponse -> Maybe Text

-- | The provider type of the requested host, such as GitHub Enterprise
--   Server.
[$sel:providerType:GetHostResponse'] :: GetHostResponse -> Maybe ProviderType

-- | The name of the requested host.
[$sel:name:GetHostResponse'] :: GetHostResponse -> Maybe Text

-- | The VPC configuration of the requested host.
[$sel:vpcConfiguration:GetHostResponse'] :: GetHostResponse -> Maybe VpcConfiguration

-- | The response's http status code.
[$sel:httpStatus:GetHostResponse'] :: GetHostResponse -> Int

-- | Create a value of <a>GetHostResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetHostResponse'</a>, <a>getHostResponse_status</a> -
--   The status of the requested host.
--   
--   <a>$sel:providerEndpoint:GetHostResponse'</a>,
--   <a>getHostResponse_providerEndpoint</a> - The endpoint of the
--   infrastructure represented by the requested host.
--   
--   <a>$sel:providerType:GetHostResponse'</a>,
--   <a>getHostResponse_providerType</a> - The provider type of the
--   requested host, such as GitHub Enterprise Server.
--   
--   <a>$sel:name:GetHostResponse'</a>, <a>getHostResponse_name</a> - The
--   name of the requested host.
--   
--   <a>$sel:vpcConfiguration:GetHostResponse'</a>,
--   <a>getHostResponse_vpcConfiguration</a> - The VPC configuration of the
--   requested host.
--   
--   <a>$sel:httpStatus:GetHostResponse'</a>,
--   <a>getHostResponse_httpStatus</a> - The response's http status code.
newGetHostResponse :: Int -> GetHostResponse

-- | The status of the requested host.
getHostResponse_status :: Lens' GetHostResponse (Maybe Text)

-- | The endpoint of the infrastructure represented by the requested host.
getHostResponse_providerEndpoint :: Lens' GetHostResponse (Maybe Text)

-- | The provider type of the requested host, such as GitHub Enterprise
--   Server.
getHostResponse_providerType :: Lens' GetHostResponse (Maybe ProviderType)

-- | The name of the requested host.
getHostResponse_name :: Lens' GetHostResponse (Maybe Text)

-- | The VPC configuration of the requested host.
getHostResponse_vpcConfiguration :: Lens' GetHostResponse (Maybe VpcConfiguration)

-- | The response's http status code.
getHostResponse_httpStatus :: Lens' GetHostResponse Int
instance GHC.Generics.Generic Amazonka.CodeStarConnections.GetHost.GetHost
instance GHC.Show.Show Amazonka.CodeStarConnections.GetHost.GetHost
instance GHC.Read.Read Amazonka.CodeStarConnections.GetHost.GetHost
instance GHC.Classes.Eq Amazonka.CodeStarConnections.GetHost.GetHost
instance GHC.Generics.Generic Amazonka.CodeStarConnections.GetHost.GetHostResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.GetHost.GetHostResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.GetHost.GetHostResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.GetHost.GetHostResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.GetHost.GetHost
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.GetHost.GetHostResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.GetHost.GetHost
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.GetHost.GetHost
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.GetHost.GetHost
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.GetHost.GetHost
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.GetHost.GetHost
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.GetHost.GetHost


-- | Returns the connection ARN and details such as status, owner, and
--   provider type.
module Amazonka.CodeStarConnections.GetConnection

-- | <i>See:</i> <a>newGetConnection</a> smart constructor.
data GetConnection
GetConnection' :: Text -> GetConnection

-- | The Amazon Resource Name (ARN) of a connection.
[$sel:connectionArn:GetConnection'] :: GetConnection -> Text

-- | Create a value of <a>GetConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionArn:GetConnection'</a>,
--   <a>getConnection_connectionArn</a> - The Amazon Resource Name (ARN) of
--   a connection.
newGetConnection :: Text -> GetConnection

-- | The Amazon Resource Name (ARN) of a connection.
getConnection_connectionArn :: Lens' GetConnection Text

-- | <i>See:</i> <a>newGetConnectionResponse</a> smart constructor.
data GetConnectionResponse
GetConnectionResponse' :: Maybe Connection -> Int -> GetConnectionResponse

-- | The connection details, such as status, owner, and provider type.
[$sel:connection:GetConnectionResponse'] :: GetConnectionResponse -> Maybe Connection

-- | The response's http status code.
[$sel:httpStatus:GetConnectionResponse'] :: GetConnectionResponse -> Int

-- | Create a value of <a>GetConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connection:GetConnectionResponse'</a>,
--   <a>getConnectionResponse_connection</a> - The connection details, such
--   as status, owner, and provider type.
--   
--   <a>$sel:httpStatus:GetConnectionResponse'</a>,
--   <a>getConnectionResponse_httpStatus</a> - The response's http status
--   code.
newGetConnectionResponse :: Int -> GetConnectionResponse

-- | The connection details, such as status, owner, and provider type.
getConnectionResponse_connection :: Lens' GetConnectionResponse (Maybe Connection)

-- | The response's http status code.
getConnectionResponse_httpStatus :: Lens' GetConnectionResponse Int
instance GHC.Generics.Generic Amazonka.CodeStarConnections.GetConnection.GetConnection
instance GHC.Show.Show Amazonka.CodeStarConnections.GetConnection.GetConnection
instance GHC.Read.Read Amazonka.CodeStarConnections.GetConnection.GetConnection
instance GHC.Classes.Eq Amazonka.CodeStarConnections.GetConnection.GetConnection
instance GHC.Generics.Generic Amazonka.CodeStarConnections.GetConnection.GetConnectionResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.GetConnection.GetConnectionResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.GetConnection.GetConnectionResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.GetConnection.GetConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.GetConnection.GetConnection
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.GetConnection.GetConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.GetConnection.GetConnection
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.GetConnection.GetConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.GetConnection.GetConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.GetConnection.GetConnection
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.GetConnection.GetConnection
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.GetConnection.GetConnection


-- | The host to be deleted. Before you delete a host, all connections
--   associated to the host must be deleted.
--   
--   A host cannot be deleted if it is in the VPC_CONFIG_INITIALIZING or
--   VPC_CONFIG_DELETING state.
module Amazonka.CodeStarConnections.DeleteHost

-- | <i>See:</i> <a>newDeleteHost</a> smart constructor.
data DeleteHost
DeleteHost' :: Text -> DeleteHost

-- | The Amazon Resource Name (ARN) of the host to be deleted.
[$sel:hostArn:DeleteHost'] :: DeleteHost -> Text

-- | Create a value of <a>DeleteHost</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostArn:DeleteHost'</a>, <a>deleteHost_hostArn</a> - The
--   Amazon Resource Name (ARN) of the host to be deleted.
newDeleteHost :: Text -> DeleteHost

-- | The Amazon Resource Name (ARN) of the host to be deleted.
deleteHost_hostArn :: Lens' DeleteHost Text

-- | <i>See:</i> <a>newDeleteHostResponse</a> smart constructor.
data DeleteHostResponse
DeleteHostResponse' :: Int -> DeleteHostResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteHostResponse'] :: DeleteHostResponse -> Int

-- | Create a value of <a>DeleteHostResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteHostResponse'</a>,
--   <a>deleteHostResponse_httpStatus</a> - The response's http status
--   code.
newDeleteHostResponse :: Int -> DeleteHostResponse

-- | The response's http status code.
deleteHostResponse_httpStatus :: Lens' DeleteHostResponse Int
instance GHC.Generics.Generic Amazonka.CodeStarConnections.DeleteHost.DeleteHost
instance GHC.Show.Show Amazonka.CodeStarConnections.DeleteHost.DeleteHost
instance GHC.Read.Read Amazonka.CodeStarConnections.DeleteHost.DeleteHost
instance GHC.Classes.Eq Amazonka.CodeStarConnections.DeleteHost.DeleteHost
instance GHC.Generics.Generic Amazonka.CodeStarConnections.DeleteHost.DeleteHostResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.DeleteHost.DeleteHostResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.DeleteHost.DeleteHostResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.DeleteHost.DeleteHostResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.DeleteHost.DeleteHost
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.DeleteHost.DeleteHostResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.DeleteHost.DeleteHost
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.DeleteHost.DeleteHost
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.DeleteHost.DeleteHost
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.DeleteHost.DeleteHost
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.DeleteHost.DeleteHost
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.DeleteHost.DeleteHost


-- | The connection to be deleted.
module Amazonka.CodeStarConnections.DeleteConnection

-- | <i>See:</i> <a>newDeleteConnection</a> smart constructor.
data DeleteConnection
DeleteConnection' :: Text -> DeleteConnection

-- | The Amazon Resource Name (ARN) of the connection to be deleted.
--   
--   The ARN is never reused if the connection is deleted.
[$sel:connectionArn:DeleteConnection'] :: DeleteConnection -> Text

-- | Create a value of <a>DeleteConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionArn:DeleteConnection'</a>,
--   <a>deleteConnection_connectionArn</a> - The Amazon Resource Name (ARN)
--   of the connection to be deleted.
--   
--   The ARN is never reused if the connection is deleted.
newDeleteConnection :: Text -> DeleteConnection

-- | The Amazon Resource Name (ARN) of the connection to be deleted.
--   
--   The ARN is never reused if the connection is deleted.
deleteConnection_connectionArn :: Lens' DeleteConnection Text

-- | <i>See:</i> <a>newDeleteConnectionResponse</a> smart constructor.
data DeleteConnectionResponse
DeleteConnectionResponse' :: Int -> DeleteConnectionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteConnectionResponse'] :: DeleteConnectionResponse -> Int

-- | Create a value of <a>DeleteConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteConnectionResponse :: Int -> DeleteConnectionResponse

-- | The response's http status code.
deleteConnectionResponse_httpStatus :: Lens' DeleteConnectionResponse Int
instance GHC.Generics.Generic Amazonka.CodeStarConnections.DeleteConnection.DeleteConnection
instance GHC.Show.Show Amazonka.CodeStarConnections.DeleteConnection.DeleteConnection
instance GHC.Read.Read Amazonka.CodeStarConnections.DeleteConnection.DeleteConnection
instance GHC.Classes.Eq Amazonka.CodeStarConnections.DeleteConnection.DeleteConnection
instance GHC.Generics.Generic Amazonka.CodeStarConnections.DeleteConnection.DeleteConnectionResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.DeleteConnection.DeleteConnectionResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.DeleteConnection.DeleteConnectionResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.DeleteConnection.DeleteConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.DeleteConnection.DeleteConnection
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.DeleteConnection.DeleteConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.DeleteConnection.DeleteConnection
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.DeleteConnection.DeleteConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.DeleteConnection.DeleteConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.DeleteConnection.DeleteConnection
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.DeleteConnection.DeleteConnection
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.DeleteConnection.DeleteConnection


-- | Creates a resource that represents the infrastructure where a
--   third-party provider is installed. The host is used when you create
--   connections to an installed third-party provider type, such as GitHub
--   Enterprise Server. You create one host for all connections to that
--   provider.
--   
--   A host created through the CLI or the SDK is in `PENDING` status by
--   default. You can make its status `AVAILABLE` by setting up the host in
--   the console.
module Amazonka.CodeStarConnections.CreateHost

-- | <i>See:</i> <a>newCreateHost</a> smart constructor.
data CreateHost
CreateHost' :: Maybe VpcConfiguration -> Maybe [Tag] -> Text -> ProviderType -> Text -> CreateHost

-- | The VPC configuration to be provisioned for the host. A VPC must be
--   configured and the infrastructure to be represented by the host must
--   already be connected to the VPC.
[$sel:vpcConfiguration:CreateHost'] :: CreateHost -> Maybe VpcConfiguration
[$sel:tags:CreateHost'] :: CreateHost -> Maybe [Tag]

-- | The name of the host to be created. The name must be unique in the
--   calling AWS account.
[$sel:name:CreateHost'] :: CreateHost -> Text

-- | The name of the installed provider to be associated with your
--   connection. The host resource represents the infrastructure where your
--   provider type is installed. The valid provider type is GitHub
--   Enterprise Server.
[$sel:providerType:CreateHost'] :: CreateHost -> ProviderType

-- | The endpoint of the infrastructure to be represented by the host after
--   it is created.
[$sel:providerEndpoint:CreateHost'] :: CreateHost -> Text

-- | Create a value of <a>CreateHost</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfiguration:CreateHost'</a>,
--   <a>createHost_vpcConfiguration</a> - The VPC configuration to be
--   provisioned for the host. A VPC must be configured and the
--   infrastructure to be represented by the host must already be connected
--   to the VPC.
--   
--   <a>$sel:tags:CreateHost'</a>, <a>createHost_tags</a> - Undocumented
--   member.
--   
--   <a>$sel:name:CreateHost'</a>, <a>createHost_name</a> - The name of the
--   host to be created. The name must be unique in the calling AWS
--   account.
--   
--   <a>$sel:providerType:CreateHost'</a>, <a>createHost_providerType</a> -
--   The name of the installed provider to be associated with your
--   connection. The host resource represents the infrastructure where your
--   provider type is installed. The valid provider type is GitHub
--   Enterprise Server.
--   
--   <a>$sel:providerEndpoint:CreateHost'</a>,
--   <a>createHost_providerEndpoint</a> - The endpoint of the
--   infrastructure to be represented by the host after it is created.
newCreateHost :: Text -> ProviderType -> Text -> CreateHost

-- | The VPC configuration to be provisioned for the host. A VPC must be
--   configured and the infrastructure to be represented by the host must
--   already be connected to the VPC.
createHost_vpcConfiguration :: Lens' CreateHost (Maybe VpcConfiguration)

-- | Undocumented member.
createHost_tags :: Lens' CreateHost (Maybe [Tag])

-- | The name of the host to be created. The name must be unique in the
--   calling AWS account.
createHost_name :: Lens' CreateHost Text

-- | The name of the installed provider to be associated with your
--   connection. The host resource represents the infrastructure where your
--   provider type is installed. The valid provider type is GitHub
--   Enterprise Server.
createHost_providerType :: Lens' CreateHost ProviderType

-- | The endpoint of the infrastructure to be represented by the host after
--   it is created.
createHost_providerEndpoint :: Lens' CreateHost Text

-- | <i>See:</i> <a>newCreateHostResponse</a> smart constructor.
data CreateHostResponse
CreateHostResponse' :: Maybe Text -> Maybe [Tag] -> Int -> CreateHostResponse

-- | The Amazon Resource Name (ARN) of the host to be created.
[$sel:hostArn:CreateHostResponse'] :: CreateHostResponse -> Maybe Text
[$sel:tags:CreateHostResponse'] :: CreateHostResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:CreateHostResponse'] :: CreateHostResponse -> Int

-- | Create a value of <a>CreateHostResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostArn:CreateHostResponse'</a>,
--   <a>createHostResponse_hostArn</a> - The Amazon Resource Name (ARN) of
--   the host to be created.
--   
--   <a>$sel:tags:CreateHost'</a>, <a>createHostResponse_tags</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateHostResponse'</a>,
--   <a>createHostResponse_httpStatus</a> - The response's http status
--   code.
newCreateHostResponse :: Int -> CreateHostResponse

-- | The Amazon Resource Name (ARN) of the host to be created.
createHostResponse_hostArn :: Lens' CreateHostResponse (Maybe Text)

-- | Undocumented member.
createHostResponse_tags :: Lens' CreateHostResponse (Maybe [Tag])

-- | The response's http status code.
createHostResponse_httpStatus :: Lens' CreateHostResponse Int
instance GHC.Generics.Generic Amazonka.CodeStarConnections.CreateHost.CreateHost
instance GHC.Show.Show Amazonka.CodeStarConnections.CreateHost.CreateHost
instance GHC.Read.Read Amazonka.CodeStarConnections.CreateHost.CreateHost
instance GHC.Classes.Eq Amazonka.CodeStarConnections.CreateHost.CreateHost
instance GHC.Generics.Generic Amazonka.CodeStarConnections.CreateHost.CreateHostResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.CreateHost.CreateHostResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.CreateHost.CreateHostResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.CreateHost.CreateHostResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.CreateHost.CreateHost
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.CreateHost.CreateHostResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.CreateHost.CreateHost
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.CreateHost.CreateHost
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.CreateHost.CreateHost
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.CreateHost.CreateHost
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.CreateHost.CreateHost
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.CreateHost.CreateHost


-- | Creates a connection that can then be given to other AWS services like
--   CodePipeline so that it can access third-party code repositories. The
--   connection is in pending status until the third-party connection
--   handshake is completed from the console.
module Amazonka.CodeStarConnections.CreateConnection

-- | <i>See:</i> <a>newCreateConnection</a> smart constructor.
data CreateConnection
CreateConnection' :: Maybe ProviderType -> Maybe Text -> Maybe [Tag] -> Text -> CreateConnection

-- | The name of the external provider where your third-party code
--   repository is configured.
[$sel:providerType:CreateConnection'] :: CreateConnection -> Maybe ProviderType

-- | The Amazon Resource Name (ARN) of the host associated with the
--   connection to be created.
[$sel:hostArn:CreateConnection'] :: CreateConnection -> Maybe Text

-- | The key-value pair to use when tagging the resource.
[$sel:tags:CreateConnection'] :: CreateConnection -> Maybe [Tag]

-- | The name of the connection to be created. The name must be unique in
--   the calling AWS account.
[$sel:connectionName:CreateConnection'] :: CreateConnection -> Text

-- | Create a value of <a>CreateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerType:CreateConnection'</a>,
--   <a>createConnection_providerType</a> - The name of the external
--   provider where your third-party code repository is configured.
--   
--   <a>$sel:hostArn:CreateConnection'</a>, <a>createConnection_hostArn</a>
--   - The Amazon Resource Name (ARN) of the host associated with the
--   connection to be created.
--   
--   <a>$sel:tags:CreateConnection'</a>, <a>createConnection_tags</a> - The
--   key-value pair to use when tagging the resource.
--   
--   <a>$sel:connectionName:CreateConnection'</a>,
--   <a>createConnection_connectionName</a> - The name of the connection to
--   be created. The name must be unique in the calling AWS account.
newCreateConnection :: Text -> CreateConnection

-- | The name of the external provider where your third-party code
--   repository is configured.
createConnection_providerType :: Lens' CreateConnection (Maybe ProviderType)

-- | The Amazon Resource Name (ARN) of the host associated with the
--   connection to be created.
createConnection_hostArn :: Lens' CreateConnection (Maybe Text)

-- | The key-value pair to use when tagging the resource.
createConnection_tags :: Lens' CreateConnection (Maybe [Tag])

-- | The name of the connection to be created. The name must be unique in
--   the calling AWS account.
createConnection_connectionName :: Lens' CreateConnection Text

-- | <i>See:</i> <a>newCreateConnectionResponse</a> smart constructor.
data CreateConnectionResponse
CreateConnectionResponse' :: Maybe [Tag] -> Int -> Text -> CreateConnectionResponse

-- | Specifies the tags applied to the resource.
[$sel:tags:CreateConnectionResponse'] :: CreateConnectionResponse -> Maybe [Tag]

-- | The response's http status code.
[$sel:httpStatus:CreateConnectionResponse'] :: CreateConnectionResponse -> Int

-- | The Amazon Resource Name (ARN) of the connection to be created. The
--   ARN is used as the connection reference when the connection is shared
--   between AWS services.
--   
--   The ARN is never reused if the connection is deleted.
[$sel:connectionArn:CreateConnectionResponse'] :: CreateConnectionResponse -> Text

-- | Create a value of <a>CreateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateConnection'</a>,
--   <a>createConnectionResponse_tags</a> - Specifies the tags applied to
--   the resource.
--   
--   <a>$sel:httpStatus:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:connectionArn:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_connectionArn</a> - The Amazon Resource
--   Name (ARN) of the connection to be created. The ARN is used as the
--   connection reference when the connection is shared between AWS
--   services.
--   
--   The ARN is never reused if the connection is deleted.
newCreateConnectionResponse :: Int -> Text -> CreateConnectionResponse

-- | Specifies the tags applied to the resource.
createConnectionResponse_tags :: Lens' CreateConnectionResponse (Maybe [Tag])

-- | The response's http status code.
createConnectionResponse_httpStatus :: Lens' CreateConnectionResponse Int

-- | The Amazon Resource Name (ARN) of the connection to be created. The
--   ARN is used as the connection reference when the connection is shared
--   between AWS services.
--   
--   The ARN is never reused if the connection is deleted.
createConnectionResponse_connectionArn :: Lens' CreateConnectionResponse Text
instance GHC.Generics.Generic Amazonka.CodeStarConnections.CreateConnection.CreateConnection
instance GHC.Show.Show Amazonka.CodeStarConnections.CreateConnection.CreateConnection
instance GHC.Read.Read Amazonka.CodeStarConnections.CreateConnection.CreateConnection
instance GHC.Classes.Eq Amazonka.CodeStarConnections.CreateConnection.CreateConnection
instance GHC.Generics.Generic Amazonka.CodeStarConnections.CreateConnection.CreateConnectionResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.CreateConnection.CreateConnectionResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.CreateConnection.CreateConnectionResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.CreateConnection.CreateConnectionResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.CreateConnection.CreateConnection
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.CreateConnection.CreateConnectionResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.CreateConnection.CreateConnection
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.CreateConnection.CreateConnection
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.CreateConnection.CreateConnection
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.CreateConnection.CreateConnection
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.CreateConnection.CreateConnection
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.CreateConnection.CreateConnection


-- | Removes tags from an AWS resource.
module Amazonka.CodeStarConnections.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to remove tags from.
[$sel:resourceArn:UntagResource'] :: UntagResource -> Text

-- | The list of keys for the tags to be removed from the resource.
[$sel:tagKeys:UntagResource'] :: UntagResource -> [Text]

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to remove tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of keys for the tags to be removed from the resource.
newUntagResource :: Text -> UntagResource

-- | The Amazon Resource Name (ARN) of the resource to remove tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of keys for the tags to be removed from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Amazonka.CodeStarConnections.UntagResource.UntagResource
instance GHC.Show.Show Amazonka.CodeStarConnections.UntagResource.UntagResource
instance GHC.Read.Read Amazonka.CodeStarConnections.UntagResource.UntagResource
instance GHC.Classes.Eq Amazonka.CodeStarConnections.UntagResource.UntagResource
instance GHC.Generics.Generic Amazonka.CodeStarConnections.UntagResource.UntagResourceResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.UntagResource.UntagResourceResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.UntagResource.UntagResourceResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.UntagResource.UntagResource
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.UntagResource.UntagResource
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.UntagResource.UntagResource
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.UntagResource.UntagResource
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.UntagResource.UntagResource


-- | Updates a specified host with the provided configurations.
module Amazonka.CodeStarConnections.UpdateHost

-- | <i>See:</i> <a>newUpdateHost</a> smart constructor.
data UpdateHost
UpdateHost' :: Maybe Text -> Maybe VpcConfiguration -> Text -> UpdateHost

-- | The URL or endpoint of the host to be updated.
[$sel:providerEndpoint:UpdateHost'] :: UpdateHost -> Maybe Text

-- | The VPC configuration of the host to be updated. A VPC must be
--   configured and the infrastructure to be represented by the host must
--   already be connected to the VPC.
[$sel:vpcConfiguration:UpdateHost'] :: UpdateHost -> Maybe VpcConfiguration

-- | The Amazon Resource Name (ARN) of the host to be updated.
[$sel:hostArn:UpdateHost'] :: UpdateHost -> Text

-- | Create a value of <a>UpdateHost</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerEndpoint:UpdateHost'</a>,
--   <a>updateHost_providerEndpoint</a> - The URL or endpoint of the host
--   to be updated.
--   
--   <a>$sel:vpcConfiguration:UpdateHost'</a>,
--   <a>updateHost_vpcConfiguration</a> - The VPC configuration of the host
--   to be updated. A VPC must be configured and the infrastructure to be
--   represented by the host must already be connected to the VPC.
--   
--   <a>$sel:hostArn:UpdateHost'</a>, <a>updateHost_hostArn</a> - The
--   Amazon Resource Name (ARN) of the host to be updated.
newUpdateHost :: Text -> UpdateHost

-- | The URL or endpoint of the host to be updated.
updateHost_providerEndpoint :: Lens' UpdateHost (Maybe Text)

-- | The VPC configuration of the host to be updated. A VPC must be
--   configured and the infrastructure to be represented by the host must
--   already be connected to the VPC.
updateHost_vpcConfiguration :: Lens' UpdateHost (Maybe VpcConfiguration)

-- | The Amazon Resource Name (ARN) of the host to be updated.
updateHost_hostArn :: Lens' UpdateHost Text

-- | <i>See:</i> <a>newUpdateHostResponse</a> smart constructor.
data UpdateHostResponse
UpdateHostResponse' :: Int -> UpdateHostResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateHostResponse'] :: UpdateHostResponse -> Int

-- | Create a value of <a>UpdateHostResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateHostResponse'</a>,
--   <a>updateHostResponse_httpStatus</a> - The response's http status
--   code.
newUpdateHostResponse :: Int -> UpdateHostResponse

-- | The response's http status code.
updateHostResponse_httpStatus :: Lens' UpdateHostResponse Int
instance GHC.Generics.Generic Amazonka.CodeStarConnections.UpdateHost.UpdateHost
instance GHC.Show.Show Amazonka.CodeStarConnections.UpdateHost.UpdateHost
instance GHC.Read.Read Amazonka.CodeStarConnections.UpdateHost.UpdateHost
instance GHC.Classes.Eq Amazonka.CodeStarConnections.UpdateHost.UpdateHost
instance GHC.Generics.Generic Amazonka.CodeStarConnections.UpdateHost.UpdateHostResponse
instance GHC.Show.Show Amazonka.CodeStarConnections.UpdateHost.UpdateHostResponse
instance GHC.Read.Read Amazonka.CodeStarConnections.UpdateHost.UpdateHostResponse
instance GHC.Classes.Eq Amazonka.CodeStarConnections.UpdateHost.UpdateHostResponse
instance Amazonka.Types.AWSRequest Amazonka.CodeStarConnections.UpdateHost.UpdateHost
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.UpdateHost.UpdateHostResponse
instance Data.Hashable.Class.Hashable Amazonka.CodeStarConnections.UpdateHost.UpdateHost
instance Control.DeepSeq.NFData Amazonka.CodeStarConnections.UpdateHost.UpdateHost
instance Amazonka.Data.Headers.ToHeaders Amazonka.CodeStarConnections.UpdateHost.UpdateHost
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.CodeStarConnections.UpdateHost.UpdateHost
instance Amazonka.Data.Path.ToPath Amazonka.CodeStarConnections.UpdateHost.UpdateHost
instance Amazonka.Data.Query.ToQuery Amazonka.CodeStarConnections.UpdateHost.UpdateHost


module Amazonka.CodeStarConnections.Lens

-- | The VPC configuration to be provisioned for the host. A VPC must be
--   configured and the infrastructure to be represented by the host must
--   already be connected to the VPC.
createHost_vpcConfiguration :: Lens' CreateHost (Maybe VpcConfiguration)

-- | Undocumented member.
createHost_tags :: Lens' CreateHost (Maybe [Tag])

-- | The name of the host to be created. The name must be unique in the
--   calling AWS account.
createHost_name :: Lens' CreateHost Text

-- | The name of the installed provider to be associated with your
--   connection. The host resource represents the infrastructure where your
--   provider type is installed. The valid provider type is GitHub
--   Enterprise Server.
createHost_providerType :: Lens' CreateHost ProviderType

-- | The endpoint of the infrastructure to be represented by the host after
--   it is created.
createHost_providerEndpoint :: Lens' CreateHost Text

-- | The Amazon Resource Name (ARN) of the host to be created.
createHostResponse_hostArn :: Lens' CreateHostResponse (Maybe Text)

-- | Undocumented member.
createHostResponse_tags :: Lens' CreateHostResponse (Maybe [Tag])

-- | The response's http status code.
createHostResponse_httpStatus :: Lens' CreateHostResponse Int

-- | Filters the list of connections to those associated with a specified
--   host.
listConnections_hostArnFilter :: Lens' ListConnections (Maybe Text)

-- | The token that was returned from the previous <tt>ListConnections</tt>
--   call, which can be used to return the next set of connections in the
--   list.
listConnections_nextToken :: Lens' ListConnections (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
listConnections_maxResults :: Lens' ListConnections (Maybe Natural)

-- | Filters the list of connections to those associated with a specified
--   provider, such as Bitbucket.
listConnections_providerTypeFilter :: Lens' ListConnections (Maybe ProviderType)

-- | A list of connections and the details for each connection, such as
--   status, owner, and provider type.
listConnectionsResponse_connections :: Lens' ListConnectionsResponse (Maybe [Connection])

-- | A token that can be used in the next <tt>ListConnections</tt> call. To
--   view all items in the list, continue to call this operation with each
--   subsequent token until no more <tt>nextToken</tt> values are returned.
listConnectionsResponse_nextToken :: Lens' ListConnectionsResponse (Maybe Text)

-- | The response's http status code.
listConnectionsResponse_httpStatus :: Lens' ListConnectionsResponse Int

-- | The Amazon Resource Name (ARN) of the connection to be deleted.
--   
--   The ARN is never reused if the connection is deleted.
deleteConnection_connectionArn :: Lens' DeleteConnection Text

-- | The response's http status code.
deleteConnectionResponse_httpStatus :: Lens' DeleteConnectionResponse Int

-- | The Amazon Resource Name (ARN) of the resource for which you want to
--   get information about tags, if any.
listTagsForResource_resourceArn :: Lens' ListTagsForResource Text

-- | A list of tag key and value pairs associated with the specified
--   resource.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe [Tag])

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | The name of the external provider where your third-party code
--   repository is configured.
createConnection_providerType :: Lens' CreateConnection (Maybe ProviderType)

-- | The Amazon Resource Name (ARN) of the host associated with the
--   connection to be created.
createConnection_hostArn :: Lens' CreateConnection (Maybe Text)

-- | The key-value pair to use when tagging the resource.
createConnection_tags :: Lens' CreateConnection (Maybe [Tag])

-- | The name of the connection to be created. The name must be unique in
--   the calling AWS account.
createConnection_connectionName :: Lens' CreateConnection Text

-- | Specifies the tags applied to the resource.
createConnectionResponse_tags :: Lens' CreateConnectionResponse (Maybe [Tag])

-- | The response's http status code.
createConnectionResponse_httpStatus :: Lens' CreateConnectionResponse Int

-- | The Amazon Resource Name (ARN) of the connection to be created. The
--   ARN is used as the connection reference when the connection is shared
--   between AWS services.
--   
--   The ARN is never reused if the connection is deleted.
createConnectionResponse_connectionArn :: Lens' CreateConnectionResponse Text

-- | The Amazon Resource Name (ARN) of a connection.
getConnection_connectionArn :: Lens' GetConnection Text

-- | The connection details, such as status, owner, and provider type.
getConnectionResponse_connection :: Lens' GetConnectionResponse (Maybe Connection)

-- | The response's http status code.
getConnectionResponse_httpStatus :: Lens' GetConnectionResponse Int

-- | The Amazon Resource Name (ARN) of the host to be deleted.
deleteHost_hostArn :: Lens' DeleteHost Text

-- | The response's http status code.
deleteHostResponse_httpStatus :: Lens' DeleteHostResponse Int

-- | The URL or endpoint of the host to be updated.
updateHost_providerEndpoint :: Lens' UpdateHost (Maybe Text)

-- | The VPC configuration of the host to be updated. A VPC must be
--   configured and the infrastructure to be represented by the host must
--   already be connected to the VPC.
updateHost_vpcConfiguration :: Lens' UpdateHost (Maybe VpcConfiguration)

-- | The Amazon Resource Name (ARN) of the host to be updated.
updateHost_hostArn :: Lens' UpdateHost Text

-- | The response's http status code.
updateHostResponse_httpStatus :: Lens' UpdateHostResponse Int

-- | The token that was returned from the previous <tt>ListHosts</tt> call,
--   which can be used to return the next set of hosts in the list.
listHosts_nextToken :: Lens' ListHosts (Maybe Text)

-- | The maximum number of results to return in a single call. To retrieve
--   the remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
listHosts_maxResults :: Lens' ListHosts (Maybe Natural)

-- | A list of hosts and the details for each host, such as status,
--   endpoint, and provider type.
listHostsResponse_hosts :: Lens' ListHostsResponse (Maybe [Host])

-- | A token that can be used in the next <tt>ListHosts</tt> call. To view
--   all items in the list, continue to call this operation with each
--   subsequent token until no more <tt>nextToken</tt> values are returned.
listHostsResponse_nextToken :: Lens' ListHostsResponse (Maybe Text)

-- | The response's http status code.
listHostsResponse_httpStatus :: Lens' ListHostsResponse Int

-- | The Amazon Resource Name (ARN) of the resource to which you want to
--   add or update tags.
tagResource_resourceArn :: Lens' TagResource Text

-- | The tags you want to modify or add to the resource.
tagResource_tags :: Lens' TagResource [Tag]

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the resource to remove tags from.
untagResource_resourceArn :: Lens' UntagResource Text

-- | The list of keys for the tags to be removed from the resource.
untagResource_tagKeys :: Lens' UntagResource [Text]

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The Amazon Resource Name (ARN) of the requested host.
getHost_hostArn :: Lens' GetHost Text

-- | The status of the requested host.
getHostResponse_status :: Lens' GetHostResponse (Maybe Text)

-- | The endpoint of the infrastructure represented by the requested host.
getHostResponse_providerEndpoint :: Lens' GetHostResponse (Maybe Text)

-- | The provider type of the requested host, such as GitHub Enterprise
--   Server.
getHostResponse_providerType :: Lens' GetHostResponse (Maybe ProviderType)

-- | The name of the requested host.
getHostResponse_name :: Lens' GetHostResponse (Maybe Text)

-- | The VPC configuration of the requested host.
getHostResponse_vpcConfiguration :: Lens' GetHostResponse (Maybe VpcConfiguration)

-- | The response's http status code.
getHostResponse_httpStatus :: Lens' GetHostResponse Int

-- | The identifier of the external provider where your third-party code
--   repository is configured. For Bitbucket, this is the account ID of the
--   owner of the Bitbucket repository.
connection_ownerAccountId :: Lens' Connection (Maybe Text)

-- | The name of the external provider where your third-party code
--   repository is configured.
connection_providerType :: Lens' Connection (Maybe ProviderType)

-- | The name of the connection. Connection names must be unique in an AWS
--   user account.
connection_connectionName :: Lens' Connection (Maybe Text)

-- | The current status of the connection.
connection_connectionStatus :: Lens' Connection (Maybe ConnectionStatus)

-- | The Amazon Resource Name (ARN) of the host associated with the
--   connection.
connection_hostArn :: Lens' Connection (Maybe Text)

-- | The Amazon Resource Name (ARN) of the connection. The ARN is used as
--   the connection reference when the connection is shared between AWS
--   services.
--   
--   The ARN is never reused if the connection is deleted.
connection_connectionArn :: Lens' Connection (Maybe Text)

-- | The status of the host, such as PENDING, AVAILABLE,
--   VPC_CONFIG_DELETING, VPC_CONFIG_INITIALIZING, and
--   VPC_CONFIG_FAILED_INITIALIZATION.
host_status :: Lens' Host (Maybe Text)

-- | The endpoint of the infrastructure where your provider type is
--   installed.
host_providerEndpoint :: Lens' Host (Maybe Text)

-- | The name of the installed provider to be associated with your
--   connection. The host resource represents the infrastructure where your
--   provider type is installed. The valid provider type is GitHub
--   Enterprise Server.
host_providerType :: Lens' Host (Maybe ProviderType)

-- | The status description for the host.
host_statusMessage :: Lens' Host (Maybe Text)

-- | The name of the host.
host_name :: Lens' Host (Maybe Text)

-- | The Amazon Resource Name (ARN) of the host.
host_hostArn :: Lens' Host (Maybe Text)

-- | The VPC configuration provisioned for the host.
host_vpcConfiguration :: Lens' Host (Maybe VpcConfiguration)

-- | The tag's key.
tag_key :: Lens' Tag Text

-- | The tag's value.
tag_value :: Lens' Tag Text

-- | The value of the Transport Layer Security (TLS) certificate associated
--   with the infrastructure where your provider type is installed.
vpcConfiguration_tlsCertificate :: Lens' VpcConfiguration (Maybe Text)

-- | The ID of the Amazon VPC connected to the infrastructure where your
--   provider type is installed.
vpcConfiguration_vpcId :: Lens' VpcConfiguration Text

-- | The ID of the subnet or subnets associated with the Amazon VPC
--   connected to the infrastructure where your provider type is installed.
vpcConfiguration_subnetIds :: Lens' VpcConfiguration (NonEmpty Text)

-- | The ID of the security group or security groups associated with the
--   Amazon VPC connected to the infrastructure where your provider type is
--   installed.
vpcConfiguration_securityGroupIds :: Lens' VpcConfiguration (NonEmpty Text)


module Amazonka.CodeStarConnections.Waiters


-- | Derived from API version <tt>2019-12-01</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS CodeStar Connections
--   
--   This AWS CodeStar Connections API Reference provides descriptions and
--   usage examples of the operations and data types for the AWS CodeStar
--   Connections API. You can use the connections API to work with
--   connections and installations.
--   
--   <i>Connections</i> are configurations that you use to connect AWS
--   resources to external code repositories. Each connection is a resource
--   that can be given to services such as CodePipeline to connect to a
--   third-party repository such as Bitbucket. For example, you can add the
--   connection in CodePipeline so that it triggers your pipeline when a
--   code change is made to your third-party code repository. Each
--   connection is named and associated with a unique ARN that is used to
--   reference the connection.
--   
--   When you create a connection, the console initiates a third-party
--   connection handshake. <i>Installations</i> are the apps that are used
--   to conduct this handshake. For example, the installation for the
--   Bitbucket provider type is the Bitbucket app. When you create a
--   connection, you can choose an existing installation or create one.
--   
--   When you want to create a connection to an installed provider type
--   such as GitHub Enterprise Server, you create a <i>host</i> for your
--   connections.
--   
--   You can work with connections by calling:
--   
--   <ul>
--   <li>CreateConnection, which creates a uniquely named connection that
--   can be referenced by services such as CodePipeline.</li>
--   <li>DeleteConnection, which deletes the specified connection.</li>
--   <li>GetConnection, which returns information about the connection,
--   including the connection status.</li>
--   <li>ListConnections, which lists the connections associated with your
--   account.</li>
--   </ul>
--   
--   You can work with hosts by calling:
--   
--   <ul>
--   <li>CreateHost, which creates a host that represents the
--   infrastructure where your provider is installed.</li>
--   <li>DeleteHost, which deletes the specified host.</li>
--   <li>GetHost, which returns information about the host, including the
--   setup status.</li>
--   <li>ListHosts, which lists the hosts associated with your
--   account.</li>
--   </ul>
--   
--   You can work with tags in AWS CodeStar Connections by calling the
--   following:
--   
--   <ul>
--   <li>ListTagsForResource, which gets information about AWS tags for a
--   specified Amazon Resource Name (ARN) in AWS CodeStar Connections.</li>
--   <li>TagResource, which adds or updates tags for a resource in AWS
--   CodeStar Connections.</li>
--   <li>UntagResource, which removes tags for a resource in AWS CodeStar
--   Connections.</li>
--   </ul>
--   
--   For information about how to use AWS CodeStar Connections, see the
--   <a>Developer Tools User Guide</a>.
module Amazonka.CodeStarConnections

-- | API version <tt>2019-12-01</tt> of the Amazon CodeStar connections SDK
--   configuration.
defaultService :: Service

-- | Resource not found. Verify the ARN for the host resource and try
--   again.
_ResourceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The operation is not supported. Check the connection status and try
--   again.
_UnsupportedOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Two conflicting operations have been made on the same resource.
_ConflictException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Resource not found. Verify the connection resource ARN and try again.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exceeded the maximum limit for connections.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newCreateHost</a> smart constructor.
data CreateHost
CreateHost' :: Maybe VpcConfiguration -> Maybe [Tag] -> Text -> ProviderType -> Text -> CreateHost

-- | Create a value of <a>CreateHost</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:vpcConfiguration:CreateHost'</a>,
--   <a>createHost_vpcConfiguration</a> - The VPC configuration to be
--   provisioned for the host. A VPC must be configured and the
--   infrastructure to be represented by the host must already be connected
--   to the VPC.
--   
--   <a>$sel:tags:CreateHost'</a>, <a>createHost_tags</a> - Undocumented
--   member.
--   
--   <a>$sel:name:CreateHost'</a>, <a>createHost_name</a> - The name of the
--   host to be created. The name must be unique in the calling AWS
--   account.
--   
--   <a>$sel:providerType:CreateHost'</a>, <a>createHost_providerType</a> -
--   The name of the installed provider to be associated with your
--   connection. The host resource represents the infrastructure where your
--   provider type is installed. The valid provider type is GitHub
--   Enterprise Server.
--   
--   <a>$sel:providerEndpoint:CreateHost'</a>,
--   <a>createHost_providerEndpoint</a> - The endpoint of the
--   infrastructure to be represented by the host after it is created.
newCreateHost :: Text -> ProviderType -> Text -> CreateHost

-- | <i>See:</i> <a>newCreateHostResponse</a> smart constructor.
data CreateHostResponse
CreateHostResponse' :: Maybe Text -> Maybe [Tag] -> Int -> CreateHostResponse

-- | Create a value of <a>CreateHostResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostArn:CreateHostResponse'</a>,
--   <a>createHostResponse_hostArn</a> - The Amazon Resource Name (ARN) of
--   the host to be created.
--   
--   <a>$sel:tags:CreateHost'</a>, <a>createHostResponse_tags</a> -
--   Undocumented member.
--   
--   <a>$sel:httpStatus:CreateHostResponse'</a>,
--   <a>createHostResponse_httpStatus</a> - The response's http status
--   code.
newCreateHostResponse :: Int -> CreateHostResponse

-- | <i>See:</i> <a>newListConnections</a> smart constructor.
data ListConnections
ListConnections' :: Maybe Text -> Maybe Text -> Maybe Natural -> Maybe ProviderType -> ListConnections

-- | Create a value of <a>ListConnections</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostArnFilter:ListConnections'</a>,
--   <a>listConnections_hostArnFilter</a> - Filters the list of connections
--   to those associated with a specified host.
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnections_nextToken</a> - The token that was returned from
--   the previous <tt>ListConnections</tt> call, which can be used to
--   return the next set of connections in the list.
--   
--   <a>$sel:maxResults:ListConnections'</a>,
--   <a>listConnections_maxResults</a> - The maximum number of results to
--   return in a single call. To retrieve the remaining results, make
--   another call with the returned <tt>nextToken</tt> value.
--   
--   <a>$sel:providerTypeFilter:ListConnections'</a>,
--   <a>listConnections_providerTypeFilter</a> - Filters the list of
--   connections to those associated with a specified provider, such as
--   Bitbucket.
newListConnections :: ListConnections

-- | <i>See:</i> <a>newListConnectionsResponse</a> smart constructor.
data ListConnectionsResponse
ListConnectionsResponse' :: Maybe [Connection] -> Maybe Text -> Int -> ListConnectionsResponse

-- | Create a value of <a>ListConnectionsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connections:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_connections</a> - A list of connections and
--   the details for each connection, such as status, owner, and provider
--   type.
--   
--   <a>$sel:nextToken:ListConnections'</a>,
--   <a>listConnectionsResponse_nextToken</a> - A token that can be used in
--   the next <tt>ListConnections</tt> call. To view all items in the list,
--   continue to call this operation with each subsequent token until no
--   more <tt>nextToken</tt> values are returned.
--   
--   <a>$sel:httpStatus:ListConnectionsResponse'</a>,
--   <a>listConnectionsResponse_httpStatus</a> - The response's http status
--   code.
newListConnectionsResponse :: Int -> ListConnectionsResponse

-- | <i>See:</i> <a>newDeleteConnection</a> smart constructor.
data DeleteConnection
DeleteConnection' :: Text -> DeleteConnection

-- | Create a value of <a>DeleteConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionArn:DeleteConnection'</a>,
--   <a>deleteConnection_connectionArn</a> - The Amazon Resource Name (ARN)
--   of the connection to be deleted.
--   
--   The ARN is never reused if the connection is deleted.
newDeleteConnection :: Text -> DeleteConnection

-- | <i>See:</i> <a>newDeleteConnectionResponse</a> smart constructor.
data DeleteConnectionResponse
DeleteConnectionResponse' :: Int -> DeleteConnectionResponse

-- | Create a value of <a>DeleteConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteConnectionResponse'</a>,
--   <a>deleteConnectionResponse_httpStatus</a> - The response's http
--   status code.
newDeleteConnectionResponse :: Int -> DeleteConnectionResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceArn</a> - The Amazon Resource Name
--   (ARN) of the resource for which you want to get information about
--   tags, if any.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe [Tag] -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - A list of tag key and value
--   pairs associated with the specified resource.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newCreateConnection</a> smart constructor.
data CreateConnection
CreateConnection' :: Maybe ProviderType -> Maybe Text -> Maybe [Tag] -> Text -> CreateConnection

-- | Create a value of <a>CreateConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerType:CreateConnection'</a>,
--   <a>createConnection_providerType</a> - The name of the external
--   provider where your third-party code repository is configured.
--   
--   <a>$sel:hostArn:CreateConnection'</a>, <a>createConnection_hostArn</a>
--   - The Amazon Resource Name (ARN) of the host associated with the
--   connection to be created.
--   
--   <a>$sel:tags:CreateConnection'</a>, <a>createConnection_tags</a> - The
--   key-value pair to use when tagging the resource.
--   
--   <a>$sel:connectionName:CreateConnection'</a>,
--   <a>createConnection_connectionName</a> - The name of the connection to
--   be created. The name must be unique in the calling AWS account.
newCreateConnection :: Text -> CreateConnection

-- | <i>See:</i> <a>newCreateConnectionResponse</a> smart constructor.
data CreateConnectionResponse
CreateConnectionResponse' :: Maybe [Tag] -> Int -> Text -> CreateConnectionResponse

-- | Create a value of <a>CreateConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:CreateConnection'</a>,
--   <a>createConnectionResponse_tags</a> - Specifies the tags applied to
--   the resource.
--   
--   <a>$sel:httpStatus:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:connectionArn:CreateConnectionResponse'</a>,
--   <a>createConnectionResponse_connectionArn</a> - The Amazon Resource
--   Name (ARN) of the connection to be created. The ARN is used as the
--   connection reference when the connection is shared between AWS
--   services.
--   
--   The ARN is never reused if the connection is deleted.
newCreateConnectionResponse :: Int -> Text -> CreateConnectionResponse

-- | <i>See:</i> <a>newGetConnection</a> smart constructor.
data GetConnection
GetConnection' :: Text -> GetConnection

-- | Create a value of <a>GetConnection</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connectionArn:GetConnection'</a>,
--   <a>getConnection_connectionArn</a> - The Amazon Resource Name (ARN) of
--   a connection.
newGetConnection :: Text -> GetConnection

-- | <i>See:</i> <a>newGetConnectionResponse</a> smart constructor.
data GetConnectionResponse
GetConnectionResponse' :: Maybe Connection -> Int -> GetConnectionResponse

-- | Create a value of <a>GetConnectionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:connection:GetConnectionResponse'</a>,
--   <a>getConnectionResponse_connection</a> - The connection details, such
--   as status, owner, and provider type.
--   
--   <a>$sel:httpStatus:GetConnectionResponse'</a>,
--   <a>getConnectionResponse_httpStatus</a> - The response's http status
--   code.
newGetConnectionResponse :: Int -> GetConnectionResponse

-- | <i>See:</i> <a>newDeleteHost</a> smart constructor.
data DeleteHost
DeleteHost' :: Text -> DeleteHost

-- | Create a value of <a>DeleteHost</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostArn:DeleteHost'</a>, <a>deleteHost_hostArn</a> - The
--   Amazon Resource Name (ARN) of the host to be deleted.
newDeleteHost :: Text -> DeleteHost

-- | <i>See:</i> <a>newDeleteHostResponse</a> smart constructor.
data DeleteHostResponse
DeleteHostResponse' :: Int -> DeleteHostResponse

-- | Create a value of <a>DeleteHostResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteHostResponse'</a>,
--   <a>deleteHostResponse_httpStatus</a> - The response's http status
--   code.
newDeleteHostResponse :: Int -> DeleteHostResponse

-- | <i>See:</i> <a>newUpdateHost</a> smart constructor.
data UpdateHost
UpdateHost' :: Maybe Text -> Maybe VpcConfiguration -> Text -> UpdateHost

-- | Create a value of <a>UpdateHost</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:providerEndpoint:UpdateHost'</a>,
--   <a>updateHost_providerEndpoint</a> - The URL or endpoint of the host
--   to be updated.
--   
--   <a>$sel:vpcConfiguration:UpdateHost'</a>,
--   <a>updateHost_vpcConfiguration</a> - The VPC configuration of the host
--   to be updated. A VPC must be configured and the infrastructure to be
--   represented by the host must already be connected to the VPC.
--   
--   <a>$sel:hostArn:UpdateHost'</a>, <a>updateHost_hostArn</a> - The
--   Amazon Resource Name (ARN) of the host to be updated.
newUpdateHost :: Text -> UpdateHost

-- | <i>See:</i> <a>newUpdateHostResponse</a> smart constructor.
data UpdateHostResponse
UpdateHostResponse' :: Int -> UpdateHostResponse

-- | Create a value of <a>UpdateHostResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateHostResponse'</a>,
--   <a>updateHostResponse_httpStatus</a> - The response's http status
--   code.
newUpdateHostResponse :: Int -> UpdateHostResponse

-- | <i>See:</i> <a>newListHosts</a> smart constructor.
data ListHosts
ListHosts' :: Maybe Text -> Maybe Natural -> ListHosts

-- | Create a value of <a>ListHosts</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHosts'</a>, <a>listHosts_nextToken</a> - The
--   token that was returned from the previous <tt>ListHosts</tt> call,
--   which can be used to return the next set of hosts in the list.
--   
--   <a>$sel:maxResults:ListHosts'</a>, <a>listHosts_maxResults</a> - The
--   maximum number of results to return in a single call. To retrieve the
--   remaining results, make another call with the returned
--   <tt>nextToken</tt> value.
newListHosts :: ListHosts

-- | <i>See:</i> <a>newListHostsResponse</a> smart constructor.
data ListHostsResponse
ListHostsResponse' :: Maybe [Host] -> Maybe Text -> Int -> ListHostsResponse

-- | Create a value of <a>ListHostsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hosts:ListHostsResponse'</a>, <a>listHostsResponse_hosts</a> -
--   A list of hosts and the details for each host, such as status,
--   endpoint, and provider type.
--   
--   <a>$sel:nextToken:ListHosts'</a>, <a>listHostsResponse_nextToken</a> -
--   A token that can be used in the next <tt>ListHosts</tt> call. To view
--   all items in the list, continue to call this operation with each
--   subsequent token until no more <tt>nextToken</tt> values are returned.
--   
--   <a>$sel:httpStatus:ListHostsResponse'</a>,
--   <a>listHostsResponse_httpStatus</a> - The response's http status code.
newListHostsResponse :: Int -> ListHostsResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> [Tag] -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:TagResource'</a>, <a>tagResource_resourceArn</a> -
--   The Amazon Resource Name (ARN) of the resource to which you want to
--   add or update tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The tags you
--   want to modify or add to the resource.
newTagResource :: Text -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> [Text] -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceArn:UntagResource'</a>,
--   <a>untagResource_resourceArn</a> - The Amazon Resource Name (ARN) of
--   the resource to remove tags from.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - The
--   list of keys for the tags to be removed from the resource.
newUntagResource :: Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newGetHost</a> smart constructor.
data GetHost
GetHost' :: Text -> GetHost

-- | Create a value of <a>GetHost</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hostArn:GetHost'</a>, <a>getHost_hostArn</a> - The Amazon
--   Resource Name (ARN) of the requested host.
newGetHost :: Text -> GetHost

-- | <i>See:</i> <a>newGetHostResponse</a> smart constructor.
data GetHostResponse
GetHostResponse' :: Maybe Text -> Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe VpcConfiguration -> Int -> GetHostResponse

-- | Create a value of <a>GetHostResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:GetHostResponse'</a>, <a>getHostResponse_status</a> -
--   The status of the requested host.
--   
--   <a>$sel:providerEndpoint:GetHostResponse'</a>,
--   <a>getHostResponse_providerEndpoint</a> - The endpoint of the
--   infrastructure represented by the requested host.
--   
--   <a>$sel:providerType:GetHostResponse'</a>,
--   <a>getHostResponse_providerType</a> - The provider type of the
--   requested host, such as GitHub Enterprise Server.
--   
--   <a>$sel:name:GetHostResponse'</a>, <a>getHostResponse_name</a> - The
--   name of the requested host.
--   
--   <a>$sel:vpcConfiguration:GetHostResponse'</a>,
--   <a>getHostResponse_vpcConfiguration</a> - The VPC configuration of the
--   requested host.
--   
--   <a>$sel:httpStatus:GetHostResponse'</a>,
--   <a>getHostResponse_httpStatus</a> - The response's http status code.
newGetHostResponse :: Int -> GetHostResponse
newtype ConnectionStatus
ConnectionStatus' :: Text -> ConnectionStatus
[fromConnectionStatus] :: ConnectionStatus -> Text
pattern ConnectionStatus_AVAILABLE :: ConnectionStatus
pattern ConnectionStatus_ERROR :: ConnectionStatus
pattern ConnectionStatus_PENDING :: ConnectionStatus
newtype ProviderType
ProviderType' :: Text -> ProviderType
[fromProviderType] :: ProviderType -> Text
pattern ProviderType_Bitbucket :: ProviderType
pattern ProviderType_GitHub :: ProviderType
pattern ProviderType_GitHubEnterpriseServer :: ProviderType

-- | A resource that is used to connect third-party source providers with
--   services like AWS CodePipeline.
--   
--   Note: A connection created through CloudFormation, the CLI, or the SDK
--   is in `PENDING` status by default. You can make its status `AVAILABLE`
--   by updating the connection in the console.
--   
--   <i>See:</i> <a>newConnection</a> smart constructor.
data Connection
Connection' :: Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe ConnectionStatus -> Maybe Text -> Maybe Text -> Connection

-- | Create a value of <a>Connection</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:ownerAccountId:Connection'</a>,
--   <a>connection_ownerAccountId</a> - The identifier of the external
--   provider where your third-party code repository is configured. For
--   Bitbucket, this is the account ID of the owner of the Bitbucket
--   repository.
--   
--   <a>$sel:providerType:Connection'</a>, <a>connection_providerType</a> -
--   The name of the external provider where your third-party code
--   repository is configured.
--   
--   <a>$sel:connectionName:Connection'</a>,
--   <a>connection_connectionName</a> - The name of the connection.
--   Connection names must be unique in an AWS user account.
--   
--   <a>$sel:connectionStatus:Connection'</a>,
--   <a>connection_connectionStatus</a> - The current status of the
--   connection.
--   
--   <a>$sel:hostArn:Connection'</a>, <a>connection_hostArn</a> - The
--   Amazon Resource Name (ARN) of the host associated with the connection.
--   
--   <a>$sel:connectionArn:Connection'</a>, <a>connection_connectionArn</a>
--   - The Amazon Resource Name (ARN) of the connection. The ARN is used as
--   the connection reference when the connection is shared between AWS
--   services.
--   
--   The ARN is never reused if the connection is deleted.
newConnection :: Connection

-- | A resource that represents the infrastructure where a third-party
--   provider is installed. The host is used when you create connections to
--   an installed third-party provider type, such as GitHub Enterprise
--   Server. You create one host for all connections to that provider.
--   
--   A host created through the CLI or the SDK is in `PENDING` status by
--   default. You can make its status `AVAILABLE` by setting up the host in
--   the console.
--   
--   <i>See:</i> <a>newHost</a> smart constructor.
data Host
Host' :: Maybe Text -> Maybe Text -> Maybe ProviderType -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe VpcConfiguration -> Host

-- | Create a value of <a>Host</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Host'</a>, <a>host_status</a> - The status of the host,
--   such as PENDING, AVAILABLE, VPC_CONFIG_DELETING,
--   VPC_CONFIG_INITIALIZING, and VPC_CONFIG_FAILED_INITIALIZATION.
--   
--   <a>$sel:providerEndpoint:Host'</a>, <a>host_providerEndpoint</a> - The
--   endpoint of the infrastructure where your provider type is installed.
--   
--   <a>$sel:providerType:Host'</a>, <a>host_providerType</a> - The name of
--   the installed provider to be associated with your connection. The host
--   resource represents the infrastructure where your provider type is
--   installed. The valid provider type is GitHub Enterprise Server.
--   
--   <a>$sel:statusMessage:Host'</a>, <a>host_statusMessage</a> - The
--   status description for the host.
--   
--   <a>$sel:name:Host'</a>, <a>host_name</a> - The name of the host.
--   
--   <a>$sel:hostArn:Host'</a>, <a>host_hostArn</a> - The Amazon Resource
--   Name (ARN) of the host.
--   
--   <a>$sel:vpcConfiguration:Host'</a>, <a>host_vpcConfiguration</a> - The
--   VPC configuration provisioned for the host.
newHost :: Host

-- | A tag is a key-value pair that is used to manage the resource.
--   
--   This tag is available for use by AWS services that support tags.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The tag's key.
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The tag's value.
newTag :: Text -> Text -> Tag

-- | The VPC configuration provisioned for the host.
--   
--   <i>See:</i> <a>newVpcConfiguration</a> smart constructor.
data VpcConfiguration
VpcConfiguration' :: Maybe Text -> Text -> NonEmpty Text -> NonEmpty Text -> VpcConfiguration

-- | Create a value of <a>VpcConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tlsCertificate:VpcConfiguration'</a>,
--   <a>vpcConfiguration_tlsCertificate</a> - The value of the Transport
--   Layer Security (TLS) certificate associated with the infrastructure
--   where your provider type is installed.
--   
--   <a>$sel:vpcId:VpcConfiguration'</a>, <a>vpcConfiguration_vpcId</a> -
--   The ID of the Amazon VPC connected to the infrastructure where your
--   provider type is installed.
--   
--   <a>$sel:subnetIds:VpcConfiguration'</a>,
--   <a>vpcConfiguration_subnetIds</a> - The ID of the subnet or subnets
--   associated with the Amazon VPC connected to the infrastructure where
--   your provider type is installed.
--   
--   <a>$sel:securityGroupIds:VpcConfiguration'</a>,
--   <a>vpcConfiguration_securityGroupIds</a> - The ID of the security
--   group or security groups associated with the Amazon VPC connected to
--   the infrastructure where your provider type is installed.
newVpcConfiguration :: Text -> NonEmpty Text -> NonEmpty Text -> VpcConfiguration
