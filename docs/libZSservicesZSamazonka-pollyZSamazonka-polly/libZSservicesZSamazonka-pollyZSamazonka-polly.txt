-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-pollyZSamazonka-polly
@version 1.6.1


module Network.AWS.Polly.Types.Engine
newtype Engine
Engine' :: Text -> Engine
[fromEngine] :: Engine -> Text
pattern Engine_Neural :: Engine
pattern Engine_Standard :: Engine
instance Network.AWS.Data.XML.ToXML Network.AWS.Polly.Types.Engine.Engine
instance Network.AWS.Data.XML.FromXML Network.AWS.Polly.Types.Engine.Engine
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Polly.Types.Engine.Engine
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Polly.Types.Engine.Engine
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Polly.Types.Engine.Engine
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.Engine.Engine
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.Types.Engine.Engine
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Polly.Types.Engine.Engine
instance Network.AWS.Data.Log.ToLog Network.AWS.Polly.Types.Engine.Engine
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Polly.Types.Engine.Engine
instance Network.AWS.Data.Text.ToText Network.AWS.Polly.Types.Engine.Engine
instance Network.AWS.Data.Text.FromText Network.AWS.Polly.Types.Engine.Engine
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.Engine.Engine
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.Engine.Engine
instance GHC.Generics.Generic Network.AWS.Polly.Types.Engine.Engine
instance GHC.Classes.Ord Network.AWS.Polly.Types.Engine.Engine
instance GHC.Classes.Eq Network.AWS.Polly.Types.Engine.Engine
instance GHC.Read.Read Network.AWS.Polly.Types.Engine.Engine
instance GHC.Show.Show Network.AWS.Polly.Types.Engine.Engine


module Network.AWS.Polly.Types.Gender
newtype Gender
Gender' :: Text -> Gender
[fromGender] :: Gender -> Text
pattern Gender_Female :: Gender
pattern Gender_Male :: Gender
instance Network.AWS.Data.XML.ToXML Network.AWS.Polly.Types.Gender.Gender
instance Network.AWS.Data.XML.FromXML Network.AWS.Polly.Types.Gender.Gender
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Polly.Types.Gender.Gender
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Polly.Types.Gender.Gender
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Polly.Types.Gender.Gender
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.Gender.Gender
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.Types.Gender.Gender
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Polly.Types.Gender.Gender
instance Network.AWS.Data.Log.ToLog Network.AWS.Polly.Types.Gender.Gender
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Polly.Types.Gender.Gender
instance Network.AWS.Data.Text.ToText Network.AWS.Polly.Types.Gender.Gender
instance Network.AWS.Data.Text.FromText Network.AWS.Polly.Types.Gender.Gender
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.Gender.Gender
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.Gender.Gender
instance GHC.Generics.Generic Network.AWS.Polly.Types.Gender.Gender
instance GHC.Classes.Ord Network.AWS.Polly.Types.Gender.Gender
instance GHC.Classes.Eq Network.AWS.Polly.Types.Gender.Gender
instance GHC.Read.Read Network.AWS.Polly.Types.Gender.Gender
instance GHC.Show.Show Network.AWS.Polly.Types.Gender.Gender


module Network.AWS.Polly.Types.LanguageCode
newtype LanguageCode
LanguageCode' :: Text -> LanguageCode
[fromLanguageCode] :: LanguageCode -> Text
pattern LanguageCode_Arb :: LanguageCode
pattern LanguageCode_Cmn_CN :: LanguageCode
pattern LanguageCode_Cy_GB :: LanguageCode
pattern LanguageCode_Da_DK :: LanguageCode
pattern LanguageCode_De_DE :: LanguageCode
pattern LanguageCode_En_AU :: LanguageCode
pattern LanguageCode_En_GB :: LanguageCode
pattern LanguageCode_En_GB_WLS :: LanguageCode
pattern LanguageCode_En_IN :: LanguageCode
pattern LanguageCode_En_NZ :: LanguageCode
pattern LanguageCode_En_US :: LanguageCode
pattern LanguageCode_En_ZA :: LanguageCode
pattern LanguageCode_Es_ES :: LanguageCode
pattern LanguageCode_Es_MX :: LanguageCode
pattern LanguageCode_Es_US :: LanguageCode
pattern LanguageCode_Fr_CA :: LanguageCode
pattern LanguageCode_Fr_FR :: LanguageCode
pattern LanguageCode_Hi_IN :: LanguageCode
pattern LanguageCode_Is_IS :: LanguageCode
pattern LanguageCode_It_IT :: LanguageCode
pattern LanguageCode_Ja_JP :: LanguageCode
pattern LanguageCode_Ko_KR :: LanguageCode
pattern LanguageCode_Nb_NO :: LanguageCode
pattern LanguageCode_Nl_NL :: LanguageCode
pattern LanguageCode_Pl_PL :: LanguageCode
pattern LanguageCode_Pt_BR :: LanguageCode
pattern LanguageCode_Pt_PT :: LanguageCode
pattern LanguageCode_Ro_RO :: LanguageCode
pattern LanguageCode_Ru_RU :: LanguageCode
pattern LanguageCode_Sv_SE :: LanguageCode
pattern LanguageCode_Tr_TR :: LanguageCode
instance Network.AWS.Data.XML.ToXML Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Network.AWS.Data.XML.FromXML Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Network.AWS.Data.Log.ToLog Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Network.AWS.Data.Text.ToText Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Network.AWS.Data.Text.FromText Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance GHC.Generics.Generic Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance GHC.Classes.Ord Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance GHC.Classes.Eq Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance GHC.Read.Read Network.AWS.Polly.Types.LanguageCode.LanguageCode
instance GHC.Show.Show Network.AWS.Polly.Types.LanguageCode.LanguageCode


module Network.AWS.Polly.Types.Lexicon

-- | Provides lexicon name and lexicon content in string format. For more
--   information, see <a>Pronunciation Lexicon Specification (PLS) Version
--   1.0</a>.
--   
--   <i>See:</i> <a>newLexicon</a> smart constructor.
data Lexicon
Lexicon' :: Maybe Text -> Maybe (Sensitive Text) -> Lexicon

-- | Name of the lexicon.
[$sel:name:Lexicon'] :: Lexicon -> Maybe Text

-- | Lexicon content in string format. The content of a lexicon must be in
--   PLS format.
[$sel:content:Lexicon'] :: Lexicon -> Maybe (Sensitive Text)

-- | Create a value of <a>Lexicon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Lexicon'</a>, <a>lexicon_name</a> - Name of the lexicon.
--   
--   <a>$sel:content:Lexicon'</a>, <a>lexicon_content</a> - Lexicon content
--   in string format. The content of a lexicon must be in PLS format.
newLexicon :: Lexicon

-- | Name of the lexicon.
lexicon_name :: Lens' Lexicon (Maybe Text)

-- | Lexicon content in string format. The content of a lexicon must be in
--   PLS format.
lexicon_content :: Lens' Lexicon (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Polly.Types.Lexicon.Lexicon
instance GHC.Show.Show Network.AWS.Polly.Types.Lexicon.Lexicon
instance GHC.Classes.Eq Network.AWS.Polly.Types.Lexicon.Lexicon
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.Lexicon.Lexicon
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.Lexicon.Lexicon
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.Lexicon.Lexicon


module Network.AWS.Polly.Types.LexiconAttributes

-- | Contains metadata describing the lexicon such as the number of
--   lexemes, language code, and so on. For more information, see
--   <a>Managing Lexicons</a>.
--   
--   <i>See:</i> <a>newLexiconAttributes</a> smart constructor.
data LexiconAttributes
LexiconAttributes' :: Maybe LanguageCode -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe POSIX -> Maybe Int -> LexiconAttributes

-- | Language code that the lexicon applies to. A lexicon with a language
--   code such as "en" would be applied to all English languages (en-GB,
--   en-US, en-AUS, en-WLS, and so on.
[$sel:languageCode:LexiconAttributes'] :: LexiconAttributes -> Maybe LanguageCode

-- | Phonetic alphabet used in the lexicon. Valid values are <tt>ipa</tt>
--   and <tt>x-sampa</tt>.
[$sel:alphabet:LexiconAttributes'] :: LexiconAttributes -> Maybe Text

-- | Amazon Resource Name (ARN) of the lexicon.
[$sel:lexiconArn:LexiconAttributes'] :: LexiconAttributes -> Maybe Text

-- | Number of lexemes in the lexicon.
[$sel:lexemesCount:LexiconAttributes'] :: LexiconAttributes -> Maybe Int

-- | Date lexicon was last modified (a timestamp value).
[$sel:lastModified:LexiconAttributes'] :: LexiconAttributes -> Maybe POSIX

-- | Total size of the lexicon, in characters.
[$sel:size:LexiconAttributes'] :: LexiconAttributes -> Maybe Int

-- | Create a value of <a>LexiconAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:LexiconAttributes'</a>,
--   <a>lexiconAttributes_languageCode</a> - Language code that the lexicon
--   applies to. A lexicon with a language code such as "en" would be
--   applied to all English languages (en-GB, en-US, en-AUS, en-WLS, and so
--   on.
--   
--   <a>$sel:alphabet:LexiconAttributes'</a>,
--   <a>lexiconAttributes_alphabet</a> - Phonetic alphabet used in the
--   lexicon. Valid values are <tt>ipa</tt> and <tt>x-sampa</tt>.
--   
--   <a>$sel:lexiconArn:LexiconAttributes'</a>,
--   <a>lexiconAttributes_lexiconArn</a> - Amazon Resource Name (ARN) of
--   the lexicon.
--   
--   <a>$sel:lexemesCount:LexiconAttributes'</a>,
--   <a>lexiconAttributes_lexemesCount</a> - Number of lexemes in the
--   lexicon.
--   
--   <a>$sel:lastModified:LexiconAttributes'</a>,
--   <a>lexiconAttributes_lastModified</a> - Date lexicon was last modified
--   (a timestamp value).
--   
--   <a>$sel:size:LexiconAttributes'</a>, <a>lexiconAttributes_size</a> -
--   Total size of the lexicon, in characters.
newLexiconAttributes :: LexiconAttributes

-- | Language code that the lexicon applies to. A lexicon with a language
--   code such as "en" would be applied to all English languages (en-GB,
--   en-US, en-AUS, en-WLS, and so on.
lexiconAttributes_languageCode :: Lens' LexiconAttributes (Maybe LanguageCode)

-- | Phonetic alphabet used in the lexicon. Valid values are <tt>ipa</tt>
--   and <tt>x-sampa</tt>.
lexiconAttributes_alphabet :: Lens' LexiconAttributes (Maybe Text)

-- | Amazon Resource Name (ARN) of the lexicon.
lexiconAttributes_lexiconArn :: Lens' LexiconAttributes (Maybe Text)

-- | Number of lexemes in the lexicon.
lexiconAttributes_lexemesCount :: Lens' LexiconAttributes (Maybe Int)

-- | Date lexicon was last modified (a timestamp value).
lexiconAttributes_lastModified :: Lens' LexiconAttributes (Maybe UTCTime)

-- | Total size of the lexicon, in characters.
lexiconAttributes_size :: Lens' LexiconAttributes (Maybe Int)
instance GHC.Generics.Generic Network.AWS.Polly.Types.LexiconAttributes.LexiconAttributes
instance GHC.Show.Show Network.AWS.Polly.Types.LexiconAttributes.LexiconAttributes
instance GHC.Read.Read Network.AWS.Polly.Types.LexiconAttributes.LexiconAttributes
instance GHC.Classes.Eq Network.AWS.Polly.Types.LexiconAttributes.LexiconAttributes
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.LexiconAttributes.LexiconAttributes
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.LexiconAttributes.LexiconAttributes
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.LexiconAttributes.LexiconAttributes


module Network.AWS.Polly.Types.LexiconDescription

-- | Describes the content of the lexicon.
--   
--   <i>See:</i> <a>newLexiconDescription</a> smart constructor.
data LexiconDescription
LexiconDescription' :: Maybe Text -> Maybe LexiconAttributes -> LexiconDescription

-- | Name of the lexicon.
[$sel:name:LexiconDescription'] :: LexiconDescription -> Maybe Text

-- | Provides lexicon metadata.
[$sel:attributes:LexiconDescription'] :: LexiconDescription -> Maybe LexiconAttributes

-- | Create a value of <a>LexiconDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:LexiconDescription'</a>, <a>lexiconDescription_name</a> -
--   Name of the lexicon.
--   
--   <a>$sel:attributes:LexiconDescription'</a>,
--   <a>lexiconDescription_attributes</a> - Provides lexicon metadata.
newLexiconDescription :: LexiconDescription

-- | Name of the lexicon.
lexiconDescription_name :: Lens' LexiconDescription (Maybe Text)

-- | Provides lexicon metadata.
lexiconDescription_attributes :: Lens' LexiconDescription (Maybe LexiconAttributes)
instance GHC.Generics.Generic Network.AWS.Polly.Types.LexiconDescription.LexiconDescription
instance GHC.Show.Show Network.AWS.Polly.Types.LexiconDescription.LexiconDescription
instance GHC.Read.Read Network.AWS.Polly.Types.LexiconDescription.LexiconDescription
instance GHC.Classes.Eq Network.AWS.Polly.Types.LexiconDescription.LexiconDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.LexiconDescription.LexiconDescription
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.LexiconDescription.LexiconDescription
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.LexiconDescription.LexiconDescription


module Network.AWS.Polly.Types.OutputFormat
newtype OutputFormat
OutputFormat' :: Text -> OutputFormat
[fromOutputFormat] :: OutputFormat -> Text
pattern OutputFormat_Json :: OutputFormat
pattern OutputFormat_Mp3 :: OutputFormat
pattern OutputFormat_Ogg_vorbis :: OutputFormat
pattern OutputFormat_Pcm :: OutputFormat
instance Network.AWS.Data.XML.ToXML Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Network.AWS.Data.XML.FromXML Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Network.AWS.Data.Log.ToLog Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Network.AWS.Data.Text.ToText Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Network.AWS.Data.Text.FromText Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance GHC.Generics.Generic Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance GHC.Classes.Ord Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance GHC.Classes.Eq Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance GHC.Read.Read Network.AWS.Polly.Types.OutputFormat.OutputFormat
instance GHC.Show.Show Network.AWS.Polly.Types.OutputFormat.OutputFormat


module Network.AWS.Polly.Types.SpeechMarkType
newtype SpeechMarkType
SpeechMarkType' :: Text -> SpeechMarkType
[fromSpeechMarkType] :: SpeechMarkType -> Text
pattern SpeechMarkType_Sentence :: SpeechMarkType
pattern SpeechMarkType_Ssml :: SpeechMarkType
pattern SpeechMarkType_Viseme :: SpeechMarkType
pattern SpeechMarkType_Word :: SpeechMarkType
instance Network.AWS.Data.XML.ToXML Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Network.AWS.Data.XML.FromXML Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Network.AWS.Data.Log.ToLog Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Network.AWS.Data.Text.ToText Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Network.AWS.Data.Text.FromText Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance GHC.Generics.Generic Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance GHC.Classes.Ord Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance GHC.Classes.Eq Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance GHC.Read.Read Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType
instance GHC.Show.Show Network.AWS.Polly.Types.SpeechMarkType.SpeechMarkType


module Network.AWS.Polly.Types.TaskStatus
newtype TaskStatus
TaskStatus' :: Text -> TaskStatus
[fromTaskStatus] :: TaskStatus -> Text
pattern TaskStatus_Completed :: TaskStatus
pattern TaskStatus_Failed :: TaskStatus
pattern TaskStatus_InProgress :: TaskStatus
pattern TaskStatus_Scheduled :: TaskStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.Text.ToText Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Network.AWS.Data.Text.FromText Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance GHC.Generics.Generic Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance GHC.Classes.Ord Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance GHC.Classes.Eq Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance GHC.Read.Read Network.AWS.Polly.Types.TaskStatus.TaskStatus
instance GHC.Show.Show Network.AWS.Polly.Types.TaskStatus.TaskStatus


module Network.AWS.Polly.Types.TextType
newtype TextType
TextType' :: Text -> TextType
[fromTextType] :: TextType -> Text
pattern TextType_Ssml :: TextType
pattern TextType_Text :: TextType
instance Network.AWS.Data.XML.ToXML Network.AWS.Polly.Types.TextType.TextType
instance Network.AWS.Data.XML.FromXML Network.AWS.Polly.Types.TextType.TextType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Polly.Types.TextType.TextType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Polly.Types.TextType.TextType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Polly.Types.TextType.TextType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.TextType.TextType
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.Types.TextType.TextType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Polly.Types.TextType.TextType
instance Network.AWS.Data.Log.ToLog Network.AWS.Polly.Types.TextType.TextType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Polly.Types.TextType.TextType
instance Network.AWS.Data.Text.ToText Network.AWS.Polly.Types.TextType.TextType
instance Network.AWS.Data.Text.FromText Network.AWS.Polly.Types.TextType.TextType
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.TextType.TextType
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.TextType.TextType
instance GHC.Generics.Generic Network.AWS.Polly.Types.TextType.TextType
instance GHC.Classes.Ord Network.AWS.Polly.Types.TextType.TextType
instance GHC.Classes.Eq Network.AWS.Polly.Types.TextType.TextType
instance GHC.Read.Read Network.AWS.Polly.Types.TextType.TextType
instance GHC.Show.Show Network.AWS.Polly.Types.TextType.TextType


module Network.AWS.Polly.Types.VoiceId
newtype VoiceId
VoiceId' :: Text -> VoiceId
[fromVoiceId] :: VoiceId -> Text
pattern VoiceId_Aditi :: VoiceId
pattern VoiceId_Amy :: VoiceId
pattern VoiceId_Aria :: VoiceId
pattern VoiceId_Astrid :: VoiceId
pattern VoiceId_Ayanda :: VoiceId
pattern VoiceId_Bianca :: VoiceId
pattern VoiceId_Brian :: VoiceId
pattern VoiceId_Camila :: VoiceId
pattern VoiceId_Carla :: VoiceId
pattern VoiceId_Carmen :: VoiceId
pattern VoiceId_Celine :: VoiceId
pattern VoiceId_Chantal :: VoiceId
pattern VoiceId_Conchita :: VoiceId
pattern VoiceId_Cristiano :: VoiceId
pattern VoiceId_Dora :: VoiceId
pattern VoiceId_Emma :: VoiceId
pattern VoiceId_Enrique :: VoiceId
pattern VoiceId_Ewa :: VoiceId
pattern VoiceId_Filiz :: VoiceId
pattern VoiceId_Gabrielle :: VoiceId
pattern VoiceId_Geraint :: VoiceId
pattern VoiceId_Giorgio :: VoiceId
pattern VoiceId_Gwyneth :: VoiceId
pattern VoiceId_Hans :: VoiceId
pattern VoiceId_Ines :: VoiceId
pattern VoiceId_Ivy :: VoiceId
pattern VoiceId_Jacek :: VoiceId
pattern VoiceId_Jan :: VoiceId
pattern VoiceId_Joanna :: VoiceId
pattern VoiceId_Joey :: VoiceId
pattern VoiceId_Justin :: VoiceId
pattern VoiceId_Karl :: VoiceId
pattern VoiceId_Kendra :: VoiceId
pattern VoiceId_Kevin :: VoiceId
pattern VoiceId_Kimberly :: VoiceId
pattern VoiceId_Lea :: VoiceId
pattern VoiceId_Liv :: VoiceId
pattern VoiceId_Lotte :: VoiceId
pattern VoiceId_Lucia :: VoiceId
pattern VoiceId_Lupe :: VoiceId
pattern VoiceId_Mads :: VoiceId
pattern VoiceId_Maja :: VoiceId
pattern VoiceId_Marlene :: VoiceId
pattern VoiceId_Mathieu :: VoiceId
pattern VoiceId_Matthew :: VoiceId
pattern VoiceId_Maxim :: VoiceId
pattern VoiceId_Mia :: VoiceId
pattern VoiceId_Miguel :: VoiceId
pattern VoiceId_Mizuki :: VoiceId
pattern VoiceId_Naja :: VoiceId
pattern VoiceId_Nicole :: VoiceId
pattern VoiceId_Olivia :: VoiceId
pattern VoiceId_Penelope :: VoiceId
pattern VoiceId_Raveena :: VoiceId
pattern VoiceId_Ricardo :: VoiceId
pattern VoiceId_Ruben :: VoiceId
pattern VoiceId_Russell :: VoiceId
pattern VoiceId_Salli :: VoiceId
pattern VoiceId_Seoyeon :: VoiceId
pattern VoiceId_Takumi :: VoiceId
pattern VoiceId_Tatyana :: VoiceId
pattern VoiceId_Vicki :: VoiceId
pattern VoiceId_Vitoria :: VoiceId
pattern VoiceId_Zeina :: VoiceId
pattern VoiceId_Zhiyu :: VoiceId
instance Network.AWS.Data.XML.ToXML Network.AWS.Polly.Types.VoiceId.VoiceId
instance Network.AWS.Data.XML.FromXML Network.AWS.Polly.Types.VoiceId.VoiceId
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.Polly.Types.VoiceId.VoiceId
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Polly.Types.VoiceId.VoiceId
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.Polly.Types.VoiceId.VoiceId
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.VoiceId.VoiceId
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.Types.VoiceId.VoiceId
instance Network.AWS.Data.Headers.ToHeader Network.AWS.Polly.Types.VoiceId.VoiceId
instance Network.AWS.Data.Log.ToLog Network.AWS.Polly.Types.VoiceId.VoiceId
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.Polly.Types.VoiceId.VoiceId
instance Network.AWS.Data.Text.ToText Network.AWS.Polly.Types.VoiceId.VoiceId
instance Network.AWS.Data.Text.FromText Network.AWS.Polly.Types.VoiceId.VoiceId
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.VoiceId.VoiceId
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.VoiceId.VoiceId
instance GHC.Generics.Generic Network.AWS.Polly.Types.VoiceId.VoiceId
instance GHC.Classes.Ord Network.AWS.Polly.Types.VoiceId.VoiceId
instance GHC.Classes.Eq Network.AWS.Polly.Types.VoiceId.VoiceId
instance GHC.Read.Read Network.AWS.Polly.Types.VoiceId.VoiceId
instance GHC.Show.Show Network.AWS.Polly.Types.VoiceId.VoiceId


module Network.AWS.Polly.Types.Voice

-- | Description of the voice.
--   
--   <i>See:</i> <a>newVoice</a> smart constructor.
data Voice
Voice' :: Maybe LanguageCode -> Maybe VoiceId -> Maybe Text -> Maybe Gender -> Maybe [Engine] -> Maybe [LanguageCode] -> Maybe Text -> Voice

-- | Language code of the voice.
[$sel:languageCode:Voice'] :: Voice -> Maybe LanguageCode

-- | Amazon Polly assigned voice ID. This is the ID that you specify when
--   calling the <tt>SynthesizeSpeech</tt> operation.
[$sel:id:Voice'] :: Voice -> Maybe VoiceId

-- | Name of the voice (for example, Salli, Kendra, etc.). This provides a
--   human readable voice name that you might display in your application.
[$sel:name:Voice'] :: Voice -> Maybe Text

-- | Gender of the voice.
[$sel:gender:Voice'] :: Voice -> Maybe Gender

-- | Specifies which engines (<tt>standard</tt> or <tt>neural</tt>) that
--   are supported by a given voice.
[$sel:supportedEngines:Voice'] :: Voice -> Maybe [Engine]

-- | Additional codes for languages available for the specified voice in
--   addition to its default language.
--   
--   For example, the default language for Aditi is Indian English (en-IN)
--   because it was first used for that language. Since Aditi is bilingual
--   and fluent in both Indian English and Hindi, this parameter would show
--   the code <tt>hi-IN</tt>.
[$sel:additionalLanguageCodes:Voice'] :: Voice -> Maybe [LanguageCode]

-- | Human readable name of the language in English.
[$sel:languageName:Voice'] :: Voice -> Maybe Text

-- | Create a value of <a>Voice</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:Voice'</a>, <a>voice_languageCode</a> - Language
--   code of the voice.
--   
--   <a>$sel:id:Voice'</a>, <a>voice_id</a> - Amazon Polly assigned voice
--   ID. This is the ID that you specify when calling the
--   <tt>SynthesizeSpeech</tt> operation.
--   
--   <a>$sel:name:Voice'</a>, <a>voice_name</a> - Name of the voice (for
--   example, Salli, Kendra, etc.). This provides a human readable voice
--   name that you might display in your application.
--   
--   <a>$sel:gender:Voice'</a>, <a>voice_gender</a> - Gender of the voice.
--   
--   <a>$sel:supportedEngines:Voice'</a>, <a>voice_supportedEngines</a> -
--   Specifies which engines (<tt>standard</tt> or <tt>neural</tt>) that
--   are supported by a given voice.
--   
--   <a>$sel:additionalLanguageCodes:Voice'</a>,
--   <a>voice_additionalLanguageCodes</a> - Additional codes for languages
--   available for the specified voice in addition to its default language.
--   
--   For example, the default language for Aditi is Indian English (en-IN)
--   because it was first used for that language. Since Aditi is bilingual
--   and fluent in both Indian English and Hindi, this parameter would show
--   the code <tt>hi-IN</tt>.
--   
--   <a>$sel:languageName:Voice'</a>, <a>voice_languageName</a> - Human
--   readable name of the language in English.
newVoice :: Voice

-- | Language code of the voice.
voice_languageCode :: Lens' Voice (Maybe LanguageCode)

-- | Amazon Polly assigned voice ID. This is the ID that you specify when
--   calling the <tt>SynthesizeSpeech</tt> operation.
voice_id :: Lens' Voice (Maybe VoiceId)

-- | Name of the voice (for example, Salli, Kendra, etc.). This provides a
--   human readable voice name that you might display in your application.
voice_name :: Lens' Voice (Maybe Text)

-- | Gender of the voice.
voice_gender :: Lens' Voice (Maybe Gender)

-- | Specifies which engines (<tt>standard</tt> or <tt>neural</tt>) that
--   are supported by a given voice.
voice_supportedEngines :: Lens' Voice (Maybe [Engine])

-- | Additional codes for languages available for the specified voice in
--   addition to its default language.
--   
--   For example, the default language for Aditi is Indian English (en-IN)
--   because it was first used for that language. Since Aditi is bilingual
--   and fluent in both Indian English and Hindi, this parameter would show
--   the code <tt>hi-IN</tt>.
voice_additionalLanguageCodes :: Lens' Voice (Maybe [LanguageCode])

-- | Human readable name of the language in English.
voice_languageName :: Lens' Voice (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Polly.Types.Voice.Voice
instance GHC.Show.Show Network.AWS.Polly.Types.Voice.Voice
instance GHC.Read.Read Network.AWS.Polly.Types.Voice.Voice
instance GHC.Classes.Eq Network.AWS.Polly.Types.Voice.Voice
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.Voice.Voice
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.Voice.Voice
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.Voice.Voice


module Network.AWS.Polly.Types.SynthesisTask

-- | SynthesisTask object that provides information about a speech
--   synthesis task.
--   
--   <i>See:</i> <a>newSynthesisTask</a> smart constructor.
data SynthesisTask
SynthesisTask' :: Maybe LanguageCode -> Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe [SpeechMarkType] -> Maybe VoiceId -> Maybe Text -> Maybe TextType -> Maybe OutputFormat -> Maybe Text -> Maybe TaskStatus -> Maybe Engine -> Maybe Int -> Maybe Text -> Maybe Text -> SynthesisTask

-- | Optional language code for a synthesis task. This is only necessary if
--   using a bilingual voice, such as Aditi, which can be used for either
--   Indian English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
[$sel:languageCode:SynthesisTask'] :: SynthesisTask -> Maybe LanguageCode

-- | Timestamp for the time the synthesis task was started.
[$sel:creationTime:SynthesisTask'] :: SynthesisTask -> Maybe POSIX

-- | Pathway for the output speech file.
[$sel:outputUri:SynthesisTask'] :: SynthesisTask -> Maybe Text

-- | List of one or more pronunciation lexicon names you want the service
--   to apply during synthesis. Lexicons are applied only if the language
--   of the lexicon is the same as the language of the voice.
[$sel:lexiconNames:SynthesisTask'] :: SynthesisTask -> Maybe [Text]

-- | The type of speech marks returned for the input text.
[$sel:speechMarkTypes:SynthesisTask'] :: SynthesisTask -> Maybe [SpeechMarkType]

-- | Voice ID to use for the synthesis.
[$sel:voiceId:SynthesisTask'] :: SynthesisTask -> Maybe VoiceId

-- | The Amazon Polly generated identifier for a speech synthesis task.
[$sel:taskId:SynthesisTask'] :: SynthesisTask -> Maybe Text

-- | Specifies whether the input text is plain text or SSML. The default
--   value is plain text.
[$sel:textType:SynthesisTask'] :: SynthesisTask -> Maybe TextType

-- | The format in which the returned output will be encoded. For audio
--   stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this
--   will be json.
[$sel:outputFormat:SynthesisTask'] :: SynthesisTask -> Maybe OutputFormat

-- | The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
[$sel:sampleRate:SynthesisTask'] :: SynthesisTask -> Maybe Text

-- | Current status of the individual speech synthesis task.
[$sel:taskStatus:SynthesisTask'] :: SynthesisTask -> Maybe TaskStatus

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. Using a
--   voice that is not supported for the engine selected will result in an
--   error.
[$sel:engine:SynthesisTask'] :: SynthesisTask -> Maybe Engine

-- | Number of billable characters synthesized.
[$sel:requestCharacters:SynthesisTask'] :: SynthesisTask -> Maybe Int

-- | Reason for the current status of a specific speech synthesis task,
--   including errors if the task has failed.
[$sel:taskStatusReason:SynthesisTask'] :: SynthesisTask -> Maybe Text

-- | ARN for the SNS topic optionally used for providing status
--   notification for a speech synthesis task.
[$sel:snsTopicArn:SynthesisTask'] :: SynthesisTask -> Maybe Text

-- | Create a value of <a>SynthesisTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:SynthesisTask'</a>,
--   <a>synthesisTask_languageCode</a> - Optional language code for a
--   synthesis task. This is only necessary if using a bilingual voice,
--   such as Aditi, which can be used for either Indian English (en-IN) or
--   Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
--   
--   <a>$sel:creationTime:SynthesisTask'</a>,
--   <a>synthesisTask_creationTime</a> - Timestamp for the time the
--   synthesis task was started.
--   
--   <a>$sel:outputUri:SynthesisTask'</a>, <a>synthesisTask_outputUri</a> -
--   Pathway for the output speech file.
--   
--   <a>$sel:lexiconNames:SynthesisTask'</a>,
--   <a>synthesisTask_lexiconNames</a> - List of one or more pronunciation
--   lexicon names you want the service to apply during synthesis. Lexicons
--   are applied only if the language of the lexicon is the same as the
--   language of the voice.
--   
--   <a>$sel:speechMarkTypes:SynthesisTask'</a>,
--   <a>synthesisTask_speechMarkTypes</a> - The type of speech marks
--   returned for the input text.
--   
--   <a>$sel:voiceId:SynthesisTask'</a>, <a>synthesisTask_voiceId</a> -
--   Voice ID to use for the synthesis.
--   
--   <a>$sel:taskId:SynthesisTask'</a>, <a>synthesisTask_taskId</a> - The
--   Amazon Polly generated identifier for a speech synthesis task.
--   
--   <a>$sel:textType:SynthesisTask'</a>, <a>synthesisTask_textType</a> -
--   Specifies whether the input text is plain text or SSML. The default
--   value is plain text.
--   
--   <a>$sel:outputFormat:SynthesisTask'</a>,
--   <a>synthesisTask_outputFormat</a> - The format in which the returned
--   output will be encoded. For audio stream, this will be mp3,
--   ogg_vorbis, or pcm. For speech marks, this will be json.
--   
--   <a>$sel:sampleRate:SynthesisTask'</a>, <a>synthesisTask_sampleRate</a>
--   - The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
--   
--   <a>$sel:taskStatus:SynthesisTask'</a>, <a>synthesisTask_taskStatus</a>
--   - Current status of the individual speech synthesis task.
--   
--   <a>$sel:engine:SynthesisTask'</a>, <a>synthesisTask_engine</a> -
--   Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. Using a
--   voice that is not supported for the engine selected will result in an
--   error.
--   
--   <a>$sel:requestCharacters:SynthesisTask'</a>,
--   <a>synthesisTask_requestCharacters</a> - Number of billable characters
--   synthesized.
--   
--   <a>$sel:taskStatusReason:SynthesisTask'</a>,
--   <a>synthesisTask_taskStatusReason</a> - Reason for the current status
--   of a specific speech synthesis task, including errors if the task has
--   failed.
--   
--   <a>$sel:snsTopicArn:SynthesisTask'</a>,
--   <a>synthesisTask_snsTopicArn</a> - ARN for the SNS topic optionally
--   used for providing status notification for a speech synthesis task.
newSynthesisTask :: SynthesisTask

-- | Optional language code for a synthesis task. This is only necessary if
--   using a bilingual voice, such as Aditi, which can be used for either
--   Indian English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
synthesisTask_languageCode :: Lens' SynthesisTask (Maybe LanguageCode)

-- | Timestamp for the time the synthesis task was started.
synthesisTask_creationTime :: Lens' SynthesisTask (Maybe UTCTime)

-- | Pathway for the output speech file.
synthesisTask_outputUri :: Lens' SynthesisTask (Maybe Text)

-- | List of one or more pronunciation lexicon names you want the service
--   to apply during synthesis. Lexicons are applied only if the language
--   of the lexicon is the same as the language of the voice.
synthesisTask_lexiconNames :: Lens' SynthesisTask (Maybe [Text])

-- | The type of speech marks returned for the input text.
synthesisTask_speechMarkTypes :: Lens' SynthesisTask (Maybe [SpeechMarkType])

-- | Voice ID to use for the synthesis.
synthesisTask_voiceId :: Lens' SynthesisTask (Maybe VoiceId)

-- | The Amazon Polly generated identifier for a speech synthesis task.
synthesisTask_taskId :: Lens' SynthesisTask (Maybe Text)

-- | Specifies whether the input text is plain text or SSML. The default
--   value is plain text.
synthesisTask_textType :: Lens' SynthesisTask (Maybe TextType)

-- | The format in which the returned output will be encoded. For audio
--   stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this
--   will be json.
synthesisTask_outputFormat :: Lens' SynthesisTask (Maybe OutputFormat)

-- | The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
synthesisTask_sampleRate :: Lens' SynthesisTask (Maybe Text)

-- | Current status of the individual speech synthesis task.
synthesisTask_taskStatus :: Lens' SynthesisTask (Maybe TaskStatus)

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. Using a
--   voice that is not supported for the engine selected will result in an
--   error.
synthesisTask_engine :: Lens' SynthesisTask (Maybe Engine)

-- | Number of billable characters synthesized.
synthesisTask_requestCharacters :: Lens' SynthesisTask (Maybe Int)

-- | Reason for the current status of a specific speech synthesis task,
--   including errors if the task has failed.
synthesisTask_taskStatusReason :: Lens' SynthesisTask (Maybe Text)

-- | ARN for the SNS topic optionally used for providing status
--   notification for a speech synthesis task.
synthesisTask_snsTopicArn :: Lens' SynthesisTask (Maybe Text)
instance GHC.Generics.Generic Network.AWS.Polly.Types.SynthesisTask.SynthesisTask
instance GHC.Show.Show Network.AWS.Polly.Types.SynthesisTask.SynthesisTask
instance GHC.Read.Read Network.AWS.Polly.Types.SynthesisTask.SynthesisTask
instance GHC.Classes.Eq Network.AWS.Polly.Types.SynthesisTask.SynthesisTask
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.Polly.Types.SynthesisTask.SynthesisTask
instance Data.Hashable.Class.Hashable Network.AWS.Polly.Types.SynthesisTask.SynthesisTask
instance Control.DeepSeq.NFData Network.AWS.Polly.Types.SynthesisTask.SynthesisTask


module Network.AWS.Polly.Types

-- | API version <tt>2016-06-10</tt> of the Amazon Polly SDK configuration.
defaultService :: Service

-- | The SSML you provided is invalid. Verify the SSML syntax, spelling of
--   tags and values, and then try again.
_InvalidSsmlException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Polly can't find the specified lexicon. Verify that the
--   lexicon's name is spelled correctly, and then try again.
_InvalidLexiconException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided Amazon S3 key prefix is invalid. Please provide a valid
--   S3 object key name.
_InvalidS3KeyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Polly can't find the specified lexicon. This could be caused by
--   a lexicon that is missing, its name is misspelled or specifying a
--   lexicon that is in a different region.
--   
--   Verify that the lexicon exists, is in the region (see ListLexicons)
--   and that you spelled its name is spelled correctly. Then try again.
_LexiconNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum size of the lexeme would be exceeded by this operation.
_MaxLexemeLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value of the "Text" parameter is longer than the accepted limits.
--   For the <tt>SynthesizeSpeech</tt> API, the limit for input text is a
--   maximum of 6000 characters total, of which no more than 3000 can be
--   billed characters. For the <tt>StartSpeechSynthesisTask</tt> API, the
--   maximum is 200,000 characters, of which no more than 100,000 can be
--   billed characters. SSML tags are not counted as billed characters.
_TextLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Speech Synthesis task with requested Task ID cannot be found.
_SynthesisTaskNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified sample rate is not valid.
_InvalidSampleRateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An unknown condition has caused a service failure.
_ServiceFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Speech marks are not supported for the <tt>OutputFormat</tt> selected.
--   Speech marks are only available for content in <tt>json</tt> format.
_MarksNotSupportedForFormatException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of lexicons would be exceeded by this operation.
_MaxLexiconsNumberExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The alphabet specified by the lexicon is not a supported alphabet.
--   Valid values are <tt>x-sampa</tt> and <tt>ipa</tt>.
_UnsupportedPlsAlphabetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The NextToken is invalid. Verify that it's spelled correctly, and then
--   try again.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The language specified in the lexicon is unsupported. For a list of
--   supported languages, see <a>Lexicon Attributes</a>.
_UnsupportedPlsLanguageException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided SNS topic ARN is invalid. Please provide a valid SNS
--   topic ARN and try again.
_InvalidSnsTopicArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided Task ID is not valid. Please provide a valid Task ID and
--   try again.
_InvalidTaskIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The language specified is not currently supported by Amazon Polly in
--   this capacity.
_LanguageNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum size of the specified lexicon would be exceeded by this
--   operation.
_LexiconSizeExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided Amazon S3 bucket name is invalid. Please check your input
--   with S3 bucket naming requirements and try again.
_InvalidS3BucketException :: AsError a => Getting (First ServiceError) a ServiceError

-- | SSML speech marks are not supported for plain text-type input.
_SsmlMarksNotSupportedForTextTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This engine is not compatible with the voice that you have designated.
--   Choose a new voice that is compatible with the engine or change the
--   engine and restart the operation.
_EngineNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError
newtype Engine
Engine' :: Text -> Engine
[fromEngine] :: Engine -> Text
pattern Engine_Neural :: Engine
pattern Engine_Standard :: Engine
newtype Gender
Gender' :: Text -> Gender
[fromGender] :: Gender -> Text
pattern Gender_Female :: Gender
pattern Gender_Male :: Gender
newtype LanguageCode
LanguageCode' :: Text -> LanguageCode
[fromLanguageCode] :: LanguageCode -> Text
pattern LanguageCode_Arb :: LanguageCode
pattern LanguageCode_Cmn_CN :: LanguageCode
pattern LanguageCode_Cy_GB :: LanguageCode
pattern LanguageCode_Da_DK :: LanguageCode
pattern LanguageCode_De_DE :: LanguageCode
pattern LanguageCode_En_AU :: LanguageCode
pattern LanguageCode_En_GB :: LanguageCode
pattern LanguageCode_En_GB_WLS :: LanguageCode
pattern LanguageCode_En_IN :: LanguageCode
pattern LanguageCode_En_NZ :: LanguageCode
pattern LanguageCode_En_US :: LanguageCode
pattern LanguageCode_En_ZA :: LanguageCode
pattern LanguageCode_Es_ES :: LanguageCode
pattern LanguageCode_Es_MX :: LanguageCode
pattern LanguageCode_Es_US :: LanguageCode
pattern LanguageCode_Fr_CA :: LanguageCode
pattern LanguageCode_Fr_FR :: LanguageCode
pattern LanguageCode_Hi_IN :: LanguageCode
pattern LanguageCode_Is_IS :: LanguageCode
pattern LanguageCode_It_IT :: LanguageCode
pattern LanguageCode_Ja_JP :: LanguageCode
pattern LanguageCode_Ko_KR :: LanguageCode
pattern LanguageCode_Nb_NO :: LanguageCode
pattern LanguageCode_Nl_NL :: LanguageCode
pattern LanguageCode_Pl_PL :: LanguageCode
pattern LanguageCode_Pt_BR :: LanguageCode
pattern LanguageCode_Pt_PT :: LanguageCode
pattern LanguageCode_Ro_RO :: LanguageCode
pattern LanguageCode_Ru_RU :: LanguageCode
pattern LanguageCode_Sv_SE :: LanguageCode
pattern LanguageCode_Tr_TR :: LanguageCode
newtype OutputFormat
OutputFormat' :: Text -> OutputFormat
[fromOutputFormat] :: OutputFormat -> Text
pattern OutputFormat_Json :: OutputFormat
pattern OutputFormat_Mp3 :: OutputFormat
pattern OutputFormat_Ogg_vorbis :: OutputFormat
pattern OutputFormat_Pcm :: OutputFormat
newtype SpeechMarkType
SpeechMarkType' :: Text -> SpeechMarkType
[fromSpeechMarkType] :: SpeechMarkType -> Text
pattern SpeechMarkType_Sentence :: SpeechMarkType
pattern SpeechMarkType_Ssml :: SpeechMarkType
pattern SpeechMarkType_Viseme :: SpeechMarkType
pattern SpeechMarkType_Word :: SpeechMarkType
newtype TaskStatus
TaskStatus' :: Text -> TaskStatus
[fromTaskStatus] :: TaskStatus -> Text
pattern TaskStatus_Completed :: TaskStatus
pattern TaskStatus_Failed :: TaskStatus
pattern TaskStatus_InProgress :: TaskStatus
pattern TaskStatus_Scheduled :: TaskStatus
newtype TextType
TextType' :: Text -> TextType
[fromTextType] :: TextType -> Text
pattern TextType_Ssml :: TextType
pattern TextType_Text :: TextType
newtype VoiceId
VoiceId' :: Text -> VoiceId
[fromVoiceId] :: VoiceId -> Text
pattern VoiceId_Aditi :: VoiceId
pattern VoiceId_Amy :: VoiceId
pattern VoiceId_Aria :: VoiceId
pattern VoiceId_Astrid :: VoiceId
pattern VoiceId_Ayanda :: VoiceId
pattern VoiceId_Bianca :: VoiceId
pattern VoiceId_Brian :: VoiceId
pattern VoiceId_Camila :: VoiceId
pattern VoiceId_Carla :: VoiceId
pattern VoiceId_Carmen :: VoiceId
pattern VoiceId_Celine :: VoiceId
pattern VoiceId_Chantal :: VoiceId
pattern VoiceId_Conchita :: VoiceId
pattern VoiceId_Cristiano :: VoiceId
pattern VoiceId_Dora :: VoiceId
pattern VoiceId_Emma :: VoiceId
pattern VoiceId_Enrique :: VoiceId
pattern VoiceId_Ewa :: VoiceId
pattern VoiceId_Filiz :: VoiceId
pattern VoiceId_Gabrielle :: VoiceId
pattern VoiceId_Geraint :: VoiceId
pattern VoiceId_Giorgio :: VoiceId
pattern VoiceId_Gwyneth :: VoiceId
pattern VoiceId_Hans :: VoiceId
pattern VoiceId_Ines :: VoiceId
pattern VoiceId_Ivy :: VoiceId
pattern VoiceId_Jacek :: VoiceId
pattern VoiceId_Jan :: VoiceId
pattern VoiceId_Joanna :: VoiceId
pattern VoiceId_Joey :: VoiceId
pattern VoiceId_Justin :: VoiceId
pattern VoiceId_Karl :: VoiceId
pattern VoiceId_Kendra :: VoiceId
pattern VoiceId_Kevin :: VoiceId
pattern VoiceId_Kimberly :: VoiceId
pattern VoiceId_Lea :: VoiceId
pattern VoiceId_Liv :: VoiceId
pattern VoiceId_Lotte :: VoiceId
pattern VoiceId_Lucia :: VoiceId
pattern VoiceId_Lupe :: VoiceId
pattern VoiceId_Mads :: VoiceId
pattern VoiceId_Maja :: VoiceId
pattern VoiceId_Marlene :: VoiceId
pattern VoiceId_Mathieu :: VoiceId
pattern VoiceId_Matthew :: VoiceId
pattern VoiceId_Maxim :: VoiceId
pattern VoiceId_Mia :: VoiceId
pattern VoiceId_Miguel :: VoiceId
pattern VoiceId_Mizuki :: VoiceId
pattern VoiceId_Naja :: VoiceId
pattern VoiceId_Nicole :: VoiceId
pattern VoiceId_Olivia :: VoiceId
pattern VoiceId_Penelope :: VoiceId
pattern VoiceId_Raveena :: VoiceId
pattern VoiceId_Ricardo :: VoiceId
pattern VoiceId_Ruben :: VoiceId
pattern VoiceId_Russell :: VoiceId
pattern VoiceId_Salli :: VoiceId
pattern VoiceId_Seoyeon :: VoiceId
pattern VoiceId_Takumi :: VoiceId
pattern VoiceId_Tatyana :: VoiceId
pattern VoiceId_Vicki :: VoiceId
pattern VoiceId_Vitoria :: VoiceId
pattern VoiceId_Zeina :: VoiceId
pattern VoiceId_Zhiyu :: VoiceId

-- | Provides lexicon name and lexicon content in string format. For more
--   information, see <a>Pronunciation Lexicon Specification (PLS) Version
--   1.0</a>.
--   
--   <i>See:</i> <a>newLexicon</a> smart constructor.
data Lexicon
Lexicon' :: Maybe Text -> Maybe (Sensitive Text) -> Lexicon

-- | Name of the lexicon.
[$sel:name:Lexicon'] :: Lexicon -> Maybe Text

-- | Lexicon content in string format. The content of a lexicon must be in
--   PLS format.
[$sel:content:Lexicon'] :: Lexicon -> Maybe (Sensitive Text)

-- | Create a value of <a>Lexicon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Lexicon'</a>, <a>lexicon_name</a> - Name of the lexicon.
--   
--   <a>$sel:content:Lexicon'</a>, <a>lexicon_content</a> - Lexicon content
--   in string format. The content of a lexicon must be in PLS format.
newLexicon :: Lexicon

-- | Name of the lexicon.
lexicon_name :: Lens' Lexicon (Maybe Text)

-- | Lexicon content in string format. The content of a lexicon must be in
--   PLS format.
lexicon_content :: Lens' Lexicon (Maybe Text)

-- | Contains metadata describing the lexicon such as the number of
--   lexemes, language code, and so on. For more information, see
--   <a>Managing Lexicons</a>.
--   
--   <i>See:</i> <a>newLexiconAttributes</a> smart constructor.
data LexiconAttributes
LexiconAttributes' :: Maybe LanguageCode -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe POSIX -> Maybe Int -> LexiconAttributes

-- | Language code that the lexicon applies to. A lexicon with a language
--   code such as "en" would be applied to all English languages (en-GB,
--   en-US, en-AUS, en-WLS, and so on.
[$sel:languageCode:LexiconAttributes'] :: LexiconAttributes -> Maybe LanguageCode

-- | Phonetic alphabet used in the lexicon. Valid values are <tt>ipa</tt>
--   and <tt>x-sampa</tt>.
[$sel:alphabet:LexiconAttributes'] :: LexiconAttributes -> Maybe Text

-- | Amazon Resource Name (ARN) of the lexicon.
[$sel:lexiconArn:LexiconAttributes'] :: LexiconAttributes -> Maybe Text

-- | Number of lexemes in the lexicon.
[$sel:lexemesCount:LexiconAttributes'] :: LexiconAttributes -> Maybe Int

-- | Date lexicon was last modified (a timestamp value).
[$sel:lastModified:LexiconAttributes'] :: LexiconAttributes -> Maybe POSIX

-- | Total size of the lexicon, in characters.
[$sel:size:LexiconAttributes'] :: LexiconAttributes -> Maybe Int

-- | Create a value of <a>LexiconAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:LexiconAttributes'</a>,
--   <a>lexiconAttributes_languageCode</a> - Language code that the lexicon
--   applies to. A lexicon with a language code such as "en" would be
--   applied to all English languages (en-GB, en-US, en-AUS, en-WLS, and so
--   on.
--   
--   <a>$sel:alphabet:LexiconAttributes'</a>,
--   <a>lexiconAttributes_alphabet</a> - Phonetic alphabet used in the
--   lexicon. Valid values are <tt>ipa</tt> and <tt>x-sampa</tt>.
--   
--   <a>$sel:lexiconArn:LexiconAttributes'</a>,
--   <a>lexiconAttributes_lexiconArn</a> - Amazon Resource Name (ARN) of
--   the lexicon.
--   
--   <a>$sel:lexemesCount:LexiconAttributes'</a>,
--   <a>lexiconAttributes_lexemesCount</a> - Number of lexemes in the
--   lexicon.
--   
--   <a>$sel:lastModified:LexiconAttributes'</a>,
--   <a>lexiconAttributes_lastModified</a> - Date lexicon was last modified
--   (a timestamp value).
--   
--   <a>$sel:size:LexiconAttributes'</a>, <a>lexiconAttributes_size</a> -
--   Total size of the lexicon, in characters.
newLexiconAttributes :: LexiconAttributes

-- | Language code that the lexicon applies to. A lexicon with a language
--   code such as "en" would be applied to all English languages (en-GB,
--   en-US, en-AUS, en-WLS, and so on.
lexiconAttributes_languageCode :: Lens' LexiconAttributes (Maybe LanguageCode)

-- | Phonetic alphabet used in the lexicon. Valid values are <tt>ipa</tt>
--   and <tt>x-sampa</tt>.
lexiconAttributes_alphabet :: Lens' LexiconAttributes (Maybe Text)

-- | Amazon Resource Name (ARN) of the lexicon.
lexiconAttributes_lexiconArn :: Lens' LexiconAttributes (Maybe Text)

-- | Number of lexemes in the lexicon.
lexiconAttributes_lexemesCount :: Lens' LexiconAttributes (Maybe Int)

-- | Date lexicon was last modified (a timestamp value).
lexiconAttributes_lastModified :: Lens' LexiconAttributes (Maybe UTCTime)

-- | Total size of the lexicon, in characters.
lexiconAttributes_size :: Lens' LexiconAttributes (Maybe Int)

-- | Describes the content of the lexicon.
--   
--   <i>See:</i> <a>newLexiconDescription</a> smart constructor.
data LexiconDescription
LexiconDescription' :: Maybe Text -> Maybe LexiconAttributes -> LexiconDescription

-- | Name of the lexicon.
[$sel:name:LexiconDescription'] :: LexiconDescription -> Maybe Text

-- | Provides lexicon metadata.
[$sel:attributes:LexiconDescription'] :: LexiconDescription -> Maybe LexiconAttributes

-- | Create a value of <a>LexiconDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:LexiconDescription'</a>, <a>lexiconDescription_name</a> -
--   Name of the lexicon.
--   
--   <a>$sel:attributes:LexiconDescription'</a>,
--   <a>lexiconDescription_attributes</a> - Provides lexicon metadata.
newLexiconDescription :: LexiconDescription

-- | Name of the lexicon.
lexiconDescription_name :: Lens' LexiconDescription (Maybe Text)

-- | Provides lexicon metadata.
lexiconDescription_attributes :: Lens' LexiconDescription (Maybe LexiconAttributes)

-- | SynthesisTask object that provides information about a speech
--   synthesis task.
--   
--   <i>See:</i> <a>newSynthesisTask</a> smart constructor.
data SynthesisTask
SynthesisTask' :: Maybe LanguageCode -> Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe [SpeechMarkType] -> Maybe VoiceId -> Maybe Text -> Maybe TextType -> Maybe OutputFormat -> Maybe Text -> Maybe TaskStatus -> Maybe Engine -> Maybe Int -> Maybe Text -> Maybe Text -> SynthesisTask

-- | Optional language code for a synthesis task. This is only necessary if
--   using a bilingual voice, such as Aditi, which can be used for either
--   Indian English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
[$sel:languageCode:SynthesisTask'] :: SynthesisTask -> Maybe LanguageCode

-- | Timestamp for the time the synthesis task was started.
[$sel:creationTime:SynthesisTask'] :: SynthesisTask -> Maybe POSIX

-- | Pathway for the output speech file.
[$sel:outputUri:SynthesisTask'] :: SynthesisTask -> Maybe Text

-- | List of one or more pronunciation lexicon names you want the service
--   to apply during synthesis. Lexicons are applied only if the language
--   of the lexicon is the same as the language of the voice.
[$sel:lexiconNames:SynthesisTask'] :: SynthesisTask -> Maybe [Text]

-- | The type of speech marks returned for the input text.
[$sel:speechMarkTypes:SynthesisTask'] :: SynthesisTask -> Maybe [SpeechMarkType]

-- | Voice ID to use for the synthesis.
[$sel:voiceId:SynthesisTask'] :: SynthesisTask -> Maybe VoiceId

-- | The Amazon Polly generated identifier for a speech synthesis task.
[$sel:taskId:SynthesisTask'] :: SynthesisTask -> Maybe Text

-- | Specifies whether the input text is plain text or SSML. The default
--   value is plain text.
[$sel:textType:SynthesisTask'] :: SynthesisTask -> Maybe TextType

-- | The format in which the returned output will be encoded. For audio
--   stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this
--   will be json.
[$sel:outputFormat:SynthesisTask'] :: SynthesisTask -> Maybe OutputFormat

-- | The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
[$sel:sampleRate:SynthesisTask'] :: SynthesisTask -> Maybe Text

-- | Current status of the individual speech synthesis task.
[$sel:taskStatus:SynthesisTask'] :: SynthesisTask -> Maybe TaskStatus

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. Using a
--   voice that is not supported for the engine selected will result in an
--   error.
[$sel:engine:SynthesisTask'] :: SynthesisTask -> Maybe Engine

-- | Number of billable characters synthesized.
[$sel:requestCharacters:SynthesisTask'] :: SynthesisTask -> Maybe Int

-- | Reason for the current status of a specific speech synthesis task,
--   including errors if the task has failed.
[$sel:taskStatusReason:SynthesisTask'] :: SynthesisTask -> Maybe Text

-- | ARN for the SNS topic optionally used for providing status
--   notification for a speech synthesis task.
[$sel:snsTopicArn:SynthesisTask'] :: SynthesisTask -> Maybe Text

-- | Create a value of <a>SynthesisTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:SynthesisTask'</a>,
--   <a>synthesisTask_languageCode</a> - Optional language code for a
--   synthesis task. This is only necessary if using a bilingual voice,
--   such as Aditi, which can be used for either Indian English (en-IN) or
--   Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
--   
--   <a>$sel:creationTime:SynthesisTask'</a>,
--   <a>synthesisTask_creationTime</a> - Timestamp for the time the
--   synthesis task was started.
--   
--   <a>$sel:outputUri:SynthesisTask'</a>, <a>synthesisTask_outputUri</a> -
--   Pathway for the output speech file.
--   
--   <a>$sel:lexiconNames:SynthesisTask'</a>,
--   <a>synthesisTask_lexiconNames</a> - List of one or more pronunciation
--   lexicon names you want the service to apply during synthesis. Lexicons
--   are applied only if the language of the lexicon is the same as the
--   language of the voice.
--   
--   <a>$sel:speechMarkTypes:SynthesisTask'</a>,
--   <a>synthesisTask_speechMarkTypes</a> - The type of speech marks
--   returned for the input text.
--   
--   <a>$sel:voiceId:SynthesisTask'</a>, <a>synthesisTask_voiceId</a> -
--   Voice ID to use for the synthesis.
--   
--   <a>$sel:taskId:SynthesisTask'</a>, <a>synthesisTask_taskId</a> - The
--   Amazon Polly generated identifier for a speech synthesis task.
--   
--   <a>$sel:textType:SynthesisTask'</a>, <a>synthesisTask_textType</a> -
--   Specifies whether the input text is plain text or SSML. The default
--   value is plain text.
--   
--   <a>$sel:outputFormat:SynthesisTask'</a>,
--   <a>synthesisTask_outputFormat</a> - The format in which the returned
--   output will be encoded. For audio stream, this will be mp3,
--   ogg_vorbis, or pcm. For speech marks, this will be json.
--   
--   <a>$sel:sampleRate:SynthesisTask'</a>, <a>synthesisTask_sampleRate</a>
--   - The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
--   
--   <a>$sel:taskStatus:SynthesisTask'</a>, <a>synthesisTask_taskStatus</a>
--   - Current status of the individual speech synthesis task.
--   
--   <a>$sel:engine:SynthesisTask'</a>, <a>synthesisTask_engine</a> -
--   Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. Using a
--   voice that is not supported for the engine selected will result in an
--   error.
--   
--   <a>$sel:requestCharacters:SynthesisTask'</a>,
--   <a>synthesisTask_requestCharacters</a> - Number of billable characters
--   synthesized.
--   
--   <a>$sel:taskStatusReason:SynthesisTask'</a>,
--   <a>synthesisTask_taskStatusReason</a> - Reason for the current status
--   of a specific speech synthesis task, including errors if the task has
--   failed.
--   
--   <a>$sel:snsTopicArn:SynthesisTask'</a>,
--   <a>synthesisTask_snsTopicArn</a> - ARN for the SNS topic optionally
--   used for providing status notification for a speech synthesis task.
newSynthesisTask :: SynthesisTask

-- | Optional language code for a synthesis task. This is only necessary if
--   using a bilingual voice, such as Aditi, which can be used for either
--   Indian English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
synthesisTask_languageCode :: Lens' SynthesisTask (Maybe LanguageCode)

-- | Timestamp for the time the synthesis task was started.
synthesisTask_creationTime :: Lens' SynthesisTask (Maybe UTCTime)

-- | Pathway for the output speech file.
synthesisTask_outputUri :: Lens' SynthesisTask (Maybe Text)

-- | List of one or more pronunciation lexicon names you want the service
--   to apply during synthesis. Lexicons are applied only if the language
--   of the lexicon is the same as the language of the voice.
synthesisTask_lexiconNames :: Lens' SynthesisTask (Maybe [Text])

-- | The type of speech marks returned for the input text.
synthesisTask_speechMarkTypes :: Lens' SynthesisTask (Maybe [SpeechMarkType])

-- | Voice ID to use for the synthesis.
synthesisTask_voiceId :: Lens' SynthesisTask (Maybe VoiceId)

-- | The Amazon Polly generated identifier for a speech synthesis task.
synthesisTask_taskId :: Lens' SynthesisTask (Maybe Text)

-- | Specifies whether the input text is plain text or SSML. The default
--   value is plain text.
synthesisTask_textType :: Lens' SynthesisTask (Maybe TextType)

-- | The format in which the returned output will be encoded. For audio
--   stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this
--   will be json.
synthesisTask_outputFormat :: Lens' SynthesisTask (Maybe OutputFormat)

-- | The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
synthesisTask_sampleRate :: Lens' SynthesisTask (Maybe Text)

-- | Current status of the individual speech synthesis task.
synthesisTask_taskStatus :: Lens' SynthesisTask (Maybe TaskStatus)

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. Using a
--   voice that is not supported for the engine selected will result in an
--   error.
synthesisTask_engine :: Lens' SynthesisTask (Maybe Engine)

-- | Number of billable characters synthesized.
synthesisTask_requestCharacters :: Lens' SynthesisTask (Maybe Int)

-- | Reason for the current status of a specific speech synthesis task,
--   including errors if the task has failed.
synthesisTask_taskStatusReason :: Lens' SynthesisTask (Maybe Text)

-- | ARN for the SNS topic optionally used for providing status
--   notification for a speech synthesis task.
synthesisTask_snsTopicArn :: Lens' SynthesisTask (Maybe Text)

-- | Description of the voice.
--   
--   <i>See:</i> <a>newVoice</a> smart constructor.
data Voice
Voice' :: Maybe LanguageCode -> Maybe VoiceId -> Maybe Text -> Maybe Gender -> Maybe [Engine] -> Maybe [LanguageCode] -> Maybe Text -> Voice

-- | Language code of the voice.
[$sel:languageCode:Voice'] :: Voice -> Maybe LanguageCode

-- | Amazon Polly assigned voice ID. This is the ID that you specify when
--   calling the <tt>SynthesizeSpeech</tt> operation.
[$sel:id:Voice'] :: Voice -> Maybe VoiceId

-- | Name of the voice (for example, Salli, Kendra, etc.). This provides a
--   human readable voice name that you might display in your application.
[$sel:name:Voice'] :: Voice -> Maybe Text

-- | Gender of the voice.
[$sel:gender:Voice'] :: Voice -> Maybe Gender

-- | Specifies which engines (<tt>standard</tt> or <tt>neural</tt>) that
--   are supported by a given voice.
[$sel:supportedEngines:Voice'] :: Voice -> Maybe [Engine]

-- | Additional codes for languages available for the specified voice in
--   addition to its default language.
--   
--   For example, the default language for Aditi is Indian English (en-IN)
--   because it was first used for that language. Since Aditi is bilingual
--   and fluent in both Indian English and Hindi, this parameter would show
--   the code <tt>hi-IN</tt>.
[$sel:additionalLanguageCodes:Voice'] :: Voice -> Maybe [LanguageCode]

-- | Human readable name of the language in English.
[$sel:languageName:Voice'] :: Voice -> Maybe Text

-- | Create a value of <a>Voice</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:Voice'</a>, <a>voice_languageCode</a> - Language
--   code of the voice.
--   
--   <a>$sel:id:Voice'</a>, <a>voice_id</a> - Amazon Polly assigned voice
--   ID. This is the ID that you specify when calling the
--   <tt>SynthesizeSpeech</tt> operation.
--   
--   <a>$sel:name:Voice'</a>, <a>voice_name</a> - Name of the voice (for
--   example, Salli, Kendra, etc.). This provides a human readable voice
--   name that you might display in your application.
--   
--   <a>$sel:gender:Voice'</a>, <a>voice_gender</a> - Gender of the voice.
--   
--   <a>$sel:supportedEngines:Voice'</a>, <a>voice_supportedEngines</a> -
--   Specifies which engines (<tt>standard</tt> or <tt>neural</tt>) that
--   are supported by a given voice.
--   
--   <a>$sel:additionalLanguageCodes:Voice'</a>,
--   <a>voice_additionalLanguageCodes</a> - Additional codes for languages
--   available for the specified voice in addition to its default language.
--   
--   For example, the default language for Aditi is Indian English (en-IN)
--   because it was first used for that language. Since Aditi is bilingual
--   and fluent in both Indian English and Hindi, this parameter would show
--   the code <tt>hi-IN</tt>.
--   
--   <a>$sel:languageName:Voice'</a>, <a>voice_languageName</a> - Human
--   readable name of the language in English.
newVoice :: Voice

-- | Language code of the voice.
voice_languageCode :: Lens' Voice (Maybe LanguageCode)

-- | Amazon Polly assigned voice ID. This is the ID that you specify when
--   calling the <tt>SynthesizeSpeech</tt> operation.
voice_id :: Lens' Voice (Maybe VoiceId)

-- | Name of the voice (for example, Salli, Kendra, etc.). This provides a
--   human readable voice name that you might display in your application.
voice_name :: Lens' Voice (Maybe Text)

-- | Gender of the voice.
voice_gender :: Lens' Voice (Maybe Gender)

-- | Specifies which engines (<tt>standard</tt> or <tt>neural</tt>) that
--   are supported by a given voice.
voice_supportedEngines :: Lens' Voice (Maybe [Engine])

-- | Additional codes for languages available for the specified voice in
--   addition to its default language.
--   
--   For example, the default language for Aditi is Indian English (en-IN)
--   because it was first used for that language. Since Aditi is bilingual
--   and fluent in both Indian English and Hindi, this parameter would show
--   the code <tt>hi-IN</tt>.
voice_additionalLanguageCodes :: Lens' Voice (Maybe [LanguageCode])

-- | Human readable name of the language in English.
voice_languageName :: Lens' Voice (Maybe Text)


-- | Synthesizes UTF-8 input, plain text or SSML, to a stream of bytes.
--   SSML input must be valid, well-formed SSML. Some alphabets might not
--   be available with all the voices (for example, Cyrillic might not be
--   read at all by English voices) unless phoneme mapping is used. For
--   more information, see <a>How it Works</a>.
module Network.AWS.Polly.SynthesizeSpeech

-- | <i>See:</i> <a>newSynthesizeSpeech</a> smart constructor.
data SynthesizeSpeech
SynthesizeSpeech' :: Maybe LanguageCode -> Maybe [Text] -> Maybe [SpeechMarkType] -> Maybe TextType -> Maybe Text -> Maybe Engine -> OutputFormat -> Text -> VoiceId -> SynthesizeSpeech

-- | Optional language code for the Synthesize Speech request. This is only
--   necessary if using a bilingual voice, such as Aditi, which can be used
--   for either Indian English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
[$sel:languageCode:SynthesizeSpeech'] :: SynthesizeSpeech -> Maybe LanguageCode

-- | List of one or more pronunciation lexicon names you want the service
--   to apply during synthesis. Lexicons are applied only if the language
--   of the lexicon is the same as the language of the voice. For
--   information about storing lexicons, see <a>PutLexicon</a>.
[$sel:lexiconNames:SynthesizeSpeech'] :: SynthesizeSpeech -> Maybe [Text]

-- | The type of speech marks returned for the input text.
[$sel:speechMarkTypes:SynthesizeSpeech'] :: SynthesizeSpeech -> Maybe [SpeechMarkType]

-- | Specifies whether the input text is plain text or SSML. The default
--   value is plain text. For more information, see <a>Using SSML</a>.
[$sel:textType:SynthesizeSpeech'] :: SynthesizeSpeech -> Maybe TextType

-- | The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
[$sel:sampleRate:SynthesizeSpeech'] :: SynthesizeSpeech -> Maybe Text

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. For
--   information on Amazon Polly voices and which voices are available in
--   standard-only, NTTS-only, and both standard and NTTS formats, see
--   <a>Available Voices</a>.
--   
--   <b>NTTS-only voices</b>
--   
--   When using NTTS-only voices such as Kevin (en-US), this parameter is
--   required and must be set to <tt>neural</tt>. If the engine is not
--   specified, or is set to <tt>standard</tt>, this will result in an
--   error.
--   
--   Type: String
--   
--   Valid Values: <tt>standard</tt> | <tt>neural</tt>
--   
--   Required: Yes
--   
--   <b>Standard voices</b>
--   
--   For standard voices, this is not required; the engine parameter
--   defaults to <tt>standard</tt>. If the engine is not specified, or is
--   set to <tt>standard</tt> and an NTTS-only voice is selected, this will
--   result in an error.
[$sel:engine:SynthesizeSpeech'] :: SynthesizeSpeech -> Maybe Engine

-- | The format in which the returned output will be encoded. For audio
--   stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this
--   will be json.
--   
--   When pcm is used, the content returned is audio/pcm in a signed
--   16-bit, 1 channel (mono), little-endian format.
[$sel:outputFormat:SynthesizeSpeech'] :: SynthesizeSpeech -> OutputFormat

-- | Input text to synthesize. If you specify <tt>ssml</tt> as the
--   <tt>TextType</tt>, follow the SSML format for the input text.
[$sel:text:SynthesizeSpeech'] :: SynthesizeSpeech -> Text

-- | Voice ID to use for the synthesis. You can get a list of available
--   voice IDs by calling the <a>DescribeVoices</a> operation.
[$sel:voiceId:SynthesizeSpeech'] :: SynthesizeSpeech -> VoiceId

-- | Create a value of <a>SynthesizeSpeech</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_languageCode</a> - Optional language code for the
--   Synthesize Speech request. This is only necessary if using a bilingual
--   voice, such as Aditi, which can be used for either Indian English
--   (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
--   
--   <a>$sel:lexiconNames:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_lexiconNames</a> - List of one or more
--   pronunciation lexicon names you want the service to apply during
--   synthesis. Lexicons are applied only if the language of the lexicon is
--   the same as the language of the voice. For information about storing
--   lexicons, see <a>PutLexicon</a>.
--   
--   <a>$sel:speechMarkTypes:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_speechMarkTypes</a> - The type of speech marks
--   returned for the input text.
--   
--   <a>$sel:textType:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_textType</a> - Specifies whether the input text is
--   plain text or SSML. The default value is plain text. For more
--   information, see <a>Using SSML</a>.
--   
--   <a>$sel:sampleRate:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_sampleRate</a> - The audio frequency specified in
--   Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
--   
--   <a>$sel:engine:SynthesizeSpeech'</a>, <a>synthesizeSpeech_engine</a> -
--   Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. For
--   information on Amazon Polly voices and which voices are available in
--   standard-only, NTTS-only, and both standard and NTTS formats, see
--   <a>Available Voices</a>.
--   
--   <b>NTTS-only voices</b>
--   
--   When using NTTS-only voices such as Kevin (en-US), this parameter is
--   required and must be set to <tt>neural</tt>. If the engine is not
--   specified, or is set to <tt>standard</tt>, this will result in an
--   error.
--   
--   Type: String
--   
--   Valid Values: <tt>standard</tt> | <tt>neural</tt>
--   
--   Required: Yes
--   
--   <b>Standard voices</b>
--   
--   For standard voices, this is not required; the engine parameter
--   defaults to <tt>standard</tt>. If the engine is not specified, or is
--   set to <tt>standard</tt> and an NTTS-only voice is selected, this will
--   result in an error.
--   
--   <a>$sel:outputFormat:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_outputFormat</a> - The format in which the
--   returned output will be encoded. For audio stream, this will be mp3,
--   ogg_vorbis, or pcm. For speech marks, this will be json.
--   
--   When pcm is used, the content returned is audio/pcm in a signed
--   16-bit, 1 channel (mono), little-endian format.
--   
--   <a>$sel:text:SynthesizeSpeech'</a>, <a>synthesizeSpeech_text</a> -
--   Input text to synthesize. If you specify <tt>ssml</tt> as the
--   <tt>TextType</tt>, follow the SSML format for the input text.
--   
--   <a>$sel:voiceId:SynthesizeSpeech'</a>, <a>synthesizeSpeech_voiceId</a>
--   - Voice ID to use for the synthesis. You can get a list of available
--   voice IDs by calling the <a>DescribeVoices</a> operation.
newSynthesizeSpeech :: OutputFormat -> Text -> VoiceId -> SynthesizeSpeech

-- | Optional language code for the Synthesize Speech request. This is only
--   necessary if using a bilingual voice, such as Aditi, which can be used
--   for either Indian English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
synthesizeSpeech_languageCode :: Lens' SynthesizeSpeech (Maybe LanguageCode)

-- | List of one or more pronunciation lexicon names you want the service
--   to apply during synthesis. Lexicons are applied only if the language
--   of the lexicon is the same as the language of the voice. For
--   information about storing lexicons, see <a>PutLexicon</a>.
synthesizeSpeech_lexiconNames :: Lens' SynthesizeSpeech (Maybe [Text])

-- | The type of speech marks returned for the input text.
synthesizeSpeech_speechMarkTypes :: Lens' SynthesizeSpeech (Maybe [SpeechMarkType])

-- | Specifies whether the input text is plain text or SSML. The default
--   value is plain text. For more information, see <a>Using SSML</a>.
synthesizeSpeech_textType :: Lens' SynthesizeSpeech (Maybe TextType)

-- | The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
synthesizeSpeech_sampleRate :: Lens' SynthesizeSpeech (Maybe Text)

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. For
--   information on Amazon Polly voices and which voices are available in
--   standard-only, NTTS-only, and both standard and NTTS formats, see
--   <a>Available Voices</a>.
--   
--   <b>NTTS-only voices</b>
--   
--   When using NTTS-only voices such as Kevin (en-US), this parameter is
--   required and must be set to <tt>neural</tt>. If the engine is not
--   specified, or is set to <tt>standard</tt>, this will result in an
--   error.
--   
--   Type: String
--   
--   Valid Values: <tt>standard</tt> | <tt>neural</tt>
--   
--   Required: Yes
--   
--   <b>Standard voices</b>
--   
--   For standard voices, this is not required; the engine parameter
--   defaults to <tt>standard</tt>. If the engine is not specified, or is
--   set to <tt>standard</tt> and an NTTS-only voice is selected, this will
--   result in an error.
synthesizeSpeech_engine :: Lens' SynthesizeSpeech (Maybe Engine)

-- | The format in which the returned output will be encoded. For audio
--   stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this
--   will be json.
--   
--   When pcm is used, the content returned is audio/pcm in a signed
--   16-bit, 1 channel (mono), little-endian format.
synthesizeSpeech_outputFormat :: Lens' SynthesizeSpeech OutputFormat

-- | Input text to synthesize. If you specify <tt>ssml</tt> as the
--   <tt>TextType</tt>, follow the SSML format for the input text.
synthesizeSpeech_text :: Lens' SynthesizeSpeech Text

-- | Voice ID to use for the synthesis. You can get a list of available
--   voice IDs by calling the <a>DescribeVoices</a> operation.
synthesizeSpeech_voiceId :: Lens' SynthesizeSpeech VoiceId

-- | <i>See:</i> <a>newSynthesizeSpeechResponse</a> smart constructor.
data SynthesizeSpeechResponse
SynthesizeSpeechResponse' :: Maybe Text -> Maybe Int -> Int -> ResponseBody -> SynthesizeSpeechResponse

-- | Specifies the type audio stream. This should reflect the
--   <tt>OutputFormat</tt> parameter in your request.
--   
--   <ul>
--   <li>If you request <tt>mp3</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/mpeg.</li>
--   <li>If you request <tt>ogg_vorbis</tt> as the <tt>OutputFormat</tt>,
--   the <tt>ContentType</tt> returned is audio/ogg.</li>
--   <li>If you request <tt>pcm</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/pcm in a signed 16-bit, 1
--   channel (mono), little-endian format.</li>
--   <li>If you request <tt>json</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/json.</li>
--   </ul>
[$sel:contentType:SynthesizeSpeechResponse'] :: SynthesizeSpeechResponse -> Maybe Text

-- | Number of characters synthesized.
[$sel:requestCharacters:SynthesizeSpeechResponse'] :: SynthesizeSpeechResponse -> Maybe Int

-- | The response's http status code.
[$sel:httpStatus:SynthesizeSpeechResponse'] :: SynthesizeSpeechResponse -> Int

-- | Stream containing the synthesized speech.
[$sel:audioStream:SynthesizeSpeechResponse'] :: SynthesizeSpeechResponse -> ResponseBody

-- | Create a value of <a>SynthesizeSpeechResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentType:SynthesizeSpeechResponse'</a>,
--   <a>synthesizeSpeechResponse_contentType</a> - Specifies the type audio
--   stream. This should reflect the <tt>OutputFormat</tt> parameter in
--   your request.
--   
--   <ul>
--   <li>If you request <tt>mp3</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/mpeg.</li>
--   <li>If you request <tt>ogg_vorbis</tt> as the <tt>OutputFormat</tt>,
--   the <tt>ContentType</tt> returned is audio/ogg.</li>
--   <li>If you request <tt>pcm</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/pcm in a signed 16-bit, 1
--   channel (mono), little-endian format.</li>
--   <li>If you request <tt>json</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/json.</li>
--   </ul>
--   
--   <a>$sel:requestCharacters:SynthesizeSpeechResponse'</a>,
--   <a>synthesizeSpeechResponse_requestCharacters</a> - Number of
--   characters synthesized.
--   
--   <a>$sel:httpStatus:SynthesizeSpeechResponse'</a>,
--   <a>synthesizeSpeechResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:audioStream:SynthesizeSpeechResponse'</a>,
--   <a>synthesizeSpeechResponse_audioStream</a> - Stream containing the
--   synthesized speech.
newSynthesizeSpeechResponse :: Int -> ResponseBody -> SynthesizeSpeechResponse

-- | Specifies the type audio stream. This should reflect the
--   <tt>OutputFormat</tt> parameter in your request.
--   
--   <ul>
--   <li>If you request <tt>mp3</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/mpeg.</li>
--   <li>If you request <tt>ogg_vorbis</tt> as the <tt>OutputFormat</tt>,
--   the <tt>ContentType</tt> returned is audio/ogg.</li>
--   <li>If you request <tt>pcm</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/pcm in a signed 16-bit, 1
--   channel (mono), little-endian format.</li>
--   <li>If you request <tt>json</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/json.</li>
--   </ul>
synthesizeSpeechResponse_contentType :: Lens' SynthesizeSpeechResponse (Maybe Text)

-- | Number of characters synthesized.
synthesizeSpeechResponse_requestCharacters :: Lens' SynthesizeSpeechResponse (Maybe Int)

-- | The response's http status code.
synthesizeSpeechResponse_httpStatus :: Lens' SynthesizeSpeechResponse Int

-- | Stream containing the synthesized speech.
synthesizeSpeechResponse_audioStream :: Lens' SynthesizeSpeechResponse ResponseBody
instance GHC.Generics.Generic Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeech
instance GHC.Show.Show Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeech
instance GHC.Read.Read Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeech
instance GHC.Classes.Eq Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeech
instance GHC.Generics.Generic Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeechResponse
instance GHC.Show.Show Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeechResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeech
instance Data.Hashable.Class.Hashable Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeech
instance Control.DeepSeq.NFData Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeech
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeech
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeech
instance Network.AWS.Data.Path.ToPath Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeech
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.SynthesizeSpeech.SynthesizeSpeech


-- | Allows the creation of an asynchronous synthesis task, by starting a
--   new <tt>SpeechSynthesisTask</tt>. This operation requires all the
--   standard information needed for speech synthesis, plus the name of an
--   Amazon S3 bucket for the service to store the output of the synthesis
--   task and two optional parameters (<tt>OutputS3KeyPrefix</tt> and
--   <tt>SnsTopicArn</tt>). Once the synthesis task is created, this
--   operation will return a <tt>SpeechSynthesisTask</tt> object, which
--   will include an identifier of this task as well as the current status.
--   The <tt>SpeechSynthesisTask</tt> object is available for 72 hours
--   after starting the asynchronous synthesis task.
module Network.AWS.Polly.StartSpeechSynthesisTask

-- | <i>See:</i> <a>newStartSpeechSynthesisTask</a> smart constructor.
data StartSpeechSynthesisTask
StartSpeechSynthesisTask' :: Maybe LanguageCode -> Maybe [Text] -> Maybe [SpeechMarkType] -> Maybe TextType -> Maybe Text -> Maybe Engine -> Maybe Text -> Maybe Text -> OutputFormat -> Text -> Text -> VoiceId -> StartSpeechSynthesisTask

-- | Optional language code for the Speech Synthesis request. This is only
--   necessary if using a bilingual voice, such as Aditi, which can be used
--   for either Indian English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
[$sel:languageCode:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> Maybe LanguageCode

-- | List of one or more pronunciation lexicon names you want the service
--   to apply during synthesis. Lexicons are applied only if the language
--   of the lexicon is the same as the language of the voice.
[$sel:lexiconNames:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> Maybe [Text]

-- | The type of speech marks returned for the input text.
[$sel:speechMarkTypes:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> Maybe [SpeechMarkType]

-- | Specifies whether the input text is plain text or SSML. The default
--   value is plain text.
[$sel:textType:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> Maybe TextType

-- | The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
[$sel:sampleRate:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> Maybe Text

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. Using a
--   voice that is not supported for the engine selected will result in an
--   error.
[$sel:engine:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> Maybe Engine

-- | The Amazon S3 key prefix for the output speech file.
[$sel:outputS3KeyPrefix:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> Maybe Text

-- | ARN for the SNS topic optionally used for providing status
--   notification for a speech synthesis task.
[$sel:snsTopicArn:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> Maybe Text

-- | The format in which the returned output will be encoded. For audio
--   stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this
--   will be json.
[$sel:outputFormat:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> OutputFormat

-- | Amazon S3 bucket name to which the output file will be saved.
[$sel:outputS3BucketName:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> Text

-- | The input text to synthesize. If you specify ssml as the TextType,
--   follow the SSML format for the input text.
[$sel:text:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> Text

-- | Voice ID to use for the synthesis.
[$sel:voiceId:StartSpeechSynthesisTask'] :: StartSpeechSynthesisTask -> VoiceId

-- | Create a value of <a>StartSpeechSynthesisTask</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_languageCode</a> - Optional language code
--   for the Speech Synthesis request. This is only necessary if using a
--   bilingual voice, such as Aditi, which can be used for either Indian
--   English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
--   
--   <a>$sel:lexiconNames:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_lexiconNames</a> - List of one or more
--   pronunciation lexicon names you want the service to apply during
--   synthesis. Lexicons are applied only if the language of the lexicon is
--   the same as the language of the voice.
--   
--   <a>$sel:speechMarkTypes:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_speechMarkTypes</a> - The type of speech
--   marks returned for the input text.
--   
--   <a>$sel:textType:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_textType</a> - Specifies whether the input
--   text is plain text or SSML. The default value is plain text.
--   
--   <a>$sel:sampleRate:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_sampleRate</a> - The audio frequency
--   specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
--   
--   <a>$sel:engine:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_engine</a> - Specifies the engine
--   (<tt>standard</tt> or <tt>neural</tt>) for Amazon Polly to use when
--   processing input text for speech synthesis. Using a voice that is not
--   supported for the engine selected will result in an error.
--   
--   <a>$sel:outputS3KeyPrefix:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_outputS3KeyPrefix</a> - The Amazon S3 key
--   prefix for the output speech file.
--   
--   <a>$sel:snsTopicArn:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_snsTopicArn</a> - ARN for the SNS topic
--   optionally used for providing status notification for a speech
--   synthesis task.
--   
--   <a>$sel:outputFormat:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_outputFormat</a> - The format in which the
--   returned output will be encoded. For audio stream, this will be mp3,
--   ogg_vorbis, or pcm. For speech marks, this will be json.
--   
--   <a>$sel:outputS3BucketName:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_outputS3BucketName</a> - Amazon S3 bucket
--   name to which the output file will be saved.
--   
--   <a>$sel:text:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_text</a> - The input text to synthesize.
--   If you specify ssml as the TextType, follow the SSML format for the
--   input text.
--   
--   <a>$sel:voiceId:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_voiceId</a> - Voice ID to use for the
--   synthesis.
newStartSpeechSynthesisTask :: OutputFormat -> Text -> Text -> VoiceId -> StartSpeechSynthesisTask

-- | Optional language code for the Speech Synthesis request. This is only
--   necessary if using a bilingual voice, such as Aditi, which can be used
--   for either Indian English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
startSpeechSynthesisTask_languageCode :: Lens' StartSpeechSynthesisTask (Maybe LanguageCode)

-- | List of one or more pronunciation lexicon names you want the service
--   to apply during synthesis. Lexicons are applied only if the language
--   of the lexicon is the same as the language of the voice.
startSpeechSynthesisTask_lexiconNames :: Lens' StartSpeechSynthesisTask (Maybe [Text])

-- | The type of speech marks returned for the input text.
startSpeechSynthesisTask_speechMarkTypes :: Lens' StartSpeechSynthesisTask (Maybe [SpeechMarkType])

-- | Specifies whether the input text is plain text or SSML. The default
--   value is plain text.
startSpeechSynthesisTask_textType :: Lens' StartSpeechSynthesisTask (Maybe TextType)

-- | The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
startSpeechSynthesisTask_sampleRate :: Lens' StartSpeechSynthesisTask (Maybe Text)

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. Using a
--   voice that is not supported for the engine selected will result in an
--   error.
startSpeechSynthesisTask_engine :: Lens' StartSpeechSynthesisTask (Maybe Engine)

-- | The Amazon S3 key prefix for the output speech file.
startSpeechSynthesisTask_outputS3KeyPrefix :: Lens' StartSpeechSynthesisTask (Maybe Text)

-- | ARN for the SNS topic optionally used for providing status
--   notification for a speech synthesis task.
startSpeechSynthesisTask_snsTopicArn :: Lens' StartSpeechSynthesisTask (Maybe Text)

-- | The format in which the returned output will be encoded. For audio
--   stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this
--   will be json.
startSpeechSynthesisTask_outputFormat :: Lens' StartSpeechSynthesisTask OutputFormat

-- | Amazon S3 bucket name to which the output file will be saved.
startSpeechSynthesisTask_outputS3BucketName :: Lens' StartSpeechSynthesisTask Text

-- | The input text to synthesize. If you specify ssml as the TextType,
--   follow the SSML format for the input text.
startSpeechSynthesisTask_text :: Lens' StartSpeechSynthesisTask Text

-- | Voice ID to use for the synthesis.
startSpeechSynthesisTask_voiceId :: Lens' StartSpeechSynthesisTask VoiceId

-- | <i>See:</i> <a>newStartSpeechSynthesisTaskResponse</a> smart
--   constructor.
data StartSpeechSynthesisTaskResponse
StartSpeechSynthesisTaskResponse' :: Maybe SynthesisTask -> Int -> StartSpeechSynthesisTaskResponse

-- | SynthesisTask object that provides information and attributes about a
--   newly submitted speech synthesis task.
[$sel:synthesisTask:StartSpeechSynthesisTaskResponse'] :: StartSpeechSynthesisTaskResponse -> Maybe SynthesisTask

-- | The response's http status code.
[$sel:httpStatus:StartSpeechSynthesisTaskResponse'] :: StartSpeechSynthesisTaskResponse -> Int

-- | Create a value of <a>StartSpeechSynthesisTaskResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:synthesisTask:StartSpeechSynthesisTaskResponse'</a>,
--   <a>startSpeechSynthesisTaskResponse_synthesisTask</a> - SynthesisTask
--   object that provides information and attributes about a newly
--   submitted speech synthesis task.
--   
--   <a>$sel:httpStatus:StartSpeechSynthesisTaskResponse'</a>,
--   <a>startSpeechSynthesisTaskResponse_httpStatus</a> - The response's
--   http status code.
newStartSpeechSynthesisTaskResponse :: Int -> StartSpeechSynthesisTaskResponse

-- | SynthesisTask object that provides information and attributes about a
--   newly submitted speech synthesis task.
startSpeechSynthesisTaskResponse_synthesisTask :: Lens' StartSpeechSynthesisTaskResponse (Maybe SynthesisTask)

-- | The response's http status code.
startSpeechSynthesisTaskResponse_httpStatus :: Lens' StartSpeechSynthesisTaskResponse Int
instance GHC.Generics.Generic Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTask
instance GHC.Show.Show Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTask
instance GHC.Read.Read Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTask
instance GHC.Classes.Eq Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTask
instance GHC.Generics.Generic Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTaskResponse
instance GHC.Show.Show Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTaskResponse
instance GHC.Read.Read Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTaskResponse
instance GHC.Classes.Eq Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTaskResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTask
instance Control.DeepSeq.NFData Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTaskResponse
instance Data.Hashable.Class.Hashable Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTask
instance Control.DeepSeq.NFData Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTask
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTask
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTask
instance Network.AWS.Data.Path.ToPath Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTask
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.StartSpeechSynthesisTask.StartSpeechSynthesisTask


-- | Stores a pronunciation lexicon in an Amazon Web Services Region. If a
--   lexicon with the same name already exists in the region, it is
--   overwritten by the new lexicon. Lexicon operations have eventual
--   consistency, therefore, it might take some time before the lexicon is
--   available to the SynthesizeSpeech operation.
--   
--   For more information, see <a>Managing Lexicons</a>.
module Network.AWS.Polly.PutLexicon

-- | <i>See:</i> <a>newPutLexicon</a> smart constructor.
data PutLexicon
PutLexicon' :: Text -> Sensitive Text -> PutLexicon

-- | Name of the lexicon. The name must follow the regular express format
--   [0-9A-Za-z]{1,20}. That is, the name is a case-sensitive alphanumeric
--   string up to 20 characters long.
[$sel:name:PutLexicon'] :: PutLexicon -> Text

-- | Content of the PLS lexicon as string data.
[$sel:content:PutLexicon'] :: PutLexicon -> Sensitive Text

-- | Create a value of <a>PutLexicon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:PutLexicon'</a>, <a>putLexicon_name</a> - Name of the
--   lexicon. The name must follow the regular express format
--   [0-9A-Za-z]{1,20}. That is, the name is a case-sensitive alphanumeric
--   string up to 20 characters long.
--   
--   <a>$sel:content:PutLexicon'</a>, <a>putLexicon_content</a> - Content
--   of the PLS lexicon as string data.
newPutLexicon :: Text -> Text -> PutLexicon

-- | Name of the lexicon. The name must follow the regular express format
--   [0-9A-Za-z]{1,20}. That is, the name is a case-sensitive alphanumeric
--   string up to 20 characters long.
putLexicon_name :: Lens' PutLexicon Text

-- | Content of the PLS lexicon as string data.
putLexicon_content :: Lens' PutLexicon Text

-- | <i>See:</i> <a>newPutLexiconResponse</a> smart constructor.
data PutLexiconResponse
PutLexiconResponse' :: Int -> PutLexiconResponse

-- | The response's http status code.
[$sel:httpStatus:PutLexiconResponse'] :: PutLexiconResponse -> Int

-- | Create a value of <a>PutLexiconResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutLexiconResponse'</a>,
--   <a>putLexiconResponse_httpStatus</a> - The response's http status
--   code.
newPutLexiconResponse :: Int -> PutLexiconResponse

-- | The response's http status code.
putLexiconResponse_httpStatus :: Lens' PutLexiconResponse Int
instance GHC.Generics.Generic Network.AWS.Polly.PutLexicon.PutLexicon
instance GHC.Show.Show Network.AWS.Polly.PutLexicon.PutLexicon
instance GHC.Classes.Eq Network.AWS.Polly.PutLexicon.PutLexicon
instance GHC.Generics.Generic Network.AWS.Polly.PutLexicon.PutLexiconResponse
instance GHC.Show.Show Network.AWS.Polly.PutLexicon.PutLexiconResponse
instance GHC.Read.Read Network.AWS.Polly.PutLexicon.PutLexiconResponse
instance GHC.Classes.Eq Network.AWS.Polly.PutLexicon.PutLexiconResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Polly.PutLexicon.PutLexicon
instance Control.DeepSeq.NFData Network.AWS.Polly.PutLexicon.PutLexiconResponse
instance Data.Hashable.Class.Hashable Network.AWS.Polly.PutLexicon.PutLexicon
instance Control.DeepSeq.NFData Network.AWS.Polly.PutLexicon.PutLexicon
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Polly.PutLexicon.PutLexicon
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.Polly.PutLexicon.PutLexicon
instance Network.AWS.Data.Path.ToPath Network.AWS.Polly.PutLexicon.PutLexicon
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.PutLexicon.PutLexicon


-- | Returns a list of SpeechSynthesisTask objects ordered by their
--   creation date. This operation can filter the tasks by their status,
--   for example, allowing users to list only tasks that are completed.
--   
--   This operation returns paginated results.
module Network.AWS.Polly.ListSpeechSynthesisTasks

-- | <i>See:</i> <a>newListSpeechSynthesisTasks</a> smart constructor.
data ListSpeechSynthesisTasks
ListSpeechSynthesisTasks' :: Maybe TaskStatus -> Maybe Text -> Maybe Natural -> ListSpeechSynthesisTasks

-- | Status of the speech synthesis tasks returned in a List operation
[$sel:status:ListSpeechSynthesisTasks'] :: ListSpeechSynthesisTasks -> Maybe TaskStatus

-- | The pagination token to use in the next request to continue the
--   listing of speech synthesis tasks.
[$sel:nextToken:ListSpeechSynthesisTasks'] :: ListSpeechSynthesisTasks -> Maybe Text

-- | Maximum number of speech synthesis tasks returned in a List operation.
[$sel:maxResults:ListSpeechSynthesisTasks'] :: ListSpeechSynthesisTasks -> Maybe Natural

-- | Create a value of <a>ListSpeechSynthesisTasks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListSpeechSynthesisTasks'</a>,
--   <a>listSpeechSynthesisTasks_status</a> - Status of the speech
--   synthesis tasks returned in a List operation
--   
--   <a>$sel:nextToken:ListSpeechSynthesisTasks'</a>,
--   <a>listSpeechSynthesisTasks_nextToken</a> - The pagination token to
--   use in the next request to continue the listing of speech synthesis
--   tasks.
--   
--   <a>$sel:maxResults:ListSpeechSynthesisTasks'</a>,
--   <a>listSpeechSynthesisTasks_maxResults</a> - Maximum number of speech
--   synthesis tasks returned in a List operation.
newListSpeechSynthesisTasks :: ListSpeechSynthesisTasks

-- | Status of the speech synthesis tasks returned in a List operation
listSpeechSynthesisTasks_status :: Lens' ListSpeechSynthesisTasks (Maybe TaskStatus)

-- | The pagination token to use in the next request to continue the
--   listing of speech synthesis tasks.
listSpeechSynthesisTasks_nextToken :: Lens' ListSpeechSynthesisTasks (Maybe Text)

-- | Maximum number of speech synthesis tasks returned in a List operation.
listSpeechSynthesisTasks_maxResults :: Lens' ListSpeechSynthesisTasks (Maybe Natural)

-- | <i>See:</i> <a>newListSpeechSynthesisTasksResponse</a> smart
--   constructor.
data ListSpeechSynthesisTasksResponse
ListSpeechSynthesisTasksResponse' :: Maybe Text -> Maybe [SynthesisTask] -> Int -> ListSpeechSynthesisTasksResponse

-- | An opaque pagination token returned from the previous List operation
--   in this request. If present, this indicates where to continue the
--   listing.
[$sel:nextToken:ListSpeechSynthesisTasksResponse'] :: ListSpeechSynthesisTasksResponse -> Maybe Text

-- | List of SynthesisTask objects that provides information from the
--   specified task in the list request, including output format, creation
--   time, task status, and so on.
[$sel:synthesisTasks:ListSpeechSynthesisTasksResponse'] :: ListSpeechSynthesisTasksResponse -> Maybe [SynthesisTask]

-- | The response's http status code.
[$sel:httpStatus:ListSpeechSynthesisTasksResponse'] :: ListSpeechSynthesisTasksResponse -> Int

-- | Create a value of <a>ListSpeechSynthesisTasksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSpeechSynthesisTasks'</a>,
--   <a>listSpeechSynthesisTasksResponse_nextToken</a> - An opaque
--   pagination token returned from the previous List operation in this
--   request. If present, this indicates where to continue the listing.
--   
--   <a>$sel:synthesisTasks:ListSpeechSynthesisTasksResponse'</a>,
--   <a>listSpeechSynthesisTasksResponse_synthesisTasks</a> - List of
--   SynthesisTask objects that provides information from the specified
--   task in the list request, including output format, creation time, task
--   status, and so on.
--   
--   <a>$sel:httpStatus:ListSpeechSynthesisTasksResponse'</a>,
--   <a>listSpeechSynthesisTasksResponse_httpStatus</a> - The response's
--   http status code.
newListSpeechSynthesisTasksResponse :: Int -> ListSpeechSynthesisTasksResponse

-- | An opaque pagination token returned from the previous List operation
--   in this request. If present, this indicates where to continue the
--   listing.
listSpeechSynthesisTasksResponse_nextToken :: Lens' ListSpeechSynthesisTasksResponse (Maybe Text)

-- | List of SynthesisTask objects that provides information from the
--   specified task in the list request, including output format, creation
--   time, task status, and so on.
listSpeechSynthesisTasksResponse_synthesisTasks :: Lens' ListSpeechSynthesisTasksResponse (Maybe [SynthesisTask])

-- | The response's http status code.
listSpeechSynthesisTasksResponse_httpStatus :: Lens' ListSpeechSynthesisTasksResponse Int
instance GHC.Generics.Generic Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasks
instance GHC.Show.Show Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasks
instance GHC.Read.Read Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasks
instance GHC.Classes.Eq Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasks
instance GHC.Generics.Generic Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasksResponse
instance GHC.Show.Show Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasksResponse
instance GHC.Read.Read Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasksResponse
instance GHC.Classes.Eq Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasksResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasks
instance Control.DeepSeq.NFData Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasksResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasks
instance Data.Hashable.Class.Hashable Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasks
instance Control.DeepSeq.NFData Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasks
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasks
instance Network.AWS.Data.Path.ToPath Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasks
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.ListSpeechSynthesisTasks.ListSpeechSynthesisTasks


-- | Returns a list of pronunciation lexicons stored in an Amazon Web
--   Services Region. For more information, see <a>Managing Lexicons</a>.
--   
--   This operation returns paginated results.
module Network.AWS.Polly.ListLexicons

-- | <i>See:</i> <a>newListLexicons</a> smart constructor.
data ListLexicons
ListLexicons' :: Maybe Text -> ListLexicons

-- | An opaque pagination token returned from previous
--   <tt>ListLexicons</tt> operation. If present, indicates where to
--   continue the list of lexicons.
[$sel:nextToken:ListLexicons'] :: ListLexicons -> Maybe Text

-- | Create a value of <a>ListLexicons</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLexicons'</a>, <a>listLexicons_nextToken</a> -
--   An opaque pagination token returned from previous
--   <tt>ListLexicons</tt> operation. If present, indicates where to
--   continue the list of lexicons.
newListLexicons :: ListLexicons

-- | An opaque pagination token returned from previous
--   <tt>ListLexicons</tt> operation. If present, indicates where to
--   continue the list of lexicons.
listLexicons_nextToken :: Lens' ListLexicons (Maybe Text)

-- | <i>See:</i> <a>newListLexiconsResponse</a> smart constructor.
data ListLexiconsResponse
ListLexiconsResponse' :: Maybe Text -> Maybe [LexiconDescription] -> Int -> ListLexiconsResponse

-- | The pagination token to use in the next request to continue the
--   listing of lexicons. <tt>NextToken</tt> is returned only if the
--   response is truncated.
[$sel:nextToken:ListLexiconsResponse'] :: ListLexiconsResponse -> Maybe Text

-- | A list of lexicon names and attributes.
[$sel:lexicons:ListLexiconsResponse'] :: ListLexiconsResponse -> Maybe [LexiconDescription]

-- | The response's http status code.
[$sel:httpStatus:ListLexiconsResponse'] :: ListLexiconsResponse -> Int

-- | Create a value of <a>ListLexiconsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLexicons'</a>,
--   <a>listLexiconsResponse_nextToken</a> - The pagination token to use in
--   the next request to continue the listing of lexicons.
--   <tt>NextToken</tt> is returned only if the response is truncated.
--   
--   <a>$sel:lexicons:ListLexiconsResponse'</a>,
--   <a>listLexiconsResponse_lexicons</a> - A list of lexicon names and
--   attributes.
--   
--   <a>$sel:httpStatus:ListLexiconsResponse'</a>,
--   <a>listLexiconsResponse_httpStatus</a> - The response's http status
--   code.
newListLexiconsResponse :: Int -> ListLexiconsResponse

-- | The pagination token to use in the next request to continue the
--   listing of lexicons. <tt>NextToken</tt> is returned only if the
--   response is truncated.
listLexiconsResponse_nextToken :: Lens' ListLexiconsResponse (Maybe Text)

-- | A list of lexicon names and attributes.
listLexiconsResponse_lexicons :: Lens' ListLexiconsResponse (Maybe [LexiconDescription])

-- | The response's http status code.
listLexiconsResponse_httpStatus :: Lens' ListLexiconsResponse Int
instance GHC.Generics.Generic Network.AWS.Polly.ListLexicons.ListLexicons
instance GHC.Show.Show Network.AWS.Polly.ListLexicons.ListLexicons
instance GHC.Read.Read Network.AWS.Polly.ListLexicons.ListLexicons
instance GHC.Classes.Eq Network.AWS.Polly.ListLexicons.ListLexicons
instance GHC.Generics.Generic Network.AWS.Polly.ListLexicons.ListLexiconsResponse
instance GHC.Show.Show Network.AWS.Polly.ListLexicons.ListLexiconsResponse
instance GHC.Read.Read Network.AWS.Polly.ListLexicons.ListLexiconsResponse
instance GHC.Classes.Eq Network.AWS.Polly.ListLexicons.ListLexiconsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Polly.ListLexicons.ListLexicons
instance Control.DeepSeq.NFData Network.AWS.Polly.ListLexicons.ListLexiconsResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Polly.ListLexicons.ListLexicons
instance Data.Hashable.Class.Hashable Network.AWS.Polly.ListLexicons.ListLexicons
instance Control.DeepSeq.NFData Network.AWS.Polly.ListLexicons.ListLexicons
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Polly.ListLexicons.ListLexicons
instance Network.AWS.Data.Path.ToPath Network.AWS.Polly.ListLexicons.ListLexicons
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.ListLexicons.ListLexicons


-- | Retrieves a specific SpeechSynthesisTask object based on its TaskID.
--   This object contains information about the given speech synthesis
--   task, including the status of the task, and a link to the S3 bucket
--   containing the output of the task.
module Network.AWS.Polly.GetSpeechSynthesisTask

-- | <i>See:</i> <a>newGetSpeechSynthesisTask</a> smart constructor.
data GetSpeechSynthesisTask
GetSpeechSynthesisTask' :: Text -> GetSpeechSynthesisTask

-- | The Amazon Polly generated identifier for a speech synthesis task.
[$sel:taskId:GetSpeechSynthesisTask'] :: GetSpeechSynthesisTask -> Text

-- | Create a value of <a>GetSpeechSynthesisTask</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:GetSpeechSynthesisTask'</a>,
--   <a>getSpeechSynthesisTask_taskId</a> - The Amazon Polly generated
--   identifier for a speech synthesis task.
newGetSpeechSynthesisTask :: Text -> GetSpeechSynthesisTask

-- | The Amazon Polly generated identifier for a speech synthesis task.
getSpeechSynthesisTask_taskId :: Lens' GetSpeechSynthesisTask Text

-- | <i>See:</i> <a>newGetSpeechSynthesisTaskResponse</a> smart
--   constructor.
data GetSpeechSynthesisTaskResponse
GetSpeechSynthesisTaskResponse' :: Maybe SynthesisTask -> Int -> GetSpeechSynthesisTaskResponse

-- | SynthesisTask object that provides information from the requested
--   task, including output format, creation time, task status, and so on.
[$sel:synthesisTask:GetSpeechSynthesisTaskResponse'] :: GetSpeechSynthesisTaskResponse -> Maybe SynthesisTask

-- | The response's http status code.
[$sel:httpStatus:GetSpeechSynthesisTaskResponse'] :: GetSpeechSynthesisTaskResponse -> Int

-- | Create a value of <a>GetSpeechSynthesisTaskResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:synthesisTask:GetSpeechSynthesisTaskResponse'</a>,
--   <a>getSpeechSynthesisTaskResponse_synthesisTask</a> - SynthesisTask
--   object that provides information from the requested task, including
--   output format, creation time, task status, and so on.
--   
--   <a>$sel:httpStatus:GetSpeechSynthesisTaskResponse'</a>,
--   <a>getSpeechSynthesisTaskResponse_httpStatus</a> - The response's http
--   status code.
newGetSpeechSynthesisTaskResponse :: Int -> GetSpeechSynthesisTaskResponse

-- | SynthesisTask object that provides information from the requested
--   task, including output format, creation time, task status, and so on.
getSpeechSynthesisTaskResponse_synthesisTask :: Lens' GetSpeechSynthesisTaskResponse (Maybe SynthesisTask)

-- | The response's http status code.
getSpeechSynthesisTaskResponse_httpStatus :: Lens' GetSpeechSynthesisTaskResponse Int
instance GHC.Generics.Generic Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTask
instance GHC.Show.Show Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTask
instance GHC.Read.Read Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTask
instance GHC.Classes.Eq Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTask
instance GHC.Generics.Generic Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTaskResponse
instance GHC.Show.Show Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTaskResponse
instance GHC.Read.Read Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTaskResponse
instance GHC.Classes.Eq Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTaskResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTask
instance Control.DeepSeq.NFData Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTaskResponse
instance Data.Hashable.Class.Hashable Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTask
instance Control.DeepSeq.NFData Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTask
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTask
instance Network.AWS.Data.Path.ToPath Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTask
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.GetSpeechSynthesisTask.GetSpeechSynthesisTask


-- | Returns the content of the specified pronunciation lexicon stored in
--   an Amazon Web Services Region. For more information, see <a>Managing
--   Lexicons</a>.
module Network.AWS.Polly.GetLexicon

-- | <i>See:</i> <a>newGetLexicon</a> smart constructor.
data GetLexicon
GetLexicon' :: Text -> GetLexicon

-- | Name of the lexicon.
[$sel:name:GetLexicon'] :: GetLexicon -> Text

-- | Create a value of <a>GetLexicon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetLexicon'</a>, <a>getLexicon_name</a> - Name of the
--   lexicon.
newGetLexicon :: Text -> GetLexicon

-- | Name of the lexicon.
getLexicon_name :: Lens' GetLexicon Text

-- | <i>See:</i> <a>newGetLexiconResponse</a> smart constructor.
data GetLexiconResponse
GetLexiconResponse' :: Maybe LexiconAttributes -> Maybe Lexicon -> Int -> GetLexiconResponse

-- | Metadata of the lexicon, including phonetic alphabetic used, language
--   code, lexicon ARN, number of lexemes defined in the lexicon, and size
--   of lexicon in bytes.
[$sel:lexiconAttributes:GetLexiconResponse'] :: GetLexiconResponse -> Maybe LexiconAttributes

-- | Lexicon object that provides name and the string content of the
--   lexicon.
[$sel:lexicon:GetLexiconResponse'] :: GetLexiconResponse -> Maybe Lexicon

-- | The response's http status code.
[$sel:httpStatus:GetLexiconResponse'] :: GetLexiconResponse -> Int

-- | Create a value of <a>GetLexiconResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lexiconAttributes:GetLexiconResponse'</a>,
--   <a>getLexiconResponse_lexiconAttributes</a> - Metadata of the lexicon,
--   including phonetic alphabetic used, language code, lexicon ARN, number
--   of lexemes defined in the lexicon, and size of lexicon in bytes.
--   
--   <a>$sel:lexicon:GetLexiconResponse'</a>,
--   <a>getLexiconResponse_lexicon</a> - Lexicon object that provides name
--   and the string content of the lexicon.
--   
--   <a>$sel:httpStatus:GetLexiconResponse'</a>,
--   <a>getLexiconResponse_httpStatus</a> - The response's http status
--   code.
newGetLexiconResponse :: Int -> GetLexiconResponse

-- | Metadata of the lexicon, including phonetic alphabetic used, language
--   code, lexicon ARN, number of lexemes defined in the lexicon, and size
--   of lexicon in bytes.
getLexiconResponse_lexiconAttributes :: Lens' GetLexiconResponse (Maybe LexiconAttributes)

-- | Lexicon object that provides name and the string content of the
--   lexicon.
getLexiconResponse_lexicon :: Lens' GetLexiconResponse (Maybe Lexicon)

-- | The response's http status code.
getLexiconResponse_httpStatus :: Lens' GetLexiconResponse Int
instance GHC.Generics.Generic Network.AWS.Polly.GetLexicon.GetLexicon
instance GHC.Show.Show Network.AWS.Polly.GetLexicon.GetLexicon
instance GHC.Read.Read Network.AWS.Polly.GetLexicon.GetLexicon
instance GHC.Classes.Eq Network.AWS.Polly.GetLexicon.GetLexicon
instance GHC.Generics.Generic Network.AWS.Polly.GetLexicon.GetLexiconResponse
instance GHC.Show.Show Network.AWS.Polly.GetLexicon.GetLexiconResponse
instance GHC.Classes.Eq Network.AWS.Polly.GetLexicon.GetLexiconResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Polly.GetLexicon.GetLexicon
instance Control.DeepSeq.NFData Network.AWS.Polly.GetLexicon.GetLexiconResponse
instance Data.Hashable.Class.Hashable Network.AWS.Polly.GetLexicon.GetLexicon
instance Control.DeepSeq.NFData Network.AWS.Polly.GetLexicon.GetLexicon
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Polly.GetLexicon.GetLexicon
instance Network.AWS.Data.Path.ToPath Network.AWS.Polly.GetLexicon.GetLexicon
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.GetLexicon.GetLexicon


-- | Returns the list of voices that are available for use when requesting
--   speech synthesis. Each voice speaks a specified language, is either
--   male or female, and is identified by an ID, which is the ASCII version
--   of the voice name.
--   
--   When synthesizing speech ( <tt>SynthesizeSpeech</tt> ), you provide
--   the voice ID for the voice you want from the list of voices returned
--   by <tt>DescribeVoices</tt>.
--   
--   For example, you want your news reader application to read news in a
--   specific language, but giving a user the option to choose the voice.
--   Using the <tt>DescribeVoices</tt> operation you can provide the user
--   with a list of available voices to select from.
--   
--   You can optionally specify a language code to filter the available
--   voices. For example, if you specify <tt>en-US</tt>, the operation
--   returns a list of all available US English voices.
--   
--   This operation requires permissions to perform the
--   <tt>polly:DescribeVoices</tt> action.
--   
--   This operation returns paginated results.
module Network.AWS.Polly.DescribeVoices

-- | <i>See:</i> <a>newDescribeVoices</a> smart constructor.
data DescribeVoices
DescribeVoices' :: Maybe LanguageCode -> Maybe Text -> Maybe Bool -> Maybe Engine -> DescribeVoices

-- | The language identification tag (ISO 639 code for the language
--   name-ISO 3166 country code) for filtering the list of voices returned.
--   If you don't specify this optional parameter, all available voices are
--   returned.
[$sel:languageCode:DescribeVoices'] :: DescribeVoices -> Maybe LanguageCode

-- | An opaque pagination token returned from the previous
--   <tt>DescribeVoices</tt> operation. If present, this indicates where to
--   continue the listing.
[$sel:nextToken:DescribeVoices'] :: DescribeVoices -> Maybe Text

-- | Boolean value indicating whether to return any bilingual voices that
--   use the specified language as an additional language. For instance, if
--   you request all languages that use US English (es-US), and there is an
--   Italian voice that speaks both Italian (it-IT) and US English, that
--   voice will be included if you specify <tt>yes</tt> but not if you
--   specify <tt>no</tt>.
[$sel:includeAdditionalLanguageCodes:DescribeVoices'] :: DescribeVoices -> Maybe Bool

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) used by
--   Amazon Polly when processing input text for speech synthesis.
[$sel:engine:DescribeVoices'] :: DescribeVoices -> Maybe Engine

-- | Create a value of <a>DescribeVoices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:DescribeVoices'</a>,
--   <a>describeVoices_languageCode</a> - The language identification tag
--   (ISO 639 code for the language name-ISO 3166 country code) for
--   filtering the list of voices returned. If you don't specify this
--   optional parameter, all available voices are returned.
--   
--   <a>$sel:nextToken:DescribeVoices'</a>, <a>describeVoices_nextToken</a>
--   - An opaque pagination token returned from the previous
--   <tt>DescribeVoices</tt> operation. If present, this indicates where to
--   continue the listing.
--   
--   <a>$sel:includeAdditionalLanguageCodes:DescribeVoices'</a>,
--   <a>describeVoices_includeAdditionalLanguageCodes</a> - Boolean value
--   indicating whether to return any bilingual voices that use the
--   specified language as an additional language. For instance, if you
--   request all languages that use US English (es-US), and there is an
--   Italian voice that speaks both Italian (it-IT) and US English, that
--   voice will be included if you specify <tt>yes</tt> but not if you
--   specify <tt>no</tt>.
--   
--   <a>$sel:engine:DescribeVoices'</a>, <a>describeVoices_engine</a> -
--   Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) used by
--   Amazon Polly when processing input text for speech synthesis.
newDescribeVoices :: DescribeVoices

-- | The language identification tag (ISO 639 code for the language
--   name-ISO 3166 country code) for filtering the list of voices returned.
--   If you don't specify this optional parameter, all available voices are
--   returned.
describeVoices_languageCode :: Lens' DescribeVoices (Maybe LanguageCode)

-- | An opaque pagination token returned from the previous
--   <tt>DescribeVoices</tt> operation. If present, this indicates where to
--   continue the listing.
describeVoices_nextToken :: Lens' DescribeVoices (Maybe Text)

-- | Boolean value indicating whether to return any bilingual voices that
--   use the specified language as an additional language. For instance, if
--   you request all languages that use US English (es-US), and there is an
--   Italian voice that speaks both Italian (it-IT) and US English, that
--   voice will be included if you specify <tt>yes</tt> but not if you
--   specify <tt>no</tt>.
describeVoices_includeAdditionalLanguageCodes :: Lens' DescribeVoices (Maybe Bool)

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) used by
--   Amazon Polly when processing input text for speech synthesis.
describeVoices_engine :: Lens' DescribeVoices (Maybe Engine)

-- | <i>See:</i> <a>newDescribeVoicesResponse</a> smart constructor.
data DescribeVoicesResponse
DescribeVoicesResponse' :: Maybe Text -> Maybe [Voice] -> Int -> DescribeVoicesResponse

-- | The pagination token to use in the next request to continue the
--   listing of voices. <tt>NextToken</tt> is returned only if the response
--   is truncated.
[$sel:nextToken:DescribeVoicesResponse'] :: DescribeVoicesResponse -> Maybe Text

-- | A list of voices with their properties.
[$sel:voices:DescribeVoicesResponse'] :: DescribeVoicesResponse -> Maybe [Voice]

-- | The response's http status code.
[$sel:httpStatus:DescribeVoicesResponse'] :: DescribeVoicesResponse -> Int

-- | Create a value of <a>DescribeVoicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeVoices'</a>,
--   <a>describeVoicesResponse_nextToken</a> - The pagination token to use
--   in the next request to continue the listing of voices.
--   <tt>NextToken</tt> is returned only if the response is truncated.
--   
--   <a>$sel:voices:DescribeVoicesResponse'</a>,
--   <a>describeVoicesResponse_voices</a> - A list of voices with their
--   properties.
--   
--   <a>$sel:httpStatus:DescribeVoicesResponse'</a>,
--   <a>describeVoicesResponse_httpStatus</a> - The response's http status
--   code.
newDescribeVoicesResponse :: Int -> DescribeVoicesResponse

-- | The pagination token to use in the next request to continue the
--   listing of voices. <tt>NextToken</tt> is returned only if the response
--   is truncated.
describeVoicesResponse_nextToken :: Lens' DescribeVoicesResponse (Maybe Text)

-- | A list of voices with their properties.
describeVoicesResponse_voices :: Lens' DescribeVoicesResponse (Maybe [Voice])

-- | The response's http status code.
describeVoicesResponse_httpStatus :: Lens' DescribeVoicesResponse Int
instance GHC.Generics.Generic Network.AWS.Polly.DescribeVoices.DescribeVoices
instance GHC.Show.Show Network.AWS.Polly.DescribeVoices.DescribeVoices
instance GHC.Read.Read Network.AWS.Polly.DescribeVoices.DescribeVoices
instance GHC.Classes.Eq Network.AWS.Polly.DescribeVoices.DescribeVoices
instance GHC.Generics.Generic Network.AWS.Polly.DescribeVoices.DescribeVoicesResponse
instance GHC.Show.Show Network.AWS.Polly.DescribeVoices.DescribeVoicesResponse
instance GHC.Read.Read Network.AWS.Polly.DescribeVoices.DescribeVoicesResponse
instance GHC.Classes.Eq Network.AWS.Polly.DescribeVoices.DescribeVoicesResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Polly.DescribeVoices.DescribeVoices
instance Control.DeepSeq.NFData Network.AWS.Polly.DescribeVoices.DescribeVoicesResponse
instance Network.AWS.Pager.AWSPager Network.AWS.Polly.DescribeVoices.DescribeVoices
instance Data.Hashable.Class.Hashable Network.AWS.Polly.DescribeVoices.DescribeVoices
instance Control.DeepSeq.NFData Network.AWS.Polly.DescribeVoices.DescribeVoices
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Polly.DescribeVoices.DescribeVoices
instance Network.AWS.Data.Path.ToPath Network.AWS.Polly.DescribeVoices.DescribeVoices
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.DescribeVoices.DescribeVoices


-- | Deletes the specified pronunciation lexicon stored in an Amazon Web
--   Services Region. A lexicon which has been deleted is not available for
--   speech synthesis, nor is it possible to retrieve it using either the
--   <tt>GetLexicon</tt> or <tt>ListLexicon</tt> APIs.
--   
--   For more information, see <a>Managing Lexicons</a>.
module Network.AWS.Polly.DeleteLexicon

-- | <i>See:</i> <a>newDeleteLexicon</a> smart constructor.
data DeleteLexicon
DeleteLexicon' :: Text -> DeleteLexicon

-- | The name of the lexicon to delete. Must be an existing lexicon in the
--   region.
[$sel:name:DeleteLexicon'] :: DeleteLexicon -> Text

-- | Create a value of <a>DeleteLexicon</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteLexicon'</a>, <a>deleteLexicon_name</a> - The name
--   of the lexicon to delete. Must be an existing lexicon in the region.
newDeleteLexicon :: Text -> DeleteLexicon

-- | The name of the lexicon to delete. Must be an existing lexicon in the
--   region.
deleteLexicon_name :: Lens' DeleteLexicon Text

-- | <i>See:</i> <a>newDeleteLexiconResponse</a> smart constructor.
data DeleteLexiconResponse
DeleteLexiconResponse' :: Int -> DeleteLexiconResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteLexiconResponse'] :: DeleteLexiconResponse -> Int

-- | Create a value of <a>DeleteLexiconResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLexiconResponse'</a>,
--   <a>deleteLexiconResponse_httpStatus</a> - The response's http status
--   code.
newDeleteLexiconResponse :: Int -> DeleteLexiconResponse

-- | The response's http status code.
deleteLexiconResponse_httpStatus :: Lens' DeleteLexiconResponse Int
instance GHC.Generics.Generic Network.AWS.Polly.DeleteLexicon.DeleteLexicon
instance GHC.Show.Show Network.AWS.Polly.DeleteLexicon.DeleteLexicon
instance GHC.Read.Read Network.AWS.Polly.DeleteLexicon.DeleteLexicon
instance GHC.Classes.Eq Network.AWS.Polly.DeleteLexicon.DeleteLexicon
instance GHC.Generics.Generic Network.AWS.Polly.DeleteLexicon.DeleteLexiconResponse
instance GHC.Show.Show Network.AWS.Polly.DeleteLexicon.DeleteLexiconResponse
instance GHC.Read.Read Network.AWS.Polly.DeleteLexicon.DeleteLexiconResponse
instance GHC.Classes.Eq Network.AWS.Polly.DeleteLexicon.DeleteLexiconResponse
instance Network.AWS.Types.AWSRequest Network.AWS.Polly.DeleteLexicon.DeleteLexicon
instance Control.DeepSeq.NFData Network.AWS.Polly.DeleteLexicon.DeleteLexiconResponse
instance Data.Hashable.Class.Hashable Network.AWS.Polly.DeleteLexicon.DeleteLexicon
instance Control.DeepSeq.NFData Network.AWS.Polly.DeleteLexicon.DeleteLexicon
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.Polly.DeleteLexicon.DeleteLexicon
instance Network.AWS.Data.Path.ToPath Network.AWS.Polly.DeleteLexicon.DeleteLexicon
instance Network.AWS.Data.Query.ToQuery Network.AWS.Polly.DeleteLexicon.DeleteLexicon


module Network.AWS.Polly.Lens

-- | The Amazon Polly generated identifier for a speech synthesis task.
getSpeechSynthesisTask_taskId :: Lens' GetSpeechSynthesisTask Text

-- | SynthesisTask object that provides information from the requested
--   task, including output format, creation time, task status, and so on.
getSpeechSynthesisTaskResponse_synthesisTask :: Lens' GetSpeechSynthesisTaskResponse (Maybe SynthesisTask)

-- | The response's http status code.
getSpeechSynthesisTaskResponse_httpStatus :: Lens' GetSpeechSynthesisTaskResponse Int

-- | Name of the lexicon.
getLexicon_name :: Lens' GetLexicon Text

-- | Metadata of the lexicon, including phonetic alphabetic used, language
--   code, lexicon ARN, number of lexemes defined in the lexicon, and size
--   of lexicon in bytes.
getLexiconResponse_lexiconAttributes :: Lens' GetLexiconResponse (Maybe LexiconAttributes)

-- | Lexicon object that provides name and the string content of the
--   lexicon.
getLexiconResponse_lexicon :: Lens' GetLexiconResponse (Maybe Lexicon)

-- | The response's http status code.
getLexiconResponse_httpStatus :: Lens' GetLexiconResponse Int

-- | The name of the lexicon to delete. Must be an existing lexicon in the
--   region.
deleteLexicon_name :: Lens' DeleteLexicon Text

-- | The response's http status code.
deleteLexiconResponse_httpStatus :: Lens' DeleteLexiconResponse Int

-- | An opaque pagination token returned from previous
--   <tt>ListLexicons</tt> operation. If present, indicates where to
--   continue the list of lexicons.
listLexicons_nextToken :: Lens' ListLexicons (Maybe Text)

-- | The pagination token to use in the next request to continue the
--   listing of lexicons. <tt>NextToken</tt> is returned only if the
--   response is truncated.
listLexiconsResponse_nextToken :: Lens' ListLexiconsResponse (Maybe Text)

-- | A list of lexicon names and attributes.
listLexiconsResponse_lexicons :: Lens' ListLexiconsResponse (Maybe [LexiconDescription])

-- | The response's http status code.
listLexiconsResponse_httpStatus :: Lens' ListLexiconsResponse Int

-- | The language identification tag (ISO 639 code for the language
--   name-ISO 3166 country code) for filtering the list of voices returned.
--   If you don't specify this optional parameter, all available voices are
--   returned.
describeVoices_languageCode :: Lens' DescribeVoices (Maybe LanguageCode)

-- | An opaque pagination token returned from the previous
--   <tt>DescribeVoices</tt> operation. If present, this indicates where to
--   continue the listing.
describeVoices_nextToken :: Lens' DescribeVoices (Maybe Text)

-- | Boolean value indicating whether to return any bilingual voices that
--   use the specified language as an additional language. For instance, if
--   you request all languages that use US English (es-US), and there is an
--   Italian voice that speaks both Italian (it-IT) and US English, that
--   voice will be included if you specify <tt>yes</tt> but not if you
--   specify <tt>no</tt>.
describeVoices_includeAdditionalLanguageCodes :: Lens' DescribeVoices (Maybe Bool)

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) used by
--   Amazon Polly when processing input text for speech synthesis.
describeVoices_engine :: Lens' DescribeVoices (Maybe Engine)

-- | The pagination token to use in the next request to continue the
--   listing of voices. <tt>NextToken</tt> is returned only if the response
--   is truncated.
describeVoicesResponse_nextToken :: Lens' DescribeVoicesResponse (Maybe Text)

-- | A list of voices with their properties.
describeVoicesResponse_voices :: Lens' DescribeVoicesResponse (Maybe [Voice])

-- | The response's http status code.
describeVoicesResponse_httpStatus :: Lens' DescribeVoicesResponse Int

-- | Optional language code for the Speech Synthesis request. This is only
--   necessary if using a bilingual voice, such as Aditi, which can be used
--   for either Indian English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
startSpeechSynthesisTask_languageCode :: Lens' StartSpeechSynthesisTask (Maybe LanguageCode)

-- | List of one or more pronunciation lexicon names you want the service
--   to apply during synthesis. Lexicons are applied only if the language
--   of the lexicon is the same as the language of the voice.
startSpeechSynthesisTask_lexiconNames :: Lens' StartSpeechSynthesisTask (Maybe [Text])

-- | The type of speech marks returned for the input text.
startSpeechSynthesisTask_speechMarkTypes :: Lens' StartSpeechSynthesisTask (Maybe [SpeechMarkType])

-- | Specifies whether the input text is plain text or SSML. The default
--   value is plain text.
startSpeechSynthesisTask_textType :: Lens' StartSpeechSynthesisTask (Maybe TextType)

-- | The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
startSpeechSynthesisTask_sampleRate :: Lens' StartSpeechSynthesisTask (Maybe Text)

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. Using a
--   voice that is not supported for the engine selected will result in an
--   error.
startSpeechSynthesisTask_engine :: Lens' StartSpeechSynthesisTask (Maybe Engine)

-- | The Amazon S3 key prefix for the output speech file.
startSpeechSynthesisTask_outputS3KeyPrefix :: Lens' StartSpeechSynthesisTask (Maybe Text)

-- | ARN for the SNS topic optionally used for providing status
--   notification for a speech synthesis task.
startSpeechSynthesisTask_snsTopicArn :: Lens' StartSpeechSynthesisTask (Maybe Text)

-- | The format in which the returned output will be encoded. For audio
--   stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this
--   will be json.
startSpeechSynthesisTask_outputFormat :: Lens' StartSpeechSynthesisTask OutputFormat

-- | Amazon S3 bucket name to which the output file will be saved.
startSpeechSynthesisTask_outputS3BucketName :: Lens' StartSpeechSynthesisTask Text

-- | The input text to synthesize. If you specify ssml as the TextType,
--   follow the SSML format for the input text.
startSpeechSynthesisTask_text :: Lens' StartSpeechSynthesisTask Text

-- | Voice ID to use for the synthesis.
startSpeechSynthesisTask_voiceId :: Lens' StartSpeechSynthesisTask VoiceId

-- | SynthesisTask object that provides information and attributes about a
--   newly submitted speech synthesis task.
startSpeechSynthesisTaskResponse_synthesisTask :: Lens' StartSpeechSynthesisTaskResponse (Maybe SynthesisTask)

-- | The response's http status code.
startSpeechSynthesisTaskResponse_httpStatus :: Lens' StartSpeechSynthesisTaskResponse Int

-- | Name of the lexicon. The name must follow the regular express format
--   [0-9A-Za-z]{1,20}. That is, the name is a case-sensitive alphanumeric
--   string up to 20 characters long.
putLexicon_name :: Lens' PutLexicon Text

-- | Content of the PLS lexicon as string data.
putLexicon_content :: Lens' PutLexicon Text

-- | The response's http status code.
putLexiconResponse_httpStatus :: Lens' PutLexiconResponse Int

-- | Optional language code for the Synthesize Speech request. This is only
--   necessary if using a bilingual voice, such as Aditi, which can be used
--   for either Indian English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
synthesizeSpeech_languageCode :: Lens' SynthesizeSpeech (Maybe LanguageCode)

-- | List of one or more pronunciation lexicon names you want the service
--   to apply during synthesis. Lexicons are applied only if the language
--   of the lexicon is the same as the language of the voice. For
--   information about storing lexicons, see <a>PutLexicon</a>.
synthesizeSpeech_lexiconNames :: Lens' SynthesizeSpeech (Maybe [Text])

-- | The type of speech marks returned for the input text.
synthesizeSpeech_speechMarkTypes :: Lens' SynthesizeSpeech (Maybe [SpeechMarkType])

-- | Specifies whether the input text is plain text or SSML. The default
--   value is plain text. For more information, see <a>Using SSML</a>.
synthesizeSpeech_textType :: Lens' SynthesizeSpeech (Maybe TextType)

-- | The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
synthesizeSpeech_sampleRate :: Lens' SynthesizeSpeech (Maybe Text)

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. For
--   information on Amazon Polly voices and which voices are available in
--   standard-only, NTTS-only, and both standard and NTTS formats, see
--   <a>Available Voices</a>.
--   
--   <b>NTTS-only voices</b>
--   
--   When using NTTS-only voices such as Kevin (en-US), this parameter is
--   required and must be set to <tt>neural</tt>. If the engine is not
--   specified, or is set to <tt>standard</tt>, this will result in an
--   error.
--   
--   Type: String
--   
--   Valid Values: <tt>standard</tt> | <tt>neural</tt>
--   
--   Required: Yes
--   
--   <b>Standard voices</b>
--   
--   For standard voices, this is not required; the engine parameter
--   defaults to <tt>standard</tt>. If the engine is not specified, or is
--   set to <tt>standard</tt> and an NTTS-only voice is selected, this will
--   result in an error.
synthesizeSpeech_engine :: Lens' SynthesizeSpeech (Maybe Engine)

-- | The format in which the returned output will be encoded. For audio
--   stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this
--   will be json.
--   
--   When pcm is used, the content returned is audio/pcm in a signed
--   16-bit, 1 channel (mono), little-endian format.
synthesizeSpeech_outputFormat :: Lens' SynthesizeSpeech OutputFormat

-- | Input text to synthesize. If you specify <tt>ssml</tt> as the
--   <tt>TextType</tt>, follow the SSML format for the input text.
synthesizeSpeech_text :: Lens' SynthesizeSpeech Text

-- | Voice ID to use for the synthesis. You can get a list of available
--   voice IDs by calling the <a>DescribeVoices</a> operation.
synthesizeSpeech_voiceId :: Lens' SynthesizeSpeech VoiceId

-- | Specifies the type audio stream. This should reflect the
--   <tt>OutputFormat</tt> parameter in your request.
--   
--   <ul>
--   <li>If you request <tt>mp3</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/mpeg.</li>
--   <li>If you request <tt>ogg_vorbis</tt> as the <tt>OutputFormat</tt>,
--   the <tt>ContentType</tt> returned is audio/ogg.</li>
--   <li>If you request <tt>pcm</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/pcm in a signed 16-bit, 1
--   channel (mono), little-endian format.</li>
--   <li>If you request <tt>json</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/json.</li>
--   </ul>
synthesizeSpeechResponse_contentType :: Lens' SynthesizeSpeechResponse (Maybe Text)

-- | Number of characters synthesized.
synthesizeSpeechResponse_requestCharacters :: Lens' SynthesizeSpeechResponse (Maybe Int)

-- | The response's http status code.
synthesizeSpeechResponse_httpStatus :: Lens' SynthesizeSpeechResponse Int

-- | Stream containing the synthesized speech.
synthesizeSpeechResponse_audioStream :: Lens' SynthesizeSpeechResponse ResponseBody

-- | Status of the speech synthesis tasks returned in a List operation
listSpeechSynthesisTasks_status :: Lens' ListSpeechSynthesisTasks (Maybe TaskStatus)

-- | The pagination token to use in the next request to continue the
--   listing of speech synthesis tasks.
listSpeechSynthesisTasks_nextToken :: Lens' ListSpeechSynthesisTasks (Maybe Text)

-- | Maximum number of speech synthesis tasks returned in a List operation.
listSpeechSynthesisTasks_maxResults :: Lens' ListSpeechSynthesisTasks (Maybe Natural)

-- | An opaque pagination token returned from the previous List operation
--   in this request. If present, this indicates where to continue the
--   listing.
listSpeechSynthesisTasksResponse_nextToken :: Lens' ListSpeechSynthesisTasksResponse (Maybe Text)

-- | List of SynthesisTask objects that provides information from the
--   specified task in the list request, including output format, creation
--   time, task status, and so on.
listSpeechSynthesisTasksResponse_synthesisTasks :: Lens' ListSpeechSynthesisTasksResponse (Maybe [SynthesisTask])

-- | The response's http status code.
listSpeechSynthesisTasksResponse_httpStatus :: Lens' ListSpeechSynthesisTasksResponse Int

-- | Name of the lexicon.
lexicon_name :: Lens' Lexicon (Maybe Text)

-- | Lexicon content in string format. The content of a lexicon must be in
--   PLS format.
lexicon_content :: Lens' Lexicon (Maybe Text)

-- | Language code that the lexicon applies to. A lexicon with a language
--   code such as "en" would be applied to all English languages (en-GB,
--   en-US, en-AUS, en-WLS, and so on.
lexiconAttributes_languageCode :: Lens' LexiconAttributes (Maybe LanguageCode)

-- | Phonetic alphabet used in the lexicon. Valid values are <tt>ipa</tt>
--   and <tt>x-sampa</tt>.
lexiconAttributes_alphabet :: Lens' LexiconAttributes (Maybe Text)

-- | Amazon Resource Name (ARN) of the lexicon.
lexiconAttributes_lexiconArn :: Lens' LexiconAttributes (Maybe Text)

-- | Number of lexemes in the lexicon.
lexiconAttributes_lexemesCount :: Lens' LexiconAttributes (Maybe Int)

-- | Date lexicon was last modified (a timestamp value).
lexiconAttributes_lastModified :: Lens' LexiconAttributes (Maybe UTCTime)

-- | Total size of the lexicon, in characters.
lexiconAttributes_size :: Lens' LexiconAttributes (Maybe Int)

-- | Name of the lexicon.
lexiconDescription_name :: Lens' LexiconDescription (Maybe Text)

-- | Provides lexicon metadata.
lexiconDescription_attributes :: Lens' LexiconDescription (Maybe LexiconAttributes)

-- | Optional language code for a synthesis task. This is only necessary if
--   using a bilingual voice, such as Aditi, which can be used for either
--   Indian English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
synthesisTask_languageCode :: Lens' SynthesisTask (Maybe LanguageCode)

-- | Timestamp for the time the synthesis task was started.
synthesisTask_creationTime :: Lens' SynthesisTask (Maybe UTCTime)

-- | Pathway for the output speech file.
synthesisTask_outputUri :: Lens' SynthesisTask (Maybe Text)

-- | List of one or more pronunciation lexicon names you want the service
--   to apply during synthesis. Lexicons are applied only if the language
--   of the lexicon is the same as the language of the voice.
synthesisTask_lexiconNames :: Lens' SynthesisTask (Maybe [Text])

-- | The type of speech marks returned for the input text.
synthesisTask_speechMarkTypes :: Lens' SynthesisTask (Maybe [SpeechMarkType])

-- | Voice ID to use for the synthesis.
synthesisTask_voiceId :: Lens' SynthesisTask (Maybe VoiceId)

-- | The Amazon Polly generated identifier for a speech synthesis task.
synthesisTask_taskId :: Lens' SynthesisTask (Maybe Text)

-- | Specifies whether the input text is plain text or SSML. The default
--   value is plain text.
synthesisTask_textType :: Lens' SynthesisTask (Maybe TextType)

-- | The format in which the returned output will be encoded. For audio
--   stream, this will be mp3, ogg_vorbis, or pcm. For speech marks, this
--   will be json.
synthesisTask_outputFormat :: Lens' SynthesisTask (Maybe OutputFormat)

-- | The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
synthesisTask_sampleRate :: Lens' SynthesisTask (Maybe Text)

-- | Current status of the individual speech synthesis task.
synthesisTask_taskStatus :: Lens' SynthesisTask (Maybe TaskStatus)

-- | Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. Using a
--   voice that is not supported for the engine selected will result in an
--   error.
synthesisTask_engine :: Lens' SynthesisTask (Maybe Engine)

-- | Number of billable characters synthesized.
synthesisTask_requestCharacters :: Lens' SynthesisTask (Maybe Int)

-- | Reason for the current status of a specific speech synthesis task,
--   including errors if the task has failed.
synthesisTask_taskStatusReason :: Lens' SynthesisTask (Maybe Text)

-- | ARN for the SNS topic optionally used for providing status
--   notification for a speech synthesis task.
synthesisTask_snsTopicArn :: Lens' SynthesisTask (Maybe Text)

-- | Language code of the voice.
voice_languageCode :: Lens' Voice (Maybe LanguageCode)

-- | Amazon Polly assigned voice ID. This is the ID that you specify when
--   calling the <tt>SynthesizeSpeech</tt> operation.
voice_id :: Lens' Voice (Maybe VoiceId)

-- | Name of the voice (for example, Salli, Kendra, etc.). This provides a
--   human readable voice name that you might display in your application.
voice_name :: Lens' Voice (Maybe Text)

-- | Gender of the voice.
voice_gender :: Lens' Voice (Maybe Gender)

-- | Specifies which engines (<tt>standard</tt> or <tt>neural</tt>) that
--   are supported by a given voice.
voice_supportedEngines :: Lens' Voice (Maybe [Engine])

-- | Additional codes for languages available for the specified voice in
--   addition to its default language.
--   
--   For example, the default language for Aditi is Indian English (en-IN)
--   because it was first used for that language. Since Aditi is bilingual
--   and fluent in both Indian English and Hindi, this parameter would show
--   the code <tt>hi-IN</tt>.
voice_additionalLanguageCodes :: Lens' Voice (Maybe [LanguageCode])

-- | Human readable name of the language in English.
voice_languageName :: Lens' Voice (Maybe Text)


module Network.AWS.Polly.Waiters


-- | Derived from API version <tt>2016-06-10</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Polly is a web service that makes it easy to synthesize speech
--   from text.
--   
--   The Amazon Polly service provides API operations for synthesizing
--   high-quality speech from plain text and Speech Synthesis Markup
--   Language (SSML), along with managing pronunciations lexicons that
--   enable you to get the best results for your application domain.
module Network.AWS.Polly

-- | API version <tt>2016-06-10</tt> of the Amazon Polly SDK configuration.
defaultService :: Service

-- | The SSML you provided is invalid. Verify the SSML syntax, spelling of
--   tags and values, and then try again.
_InvalidSsmlException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Polly can't find the specified lexicon. Verify that the
--   lexicon's name is spelled correctly, and then try again.
_InvalidLexiconException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided Amazon S3 key prefix is invalid. Please provide a valid
--   S3 object key name.
_InvalidS3KeyException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Amazon Polly can't find the specified lexicon. This could be caused by
--   a lexicon that is missing, its name is misspelled or specifying a
--   lexicon that is in a different region.
--   
--   Verify that the lexicon exists, is in the region (see ListLexicons)
--   and that you spelled its name is spelled correctly. Then try again.
_LexiconNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum size of the lexeme would be exceeded by this operation.
_MaxLexemeLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The value of the "Text" parameter is longer than the accepted limits.
--   For the <tt>SynthesizeSpeech</tt> API, the limit for input text is a
--   maximum of 6000 characters total, of which no more than 3000 can be
--   billed characters. For the <tt>StartSpeechSynthesisTask</tt> API, the
--   maximum is 200,000 characters, of which no more than 100,000 can be
--   billed characters. SSML tags are not counted as billed characters.
_TextLengthExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The Speech Synthesis task with requested Task ID cannot be found.
_SynthesisTaskNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified sample rate is not valid.
_InvalidSampleRateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An unknown condition has caused a service failure.
_ServiceFailureException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Speech marks are not supported for the <tt>OutputFormat</tt> selected.
--   Speech marks are only available for content in <tt>json</tt> format.
_MarksNotSupportedForFormatException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum number of lexicons would be exceeded by this operation.
_MaxLexiconsNumberExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The alphabet specified by the lexicon is not a supported alphabet.
--   Valid values are <tt>x-sampa</tt> and <tt>ipa</tt>.
_UnsupportedPlsAlphabetException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The NextToken is invalid. Verify that it's spelled correctly, and then
--   try again.
_InvalidNextTokenException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The language specified in the lexicon is unsupported. For a list of
--   supported languages, see <a>Lexicon Attributes</a>.
_UnsupportedPlsLanguageException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided SNS topic ARN is invalid. Please provide a valid SNS
--   topic ARN and try again.
_InvalidSnsTopicArnException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided Task ID is not valid. Please provide a valid Task ID and
--   try again.
_InvalidTaskIdException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The language specified is not currently supported by Amazon Polly in
--   this capacity.
_LanguageNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The maximum size of the specified lexicon would be exceeded by this
--   operation.
_LexiconSizeExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The provided Amazon S3 bucket name is invalid. Please check your input
--   with S3 bucket naming requirements and try again.
_InvalidS3BucketException :: AsError a => Getting (First ServiceError) a ServiceError

-- | SSML speech marks are not supported for plain text-type input.
_SsmlMarksNotSupportedForTextTypeException :: AsError a => Getting (First ServiceError) a ServiceError

-- | This engine is not compatible with the voice that you have designated.
--   Choose a new voice that is compatible with the engine or change the
--   engine and restart the operation.
_EngineNotSupportedException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetSpeechSynthesisTask</a> smart constructor.
data GetSpeechSynthesisTask
GetSpeechSynthesisTask' :: Text -> GetSpeechSynthesisTask

-- | Create a value of <a>GetSpeechSynthesisTask</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:taskId:GetSpeechSynthesisTask'</a>,
--   <a>getSpeechSynthesisTask_taskId</a> - The Amazon Polly generated
--   identifier for a speech synthesis task.
newGetSpeechSynthesisTask :: Text -> GetSpeechSynthesisTask

-- | <i>See:</i> <a>newGetSpeechSynthesisTaskResponse</a> smart
--   constructor.
data GetSpeechSynthesisTaskResponse
GetSpeechSynthesisTaskResponse' :: Maybe SynthesisTask -> Int -> GetSpeechSynthesisTaskResponse

-- | Create a value of <a>GetSpeechSynthesisTaskResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:synthesisTask:GetSpeechSynthesisTaskResponse'</a>,
--   <a>getSpeechSynthesisTaskResponse_synthesisTask</a> - SynthesisTask
--   object that provides information from the requested task, including
--   output format, creation time, task status, and so on.
--   
--   <a>$sel:httpStatus:GetSpeechSynthesisTaskResponse'</a>,
--   <a>getSpeechSynthesisTaskResponse_httpStatus</a> - The response's http
--   status code.
newGetSpeechSynthesisTaskResponse :: Int -> GetSpeechSynthesisTaskResponse

-- | <i>See:</i> <a>newGetLexicon</a> smart constructor.
data GetLexicon
GetLexicon' :: Text -> GetLexicon

-- | Create a value of <a>GetLexicon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:GetLexicon'</a>, <a>getLexicon_name</a> - Name of the
--   lexicon.
newGetLexicon :: Text -> GetLexicon

-- | <i>See:</i> <a>newGetLexiconResponse</a> smart constructor.
data GetLexiconResponse
GetLexiconResponse' :: Maybe LexiconAttributes -> Maybe Lexicon -> Int -> GetLexiconResponse

-- | Create a value of <a>GetLexiconResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lexiconAttributes:GetLexiconResponse'</a>,
--   <a>getLexiconResponse_lexiconAttributes</a> - Metadata of the lexicon,
--   including phonetic alphabetic used, language code, lexicon ARN, number
--   of lexemes defined in the lexicon, and size of lexicon in bytes.
--   
--   <a>$sel:lexicon:GetLexiconResponse'</a>,
--   <a>getLexiconResponse_lexicon</a> - Lexicon object that provides name
--   and the string content of the lexicon.
--   
--   <a>$sel:httpStatus:GetLexiconResponse'</a>,
--   <a>getLexiconResponse_httpStatus</a> - The response's http status
--   code.
newGetLexiconResponse :: Int -> GetLexiconResponse

-- | <i>See:</i> <a>newDeleteLexicon</a> smart constructor.
data DeleteLexicon
DeleteLexicon' :: Text -> DeleteLexicon

-- | Create a value of <a>DeleteLexicon</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:DeleteLexicon'</a>, <a>deleteLexicon_name</a> - The name
--   of the lexicon to delete. Must be an existing lexicon in the region.
newDeleteLexicon :: Text -> DeleteLexicon

-- | <i>See:</i> <a>newDeleteLexiconResponse</a> smart constructor.
data DeleteLexiconResponse
DeleteLexiconResponse' :: Int -> DeleteLexiconResponse

-- | Create a value of <a>DeleteLexiconResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteLexiconResponse'</a>,
--   <a>deleteLexiconResponse_httpStatus</a> - The response's http status
--   code.
newDeleteLexiconResponse :: Int -> DeleteLexiconResponse

-- | <i>See:</i> <a>newListLexicons</a> smart constructor.
data ListLexicons
ListLexicons' :: Maybe Text -> ListLexicons

-- | Create a value of <a>ListLexicons</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLexicons'</a>, <a>listLexicons_nextToken</a> -
--   An opaque pagination token returned from previous
--   <tt>ListLexicons</tt> operation. If present, indicates where to
--   continue the list of lexicons.
newListLexicons :: ListLexicons

-- | <i>See:</i> <a>newListLexiconsResponse</a> smart constructor.
data ListLexiconsResponse
ListLexiconsResponse' :: Maybe Text -> Maybe [LexiconDescription] -> Int -> ListLexiconsResponse

-- | Create a value of <a>ListLexiconsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListLexicons'</a>,
--   <a>listLexiconsResponse_nextToken</a> - The pagination token to use in
--   the next request to continue the listing of lexicons.
--   <tt>NextToken</tt> is returned only if the response is truncated.
--   
--   <a>$sel:lexicons:ListLexiconsResponse'</a>,
--   <a>listLexiconsResponse_lexicons</a> - A list of lexicon names and
--   attributes.
--   
--   <a>$sel:httpStatus:ListLexiconsResponse'</a>,
--   <a>listLexiconsResponse_httpStatus</a> - The response's http status
--   code.
newListLexiconsResponse :: Int -> ListLexiconsResponse

-- | <i>See:</i> <a>newDescribeVoices</a> smart constructor.
data DescribeVoices
DescribeVoices' :: Maybe LanguageCode -> Maybe Text -> Maybe Bool -> Maybe Engine -> DescribeVoices

-- | Create a value of <a>DescribeVoices</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:DescribeVoices'</a>,
--   <a>describeVoices_languageCode</a> - The language identification tag
--   (ISO 639 code for the language name-ISO 3166 country code) for
--   filtering the list of voices returned. If you don't specify this
--   optional parameter, all available voices are returned.
--   
--   <a>$sel:nextToken:DescribeVoices'</a>, <a>describeVoices_nextToken</a>
--   - An opaque pagination token returned from the previous
--   <tt>DescribeVoices</tt> operation. If present, this indicates where to
--   continue the listing.
--   
--   <a>$sel:includeAdditionalLanguageCodes:DescribeVoices'</a>,
--   <a>describeVoices_includeAdditionalLanguageCodes</a> - Boolean value
--   indicating whether to return any bilingual voices that use the
--   specified language as an additional language. For instance, if you
--   request all languages that use US English (es-US), and there is an
--   Italian voice that speaks both Italian (it-IT) and US English, that
--   voice will be included if you specify <tt>yes</tt> but not if you
--   specify <tt>no</tt>.
--   
--   <a>$sel:engine:DescribeVoices'</a>, <a>describeVoices_engine</a> -
--   Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) used by
--   Amazon Polly when processing input text for speech synthesis.
newDescribeVoices :: DescribeVoices

-- | <i>See:</i> <a>newDescribeVoicesResponse</a> smart constructor.
data DescribeVoicesResponse
DescribeVoicesResponse' :: Maybe Text -> Maybe [Voice] -> Int -> DescribeVoicesResponse

-- | Create a value of <a>DescribeVoicesResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:DescribeVoices'</a>,
--   <a>describeVoicesResponse_nextToken</a> - The pagination token to use
--   in the next request to continue the listing of voices.
--   <tt>NextToken</tt> is returned only if the response is truncated.
--   
--   <a>$sel:voices:DescribeVoicesResponse'</a>,
--   <a>describeVoicesResponse_voices</a> - A list of voices with their
--   properties.
--   
--   <a>$sel:httpStatus:DescribeVoicesResponse'</a>,
--   <a>describeVoicesResponse_httpStatus</a> - The response's http status
--   code.
newDescribeVoicesResponse :: Int -> DescribeVoicesResponse

-- | <i>See:</i> <a>newStartSpeechSynthesisTask</a> smart constructor.
data StartSpeechSynthesisTask
StartSpeechSynthesisTask' :: Maybe LanguageCode -> Maybe [Text] -> Maybe [SpeechMarkType] -> Maybe TextType -> Maybe Text -> Maybe Engine -> Maybe Text -> Maybe Text -> OutputFormat -> Text -> Text -> VoiceId -> StartSpeechSynthesisTask

-- | Create a value of <a>StartSpeechSynthesisTask</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_languageCode</a> - Optional language code
--   for the Speech Synthesis request. This is only necessary if using a
--   bilingual voice, such as Aditi, which can be used for either Indian
--   English (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
--   
--   <a>$sel:lexiconNames:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_lexiconNames</a> - List of one or more
--   pronunciation lexicon names you want the service to apply during
--   synthesis. Lexicons are applied only if the language of the lexicon is
--   the same as the language of the voice.
--   
--   <a>$sel:speechMarkTypes:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_speechMarkTypes</a> - The type of speech
--   marks returned for the input text.
--   
--   <a>$sel:textType:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_textType</a> - Specifies whether the input
--   text is plain text or SSML. The default value is plain text.
--   
--   <a>$sel:sampleRate:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_sampleRate</a> - The audio frequency
--   specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
--   
--   <a>$sel:engine:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_engine</a> - Specifies the engine
--   (<tt>standard</tt> or <tt>neural</tt>) for Amazon Polly to use when
--   processing input text for speech synthesis. Using a voice that is not
--   supported for the engine selected will result in an error.
--   
--   <a>$sel:outputS3KeyPrefix:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_outputS3KeyPrefix</a> - The Amazon S3 key
--   prefix for the output speech file.
--   
--   <a>$sel:snsTopicArn:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_snsTopicArn</a> - ARN for the SNS topic
--   optionally used for providing status notification for a speech
--   synthesis task.
--   
--   <a>$sel:outputFormat:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_outputFormat</a> - The format in which the
--   returned output will be encoded. For audio stream, this will be mp3,
--   ogg_vorbis, or pcm. For speech marks, this will be json.
--   
--   <a>$sel:outputS3BucketName:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_outputS3BucketName</a> - Amazon S3 bucket
--   name to which the output file will be saved.
--   
--   <a>$sel:text:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_text</a> - The input text to synthesize.
--   If you specify ssml as the TextType, follow the SSML format for the
--   input text.
--   
--   <a>$sel:voiceId:StartSpeechSynthesisTask'</a>,
--   <a>startSpeechSynthesisTask_voiceId</a> - Voice ID to use for the
--   synthesis.
newStartSpeechSynthesisTask :: OutputFormat -> Text -> Text -> VoiceId -> StartSpeechSynthesisTask

-- | <i>See:</i> <a>newStartSpeechSynthesisTaskResponse</a> smart
--   constructor.
data StartSpeechSynthesisTaskResponse
StartSpeechSynthesisTaskResponse' :: Maybe SynthesisTask -> Int -> StartSpeechSynthesisTaskResponse

-- | Create a value of <a>StartSpeechSynthesisTaskResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:synthesisTask:StartSpeechSynthesisTaskResponse'</a>,
--   <a>startSpeechSynthesisTaskResponse_synthesisTask</a> - SynthesisTask
--   object that provides information and attributes about a newly
--   submitted speech synthesis task.
--   
--   <a>$sel:httpStatus:StartSpeechSynthesisTaskResponse'</a>,
--   <a>startSpeechSynthesisTaskResponse_httpStatus</a> - The response's
--   http status code.
newStartSpeechSynthesisTaskResponse :: Int -> StartSpeechSynthesisTaskResponse

-- | <i>See:</i> <a>newPutLexicon</a> smart constructor.
data PutLexicon
PutLexicon' :: Text -> Sensitive Text -> PutLexicon

-- | Create a value of <a>PutLexicon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:PutLexicon'</a>, <a>putLexicon_name</a> - Name of the
--   lexicon. The name must follow the regular express format
--   [0-9A-Za-z]{1,20}. That is, the name is a case-sensitive alphanumeric
--   string up to 20 characters long.
--   
--   <a>$sel:content:PutLexicon'</a>, <a>putLexicon_content</a> - Content
--   of the PLS lexicon as string data.
newPutLexicon :: Text -> Text -> PutLexicon

-- | <i>See:</i> <a>newPutLexiconResponse</a> smart constructor.
data PutLexiconResponse
PutLexiconResponse' :: Int -> PutLexiconResponse

-- | Create a value of <a>PutLexiconResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:PutLexiconResponse'</a>,
--   <a>putLexiconResponse_httpStatus</a> - The response's http status
--   code.
newPutLexiconResponse :: Int -> PutLexiconResponse

-- | <i>See:</i> <a>newSynthesizeSpeech</a> smart constructor.
data SynthesizeSpeech
SynthesizeSpeech' :: Maybe LanguageCode -> Maybe [Text] -> Maybe [SpeechMarkType] -> Maybe TextType -> Maybe Text -> Maybe Engine -> OutputFormat -> Text -> VoiceId -> SynthesizeSpeech

-- | Create a value of <a>SynthesizeSpeech</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_languageCode</a> - Optional language code for the
--   Synthesize Speech request. This is only necessary if using a bilingual
--   voice, such as Aditi, which can be used for either Indian English
--   (en-IN) or Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
--   
--   <a>$sel:lexiconNames:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_lexiconNames</a> - List of one or more
--   pronunciation lexicon names you want the service to apply during
--   synthesis. Lexicons are applied only if the language of the lexicon is
--   the same as the language of the voice. For information about storing
--   lexicons, see <a>PutLexicon</a>.
--   
--   <a>$sel:speechMarkTypes:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_speechMarkTypes</a> - The type of speech marks
--   returned for the input text.
--   
--   <a>$sel:textType:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_textType</a> - Specifies whether the input text is
--   plain text or SSML. The default value is plain text. For more
--   information, see <a>Using SSML</a>.
--   
--   <a>$sel:sampleRate:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_sampleRate</a> - The audio frequency specified in
--   Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
--   
--   <a>$sel:engine:SynthesizeSpeech'</a>, <a>synthesizeSpeech_engine</a> -
--   Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. For
--   information on Amazon Polly voices and which voices are available in
--   standard-only, NTTS-only, and both standard and NTTS formats, see
--   <a>Available Voices</a>.
--   
--   <b>NTTS-only voices</b>
--   
--   When using NTTS-only voices such as Kevin (en-US), this parameter is
--   required and must be set to <tt>neural</tt>. If the engine is not
--   specified, or is set to <tt>standard</tt>, this will result in an
--   error.
--   
--   Type: String
--   
--   Valid Values: <tt>standard</tt> | <tt>neural</tt>
--   
--   Required: Yes
--   
--   <b>Standard voices</b>
--   
--   For standard voices, this is not required; the engine parameter
--   defaults to <tt>standard</tt>. If the engine is not specified, or is
--   set to <tt>standard</tt> and an NTTS-only voice is selected, this will
--   result in an error.
--   
--   <a>$sel:outputFormat:SynthesizeSpeech'</a>,
--   <a>synthesizeSpeech_outputFormat</a> - The format in which the
--   returned output will be encoded. For audio stream, this will be mp3,
--   ogg_vorbis, or pcm. For speech marks, this will be json.
--   
--   When pcm is used, the content returned is audio/pcm in a signed
--   16-bit, 1 channel (mono), little-endian format.
--   
--   <a>$sel:text:SynthesizeSpeech'</a>, <a>synthesizeSpeech_text</a> -
--   Input text to synthesize. If you specify <tt>ssml</tt> as the
--   <tt>TextType</tt>, follow the SSML format for the input text.
--   
--   <a>$sel:voiceId:SynthesizeSpeech'</a>, <a>synthesizeSpeech_voiceId</a>
--   - Voice ID to use for the synthesis. You can get a list of available
--   voice IDs by calling the <a>DescribeVoices</a> operation.
newSynthesizeSpeech :: OutputFormat -> Text -> VoiceId -> SynthesizeSpeech

-- | <i>See:</i> <a>newSynthesizeSpeechResponse</a> smart constructor.
data SynthesizeSpeechResponse
SynthesizeSpeechResponse' :: Maybe Text -> Maybe Int -> Int -> ResponseBody -> SynthesizeSpeechResponse

-- | Create a value of <a>SynthesizeSpeechResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:contentType:SynthesizeSpeechResponse'</a>,
--   <a>synthesizeSpeechResponse_contentType</a> - Specifies the type audio
--   stream. This should reflect the <tt>OutputFormat</tt> parameter in
--   your request.
--   
--   <ul>
--   <li>If you request <tt>mp3</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/mpeg.</li>
--   <li>If you request <tt>ogg_vorbis</tt> as the <tt>OutputFormat</tt>,
--   the <tt>ContentType</tt> returned is audio/ogg.</li>
--   <li>If you request <tt>pcm</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/pcm in a signed 16-bit, 1
--   channel (mono), little-endian format.</li>
--   <li>If you request <tt>json</tt> as the <tt>OutputFormat</tt>, the
--   <tt>ContentType</tt> returned is audio/json.</li>
--   </ul>
--   
--   <a>$sel:requestCharacters:SynthesizeSpeechResponse'</a>,
--   <a>synthesizeSpeechResponse_requestCharacters</a> - Number of
--   characters synthesized.
--   
--   <a>$sel:httpStatus:SynthesizeSpeechResponse'</a>,
--   <a>synthesizeSpeechResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:audioStream:SynthesizeSpeechResponse'</a>,
--   <a>synthesizeSpeechResponse_audioStream</a> - Stream containing the
--   synthesized speech.
newSynthesizeSpeechResponse :: Int -> ResponseBody -> SynthesizeSpeechResponse

-- | <i>See:</i> <a>newListSpeechSynthesisTasks</a> smart constructor.
data ListSpeechSynthesisTasks
ListSpeechSynthesisTasks' :: Maybe TaskStatus -> Maybe Text -> Maybe Natural -> ListSpeechSynthesisTasks

-- | Create a value of <a>ListSpeechSynthesisTasks</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListSpeechSynthesisTasks'</a>,
--   <a>listSpeechSynthesisTasks_status</a> - Status of the speech
--   synthesis tasks returned in a List operation
--   
--   <a>$sel:nextToken:ListSpeechSynthesisTasks'</a>,
--   <a>listSpeechSynthesisTasks_nextToken</a> - The pagination token to
--   use in the next request to continue the listing of speech synthesis
--   tasks.
--   
--   <a>$sel:maxResults:ListSpeechSynthesisTasks'</a>,
--   <a>listSpeechSynthesisTasks_maxResults</a> - Maximum number of speech
--   synthesis tasks returned in a List operation.
newListSpeechSynthesisTasks :: ListSpeechSynthesisTasks

-- | <i>See:</i> <a>newListSpeechSynthesisTasksResponse</a> smart
--   constructor.
data ListSpeechSynthesisTasksResponse
ListSpeechSynthesisTasksResponse' :: Maybe Text -> Maybe [SynthesisTask] -> Int -> ListSpeechSynthesisTasksResponse

-- | Create a value of <a>ListSpeechSynthesisTasksResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListSpeechSynthesisTasks'</a>,
--   <a>listSpeechSynthesisTasksResponse_nextToken</a> - An opaque
--   pagination token returned from the previous List operation in this
--   request. If present, this indicates where to continue the listing.
--   
--   <a>$sel:synthesisTasks:ListSpeechSynthesisTasksResponse'</a>,
--   <a>listSpeechSynthesisTasksResponse_synthesisTasks</a> - List of
--   SynthesisTask objects that provides information from the specified
--   task in the list request, including output format, creation time, task
--   status, and so on.
--   
--   <a>$sel:httpStatus:ListSpeechSynthesisTasksResponse'</a>,
--   <a>listSpeechSynthesisTasksResponse_httpStatus</a> - The response's
--   http status code.
newListSpeechSynthesisTasksResponse :: Int -> ListSpeechSynthesisTasksResponse
newtype Engine
Engine' :: Text -> Engine
[fromEngine] :: Engine -> Text
pattern Engine_Neural :: Engine
pattern Engine_Standard :: Engine
newtype Gender
Gender' :: Text -> Gender
[fromGender] :: Gender -> Text
pattern Gender_Female :: Gender
pattern Gender_Male :: Gender
newtype LanguageCode
LanguageCode' :: Text -> LanguageCode
[fromLanguageCode] :: LanguageCode -> Text
pattern LanguageCode_Arb :: LanguageCode
pattern LanguageCode_Cmn_CN :: LanguageCode
pattern LanguageCode_Cy_GB :: LanguageCode
pattern LanguageCode_Da_DK :: LanguageCode
pattern LanguageCode_De_DE :: LanguageCode
pattern LanguageCode_En_AU :: LanguageCode
pattern LanguageCode_En_GB :: LanguageCode
pattern LanguageCode_En_GB_WLS :: LanguageCode
pattern LanguageCode_En_IN :: LanguageCode
pattern LanguageCode_En_NZ :: LanguageCode
pattern LanguageCode_En_US :: LanguageCode
pattern LanguageCode_En_ZA :: LanguageCode
pattern LanguageCode_Es_ES :: LanguageCode
pattern LanguageCode_Es_MX :: LanguageCode
pattern LanguageCode_Es_US :: LanguageCode
pattern LanguageCode_Fr_CA :: LanguageCode
pattern LanguageCode_Fr_FR :: LanguageCode
pattern LanguageCode_Hi_IN :: LanguageCode
pattern LanguageCode_Is_IS :: LanguageCode
pattern LanguageCode_It_IT :: LanguageCode
pattern LanguageCode_Ja_JP :: LanguageCode
pattern LanguageCode_Ko_KR :: LanguageCode
pattern LanguageCode_Nb_NO :: LanguageCode
pattern LanguageCode_Nl_NL :: LanguageCode
pattern LanguageCode_Pl_PL :: LanguageCode
pattern LanguageCode_Pt_BR :: LanguageCode
pattern LanguageCode_Pt_PT :: LanguageCode
pattern LanguageCode_Ro_RO :: LanguageCode
pattern LanguageCode_Ru_RU :: LanguageCode
pattern LanguageCode_Sv_SE :: LanguageCode
pattern LanguageCode_Tr_TR :: LanguageCode
newtype OutputFormat
OutputFormat' :: Text -> OutputFormat
[fromOutputFormat] :: OutputFormat -> Text
pattern OutputFormat_Json :: OutputFormat
pattern OutputFormat_Mp3 :: OutputFormat
pattern OutputFormat_Ogg_vorbis :: OutputFormat
pattern OutputFormat_Pcm :: OutputFormat
newtype SpeechMarkType
SpeechMarkType' :: Text -> SpeechMarkType
[fromSpeechMarkType] :: SpeechMarkType -> Text
pattern SpeechMarkType_Sentence :: SpeechMarkType
pattern SpeechMarkType_Ssml :: SpeechMarkType
pattern SpeechMarkType_Viseme :: SpeechMarkType
pattern SpeechMarkType_Word :: SpeechMarkType
newtype TaskStatus
TaskStatus' :: Text -> TaskStatus
[fromTaskStatus] :: TaskStatus -> Text
pattern TaskStatus_Completed :: TaskStatus
pattern TaskStatus_Failed :: TaskStatus
pattern TaskStatus_InProgress :: TaskStatus
pattern TaskStatus_Scheduled :: TaskStatus
newtype TextType
TextType' :: Text -> TextType
[fromTextType] :: TextType -> Text
pattern TextType_Ssml :: TextType
pattern TextType_Text :: TextType
newtype VoiceId
VoiceId' :: Text -> VoiceId
[fromVoiceId] :: VoiceId -> Text
pattern VoiceId_Aditi :: VoiceId
pattern VoiceId_Amy :: VoiceId
pattern VoiceId_Aria :: VoiceId
pattern VoiceId_Astrid :: VoiceId
pattern VoiceId_Ayanda :: VoiceId
pattern VoiceId_Bianca :: VoiceId
pattern VoiceId_Brian :: VoiceId
pattern VoiceId_Camila :: VoiceId
pattern VoiceId_Carla :: VoiceId
pattern VoiceId_Carmen :: VoiceId
pattern VoiceId_Celine :: VoiceId
pattern VoiceId_Chantal :: VoiceId
pattern VoiceId_Conchita :: VoiceId
pattern VoiceId_Cristiano :: VoiceId
pattern VoiceId_Dora :: VoiceId
pattern VoiceId_Emma :: VoiceId
pattern VoiceId_Enrique :: VoiceId
pattern VoiceId_Ewa :: VoiceId
pattern VoiceId_Filiz :: VoiceId
pattern VoiceId_Gabrielle :: VoiceId
pattern VoiceId_Geraint :: VoiceId
pattern VoiceId_Giorgio :: VoiceId
pattern VoiceId_Gwyneth :: VoiceId
pattern VoiceId_Hans :: VoiceId
pattern VoiceId_Ines :: VoiceId
pattern VoiceId_Ivy :: VoiceId
pattern VoiceId_Jacek :: VoiceId
pattern VoiceId_Jan :: VoiceId
pattern VoiceId_Joanna :: VoiceId
pattern VoiceId_Joey :: VoiceId
pattern VoiceId_Justin :: VoiceId
pattern VoiceId_Karl :: VoiceId
pattern VoiceId_Kendra :: VoiceId
pattern VoiceId_Kevin :: VoiceId
pattern VoiceId_Kimberly :: VoiceId
pattern VoiceId_Lea :: VoiceId
pattern VoiceId_Liv :: VoiceId
pattern VoiceId_Lotte :: VoiceId
pattern VoiceId_Lucia :: VoiceId
pattern VoiceId_Lupe :: VoiceId
pattern VoiceId_Mads :: VoiceId
pattern VoiceId_Maja :: VoiceId
pattern VoiceId_Marlene :: VoiceId
pattern VoiceId_Mathieu :: VoiceId
pattern VoiceId_Matthew :: VoiceId
pattern VoiceId_Maxim :: VoiceId
pattern VoiceId_Mia :: VoiceId
pattern VoiceId_Miguel :: VoiceId
pattern VoiceId_Mizuki :: VoiceId
pattern VoiceId_Naja :: VoiceId
pattern VoiceId_Nicole :: VoiceId
pattern VoiceId_Olivia :: VoiceId
pattern VoiceId_Penelope :: VoiceId
pattern VoiceId_Raveena :: VoiceId
pattern VoiceId_Ricardo :: VoiceId
pattern VoiceId_Ruben :: VoiceId
pattern VoiceId_Russell :: VoiceId
pattern VoiceId_Salli :: VoiceId
pattern VoiceId_Seoyeon :: VoiceId
pattern VoiceId_Takumi :: VoiceId
pattern VoiceId_Tatyana :: VoiceId
pattern VoiceId_Vicki :: VoiceId
pattern VoiceId_Vitoria :: VoiceId
pattern VoiceId_Zeina :: VoiceId
pattern VoiceId_Zhiyu :: VoiceId

-- | Provides lexicon name and lexicon content in string format. For more
--   information, see <a>Pronunciation Lexicon Specification (PLS) Version
--   1.0</a>.
--   
--   <i>See:</i> <a>newLexicon</a> smart constructor.
data Lexicon
Lexicon' :: Maybe Text -> Maybe (Sensitive Text) -> Lexicon

-- | Create a value of <a>Lexicon</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:Lexicon'</a>, <a>lexicon_name</a> - Name of the lexicon.
--   
--   <a>$sel:content:Lexicon'</a>, <a>lexicon_content</a> - Lexicon content
--   in string format. The content of a lexicon must be in PLS format.
newLexicon :: Lexicon

-- | Contains metadata describing the lexicon such as the number of
--   lexemes, language code, and so on. For more information, see
--   <a>Managing Lexicons</a>.
--   
--   <i>See:</i> <a>newLexiconAttributes</a> smart constructor.
data LexiconAttributes
LexiconAttributes' :: Maybe LanguageCode -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe POSIX -> Maybe Int -> LexiconAttributes

-- | Create a value of <a>LexiconAttributes</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:LexiconAttributes'</a>,
--   <a>lexiconAttributes_languageCode</a> - Language code that the lexicon
--   applies to. A lexicon with a language code such as "en" would be
--   applied to all English languages (en-GB, en-US, en-AUS, en-WLS, and so
--   on.
--   
--   <a>$sel:alphabet:LexiconAttributes'</a>,
--   <a>lexiconAttributes_alphabet</a> - Phonetic alphabet used in the
--   lexicon. Valid values are <tt>ipa</tt> and <tt>x-sampa</tt>.
--   
--   <a>$sel:lexiconArn:LexiconAttributes'</a>,
--   <a>lexiconAttributes_lexiconArn</a> - Amazon Resource Name (ARN) of
--   the lexicon.
--   
--   <a>$sel:lexemesCount:LexiconAttributes'</a>,
--   <a>lexiconAttributes_lexemesCount</a> - Number of lexemes in the
--   lexicon.
--   
--   <a>$sel:lastModified:LexiconAttributes'</a>,
--   <a>lexiconAttributes_lastModified</a> - Date lexicon was last modified
--   (a timestamp value).
--   
--   <a>$sel:size:LexiconAttributes'</a>, <a>lexiconAttributes_size</a> -
--   Total size of the lexicon, in characters.
newLexiconAttributes :: LexiconAttributes

-- | Describes the content of the lexicon.
--   
--   <i>See:</i> <a>newLexiconDescription</a> smart constructor.
data LexiconDescription
LexiconDescription' :: Maybe Text -> Maybe LexiconAttributes -> LexiconDescription

-- | Create a value of <a>LexiconDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:LexiconDescription'</a>, <a>lexiconDescription_name</a> -
--   Name of the lexicon.
--   
--   <a>$sel:attributes:LexiconDescription'</a>,
--   <a>lexiconDescription_attributes</a> - Provides lexicon metadata.
newLexiconDescription :: LexiconDescription

-- | SynthesisTask object that provides information about a speech
--   synthesis task.
--   
--   <i>See:</i> <a>newSynthesisTask</a> smart constructor.
data SynthesisTask
SynthesisTask' :: Maybe LanguageCode -> Maybe POSIX -> Maybe Text -> Maybe [Text] -> Maybe [SpeechMarkType] -> Maybe VoiceId -> Maybe Text -> Maybe TextType -> Maybe OutputFormat -> Maybe Text -> Maybe TaskStatus -> Maybe Engine -> Maybe Int -> Maybe Text -> Maybe Text -> SynthesisTask

-- | Create a value of <a>SynthesisTask</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:SynthesisTask'</a>,
--   <a>synthesisTask_languageCode</a> - Optional language code for a
--   synthesis task. This is only necessary if using a bilingual voice,
--   such as Aditi, which can be used for either Indian English (en-IN) or
--   Hindi (hi-IN).
--   
--   If a bilingual voice is used and no language code is specified, Amazon
--   Polly uses the default language of the bilingual voice. The default
--   language for any voice is the one returned by the
--   <a>DescribeVoices</a> operation for the <tt>LanguageCode</tt>
--   parameter. For example, if no language code is specified, Aditi will
--   use Indian English rather than Hindi.
--   
--   <a>$sel:creationTime:SynthesisTask'</a>,
--   <a>synthesisTask_creationTime</a> - Timestamp for the time the
--   synthesis task was started.
--   
--   <a>$sel:outputUri:SynthesisTask'</a>, <a>synthesisTask_outputUri</a> -
--   Pathway for the output speech file.
--   
--   <a>$sel:lexiconNames:SynthesisTask'</a>,
--   <a>synthesisTask_lexiconNames</a> - List of one or more pronunciation
--   lexicon names you want the service to apply during synthesis. Lexicons
--   are applied only if the language of the lexicon is the same as the
--   language of the voice.
--   
--   <a>$sel:speechMarkTypes:SynthesisTask'</a>,
--   <a>synthesisTask_speechMarkTypes</a> - The type of speech marks
--   returned for the input text.
--   
--   <a>$sel:voiceId:SynthesisTask'</a>, <a>synthesisTask_voiceId</a> -
--   Voice ID to use for the synthesis.
--   
--   <a>$sel:taskId:SynthesisTask'</a>, <a>synthesisTask_taskId</a> - The
--   Amazon Polly generated identifier for a speech synthesis task.
--   
--   <a>$sel:textType:SynthesisTask'</a>, <a>synthesisTask_textType</a> -
--   Specifies whether the input text is plain text or SSML. The default
--   value is plain text.
--   
--   <a>$sel:outputFormat:SynthesisTask'</a>,
--   <a>synthesisTask_outputFormat</a> - The format in which the returned
--   output will be encoded. For audio stream, this will be mp3,
--   ogg_vorbis, or pcm. For speech marks, this will be json.
--   
--   <a>$sel:sampleRate:SynthesisTask'</a>, <a>synthesisTask_sampleRate</a>
--   - The audio frequency specified in Hz.
--   
--   The valid values for mp3 and ogg_vorbis are "8000", "16000", "22050",
--   and "24000". The default value for standard voices is "22050". The
--   default value for neural voices is "24000".
--   
--   Valid values for pcm are "8000" and "16000" The default value is
--   "16000".
--   
--   <a>$sel:taskStatus:SynthesisTask'</a>, <a>synthesisTask_taskStatus</a>
--   - Current status of the individual speech synthesis task.
--   
--   <a>$sel:engine:SynthesisTask'</a>, <a>synthesisTask_engine</a> -
--   Specifies the engine (<tt>standard</tt> or <tt>neural</tt>) for Amazon
--   Polly to use when processing input text for speech synthesis. Using a
--   voice that is not supported for the engine selected will result in an
--   error.
--   
--   <a>$sel:requestCharacters:SynthesisTask'</a>,
--   <a>synthesisTask_requestCharacters</a> - Number of billable characters
--   synthesized.
--   
--   <a>$sel:taskStatusReason:SynthesisTask'</a>,
--   <a>synthesisTask_taskStatusReason</a> - Reason for the current status
--   of a specific speech synthesis task, including errors if the task has
--   failed.
--   
--   <a>$sel:snsTopicArn:SynthesisTask'</a>,
--   <a>synthesisTask_snsTopicArn</a> - ARN for the SNS topic optionally
--   used for providing status notification for a speech synthesis task.
newSynthesisTask :: SynthesisTask

-- | Description of the voice.
--   
--   <i>See:</i> <a>newVoice</a> smart constructor.
data Voice
Voice' :: Maybe LanguageCode -> Maybe VoiceId -> Maybe Text -> Maybe Gender -> Maybe [Engine] -> Maybe [LanguageCode] -> Maybe Text -> Voice

-- | Create a value of <a>Voice</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:languageCode:Voice'</a>, <a>voice_languageCode</a> - Language
--   code of the voice.
--   
--   <a>$sel:id:Voice'</a>, <a>voice_id</a> - Amazon Polly assigned voice
--   ID. This is the ID that you specify when calling the
--   <tt>SynthesizeSpeech</tt> operation.
--   
--   <a>$sel:name:Voice'</a>, <a>voice_name</a> - Name of the voice (for
--   example, Salli, Kendra, etc.). This provides a human readable voice
--   name that you might display in your application.
--   
--   <a>$sel:gender:Voice'</a>, <a>voice_gender</a> - Gender of the voice.
--   
--   <a>$sel:supportedEngines:Voice'</a>, <a>voice_supportedEngines</a> -
--   Specifies which engines (<tt>standard</tt> or <tt>neural</tt>) that
--   are supported by a given voice.
--   
--   <a>$sel:additionalLanguageCodes:Voice'</a>,
--   <a>voice_additionalLanguageCodes</a> - Additional codes for languages
--   available for the specified voice in addition to its default language.
--   
--   For example, the default language for Aditi is Indian English (en-IN)
--   because it was first used for that language. Since Aditi is bilingual
--   and fluent in both Indian English and Hindi, this parameter would show
--   the code <tt>hi-IN</tt>.
--   
--   <a>$sel:languageName:Voice'</a>, <a>voice_languageName</a> - Human
--   readable name of the language in English.
newVoice :: Voice
