-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-kinesis-analyticsZSamazonka-kinesis-analytics
@version 2.0


module Network.AWS.KinesisAnalytics.Types.ApplicationStatus
newtype ApplicationStatus
ApplicationStatus' :: Text -> ApplicationStatus
[fromApplicationStatus] :: ApplicationStatus -> Text
pattern ApplicationStatus_DELETING :: ApplicationStatus
pattern ApplicationStatus_READY :: ApplicationStatus
pattern ApplicationStatus_RUNNING :: ApplicationStatus
pattern ApplicationStatus_STARTING :: ApplicationStatus
pattern ApplicationStatus_STOPPING :: ApplicationStatus
pattern ApplicationStatus_UPDATING :: ApplicationStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Network.AWS.Data.Text.ToText Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Network.AWS.Data.Text.FromText Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance GHC.Classes.Ord Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.ApplicationStatus.ApplicationStatus


module Network.AWS.KinesisAnalytics.Types.ApplicationSummary

-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Provides application summary information, including the application
--   Amazon Resource Name (ARN), name, and status.
--   
--   <i>See:</i> <a>newApplicationSummary</a> smart constructor.
data ApplicationSummary
ApplicationSummary' :: Text -> Text -> ApplicationStatus -> ApplicationSummary

-- | Name of the application.
[$sel:applicationName:ApplicationSummary'] :: ApplicationSummary -> Text

-- | ARN of the application.
[$sel:applicationARN:ApplicationSummary'] :: ApplicationSummary -> Text

-- | Status of the application.
[$sel:applicationStatus:ApplicationSummary'] :: ApplicationSummary -> ApplicationStatus

-- | Create a value of <a>ApplicationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:ApplicationSummary'</a>,
--   <a>applicationSummary_applicationName</a> - Name of the application.
--   
--   <a>$sel:applicationARN:ApplicationSummary'</a>,
--   <a>applicationSummary_applicationARN</a> - ARN of the application.
--   
--   <a>$sel:applicationStatus:ApplicationSummary'</a>,
--   <a>applicationSummary_applicationStatus</a> - Status of the
--   application.
newApplicationSummary :: Text -> Text -> ApplicationStatus -> ApplicationSummary

-- | Name of the application.
applicationSummary_applicationName :: Lens' ApplicationSummary Text

-- | ARN of the application.
applicationSummary_applicationARN :: Lens' ApplicationSummary Text

-- | Status of the application.
applicationSummary_applicationStatus :: Lens' ApplicationSummary ApplicationStatus
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.ApplicationSummary.ApplicationSummary
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.ApplicationSummary.ApplicationSummary
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.ApplicationSummary.ApplicationSummary
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.ApplicationSummary.ApplicationSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.ApplicationSummary.ApplicationSummary
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.ApplicationSummary.ApplicationSummary
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.ApplicationSummary.ApplicationSummary


module Network.AWS.KinesisAnalytics.Types.CSVMappingParameters

-- | Provides additional mapping information when the record format uses
--   delimiters, such as CSV. For example, the following sample records use
--   CSV format, where the records use the <i>'\n'</i> as the row delimiter
--   and a comma (",") as the column delimiter:
--   
--   <pre>
--   "name1", "address1"
--   </pre>
--   
--   <pre>
--   "name2", "address2"
--   </pre>
--   
--   <i>See:</i> <a>newCSVMappingParameters</a> smart constructor.
data CSVMappingParameters
CSVMappingParameters' :: Text -> Text -> CSVMappingParameters

-- | Row delimiter. For example, in a CSV format, <i>'\n'</i> is the
--   typical row delimiter.
[$sel:recordRowDelimiter:CSVMappingParameters'] :: CSVMappingParameters -> Text

-- | Column delimiter. For example, in a CSV format, a comma (",") is the
--   typical column delimiter.
[$sel:recordColumnDelimiter:CSVMappingParameters'] :: CSVMappingParameters -> Text

-- | Create a value of <a>CSVMappingParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordRowDelimiter:CSVMappingParameters'</a>,
--   <a>cSVMappingParameters_recordRowDelimiter</a> - Row delimiter. For
--   example, in a CSV format, <i>'\n'</i> is the typical row delimiter.
--   
--   <a>$sel:recordColumnDelimiter:CSVMappingParameters'</a>,
--   <a>cSVMappingParameters_recordColumnDelimiter</a> - Column delimiter.
--   For example, in a CSV format, a comma (",") is the typical column
--   delimiter.
newCSVMappingParameters :: Text -> Text -> CSVMappingParameters

-- | Row delimiter. For example, in a CSV format, <i>'\n'</i> is the
--   typical row delimiter.
cSVMappingParameters_recordRowDelimiter :: Lens' CSVMappingParameters Text

-- | Column delimiter. For example, in a CSV format, a comma (",") is the
--   typical column delimiter.
cSVMappingParameters_recordColumnDelimiter :: Lens' CSVMappingParameters Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.CSVMappingParameters.CSVMappingParameters
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.CSVMappingParameters.CSVMappingParameters
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.CSVMappingParameters.CSVMappingParameters
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.CSVMappingParameters.CSVMappingParameters
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.CSVMappingParameters.CSVMappingParameters
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.CSVMappingParameters.CSVMappingParameters
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.CSVMappingParameters.CSVMappingParameters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.CSVMappingParameters.CSVMappingParameters


module Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOption

-- | Provides a description of CloudWatch logging options, including the
--   log stream Amazon Resource Name (ARN) and the role ARN.
--   
--   <i>See:</i> <a>newCloudWatchLoggingOption</a> smart constructor.
data CloudWatchLoggingOption
CloudWatchLoggingOption' :: Text -> Text -> CloudWatchLoggingOption

-- | ARN of the CloudWatch log to receive application messages.
[$sel:logStreamARN:CloudWatchLoggingOption'] :: CloudWatchLoggingOption -> Text

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role that is used
--   must have the <tt>PutLogEvents</tt> policy action enabled.
[$sel:roleARN:CloudWatchLoggingOption'] :: CloudWatchLoggingOption -> Text

-- | Create a value of <a>CloudWatchLoggingOption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logStreamARN:CloudWatchLoggingOption'</a>,
--   <a>cloudWatchLoggingOption_logStreamARN</a> - ARN of the CloudWatch
--   log to receive application messages.
--   
--   <a>$sel:roleARN:CloudWatchLoggingOption'</a>,
--   <a>cloudWatchLoggingOption_roleARN</a> - IAM ARN of the role to use to
--   send application messages. Note: To write application messages to
--   CloudWatch, the IAM role that is used must have the
--   <tt>PutLogEvents</tt> policy action enabled.
newCloudWatchLoggingOption :: Text -> Text -> CloudWatchLoggingOption

-- | ARN of the CloudWatch log to receive application messages.
cloudWatchLoggingOption_logStreamARN :: Lens' CloudWatchLoggingOption Text

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role that is used
--   must have the <tt>PutLogEvents</tt> policy action enabled.
cloudWatchLoggingOption_roleARN :: Lens' CloudWatchLoggingOption Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOption.CloudWatchLoggingOption
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOption.CloudWatchLoggingOption
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOption.CloudWatchLoggingOption
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOption.CloudWatchLoggingOption
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOption.CloudWatchLoggingOption
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOption.CloudWatchLoggingOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOption.CloudWatchLoggingOption


module Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionDescription

-- | Description of the CloudWatch logging option.
--   
--   <i>See:</i> <a>newCloudWatchLoggingOptionDescription</a> smart
--   constructor.
data CloudWatchLoggingOptionDescription
CloudWatchLoggingOptionDescription' :: Maybe Text -> Text -> Text -> CloudWatchLoggingOptionDescription

-- | ID of the CloudWatch logging option description.
[$sel:cloudWatchLoggingOptionId:CloudWatchLoggingOptionDescription'] :: CloudWatchLoggingOptionDescription -> Maybe Text

-- | ARN of the CloudWatch log to receive application messages.
[$sel:logStreamARN:CloudWatchLoggingOptionDescription'] :: CloudWatchLoggingOptionDescription -> Text

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role used must have
--   the <tt>PutLogEvents</tt> policy action enabled.
[$sel:roleARN:CloudWatchLoggingOptionDescription'] :: CloudWatchLoggingOptionDescription -> Text

-- | Create a value of <a>CloudWatchLoggingOptionDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cloudWatchLoggingOptionId:CloudWatchLoggingOptionDescription'</a>,
--   <a>cloudWatchLoggingOptionDescription_cloudWatchLoggingOptionId</a> -
--   ID of the CloudWatch logging option description.
--   
--   <a>$sel:logStreamARN:CloudWatchLoggingOptionDescription'</a>,
--   <a>cloudWatchLoggingOptionDescription_logStreamARN</a> - ARN of the
--   CloudWatch log to receive application messages.
--   
--   <a>$sel:roleARN:CloudWatchLoggingOptionDescription'</a>,
--   <a>cloudWatchLoggingOptionDescription_roleARN</a> - IAM ARN of the
--   role to use to send application messages. Note: To write application
--   messages to CloudWatch, the IAM role used must have the
--   <tt>PutLogEvents</tt> policy action enabled.
newCloudWatchLoggingOptionDescription :: Text -> Text -> CloudWatchLoggingOptionDescription

-- | ID of the CloudWatch logging option description.
cloudWatchLoggingOptionDescription_cloudWatchLoggingOptionId :: Lens' CloudWatchLoggingOptionDescription (Maybe Text)

-- | ARN of the CloudWatch log to receive application messages.
cloudWatchLoggingOptionDescription_logStreamARN :: Lens' CloudWatchLoggingOptionDescription Text

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role used must have
--   the <tt>PutLogEvents</tt> policy action enabled.
cloudWatchLoggingOptionDescription_roleARN :: Lens' CloudWatchLoggingOptionDescription Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionDescription.CloudWatchLoggingOptionDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionDescription.CloudWatchLoggingOptionDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionDescription.CloudWatchLoggingOptionDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionDescription.CloudWatchLoggingOptionDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionDescription.CloudWatchLoggingOptionDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionDescription.CloudWatchLoggingOptionDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionDescription.CloudWatchLoggingOptionDescription


module Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionUpdate

-- | Describes CloudWatch logging option updates.
--   
--   <i>See:</i> <a>newCloudWatchLoggingOptionUpdate</a> smart constructor.
data CloudWatchLoggingOptionUpdate
CloudWatchLoggingOptionUpdate' :: Maybe Text -> Maybe Text -> Text -> CloudWatchLoggingOptionUpdate

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role used must have
--   the <tt>PutLogEvents</tt> policy action enabled.
[$sel:roleARNUpdate:CloudWatchLoggingOptionUpdate'] :: CloudWatchLoggingOptionUpdate -> Maybe Text

-- | ARN of the CloudWatch log to receive application messages.
[$sel:logStreamARNUpdate:CloudWatchLoggingOptionUpdate'] :: CloudWatchLoggingOptionUpdate -> Maybe Text

-- | ID of the CloudWatch logging option to update
[$sel:cloudWatchLoggingOptionId:CloudWatchLoggingOptionUpdate'] :: CloudWatchLoggingOptionUpdate -> Text

-- | Create a value of <a>CloudWatchLoggingOptionUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:CloudWatchLoggingOptionUpdate'</a>,
--   <a>cloudWatchLoggingOptionUpdate_roleARNUpdate</a> - IAM ARN of the
--   role to use to send application messages. Note: To write application
--   messages to CloudWatch, the IAM role used must have the
--   <tt>PutLogEvents</tt> policy action enabled.
--   
--   <a>$sel:logStreamARNUpdate:CloudWatchLoggingOptionUpdate'</a>,
--   <a>cloudWatchLoggingOptionUpdate_logStreamARNUpdate</a> - ARN of the
--   CloudWatch log to receive application messages.
--   
--   <a>$sel:cloudWatchLoggingOptionId:CloudWatchLoggingOptionUpdate'</a>,
--   <a>cloudWatchLoggingOptionUpdate_cloudWatchLoggingOptionId</a> - ID of
--   the CloudWatch logging option to update
newCloudWatchLoggingOptionUpdate :: Text -> CloudWatchLoggingOptionUpdate

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role used must have
--   the <tt>PutLogEvents</tt> policy action enabled.
cloudWatchLoggingOptionUpdate_roleARNUpdate :: Lens' CloudWatchLoggingOptionUpdate (Maybe Text)

-- | ARN of the CloudWatch log to receive application messages.
cloudWatchLoggingOptionUpdate_logStreamARNUpdate :: Lens' CloudWatchLoggingOptionUpdate (Maybe Text)

-- | ID of the CloudWatch logging option to update
cloudWatchLoggingOptionUpdate_cloudWatchLoggingOptionId :: Lens' CloudWatchLoggingOptionUpdate Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionUpdate.CloudWatchLoggingOptionUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionUpdate.CloudWatchLoggingOptionUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionUpdate.CloudWatchLoggingOptionUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionUpdate.CloudWatchLoggingOptionUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionUpdate.CloudWatchLoggingOptionUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionUpdate.CloudWatchLoggingOptionUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.CloudWatchLoggingOptionUpdate.CloudWatchLoggingOptionUpdate


module Network.AWS.KinesisAnalytics.Types.InputLambdaProcessor

-- | An object that contains the Amazon Resource Name (ARN) of the <a>AWS
--   Lambda</a> function that is used to preprocess records in the stream,
--   and the ARN of the IAM role that is used to access the AWS Lambda
--   function.
--   
--   <i>See:</i> <a>newInputLambdaProcessor</a> smart constructor.
data InputLambdaProcessor
InputLambdaProcessor' :: Text -> Text -> InputLambdaProcessor

-- | The ARN of the <a>AWS Lambda</a> function that operates on records in
--   the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
[$sel:resourceARN:InputLambdaProcessor'] :: InputLambdaProcessor -> Text

-- | The ARN of the IAM role that is used to access the AWS Lambda
--   function.
[$sel:roleARN:InputLambdaProcessor'] :: InputLambdaProcessor -> Text

-- | Create a value of <a>InputLambdaProcessor</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:InputLambdaProcessor'</a>,
--   <a>inputLambdaProcessor_resourceARN</a> - The ARN of the <a>AWS
--   Lambda</a> function that operates on records in the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
--   
--   <a>$sel:roleARN:InputLambdaProcessor'</a>,
--   <a>inputLambdaProcessor_roleARN</a> - The ARN of the IAM role that is
--   used to access the AWS Lambda function.
newInputLambdaProcessor :: Text -> Text -> InputLambdaProcessor

-- | The ARN of the <a>AWS Lambda</a> function that operates on records in
--   the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
inputLambdaProcessor_resourceARN :: Lens' InputLambdaProcessor Text

-- | The ARN of the IAM role that is used to access the AWS Lambda
--   function.
inputLambdaProcessor_roleARN :: Lens' InputLambdaProcessor Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputLambdaProcessor.InputLambdaProcessor
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputLambdaProcessor.InputLambdaProcessor
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputLambdaProcessor.InputLambdaProcessor
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputLambdaProcessor.InputLambdaProcessor
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputLambdaProcessor.InputLambdaProcessor
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputLambdaProcessor.InputLambdaProcessor
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.InputLambdaProcessor.InputLambdaProcessor


module Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorDescription

-- | An object that contains the Amazon Resource Name (ARN) of the <a>AWS
--   Lambda</a> function that is used to preprocess records in the stream,
--   and the ARN of the IAM role that is used to access the AWS Lambda
--   expression.
--   
--   <i>See:</i> <a>newInputLambdaProcessorDescription</a> smart
--   constructor.
data InputLambdaProcessorDescription
InputLambdaProcessorDescription' :: Maybe Text -> Maybe Text -> InputLambdaProcessorDescription

-- | The ARN of the <a>AWS Lambda</a> function that is used to preprocess
--   the records in the stream.
[$sel:resourceARN:InputLambdaProcessorDescription'] :: InputLambdaProcessorDescription -> Maybe Text

-- | The ARN of the IAM role that is used to access the AWS Lambda
--   function.
[$sel:roleARN:InputLambdaProcessorDescription'] :: InputLambdaProcessorDescription -> Maybe Text

-- | Create a value of <a>InputLambdaProcessorDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:InputLambdaProcessorDescription'</a>,
--   <a>inputLambdaProcessorDescription_resourceARN</a> - The ARN of the
--   <a>AWS Lambda</a> function that is used to preprocess the records in
--   the stream.
--   
--   <a>$sel:roleARN:InputLambdaProcessorDescription'</a>,
--   <a>inputLambdaProcessorDescription_roleARN</a> - The ARN of the IAM
--   role that is used to access the AWS Lambda function.
newInputLambdaProcessorDescription :: InputLambdaProcessorDescription

-- | The ARN of the <a>AWS Lambda</a> function that is used to preprocess
--   the records in the stream.
inputLambdaProcessorDescription_resourceARN :: Lens' InputLambdaProcessorDescription (Maybe Text)

-- | The ARN of the IAM role that is used to access the AWS Lambda
--   function.
inputLambdaProcessorDescription_roleARN :: Lens' InputLambdaProcessorDescription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorDescription.InputLambdaProcessorDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorDescription.InputLambdaProcessorDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorDescription.InputLambdaProcessorDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorDescription.InputLambdaProcessorDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorDescription.InputLambdaProcessorDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorDescription.InputLambdaProcessorDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorDescription.InputLambdaProcessorDescription


module Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorUpdate

-- | Represents an update to the <a>InputLambdaProcessor</a> that is used
--   to preprocess the records in the stream.
--   
--   <i>See:</i> <a>newInputLambdaProcessorUpdate</a> smart constructor.
data InputLambdaProcessorUpdate
InputLambdaProcessorUpdate' :: Maybe Text -> Maybe Text -> InputLambdaProcessorUpdate

-- | The ARN of the new IAM role that is used to access the AWS Lambda
--   function.
[$sel:roleARNUpdate:InputLambdaProcessorUpdate'] :: InputLambdaProcessorUpdate -> Maybe Text

-- | The Amazon Resource Name (ARN) of the new <a>AWS Lambda</a> function
--   that is used to preprocess the records in the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
[$sel:resourceARNUpdate:InputLambdaProcessorUpdate'] :: InputLambdaProcessorUpdate -> Maybe Text

-- | Create a value of <a>InputLambdaProcessorUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:InputLambdaProcessorUpdate'</a>,
--   <a>inputLambdaProcessorUpdate_roleARNUpdate</a> - The ARN of the new
--   IAM role that is used to access the AWS Lambda function.
--   
--   <a>$sel:resourceARNUpdate:InputLambdaProcessorUpdate'</a>,
--   <a>inputLambdaProcessorUpdate_resourceARNUpdate</a> - The Amazon
--   Resource Name (ARN) of the new <a>AWS Lambda</a> function that is used
--   to preprocess the records in the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
newInputLambdaProcessorUpdate :: InputLambdaProcessorUpdate

-- | The ARN of the new IAM role that is used to access the AWS Lambda
--   function.
inputLambdaProcessorUpdate_roleARNUpdate :: Lens' InputLambdaProcessorUpdate (Maybe Text)

-- | The Amazon Resource Name (ARN) of the new <a>AWS Lambda</a> function
--   that is used to preprocess the records in the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
inputLambdaProcessorUpdate_resourceARNUpdate :: Lens' InputLambdaProcessorUpdate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorUpdate.InputLambdaProcessorUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorUpdate.InputLambdaProcessorUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorUpdate.InputLambdaProcessorUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorUpdate.InputLambdaProcessorUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorUpdate.InputLambdaProcessorUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorUpdate.InputLambdaProcessorUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.InputLambdaProcessorUpdate.InputLambdaProcessorUpdate


module Network.AWS.KinesisAnalytics.Types.InputParallelism

-- | Describes the number of in-application streams to create for a given
--   streaming source. For information about parallelism, see
--   <a>Configuring Application Input</a>.
--   
--   <i>See:</i> <a>newInputParallelism</a> smart constructor.
data InputParallelism
InputParallelism' :: Maybe Natural -> InputParallelism

-- | Number of in-application streams to create. For more information, see
--   <a>Limits</a>.
[$sel:count:InputParallelism'] :: InputParallelism -> Maybe Natural

-- | Create a value of <a>InputParallelism</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:InputParallelism'</a>, <a>inputParallelism_count</a> -
--   Number of in-application streams to create. For more information, see
--   <a>Limits</a>.
newInputParallelism :: InputParallelism

-- | Number of in-application streams to create. For more information, see
--   <a>Limits</a>.
inputParallelism_count :: Lens' InputParallelism (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputParallelism.InputParallelism
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputParallelism.InputParallelism
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputParallelism.InputParallelism
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputParallelism.InputParallelism
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.InputParallelism.InputParallelism
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputParallelism.InputParallelism
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputParallelism.InputParallelism
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.InputParallelism.InputParallelism


module Network.AWS.KinesisAnalytics.Types.InputParallelismUpdate

-- | Provides updates to the parallelism count.
--   
--   <i>See:</i> <a>newInputParallelismUpdate</a> smart constructor.
data InputParallelismUpdate
InputParallelismUpdate' :: Maybe Natural -> InputParallelismUpdate

-- | Number of in-application streams to create for the specified streaming
--   source.
[$sel:countUpdate:InputParallelismUpdate'] :: InputParallelismUpdate -> Maybe Natural

-- | Create a value of <a>InputParallelismUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:countUpdate:InputParallelismUpdate'</a>,
--   <a>inputParallelismUpdate_countUpdate</a> - Number of in-application
--   streams to create for the specified streaming source.
newInputParallelismUpdate :: InputParallelismUpdate

-- | Number of in-application streams to create for the specified streaming
--   source.
inputParallelismUpdate_countUpdate :: Lens' InputParallelismUpdate (Maybe Natural)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputParallelismUpdate.InputParallelismUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputParallelismUpdate.InputParallelismUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputParallelismUpdate.InputParallelismUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputParallelismUpdate.InputParallelismUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputParallelismUpdate.InputParallelismUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputParallelismUpdate.InputParallelismUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.InputParallelismUpdate.InputParallelismUpdate


module Network.AWS.KinesisAnalytics.Types.InputProcessingConfiguration

-- | Provides a description of a processor that is used to preprocess the
--   records in the stream before being processed by your application code.
--   Currently, the only input processor available is <a>AWS Lambda</a>.
--   
--   <i>See:</i> <a>newInputProcessingConfiguration</a> smart constructor.
data InputProcessingConfiguration
InputProcessingConfiguration' :: InputLambdaProcessor -> InputProcessingConfiguration

-- | The <a>InputLambdaProcessor</a> that is used to preprocess the records
--   in the stream before being processed by your application code.
[$sel:inputLambdaProcessor:InputProcessingConfiguration'] :: InputProcessingConfiguration -> InputLambdaProcessor

-- | Create a value of <a>InputProcessingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputLambdaProcessor:InputProcessingConfiguration'</a>,
--   <a>inputProcessingConfiguration_inputLambdaProcessor</a> - The
--   <a>InputLambdaProcessor</a> that is used to preprocess the records in
--   the stream before being processed by your application code.
newInputProcessingConfiguration :: InputLambdaProcessor -> InputProcessingConfiguration

-- | The <a>InputLambdaProcessor</a> that is used to preprocess the records
--   in the stream before being processed by your application code.
inputProcessingConfiguration_inputLambdaProcessor :: Lens' InputProcessingConfiguration InputLambdaProcessor
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputProcessingConfiguration.InputProcessingConfiguration
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputProcessingConfiguration.InputProcessingConfiguration
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputProcessingConfiguration.InputProcessingConfiguration
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputProcessingConfiguration.InputProcessingConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputProcessingConfiguration.InputProcessingConfiguration
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputProcessingConfiguration.InputProcessingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.InputProcessingConfiguration.InputProcessingConfiguration


module Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationDescription

-- | Provides configuration information about an input processor.
--   Currently, the only input processor available is <a>AWS Lambda</a>.
--   
--   <i>See:</i> <a>newInputProcessingConfigurationDescription</a> smart
--   constructor.
data InputProcessingConfigurationDescription
InputProcessingConfigurationDescription' :: Maybe InputLambdaProcessorDescription -> InputProcessingConfigurationDescription

-- | Provides configuration information about the associated
--   <a>InputLambdaProcessorDescription</a>.
[$sel:inputLambdaProcessorDescription:InputProcessingConfigurationDescription'] :: InputProcessingConfigurationDescription -> Maybe InputLambdaProcessorDescription

-- | Create a value of <a>InputProcessingConfigurationDescription</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:inputLambdaProcessorDescription:InputProcessingConfigurationDescription'</a>,
--   <a>inputProcessingConfigurationDescription_inputLambdaProcessorDescription</a>
--   - Provides configuration information about the associated
--   <a>InputLambdaProcessorDescription</a>.
newInputProcessingConfigurationDescription :: InputProcessingConfigurationDescription

-- | Provides configuration information about the associated
--   <a>InputLambdaProcessorDescription</a>.
inputProcessingConfigurationDescription_inputLambdaProcessorDescription :: Lens' InputProcessingConfigurationDescription (Maybe InputLambdaProcessorDescription)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationDescription.InputProcessingConfigurationDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationDescription.InputProcessingConfigurationDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationDescription.InputProcessingConfigurationDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationDescription.InputProcessingConfigurationDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationDescription.InputProcessingConfigurationDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationDescription.InputProcessingConfigurationDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationDescription.InputProcessingConfigurationDescription


module Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationUpdate

-- | Describes updates to an <a>InputProcessingConfiguration</a>.
--   
--   <i>See:</i> <a>newInputProcessingConfigurationUpdate</a> smart
--   constructor.
data InputProcessingConfigurationUpdate
InputProcessingConfigurationUpdate' :: InputLambdaProcessorUpdate -> InputProcessingConfigurationUpdate

-- | Provides update information for an <a>InputLambdaProcessor</a>.
[$sel:inputLambdaProcessorUpdate:InputProcessingConfigurationUpdate'] :: InputProcessingConfigurationUpdate -> InputLambdaProcessorUpdate

-- | Create a value of <a>InputProcessingConfigurationUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:inputLambdaProcessorUpdate:InputProcessingConfigurationUpdate'</a>,
--   <a>inputProcessingConfigurationUpdate_inputLambdaProcessorUpdate</a> -
--   Provides update information for an <a>InputLambdaProcessor</a>.
newInputProcessingConfigurationUpdate :: InputLambdaProcessorUpdate -> InputProcessingConfigurationUpdate

-- | Provides update information for an <a>InputLambdaProcessor</a>.
inputProcessingConfigurationUpdate_inputLambdaProcessorUpdate :: Lens' InputProcessingConfigurationUpdate InputLambdaProcessorUpdate
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationUpdate.InputProcessingConfigurationUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationUpdate.InputProcessingConfigurationUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationUpdate.InputProcessingConfigurationUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationUpdate.InputProcessingConfigurationUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationUpdate.InputProcessingConfigurationUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationUpdate.InputProcessingConfigurationUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.InputProcessingConfigurationUpdate.InputProcessingConfigurationUpdate


module Network.AWS.KinesisAnalytics.Types.InputStartingPosition
newtype InputStartingPosition
InputStartingPosition' :: Text -> InputStartingPosition
[fromInputStartingPosition] :: InputStartingPosition -> Text
pattern InputStartingPosition_LAST_STOPPED_POINT :: InputStartingPosition
pattern InputStartingPosition_NOW :: InputStartingPosition
pattern InputStartingPosition_TRIM_HORIZON :: InputStartingPosition
instance Network.AWS.Data.XML.ToXML Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Network.AWS.Data.XML.FromXML Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Network.AWS.Data.Headers.ToHeader Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Network.AWS.Data.Log.ToLog Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Network.AWS.Data.Text.ToText Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Network.AWS.Data.Text.FromText Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance GHC.Classes.Ord Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputStartingPosition.InputStartingPosition


module Network.AWS.KinesisAnalytics.Types.InputStartingPositionConfiguration

-- | Describes the point at which the application reads from the streaming
--   source.
--   
--   <i>See:</i> <a>newInputStartingPositionConfiguration</a> smart
--   constructor.
data InputStartingPositionConfiguration
InputStartingPositionConfiguration' :: Maybe InputStartingPosition -> InputStartingPositionConfiguration

-- | The starting position on the stream.
--   
--   <ul>
--   <li><tt>NOW</tt> - Start reading just after the most recent record in
--   the stream, start at the request time stamp that the customer
--   issued.</li>
--   <li><tt>TRIM_HORIZON</tt> - Start reading at the last untrimmed record
--   in the stream, which is the oldest record available in the stream.
--   This option is not available for an Amazon Kinesis Firehose delivery
--   stream.</li>
--   <li><tt>LAST_STOPPED_POINT</tt> - Resume reading from where the
--   application last stopped reading.</li>
--   </ul>
[$sel:inputStartingPosition:InputStartingPositionConfiguration'] :: InputStartingPositionConfiguration -> Maybe InputStartingPosition

-- | Create a value of <a>InputStartingPositionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputStartingPosition:InputStartingPositionConfiguration'</a>,
--   <a>inputStartingPositionConfiguration_inputStartingPosition</a> - The
--   starting position on the stream.
--   
--   <ul>
--   <li><tt>NOW</tt> - Start reading just after the most recent record in
--   the stream, start at the request time stamp that the customer
--   issued.</li>
--   <li><tt>TRIM_HORIZON</tt> - Start reading at the last untrimmed record
--   in the stream, which is the oldest record available in the stream.
--   This option is not available for an Amazon Kinesis Firehose delivery
--   stream.</li>
--   <li><tt>LAST_STOPPED_POINT</tt> - Resume reading from where the
--   application last stopped reading.</li>
--   </ul>
newInputStartingPositionConfiguration :: InputStartingPositionConfiguration

-- | The starting position on the stream.
--   
--   <ul>
--   <li><tt>NOW</tt> - Start reading just after the most recent record in
--   the stream, start at the request time stamp that the customer
--   issued.</li>
--   <li><tt>TRIM_HORIZON</tt> - Start reading at the last untrimmed record
--   in the stream, which is the oldest record available in the stream.
--   This option is not available for an Amazon Kinesis Firehose delivery
--   stream.</li>
--   <li><tt>LAST_STOPPED_POINT</tt> - Resume reading from where the
--   application last stopped reading.</li>
--   </ul>
inputStartingPositionConfiguration_inputStartingPosition :: Lens' InputStartingPositionConfiguration (Maybe InputStartingPosition)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputStartingPositionConfiguration.InputStartingPositionConfiguration
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputStartingPositionConfiguration.InputStartingPositionConfiguration
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputStartingPositionConfiguration.InputStartingPositionConfiguration
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputStartingPositionConfiguration.InputStartingPositionConfiguration
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.InputStartingPositionConfiguration.InputStartingPositionConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputStartingPositionConfiguration.InputStartingPositionConfiguration
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputStartingPositionConfiguration.InputStartingPositionConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.InputStartingPositionConfiguration.InputStartingPositionConfiguration


module Network.AWS.KinesisAnalytics.Types.InputConfiguration

-- | When you start your application, you provide this configuration, which
--   identifies the input source and the point in the input source at which
--   you want the application to start processing records.
--   
--   <i>See:</i> <a>newInputConfiguration</a> smart constructor.
data InputConfiguration
InputConfiguration' :: Text -> InputStartingPositionConfiguration -> InputConfiguration

-- | Input source ID. You can get this ID by calling the
--   <a>DescribeApplication</a> operation.
[$sel:id:InputConfiguration'] :: InputConfiguration -> Text

-- | Point at which you want the application to start processing records
--   from the streaming source.
[$sel:inputStartingPositionConfiguration:InputConfiguration'] :: InputConfiguration -> InputStartingPositionConfiguration

-- | Create a value of <a>InputConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:InputConfiguration'</a>, <a>inputConfiguration_id</a> -
--   Input source ID. You can get this ID by calling the
--   <a>DescribeApplication</a> operation.
--   
--   <a>$sel:inputStartingPositionConfiguration:InputConfiguration'</a>,
--   <a>inputConfiguration_inputStartingPositionConfiguration</a> - Point
--   at which you want the application to start processing records from the
--   streaming source.
newInputConfiguration :: Text -> InputStartingPositionConfiguration -> InputConfiguration

-- | Input source ID. You can get this ID by calling the
--   <a>DescribeApplication</a> operation.
inputConfiguration_id :: Lens' InputConfiguration Text

-- | Point at which you want the application to start processing records
--   from the streaming source.
inputConfiguration_inputStartingPositionConfiguration :: Lens' InputConfiguration InputStartingPositionConfiguration
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputConfiguration.InputConfiguration
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputConfiguration.InputConfiguration
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputConfiguration.InputConfiguration
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputConfiguration.InputConfiguration
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputConfiguration.InputConfiguration
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputConfiguration.InputConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.InputConfiguration.InputConfiguration


module Network.AWS.KinesisAnalytics.Types.JSONMappingParameters

-- | Provides additional mapping information when JSON is the record format
--   on the streaming source.
--   
--   <i>See:</i> <a>newJSONMappingParameters</a> smart constructor.
data JSONMappingParameters
JSONMappingParameters' :: Text -> JSONMappingParameters

-- | Path to the top-level parent that contains the records.
[$sel:recordRowPath:JSONMappingParameters'] :: JSONMappingParameters -> Text

-- | Create a value of <a>JSONMappingParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordRowPath:JSONMappingParameters'</a>,
--   <a>jSONMappingParameters_recordRowPath</a> - Path to the top-level
--   parent that contains the records.
newJSONMappingParameters :: Text -> JSONMappingParameters

-- | Path to the top-level parent that contains the records.
jSONMappingParameters_recordRowPath :: Lens' JSONMappingParameters Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.JSONMappingParameters.JSONMappingParameters
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.JSONMappingParameters.JSONMappingParameters
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.JSONMappingParameters.JSONMappingParameters
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.JSONMappingParameters.JSONMappingParameters
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.JSONMappingParameters.JSONMappingParameters
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.JSONMappingParameters.JSONMappingParameters
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.JSONMappingParameters.JSONMappingParameters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.JSONMappingParameters.JSONMappingParameters


module Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInput

-- | Identifies an Amazon Kinesis Firehose delivery stream as the streaming
--   source. You provide the delivery stream's Amazon Resource Name (ARN)
--   and an IAM role ARN that enables Amazon Kinesis Analytics to access
--   the stream on your behalf.
--   
--   <i>See:</i> <a>newKinesisFirehoseInput</a> smart constructor.
data KinesisFirehoseInput
KinesisFirehoseInput' :: Text -> Text -> KinesisFirehoseInput

-- | ARN of the input delivery stream.
[$sel:resourceARN:KinesisFirehoseInput'] :: KinesisFirehoseInput -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to make sure that the role has the
--   necessary permissions to access the stream.
[$sel:roleARN:KinesisFirehoseInput'] :: KinesisFirehoseInput -> Text

-- | Create a value of <a>KinesisFirehoseInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseInput'</a>,
--   <a>kinesisFirehoseInput_resourceARN</a> - ARN of the input delivery
--   stream.
--   
--   <a>$sel:roleARN:KinesisFirehoseInput'</a>,
--   <a>kinesisFirehoseInput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to access the stream on your behalf. You
--   need to make sure that the role has the necessary permissions to
--   access the stream.
newKinesisFirehoseInput :: Text -> Text -> KinesisFirehoseInput

-- | ARN of the input delivery stream.
kinesisFirehoseInput_resourceARN :: Lens' KinesisFirehoseInput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to make sure that the role has the
--   necessary permissions to access the stream.
kinesisFirehoseInput_roleARN :: Lens' KinesisFirehoseInput Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInput.KinesisFirehoseInput
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInput.KinesisFirehoseInput
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInput.KinesisFirehoseInput
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInput.KinesisFirehoseInput
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInput.KinesisFirehoseInput
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInput.KinesisFirehoseInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInput.KinesisFirehoseInput


module Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputDescription

-- | Describes the Amazon Kinesis Firehose delivery stream that is
--   configured as the streaming source in the application input
--   configuration.
--   
--   <i>See:</i> <a>newKinesisFirehoseInputDescription</a> smart
--   constructor.
data KinesisFirehoseInputDescription
KinesisFirehoseInputDescription' :: Maybe Text -> Maybe Text -> KinesisFirehoseInputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream.
[$sel:resourceARN:KinesisFirehoseInputDescription'] :: KinesisFirehoseInputDescription -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics assumes to access
--   the stream.
[$sel:roleARN:KinesisFirehoseInputDescription'] :: KinesisFirehoseInputDescription -> Maybe Text

-- | Create a value of <a>KinesisFirehoseInputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseInputDescription'</a>,
--   <a>kinesisFirehoseInputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis Firehose delivery stream.
--   
--   <a>$sel:roleARN:KinesisFirehoseInputDescription'</a>,
--   <a>kinesisFirehoseInputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics assumes to access the stream.
newKinesisFirehoseInputDescription :: KinesisFirehoseInputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream.
kinesisFirehoseInputDescription_resourceARN :: Lens' KinesisFirehoseInputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics assumes to access
--   the stream.
kinesisFirehoseInputDescription_roleARN :: Lens' KinesisFirehoseInputDescription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputDescription.KinesisFirehoseInputDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputDescription.KinesisFirehoseInputDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputDescription.KinesisFirehoseInputDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputDescription.KinesisFirehoseInputDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputDescription.KinesisFirehoseInputDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputDescription.KinesisFirehoseInputDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputDescription.KinesisFirehoseInputDescription


module Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputUpdate

-- | When updating application input configuration, provides information
--   about an Amazon Kinesis Firehose delivery stream as the streaming
--   source.
--   
--   <i>See:</i> <a>newKinesisFirehoseInputUpdate</a> smart constructor.
data KinesisFirehoseInputUpdate
KinesisFirehoseInputUpdate' :: Maybe Text -> Maybe Text -> KinesisFirehoseInputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
[$sel:roleARNUpdate:KinesisFirehoseInputUpdate'] :: KinesisFirehoseInputUpdate -> Maybe Text

-- | Amazon Resource Name (ARN) of the input Amazon Kinesis Firehose
--   delivery stream to read.
[$sel:resourceARNUpdate:KinesisFirehoseInputUpdate'] :: KinesisFirehoseInputUpdate -> Maybe Text

-- | Create a value of <a>KinesisFirehoseInputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisFirehoseInputUpdate'</a>,
--   <a>kinesisFirehoseInputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisFirehoseInputUpdate'</a>,
--   <a>kinesisFirehoseInputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the input Amazon Kinesis Firehose delivery stream to
--   read.
newKinesisFirehoseInputUpdate :: KinesisFirehoseInputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisFirehoseInputUpdate_roleARNUpdate :: Lens' KinesisFirehoseInputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the input Amazon Kinesis Firehose
--   delivery stream to read.
kinesisFirehoseInputUpdate_resourceARNUpdate :: Lens' KinesisFirehoseInputUpdate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputUpdate.KinesisFirehoseInputUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputUpdate.KinesisFirehoseInputUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputUpdate.KinesisFirehoseInputUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputUpdate.KinesisFirehoseInputUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputUpdate.KinesisFirehoseInputUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputUpdate.KinesisFirehoseInputUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.KinesisFirehoseInputUpdate.KinesisFirehoseInputUpdate


module Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutput

-- | When configuring application output, identifies an Amazon Kinesis
--   Firehose delivery stream as the destination. You provide the stream
--   Amazon Resource Name (ARN) and an IAM role that enables Amazon Kinesis
--   Analytics to write to the stream on your behalf.
--   
--   <i>See:</i> <a>newKinesisFirehoseOutput</a> smart constructor.
data KinesisFirehoseOutput
KinesisFirehoseOutput' :: Text -> Text -> KinesisFirehoseOutput

-- | ARN of the destination Amazon Kinesis Firehose delivery stream to
--   write to.
[$sel:resourceARN:KinesisFirehoseOutput'] :: KinesisFirehoseOutput -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination stream on your behalf. You need to grant the
--   necessary permissions to this role.
[$sel:roleARN:KinesisFirehoseOutput'] :: KinesisFirehoseOutput -> Text

-- | Create a value of <a>KinesisFirehoseOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseOutput'</a>,
--   <a>kinesisFirehoseOutput_resourceARN</a> - ARN of the destination
--   Amazon Kinesis Firehose delivery stream to write to.
--   
--   <a>$sel:roleARN:KinesisFirehoseOutput'</a>,
--   <a>kinesisFirehoseOutput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to write to the destination stream on
--   your behalf. You need to grant the necessary permissions to this role.
newKinesisFirehoseOutput :: Text -> Text -> KinesisFirehoseOutput

-- | ARN of the destination Amazon Kinesis Firehose delivery stream to
--   write to.
kinesisFirehoseOutput_resourceARN :: Lens' KinesisFirehoseOutput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination stream on your behalf. You need to grant the
--   necessary permissions to this role.
kinesisFirehoseOutput_roleARN :: Lens' KinesisFirehoseOutput Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutput.KinesisFirehoseOutput
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutput.KinesisFirehoseOutput
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutput.KinesisFirehoseOutput
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutput.KinesisFirehoseOutput
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutput.KinesisFirehoseOutput
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutput.KinesisFirehoseOutput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutput.KinesisFirehoseOutput


module Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputDescription

-- | For an application output, describes the Amazon Kinesis Firehose
--   delivery stream configured as its destination.
--   
--   <i>See:</i> <a>newKinesisFirehoseOutputDescription</a> smart
--   constructor.
data KinesisFirehoseOutputDescription
KinesisFirehoseOutputDescription' :: Maybe Text -> Maybe Text -> KinesisFirehoseOutputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream.
[$sel:resourceARN:KinesisFirehoseOutputDescription'] :: KinesisFirehoseOutputDescription -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
[$sel:roleARN:KinesisFirehoseOutputDescription'] :: KinesisFirehoseOutputDescription -> Maybe Text

-- | Create a value of <a>KinesisFirehoseOutputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseOutputDescription'</a>,
--   <a>kinesisFirehoseOutputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis Firehose delivery stream.
--   
--   <a>$sel:roleARN:KinesisFirehoseOutputDescription'</a>,
--   <a>kinesisFirehoseOutputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream.
newKinesisFirehoseOutputDescription :: KinesisFirehoseOutputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream.
kinesisFirehoseOutputDescription_resourceARN :: Lens' KinesisFirehoseOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
kinesisFirehoseOutputDescription_roleARN :: Lens' KinesisFirehoseOutputDescription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputDescription.KinesisFirehoseOutputDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputDescription.KinesisFirehoseOutputDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputDescription.KinesisFirehoseOutputDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputDescription.KinesisFirehoseOutputDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputDescription.KinesisFirehoseOutputDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputDescription.KinesisFirehoseOutputDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputDescription.KinesisFirehoseOutputDescription


module Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputUpdate

-- | When updating an output configuration using the
--   <a>UpdateApplication</a> operation, provides information about an
--   Amazon Kinesis Firehose delivery stream configured as the destination.
--   
--   <i>See:</i> <a>newKinesisFirehoseOutputUpdate</a> smart constructor.
data KinesisFirehoseOutputUpdate
KinesisFirehoseOutputUpdate' :: Maybe Text -> Maybe Text -> KinesisFirehoseOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
[$sel:roleARNUpdate:KinesisFirehoseOutputUpdate'] :: KinesisFirehoseOutputUpdate -> Maybe Text

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream to write to.
[$sel:resourceARNUpdate:KinesisFirehoseOutputUpdate'] :: KinesisFirehoseOutputUpdate -> Maybe Text

-- | Create a value of <a>KinesisFirehoseOutputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisFirehoseOutputUpdate'</a>,
--   <a>kinesisFirehoseOutputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisFirehoseOutputUpdate'</a>,
--   <a>kinesisFirehoseOutputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis Firehose delivery stream to write to.
newKinesisFirehoseOutputUpdate :: KinesisFirehoseOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisFirehoseOutputUpdate_roleARNUpdate :: Lens' KinesisFirehoseOutputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream to write to.
kinesisFirehoseOutputUpdate_resourceARNUpdate :: Lens' KinesisFirehoseOutputUpdate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputUpdate.KinesisFirehoseOutputUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputUpdate.KinesisFirehoseOutputUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputUpdate.KinesisFirehoseOutputUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputUpdate.KinesisFirehoseOutputUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputUpdate.KinesisFirehoseOutputUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputUpdate.KinesisFirehoseOutputUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.KinesisFirehoseOutputUpdate.KinesisFirehoseOutputUpdate


module Network.AWS.KinesisAnalytics.Types.KinesisStreamsInput

-- | Identifies an Amazon Kinesis stream as the streaming source. You
--   provide the stream's Amazon Resource Name (ARN) and an IAM role ARN
--   that enables Amazon Kinesis Analytics to access the stream on your
--   behalf.
--   
--   <i>See:</i> <a>newKinesisStreamsInput</a> smart constructor.
data KinesisStreamsInput
KinesisStreamsInput' :: Text -> Text -> KinesisStreamsInput

-- | ARN of the input Amazon Kinesis stream to read.
[$sel:resourceARN:KinesisStreamsInput'] :: KinesisStreamsInput -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
[$sel:roleARN:KinesisStreamsInput'] :: KinesisStreamsInput -> Text

-- | Create a value of <a>KinesisStreamsInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsInput'</a>,
--   <a>kinesisStreamsInput_resourceARN</a> - ARN of the input Amazon
--   Kinesis stream to read.
--   
--   <a>$sel:roleARN:KinesisStreamsInput'</a>,
--   <a>kinesisStreamsInput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to access the stream on your behalf. You
--   need to grant the necessary permissions to this role.
newKinesisStreamsInput :: Text -> Text -> KinesisStreamsInput

-- | ARN of the input Amazon Kinesis stream to read.
kinesisStreamsInput_resourceARN :: Lens' KinesisStreamsInput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisStreamsInput_roleARN :: Lens' KinesisStreamsInput Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisStreamsInput.KinesisStreamsInput
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisStreamsInput.KinesisStreamsInput
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisStreamsInput.KinesisStreamsInput
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisStreamsInput.KinesisStreamsInput
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisStreamsInput.KinesisStreamsInput
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisStreamsInput.KinesisStreamsInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.KinesisStreamsInput.KinesisStreamsInput


module Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputDescription

-- | Describes the Amazon Kinesis stream that is configured as the
--   streaming source in the application input configuration.
--   
--   <i>See:</i> <a>newKinesisStreamsInputDescription</a> smart
--   constructor.
data KinesisStreamsInputDescription
KinesisStreamsInputDescription' :: Maybe Text -> Maybe Text -> KinesisStreamsInputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream.
[$sel:resourceARN:KinesisStreamsInputDescription'] :: KinesisStreamsInputDescription -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
[$sel:roleARN:KinesisStreamsInputDescription'] :: KinesisStreamsInputDescription -> Maybe Text

-- | Create a value of <a>KinesisStreamsInputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsInputDescription'</a>,
--   <a>kinesisStreamsInputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis stream.
--   
--   <a>$sel:roleARN:KinesisStreamsInputDescription'</a>,
--   <a>kinesisStreamsInputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream.
newKinesisStreamsInputDescription :: KinesisStreamsInputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream.
kinesisStreamsInputDescription_resourceARN :: Lens' KinesisStreamsInputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
kinesisStreamsInputDescription_roleARN :: Lens' KinesisStreamsInputDescription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputDescription.KinesisStreamsInputDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputDescription.KinesisStreamsInputDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputDescription.KinesisStreamsInputDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputDescription.KinesisStreamsInputDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputDescription.KinesisStreamsInputDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputDescription.KinesisStreamsInputDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputDescription.KinesisStreamsInputDescription


module Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputUpdate

-- | When updating application input configuration, provides information
--   about an Amazon Kinesis stream as the streaming source.
--   
--   <i>See:</i> <a>newKinesisStreamsInputUpdate</a> smart constructor.
data KinesisStreamsInputUpdate
KinesisStreamsInputUpdate' :: Maybe Text -> Maybe Text -> KinesisStreamsInputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
[$sel:roleARNUpdate:KinesisStreamsInputUpdate'] :: KinesisStreamsInputUpdate -> Maybe Text

-- | Amazon Resource Name (ARN) of the input Amazon Kinesis stream to read.
[$sel:resourceARNUpdate:KinesisStreamsInputUpdate'] :: KinesisStreamsInputUpdate -> Maybe Text

-- | Create a value of <a>KinesisStreamsInputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisStreamsInputUpdate'</a>,
--   <a>kinesisStreamsInputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisStreamsInputUpdate'</a>,
--   <a>kinesisStreamsInputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the input Amazon Kinesis stream to read.
newKinesisStreamsInputUpdate :: KinesisStreamsInputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisStreamsInputUpdate_roleARNUpdate :: Lens' KinesisStreamsInputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the input Amazon Kinesis stream to read.
kinesisStreamsInputUpdate_resourceARNUpdate :: Lens' KinesisStreamsInputUpdate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputUpdate.KinesisStreamsInputUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputUpdate.KinesisStreamsInputUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputUpdate.KinesisStreamsInputUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputUpdate.KinesisStreamsInputUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputUpdate.KinesisStreamsInputUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputUpdate.KinesisStreamsInputUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.KinesisStreamsInputUpdate.KinesisStreamsInputUpdate


module Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutput

-- | When configuring application output, identifies an Amazon Kinesis
--   stream as the destination. You provide the stream Amazon Resource Name
--   (ARN) and also an IAM role ARN that Amazon Kinesis Analytics can use
--   to write to the stream on your behalf.
--   
--   <i>See:</i> <a>newKinesisStreamsOutput</a> smart constructor.
data KinesisStreamsOutput
KinesisStreamsOutput' :: Text -> Text -> KinesisStreamsOutput

-- | ARN of the destination Amazon Kinesis stream to write to.
[$sel:resourceARN:KinesisStreamsOutput'] :: KinesisStreamsOutput -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination stream on your behalf. You need to grant the
--   necessary permissions to this role.
[$sel:roleARN:KinesisStreamsOutput'] :: KinesisStreamsOutput -> Text

-- | Create a value of <a>KinesisStreamsOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsOutput'</a>,
--   <a>kinesisStreamsOutput_resourceARN</a> - ARN of the destination
--   Amazon Kinesis stream to write to.
--   
--   <a>$sel:roleARN:KinesisStreamsOutput'</a>,
--   <a>kinesisStreamsOutput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to write to the destination stream on
--   your behalf. You need to grant the necessary permissions to this role.
newKinesisStreamsOutput :: Text -> Text -> KinesisStreamsOutput

-- | ARN of the destination Amazon Kinesis stream to write to.
kinesisStreamsOutput_resourceARN :: Lens' KinesisStreamsOutput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination stream on your behalf. You need to grant the
--   necessary permissions to this role.
kinesisStreamsOutput_roleARN :: Lens' KinesisStreamsOutput Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutput.KinesisStreamsOutput
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutput.KinesisStreamsOutput
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutput.KinesisStreamsOutput
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutput.KinesisStreamsOutput
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutput.KinesisStreamsOutput
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutput.KinesisStreamsOutput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutput.KinesisStreamsOutput


module Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputDescription

-- | For an application output, describes the Amazon Kinesis stream
--   configured as its destination.
--   
--   <i>See:</i> <a>newKinesisStreamsOutputDescription</a> smart
--   constructor.
data KinesisStreamsOutputDescription
KinesisStreamsOutputDescription' :: Maybe Text -> Maybe Text -> KinesisStreamsOutputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream.
[$sel:resourceARN:KinesisStreamsOutputDescription'] :: KinesisStreamsOutputDescription -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
[$sel:roleARN:KinesisStreamsOutputDescription'] :: KinesisStreamsOutputDescription -> Maybe Text

-- | Create a value of <a>KinesisStreamsOutputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsOutputDescription'</a>,
--   <a>kinesisStreamsOutputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis stream.
--   
--   <a>$sel:roleARN:KinesisStreamsOutputDescription'</a>,
--   <a>kinesisStreamsOutputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream.
newKinesisStreamsOutputDescription :: KinesisStreamsOutputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream.
kinesisStreamsOutputDescription_resourceARN :: Lens' KinesisStreamsOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
kinesisStreamsOutputDescription_roleARN :: Lens' KinesisStreamsOutputDescription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputDescription.KinesisStreamsOutputDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputDescription.KinesisStreamsOutputDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputDescription.KinesisStreamsOutputDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputDescription.KinesisStreamsOutputDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputDescription.KinesisStreamsOutputDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputDescription.KinesisStreamsOutputDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputDescription.KinesisStreamsOutputDescription


module Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputUpdate

-- | When updating an output configuration using the
--   <a>UpdateApplication</a> operation, provides information about an
--   Amazon Kinesis stream configured as the destination.
--   
--   <i>See:</i> <a>newKinesisStreamsOutputUpdate</a> smart constructor.
data KinesisStreamsOutputUpdate
KinesisStreamsOutputUpdate' :: Maybe Text -> Maybe Text -> KinesisStreamsOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
[$sel:roleARNUpdate:KinesisStreamsOutputUpdate'] :: KinesisStreamsOutputUpdate -> Maybe Text

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream where you want
--   to write the output.
[$sel:resourceARNUpdate:KinesisStreamsOutputUpdate'] :: KinesisStreamsOutputUpdate -> Maybe Text

-- | Create a value of <a>KinesisStreamsOutputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisStreamsOutputUpdate'</a>,
--   <a>kinesisStreamsOutputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisStreamsOutputUpdate'</a>,
--   <a>kinesisStreamsOutputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis stream where you want to write the
--   output.
newKinesisStreamsOutputUpdate :: KinesisStreamsOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisStreamsOutputUpdate_roleARNUpdate :: Lens' KinesisStreamsOutputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream where you want
--   to write the output.
kinesisStreamsOutputUpdate_resourceARNUpdate :: Lens' KinesisStreamsOutputUpdate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputUpdate.KinesisStreamsOutputUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputUpdate.KinesisStreamsOutputUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputUpdate.KinesisStreamsOutputUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputUpdate.KinesisStreamsOutputUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputUpdate.KinesisStreamsOutputUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputUpdate.KinesisStreamsOutputUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.KinesisStreamsOutputUpdate.KinesisStreamsOutputUpdate


module Network.AWS.KinesisAnalytics.Types.LambdaOutput

-- | When configuring application output, identifies an AWS Lambda function
--   as the destination. You provide the function Amazon Resource Name
--   (ARN) and also an IAM role ARN that Amazon Kinesis Analytics can use
--   to write to the function on your behalf.
--   
--   <i>See:</i> <a>newLambdaOutput</a> smart constructor.
data LambdaOutput
LambdaOutput' :: Text -> Text -> LambdaOutput

-- | Amazon Resource Name (ARN) of the destination Lambda function to write
--   to.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
[$sel:resourceARN:LambdaOutput'] :: LambdaOutput -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
[$sel:roleARN:LambdaOutput'] :: LambdaOutput -> Text

-- | Create a value of <a>LambdaOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:LambdaOutput'</a>, <a>lambdaOutput_resourceARN</a>
--   - Amazon Resource Name (ARN) of the destination Lambda function to
--   write to.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
--   
--   <a>$sel:roleARN:LambdaOutput'</a>, <a>lambdaOutput_roleARN</a> - ARN
--   of the IAM role that Amazon Kinesis Analytics can assume to write to
--   the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
newLambdaOutput :: Text -> Text -> LambdaOutput

-- | Amazon Resource Name (ARN) of the destination Lambda function to write
--   to.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
lambdaOutput_resourceARN :: Lens' LambdaOutput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
lambdaOutput_roleARN :: Lens' LambdaOutput Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.LambdaOutput.LambdaOutput
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.LambdaOutput.LambdaOutput
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.LambdaOutput.LambdaOutput
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.LambdaOutput.LambdaOutput
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.LambdaOutput.LambdaOutput
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.LambdaOutput.LambdaOutput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.LambdaOutput.LambdaOutput


module Network.AWS.KinesisAnalytics.Types.LambdaOutputDescription

-- | For an application output, describes the AWS Lambda function
--   configured as its destination.
--   
--   <i>See:</i> <a>newLambdaOutputDescription</a> smart constructor.
data LambdaOutputDescription
LambdaOutputDescription' :: Maybe Text -> Maybe Text -> LambdaOutputDescription

-- | Amazon Resource Name (ARN) of the destination Lambda function.
[$sel:resourceARN:LambdaOutputDescription'] :: LambdaOutputDescription -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function.
[$sel:roleARN:LambdaOutputDescription'] :: LambdaOutputDescription -> Maybe Text

-- | Create a value of <a>LambdaOutputDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:LambdaOutputDescription'</a>,
--   <a>lambdaOutputDescription_resourceARN</a> - Amazon Resource Name
--   (ARN) of the destination Lambda function.
--   
--   <a>$sel:roleARN:LambdaOutputDescription'</a>,
--   <a>lambdaOutputDescription_roleARN</a> - ARN of the IAM role that
--   Amazon Kinesis Analytics can assume to write to the destination
--   function.
newLambdaOutputDescription :: LambdaOutputDescription

-- | Amazon Resource Name (ARN) of the destination Lambda function.
lambdaOutputDescription_resourceARN :: Lens' LambdaOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function.
lambdaOutputDescription_roleARN :: Lens' LambdaOutputDescription (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.LambdaOutputDescription.LambdaOutputDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.LambdaOutputDescription.LambdaOutputDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.LambdaOutputDescription.LambdaOutputDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.LambdaOutputDescription.LambdaOutputDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.LambdaOutputDescription.LambdaOutputDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.LambdaOutputDescription.LambdaOutputDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.LambdaOutputDescription.LambdaOutputDescription


module Network.AWS.KinesisAnalytics.Types.LambdaOutputUpdate

-- | When updating an output configuration using the
--   <a>UpdateApplication</a> operation, provides information about an AWS
--   Lambda function configured as the destination.
--   
--   <i>See:</i> <a>newLambdaOutputUpdate</a> smart constructor.
data LambdaOutputUpdate
LambdaOutputUpdate' :: Maybe Text -> Maybe Text -> LambdaOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
[$sel:roleARNUpdate:LambdaOutputUpdate'] :: LambdaOutputUpdate -> Maybe Text

-- | Amazon Resource Name (ARN) of the destination Lambda function.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
[$sel:resourceARNUpdate:LambdaOutputUpdate'] :: LambdaOutputUpdate -> Maybe Text

-- | Create a value of <a>LambdaOutputUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:LambdaOutputUpdate'</a>,
--   <a>lambdaOutputUpdate_roleARNUpdate</a> - ARN of the IAM role that
--   Amazon Kinesis Analytics can assume to write to the destination
--   function on your behalf. You need to grant the necessary permissions
--   to this role.
--   
--   <a>$sel:resourceARNUpdate:LambdaOutputUpdate'</a>,
--   <a>lambdaOutputUpdate_resourceARNUpdate</a> - Amazon Resource Name
--   (ARN) of the destination Lambda function.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
newLambdaOutputUpdate :: LambdaOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
lambdaOutputUpdate_roleARNUpdate :: Lens' LambdaOutputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the destination Lambda function.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
lambdaOutputUpdate_resourceARNUpdate :: Lens' LambdaOutputUpdate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.LambdaOutputUpdate.LambdaOutputUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.LambdaOutputUpdate.LambdaOutputUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.LambdaOutputUpdate.LambdaOutputUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.LambdaOutputUpdate.LambdaOutputUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.LambdaOutputUpdate.LambdaOutputUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.LambdaOutputUpdate.LambdaOutputUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.LambdaOutputUpdate.LambdaOutputUpdate


module Network.AWS.KinesisAnalytics.Types.MappingParameters

-- | When configuring application input at the time of creating or updating
--   an application, provides additional mapping information specific to
--   the record format (such as JSON, CSV, or record fields delimited by
--   some delimiter) on the streaming source.
--   
--   <i>See:</i> <a>newMappingParameters</a> smart constructor.
data MappingParameters
MappingParameters' :: Maybe CSVMappingParameters -> Maybe JSONMappingParameters -> MappingParameters

-- | Provides additional mapping information when the record format uses
--   delimiters (for example, CSV).
[$sel:cSVMappingParameters:MappingParameters'] :: MappingParameters -> Maybe CSVMappingParameters

-- | Provides additional mapping information when JSON is the record format
--   on the streaming source.
[$sel:jSONMappingParameters:MappingParameters'] :: MappingParameters -> Maybe JSONMappingParameters

-- | Create a value of <a>MappingParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cSVMappingParameters:MappingParameters'</a>,
--   <a>mappingParameters_cSVMappingParameters</a> - Provides additional
--   mapping information when the record format uses delimiters (for
--   example, CSV).
--   
--   <a>$sel:jSONMappingParameters:MappingParameters'</a>,
--   <a>mappingParameters_jSONMappingParameters</a> - Provides additional
--   mapping information when JSON is the record format on the streaming
--   source.
newMappingParameters :: MappingParameters

-- | Provides additional mapping information when the record format uses
--   delimiters (for example, CSV).
mappingParameters_cSVMappingParameters :: Lens' MappingParameters (Maybe CSVMappingParameters)

-- | Provides additional mapping information when JSON is the record format
--   on the streaming source.
mappingParameters_jSONMappingParameters :: Lens' MappingParameters (Maybe JSONMappingParameters)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.MappingParameters.MappingParameters
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.MappingParameters.MappingParameters
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.MappingParameters.MappingParameters
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.MappingParameters.MappingParameters
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.MappingParameters.MappingParameters
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.MappingParameters.MappingParameters
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.MappingParameters.MappingParameters
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.MappingParameters.MappingParameters


module Network.AWS.KinesisAnalytics.Types.RecordColumn

-- | Describes the mapping of each data element in the streaming source to
--   the corresponding column in the in-application stream.
--   
--   Also used to describe the format of the reference data source.
--   
--   <i>See:</i> <a>newRecordColumn</a> smart constructor.
data RecordColumn
RecordColumn' :: Maybe Text -> Text -> Text -> RecordColumn

-- | Reference to the data element in the streaming input or the reference
--   data source. This element is required if the <a>RecordFormatType</a>
--   is <tt>JSON</tt>.
[$sel:mapping:RecordColumn'] :: RecordColumn -> Maybe Text

-- | Name of the column created in the in-application input stream or
--   reference table.
[$sel:name:RecordColumn'] :: RecordColumn -> Text

-- | Type of column created in the in-application input stream or reference
--   table.
[$sel:sqlType:RecordColumn'] :: RecordColumn -> Text

-- | Create a value of <a>RecordColumn</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mapping:RecordColumn'</a>, <a>recordColumn_mapping</a> -
--   Reference to the data element in the streaming input or the reference
--   data source. This element is required if the <a>RecordFormatType</a>
--   is <tt>JSON</tt>.
--   
--   <a>$sel:name:RecordColumn'</a>, <a>recordColumn_name</a> - Name of the
--   column created in the in-application input stream or reference table.
--   
--   <a>$sel:sqlType:RecordColumn'</a>, <a>recordColumn_sqlType</a> - Type
--   of column created in the in-application input stream or reference
--   table.
newRecordColumn :: Text -> Text -> RecordColumn

-- | Reference to the data element in the streaming input or the reference
--   data source. This element is required if the <a>RecordFormatType</a>
--   is <tt>JSON</tt>.
recordColumn_mapping :: Lens' RecordColumn (Maybe Text)

-- | Name of the column created in the in-application input stream or
--   reference table.
recordColumn_name :: Lens' RecordColumn Text

-- | Type of column created in the in-application input stream or reference
--   table.
recordColumn_sqlType :: Lens' RecordColumn Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.RecordColumn.RecordColumn
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.RecordColumn.RecordColumn
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.RecordColumn.RecordColumn
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.RecordColumn.RecordColumn
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.RecordColumn.RecordColumn
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.RecordColumn.RecordColumn
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.RecordColumn.RecordColumn
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.RecordColumn.RecordColumn


module Network.AWS.KinesisAnalytics.Types.RecordFormatType
newtype RecordFormatType
RecordFormatType' :: Text -> RecordFormatType
[fromRecordFormatType] :: RecordFormatType -> Text
pattern RecordFormatType_CSV :: RecordFormatType
pattern RecordFormatType_JSON :: RecordFormatType
instance Network.AWS.Data.XML.ToXML Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Network.AWS.Data.XML.FromXML Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Network.AWS.Data.Headers.ToHeader Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Network.AWS.Data.Log.ToLog Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Network.AWS.Data.Text.ToText Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Network.AWS.Data.Text.FromText Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance GHC.Classes.Ord Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.RecordFormatType.RecordFormatType


module Network.AWS.KinesisAnalytics.Types.RecordFormat

-- | Describes the record format and relevant mapping information that
--   should be applied to schematize the records on the stream.
--   
--   <i>See:</i> <a>newRecordFormat</a> smart constructor.
data RecordFormat
RecordFormat' :: Maybe MappingParameters -> RecordFormatType -> RecordFormat

-- | When configuring application input at the time of creating or updating
--   an application, provides additional mapping information specific to
--   the record format (such as JSON, CSV, or record fields delimited by
--   some delimiter) on the streaming source.
[$sel:mappingParameters:RecordFormat'] :: RecordFormat -> Maybe MappingParameters

-- | The type of record format.
[$sel:recordFormatType:RecordFormat'] :: RecordFormat -> RecordFormatType

-- | Create a value of <a>RecordFormat</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mappingParameters:RecordFormat'</a>,
--   <a>recordFormat_mappingParameters</a> - When configuring application
--   input at the time of creating or updating an application, provides
--   additional mapping information specific to the record format (such as
--   JSON, CSV, or record fields delimited by some delimiter) on the
--   streaming source.
--   
--   <a>$sel:recordFormatType:RecordFormat'</a>,
--   <a>recordFormat_recordFormatType</a> - The type of record format.
newRecordFormat :: RecordFormatType -> RecordFormat

-- | When configuring application input at the time of creating or updating
--   an application, provides additional mapping information specific to
--   the record format (such as JSON, CSV, or record fields delimited by
--   some delimiter) on the streaming source.
recordFormat_mappingParameters :: Lens' RecordFormat (Maybe MappingParameters)

-- | The type of record format.
recordFormat_recordFormatType :: Lens' RecordFormat RecordFormatType
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.RecordFormat.RecordFormat
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.RecordFormat.RecordFormat
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.RecordFormat.RecordFormat
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.RecordFormat.RecordFormat
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.RecordFormat.RecordFormat
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.RecordFormat.RecordFormat
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.RecordFormat.RecordFormat
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.RecordFormat.RecordFormat


module Network.AWS.KinesisAnalytics.Types.InputSchemaUpdate

-- | Describes updates for the application's input schema.
--   
--   <i>See:</i> <a>newInputSchemaUpdate</a> smart constructor.
data InputSchemaUpdate
InputSchemaUpdate' :: Maybe RecordFormat -> Maybe Text -> Maybe (NonEmpty RecordColumn) -> InputSchemaUpdate

-- | Specifies the format of the records on the streaming source.
[$sel:recordFormatUpdate:InputSchemaUpdate'] :: InputSchemaUpdate -> Maybe RecordFormat

-- | Specifies the encoding of the records in the streaming source. For
--   example, UTF-8.
[$sel:recordEncodingUpdate:InputSchemaUpdate'] :: InputSchemaUpdate -> Maybe Text

-- | A list of <tt>RecordColumn</tt> objects. Each object describes the
--   mapping of the streaming source element to the corresponding column in
--   the in-application stream.
[$sel:recordColumnUpdates:InputSchemaUpdate'] :: InputSchemaUpdate -> Maybe (NonEmpty RecordColumn)

-- | Create a value of <a>InputSchemaUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordFormatUpdate:InputSchemaUpdate'</a>,
--   <a>inputSchemaUpdate_recordFormatUpdate</a> - Specifies the format of
--   the records on the streaming source.
--   
--   <a>$sel:recordEncodingUpdate:InputSchemaUpdate'</a>,
--   <a>inputSchemaUpdate_recordEncodingUpdate</a> - Specifies the encoding
--   of the records in the streaming source. For example, UTF-8.
--   
--   <a>$sel:recordColumnUpdates:InputSchemaUpdate'</a>,
--   <a>inputSchemaUpdate_recordColumnUpdates</a> - A list of
--   <tt>RecordColumn</tt> objects. Each object describes the mapping of
--   the streaming source element to the corresponding column in the
--   in-application stream.
newInputSchemaUpdate :: InputSchemaUpdate

-- | Specifies the format of the records on the streaming source.
inputSchemaUpdate_recordFormatUpdate :: Lens' InputSchemaUpdate (Maybe RecordFormat)

-- | Specifies the encoding of the records in the streaming source. For
--   example, UTF-8.
inputSchemaUpdate_recordEncodingUpdate :: Lens' InputSchemaUpdate (Maybe Text)

-- | A list of <tt>RecordColumn</tt> objects. Each object describes the
--   mapping of the streaming source element to the corresponding column in
--   the in-application stream.
inputSchemaUpdate_recordColumnUpdates :: Lens' InputSchemaUpdate (Maybe (NonEmpty RecordColumn))
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputSchemaUpdate.InputSchemaUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputSchemaUpdate.InputSchemaUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputSchemaUpdate.InputSchemaUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputSchemaUpdate.InputSchemaUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputSchemaUpdate.InputSchemaUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputSchemaUpdate.InputSchemaUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.InputSchemaUpdate.InputSchemaUpdate


module Network.AWS.KinesisAnalytics.Types.InputUpdate

-- | Describes updates to a specific input configuration (identified by the
--   <tt>InputId</tt> of an application).
--   
--   <i>See:</i> <a>newInputUpdate</a> smart constructor.
data InputUpdate
InputUpdate' :: Maybe InputProcessingConfigurationUpdate -> Maybe KinesisStreamsInputUpdate -> Maybe InputParallelismUpdate -> Maybe Text -> Maybe InputSchemaUpdate -> Maybe KinesisFirehoseInputUpdate -> Text -> InputUpdate

-- | Describes updates for an input processing configuration.
[$sel:inputProcessingConfigurationUpdate:InputUpdate'] :: InputUpdate -> Maybe InputProcessingConfigurationUpdate

-- | If an Amazon Kinesis stream is the streaming source to be updated,
--   provides an updated stream Amazon Resource Name (ARN) and IAM role
--   ARN.
[$sel:kinesisStreamsInputUpdate:InputUpdate'] :: InputUpdate -> Maybe KinesisStreamsInputUpdate

-- | Describes the parallelism updates (the number in-application streams
--   Amazon Kinesis Analytics creates for the specific streaming source).
[$sel:inputParallelismUpdate:InputUpdate'] :: InputUpdate -> Maybe InputParallelismUpdate

-- | Name prefix for in-application streams that Amazon Kinesis Analytics
--   creates for the specific streaming source.
[$sel:namePrefixUpdate:InputUpdate'] :: InputUpdate -> Maybe Text

-- | Describes the data format on the streaming source, and how record
--   elements on the streaming source map to columns of the in-application
--   stream that is created.
[$sel:inputSchemaUpdate:InputUpdate'] :: InputUpdate -> Maybe InputSchemaUpdate

-- | If an Amazon Kinesis Firehose delivery stream is the streaming source
--   to be updated, provides an updated stream ARN and IAM role ARN.
[$sel:kinesisFirehoseInputUpdate:InputUpdate'] :: InputUpdate -> Maybe KinesisFirehoseInputUpdate

-- | Input ID of the application input to be updated.
[$sel:inputId:InputUpdate'] :: InputUpdate -> Text

-- | Create a value of <a>InputUpdate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputProcessingConfigurationUpdate:InputUpdate'</a>,
--   <a>inputUpdate_inputProcessingConfigurationUpdate</a> - Describes
--   updates for an input processing configuration.
--   
--   <a>$sel:kinesisStreamsInputUpdate:InputUpdate'</a>,
--   <a>inputUpdate_kinesisStreamsInputUpdate</a> - If an Amazon Kinesis
--   stream is the streaming source to be updated, provides an updated
--   stream Amazon Resource Name (ARN) and IAM role ARN.
--   
--   <a>$sel:inputParallelismUpdate:InputUpdate'</a>,
--   <a>inputUpdate_inputParallelismUpdate</a> - Describes the parallelism
--   updates (the number in-application streams Amazon Kinesis Analytics
--   creates for the specific streaming source).
--   
--   <a>$sel:namePrefixUpdate:InputUpdate'</a>,
--   <a>inputUpdate_namePrefixUpdate</a> - Name prefix for in-application
--   streams that Amazon Kinesis Analytics creates for the specific
--   streaming source.
--   
--   <a>$sel:inputSchemaUpdate:InputUpdate'</a>,
--   <a>inputUpdate_inputSchemaUpdate</a> - Describes the data format on
--   the streaming source, and how record elements on the streaming source
--   map to columns of the in-application stream that is created.
--   
--   <a>$sel:kinesisFirehoseInputUpdate:InputUpdate'</a>,
--   <a>inputUpdate_kinesisFirehoseInputUpdate</a> - If an Amazon Kinesis
--   Firehose delivery stream is the streaming source to be updated,
--   provides an updated stream ARN and IAM role ARN.
--   
--   <a>$sel:inputId:InputUpdate'</a>, <a>inputUpdate_inputId</a> - Input
--   ID of the application input to be updated.
newInputUpdate :: Text -> InputUpdate

-- | Describes updates for an input processing configuration.
inputUpdate_inputProcessingConfigurationUpdate :: Lens' InputUpdate (Maybe InputProcessingConfigurationUpdate)

-- | If an Amazon Kinesis stream is the streaming source to be updated,
--   provides an updated stream Amazon Resource Name (ARN) and IAM role
--   ARN.
inputUpdate_kinesisStreamsInputUpdate :: Lens' InputUpdate (Maybe KinesisStreamsInputUpdate)

-- | Describes the parallelism updates (the number in-application streams
--   Amazon Kinesis Analytics creates for the specific streaming source).
inputUpdate_inputParallelismUpdate :: Lens' InputUpdate (Maybe InputParallelismUpdate)

-- | Name prefix for in-application streams that Amazon Kinesis Analytics
--   creates for the specific streaming source.
inputUpdate_namePrefixUpdate :: Lens' InputUpdate (Maybe Text)

-- | Describes the data format on the streaming source, and how record
--   elements on the streaming source map to columns of the in-application
--   stream that is created.
inputUpdate_inputSchemaUpdate :: Lens' InputUpdate (Maybe InputSchemaUpdate)

-- | If an Amazon Kinesis Firehose delivery stream is the streaming source
--   to be updated, provides an updated stream ARN and IAM role ARN.
inputUpdate_kinesisFirehoseInputUpdate :: Lens' InputUpdate (Maybe KinesisFirehoseInputUpdate)

-- | Input ID of the application input to be updated.
inputUpdate_inputId :: Lens' InputUpdate Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputUpdate.InputUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputUpdate.InputUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputUpdate.InputUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputUpdate.InputUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputUpdate.InputUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputUpdate.InputUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.InputUpdate.InputUpdate


module Network.AWS.KinesisAnalytics.Types.DestinationSchema

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
--   
--   <i>See:</i> <a>newDestinationSchema</a> smart constructor.
data DestinationSchema
DestinationSchema' :: RecordFormatType -> DestinationSchema

-- | Specifies the format of the records on the output stream.
[$sel:recordFormatType:DestinationSchema'] :: DestinationSchema -> RecordFormatType

-- | Create a value of <a>DestinationSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordFormatType:DestinationSchema'</a>,
--   <a>destinationSchema_recordFormatType</a> - Specifies the format of
--   the records on the output stream.
newDestinationSchema :: RecordFormatType -> DestinationSchema

-- | Specifies the format of the records on the output stream.
destinationSchema_recordFormatType :: Lens' DestinationSchema RecordFormatType
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.DestinationSchema.DestinationSchema
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.DestinationSchema.DestinationSchema
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.DestinationSchema.DestinationSchema
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.DestinationSchema.DestinationSchema
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.DestinationSchema.DestinationSchema
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.DestinationSchema.DestinationSchema
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.DestinationSchema.DestinationSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.DestinationSchema.DestinationSchema


module Network.AWS.KinesisAnalytics.Types.OutputUpdate

-- | Describes updates to the output configuration identified by the
--   <tt>OutputId</tt>.
--   
--   <i>See:</i> <a>newOutputUpdate</a> smart constructor.
data OutputUpdate
OutputUpdate' :: Maybe KinesisStreamsOutputUpdate -> Maybe DestinationSchema -> Maybe KinesisFirehoseOutputUpdate -> Maybe Text -> Maybe LambdaOutputUpdate -> Text -> OutputUpdate

-- | Describes an Amazon Kinesis stream as the destination for the output.
[$sel:kinesisStreamsOutputUpdate:OutputUpdate'] :: OutputUpdate -> Maybe KinesisStreamsOutputUpdate

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
[$sel:destinationSchemaUpdate:OutputUpdate'] :: OutputUpdate -> Maybe DestinationSchema

-- | Describes an Amazon Kinesis Firehose delivery stream as the
--   destination for the output.
[$sel:kinesisFirehoseOutputUpdate:OutputUpdate'] :: OutputUpdate -> Maybe KinesisFirehoseOutputUpdate

-- | If you want to specify a different in-application stream for this
--   output configuration, use this field to specify the new in-application
--   stream name.
[$sel:nameUpdate:OutputUpdate'] :: OutputUpdate -> Maybe Text

-- | Describes an AWS Lambda function as the destination for the output.
[$sel:lambdaOutputUpdate:OutputUpdate'] :: OutputUpdate -> Maybe LambdaOutputUpdate

-- | Identifies the specific output configuration that you want to update.
[$sel:outputId:OutputUpdate'] :: OutputUpdate -> Text

-- | Create a value of <a>OutputUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kinesisStreamsOutputUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_kinesisStreamsOutputUpdate</a> - Describes an Amazon
--   Kinesis stream as the destination for the output.
--   
--   <a>$sel:destinationSchemaUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_destinationSchemaUpdate</a> - Describes the data
--   format when records are written to the destination. For more
--   information, see <a>Configuring Application Output</a>.
--   
--   <a>$sel:kinesisFirehoseOutputUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_kinesisFirehoseOutputUpdate</a> - Describes an Amazon
--   Kinesis Firehose delivery stream as the destination for the output.
--   
--   <a>$sel:nameUpdate:OutputUpdate'</a>, <a>outputUpdate_nameUpdate</a> -
--   If you want to specify a different in-application stream for this
--   output configuration, use this field to specify the new in-application
--   stream name.
--   
--   <a>$sel:lambdaOutputUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_lambdaOutputUpdate</a> - Describes an AWS Lambda
--   function as the destination for the output.
--   
--   <a>$sel:outputId:OutputUpdate'</a>, <a>outputUpdate_outputId</a> -
--   Identifies the specific output configuration that you want to update.
newOutputUpdate :: Text -> OutputUpdate

-- | Describes an Amazon Kinesis stream as the destination for the output.
outputUpdate_kinesisStreamsOutputUpdate :: Lens' OutputUpdate (Maybe KinesisStreamsOutputUpdate)

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
outputUpdate_destinationSchemaUpdate :: Lens' OutputUpdate (Maybe DestinationSchema)

-- | Describes an Amazon Kinesis Firehose delivery stream as the
--   destination for the output.
outputUpdate_kinesisFirehoseOutputUpdate :: Lens' OutputUpdate (Maybe KinesisFirehoseOutputUpdate)

-- | If you want to specify a different in-application stream for this
--   output configuration, use this field to specify the new in-application
--   stream name.
outputUpdate_nameUpdate :: Lens' OutputUpdate (Maybe Text)

-- | Describes an AWS Lambda function as the destination for the output.
outputUpdate_lambdaOutputUpdate :: Lens' OutputUpdate (Maybe LambdaOutputUpdate)

-- | Identifies the specific output configuration that you want to update.
outputUpdate_outputId :: Lens' OutputUpdate Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.OutputUpdate.OutputUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.OutputUpdate.OutputUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.OutputUpdate.OutputUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.OutputUpdate.OutputUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.OutputUpdate.OutputUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.OutputUpdate.OutputUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.OutputUpdate.OutputUpdate


module Network.AWS.KinesisAnalytics.Types.OutputDescription

-- | Describes the application output configuration, which includes the
--   in-application stream name and the destination where the stream data
--   is written. The destination can be an Amazon Kinesis stream or an
--   Amazon Kinesis Firehose delivery stream.
--   
--   <i>See:</i> <a>newOutputDescription</a> smart constructor.
data OutputDescription
OutputDescription' :: Maybe Text -> Maybe DestinationSchema -> Maybe KinesisFirehoseOutputDescription -> Maybe KinesisStreamsOutputDescription -> Maybe Text -> Maybe LambdaOutputDescription -> OutputDescription

-- | A unique identifier for the output configuration.
[$sel:outputId:OutputDescription'] :: OutputDescription -> Maybe Text

-- | Data format used for writing data to the destination.
[$sel:destinationSchema:OutputDescription'] :: OutputDescription -> Maybe DestinationSchema

-- | Describes the Amazon Kinesis Firehose delivery stream configured as
--   the destination where output is written.
[$sel:kinesisFirehoseOutputDescription:OutputDescription'] :: OutputDescription -> Maybe KinesisFirehoseOutputDescription

-- | Describes Amazon Kinesis stream configured as the destination where
--   output is written.
[$sel:kinesisStreamsOutputDescription:OutputDescription'] :: OutputDescription -> Maybe KinesisStreamsOutputDescription

-- | Name of the in-application stream configured as output.
[$sel:name:OutputDescription'] :: OutputDescription -> Maybe Text

-- | Describes the AWS Lambda function configured as the destination where
--   output is written.
[$sel:lambdaOutputDescription:OutputDescription'] :: OutputDescription -> Maybe LambdaOutputDescription

-- | Create a value of <a>OutputDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputId:OutputDescription'</a>,
--   <a>outputDescription_outputId</a> - A unique identifier for the output
--   configuration.
--   
--   <a>$sel:destinationSchema:OutputDescription'</a>,
--   <a>outputDescription_destinationSchema</a> - Data format used for
--   writing data to the destination.
--   
--   <a>$sel:kinesisFirehoseOutputDescription:OutputDescription'</a>,
--   <a>outputDescription_kinesisFirehoseOutputDescription</a> - Describes
--   the Amazon Kinesis Firehose delivery stream configured as the
--   destination where output is written.
--   
--   <a>$sel:kinesisStreamsOutputDescription:OutputDescription'</a>,
--   <a>outputDescription_kinesisStreamsOutputDescription</a> - Describes
--   Amazon Kinesis stream configured as the destination where output is
--   written.
--   
--   <a>$sel:name:OutputDescription'</a>, <a>outputDescription_name</a> -
--   Name of the in-application stream configured as output.
--   
--   <a>$sel:lambdaOutputDescription:OutputDescription'</a>,
--   <a>outputDescription_lambdaOutputDescription</a> - Describes the AWS
--   Lambda function configured as the destination where output is written.
newOutputDescription :: OutputDescription

-- | A unique identifier for the output configuration.
outputDescription_outputId :: Lens' OutputDescription (Maybe Text)

-- | Data format used for writing data to the destination.
outputDescription_destinationSchema :: Lens' OutputDescription (Maybe DestinationSchema)

-- | Describes the Amazon Kinesis Firehose delivery stream configured as
--   the destination where output is written.
outputDescription_kinesisFirehoseOutputDescription :: Lens' OutputDescription (Maybe KinesisFirehoseOutputDescription)

-- | Describes Amazon Kinesis stream configured as the destination where
--   output is written.
outputDescription_kinesisStreamsOutputDescription :: Lens' OutputDescription (Maybe KinesisStreamsOutputDescription)

-- | Name of the in-application stream configured as output.
outputDescription_name :: Lens' OutputDescription (Maybe Text)

-- | Describes the AWS Lambda function configured as the destination where
--   output is written.
outputDescription_lambdaOutputDescription :: Lens' OutputDescription (Maybe LambdaOutputDescription)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.OutputDescription.OutputDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.OutputDescription.OutputDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.OutputDescription.OutputDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.OutputDescription.OutputDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.OutputDescription.OutputDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.OutputDescription.OutputDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.OutputDescription.OutputDescription


module Network.AWS.KinesisAnalytics.Types.Output

-- | Describes application output configuration in which you identify an
--   in-application stream and a destination where you want the
--   in-application stream data to be written. The destination can be an
--   Amazon Kinesis stream or an Amazon Kinesis Firehose delivery stream.
--   
--   For limits on how many destinations an application can write and other
--   limitations, see <a>Limits</a>.
--   
--   <i>See:</i> <a>newOutput</a> smart constructor.
data Output
Output' :: Maybe LambdaOutput -> Maybe KinesisStreamsOutput -> Maybe KinesisFirehoseOutput -> Text -> DestinationSchema -> Output

-- | Identifies an AWS Lambda function as the destination.
[$sel:lambdaOutput:Output'] :: Output -> Maybe LambdaOutput

-- | Identifies an Amazon Kinesis stream as the destination.
[$sel:kinesisStreamsOutput:Output'] :: Output -> Maybe KinesisStreamsOutput

-- | Identifies an Amazon Kinesis Firehose delivery stream as the
--   destination.
[$sel:kinesisFirehoseOutput:Output'] :: Output -> Maybe KinesisFirehoseOutput

-- | Name of the in-application stream.
[$sel:name:Output'] :: Output -> Text

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
[$sel:destinationSchema:Output'] :: Output -> DestinationSchema

-- | Create a value of <a>Output</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaOutput:Output'</a>, <a>output_lambdaOutput</a> -
--   Identifies an AWS Lambda function as the destination.
--   
--   <a>$sel:kinesisStreamsOutput:Output'</a>,
--   <a>output_kinesisStreamsOutput</a> - Identifies an Amazon Kinesis
--   stream as the destination.
--   
--   <a>$sel:kinesisFirehoseOutput:Output'</a>,
--   <a>output_kinesisFirehoseOutput</a> - Identifies an Amazon Kinesis
--   Firehose delivery stream as the destination.
--   
--   <a>$sel:name:Output'</a>, <a>output_name</a> - Name of the
--   in-application stream.
--   
--   <a>$sel:destinationSchema:Output'</a>, <a>output_destinationSchema</a>
--   - Describes the data format when records are written to the
--   destination. For more information, see <a>Configuring Application
--   Output</a>.
newOutput :: Text -> DestinationSchema -> Output

-- | Identifies an AWS Lambda function as the destination.
output_lambdaOutput :: Lens' Output (Maybe LambdaOutput)

-- | Identifies an Amazon Kinesis stream as the destination.
output_kinesisStreamsOutput :: Lens' Output (Maybe KinesisStreamsOutput)

-- | Identifies an Amazon Kinesis Firehose delivery stream as the
--   destination.
output_kinesisFirehoseOutput :: Lens' Output (Maybe KinesisFirehoseOutput)

-- | Name of the in-application stream.
output_name :: Lens' Output Text

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
output_destinationSchema :: Lens' Output DestinationSchema
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.Output.Output
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.Output.Output
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.Output.Output
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.Output.Output
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.Output.Output
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.Output.Output
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.Output.Output


module Network.AWS.KinesisAnalytics.Types.S3Configuration

-- | Provides a description of an Amazon S3 data source, including the
--   Amazon Resource Name (ARN) of the S3 bucket, the ARN of the IAM role
--   that is used to access the bucket, and the name of the Amazon S3
--   object that contains the data.
--   
--   <i>See:</i> <a>newS3Configuration</a> smart constructor.
data S3Configuration
S3Configuration' :: Text -> Text -> Text -> S3Configuration

-- | IAM ARN of the role used to access the data.
[$sel:roleARN:S3Configuration'] :: S3Configuration -> Text

-- | ARN of the S3 bucket that contains the data.
[$sel:bucketARN:S3Configuration'] :: S3Configuration -> Text

-- | The name of the object that contains the data.
[$sel:fileKey:S3Configuration'] :: S3Configuration -> Text

-- | Create a value of <a>S3Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:S3Configuration'</a>, <a>s3Configuration_roleARN</a> -
--   IAM ARN of the role used to access the data.
--   
--   <a>$sel:bucketARN:S3Configuration'</a>,
--   <a>s3Configuration_bucketARN</a> - ARN of the S3 bucket that contains
--   the data.
--   
--   <a>$sel:fileKey:S3Configuration'</a>, <a>s3Configuration_fileKey</a> -
--   The name of the object that contains the data.
newS3Configuration :: Text -> Text -> Text -> S3Configuration

-- | IAM ARN of the role used to access the data.
s3Configuration_roleARN :: Lens' S3Configuration Text

-- | ARN of the S3 bucket that contains the data.
s3Configuration_bucketARN :: Lens' S3Configuration Text

-- | The name of the object that contains the data.
s3Configuration_fileKey :: Lens' S3Configuration Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.S3Configuration.S3Configuration
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.S3Configuration.S3Configuration
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.S3Configuration.S3Configuration
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.S3Configuration.S3Configuration
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.S3Configuration.S3Configuration
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.S3Configuration.S3Configuration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.S3Configuration.S3Configuration


module Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSource

-- | Identifies the S3 bucket and object that contains the reference data.
--   Also identifies the IAM role Amazon Kinesis Analytics can assume to
--   read this object on your behalf.
--   
--   An Amazon Kinesis Analytics application loads reference data only
--   once. If the data changes, you call the <a>UpdateApplication</a>
--   operation to trigger reloading of data into your application.
--   
--   <i>See:</i> <a>newS3ReferenceDataSource</a> smart constructor.
data S3ReferenceDataSource
S3ReferenceDataSource' :: Text -> Text -> Text -> S3ReferenceDataSource

-- | Amazon Resource Name (ARN) of the S3 bucket.
[$sel:bucketARN:S3ReferenceDataSource'] :: S3ReferenceDataSource -> Text

-- | Object key name containing reference data.
[$sel:fileKey:S3ReferenceDataSource'] :: S3ReferenceDataSource -> Text

-- | ARN of the IAM role that the service can assume to read data on your
--   behalf. This role must have permission for the <tt>s3:GetObject</tt>
--   action on the object and trust policy that allows Amazon Kinesis
--   Analytics service principal to assume this role.
[$sel:referenceRoleARN:S3ReferenceDataSource'] :: S3ReferenceDataSource -> Text

-- | Create a value of <a>S3ReferenceDataSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketARN:S3ReferenceDataSource'</a>,
--   <a>s3ReferenceDataSource_bucketARN</a> - Amazon Resource Name (ARN) of
--   the S3 bucket.
--   
--   <a>$sel:fileKey:S3ReferenceDataSource'</a>,
--   <a>s3ReferenceDataSource_fileKey</a> - Object key name containing
--   reference data.
--   
--   <a>$sel:referenceRoleARN:S3ReferenceDataSource'</a>,
--   <a>s3ReferenceDataSource_referenceRoleARN</a> - ARN of the IAM role
--   that the service can assume to read data on your behalf. This role
--   must have permission for the <tt>s3:GetObject</tt> action on the
--   object and trust policy that allows Amazon Kinesis Analytics service
--   principal to assume this role.
newS3ReferenceDataSource :: Text -> Text -> Text -> S3ReferenceDataSource

-- | Amazon Resource Name (ARN) of the S3 bucket.
s3ReferenceDataSource_bucketARN :: Lens' S3ReferenceDataSource Text

-- | Object key name containing reference data.
s3ReferenceDataSource_fileKey :: Lens' S3ReferenceDataSource Text

-- | ARN of the IAM role that the service can assume to read data on your
--   behalf. This role must have permission for the <tt>s3:GetObject</tt>
--   action on the object and trust policy that allows Amazon Kinesis
--   Analytics service principal to assume this role.
s3ReferenceDataSource_referenceRoleARN :: Lens' S3ReferenceDataSource Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSource.S3ReferenceDataSource
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSource.S3ReferenceDataSource
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSource.S3ReferenceDataSource
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSource.S3ReferenceDataSource
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSource.S3ReferenceDataSource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSource.S3ReferenceDataSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSource.S3ReferenceDataSource


module Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceDescription

-- | Provides the bucket name and object key name that stores the reference
--   data.
--   
--   <i>See:</i> <a>newS3ReferenceDataSourceDescription</a> smart
--   constructor.
data S3ReferenceDataSourceDescription
S3ReferenceDataSourceDescription' :: Text -> Text -> Text -> S3ReferenceDataSourceDescription

-- | Amazon Resource Name (ARN) of the S3 bucket.
[$sel:bucketARN:S3ReferenceDataSourceDescription'] :: S3ReferenceDataSourceDescription -> Text

-- | Amazon S3 object key name.
[$sel:fileKey:S3ReferenceDataSourceDescription'] :: S3ReferenceDataSourceDescription -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to read
--   the Amazon S3 object on your behalf to populate the in-application
--   reference table.
[$sel:referenceRoleARN:S3ReferenceDataSourceDescription'] :: S3ReferenceDataSourceDescription -> Text

-- | Create a value of <a>S3ReferenceDataSourceDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketARN:S3ReferenceDataSourceDescription'</a>,
--   <a>s3ReferenceDataSourceDescription_bucketARN</a> - Amazon Resource
--   Name (ARN) of the S3 bucket.
--   
--   <a>$sel:fileKey:S3ReferenceDataSourceDescription'</a>,
--   <a>s3ReferenceDataSourceDescription_fileKey</a> - Amazon S3 object key
--   name.
--   
--   <a>$sel:referenceRoleARN:S3ReferenceDataSourceDescription'</a>,
--   <a>s3ReferenceDataSourceDescription_referenceRoleARN</a> - ARN of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object on your behalf to populate the in-application reference
--   table.
newS3ReferenceDataSourceDescription :: Text -> Text -> Text -> S3ReferenceDataSourceDescription

-- | Amazon Resource Name (ARN) of the S3 bucket.
s3ReferenceDataSourceDescription_bucketARN :: Lens' S3ReferenceDataSourceDescription Text

-- | Amazon S3 object key name.
s3ReferenceDataSourceDescription_fileKey :: Lens' S3ReferenceDataSourceDescription Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to read
--   the Amazon S3 object on your behalf to populate the in-application
--   reference table.
s3ReferenceDataSourceDescription_referenceRoleARN :: Lens' S3ReferenceDataSourceDescription Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceDescription.S3ReferenceDataSourceDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceDescription.S3ReferenceDataSourceDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceDescription.S3ReferenceDataSourceDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceDescription.S3ReferenceDataSourceDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceDescription.S3ReferenceDataSourceDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceDescription.S3ReferenceDataSourceDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceDescription.S3ReferenceDataSourceDescription


module Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceUpdate

-- | Describes the S3 bucket name, object key name, and IAM role that
--   Amazon Kinesis Analytics can assume to read the Amazon S3 object on
--   your behalf and populate the in-application reference table.
--   
--   <i>See:</i> <a>newS3ReferenceDataSourceUpdate</a> smart constructor.
data S3ReferenceDataSourceUpdate
S3ReferenceDataSourceUpdate' :: Maybe Text -> Maybe Text -> Maybe Text -> S3ReferenceDataSourceUpdate

-- | Amazon Resource Name (ARN) of the S3 bucket.
[$sel:bucketARNUpdate:S3ReferenceDataSourceUpdate'] :: S3ReferenceDataSourceUpdate -> Maybe Text

-- | Object key name.
[$sel:fileKeyUpdate:S3ReferenceDataSourceUpdate'] :: S3ReferenceDataSourceUpdate -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to read
--   the Amazon S3 object and populate the in-application.
[$sel:referenceRoleARNUpdate:S3ReferenceDataSourceUpdate'] :: S3ReferenceDataSourceUpdate -> Maybe Text

-- | Create a value of <a>S3ReferenceDataSourceUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketARNUpdate:S3ReferenceDataSourceUpdate'</a>,
--   <a>s3ReferenceDataSourceUpdate_bucketARNUpdate</a> - Amazon Resource
--   Name (ARN) of the S3 bucket.
--   
--   <a>$sel:fileKeyUpdate:S3ReferenceDataSourceUpdate'</a>,
--   <a>s3ReferenceDataSourceUpdate_fileKeyUpdate</a> - Object key name.
--   
--   <a>$sel:referenceRoleARNUpdate:S3ReferenceDataSourceUpdate'</a>,
--   <a>s3ReferenceDataSourceUpdate_referenceRoleARNUpdate</a> - ARN of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object and populate the in-application.
newS3ReferenceDataSourceUpdate :: S3ReferenceDataSourceUpdate

-- | Amazon Resource Name (ARN) of the S3 bucket.
s3ReferenceDataSourceUpdate_bucketARNUpdate :: Lens' S3ReferenceDataSourceUpdate (Maybe Text)

-- | Object key name.
s3ReferenceDataSourceUpdate_fileKeyUpdate :: Lens' S3ReferenceDataSourceUpdate (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to read
--   the Amazon S3 object and populate the in-application.
s3ReferenceDataSourceUpdate_referenceRoleARNUpdate :: Lens' S3ReferenceDataSourceUpdate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceUpdate.S3ReferenceDataSourceUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceUpdate.S3ReferenceDataSourceUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceUpdate.S3ReferenceDataSourceUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceUpdate.S3ReferenceDataSourceUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceUpdate.S3ReferenceDataSourceUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceUpdate.S3ReferenceDataSourceUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.S3ReferenceDataSourceUpdate.S3ReferenceDataSourceUpdate


module Network.AWS.KinesisAnalytics.Types.SourceSchema

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
--   
--   <i>See:</i> <a>newSourceSchema</a> smart constructor.
data SourceSchema
SourceSchema' :: Maybe Text -> RecordFormat -> NonEmpty RecordColumn -> SourceSchema

-- | Specifies the encoding of the records in the streaming source. For
--   example, UTF-8.
[$sel:recordEncoding:SourceSchema'] :: SourceSchema -> Maybe Text

-- | Specifies the format of the records on the streaming source.
[$sel:recordFormat:SourceSchema'] :: SourceSchema -> RecordFormat

-- | A list of <tt>RecordColumn</tt> objects.
[$sel:recordColumns:SourceSchema'] :: SourceSchema -> NonEmpty RecordColumn

-- | Create a value of <a>SourceSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordEncoding:SourceSchema'</a>,
--   <a>sourceSchema_recordEncoding</a> - Specifies the encoding of the
--   records in the streaming source. For example, UTF-8.
--   
--   <a>$sel:recordFormat:SourceSchema'</a>,
--   <a>sourceSchema_recordFormat</a> - Specifies the format of the records
--   on the streaming source.
--   
--   <a>$sel:recordColumns:SourceSchema'</a>,
--   <a>sourceSchema_recordColumns</a> - A list of <tt>RecordColumn</tt>
--   objects.
newSourceSchema :: RecordFormat -> NonEmpty RecordColumn -> SourceSchema

-- | Specifies the encoding of the records in the streaming source. For
--   example, UTF-8.
sourceSchema_recordEncoding :: Lens' SourceSchema (Maybe Text)

-- | Specifies the format of the records on the streaming source.
sourceSchema_recordFormat :: Lens' SourceSchema RecordFormat

-- | A list of <tt>RecordColumn</tt> objects.
sourceSchema_recordColumns :: Lens' SourceSchema (NonEmpty RecordColumn)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.SourceSchema.SourceSchema
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.SourceSchema.SourceSchema
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.SourceSchema.SourceSchema
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.SourceSchema.SourceSchema
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.SourceSchema.SourceSchema
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.SourceSchema.SourceSchema
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.SourceSchema.SourceSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.SourceSchema.SourceSchema


module Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceUpdate

-- | When you update a reference data source configuration for an
--   application, this object provides all the updated values (such as the
--   source bucket name and object key name), the in-application table name
--   that is created, and updated mapping information that maps the data in
--   the Amazon S3 object to the in-application reference table that is
--   created.
--   
--   <i>See:</i> <a>newReferenceDataSourceUpdate</a> smart constructor.
data ReferenceDataSourceUpdate
ReferenceDataSourceUpdate' :: Maybe Text -> Maybe S3ReferenceDataSourceUpdate -> Maybe SourceSchema -> Text -> ReferenceDataSourceUpdate

-- | In-application table name that is created by this update.
[$sel:tableNameUpdate:ReferenceDataSourceUpdate'] :: ReferenceDataSourceUpdate -> Maybe Text

-- | Describes the S3 bucket name, object key name, and IAM role that
--   Amazon Kinesis Analytics can assume to read the Amazon S3 object on
--   your behalf and populate the in-application reference table.
[$sel:s3ReferenceDataSourceUpdate:ReferenceDataSourceUpdate'] :: ReferenceDataSourceUpdate -> Maybe S3ReferenceDataSourceUpdate

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
[$sel:referenceSchemaUpdate:ReferenceDataSourceUpdate'] :: ReferenceDataSourceUpdate -> Maybe SourceSchema

-- | ID of the reference data source being updated. You can use the
--   <a>DescribeApplication</a> operation to get this value.
[$sel:referenceId:ReferenceDataSourceUpdate'] :: ReferenceDataSourceUpdate -> Text

-- | Create a value of <a>ReferenceDataSourceUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableNameUpdate:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_tableNameUpdate</a> - In-application
--   table name that is created by this update.
--   
--   <a>$sel:s3ReferenceDataSourceUpdate:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_s3ReferenceDataSourceUpdate</a> -
--   Describes the S3 bucket name, object key name, and IAM role that
--   Amazon Kinesis Analytics can assume to read the Amazon S3 object on
--   your behalf and populate the in-application reference table.
--   
--   <a>$sel:referenceSchemaUpdate:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_referenceSchemaUpdate</a> - Describes the
--   format of the data in the streaming source, and how each data element
--   maps to corresponding columns created in the in-application stream.
--   
--   <a>$sel:referenceId:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_referenceId</a> - ID of the reference
--   data source being updated. You can use the <a>DescribeApplication</a>
--   operation to get this value.
newReferenceDataSourceUpdate :: Text -> ReferenceDataSourceUpdate

-- | In-application table name that is created by this update.
referenceDataSourceUpdate_tableNameUpdate :: Lens' ReferenceDataSourceUpdate (Maybe Text)

-- | Describes the S3 bucket name, object key name, and IAM role that
--   Amazon Kinesis Analytics can assume to read the Amazon S3 object on
--   your behalf and populate the in-application reference table.
referenceDataSourceUpdate_s3ReferenceDataSourceUpdate :: Lens' ReferenceDataSourceUpdate (Maybe S3ReferenceDataSourceUpdate)

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
referenceDataSourceUpdate_referenceSchemaUpdate :: Lens' ReferenceDataSourceUpdate (Maybe SourceSchema)

-- | ID of the reference data source being updated. You can use the
--   <a>DescribeApplication</a> operation to get this value.
referenceDataSourceUpdate_referenceId :: Lens' ReferenceDataSourceUpdate Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceUpdate.ReferenceDataSourceUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceUpdate.ReferenceDataSourceUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceUpdate.ReferenceDataSourceUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceUpdate.ReferenceDataSourceUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceUpdate.ReferenceDataSourceUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceUpdate.ReferenceDataSourceUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceUpdate.ReferenceDataSourceUpdate


module Network.AWS.KinesisAnalytics.Types.ApplicationUpdate

-- | Describes updates to apply to an existing Amazon Kinesis Analytics
--   application.
--   
--   <i>See:</i> <a>newApplicationUpdate</a> smart constructor.
data ApplicationUpdate
ApplicationUpdate' :: Maybe [ReferenceDataSourceUpdate] -> Maybe [InputUpdate] -> Maybe [CloudWatchLoggingOptionUpdate] -> Maybe [OutputUpdate] -> Maybe Text -> ApplicationUpdate

-- | Describes application reference data source updates.
[$sel:referenceDataSourceUpdates:ApplicationUpdate'] :: ApplicationUpdate -> Maybe [ReferenceDataSourceUpdate]

-- | Describes application input configuration updates.
[$sel:inputUpdates:ApplicationUpdate'] :: ApplicationUpdate -> Maybe [InputUpdate]

-- | Describes application CloudWatch logging option updates.
[$sel:cloudWatchLoggingOptionUpdates:ApplicationUpdate'] :: ApplicationUpdate -> Maybe [CloudWatchLoggingOptionUpdate]

-- | Describes application output configuration updates.
[$sel:outputUpdates:ApplicationUpdate'] :: ApplicationUpdate -> Maybe [OutputUpdate]

-- | Describes application code updates.
[$sel:applicationCodeUpdate:ApplicationUpdate'] :: ApplicationUpdate -> Maybe Text

-- | Create a value of <a>ApplicationUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceDataSourceUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_referenceDataSourceUpdates</a> - Describes
--   application reference data source updates.
--   
--   <a>$sel:inputUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_inputUpdates</a> - Describes application input
--   configuration updates.
--   
--   <a>$sel:cloudWatchLoggingOptionUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_cloudWatchLoggingOptionUpdates</a> - Describes
--   application CloudWatch logging option updates.
--   
--   <a>$sel:outputUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_outputUpdates</a> - Describes application output
--   configuration updates.
--   
--   <a>$sel:applicationCodeUpdate:ApplicationUpdate'</a>,
--   <a>applicationUpdate_applicationCodeUpdate</a> - Describes application
--   code updates.
newApplicationUpdate :: ApplicationUpdate

-- | Describes application reference data source updates.
applicationUpdate_referenceDataSourceUpdates :: Lens' ApplicationUpdate (Maybe [ReferenceDataSourceUpdate])

-- | Describes application input configuration updates.
applicationUpdate_inputUpdates :: Lens' ApplicationUpdate (Maybe [InputUpdate])

-- | Describes application CloudWatch logging option updates.
applicationUpdate_cloudWatchLoggingOptionUpdates :: Lens' ApplicationUpdate (Maybe [CloudWatchLoggingOptionUpdate])

-- | Describes application output configuration updates.
applicationUpdate_outputUpdates :: Lens' ApplicationUpdate (Maybe [OutputUpdate])

-- | Describes application code updates.
applicationUpdate_applicationCodeUpdate :: Lens' ApplicationUpdate (Maybe Text)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.ApplicationUpdate.ApplicationUpdate
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.ApplicationUpdate.ApplicationUpdate
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.ApplicationUpdate.ApplicationUpdate
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.ApplicationUpdate.ApplicationUpdate
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.ApplicationUpdate.ApplicationUpdate
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.ApplicationUpdate.ApplicationUpdate
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.ApplicationUpdate.ApplicationUpdate


module Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceDescription

-- | Describes the reference data source configured for an application.
--   
--   <i>See:</i> <a>newReferenceDataSourceDescription</a> smart
--   constructor.
data ReferenceDataSourceDescription
ReferenceDataSourceDescription' :: Maybe SourceSchema -> Text -> Text -> S3ReferenceDataSourceDescription -> ReferenceDataSourceDescription

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
[$sel:referenceSchema:ReferenceDataSourceDescription'] :: ReferenceDataSourceDescription -> Maybe SourceSchema

-- | ID of the reference data source. This is the ID that Amazon Kinesis
--   Analytics assigns when you add the reference data source to your
--   application using the <a>AddApplicationReferenceDataSource</a>
--   operation.
[$sel:referenceId:ReferenceDataSourceDescription'] :: ReferenceDataSourceDescription -> Text

-- | The in-application table name created by the specific reference data
--   source configuration.
[$sel:tableName:ReferenceDataSourceDescription'] :: ReferenceDataSourceDescription -> Text

-- | Provides the S3 bucket name, the object key name that contains the
--   reference data. It also provides the Amazon Resource Name (ARN) of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object and populate the in-application reference table.
[$sel:s3ReferenceDataSourceDescription:ReferenceDataSourceDescription'] :: ReferenceDataSourceDescription -> S3ReferenceDataSourceDescription

-- | Create a value of <a>ReferenceDataSourceDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceSchema:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_referenceSchema</a> - Describes the
--   format of the data in the streaming source, and how each data element
--   maps to corresponding columns created in the in-application stream.
--   
--   <a>$sel:referenceId:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_referenceId</a> - ID of the
--   reference data source. This is the ID that Amazon Kinesis Analytics
--   assigns when you add the reference data source to your application
--   using the <a>AddApplicationReferenceDataSource</a> operation.
--   
--   <a>$sel:tableName:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_tableName</a> - The in-application
--   table name created by the specific reference data source
--   configuration.
--   
--   
--   <a>$sel:s3ReferenceDataSourceDescription:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_s3ReferenceDataSourceDescription</a>
--   - Provides the S3 bucket name, the object key name that contains the
--   reference data. It also provides the Amazon Resource Name (ARN) of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object and populate the in-application reference table.
newReferenceDataSourceDescription :: Text -> Text -> S3ReferenceDataSourceDescription -> ReferenceDataSourceDescription

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
referenceDataSourceDescription_referenceSchema :: Lens' ReferenceDataSourceDescription (Maybe SourceSchema)

-- | ID of the reference data source. This is the ID that Amazon Kinesis
--   Analytics assigns when you add the reference data source to your
--   application using the <a>AddApplicationReferenceDataSource</a>
--   operation.
referenceDataSourceDescription_referenceId :: Lens' ReferenceDataSourceDescription Text

-- | The in-application table name created by the specific reference data
--   source configuration.
referenceDataSourceDescription_tableName :: Lens' ReferenceDataSourceDescription Text

-- | Provides the S3 bucket name, the object key name that contains the
--   reference data. It also provides the Amazon Resource Name (ARN) of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object and populate the in-application reference table.
referenceDataSourceDescription_s3ReferenceDataSourceDescription :: Lens' ReferenceDataSourceDescription S3ReferenceDataSourceDescription
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceDescription.ReferenceDataSourceDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceDescription.ReferenceDataSourceDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceDescription.ReferenceDataSourceDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceDescription.ReferenceDataSourceDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceDescription.ReferenceDataSourceDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceDescription.ReferenceDataSourceDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.ReferenceDataSourceDescription.ReferenceDataSourceDescription


module Network.AWS.KinesisAnalytics.Types.ReferenceDataSource

-- | Describes the reference data source by providing the source
--   information (S3 bucket name and object key name), the resulting
--   in-application table name that is created, and the necessary schema to
--   map the data elements in the Amazon S3 object to the in-application
--   table.
--   
--   <i>See:</i> <a>newReferenceDataSource</a> smart constructor.
data ReferenceDataSource
ReferenceDataSource' :: Maybe S3ReferenceDataSource -> Text -> SourceSchema -> ReferenceDataSource

-- | Identifies the S3 bucket and object that contains the reference data.
--   Also identifies the IAM role Amazon Kinesis Analytics can assume to
--   read this object on your behalf. An Amazon Kinesis Analytics
--   application loads reference data only once. If the data changes, you
--   call the <tt>UpdateApplication</tt> operation to trigger reloading of
--   data into your application.
[$sel:s3ReferenceDataSource:ReferenceDataSource'] :: ReferenceDataSource -> Maybe S3ReferenceDataSource

-- | Name of the in-application table to create.
[$sel:tableName:ReferenceDataSource'] :: ReferenceDataSource -> Text

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
[$sel:referenceSchema:ReferenceDataSource'] :: ReferenceDataSource -> SourceSchema

-- | Create a value of <a>ReferenceDataSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3ReferenceDataSource:ReferenceDataSource'</a>,
--   <a>referenceDataSource_s3ReferenceDataSource</a> - Identifies the S3
--   bucket and object that contains the reference data. Also identifies
--   the IAM role Amazon Kinesis Analytics can assume to read this object
--   on your behalf. An Amazon Kinesis Analytics application loads
--   reference data only once. If the data changes, you call the
--   <tt>UpdateApplication</tt> operation to trigger reloading of data into
--   your application.
--   
--   <a>$sel:tableName:ReferenceDataSource'</a>,
--   <a>referenceDataSource_tableName</a> - Name of the in-application
--   table to create.
--   
--   <a>$sel:referenceSchema:ReferenceDataSource'</a>,
--   <a>referenceDataSource_referenceSchema</a> - Describes the format of
--   the data in the streaming source, and how each data element maps to
--   corresponding columns created in the in-application stream.
newReferenceDataSource :: Text -> SourceSchema -> ReferenceDataSource

-- | Identifies the S3 bucket and object that contains the reference data.
--   Also identifies the IAM role Amazon Kinesis Analytics can assume to
--   read this object on your behalf. An Amazon Kinesis Analytics
--   application loads reference data only once. If the data changes, you
--   call the <tt>UpdateApplication</tt> operation to trigger reloading of
--   data into your application.
referenceDataSource_s3ReferenceDataSource :: Lens' ReferenceDataSource (Maybe S3ReferenceDataSource)

-- | Name of the in-application table to create.
referenceDataSource_tableName :: Lens' ReferenceDataSource Text

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
referenceDataSource_referenceSchema :: Lens' ReferenceDataSource SourceSchema
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.ReferenceDataSource.ReferenceDataSource
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.ReferenceDataSource.ReferenceDataSource
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.ReferenceDataSource.ReferenceDataSource
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.ReferenceDataSource.ReferenceDataSource
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.ReferenceDataSource.ReferenceDataSource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.ReferenceDataSource.ReferenceDataSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.ReferenceDataSource.ReferenceDataSource


module Network.AWS.KinesisAnalytics.Types.InputDescription

-- | Describes the application input configuration. For more information,
--   see <a>Configuring Application Input</a>.
--   
--   <i>See:</i> <a>newInputDescription</a> smart constructor.
data InputDescription
InputDescription' :: Maybe InputStartingPositionConfiguration -> Maybe InputParallelism -> Maybe Text -> Maybe [Text] -> Maybe KinesisFirehoseInputDescription -> Maybe SourceSchema -> Maybe KinesisStreamsInputDescription -> Maybe Text -> Maybe InputProcessingConfigurationDescription -> InputDescription

-- | Point at which the application is configured to read from the input
--   stream.
[$sel:inputStartingPositionConfiguration:InputDescription'] :: InputDescription -> Maybe InputStartingPositionConfiguration

-- | Describes the configured parallelism (number of in-application streams
--   mapped to the streaming source).
[$sel:inputParallelism:InputDescription'] :: InputDescription -> Maybe InputParallelism

-- | Input ID associated with the application input. This is the ID that
--   Amazon Kinesis Analytics assigns to each input configuration you add
--   to your application.
[$sel:inputId:InputDescription'] :: InputDescription -> Maybe Text

-- | Returns the in-application stream names that are mapped to the stream
--   source.
[$sel:inAppStreamNames:InputDescription'] :: InputDescription -> Maybe [Text]

-- | If an Amazon Kinesis Firehose delivery stream is configured as a
--   streaming source, provides the delivery stream's ARN and an IAM role
--   that enables Amazon Kinesis Analytics to access the stream on your
--   behalf.
[$sel:kinesisFirehoseInputDescription:InputDescription'] :: InputDescription -> Maybe KinesisFirehoseInputDescription

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns in the in-application
--   stream that is being created.
[$sel:inputSchema:InputDescription'] :: InputDescription -> Maybe SourceSchema

-- | If an Amazon Kinesis stream is configured as streaming source,
--   provides Amazon Kinesis stream's Amazon Resource Name (ARN) and an IAM
--   role that enables Amazon Kinesis Analytics to access the stream on
--   your behalf.
[$sel:kinesisStreamsInputDescription:InputDescription'] :: InputDescription -> Maybe KinesisStreamsInputDescription

-- | In-application name prefix.
[$sel:namePrefix:InputDescription'] :: InputDescription -> Maybe Text

-- | The description of the preprocessor that executes on records in this
--   input before the application's code is run.
[$sel:inputProcessingConfigurationDescription:InputDescription'] :: InputDescription -> Maybe InputProcessingConfigurationDescription

-- | Create a value of <a>InputDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputStartingPositionConfiguration:InputDescription'</a>,
--   <a>inputDescription_inputStartingPositionConfiguration</a> - Point at
--   which the application is configured to read from the input stream.
--   
--   <a>$sel:inputParallelism:InputDescription'</a>,
--   <a>inputDescription_inputParallelism</a> - Describes the configured
--   parallelism (number of in-application streams mapped to the streaming
--   source).
--   
--   <a>$sel:inputId:InputDescription'</a>, <a>inputDescription_inputId</a>
--   - Input ID associated with the application input. This is the ID that
--   Amazon Kinesis Analytics assigns to each input configuration you add
--   to your application.
--   
--   <a>$sel:inAppStreamNames:InputDescription'</a>,
--   <a>inputDescription_inAppStreamNames</a> - Returns the in-application
--   stream names that are mapped to the stream source.
--   
--   <a>$sel:kinesisFirehoseInputDescription:InputDescription'</a>,
--   <a>inputDescription_kinesisFirehoseInputDescription</a> - If an Amazon
--   Kinesis Firehose delivery stream is configured as a streaming source,
--   provides the delivery stream's ARN and an IAM role that enables Amazon
--   Kinesis Analytics to access the stream on your behalf.
--   
--   <a>$sel:inputSchema:InputDescription'</a>,
--   <a>inputDescription_inputSchema</a> - Describes the format of the data
--   in the streaming source, and how each data element maps to
--   corresponding columns in the in-application stream that is being
--   created.
--   
--   <a>$sel:kinesisStreamsInputDescription:InputDescription'</a>,
--   <a>inputDescription_kinesisStreamsInputDescription</a> - If an Amazon
--   Kinesis stream is configured as streaming source, provides Amazon
--   Kinesis stream's Amazon Resource Name (ARN) and an IAM role that
--   enables Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   <a>$sel:namePrefix:InputDescription'</a>,
--   <a>inputDescription_namePrefix</a> - In-application name prefix.
--   
--   <a>$sel:inputProcessingConfigurationDescription:InputDescription'</a>,
--   <a>inputDescription_inputProcessingConfigurationDescription</a> - The
--   description of the preprocessor that executes on records in this input
--   before the application's code is run.
newInputDescription :: InputDescription

-- | Point at which the application is configured to read from the input
--   stream.
inputDescription_inputStartingPositionConfiguration :: Lens' InputDescription (Maybe InputStartingPositionConfiguration)

-- | Describes the configured parallelism (number of in-application streams
--   mapped to the streaming source).
inputDescription_inputParallelism :: Lens' InputDescription (Maybe InputParallelism)

-- | Input ID associated with the application input. This is the ID that
--   Amazon Kinesis Analytics assigns to each input configuration you add
--   to your application.
inputDescription_inputId :: Lens' InputDescription (Maybe Text)

-- | Returns the in-application stream names that are mapped to the stream
--   source.
inputDescription_inAppStreamNames :: Lens' InputDescription (Maybe [Text])

-- | If an Amazon Kinesis Firehose delivery stream is configured as a
--   streaming source, provides the delivery stream's ARN and an IAM role
--   that enables Amazon Kinesis Analytics to access the stream on your
--   behalf.
inputDescription_kinesisFirehoseInputDescription :: Lens' InputDescription (Maybe KinesisFirehoseInputDescription)

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns in the in-application
--   stream that is being created.
inputDescription_inputSchema :: Lens' InputDescription (Maybe SourceSchema)

-- | If an Amazon Kinesis stream is configured as streaming source,
--   provides Amazon Kinesis stream's Amazon Resource Name (ARN) and an IAM
--   role that enables Amazon Kinesis Analytics to access the stream on
--   your behalf.
inputDescription_kinesisStreamsInputDescription :: Lens' InputDescription (Maybe KinesisStreamsInputDescription)

-- | In-application name prefix.
inputDescription_namePrefix :: Lens' InputDescription (Maybe Text)

-- | The description of the preprocessor that executes on records in this
--   input before the application's code is run.
inputDescription_inputProcessingConfigurationDescription :: Lens' InputDescription (Maybe InputProcessingConfigurationDescription)
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.InputDescription.InputDescription
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.InputDescription.InputDescription
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.InputDescription.InputDescription
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.InputDescription.InputDescription
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.InputDescription.InputDescription
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.InputDescription.InputDescription
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.InputDescription.InputDescription


module Network.AWS.KinesisAnalytics.Types.ApplicationDetail

-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Provides a description of the application, including the application
--   Amazon Resource Name (ARN), status, latest version, and input and
--   output configuration.
--   
--   <i>See:</i> <a>newApplicationDetail</a> smart constructor.
data ApplicationDetail
ApplicationDetail' :: Maybe Text -> Maybe [OutputDescription] -> Maybe [CloudWatchLoggingOptionDescription] -> Maybe [ReferenceDataSourceDescription] -> Maybe [InputDescription] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Text -> Text -> ApplicationStatus -> Natural -> ApplicationDetail

-- | Description of the application.
[$sel:applicationDescription:ApplicationDetail'] :: ApplicationDetail -> Maybe Text

-- | Describes the application output configuration. For more information,
--   see <a>Configuring Application Output</a>.
[$sel:outputDescriptions:ApplicationDetail'] :: ApplicationDetail -> Maybe [OutputDescription]

-- | Describes the CloudWatch log streams that are configured to receive
--   application messages. For more information about using CloudWatch log
--   streams with Amazon Kinesis Analytics applications, see <a>Working
--   with Amazon CloudWatch Logs</a>.
[$sel:cloudWatchLoggingOptionDescriptions:ApplicationDetail'] :: ApplicationDetail -> Maybe [CloudWatchLoggingOptionDescription]

-- | Describes reference data sources configured for the application. For
--   more information, see <a>Configuring Application Input</a>.
[$sel:referenceDataSourceDescriptions:ApplicationDetail'] :: ApplicationDetail -> Maybe [ReferenceDataSourceDescription]

-- | Describes the application input configuration. For more information,
--   see <a>Configuring Application Input</a>.
[$sel:inputDescriptions:ApplicationDetail'] :: ApplicationDetail -> Maybe [InputDescription]

-- | Returns the application code that you provided to perform data
--   analysis on any of the in-application streams in your application.
[$sel:applicationCode:ApplicationDetail'] :: ApplicationDetail -> Maybe Text

-- | Time stamp when the application version was created.
[$sel:createTimestamp:ApplicationDetail'] :: ApplicationDetail -> Maybe POSIX

-- | Time stamp when the application was last updated.
[$sel:lastUpdateTimestamp:ApplicationDetail'] :: ApplicationDetail -> Maybe POSIX

-- | Name of the application.
[$sel:applicationName:ApplicationDetail'] :: ApplicationDetail -> Text

-- | ARN of the application.
[$sel:applicationARN:ApplicationDetail'] :: ApplicationDetail -> Text

-- | Status of the application.
[$sel:applicationStatus:ApplicationDetail'] :: ApplicationDetail -> ApplicationStatus

-- | Provides the current application version.
[$sel:applicationVersionId:ApplicationDetail'] :: ApplicationDetail -> Natural

-- | Create a value of <a>ApplicationDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationDescription:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationDescription</a> - Description of the
--   application.
--   
--   <a>$sel:outputDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_outputDescriptions</a> - Describes the
--   application output configuration. For more information, see
--   <a>Configuring Application Output</a>.
--   
--   <a>$sel:cloudWatchLoggingOptionDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_cloudWatchLoggingOptionDescriptions</a> -
--   Describes the CloudWatch log streams that are configured to receive
--   application messages. For more information about using CloudWatch log
--   streams with Amazon Kinesis Analytics applications, see <a>Working
--   with Amazon CloudWatch Logs</a>.
--   
--   <a>$sel:referenceDataSourceDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_referenceDataSourceDescriptions</a> - Describes
--   reference data sources configured for the application. For more
--   information, see <a>Configuring Application Input</a>.
--   
--   <a>$sel:inputDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_inputDescriptions</a> - Describes the application
--   input configuration. For more information, see <a>Configuring
--   Application Input</a>.
--   
--   <a>$sel:applicationCode:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationCode</a> - Returns the application
--   code that you provided to perform data analysis on any of the
--   in-application streams in your application.
--   
--   <a>$sel:createTimestamp:ApplicationDetail'</a>,
--   <a>applicationDetail_createTimestamp</a> - Time stamp when the
--   application version was created.
--   
--   <a>$sel:lastUpdateTimestamp:ApplicationDetail'</a>,
--   <a>applicationDetail_lastUpdateTimestamp</a> - Time stamp when the
--   application was last updated.
--   
--   <a>$sel:applicationName:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationName</a> - Name of the application.
--   
--   <a>$sel:applicationARN:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationARN</a> - ARN of the application.
--   
--   <a>$sel:applicationStatus:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationStatus</a> - Status of the
--   application.
--   
--   <a>$sel:applicationVersionId:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationVersionId</a> - Provides the current
--   application version.
newApplicationDetail :: Text -> Text -> ApplicationStatus -> Natural -> ApplicationDetail

-- | Description of the application.
applicationDetail_applicationDescription :: Lens' ApplicationDetail (Maybe Text)

-- | Describes the application output configuration. For more information,
--   see <a>Configuring Application Output</a>.
applicationDetail_outputDescriptions :: Lens' ApplicationDetail (Maybe [OutputDescription])

-- | Describes the CloudWatch log streams that are configured to receive
--   application messages. For more information about using CloudWatch log
--   streams with Amazon Kinesis Analytics applications, see <a>Working
--   with Amazon CloudWatch Logs</a>.
applicationDetail_cloudWatchLoggingOptionDescriptions :: Lens' ApplicationDetail (Maybe [CloudWatchLoggingOptionDescription])

-- | Describes reference data sources configured for the application. For
--   more information, see <a>Configuring Application Input</a>.
applicationDetail_referenceDataSourceDescriptions :: Lens' ApplicationDetail (Maybe [ReferenceDataSourceDescription])

-- | Describes the application input configuration. For more information,
--   see <a>Configuring Application Input</a>.
applicationDetail_inputDescriptions :: Lens' ApplicationDetail (Maybe [InputDescription])

-- | Returns the application code that you provided to perform data
--   analysis on any of the in-application streams in your application.
applicationDetail_applicationCode :: Lens' ApplicationDetail (Maybe Text)

-- | Time stamp when the application version was created.
applicationDetail_createTimestamp :: Lens' ApplicationDetail (Maybe UTCTime)

-- | Time stamp when the application was last updated.
applicationDetail_lastUpdateTimestamp :: Lens' ApplicationDetail (Maybe UTCTime)

-- | Name of the application.
applicationDetail_applicationName :: Lens' ApplicationDetail Text

-- | ARN of the application.
applicationDetail_applicationARN :: Lens' ApplicationDetail Text

-- | Status of the application.
applicationDetail_applicationStatus :: Lens' ApplicationDetail ApplicationStatus

-- | Provides the current application version.
applicationDetail_applicationVersionId :: Lens' ApplicationDetail Natural
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.ApplicationDetail.ApplicationDetail
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.ApplicationDetail.ApplicationDetail
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.ApplicationDetail.ApplicationDetail
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.ApplicationDetail.ApplicationDetail
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.ApplicationDetail.ApplicationDetail
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.ApplicationDetail.ApplicationDetail
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.ApplicationDetail.ApplicationDetail


module Network.AWS.KinesisAnalytics.Types.Input

-- | When you configure the application input, you specify the streaming
--   source, the in-application stream name that is created, and the
--   mapping between the two. For more information, see <a>Configuring
--   Application Input</a>.
--   
--   <i>See:</i> <a>newInput</a> smart constructor.
data Input
Input' :: Maybe InputParallelism -> Maybe InputProcessingConfiguration -> Maybe KinesisStreamsInput -> Maybe KinesisFirehoseInput -> Text -> SourceSchema -> Input

-- | Describes the number of in-application streams to create.
--   
--   Data from your source is routed to these in-application input streams.
--   
--   (see <a>Configuring Application Input</a>.
[$sel:inputParallelism:Input'] :: Input -> Maybe InputParallelism

-- | The <a>InputProcessingConfiguration</a> for the input. An input
--   processor transforms records as they are received from the stream,
--   before the application's SQL code executes. Currently, the only input
--   processing configuration available is <a>InputLambdaProcessor</a>.
[$sel:inputProcessingConfiguration:Input'] :: Input -> Maybe InputProcessingConfiguration

-- | If the streaming source is an Amazon Kinesis stream, identifies the
--   stream's Amazon Resource Name (ARN) and an IAM role that enables
--   Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
[$sel:kinesisStreamsInput:Input'] :: Input -> Maybe KinesisStreamsInput

-- | If the streaming source is an Amazon Kinesis Firehose delivery stream,
--   identifies the delivery stream's ARN and an IAM role that enables
--   Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
[$sel:kinesisFirehoseInput:Input'] :: Input -> Maybe KinesisFirehoseInput

-- | Name prefix to use when creating an in-application stream. Suppose
--   that you specify a prefix "MyInApplicationStream." Amazon Kinesis
--   Analytics then creates one or more (as per the
--   <tt>InputParallelism</tt> count you specified) in-application streams
--   with names "MyInApplicationStream_001," "MyInApplicationStream_002,"
--   and so on.
[$sel:namePrefix:Input'] :: Input -> Text

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns in the in-application
--   stream that is being created.
--   
--   Also used to describe the format of the reference data source.
[$sel:inputSchema:Input'] :: Input -> SourceSchema

-- | Create a value of <a>Input</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParallelism:Input'</a>, <a>input_inputParallelism</a> -
--   Describes the number of in-application streams to create.
--   
--   Data from your source is routed to these in-application input streams.
--   
--   (see <a>Configuring Application Input</a>.
--   
--   <a>$sel:inputProcessingConfiguration:Input'</a>,
--   <a>input_inputProcessingConfiguration</a> - The
--   <a>InputProcessingConfiguration</a> for the input. An input processor
--   transforms records as they are received from the stream, before the
--   application's SQL code executes. Currently, the only input processing
--   configuration available is <a>InputLambdaProcessor</a>.
--   
--   <a>$sel:kinesisStreamsInput:Input'</a>,
--   <a>input_kinesisStreamsInput</a> - If the streaming source is an
--   Amazon Kinesis stream, identifies the stream's Amazon Resource Name
--   (ARN) and an IAM role that enables Amazon Kinesis Analytics to access
--   the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
--   
--   <a>$sel:kinesisFirehoseInput:Input'</a>,
--   <a>input_kinesisFirehoseInput</a> - If the streaming source is an
--   Amazon Kinesis Firehose delivery stream, identifies the delivery
--   stream's ARN and an IAM role that enables Amazon Kinesis Analytics to
--   access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
--   
--   <a>$sel:namePrefix:Input'</a>, <a>input_namePrefix</a> - Name prefix
--   to use when creating an in-application stream. Suppose that you
--   specify a prefix "MyInApplicationStream." Amazon Kinesis Analytics
--   then creates one or more (as per the <tt>InputParallelism</tt> count
--   you specified) in-application streams with names
--   "MyInApplicationStream_001," "MyInApplicationStream_002," and so on.
--   
--   <a>$sel:inputSchema:Input'</a>, <a>input_inputSchema</a> - Describes
--   the format of the data in the streaming source, and how each data
--   element maps to corresponding columns in the in-application stream
--   that is being created.
--   
--   Also used to describe the format of the reference data source.
newInput :: Text -> SourceSchema -> Input

-- | Describes the number of in-application streams to create.
--   
--   Data from your source is routed to these in-application input streams.
--   
--   (see <a>Configuring Application Input</a>.
input_inputParallelism :: Lens' Input (Maybe InputParallelism)

-- | The <a>InputProcessingConfiguration</a> for the input. An input
--   processor transforms records as they are received from the stream,
--   before the application's SQL code executes. Currently, the only input
--   processing configuration available is <a>InputLambdaProcessor</a>.
input_inputProcessingConfiguration :: Lens' Input (Maybe InputProcessingConfiguration)

-- | If the streaming source is an Amazon Kinesis stream, identifies the
--   stream's Amazon Resource Name (ARN) and an IAM role that enables
--   Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
input_kinesisStreamsInput :: Lens' Input (Maybe KinesisStreamsInput)

-- | If the streaming source is an Amazon Kinesis Firehose delivery stream,
--   identifies the delivery stream's ARN and an IAM role that enables
--   Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
input_kinesisFirehoseInput :: Lens' Input (Maybe KinesisFirehoseInput)

-- | Name prefix to use when creating an in-application stream. Suppose
--   that you specify a prefix "MyInApplicationStream." Amazon Kinesis
--   Analytics then creates one or more (as per the
--   <tt>InputParallelism</tt> count you specified) in-application streams
--   with names "MyInApplicationStream_001," "MyInApplicationStream_002,"
--   and so on.
input_namePrefix :: Lens' Input Text

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns in the in-application
--   stream that is being created.
--   
--   Also used to describe the format of the reference data source.
input_inputSchema :: Lens' Input SourceSchema
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.Input.Input
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.Input.Input
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.Input.Input
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.Input.Input
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.Input.Input
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.Input.Input
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.Input.Input


module Network.AWS.KinesisAnalytics.Types.Tag

-- | A key-value pair (the value is optional) that you can define and
--   assign to AWS resources. If you specify a tag that already exists, the
--   tag value is replaced with the value that you specify in the request.
--   Note that the maximum number of application tags includes system tags.
--   The maximum number of user-defined application tags is 50. For more
--   information, see <a>Using Tagging</a>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | The value of the key-value tag. The value is optional.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key of the key-value tag.
[$sel:key:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the key-value
--   tag. The value is optional.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the key-value tag.
newTag :: Text -> Tag

-- | The value of the key-value tag. The value is optional.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the key-value tag.
tag_key :: Lens' Tag Text
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.Types.Tag.Tag
instance GHC.Show.Show Network.AWS.KinesisAnalytics.Types.Tag.Tag
instance GHC.Read.Read Network.AWS.KinesisAnalytics.Types.Tag.Tag
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.Types.Tag.Tag
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.KinesisAnalytics.Types.Tag.Tag
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.Types.Tag.Tag
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.Types.Tag.Tag
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.Types.Tag.Tag


module Network.AWS.KinesisAnalytics.Types

-- | API version <tt>2015-08-14</tt> of the Amazon Kinesis Analytics SDK
--   configuration.
defaultService :: Service

-- | User-provided application configuration is not valid.
_InvalidApplicationConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Discovery failed to get a record from the streaming source because of
--   the Amazon Kinesis Streams ProvisionedThroughputExceededException. For
--   more information, see <a>GetRecords</a> in the Amazon Kinesis Streams
--   API Reference.
_ResourceProvisionedThroughputExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because a specified parameter is not
--   supported or a specified resource is not valid for this operation.
_UnsupportedOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Specified input parameter value is invalid.
_InvalidArgumentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Application created with too many tags, or too many tags added to an
--   application. Note that the maximum number of application tags includes
--   system tags. The maximum number of user-defined application tags is
--   50.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | User-provided application code (query) is invalid. This can be a
--   simple syntax error.
_CodeValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception thrown as a result of concurrent modification to an
--   application. For example, two individuals attempting to edit the same
--   application at the same time.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is unavailable. Back off and retry the operation.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Data format is not valid. Amazon Kinesis Analytics is not able to
--   detect schema for the given streaming source.
_UnableToDetectSchemaException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Specified application can't be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exceeded the number of applications allowed.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Application is not available for this operation.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError
newtype ApplicationStatus
ApplicationStatus' :: Text -> ApplicationStatus
[fromApplicationStatus] :: ApplicationStatus -> Text
pattern ApplicationStatus_DELETING :: ApplicationStatus
pattern ApplicationStatus_READY :: ApplicationStatus
pattern ApplicationStatus_RUNNING :: ApplicationStatus
pattern ApplicationStatus_STARTING :: ApplicationStatus
pattern ApplicationStatus_STOPPING :: ApplicationStatus
pattern ApplicationStatus_UPDATING :: ApplicationStatus
newtype InputStartingPosition
InputStartingPosition' :: Text -> InputStartingPosition
[fromInputStartingPosition] :: InputStartingPosition -> Text
pattern InputStartingPosition_LAST_STOPPED_POINT :: InputStartingPosition
pattern InputStartingPosition_NOW :: InputStartingPosition
pattern InputStartingPosition_TRIM_HORIZON :: InputStartingPosition
newtype RecordFormatType
RecordFormatType' :: Text -> RecordFormatType
[fromRecordFormatType] :: RecordFormatType -> Text
pattern RecordFormatType_CSV :: RecordFormatType
pattern RecordFormatType_JSON :: RecordFormatType

-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Provides a description of the application, including the application
--   Amazon Resource Name (ARN), status, latest version, and input and
--   output configuration.
--   
--   <i>See:</i> <a>newApplicationDetail</a> smart constructor.
data ApplicationDetail
ApplicationDetail' :: Maybe Text -> Maybe [OutputDescription] -> Maybe [CloudWatchLoggingOptionDescription] -> Maybe [ReferenceDataSourceDescription] -> Maybe [InputDescription] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Text -> Text -> ApplicationStatus -> Natural -> ApplicationDetail

-- | Description of the application.
[$sel:applicationDescription:ApplicationDetail'] :: ApplicationDetail -> Maybe Text

-- | Describes the application output configuration. For more information,
--   see <a>Configuring Application Output</a>.
[$sel:outputDescriptions:ApplicationDetail'] :: ApplicationDetail -> Maybe [OutputDescription]

-- | Describes the CloudWatch log streams that are configured to receive
--   application messages. For more information about using CloudWatch log
--   streams with Amazon Kinesis Analytics applications, see <a>Working
--   with Amazon CloudWatch Logs</a>.
[$sel:cloudWatchLoggingOptionDescriptions:ApplicationDetail'] :: ApplicationDetail -> Maybe [CloudWatchLoggingOptionDescription]

-- | Describes reference data sources configured for the application. For
--   more information, see <a>Configuring Application Input</a>.
[$sel:referenceDataSourceDescriptions:ApplicationDetail'] :: ApplicationDetail -> Maybe [ReferenceDataSourceDescription]

-- | Describes the application input configuration. For more information,
--   see <a>Configuring Application Input</a>.
[$sel:inputDescriptions:ApplicationDetail'] :: ApplicationDetail -> Maybe [InputDescription]

-- | Returns the application code that you provided to perform data
--   analysis on any of the in-application streams in your application.
[$sel:applicationCode:ApplicationDetail'] :: ApplicationDetail -> Maybe Text

-- | Time stamp when the application version was created.
[$sel:createTimestamp:ApplicationDetail'] :: ApplicationDetail -> Maybe POSIX

-- | Time stamp when the application was last updated.
[$sel:lastUpdateTimestamp:ApplicationDetail'] :: ApplicationDetail -> Maybe POSIX

-- | Name of the application.
[$sel:applicationName:ApplicationDetail'] :: ApplicationDetail -> Text

-- | ARN of the application.
[$sel:applicationARN:ApplicationDetail'] :: ApplicationDetail -> Text

-- | Status of the application.
[$sel:applicationStatus:ApplicationDetail'] :: ApplicationDetail -> ApplicationStatus

-- | Provides the current application version.
[$sel:applicationVersionId:ApplicationDetail'] :: ApplicationDetail -> Natural

-- | Create a value of <a>ApplicationDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationDescription:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationDescription</a> - Description of the
--   application.
--   
--   <a>$sel:outputDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_outputDescriptions</a> - Describes the
--   application output configuration. For more information, see
--   <a>Configuring Application Output</a>.
--   
--   <a>$sel:cloudWatchLoggingOptionDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_cloudWatchLoggingOptionDescriptions</a> -
--   Describes the CloudWatch log streams that are configured to receive
--   application messages. For more information about using CloudWatch log
--   streams with Amazon Kinesis Analytics applications, see <a>Working
--   with Amazon CloudWatch Logs</a>.
--   
--   <a>$sel:referenceDataSourceDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_referenceDataSourceDescriptions</a> - Describes
--   reference data sources configured for the application. For more
--   information, see <a>Configuring Application Input</a>.
--   
--   <a>$sel:inputDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_inputDescriptions</a> - Describes the application
--   input configuration. For more information, see <a>Configuring
--   Application Input</a>.
--   
--   <a>$sel:applicationCode:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationCode</a> - Returns the application
--   code that you provided to perform data analysis on any of the
--   in-application streams in your application.
--   
--   <a>$sel:createTimestamp:ApplicationDetail'</a>,
--   <a>applicationDetail_createTimestamp</a> - Time stamp when the
--   application version was created.
--   
--   <a>$sel:lastUpdateTimestamp:ApplicationDetail'</a>,
--   <a>applicationDetail_lastUpdateTimestamp</a> - Time stamp when the
--   application was last updated.
--   
--   <a>$sel:applicationName:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationName</a> - Name of the application.
--   
--   <a>$sel:applicationARN:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationARN</a> - ARN of the application.
--   
--   <a>$sel:applicationStatus:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationStatus</a> - Status of the
--   application.
--   
--   <a>$sel:applicationVersionId:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationVersionId</a> - Provides the current
--   application version.
newApplicationDetail :: Text -> Text -> ApplicationStatus -> Natural -> ApplicationDetail

-- | Description of the application.
applicationDetail_applicationDescription :: Lens' ApplicationDetail (Maybe Text)

-- | Describes the application output configuration. For more information,
--   see <a>Configuring Application Output</a>.
applicationDetail_outputDescriptions :: Lens' ApplicationDetail (Maybe [OutputDescription])

-- | Describes the CloudWatch log streams that are configured to receive
--   application messages. For more information about using CloudWatch log
--   streams with Amazon Kinesis Analytics applications, see <a>Working
--   with Amazon CloudWatch Logs</a>.
applicationDetail_cloudWatchLoggingOptionDescriptions :: Lens' ApplicationDetail (Maybe [CloudWatchLoggingOptionDescription])

-- | Describes reference data sources configured for the application. For
--   more information, see <a>Configuring Application Input</a>.
applicationDetail_referenceDataSourceDescriptions :: Lens' ApplicationDetail (Maybe [ReferenceDataSourceDescription])

-- | Describes the application input configuration. For more information,
--   see <a>Configuring Application Input</a>.
applicationDetail_inputDescriptions :: Lens' ApplicationDetail (Maybe [InputDescription])

-- | Returns the application code that you provided to perform data
--   analysis on any of the in-application streams in your application.
applicationDetail_applicationCode :: Lens' ApplicationDetail (Maybe Text)

-- | Time stamp when the application version was created.
applicationDetail_createTimestamp :: Lens' ApplicationDetail (Maybe UTCTime)

-- | Time stamp when the application was last updated.
applicationDetail_lastUpdateTimestamp :: Lens' ApplicationDetail (Maybe UTCTime)

-- | Name of the application.
applicationDetail_applicationName :: Lens' ApplicationDetail Text

-- | ARN of the application.
applicationDetail_applicationARN :: Lens' ApplicationDetail Text

-- | Status of the application.
applicationDetail_applicationStatus :: Lens' ApplicationDetail ApplicationStatus

-- | Provides the current application version.
applicationDetail_applicationVersionId :: Lens' ApplicationDetail Natural

-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Provides application summary information, including the application
--   Amazon Resource Name (ARN), name, and status.
--   
--   <i>See:</i> <a>newApplicationSummary</a> smart constructor.
data ApplicationSummary
ApplicationSummary' :: Text -> Text -> ApplicationStatus -> ApplicationSummary

-- | Name of the application.
[$sel:applicationName:ApplicationSummary'] :: ApplicationSummary -> Text

-- | ARN of the application.
[$sel:applicationARN:ApplicationSummary'] :: ApplicationSummary -> Text

-- | Status of the application.
[$sel:applicationStatus:ApplicationSummary'] :: ApplicationSummary -> ApplicationStatus

-- | Create a value of <a>ApplicationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:ApplicationSummary'</a>,
--   <a>applicationSummary_applicationName</a> - Name of the application.
--   
--   <a>$sel:applicationARN:ApplicationSummary'</a>,
--   <a>applicationSummary_applicationARN</a> - ARN of the application.
--   
--   <a>$sel:applicationStatus:ApplicationSummary'</a>,
--   <a>applicationSummary_applicationStatus</a> - Status of the
--   application.
newApplicationSummary :: Text -> Text -> ApplicationStatus -> ApplicationSummary

-- | Name of the application.
applicationSummary_applicationName :: Lens' ApplicationSummary Text

-- | ARN of the application.
applicationSummary_applicationARN :: Lens' ApplicationSummary Text

-- | Status of the application.
applicationSummary_applicationStatus :: Lens' ApplicationSummary ApplicationStatus

-- | Describes updates to apply to an existing Amazon Kinesis Analytics
--   application.
--   
--   <i>See:</i> <a>newApplicationUpdate</a> smart constructor.
data ApplicationUpdate
ApplicationUpdate' :: Maybe [ReferenceDataSourceUpdate] -> Maybe [InputUpdate] -> Maybe [CloudWatchLoggingOptionUpdate] -> Maybe [OutputUpdate] -> Maybe Text -> ApplicationUpdate

-- | Describes application reference data source updates.
[$sel:referenceDataSourceUpdates:ApplicationUpdate'] :: ApplicationUpdate -> Maybe [ReferenceDataSourceUpdate]

-- | Describes application input configuration updates.
[$sel:inputUpdates:ApplicationUpdate'] :: ApplicationUpdate -> Maybe [InputUpdate]

-- | Describes application CloudWatch logging option updates.
[$sel:cloudWatchLoggingOptionUpdates:ApplicationUpdate'] :: ApplicationUpdate -> Maybe [CloudWatchLoggingOptionUpdate]

-- | Describes application output configuration updates.
[$sel:outputUpdates:ApplicationUpdate'] :: ApplicationUpdate -> Maybe [OutputUpdate]

-- | Describes application code updates.
[$sel:applicationCodeUpdate:ApplicationUpdate'] :: ApplicationUpdate -> Maybe Text

-- | Create a value of <a>ApplicationUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceDataSourceUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_referenceDataSourceUpdates</a> - Describes
--   application reference data source updates.
--   
--   <a>$sel:inputUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_inputUpdates</a> - Describes application input
--   configuration updates.
--   
--   <a>$sel:cloudWatchLoggingOptionUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_cloudWatchLoggingOptionUpdates</a> - Describes
--   application CloudWatch logging option updates.
--   
--   <a>$sel:outputUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_outputUpdates</a> - Describes application output
--   configuration updates.
--   
--   <a>$sel:applicationCodeUpdate:ApplicationUpdate'</a>,
--   <a>applicationUpdate_applicationCodeUpdate</a> - Describes application
--   code updates.
newApplicationUpdate :: ApplicationUpdate

-- | Describes application reference data source updates.
applicationUpdate_referenceDataSourceUpdates :: Lens' ApplicationUpdate (Maybe [ReferenceDataSourceUpdate])

-- | Describes application input configuration updates.
applicationUpdate_inputUpdates :: Lens' ApplicationUpdate (Maybe [InputUpdate])

-- | Describes application CloudWatch logging option updates.
applicationUpdate_cloudWatchLoggingOptionUpdates :: Lens' ApplicationUpdate (Maybe [CloudWatchLoggingOptionUpdate])

-- | Describes application output configuration updates.
applicationUpdate_outputUpdates :: Lens' ApplicationUpdate (Maybe [OutputUpdate])

-- | Describes application code updates.
applicationUpdate_applicationCodeUpdate :: Lens' ApplicationUpdate (Maybe Text)

-- | Provides additional mapping information when the record format uses
--   delimiters, such as CSV. For example, the following sample records use
--   CSV format, where the records use the <i>'\n'</i> as the row delimiter
--   and a comma (",") as the column delimiter:
--   
--   <pre>
--   "name1", "address1"
--   </pre>
--   
--   <pre>
--   "name2", "address2"
--   </pre>
--   
--   <i>See:</i> <a>newCSVMappingParameters</a> smart constructor.
data CSVMappingParameters
CSVMappingParameters' :: Text -> Text -> CSVMappingParameters

-- | Row delimiter. For example, in a CSV format, <i>'\n'</i> is the
--   typical row delimiter.
[$sel:recordRowDelimiter:CSVMappingParameters'] :: CSVMappingParameters -> Text

-- | Column delimiter. For example, in a CSV format, a comma (",") is the
--   typical column delimiter.
[$sel:recordColumnDelimiter:CSVMappingParameters'] :: CSVMappingParameters -> Text

-- | Create a value of <a>CSVMappingParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordRowDelimiter:CSVMappingParameters'</a>,
--   <a>cSVMappingParameters_recordRowDelimiter</a> - Row delimiter. For
--   example, in a CSV format, <i>'\n'</i> is the typical row delimiter.
--   
--   <a>$sel:recordColumnDelimiter:CSVMappingParameters'</a>,
--   <a>cSVMappingParameters_recordColumnDelimiter</a> - Column delimiter.
--   For example, in a CSV format, a comma (",") is the typical column
--   delimiter.
newCSVMappingParameters :: Text -> Text -> CSVMappingParameters

-- | Row delimiter. For example, in a CSV format, <i>'\n'</i> is the
--   typical row delimiter.
cSVMappingParameters_recordRowDelimiter :: Lens' CSVMappingParameters Text

-- | Column delimiter. For example, in a CSV format, a comma (",") is the
--   typical column delimiter.
cSVMappingParameters_recordColumnDelimiter :: Lens' CSVMappingParameters Text

-- | Provides a description of CloudWatch logging options, including the
--   log stream Amazon Resource Name (ARN) and the role ARN.
--   
--   <i>See:</i> <a>newCloudWatchLoggingOption</a> smart constructor.
data CloudWatchLoggingOption
CloudWatchLoggingOption' :: Text -> Text -> CloudWatchLoggingOption

-- | ARN of the CloudWatch log to receive application messages.
[$sel:logStreamARN:CloudWatchLoggingOption'] :: CloudWatchLoggingOption -> Text

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role that is used
--   must have the <tt>PutLogEvents</tt> policy action enabled.
[$sel:roleARN:CloudWatchLoggingOption'] :: CloudWatchLoggingOption -> Text

-- | Create a value of <a>CloudWatchLoggingOption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logStreamARN:CloudWatchLoggingOption'</a>,
--   <a>cloudWatchLoggingOption_logStreamARN</a> - ARN of the CloudWatch
--   log to receive application messages.
--   
--   <a>$sel:roleARN:CloudWatchLoggingOption'</a>,
--   <a>cloudWatchLoggingOption_roleARN</a> - IAM ARN of the role to use to
--   send application messages. Note: To write application messages to
--   CloudWatch, the IAM role that is used must have the
--   <tt>PutLogEvents</tt> policy action enabled.
newCloudWatchLoggingOption :: Text -> Text -> CloudWatchLoggingOption

-- | ARN of the CloudWatch log to receive application messages.
cloudWatchLoggingOption_logStreamARN :: Lens' CloudWatchLoggingOption Text

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role that is used
--   must have the <tt>PutLogEvents</tt> policy action enabled.
cloudWatchLoggingOption_roleARN :: Lens' CloudWatchLoggingOption Text

-- | Description of the CloudWatch logging option.
--   
--   <i>See:</i> <a>newCloudWatchLoggingOptionDescription</a> smart
--   constructor.
data CloudWatchLoggingOptionDescription
CloudWatchLoggingOptionDescription' :: Maybe Text -> Text -> Text -> CloudWatchLoggingOptionDescription

-- | ID of the CloudWatch logging option description.
[$sel:cloudWatchLoggingOptionId:CloudWatchLoggingOptionDescription'] :: CloudWatchLoggingOptionDescription -> Maybe Text

-- | ARN of the CloudWatch log to receive application messages.
[$sel:logStreamARN:CloudWatchLoggingOptionDescription'] :: CloudWatchLoggingOptionDescription -> Text

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role used must have
--   the <tt>PutLogEvents</tt> policy action enabled.
[$sel:roleARN:CloudWatchLoggingOptionDescription'] :: CloudWatchLoggingOptionDescription -> Text

-- | Create a value of <a>CloudWatchLoggingOptionDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cloudWatchLoggingOptionId:CloudWatchLoggingOptionDescription'</a>,
--   <a>cloudWatchLoggingOptionDescription_cloudWatchLoggingOptionId</a> -
--   ID of the CloudWatch logging option description.
--   
--   <a>$sel:logStreamARN:CloudWatchLoggingOptionDescription'</a>,
--   <a>cloudWatchLoggingOptionDescription_logStreamARN</a> - ARN of the
--   CloudWatch log to receive application messages.
--   
--   <a>$sel:roleARN:CloudWatchLoggingOptionDescription'</a>,
--   <a>cloudWatchLoggingOptionDescription_roleARN</a> - IAM ARN of the
--   role to use to send application messages. Note: To write application
--   messages to CloudWatch, the IAM role used must have the
--   <tt>PutLogEvents</tt> policy action enabled.
newCloudWatchLoggingOptionDescription :: Text -> Text -> CloudWatchLoggingOptionDescription

-- | ID of the CloudWatch logging option description.
cloudWatchLoggingOptionDescription_cloudWatchLoggingOptionId :: Lens' CloudWatchLoggingOptionDescription (Maybe Text)

-- | ARN of the CloudWatch log to receive application messages.
cloudWatchLoggingOptionDescription_logStreamARN :: Lens' CloudWatchLoggingOptionDescription Text

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role used must have
--   the <tt>PutLogEvents</tt> policy action enabled.
cloudWatchLoggingOptionDescription_roleARN :: Lens' CloudWatchLoggingOptionDescription Text

-- | Describes CloudWatch logging option updates.
--   
--   <i>See:</i> <a>newCloudWatchLoggingOptionUpdate</a> smart constructor.
data CloudWatchLoggingOptionUpdate
CloudWatchLoggingOptionUpdate' :: Maybe Text -> Maybe Text -> Text -> CloudWatchLoggingOptionUpdate

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role used must have
--   the <tt>PutLogEvents</tt> policy action enabled.
[$sel:roleARNUpdate:CloudWatchLoggingOptionUpdate'] :: CloudWatchLoggingOptionUpdate -> Maybe Text

-- | ARN of the CloudWatch log to receive application messages.
[$sel:logStreamARNUpdate:CloudWatchLoggingOptionUpdate'] :: CloudWatchLoggingOptionUpdate -> Maybe Text

-- | ID of the CloudWatch logging option to update
[$sel:cloudWatchLoggingOptionId:CloudWatchLoggingOptionUpdate'] :: CloudWatchLoggingOptionUpdate -> Text

-- | Create a value of <a>CloudWatchLoggingOptionUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:CloudWatchLoggingOptionUpdate'</a>,
--   <a>cloudWatchLoggingOptionUpdate_roleARNUpdate</a> - IAM ARN of the
--   role to use to send application messages. Note: To write application
--   messages to CloudWatch, the IAM role used must have the
--   <tt>PutLogEvents</tt> policy action enabled.
--   
--   <a>$sel:logStreamARNUpdate:CloudWatchLoggingOptionUpdate'</a>,
--   <a>cloudWatchLoggingOptionUpdate_logStreamARNUpdate</a> - ARN of the
--   CloudWatch log to receive application messages.
--   
--   <a>$sel:cloudWatchLoggingOptionId:CloudWatchLoggingOptionUpdate'</a>,
--   <a>cloudWatchLoggingOptionUpdate_cloudWatchLoggingOptionId</a> - ID of
--   the CloudWatch logging option to update
newCloudWatchLoggingOptionUpdate :: Text -> CloudWatchLoggingOptionUpdate

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role used must have
--   the <tt>PutLogEvents</tt> policy action enabled.
cloudWatchLoggingOptionUpdate_roleARNUpdate :: Lens' CloudWatchLoggingOptionUpdate (Maybe Text)

-- | ARN of the CloudWatch log to receive application messages.
cloudWatchLoggingOptionUpdate_logStreamARNUpdate :: Lens' CloudWatchLoggingOptionUpdate (Maybe Text)

-- | ID of the CloudWatch logging option to update
cloudWatchLoggingOptionUpdate_cloudWatchLoggingOptionId :: Lens' CloudWatchLoggingOptionUpdate Text

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
--   
--   <i>See:</i> <a>newDestinationSchema</a> smart constructor.
data DestinationSchema
DestinationSchema' :: RecordFormatType -> DestinationSchema

-- | Specifies the format of the records on the output stream.
[$sel:recordFormatType:DestinationSchema'] :: DestinationSchema -> RecordFormatType

-- | Create a value of <a>DestinationSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordFormatType:DestinationSchema'</a>,
--   <a>destinationSchema_recordFormatType</a> - Specifies the format of
--   the records on the output stream.
newDestinationSchema :: RecordFormatType -> DestinationSchema

-- | Specifies the format of the records on the output stream.
destinationSchema_recordFormatType :: Lens' DestinationSchema RecordFormatType

-- | When you configure the application input, you specify the streaming
--   source, the in-application stream name that is created, and the
--   mapping between the two. For more information, see <a>Configuring
--   Application Input</a>.
--   
--   <i>See:</i> <a>newInput</a> smart constructor.
data Input
Input' :: Maybe InputParallelism -> Maybe InputProcessingConfiguration -> Maybe KinesisStreamsInput -> Maybe KinesisFirehoseInput -> Text -> SourceSchema -> Input

-- | Describes the number of in-application streams to create.
--   
--   Data from your source is routed to these in-application input streams.
--   
--   (see <a>Configuring Application Input</a>.
[$sel:inputParallelism:Input'] :: Input -> Maybe InputParallelism

-- | The <a>InputProcessingConfiguration</a> for the input. An input
--   processor transforms records as they are received from the stream,
--   before the application's SQL code executes. Currently, the only input
--   processing configuration available is <a>InputLambdaProcessor</a>.
[$sel:inputProcessingConfiguration:Input'] :: Input -> Maybe InputProcessingConfiguration

-- | If the streaming source is an Amazon Kinesis stream, identifies the
--   stream's Amazon Resource Name (ARN) and an IAM role that enables
--   Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
[$sel:kinesisStreamsInput:Input'] :: Input -> Maybe KinesisStreamsInput

-- | If the streaming source is an Amazon Kinesis Firehose delivery stream,
--   identifies the delivery stream's ARN and an IAM role that enables
--   Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
[$sel:kinesisFirehoseInput:Input'] :: Input -> Maybe KinesisFirehoseInput

-- | Name prefix to use when creating an in-application stream. Suppose
--   that you specify a prefix "MyInApplicationStream." Amazon Kinesis
--   Analytics then creates one or more (as per the
--   <tt>InputParallelism</tt> count you specified) in-application streams
--   with names "MyInApplicationStream_001," "MyInApplicationStream_002,"
--   and so on.
[$sel:namePrefix:Input'] :: Input -> Text

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns in the in-application
--   stream that is being created.
--   
--   Also used to describe the format of the reference data source.
[$sel:inputSchema:Input'] :: Input -> SourceSchema

-- | Create a value of <a>Input</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParallelism:Input'</a>, <a>input_inputParallelism</a> -
--   Describes the number of in-application streams to create.
--   
--   Data from your source is routed to these in-application input streams.
--   
--   (see <a>Configuring Application Input</a>.
--   
--   <a>$sel:inputProcessingConfiguration:Input'</a>,
--   <a>input_inputProcessingConfiguration</a> - The
--   <a>InputProcessingConfiguration</a> for the input. An input processor
--   transforms records as they are received from the stream, before the
--   application's SQL code executes. Currently, the only input processing
--   configuration available is <a>InputLambdaProcessor</a>.
--   
--   <a>$sel:kinesisStreamsInput:Input'</a>,
--   <a>input_kinesisStreamsInput</a> - If the streaming source is an
--   Amazon Kinesis stream, identifies the stream's Amazon Resource Name
--   (ARN) and an IAM role that enables Amazon Kinesis Analytics to access
--   the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
--   
--   <a>$sel:kinesisFirehoseInput:Input'</a>,
--   <a>input_kinesisFirehoseInput</a> - If the streaming source is an
--   Amazon Kinesis Firehose delivery stream, identifies the delivery
--   stream's ARN and an IAM role that enables Amazon Kinesis Analytics to
--   access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
--   
--   <a>$sel:namePrefix:Input'</a>, <a>input_namePrefix</a> - Name prefix
--   to use when creating an in-application stream. Suppose that you
--   specify a prefix "MyInApplicationStream." Amazon Kinesis Analytics
--   then creates one or more (as per the <tt>InputParallelism</tt> count
--   you specified) in-application streams with names
--   "MyInApplicationStream_001," "MyInApplicationStream_002," and so on.
--   
--   <a>$sel:inputSchema:Input'</a>, <a>input_inputSchema</a> - Describes
--   the format of the data in the streaming source, and how each data
--   element maps to corresponding columns in the in-application stream
--   that is being created.
--   
--   Also used to describe the format of the reference data source.
newInput :: Text -> SourceSchema -> Input

-- | Describes the number of in-application streams to create.
--   
--   Data from your source is routed to these in-application input streams.
--   
--   (see <a>Configuring Application Input</a>.
input_inputParallelism :: Lens' Input (Maybe InputParallelism)

-- | The <a>InputProcessingConfiguration</a> for the input. An input
--   processor transforms records as they are received from the stream,
--   before the application's SQL code executes. Currently, the only input
--   processing configuration available is <a>InputLambdaProcessor</a>.
input_inputProcessingConfiguration :: Lens' Input (Maybe InputProcessingConfiguration)

-- | If the streaming source is an Amazon Kinesis stream, identifies the
--   stream's Amazon Resource Name (ARN) and an IAM role that enables
--   Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
input_kinesisStreamsInput :: Lens' Input (Maybe KinesisStreamsInput)

-- | If the streaming source is an Amazon Kinesis Firehose delivery stream,
--   identifies the delivery stream's ARN and an IAM role that enables
--   Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
input_kinesisFirehoseInput :: Lens' Input (Maybe KinesisFirehoseInput)

-- | Name prefix to use when creating an in-application stream. Suppose
--   that you specify a prefix "MyInApplicationStream." Amazon Kinesis
--   Analytics then creates one or more (as per the
--   <tt>InputParallelism</tt> count you specified) in-application streams
--   with names "MyInApplicationStream_001," "MyInApplicationStream_002,"
--   and so on.
input_namePrefix :: Lens' Input Text

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns in the in-application
--   stream that is being created.
--   
--   Also used to describe the format of the reference data source.
input_inputSchema :: Lens' Input SourceSchema

-- | When you start your application, you provide this configuration, which
--   identifies the input source and the point in the input source at which
--   you want the application to start processing records.
--   
--   <i>See:</i> <a>newInputConfiguration</a> smart constructor.
data InputConfiguration
InputConfiguration' :: Text -> InputStartingPositionConfiguration -> InputConfiguration

-- | Input source ID. You can get this ID by calling the
--   <a>DescribeApplication</a> operation.
[$sel:id:InputConfiguration'] :: InputConfiguration -> Text

-- | Point at which you want the application to start processing records
--   from the streaming source.
[$sel:inputStartingPositionConfiguration:InputConfiguration'] :: InputConfiguration -> InputStartingPositionConfiguration

-- | Create a value of <a>InputConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:InputConfiguration'</a>, <a>inputConfiguration_id</a> -
--   Input source ID. You can get this ID by calling the
--   <a>DescribeApplication</a> operation.
--   
--   <a>$sel:inputStartingPositionConfiguration:InputConfiguration'</a>,
--   <a>inputConfiguration_inputStartingPositionConfiguration</a> - Point
--   at which you want the application to start processing records from the
--   streaming source.
newInputConfiguration :: Text -> InputStartingPositionConfiguration -> InputConfiguration

-- | Input source ID. You can get this ID by calling the
--   <a>DescribeApplication</a> operation.
inputConfiguration_id :: Lens' InputConfiguration Text

-- | Point at which you want the application to start processing records
--   from the streaming source.
inputConfiguration_inputStartingPositionConfiguration :: Lens' InputConfiguration InputStartingPositionConfiguration

-- | Describes the application input configuration. For more information,
--   see <a>Configuring Application Input</a>.
--   
--   <i>See:</i> <a>newInputDescription</a> smart constructor.
data InputDescription
InputDescription' :: Maybe InputStartingPositionConfiguration -> Maybe InputParallelism -> Maybe Text -> Maybe [Text] -> Maybe KinesisFirehoseInputDescription -> Maybe SourceSchema -> Maybe KinesisStreamsInputDescription -> Maybe Text -> Maybe InputProcessingConfigurationDescription -> InputDescription

-- | Point at which the application is configured to read from the input
--   stream.
[$sel:inputStartingPositionConfiguration:InputDescription'] :: InputDescription -> Maybe InputStartingPositionConfiguration

-- | Describes the configured parallelism (number of in-application streams
--   mapped to the streaming source).
[$sel:inputParallelism:InputDescription'] :: InputDescription -> Maybe InputParallelism

-- | Input ID associated with the application input. This is the ID that
--   Amazon Kinesis Analytics assigns to each input configuration you add
--   to your application.
[$sel:inputId:InputDescription'] :: InputDescription -> Maybe Text

-- | Returns the in-application stream names that are mapped to the stream
--   source.
[$sel:inAppStreamNames:InputDescription'] :: InputDescription -> Maybe [Text]

-- | If an Amazon Kinesis Firehose delivery stream is configured as a
--   streaming source, provides the delivery stream's ARN and an IAM role
--   that enables Amazon Kinesis Analytics to access the stream on your
--   behalf.
[$sel:kinesisFirehoseInputDescription:InputDescription'] :: InputDescription -> Maybe KinesisFirehoseInputDescription

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns in the in-application
--   stream that is being created.
[$sel:inputSchema:InputDescription'] :: InputDescription -> Maybe SourceSchema

-- | If an Amazon Kinesis stream is configured as streaming source,
--   provides Amazon Kinesis stream's Amazon Resource Name (ARN) and an IAM
--   role that enables Amazon Kinesis Analytics to access the stream on
--   your behalf.
[$sel:kinesisStreamsInputDescription:InputDescription'] :: InputDescription -> Maybe KinesisStreamsInputDescription

-- | In-application name prefix.
[$sel:namePrefix:InputDescription'] :: InputDescription -> Maybe Text

-- | The description of the preprocessor that executes on records in this
--   input before the application's code is run.
[$sel:inputProcessingConfigurationDescription:InputDescription'] :: InputDescription -> Maybe InputProcessingConfigurationDescription

-- | Create a value of <a>InputDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputStartingPositionConfiguration:InputDescription'</a>,
--   <a>inputDescription_inputStartingPositionConfiguration</a> - Point at
--   which the application is configured to read from the input stream.
--   
--   <a>$sel:inputParallelism:InputDescription'</a>,
--   <a>inputDescription_inputParallelism</a> - Describes the configured
--   parallelism (number of in-application streams mapped to the streaming
--   source).
--   
--   <a>$sel:inputId:InputDescription'</a>, <a>inputDescription_inputId</a>
--   - Input ID associated with the application input. This is the ID that
--   Amazon Kinesis Analytics assigns to each input configuration you add
--   to your application.
--   
--   <a>$sel:inAppStreamNames:InputDescription'</a>,
--   <a>inputDescription_inAppStreamNames</a> - Returns the in-application
--   stream names that are mapped to the stream source.
--   
--   <a>$sel:kinesisFirehoseInputDescription:InputDescription'</a>,
--   <a>inputDescription_kinesisFirehoseInputDescription</a> - If an Amazon
--   Kinesis Firehose delivery stream is configured as a streaming source,
--   provides the delivery stream's ARN and an IAM role that enables Amazon
--   Kinesis Analytics to access the stream on your behalf.
--   
--   <a>$sel:inputSchema:InputDescription'</a>,
--   <a>inputDescription_inputSchema</a> - Describes the format of the data
--   in the streaming source, and how each data element maps to
--   corresponding columns in the in-application stream that is being
--   created.
--   
--   <a>$sel:kinesisStreamsInputDescription:InputDescription'</a>,
--   <a>inputDescription_kinesisStreamsInputDescription</a> - If an Amazon
--   Kinesis stream is configured as streaming source, provides Amazon
--   Kinesis stream's Amazon Resource Name (ARN) and an IAM role that
--   enables Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   <a>$sel:namePrefix:InputDescription'</a>,
--   <a>inputDescription_namePrefix</a> - In-application name prefix.
--   
--   <a>$sel:inputProcessingConfigurationDescription:InputDescription'</a>,
--   <a>inputDescription_inputProcessingConfigurationDescription</a> - The
--   description of the preprocessor that executes on records in this input
--   before the application's code is run.
newInputDescription :: InputDescription

-- | Point at which the application is configured to read from the input
--   stream.
inputDescription_inputStartingPositionConfiguration :: Lens' InputDescription (Maybe InputStartingPositionConfiguration)

-- | Describes the configured parallelism (number of in-application streams
--   mapped to the streaming source).
inputDescription_inputParallelism :: Lens' InputDescription (Maybe InputParallelism)

-- | Input ID associated with the application input. This is the ID that
--   Amazon Kinesis Analytics assigns to each input configuration you add
--   to your application.
inputDescription_inputId :: Lens' InputDescription (Maybe Text)

-- | Returns the in-application stream names that are mapped to the stream
--   source.
inputDescription_inAppStreamNames :: Lens' InputDescription (Maybe [Text])

-- | If an Amazon Kinesis Firehose delivery stream is configured as a
--   streaming source, provides the delivery stream's ARN and an IAM role
--   that enables Amazon Kinesis Analytics to access the stream on your
--   behalf.
inputDescription_kinesisFirehoseInputDescription :: Lens' InputDescription (Maybe KinesisFirehoseInputDescription)

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns in the in-application
--   stream that is being created.
inputDescription_inputSchema :: Lens' InputDescription (Maybe SourceSchema)

-- | If an Amazon Kinesis stream is configured as streaming source,
--   provides Amazon Kinesis stream's Amazon Resource Name (ARN) and an IAM
--   role that enables Amazon Kinesis Analytics to access the stream on
--   your behalf.
inputDescription_kinesisStreamsInputDescription :: Lens' InputDescription (Maybe KinesisStreamsInputDescription)

-- | In-application name prefix.
inputDescription_namePrefix :: Lens' InputDescription (Maybe Text)

-- | The description of the preprocessor that executes on records in this
--   input before the application's code is run.
inputDescription_inputProcessingConfigurationDescription :: Lens' InputDescription (Maybe InputProcessingConfigurationDescription)

-- | An object that contains the Amazon Resource Name (ARN) of the <a>AWS
--   Lambda</a> function that is used to preprocess records in the stream,
--   and the ARN of the IAM role that is used to access the AWS Lambda
--   function.
--   
--   <i>See:</i> <a>newInputLambdaProcessor</a> smart constructor.
data InputLambdaProcessor
InputLambdaProcessor' :: Text -> Text -> InputLambdaProcessor

-- | The ARN of the <a>AWS Lambda</a> function that operates on records in
--   the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
[$sel:resourceARN:InputLambdaProcessor'] :: InputLambdaProcessor -> Text

-- | The ARN of the IAM role that is used to access the AWS Lambda
--   function.
[$sel:roleARN:InputLambdaProcessor'] :: InputLambdaProcessor -> Text

-- | Create a value of <a>InputLambdaProcessor</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:InputLambdaProcessor'</a>,
--   <a>inputLambdaProcessor_resourceARN</a> - The ARN of the <a>AWS
--   Lambda</a> function that operates on records in the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
--   
--   <a>$sel:roleARN:InputLambdaProcessor'</a>,
--   <a>inputLambdaProcessor_roleARN</a> - The ARN of the IAM role that is
--   used to access the AWS Lambda function.
newInputLambdaProcessor :: Text -> Text -> InputLambdaProcessor

-- | The ARN of the <a>AWS Lambda</a> function that operates on records in
--   the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
inputLambdaProcessor_resourceARN :: Lens' InputLambdaProcessor Text

-- | The ARN of the IAM role that is used to access the AWS Lambda
--   function.
inputLambdaProcessor_roleARN :: Lens' InputLambdaProcessor Text

-- | An object that contains the Amazon Resource Name (ARN) of the <a>AWS
--   Lambda</a> function that is used to preprocess records in the stream,
--   and the ARN of the IAM role that is used to access the AWS Lambda
--   expression.
--   
--   <i>See:</i> <a>newInputLambdaProcessorDescription</a> smart
--   constructor.
data InputLambdaProcessorDescription
InputLambdaProcessorDescription' :: Maybe Text -> Maybe Text -> InputLambdaProcessorDescription

-- | The ARN of the <a>AWS Lambda</a> function that is used to preprocess
--   the records in the stream.
[$sel:resourceARN:InputLambdaProcessorDescription'] :: InputLambdaProcessorDescription -> Maybe Text

-- | The ARN of the IAM role that is used to access the AWS Lambda
--   function.
[$sel:roleARN:InputLambdaProcessorDescription'] :: InputLambdaProcessorDescription -> Maybe Text

-- | Create a value of <a>InputLambdaProcessorDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:InputLambdaProcessorDescription'</a>,
--   <a>inputLambdaProcessorDescription_resourceARN</a> - The ARN of the
--   <a>AWS Lambda</a> function that is used to preprocess the records in
--   the stream.
--   
--   <a>$sel:roleARN:InputLambdaProcessorDescription'</a>,
--   <a>inputLambdaProcessorDescription_roleARN</a> - The ARN of the IAM
--   role that is used to access the AWS Lambda function.
newInputLambdaProcessorDescription :: InputLambdaProcessorDescription

-- | The ARN of the <a>AWS Lambda</a> function that is used to preprocess
--   the records in the stream.
inputLambdaProcessorDescription_resourceARN :: Lens' InputLambdaProcessorDescription (Maybe Text)

-- | The ARN of the IAM role that is used to access the AWS Lambda
--   function.
inputLambdaProcessorDescription_roleARN :: Lens' InputLambdaProcessorDescription (Maybe Text)

-- | Represents an update to the <a>InputLambdaProcessor</a> that is used
--   to preprocess the records in the stream.
--   
--   <i>See:</i> <a>newInputLambdaProcessorUpdate</a> smart constructor.
data InputLambdaProcessorUpdate
InputLambdaProcessorUpdate' :: Maybe Text -> Maybe Text -> InputLambdaProcessorUpdate

-- | The ARN of the new IAM role that is used to access the AWS Lambda
--   function.
[$sel:roleARNUpdate:InputLambdaProcessorUpdate'] :: InputLambdaProcessorUpdate -> Maybe Text

-- | The Amazon Resource Name (ARN) of the new <a>AWS Lambda</a> function
--   that is used to preprocess the records in the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
[$sel:resourceARNUpdate:InputLambdaProcessorUpdate'] :: InputLambdaProcessorUpdate -> Maybe Text

-- | Create a value of <a>InputLambdaProcessorUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:InputLambdaProcessorUpdate'</a>,
--   <a>inputLambdaProcessorUpdate_roleARNUpdate</a> - The ARN of the new
--   IAM role that is used to access the AWS Lambda function.
--   
--   <a>$sel:resourceARNUpdate:InputLambdaProcessorUpdate'</a>,
--   <a>inputLambdaProcessorUpdate_resourceARNUpdate</a> - The Amazon
--   Resource Name (ARN) of the new <a>AWS Lambda</a> function that is used
--   to preprocess the records in the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
newInputLambdaProcessorUpdate :: InputLambdaProcessorUpdate

-- | The ARN of the new IAM role that is used to access the AWS Lambda
--   function.
inputLambdaProcessorUpdate_roleARNUpdate :: Lens' InputLambdaProcessorUpdate (Maybe Text)

-- | The Amazon Resource Name (ARN) of the new <a>AWS Lambda</a> function
--   that is used to preprocess the records in the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
inputLambdaProcessorUpdate_resourceARNUpdate :: Lens' InputLambdaProcessorUpdate (Maybe Text)

-- | Describes the number of in-application streams to create for a given
--   streaming source. For information about parallelism, see
--   <a>Configuring Application Input</a>.
--   
--   <i>See:</i> <a>newInputParallelism</a> smart constructor.
data InputParallelism
InputParallelism' :: Maybe Natural -> InputParallelism

-- | Number of in-application streams to create. For more information, see
--   <a>Limits</a>.
[$sel:count:InputParallelism'] :: InputParallelism -> Maybe Natural

-- | Create a value of <a>InputParallelism</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:InputParallelism'</a>, <a>inputParallelism_count</a> -
--   Number of in-application streams to create. For more information, see
--   <a>Limits</a>.
newInputParallelism :: InputParallelism

-- | Number of in-application streams to create. For more information, see
--   <a>Limits</a>.
inputParallelism_count :: Lens' InputParallelism (Maybe Natural)

-- | Provides updates to the parallelism count.
--   
--   <i>See:</i> <a>newInputParallelismUpdate</a> smart constructor.
data InputParallelismUpdate
InputParallelismUpdate' :: Maybe Natural -> InputParallelismUpdate

-- | Number of in-application streams to create for the specified streaming
--   source.
[$sel:countUpdate:InputParallelismUpdate'] :: InputParallelismUpdate -> Maybe Natural

-- | Create a value of <a>InputParallelismUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:countUpdate:InputParallelismUpdate'</a>,
--   <a>inputParallelismUpdate_countUpdate</a> - Number of in-application
--   streams to create for the specified streaming source.
newInputParallelismUpdate :: InputParallelismUpdate

-- | Number of in-application streams to create for the specified streaming
--   source.
inputParallelismUpdate_countUpdate :: Lens' InputParallelismUpdate (Maybe Natural)

-- | Provides a description of a processor that is used to preprocess the
--   records in the stream before being processed by your application code.
--   Currently, the only input processor available is <a>AWS Lambda</a>.
--   
--   <i>See:</i> <a>newInputProcessingConfiguration</a> smart constructor.
data InputProcessingConfiguration
InputProcessingConfiguration' :: InputLambdaProcessor -> InputProcessingConfiguration

-- | The <a>InputLambdaProcessor</a> that is used to preprocess the records
--   in the stream before being processed by your application code.
[$sel:inputLambdaProcessor:InputProcessingConfiguration'] :: InputProcessingConfiguration -> InputLambdaProcessor

-- | Create a value of <a>InputProcessingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputLambdaProcessor:InputProcessingConfiguration'</a>,
--   <a>inputProcessingConfiguration_inputLambdaProcessor</a> - The
--   <a>InputLambdaProcessor</a> that is used to preprocess the records in
--   the stream before being processed by your application code.
newInputProcessingConfiguration :: InputLambdaProcessor -> InputProcessingConfiguration

-- | The <a>InputLambdaProcessor</a> that is used to preprocess the records
--   in the stream before being processed by your application code.
inputProcessingConfiguration_inputLambdaProcessor :: Lens' InputProcessingConfiguration InputLambdaProcessor

-- | Provides configuration information about an input processor.
--   Currently, the only input processor available is <a>AWS Lambda</a>.
--   
--   <i>See:</i> <a>newInputProcessingConfigurationDescription</a> smart
--   constructor.
data InputProcessingConfigurationDescription
InputProcessingConfigurationDescription' :: Maybe InputLambdaProcessorDescription -> InputProcessingConfigurationDescription

-- | Provides configuration information about the associated
--   <a>InputLambdaProcessorDescription</a>.
[$sel:inputLambdaProcessorDescription:InputProcessingConfigurationDescription'] :: InputProcessingConfigurationDescription -> Maybe InputLambdaProcessorDescription

-- | Create a value of <a>InputProcessingConfigurationDescription</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:inputLambdaProcessorDescription:InputProcessingConfigurationDescription'</a>,
--   <a>inputProcessingConfigurationDescription_inputLambdaProcessorDescription</a>
--   - Provides configuration information about the associated
--   <a>InputLambdaProcessorDescription</a>.
newInputProcessingConfigurationDescription :: InputProcessingConfigurationDescription

-- | Provides configuration information about the associated
--   <a>InputLambdaProcessorDescription</a>.
inputProcessingConfigurationDescription_inputLambdaProcessorDescription :: Lens' InputProcessingConfigurationDescription (Maybe InputLambdaProcessorDescription)

-- | Describes updates to an <a>InputProcessingConfiguration</a>.
--   
--   <i>See:</i> <a>newInputProcessingConfigurationUpdate</a> smart
--   constructor.
data InputProcessingConfigurationUpdate
InputProcessingConfigurationUpdate' :: InputLambdaProcessorUpdate -> InputProcessingConfigurationUpdate

-- | Provides update information for an <a>InputLambdaProcessor</a>.
[$sel:inputLambdaProcessorUpdate:InputProcessingConfigurationUpdate'] :: InputProcessingConfigurationUpdate -> InputLambdaProcessorUpdate

-- | Create a value of <a>InputProcessingConfigurationUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:inputLambdaProcessorUpdate:InputProcessingConfigurationUpdate'</a>,
--   <a>inputProcessingConfigurationUpdate_inputLambdaProcessorUpdate</a> -
--   Provides update information for an <a>InputLambdaProcessor</a>.
newInputProcessingConfigurationUpdate :: InputLambdaProcessorUpdate -> InputProcessingConfigurationUpdate

-- | Provides update information for an <a>InputLambdaProcessor</a>.
inputProcessingConfigurationUpdate_inputLambdaProcessorUpdate :: Lens' InputProcessingConfigurationUpdate InputLambdaProcessorUpdate

-- | Describes updates for the application's input schema.
--   
--   <i>See:</i> <a>newInputSchemaUpdate</a> smart constructor.
data InputSchemaUpdate
InputSchemaUpdate' :: Maybe RecordFormat -> Maybe Text -> Maybe (NonEmpty RecordColumn) -> InputSchemaUpdate

-- | Specifies the format of the records on the streaming source.
[$sel:recordFormatUpdate:InputSchemaUpdate'] :: InputSchemaUpdate -> Maybe RecordFormat

-- | Specifies the encoding of the records in the streaming source. For
--   example, UTF-8.
[$sel:recordEncodingUpdate:InputSchemaUpdate'] :: InputSchemaUpdate -> Maybe Text

-- | A list of <tt>RecordColumn</tt> objects. Each object describes the
--   mapping of the streaming source element to the corresponding column in
--   the in-application stream.
[$sel:recordColumnUpdates:InputSchemaUpdate'] :: InputSchemaUpdate -> Maybe (NonEmpty RecordColumn)

-- | Create a value of <a>InputSchemaUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordFormatUpdate:InputSchemaUpdate'</a>,
--   <a>inputSchemaUpdate_recordFormatUpdate</a> - Specifies the format of
--   the records on the streaming source.
--   
--   <a>$sel:recordEncodingUpdate:InputSchemaUpdate'</a>,
--   <a>inputSchemaUpdate_recordEncodingUpdate</a> - Specifies the encoding
--   of the records in the streaming source. For example, UTF-8.
--   
--   <a>$sel:recordColumnUpdates:InputSchemaUpdate'</a>,
--   <a>inputSchemaUpdate_recordColumnUpdates</a> - A list of
--   <tt>RecordColumn</tt> objects. Each object describes the mapping of
--   the streaming source element to the corresponding column in the
--   in-application stream.
newInputSchemaUpdate :: InputSchemaUpdate

-- | Specifies the format of the records on the streaming source.
inputSchemaUpdate_recordFormatUpdate :: Lens' InputSchemaUpdate (Maybe RecordFormat)

-- | Specifies the encoding of the records in the streaming source. For
--   example, UTF-8.
inputSchemaUpdate_recordEncodingUpdate :: Lens' InputSchemaUpdate (Maybe Text)

-- | A list of <tt>RecordColumn</tt> objects. Each object describes the
--   mapping of the streaming source element to the corresponding column in
--   the in-application stream.
inputSchemaUpdate_recordColumnUpdates :: Lens' InputSchemaUpdate (Maybe (NonEmpty RecordColumn))

-- | Describes the point at which the application reads from the streaming
--   source.
--   
--   <i>See:</i> <a>newInputStartingPositionConfiguration</a> smart
--   constructor.
data InputStartingPositionConfiguration
InputStartingPositionConfiguration' :: Maybe InputStartingPosition -> InputStartingPositionConfiguration

-- | The starting position on the stream.
--   
--   <ul>
--   <li><tt>NOW</tt> - Start reading just after the most recent record in
--   the stream, start at the request time stamp that the customer
--   issued.</li>
--   <li><tt>TRIM_HORIZON</tt> - Start reading at the last untrimmed record
--   in the stream, which is the oldest record available in the stream.
--   This option is not available for an Amazon Kinesis Firehose delivery
--   stream.</li>
--   <li><tt>LAST_STOPPED_POINT</tt> - Resume reading from where the
--   application last stopped reading.</li>
--   </ul>
[$sel:inputStartingPosition:InputStartingPositionConfiguration'] :: InputStartingPositionConfiguration -> Maybe InputStartingPosition

-- | Create a value of <a>InputStartingPositionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputStartingPosition:InputStartingPositionConfiguration'</a>,
--   <a>inputStartingPositionConfiguration_inputStartingPosition</a> - The
--   starting position on the stream.
--   
--   <ul>
--   <li><tt>NOW</tt> - Start reading just after the most recent record in
--   the stream, start at the request time stamp that the customer
--   issued.</li>
--   <li><tt>TRIM_HORIZON</tt> - Start reading at the last untrimmed record
--   in the stream, which is the oldest record available in the stream.
--   This option is not available for an Amazon Kinesis Firehose delivery
--   stream.</li>
--   <li><tt>LAST_STOPPED_POINT</tt> - Resume reading from where the
--   application last stopped reading.</li>
--   </ul>
newInputStartingPositionConfiguration :: InputStartingPositionConfiguration

-- | The starting position on the stream.
--   
--   <ul>
--   <li><tt>NOW</tt> - Start reading just after the most recent record in
--   the stream, start at the request time stamp that the customer
--   issued.</li>
--   <li><tt>TRIM_HORIZON</tt> - Start reading at the last untrimmed record
--   in the stream, which is the oldest record available in the stream.
--   This option is not available for an Amazon Kinesis Firehose delivery
--   stream.</li>
--   <li><tt>LAST_STOPPED_POINT</tt> - Resume reading from where the
--   application last stopped reading.</li>
--   </ul>
inputStartingPositionConfiguration_inputStartingPosition :: Lens' InputStartingPositionConfiguration (Maybe InputStartingPosition)

-- | Describes updates to a specific input configuration (identified by the
--   <tt>InputId</tt> of an application).
--   
--   <i>See:</i> <a>newInputUpdate</a> smart constructor.
data InputUpdate
InputUpdate' :: Maybe InputProcessingConfigurationUpdate -> Maybe KinesisStreamsInputUpdate -> Maybe InputParallelismUpdate -> Maybe Text -> Maybe InputSchemaUpdate -> Maybe KinesisFirehoseInputUpdate -> Text -> InputUpdate

-- | Describes updates for an input processing configuration.
[$sel:inputProcessingConfigurationUpdate:InputUpdate'] :: InputUpdate -> Maybe InputProcessingConfigurationUpdate

-- | If an Amazon Kinesis stream is the streaming source to be updated,
--   provides an updated stream Amazon Resource Name (ARN) and IAM role
--   ARN.
[$sel:kinesisStreamsInputUpdate:InputUpdate'] :: InputUpdate -> Maybe KinesisStreamsInputUpdate

-- | Describes the parallelism updates (the number in-application streams
--   Amazon Kinesis Analytics creates for the specific streaming source).
[$sel:inputParallelismUpdate:InputUpdate'] :: InputUpdate -> Maybe InputParallelismUpdate

-- | Name prefix for in-application streams that Amazon Kinesis Analytics
--   creates for the specific streaming source.
[$sel:namePrefixUpdate:InputUpdate'] :: InputUpdate -> Maybe Text

-- | Describes the data format on the streaming source, and how record
--   elements on the streaming source map to columns of the in-application
--   stream that is created.
[$sel:inputSchemaUpdate:InputUpdate'] :: InputUpdate -> Maybe InputSchemaUpdate

-- | If an Amazon Kinesis Firehose delivery stream is the streaming source
--   to be updated, provides an updated stream ARN and IAM role ARN.
[$sel:kinesisFirehoseInputUpdate:InputUpdate'] :: InputUpdate -> Maybe KinesisFirehoseInputUpdate

-- | Input ID of the application input to be updated.
[$sel:inputId:InputUpdate'] :: InputUpdate -> Text

-- | Create a value of <a>InputUpdate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputProcessingConfigurationUpdate:InputUpdate'</a>,
--   <a>inputUpdate_inputProcessingConfigurationUpdate</a> - Describes
--   updates for an input processing configuration.
--   
--   <a>$sel:kinesisStreamsInputUpdate:InputUpdate'</a>,
--   <a>inputUpdate_kinesisStreamsInputUpdate</a> - If an Amazon Kinesis
--   stream is the streaming source to be updated, provides an updated
--   stream Amazon Resource Name (ARN) and IAM role ARN.
--   
--   <a>$sel:inputParallelismUpdate:InputUpdate'</a>,
--   <a>inputUpdate_inputParallelismUpdate</a> - Describes the parallelism
--   updates (the number in-application streams Amazon Kinesis Analytics
--   creates for the specific streaming source).
--   
--   <a>$sel:namePrefixUpdate:InputUpdate'</a>,
--   <a>inputUpdate_namePrefixUpdate</a> - Name prefix for in-application
--   streams that Amazon Kinesis Analytics creates for the specific
--   streaming source.
--   
--   <a>$sel:inputSchemaUpdate:InputUpdate'</a>,
--   <a>inputUpdate_inputSchemaUpdate</a> - Describes the data format on
--   the streaming source, and how record elements on the streaming source
--   map to columns of the in-application stream that is created.
--   
--   <a>$sel:kinesisFirehoseInputUpdate:InputUpdate'</a>,
--   <a>inputUpdate_kinesisFirehoseInputUpdate</a> - If an Amazon Kinesis
--   Firehose delivery stream is the streaming source to be updated,
--   provides an updated stream ARN and IAM role ARN.
--   
--   <a>$sel:inputId:InputUpdate'</a>, <a>inputUpdate_inputId</a> - Input
--   ID of the application input to be updated.
newInputUpdate :: Text -> InputUpdate

-- | Describes updates for an input processing configuration.
inputUpdate_inputProcessingConfigurationUpdate :: Lens' InputUpdate (Maybe InputProcessingConfigurationUpdate)

-- | If an Amazon Kinesis stream is the streaming source to be updated,
--   provides an updated stream Amazon Resource Name (ARN) and IAM role
--   ARN.
inputUpdate_kinesisStreamsInputUpdate :: Lens' InputUpdate (Maybe KinesisStreamsInputUpdate)

-- | Describes the parallelism updates (the number in-application streams
--   Amazon Kinesis Analytics creates for the specific streaming source).
inputUpdate_inputParallelismUpdate :: Lens' InputUpdate (Maybe InputParallelismUpdate)

-- | Name prefix for in-application streams that Amazon Kinesis Analytics
--   creates for the specific streaming source.
inputUpdate_namePrefixUpdate :: Lens' InputUpdate (Maybe Text)

-- | Describes the data format on the streaming source, and how record
--   elements on the streaming source map to columns of the in-application
--   stream that is created.
inputUpdate_inputSchemaUpdate :: Lens' InputUpdate (Maybe InputSchemaUpdate)

-- | If an Amazon Kinesis Firehose delivery stream is the streaming source
--   to be updated, provides an updated stream ARN and IAM role ARN.
inputUpdate_kinesisFirehoseInputUpdate :: Lens' InputUpdate (Maybe KinesisFirehoseInputUpdate)

-- | Input ID of the application input to be updated.
inputUpdate_inputId :: Lens' InputUpdate Text

-- | Provides additional mapping information when JSON is the record format
--   on the streaming source.
--   
--   <i>See:</i> <a>newJSONMappingParameters</a> smart constructor.
data JSONMappingParameters
JSONMappingParameters' :: Text -> JSONMappingParameters

-- | Path to the top-level parent that contains the records.
[$sel:recordRowPath:JSONMappingParameters'] :: JSONMappingParameters -> Text

-- | Create a value of <a>JSONMappingParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordRowPath:JSONMappingParameters'</a>,
--   <a>jSONMappingParameters_recordRowPath</a> - Path to the top-level
--   parent that contains the records.
newJSONMappingParameters :: Text -> JSONMappingParameters

-- | Path to the top-level parent that contains the records.
jSONMappingParameters_recordRowPath :: Lens' JSONMappingParameters Text

-- | Identifies an Amazon Kinesis Firehose delivery stream as the streaming
--   source. You provide the delivery stream's Amazon Resource Name (ARN)
--   and an IAM role ARN that enables Amazon Kinesis Analytics to access
--   the stream on your behalf.
--   
--   <i>See:</i> <a>newKinesisFirehoseInput</a> smart constructor.
data KinesisFirehoseInput
KinesisFirehoseInput' :: Text -> Text -> KinesisFirehoseInput

-- | ARN of the input delivery stream.
[$sel:resourceARN:KinesisFirehoseInput'] :: KinesisFirehoseInput -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to make sure that the role has the
--   necessary permissions to access the stream.
[$sel:roleARN:KinesisFirehoseInput'] :: KinesisFirehoseInput -> Text

-- | Create a value of <a>KinesisFirehoseInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseInput'</a>,
--   <a>kinesisFirehoseInput_resourceARN</a> - ARN of the input delivery
--   stream.
--   
--   <a>$sel:roleARN:KinesisFirehoseInput'</a>,
--   <a>kinesisFirehoseInput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to access the stream on your behalf. You
--   need to make sure that the role has the necessary permissions to
--   access the stream.
newKinesisFirehoseInput :: Text -> Text -> KinesisFirehoseInput

-- | ARN of the input delivery stream.
kinesisFirehoseInput_resourceARN :: Lens' KinesisFirehoseInput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to make sure that the role has the
--   necessary permissions to access the stream.
kinesisFirehoseInput_roleARN :: Lens' KinesisFirehoseInput Text

-- | Describes the Amazon Kinesis Firehose delivery stream that is
--   configured as the streaming source in the application input
--   configuration.
--   
--   <i>See:</i> <a>newKinesisFirehoseInputDescription</a> smart
--   constructor.
data KinesisFirehoseInputDescription
KinesisFirehoseInputDescription' :: Maybe Text -> Maybe Text -> KinesisFirehoseInputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream.
[$sel:resourceARN:KinesisFirehoseInputDescription'] :: KinesisFirehoseInputDescription -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics assumes to access
--   the stream.
[$sel:roleARN:KinesisFirehoseInputDescription'] :: KinesisFirehoseInputDescription -> Maybe Text

-- | Create a value of <a>KinesisFirehoseInputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseInputDescription'</a>,
--   <a>kinesisFirehoseInputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis Firehose delivery stream.
--   
--   <a>$sel:roleARN:KinesisFirehoseInputDescription'</a>,
--   <a>kinesisFirehoseInputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics assumes to access the stream.
newKinesisFirehoseInputDescription :: KinesisFirehoseInputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream.
kinesisFirehoseInputDescription_resourceARN :: Lens' KinesisFirehoseInputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics assumes to access
--   the stream.
kinesisFirehoseInputDescription_roleARN :: Lens' KinesisFirehoseInputDescription (Maybe Text)

-- | When updating application input configuration, provides information
--   about an Amazon Kinesis Firehose delivery stream as the streaming
--   source.
--   
--   <i>See:</i> <a>newKinesisFirehoseInputUpdate</a> smart constructor.
data KinesisFirehoseInputUpdate
KinesisFirehoseInputUpdate' :: Maybe Text -> Maybe Text -> KinesisFirehoseInputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
[$sel:roleARNUpdate:KinesisFirehoseInputUpdate'] :: KinesisFirehoseInputUpdate -> Maybe Text

-- | Amazon Resource Name (ARN) of the input Amazon Kinesis Firehose
--   delivery stream to read.
[$sel:resourceARNUpdate:KinesisFirehoseInputUpdate'] :: KinesisFirehoseInputUpdate -> Maybe Text

-- | Create a value of <a>KinesisFirehoseInputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisFirehoseInputUpdate'</a>,
--   <a>kinesisFirehoseInputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisFirehoseInputUpdate'</a>,
--   <a>kinesisFirehoseInputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the input Amazon Kinesis Firehose delivery stream to
--   read.
newKinesisFirehoseInputUpdate :: KinesisFirehoseInputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisFirehoseInputUpdate_roleARNUpdate :: Lens' KinesisFirehoseInputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the input Amazon Kinesis Firehose
--   delivery stream to read.
kinesisFirehoseInputUpdate_resourceARNUpdate :: Lens' KinesisFirehoseInputUpdate (Maybe Text)

-- | When configuring application output, identifies an Amazon Kinesis
--   Firehose delivery stream as the destination. You provide the stream
--   Amazon Resource Name (ARN) and an IAM role that enables Amazon Kinesis
--   Analytics to write to the stream on your behalf.
--   
--   <i>See:</i> <a>newKinesisFirehoseOutput</a> smart constructor.
data KinesisFirehoseOutput
KinesisFirehoseOutput' :: Text -> Text -> KinesisFirehoseOutput

-- | ARN of the destination Amazon Kinesis Firehose delivery stream to
--   write to.
[$sel:resourceARN:KinesisFirehoseOutput'] :: KinesisFirehoseOutput -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination stream on your behalf. You need to grant the
--   necessary permissions to this role.
[$sel:roleARN:KinesisFirehoseOutput'] :: KinesisFirehoseOutput -> Text

-- | Create a value of <a>KinesisFirehoseOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseOutput'</a>,
--   <a>kinesisFirehoseOutput_resourceARN</a> - ARN of the destination
--   Amazon Kinesis Firehose delivery stream to write to.
--   
--   <a>$sel:roleARN:KinesisFirehoseOutput'</a>,
--   <a>kinesisFirehoseOutput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to write to the destination stream on
--   your behalf. You need to grant the necessary permissions to this role.
newKinesisFirehoseOutput :: Text -> Text -> KinesisFirehoseOutput

-- | ARN of the destination Amazon Kinesis Firehose delivery stream to
--   write to.
kinesisFirehoseOutput_resourceARN :: Lens' KinesisFirehoseOutput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination stream on your behalf. You need to grant the
--   necessary permissions to this role.
kinesisFirehoseOutput_roleARN :: Lens' KinesisFirehoseOutput Text

-- | For an application output, describes the Amazon Kinesis Firehose
--   delivery stream configured as its destination.
--   
--   <i>See:</i> <a>newKinesisFirehoseOutputDescription</a> smart
--   constructor.
data KinesisFirehoseOutputDescription
KinesisFirehoseOutputDescription' :: Maybe Text -> Maybe Text -> KinesisFirehoseOutputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream.
[$sel:resourceARN:KinesisFirehoseOutputDescription'] :: KinesisFirehoseOutputDescription -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
[$sel:roleARN:KinesisFirehoseOutputDescription'] :: KinesisFirehoseOutputDescription -> Maybe Text

-- | Create a value of <a>KinesisFirehoseOutputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseOutputDescription'</a>,
--   <a>kinesisFirehoseOutputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis Firehose delivery stream.
--   
--   <a>$sel:roleARN:KinesisFirehoseOutputDescription'</a>,
--   <a>kinesisFirehoseOutputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream.
newKinesisFirehoseOutputDescription :: KinesisFirehoseOutputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream.
kinesisFirehoseOutputDescription_resourceARN :: Lens' KinesisFirehoseOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
kinesisFirehoseOutputDescription_roleARN :: Lens' KinesisFirehoseOutputDescription (Maybe Text)

-- | When updating an output configuration using the
--   <a>UpdateApplication</a> operation, provides information about an
--   Amazon Kinesis Firehose delivery stream configured as the destination.
--   
--   <i>See:</i> <a>newKinesisFirehoseOutputUpdate</a> smart constructor.
data KinesisFirehoseOutputUpdate
KinesisFirehoseOutputUpdate' :: Maybe Text -> Maybe Text -> KinesisFirehoseOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
[$sel:roleARNUpdate:KinesisFirehoseOutputUpdate'] :: KinesisFirehoseOutputUpdate -> Maybe Text

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream to write to.
[$sel:resourceARNUpdate:KinesisFirehoseOutputUpdate'] :: KinesisFirehoseOutputUpdate -> Maybe Text

-- | Create a value of <a>KinesisFirehoseOutputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisFirehoseOutputUpdate'</a>,
--   <a>kinesisFirehoseOutputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisFirehoseOutputUpdate'</a>,
--   <a>kinesisFirehoseOutputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis Firehose delivery stream to write to.
newKinesisFirehoseOutputUpdate :: KinesisFirehoseOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisFirehoseOutputUpdate_roleARNUpdate :: Lens' KinesisFirehoseOutputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream to write to.
kinesisFirehoseOutputUpdate_resourceARNUpdate :: Lens' KinesisFirehoseOutputUpdate (Maybe Text)

-- | Identifies an Amazon Kinesis stream as the streaming source. You
--   provide the stream's Amazon Resource Name (ARN) and an IAM role ARN
--   that enables Amazon Kinesis Analytics to access the stream on your
--   behalf.
--   
--   <i>See:</i> <a>newKinesisStreamsInput</a> smart constructor.
data KinesisStreamsInput
KinesisStreamsInput' :: Text -> Text -> KinesisStreamsInput

-- | ARN of the input Amazon Kinesis stream to read.
[$sel:resourceARN:KinesisStreamsInput'] :: KinesisStreamsInput -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
[$sel:roleARN:KinesisStreamsInput'] :: KinesisStreamsInput -> Text

-- | Create a value of <a>KinesisStreamsInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsInput'</a>,
--   <a>kinesisStreamsInput_resourceARN</a> - ARN of the input Amazon
--   Kinesis stream to read.
--   
--   <a>$sel:roleARN:KinesisStreamsInput'</a>,
--   <a>kinesisStreamsInput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to access the stream on your behalf. You
--   need to grant the necessary permissions to this role.
newKinesisStreamsInput :: Text -> Text -> KinesisStreamsInput

-- | ARN of the input Amazon Kinesis stream to read.
kinesisStreamsInput_resourceARN :: Lens' KinesisStreamsInput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisStreamsInput_roleARN :: Lens' KinesisStreamsInput Text

-- | Describes the Amazon Kinesis stream that is configured as the
--   streaming source in the application input configuration.
--   
--   <i>See:</i> <a>newKinesisStreamsInputDescription</a> smart
--   constructor.
data KinesisStreamsInputDescription
KinesisStreamsInputDescription' :: Maybe Text -> Maybe Text -> KinesisStreamsInputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream.
[$sel:resourceARN:KinesisStreamsInputDescription'] :: KinesisStreamsInputDescription -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
[$sel:roleARN:KinesisStreamsInputDescription'] :: KinesisStreamsInputDescription -> Maybe Text

-- | Create a value of <a>KinesisStreamsInputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsInputDescription'</a>,
--   <a>kinesisStreamsInputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis stream.
--   
--   <a>$sel:roleARN:KinesisStreamsInputDescription'</a>,
--   <a>kinesisStreamsInputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream.
newKinesisStreamsInputDescription :: KinesisStreamsInputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream.
kinesisStreamsInputDescription_resourceARN :: Lens' KinesisStreamsInputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
kinesisStreamsInputDescription_roleARN :: Lens' KinesisStreamsInputDescription (Maybe Text)

-- | When updating application input configuration, provides information
--   about an Amazon Kinesis stream as the streaming source.
--   
--   <i>See:</i> <a>newKinesisStreamsInputUpdate</a> smart constructor.
data KinesisStreamsInputUpdate
KinesisStreamsInputUpdate' :: Maybe Text -> Maybe Text -> KinesisStreamsInputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
[$sel:roleARNUpdate:KinesisStreamsInputUpdate'] :: KinesisStreamsInputUpdate -> Maybe Text

-- | Amazon Resource Name (ARN) of the input Amazon Kinesis stream to read.
[$sel:resourceARNUpdate:KinesisStreamsInputUpdate'] :: KinesisStreamsInputUpdate -> Maybe Text

-- | Create a value of <a>KinesisStreamsInputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisStreamsInputUpdate'</a>,
--   <a>kinesisStreamsInputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisStreamsInputUpdate'</a>,
--   <a>kinesisStreamsInputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the input Amazon Kinesis stream to read.
newKinesisStreamsInputUpdate :: KinesisStreamsInputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisStreamsInputUpdate_roleARNUpdate :: Lens' KinesisStreamsInputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the input Amazon Kinesis stream to read.
kinesisStreamsInputUpdate_resourceARNUpdate :: Lens' KinesisStreamsInputUpdate (Maybe Text)

-- | When configuring application output, identifies an Amazon Kinesis
--   stream as the destination. You provide the stream Amazon Resource Name
--   (ARN) and also an IAM role ARN that Amazon Kinesis Analytics can use
--   to write to the stream on your behalf.
--   
--   <i>See:</i> <a>newKinesisStreamsOutput</a> smart constructor.
data KinesisStreamsOutput
KinesisStreamsOutput' :: Text -> Text -> KinesisStreamsOutput

-- | ARN of the destination Amazon Kinesis stream to write to.
[$sel:resourceARN:KinesisStreamsOutput'] :: KinesisStreamsOutput -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination stream on your behalf. You need to grant the
--   necessary permissions to this role.
[$sel:roleARN:KinesisStreamsOutput'] :: KinesisStreamsOutput -> Text

-- | Create a value of <a>KinesisStreamsOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsOutput'</a>,
--   <a>kinesisStreamsOutput_resourceARN</a> - ARN of the destination
--   Amazon Kinesis stream to write to.
--   
--   <a>$sel:roleARN:KinesisStreamsOutput'</a>,
--   <a>kinesisStreamsOutput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to write to the destination stream on
--   your behalf. You need to grant the necessary permissions to this role.
newKinesisStreamsOutput :: Text -> Text -> KinesisStreamsOutput

-- | ARN of the destination Amazon Kinesis stream to write to.
kinesisStreamsOutput_resourceARN :: Lens' KinesisStreamsOutput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination stream on your behalf. You need to grant the
--   necessary permissions to this role.
kinesisStreamsOutput_roleARN :: Lens' KinesisStreamsOutput Text

-- | For an application output, describes the Amazon Kinesis stream
--   configured as its destination.
--   
--   <i>See:</i> <a>newKinesisStreamsOutputDescription</a> smart
--   constructor.
data KinesisStreamsOutputDescription
KinesisStreamsOutputDescription' :: Maybe Text -> Maybe Text -> KinesisStreamsOutputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream.
[$sel:resourceARN:KinesisStreamsOutputDescription'] :: KinesisStreamsOutputDescription -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
[$sel:roleARN:KinesisStreamsOutputDescription'] :: KinesisStreamsOutputDescription -> Maybe Text

-- | Create a value of <a>KinesisStreamsOutputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsOutputDescription'</a>,
--   <a>kinesisStreamsOutputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis stream.
--   
--   <a>$sel:roleARN:KinesisStreamsOutputDescription'</a>,
--   <a>kinesisStreamsOutputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream.
newKinesisStreamsOutputDescription :: KinesisStreamsOutputDescription

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream.
kinesisStreamsOutputDescription_resourceARN :: Lens' KinesisStreamsOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
kinesisStreamsOutputDescription_roleARN :: Lens' KinesisStreamsOutputDescription (Maybe Text)

-- | When updating an output configuration using the
--   <a>UpdateApplication</a> operation, provides information about an
--   Amazon Kinesis stream configured as the destination.
--   
--   <i>See:</i> <a>newKinesisStreamsOutputUpdate</a> smart constructor.
data KinesisStreamsOutputUpdate
KinesisStreamsOutputUpdate' :: Maybe Text -> Maybe Text -> KinesisStreamsOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
[$sel:roleARNUpdate:KinesisStreamsOutputUpdate'] :: KinesisStreamsOutputUpdate -> Maybe Text

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream where you want
--   to write the output.
[$sel:resourceARNUpdate:KinesisStreamsOutputUpdate'] :: KinesisStreamsOutputUpdate -> Maybe Text

-- | Create a value of <a>KinesisStreamsOutputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisStreamsOutputUpdate'</a>,
--   <a>kinesisStreamsOutputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisStreamsOutputUpdate'</a>,
--   <a>kinesisStreamsOutputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis stream where you want to write the
--   output.
newKinesisStreamsOutputUpdate :: KinesisStreamsOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisStreamsOutputUpdate_roleARNUpdate :: Lens' KinesisStreamsOutputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream where you want
--   to write the output.
kinesisStreamsOutputUpdate_resourceARNUpdate :: Lens' KinesisStreamsOutputUpdate (Maybe Text)

-- | When configuring application output, identifies an AWS Lambda function
--   as the destination. You provide the function Amazon Resource Name
--   (ARN) and also an IAM role ARN that Amazon Kinesis Analytics can use
--   to write to the function on your behalf.
--   
--   <i>See:</i> <a>newLambdaOutput</a> smart constructor.
data LambdaOutput
LambdaOutput' :: Text -> Text -> LambdaOutput

-- | Amazon Resource Name (ARN) of the destination Lambda function to write
--   to.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
[$sel:resourceARN:LambdaOutput'] :: LambdaOutput -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
[$sel:roleARN:LambdaOutput'] :: LambdaOutput -> Text

-- | Create a value of <a>LambdaOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:LambdaOutput'</a>, <a>lambdaOutput_resourceARN</a>
--   - Amazon Resource Name (ARN) of the destination Lambda function to
--   write to.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
--   
--   <a>$sel:roleARN:LambdaOutput'</a>, <a>lambdaOutput_roleARN</a> - ARN
--   of the IAM role that Amazon Kinesis Analytics can assume to write to
--   the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
newLambdaOutput :: Text -> Text -> LambdaOutput

-- | Amazon Resource Name (ARN) of the destination Lambda function to write
--   to.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
lambdaOutput_resourceARN :: Lens' LambdaOutput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
lambdaOutput_roleARN :: Lens' LambdaOutput Text

-- | For an application output, describes the AWS Lambda function
--   configured as its destination.
--   
--   <i>See:</i> <a>newLambdaOutputDescription</a> smart constructor.
data LambdaOutputDescription
LambdaOutputDescription' :: Maybe Text -> Maybe Text -> LambdaOutputDescription

-- | Amazon Resource Name (ARN) of the destination Lambda function.
[$sel:resourceARN:LambdaOutputDescription'] :: LambdaOutputDescription -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function.
[$sel:roleARN:LambdaOutputDescription'] :: LambdaOutputDescription -> Maybe Text

-- | Create a value of <a>LambdaOutputDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:LambdaOutputDescription'</a>,
--   <a>lambdaOutputDescription_resourceARN</a> - Amazon Resource Name
--   (ARN) of the destination Lambda function.
--   
--   <a>$sel:roleARN:LambdaOutputDescription'</a>,
--   <a>lambdaOutputDescription_roleARN</a> - ARN of the IAM role that
--   Amazon Kinesis Analytics can assume to write to the destination
--   function.
newLambdaOutputDescription :: LambdaOutputDescription

-- | Amazon Resource Name (ARN) of the destination Lambda function.
lambdaOutputDescription_resourceARN :: Lens' LambdaOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function.
lambdaOutputDescription_roleARN :: Lens' LambdaOutputDescription (Maybe Text)

-- | When updating an output configuration using the
--   <a>UpdateApplication</a> operation, provides information about an AWS
--   Lambda function configured as the destination.
--   
--   <i>See:</i> <a>newLambdaOutputUpdate</a> smart constructor.
data LambdaOutputUpdate
LambdaOutputUpdate' :: Maybe Text -> Maybe Text -> LambdaOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
[$sel:roleARNUpdate:LambdaOutputUpdate'] :: LambdaOutputUpdate -> Maybe Text

-- | Amazon Resource Name (ARN) of the destination Lambda function.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
[$sel:resourceARNUpdate:LambdaOutputUpdate'] :: LambdaOutputUpdate -> Maybe Text

-- | Create a value of <a>LambdaOutputUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:LambdaOutputUpdate'</a>,
--   <a>lambdaOutputUpdate_roleARNUpdate</a> - ARN of the IAM role that
--   Amazon Kinesis Analytics can assume to write to the destination
--   function on your behalf. You need to grant the necessary permissions
--   to this role.
--   
--   <a>$sel:resourceARNUpdate:LambdaOutputUpdate'</a>,
--   <a>lambdaOutputUpdate_resourceARNUpdate</a> - Amazon Resource Name
--   (ARN) of the destination Lambda function.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
newLambdaOutputUpdate :: LambdaOutputUpdate

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
lambdaOutputUpdate_roleARNUpdate :: Lens' LambdaOutputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the destination Lambda function.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
lambdaOutputUpdate_resourceARNUpdate :: Lens' LambdaOutputUpdate (Maybe Text)

-- | When configuring application input at the time of creating or updating
--   an application, provides additional mapping information specific to
--   the record format (such as JSON, CSV, or record fields delimited by
--   some delimiter) on the streaming source.
--   
--   <i>See:</i> <a>newMappingParameters</a> smart constructor.
data MappingParameters
MappingParameters' :: Maybe CSVMappingParameters -> Maybe JSONMappingParameters -> MappingParameters

-- | Provides additional mapping information when the record format uses
--   delimiters (for example, CSV).
[$sel:cSVMappingParameters:MappingParameters'] :: MappingParameters -> Maybe CSVMappingParameters

-- | Provides additional mapping information when JSON is the record format
--   on the streaming source.
[$sel:jSONMappingParameters:MappingParameters'] :: MappingParameters -> Maybe JSONMappingParameters

-- | Create a value of <a>MappingParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cSVMappingParameters:MappingParameters'</a>,
--   <a>mappingParameters_cSVMappingParameters</a> - Provides additional
--   mapping information when the record format uses delimiters (for
--   example, CSV).
--   
--   <a>$sel:jSONMappingParameters:MappingParameters'</a>,
--   <a>mappingParameters_jSONMappingParameters</a> - Provides additional
--   mapping information when JSON is the record format on the streaming
--   source.
newMappingParameters :: MappingParameters

-- | Provides additional mapping information when the record format uses
--   delimiters (for example, CSV).
mappingParameters_cSVMappingParameters :: Lens' MappingParameters (Maybe CSVMappingParameters)

-- | Provides additional mapping information when JSON is the record format
--   on the streaming source.
mappingParameters_jSONMappingParameters :: Lens' MappingParameters (Maybe JSONMappingParameters)

-- | Describes application output configuration in which you identify an
--   in-application stream and a destination where you want the
--   in-application stream data to be written. The destination can be an
--   Amazon Kinesis stream or an Amazon Kinesis Firehose delivery stream.
--   
--   For limits on how many destinations an application can write and other
--   limitations, see <a>Limits</a>.
--   
--   <i>See:</i> <a>newOutput</a> smart constructor.
data Output
Output' :: Maybe LambdaOutput -> Maybe KinesisStreamsOutput -> Maybe KinesisFirehoseOutput -> Text -> DestinationSchema -> Output

-- | Identifies an AWS Lambda function as the destination.
[$sel:lambdaOutput:Output'] :: Output -> Maybe LambdaOutput

-- | Identifies an Amazon Kinesis stream as the destination.
[$sel:kinesisStreamsOutput:Output'] :: Output -> Maybe KinesisStreamsOutput

-- | Identifies an Amazon Kinesis Firehose delivery stream as the
--   destination.
[$sel:kinesisFirehoseOutput:Output'] :: Output -> Maybe KinesisFirehoseOutput

-- | Name of the in-application stream.
[$sel:name:Output'] :: Output -> Text

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
[$sel:destinationSchema:Output'] :: Output -> DestinationSchema

-- | Create a value of <a>Output</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaOutput:Output'</a>, <a>output_lambdaOutput</a> -
--   Identifies an AWS Lambda function as the destination.
--   
--   <a>$sel:kinesisStreamsOutput:Output'</a>,
--   <a>output_kinesisStreamsOutput</a> - Identifies an Amazon Kinesis
--   stream as the destination.
--   
--   <a>$sel:kinesisFirehoseOutput:Output'</a>,
--   <a>output_kinesisFirehoseOutput</a> - Identifies an Amazon Kinesis
--   Firehose delivery stream as the destination.
--   
--   <a>$sel:name:Output'</a>, <a>output_name</a> - Name of the
--   in-application stream.
--   
--   <a>$sel:destinationSchema:Output'</a>, <a>output_destinationSchema</a>
--   - Describes the data format when records are written to the
--   destination. For more information, see <a>Configuring Application
--   Output</a>.
newOutput :: Text -> DestinationSchema -> Output

-- | Identifies an AWS Lambda function as the destination.
output_lambdaOutput :: Lens' Output (Maybe LambdaOutput)

-- | Identifies an Amazon Kinesis stream as the destination.
output_kinesisStreamsOutput :: Lens' Output (Maybe KinesisStreamsOutput)

-- | Identifies an Amazon Kinesis Firehose delivery stream as the
--   destination.
output_kinesisFirehoseOutput :: Lens' Output (Maybe KinesisFirehoseOutput)

-- | Name of the in-application stream.
output_name :: Lens' Output Text

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
output_destinationSchema :: Lens' Output DestinationSchema

-- | Describes the application output configuration, which includes the
--   in-application stream name and the destination where the stream data
--   is written. The destination can be an Amazon Kinesis stream or an
--   Amazon Kinesis Firehose delivery stream.
--   
--   <i>See:</i> <a>newOutputDescription</a> smart constructor.
data OutputDescription
OutputDescription' :: Maybe Text -> Maybe DestinationSchema -> Maybe KinesisFirehoseOutputDescription -> Maybe KinesisStreamsOutputDescription -> Maybe Text -> Maybe LambdaOutputDescription -> OutputDescription

-- | A unique identifier for the output configuration.
[$sel:outputId:OutputDescription'] :: OutputDescription -> Maybe Text

-- | Data format used for writing data to the destination.
[$sel:destinationSchema:OutputDescription'] :: OutputDescription -> Maybe DestinationSchema

-- | Describes the Amazon Kinesis Firehose delivery stream configured as
--   the destination where output is written.
[$sel:kinesisFirehoseOutputDescription:OutputDescription'] :: OutputDescription -> Maybe KinesisFirehoseOutputDescription

-- | Describes Amazon Kinesis stream configured as the destination where
--   output is written.
[$sel:kinesisStreamsOutputDescription:OutputDescription'] :: OutputDescription -> Maybe KinesisStreamsOutputDescription

-- | Name of the in-application stream configured as output.
[$sel:name:OutputDescription'] :: OutputDescription -> Maybe Text

-- | Describes the AWS Lambda function configured as the destination where
--   output is written.
[$sel:lambdaOutputDescription:OutputDescription'] :: OutputDescription -> Maybe LambdaOutputDescription

-- | Create a value of <a>OutputDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputId:OutputDescription'</a>,
--   <a>outputDescription_outputId</a> - A unique identifier for the output
--   configuration.
--   
--   <a>$sel:destinationSchema:OutputDescription'</a>,
--   <a>outputDescription_destinationSchema</a> - Data format used for
--   writing data to the destination.
--   
--   <a>$sel:kinesisFirehoseOutputDescription:OutputDescription'</a>,
--   <a>outputDescription_kinesisFirehoseOutputDescription</a> - Describes
--   the Amazon Kinesis Firehose delivery stream configured as the
--   destination where output is written.
--   
--   <a>$sel:kinesisStreamsOutputDescription:OutputDescription'</a>,
--   <a>outputDescription_kinesisStreamsOutputDescription</a> - Describes
--   Amazon Kinesis stream configured as the destination where output is
--   written.
--   
--   <a>$sel:name:OutputDescription'</a>, <a>outputDescription_name</a> -
--   Name of the in-application stream configured as output.
--   
--   <a>$sel:lambdaOutputDescription:OutputDescription'</a>,
--   <a>outputDescription_lambdaOutputDescription</a> - Describes the AWS
--   Lambda function configured as the destination where output is written.
newOutputDescription :: OutputDescription

-- | A unique identifier for the output configuration.
outputDescription_outputId :: Lens' OutputDescription (Maybe Text)

-- | Data format used for writing data to the destination.
outputDescription_destinationSchema :: Lens' OutputDescription (Maybe DestinationSchema)

-- | Describes the Amazon Kinesis Firehose delivery stream configured as
--   the destination where output is written.
outputDescription_kinesisFirehoseOutputDescription :: Lens' OutputDescription (Maybe KinesisFirehoseOutputDescription)

-- | Describes Amazon Kinesis stream configured as the destination where
--   output is written.
outputDescription_kinesisStreamsOutputDescription :: Lens' OutputDescription (Maybe KinesisStreamsOutputDescription)

-- | Name of the in-application stream configured as output.
outputDescription_name :: Lens' OutputDescription (Maybe Text)

-- | Describes the AWS Lambda function configured as the destination where
--   output is written.
outputDescription_lambdaOutputDescription :: Lens' OutputDescription (Maybe LambdaOutputDescription)

-- | Describes updates to the output configuration identified by the
--   <tt>OutputId</tt>.
--   
--   <i>See:</i> <a>newOutputUpdate</a> smart constructor.
data OutputUpdate
OutputUpdate' :: Maybe KinesisStreamsOutputUpdate -> Maybe DestinationSchema -> Maybe KinesisFirehoseOutputUpdate -> Maybe Text -> Maybe LambdaOutputUpdate -> Text -> OutputUpdate

-- | Describes an Amazon Kinesis stream as the destination for the output.
[$sel:kinesisStreamsOutputUpdate:OutputUpdate'] :: OutputUpdate -> Maybe KinesisStreamsOutputUpdate

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
[$sel:destinationSchemaUpdate:OutputUpdate'] :: OutputUpdate -> Maybe DestinationSchema

-- | Describes an Amazon Kinesis Firehose delivery stream as the
--   destination for the output.
[$sel:kinesisFirehoseOutputUpdate:OutputUpdate'] :: OutputUpdate -> Maybe KinesisFirehoseOutputUpdate

-- | If you want to specify a different in-application stream for this
--   output configuration, use this field to specify the new in-application
--   stream name.
[$sel:nameUpdate:OutputUpdate'] :: OutputUpdate -> Maybe Text

-- | Describes an AWS Lambda function as the destination for the output.
[$sel:lambdaOutputUpdate:OutputUpdate'] :: OutputUpdate -> Maybe LambdaOutputUpdate

-- | Identifies the specific output configuration that you want to update.
[$sel:outputId:OutputUpdate'] :: OutputUpdate -> Text

-- | Create a value of <a>OutputUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kinesisStreamsOutputUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_kinesisStreamsOutputUpdate</a> - Describes an Amazon
--   Kinesis stream as the destination for the output.
--   
--   <a>$sel:destinationSchemaUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_destinationSchemaUpdate</a> - Describes the data
--   format when records are written to the destination. For more
--   information, see <a>Configuring Application Output</a>.
--   
--   <a>$sel:kinesisFirehoseOutputUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_kinesisFirehoseOutputUpdate</a> - Describes an Amazon
--   Kinesis Firehose delivery stream as the destination for the output.
--   
--   <a>$sel:nameUpdate:OutputUpdate'</a>, <a>outputUpdate_nameUpdate</a> -
--   If you want to specify a different in-application stream for this
--   output configuration, use this field to specify the new in-application
--   stream name.
--   
--   <a>$sel:lambdaOutputUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_lambdaOutputUpdate</a> - Describes an AWS Lambda
--   function as the destination for the output.
--   
--   <a>$sel:outputId:OutputUpdate'</a>, <a>outputUpdate_outputId</a> -
--   Identifies the specific output configuration that you want to update.
newOutputUpdate :: Text -> OutputUpdate

-- | Describes an Amazon Kinesis stream as the destination for the output.
outputUpdate_kinesisStreamsOutputUpdate :: Lens' OutputUpdate (Maybe KinesisStreamsOutputUpdate)

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
outputUpdate_destinationSchemaUpdate :: Lens' OutputUpdate (Maybe DestinationSchema)

-- | Describes an Amazon Kinesis Firehose delivery stream as the
--   destination for the output.
outputUpdate_kinesisFirehoseOutputUpdate :: Lens' OutputUpdate (Maybe KinesisFirehoseOutputUpdate)

-- | If you want to specify a different in-application stream for this
--   output configuration, use this field to specify the new in-application
--   stream name.
outputUpdate_nameUpdate :: Lens' OutputUpdate (Maybe Text)

-- | Describes an AWS Lambda function as the destination for the output.
outputUpdate_lambdaOutputUpdate :: Lens' OutputUpdate (Maybe LambdaOutputUpdate)

-- | Identifies the specific output configuration that you want to update.
outputUpdate_outputId :: Lens' OutputUpdate Text

-- | Describes the mapping of each data element in the streaming source to
--   the corresponding column in the in-application stream.
--   
--   Also used to describe the format of the reference data source.
--   
--   <i>See:</i> <a>newRecordColumn</a> smart constructor.
data RecordColumn
RecordColumn' :: Maybe Text -> Text -> Text -> RecordColumn

-- | Reference to the data element in the streaming input or the reference
--   data source. This element is required if the <a>RecordFormatType</a>
--   is <tt>JSON</tt>.
[$sel:mapping:RecordColumn'] :: RecordColumn -> Maybe Text

-- | Name of the column created in the in-application input stream or
--   reference table.
[$sel:name:RecordColumn'] :: RecordColumn -> Text

-- | Type of column created in the in-application input stream or reference
--   table.
[$sel:sqlType:RecordColumn'] :: RecordColumn -> Text

-- | Create a value of <a>RecordColumn</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mapping:RecordColumn'</a>, <a>recordColumn_mapping</a> -
--   Reference to the data element in the streaming input or the reference
--   data source. This element is required if the <a>RecordFormatType</a>
--   is <tt>JSON</tt>.
--   
--   <a>$sel:name:RecordColumn'</a>, <a>recordColumn_name</a> - Name of the
--   column created in the in-application input stream or reference table.
--   
--   <a>$sel:sqlType:RecordColumn'</a>, <a>recordColumn_sqlType</a> - Type
--   of column created in the in-application input stream or reference
--   table.
newRecordColumn :: Text -> Text -> RecordColumn

-- | Reference to the data element in the streaming input or the reference
--   data source. This element is required if the <a>RecordFormatType</a>
--   is <tt>JSON</tt>.
recordColumn_mapping :: Lens' RecordColumn (Maybe Text)

-- | Name of the column created in the in-application input stream or
--   reference table.
recordColumn_name :: Lens' RecordColumn Text

-- | Type of column created in the in-application input stream or reference
--   table.
recordColumn_sqlType :: Lens' RecordColumn Text

-- | Describes the record format and relevant mapping information that
--   should be applied to schematize the records on the stream.
--   
--   <i>See:</i> <a>newRecordFormat</a> smart constructor.
data RecordFormat
RecordFormat' :: Maybe MappingParameters -> RecordFormatType -> RecordFormat

-- | When configuring application input at the time of creating or updating
--   an application, provides additional mapping information specific to
--   the record format (such as JSON, CSV, or record fields delimited by
--   some delimiter) on the streaming source.
[$sel:mappingParameters:RecordFormat'] :: RecordFormat -> Maybe MappingParameters

-- | The type of record format.
[$sel:recordFormatType:RecordFormat'] :: RecordFormat -> RecordFormatType

-- | Create a value of <a>RecordFormat</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mappingParameters:RecordFormat'</a>,
--   <a>recordFormat_mappingParameters</a> - When configuring application
--   input at the time of creating or updating an application, provides
--   additional mapping information specific to the record format (such as
--   JSON, CSV, or record fields delimited by some delimiter) on the
--   streaming source.
--   
--   <a>$sel:recordFormatType:RecordFormat'</a>,
--   <a>recordFormat_recordFormatType</a> - The type of record format.
newRecordFormat :: RecordFormatType -> RecordFormat

-- | When configuring application input at the time of creating or updating
--   an application, provides additional mapping information specific to
--   the record format (such as JSON, CSV, or record fields delimited by
--   some delimiter) on the streaming source.
recordFormat_mappingParameters :: Lens' RecordFormat (Maybe MappingParameters)

-- | The type of record format.
recordFormat_recordFormatType :: Lens' RecordFormat RecordFormatType

-- | Describes the reference data source by providing the source
--   information (S3 bucket name and object key name), the resulting
--   in-application table name that is created, and the necessary schema to
--   map the data elements in the Amazon S3 object to the in-application
--   table.
--   
--   <i>See:</i> <a>newReferenceDataSource</a> smart constructor.
data ReferenceDataSource
ReferenceDataSource' :: Maybe S3ReferenceDataSource -> Text -> SourceSchema -> ReferenceDataSource

-- | Identifies the S3 bucket and object that contains the reference data.
--   Also identifies the IAM role Amazon Kinesis Analytics can assume to
--   read this object on your behalf. An Amazon Kinesis Analytics
--   application loads reference data only once. If the data changes, you
--   call the <tt>UpdateApplication</tt> operation to trigger reloading of
--   data into your application.
[$sel:s3ReferenceDataSource:ReferenceDataSource'] :: ReferenceDataSource -> Maybe S3ReferenceDataSource

-- | Name of the in-application table to create.
[$sel:tableName:ReferenceDataSource'] :: ReferenceDataSource -> Text

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
[$sel:referenceSchema:ReferenceDataSource'] :: ReferenceDataSource -> SourceSchema

-- | Create a value of <a>ReferenceDataSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3ReferenceDataSource:ReferenceDataSource'</a>,
--   <a>referenceDataSource_s3ReferenceDataSource</a> - Identifies the S3
--   bucket and object that contains the reference data. Also identifies
--   the IAM role Amazon Kinesis Analytics can assume to read this object
--   on your behalf. An Amazon Kinesis Analytics application loads
--   reference data only once. If the data changes, you call the
--   <tt>UpdateApplication</tt> operation to trigger reloading of data into
--   your application.
--   
--   <a>$sel:tableName:ReferenceDataSource'</a>,
--   <a>referenceDataSource_tableName</a> - Name of the in-application
--   table to create.
--   
--   <a>$sel:referenceSchema:ReferenceDataSource'</a>,
--   <a>referenceDataSource_referenceSchema</a> - Describes the format of
--   the data in the streaming source, and how each data element maps to
--   corresponding columns created in the in-application stream.
newReferenceDataSource :: Text -> SourceSchema -> ReferenceDataSource

-- | Identifies the S3 bucket and object that contains the reference data.
--   Also identifies the IAM role Amazon Kinesis Analytics can assume to
--   read this object on your behalf. An Amazon Kinesis Analytics
--   application loads reference data only once. If the data changes, you
--   call the <tt>UpdateApplication</tt> operation to trigger reloading of
--   data into your application.
referenceDataSource_s3ReferenceDataSource :: Lens' ReferenceDataSource (Maybe S3ReferenceDataSource)

-- | Name of the in-application table to create.
referenceDataSource_tableName :: Lens' ReferenceDataSource Text

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
referenceDataSource_referenceSchema :: Lens' ReferenceDataSource SourceSchema

-- | Describes the reference data source configured for an application.
--   
--   <i>See:</i> <a>newReferenceDataSourceDescription</a> smart
--   constructor.
data ReferenceDataSourceDescription
ReferenceDataSourceDescription' :: Maybe SourceSchema -> Text -> Text -> S3ReferenceDataSourceDescription -> ReferenceDataSourceDescription

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
[$sel:referenceSchema:ReferenceDataSourceDescription'] :: ReferenceDataSourceDescription -> Maybe SourceSchema

-- | ID of the reference data source. This is the ID that Amazon Kinesis
--   Analytics assigns when you add the reference data source to your
--   application using the <a>AddApplicationReferenceDataSource</a>
--   operation.
[$sel:referenceId:ReferenceDataSourceDescription'] :: ReferenceDataSourceDescription -> Text

-- | The in-application table name created by the specific reference data
--   source configuration.
[$sel:tableName:ReferenceDataSourceDescription'] :: ReferenceDataSourceDescription -> Text

-- | Provides the S3 bucket name, the object key name that contains the
--   reference data. It also provides the Amazon Resource Name (ARN) of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object and populate the in-application reference table.
[$sel:s3ReferenceDataSourceDescription:ReferenceDataSourceDescription'] :: ReferenceDataSourceDescription -> S3ReferenceDataSourceDescription

-- | Create a value of <a>ReferenceDataSourceDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceSchema:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_referenceSchema</a> - Describes the
--   format of the data in the streaming source, and how each data element
--   maps to corresponding columns created in the in-application stream.
--   
--   <a>$sel:referenceId:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_referenceId</a> - ID of the
--   reference data source. This is the ID that Amazon Kinesis Analytics
--   assigns when you add the reference data source to your application
--   using the <a>AddApplicationReferenceDataSource</a> operation.
--   
--   <a>$sel:tableName:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_tableName</a> - The in-application
--   table name created by the specific reference data source
--   configuration.
--   
--   
--   <a>$sel:s3ReferenceDataSourceDescription:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_s3ReferenceDataSourceDescription</a>
--   - Provides the S3 bucket name, the object key name that contains the
--   reference data. It also provides the Amazon Resource Name (ARN) of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object and populate the in-application reference table.
newReferenceDataSourceDescription :: Text -> Text -> S3ReferenceDataSourceDescription -> ReferenceDataSourceDescription

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
referenceDataSourceDescription_referenceSchema :: Lens' ReferenceDataSourceDescription (Maybe SourceSchema)

-- | ID of the reference data source. This is the ID that Amazon Kinesis
--   Analytics assigns when you add the reference data source to your
--   application using the <a>AddApplicationReferenceDataSource</a>
--   operation.
referenceDataSourceDescription_referenceId :: Lens' ReferenceDataSourceDescription Text

-- | The in-application table name created by the specific reference data
--   source configuration.
referenceDataSourceDescription_tableName :: Lens' ReferenceDataSourceDescription Text

-- | Provides the S3 bucket name, the object key name that contains the
--   reference data. It also provides the Amazon Resource Name (ARN) of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object and populate the in-application reference table.
referenceDataSourceDescription_s3ReferenceDataSourceDescription :: Lens' ReferenceDataSourceDescription S3ReferenceDataSourceDescription

-- | When you update a reference data source configuration for an
--   application, this object provides all the updated values (such as the
--   source bucket name and object key name), the in-application table name
--   that is created, and updated mapping information that maps the data in
--   the Amazon S3 object to the in-application reference table that is
--   created.
--   
--   <i>See:</i> <a>newReferenceDataSourceUpdate</a> smart constructor.
data ReferenceDataSourceUpdate
ReferenceDataSourceUpdate' :: Maybe Text -> Maybe S3ReferenceDataSourceUpdate -> Maybe SourceSchema -> Text -> ReferenceDataSourceUpdate

-- | In-application table name that is created by this update.
[$sel:tableNameUpdate:ReferenceDataSourceUpdate'] :: ReferenceDataSourceUpdate -> Maybe Text

-- | Describes the S3 bucket name, object key name, and IAM role that
--   Amazon Kinesis Analytics can assume to read the Amazon S3 object on
--   your behalf and populate the in-application reference table.
[$sel:s3ReferenceDataSourceUpdate:ReferenceDataSourceUpdate'] :: ReferenceDataSourceUpdate -> Maybe S3ReferenceDataSourceUpdate

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
[$sel:referenceSchemaUpdate:ReferenceDataSourceUpdate'] :: ReferenceDataSourceUpdate -> Maybe SourceSchema

-- | ID of the reference data source being updated. You can use the
--   <a>DescribeApplication</a> operation to get this value.
[$sel:referenceId:ReferenceDataSourceUpdate'] :: ReferenceDataSourceUpdate -> Text

-- | Create a value of <a>ReferenceDataSourceUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableNameUpdate:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_tableNameUpdate</a> - In-application
--   table name that is created by this update.
--   
--   <a>$sel:s3ReferenceDataSourceUpdate:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_s3ReferenceDataSourceUpdate</a> -
--   Describes the S3 bucket name, object key name, and IAM role that
--   Amazon Kinesis Analytics can assume to read the Amazon S3 object on
--   your behalf and populate the in-application reference table.
--   
--   <a>$sel:referenceSchemaUpdate:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_referenceSchemaUpdate</a> - Describes the
--   format of the data in the streaming source, and how each data element
--   maps to corresponding columns created in the in-application stream.
--   
--   <a>$sel:referenceId:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_referenceId</a> - ID of the reference
--   data source being updated. You can use the <a>DescribeApplication</a>
--   operation to get this value.
newReferenceDataSourceUpdate :: Text -> ReferenceDataSourceUpdate

-- | In-application table name that is created by this update.
referenceDataSourceUpdate_tableNameUpdate :: Lens' ReferenceDataSourceUpdate (Maybe Text)

-- | Describes the S3 bucket name, object key name, and IAM role that
--   Amazon Kinesis Analytics can assume to read the Amazon S3 object on
--   your behalf and populate the in-application reference table.
referenceDataSourceUpdate_s3ReferenceDataSourceUpdate :: Lens' ReferenceDataSourceUpdate (Maybe S3ReferenceDataSourceUpdate)

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
referenceDataSourceUpdate_referenceSchemaUpdate :: Lens' ReferenceDataSourceUpdate (Maybe SourceSchema)

-- | ID of the reference data source being updated. You can use the
--   <a>DescribeApplication</a> operation to get this value.
referenceDataSourceUpdate_referenceId :: Lens' ReferenceDataSourceUpdate Text

-- | Provides a description of an Amazon S3 data source, including the
--   Amazon Resource Name (ARN) of the S3 bucket, the ARN of the IAM role
--   that is used to access the bucket, and the name of the Amazon S3
--   object that contains the data.
--   
--   <i>See:</i> <a>newS3Configuration</a> smart constructor.
data S3Configuration
S3Configuration' :: Text -> Text -> Text -> S3Configuration

-- | IAM ARN of the role used to access the data.
[$sel:roleARN:S3Configuration'] :: S3Configuration -> Text

-- | ARN of the S3 bucket that contains the data.
[$sel:bucketARN:S3Configuration'] :: S3Configuration -> Text

-- | The name of the object that contains the data.
[$sel:fileKey:S3Configuration'] :: S3Configuration -> Text

-- | Create a value of <a>S3Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:S3Configuration'</a>, <a>s3Configuration_roleARN</a> -
--   IAM ARN of the role used to access the data.
--   
--   <a>$sel:bucketARN:S3Configuration'</a>,
--   <a>s3Configuration_bucketARN</a> - ARN of the S3 bucket that contains
--   the data.
--   
--   <a>$sel:fileKey:S3Configuration'</a>, <a>s3Configuration_fileKey</a> -
--   The name of the object that contains the data.
newS3Configuration :: Text -> Text -> Text -> S3Configuration

-- | IAM ARN of the role used to access the data.
s3Configuration_roleARN :: Lens' S3Configuration Text

-- | ARN of the S3 bucket that contains the data.
s3Configuration_bucketARN :: Lens' S3Configuration Text

-- | The name of the object that contains the data.
s3Configuration_fileKey :: Lens' S3Configuration Text

-- | Identifies the S3 bucket and object that contains the reference data.
--   Also identifies the IAM role Amazon Kinesis Analytics can assume to
--   read this object on your behalf.
--   
--   An Amazon Kinesis Analytics application loads reference data only
--   once. If the data changes, you call the <a>UpdateApplication</a>
--   operation to trigger reloading of data into your application.
--   
--   <i>See:</i> <a>newS3ReferenceDataSource</a> smart constructor.
data S3ReferenceDataSource
S3ReferenceDataSource' :: Text -> Text -> Text -> S3ReferenceDataSource

-- | Amazon Resource Name (ARN) of the S3 bucket.
[$sel:bucketARN:S3ReferenceDataSource'] :: S3ReferenceDataSource -> Text

-- | Object key name containing reference data.
[$sel:fileKey:S3ReferenceDataSource'] :: S3ReferenceDataSource -> Text

-- | ARN of the IAM role that the service can assume to read data on your
--   behalf. This role must have permission for the <tt>s3:GetObject</tt>
--   action on the object and trust policy that allows Amazon Kinesis
--   Analytics service principal to assume this role.
[$sel:referenceRoleARN:S3ReferenceDataSource'] :: S3ReferenceDataSource -> Text

-- | Create a value of <a>S3ReferenceDataSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketARN:S3ReferenceDataSource'</a>,
--   <a>s3ReferenceDataSource_bucketARN</a> - Amazon Resource Name (ARN) of
--   the S3 bucket.
--   
--   <a>$sel:fileKey:S3ReferenceDataSource'</a>,
--   <a>s3ReferenceDataSource_fileKey</a> - Object key name containing
--   reference data.
--   
--   <a>$sel:referenceRoleARN:S3ReferenceDataSource'</a>,
--   <a>s3ReferenceDataSource_referenceRoleARN</a> - ARN of the IAM role
--   that the service can assume to read data on your behalf. This role
--   must have permission for the <tt>s3:GetObject</tt> action on the
--   object and trust policy that allows Amazon Kinesis Analytics service
--   principal to assume this role.
newS3ReferenceDataSource :: Text -> Text -> Text -> S3ReferenceDataSource

-- | Amazon Resource Name (ARN) of the S3 bucket.
s3ReferenceDataSource_bucketARN :: Lens' S3ReferenceDataSource Text

-- | Object key name containing reference data.
s3ReferenceDataSource_fileKey :: Lens' S3ReferenceDataSource Text

-- | ARN of the IAM role that the service can assume to read data on your
--   behalf. This role must have permission for the <tt>s3:GetObject</tt>
--   action on the object and trust policy that allows Amazon Kinesis
--   Analytics service principal to assume this role.
s3ReferenceDataSource_referenceRoleARN :: Lens' S3ReferenceDataSource Text

-- | Provides the bucket name and object key name that stores the reference
--   data.
--   
--   <i>See:</i> <a>newS3ReferenceDataSourceDescription</a> smart
--   constructor.
data S3ReferenceDataSourceDescription
S3ReferenceDataSourceDescription' :: Text -> Text -> Text -> S3ReferenceDataSourceDescription

-- | Amazon Resource Name (ARN) of the S3 bucket.
[$sel:bucketARN:S3ReferenceDataSourceDescription'] :: S3ReferenceDataSourceDescription -> Text

-- | Amazon S3 object key name.
[$sel:fileKey:S3ReferenceDataSourceDescription'] :: S3ReferenceDataSourceDescription -> Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to read
--   the Amazon S3 object on your behalf to populate the in-application
--   reference table.
[$sel:referenceRoleARN:S3ReferenceDataSourceDescription'] :: S3ReferenceDataSourceDescription -> Text

-- | Create a value of <a>S3ReferenceDataSourceDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketARN:S3ReferenceDataSourceDescription'</a>,
--   <a>s3ReferenceDataSourceDescription_bucketARN</a> - Amazon Resource
--   Name (ARN) of the S3 bucket.
--   
--   <a>$sel:fileKey:S3ReferenceDataSourceDescription'</a>,
--   <a>s3ReferenceDataSourceDescription_fileKey</a> - Amazon S3 object key
--   name.
--   
--   <a>$sel:referenceRoleARN:S3ReferenceDataSourceDescription'</a>,
--   <a>s3ReferenceDataSourceDescription_referenceRoleARN</a> - ARN of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object on your behalf to populate the in-application reference
--   table.
newS3ReferenceDataSourceDescription :: Text -> Text -> Text -> S3ReferenceDataSourceDescription

-- | Amazon Resource Name (ARN) of the S3 bucket.
s3ReferenceDataSourceDescription_bucketARN :: Lens' S3ReferenceDataSourceDescription Text

-- | Amazon S3 object key name.
s3ReferenceDataSourceDescription_fileKey :: Lens' S3ReferenceDataSourceDescription Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to read
--   the Amazon S3 object on your behalf to populate the in-application
--   reference table.
s3ReferenceDataSourceDescription_referenceRoleARN :: Lens' S3ReferenceDataSourceDescription Text

-- | Describes the S3 bucket name, object key name, and IAM role that
--   Amazon Kinesis Analytics can assume to read the Amazon S3 object on
--   your behalf and populate the in-application reference table.
--   
--   <i>See:</i> <a>newS3ReferenceDataSourceUpdate</a> smart constructor.
data S3ReferenceDataSourceUpdate
S3ReferenceDataSourceUpdate' :: Maybe Text -> Maybe Text -> Maybe Text -> S3ReferenceDataSourceUpdate

-- | Amazon Resource Name (ARN) of the S3 bucket.
[$sel:bucketARNUpdate:S3ReferenceDataSourceUpdate'] :: S3ReferenceDataSourceUpdate -> Maybe Text

-- | Object key name.
[$sel:fileKeyUpdate:S3ReferenceDataSourceUpdate'] :: S3ReferenceDataSourceUpdate -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to read
--   the Amazon S3 object and populate the in-application.
[$sel:referenceRoleARNUpdate:S3ReferenceDataSourceUpdate'] :: S3ReferenceDataSourceUpdate -> Maybe Text

-- | Create a value of <a>S3ReferenceDataSourceUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketARNUpdate:S3ReferenceDataSourceUpdate'</a>,
--   <a>s3ReferenceDataSourceUpdate_bucketARNUpdate</a> - Amazon Resource
--   Name (ARN) of the S3 bucket.
--   
--   <a>$sel:fileKeyUpdate:S3ReferenceDataSourceUpdate'</a>,
--   <a>s3ReferenceDataSourceUpdate_fileKeyUpdate</a> - Object key name.
--   
--   <a>$sel:referenceRoleARNUpdate:S3ReferenceDataSourceUpdate'</a>,
--   <a>s3ReferenceDataSourceUpdate_referenceRoleARNUpdate</a> - ARN of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object and populate the in-application.
newS3ReferenceDataSourceUpdate :: S3ReferenceDataSourceUpdate

-- | Amazon Resource Name (ARN) of the S3 bucket.
s3ReferenceDataSourceUpdate_bucketARNUpdate :: Lens' S3ReferenceDataSourceUpdate (Maybe Text)

-- | Object key name.
s3ReferenceDataSourceUpdate_fileKeyUpdate :: Lens' S3ReferenceDataSourceUpdate (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to read
--   the Amazon S3 object and populate the in-application.
s3ReferenceDataSourceUpdate_referenceRoleARNUpdate :: Lens' S3ReferenceDataSourceUpdate (Maybe Text)

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
--   
--   <i>See:</i> <a>newSourceSchema</a> smart constructor.
data SourceSchema
SourceSchema' :: Maybe Text -> RecordFormat -> NonEmpty RecordColumn -> SourceSchema

-- | Specifies the encoding of the records in the streaming source. For
--   example, UTF-8.
[$sel:recordEncoding:SourceSchema'] :: SourceSchema -> Maybe Text

-- | Specifies the format of the records on the streaming source.
[$sel:recordFormat:SourceSchema'] :: SourceSchema -> RecordFormat

-- | A list of <tt>RecordColumn</tt> objects.
[$sel:recordColumns:SourceSchema'] :: SourceSchema -> NonEmpty RecordColumn

-- | Create a value of <a>SourceSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordEncoding:SourceSchema'</a>,
--   <a>sourceSchema_recordEncoding</a> - Specifies the encoding of the
--   records in the streaming source. For example, UTF-8.
--   
--   <a>$sel:recordFormat:SourceSchema'</a>,
--   <a>sourceSchema_recordFormat</a> - Specifies the format of the records
--   on the streaming source.
--   
--   <a>$sel:recordColumns:SourceSchema'</a>,
--   <a>sourceSchema_recordColumns</a> - A list of <tt>RecordColumn</tt>
--   objects.
newSourceSchema :: RecordFormat -> NonEmpty RecordColumn -> SourceSchema

-- | Specifies the encoding of the records in the streaming source. For
--   example, UTF-8.
sourceSchema_recordEncoding :: Lens' SourceSchema (Maybe Text)

-- | Specifies the format of the records on the streaming source.
sourceSchema_recordFormat :: Lens' SourceSchema RecordFormat

-- | A list of <tt>RecordColumn</tt> objects.
sourceSchema_recordColumns :: Lens' SourceSchema (NonEmpty RecordColumn)

-- | A key-value pair (the value is optional) that you can define and
--   assign to AWS resources. If you specify a tag that already exists, the
--   tag value is replaced with the value that you specify in the request.
--   Note that the maximum number of application tags includes system tags.
--   The maximum number of user-defined application tags is 50. For more
--   information, see <a>Using Tagging</a>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | The value of the key-value tag. The value is optional.
[$sel:value:Tag'] :: Tag -> Maybe Text

-- | The key of the key-value tag.
[$sel:key:Tag'] :: Tag -> Text

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the key-value
--   tag. The value is optional.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the key-value tag.
newTag :: Text -> Tag

-- | The value of the key-value tag. The value is optional.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the key-value tag.
tag_key :: Lens' Tag Text


-- | Adds one or more key-value tags to a Kinesis Analytics application.
--   Note that the maximum number of application tags includes system tags.
--   The maximum number of user-defined application tags is 50. For more
--   information, see <a>Using Tagging</a>.
module Network.AWS.KinesisAnalytics.TagResource

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | The ARN of the application to assign the tags.
[$sel:resourceARN:TagResource'] :: TagResource -> Text

-- | The key-value tags to assign to the application.
[$sel:tags:TagResource'] :: TagResource -> NonEmpty Tag

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The ARN of the application to assign the tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The key-value
--   tags to assign to the application.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | The ARN of the application to assign the tags.
tagResource_resourceARN :: Lens' TagResource Text

-- | The key-value tags to assign to the application.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:TagResourceResponse'] :: TagResourceResponse -> Int

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.TagResource.TagResource
instance GHC.Show.Show Network.AWS.KinesisAnalytics.TagResource.TagResource
instance GHC.Read.Read Network.AWS.KinesisAnalytics.TagResource.TagResource
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.TagResource.TagResource
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.TagResource.TagResourceResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.TagResource.TagResourceResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.TagResource.TagResourceResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.TagResource.TagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.TagResource.TagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.TagResource.TagResource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.TagResource.TagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.TagResource.TagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.TagResource.TagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.TagResource.TagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.TagResource.TagResource


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Stops the application from processing input data. You can stop an
--   application only if it is in the running state. You can use the
--   <a>DescribeApplication</a> operation to find the application state.
--   After the application is stopped, Amazon Kinesis Analytics stops
--   reading data from the input, the application stops processing data,
--   and there is no output written to the destination.
--   
--   This operation requires permissions to perform the
--   <tt>kinesisanalytics:StopApplication</tt> action.
module Network.AWS.KinesisAnalytics.StopApplication

-- | <i>See:</i> <a>newStopApplication</a> smart constructor.
data StopApplication
StopApplication' :: Text -> StopApplication

-- | Name of the running application to stop.
[$sel:applicationName:StopApplication'] :: StopApplication -> Text

-- | Create a value of <a>StopApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:StopApplication'</a>,
--   <a>stopApplication_applicationName</a> - Name of the running
--   application to stop.
newStopApplication :: Text -> StopApplication

-- | Name of the running application to stop.
stopApplication_applicationName :: Lens' StopApplication Text

-- | <i>See:</i> <a>newStopApplicationResponse</a> smart constructor.
data StopApplicationResponse
StopApplicationResponse' :: Int -> StopApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:StopApplicationResponse'] :: StopApplicationResponse -> Int

-- | Create a value of <a>StopApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopApplicationResponse'</a>,
--   <a>stopApplicationResponse_httpStatus</a> - The response's http status
--   code.
newStopApplicationResponse :: Int -> StopApplicationResponse

-- | The response's http status code.
stopApplicationResponse_httpStatus :: Lens' StopApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.StopApplication.StopApplication
instance GHC.Show.Show Network.AWS.KinesisAnalytics.StopApplication.StopApplication
instance GHC.Read.Read Network.AWS.KinesisAnalytics.StopApplication.StopApplication
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.StopApplication.StopApplication
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.StopApplication.StopApplicationResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.StopApplication.StopApplicationResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.StopApplication.StopApplicationResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.StopApplication.StopApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.StopApplication.StopApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.StopApplication.StopApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.StopApplication.StopApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.StopApplication.StopApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.StopApplication.StopApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.StopApplication.StopApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.StopApplication.StopApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.StopApplication.StopApplication


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Starts the specified Amazon Kinesis Analytics application. After
--   creating an application, you must exclusively call this operation to
--   start your application.
--   
--   After the application starts, it begins consuming the input data,
--   processes it, and writes the output to the configured destination.
--   
--   The application status must be <tt>READY</tt> for you to start an
--   application. You can get the application status in the console or
--   using the <a>DescribeApplication</a> operation.
--   
--   After you start the application, you can stop the application from
--   processing the input by calling the <a>StopApplication</a> operation.
--   
--   This operation requires permissions to perform the
--   <tt>kinesisanalytics:StartApplication</tt> action.
module Network.AWS.KinesisAnalytics.StartApplication

-- | <i>See:</i> <a>newStartApplication</a> smart constructor.
data StartApplication
StartApplication' :: Text -> [InputConfiguration] -> StartApplication

-- | Name of the application.
[$sel:applicationName:StartApplication'] :: StartApplication -> Text

-- | Identifies the specific input, by ID, that the application starts
--   consuming. Amazon Kinesis Analytics starts reading the streaming
--   source associated with the input. You can also specify where in the
--   streaming source you want Amazon Kinesis Analytics to start reading.
[$sel:inputConfigurations:StartApplication'] :: StartApplication -> [InputConfiguration]

-- | Create a value of <a>StartApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:StartApplication'</a>,
--   <a>startApplication_applicationName</a> - Name of the application.
--   
--   <a>$sel:inputConfigurations:StartApplication'</a>,
--   <a>startApplication_inputConfigurations</a> - Identifies the specific
--   input, by ID, that the application starts consuming. Amazon Kinesis
--   Analytics starts reading the streaming source associated with the
--   input. You can also specify where in the streaming source you want
--   Amazon Kinesis Analytics to start reading.
newStartApplication :: Text -> StartApplication

-- | Name of the application.
startApplication_applicationName :: Lens' StartApplication Text

-- | Identifies the specific input, by ID, that the application starts
--   consuming. Amazon Kinesis Analytics starts reading the streaming
--   source associated with the input. You can also specify where in the
--   streaming source you want Amazon Kinesis Analytics to start reading.
startApplication_inputConfigurations :: Lens' StartApplication [InputConfiguration]

-- | <i>See:</i> <a>newStartApplicationResponse</a> smart constructor.
data StartApplicationResponse
StartApplicationResponse' :: Int -> StartApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:StartApplicationResponse'] :: StartApplicationResponse -> Int

-- | Create a value of <a>StartApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartApplicationResponse'</a>,
--   <a>startApplicationResponse_httpStatus</a> - The response's http
--   status code.
newStartApplicationResponse :: Int -> StartApplicationResponse

-- | The response's http status code.
startApplicationResponse_httpStatus :: Lens' StartApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.StartApplication.StartApplication
instance GHC.Show.Show Network.AWS.KinesisAnalytics.StartApplication.StartApplication
instance GHC.Read.Read Network.AWS.KinesisAnalytics.StartApplication.StartApplication
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.StartApplication.StartApplication
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.StartApplication.StartApplicationResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.StartApplication.StartApplicationResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.StartApplication.StartApplicationResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.StartApplication.StartApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.StartApplication.StartApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.StartApplication.StartApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.StartApplication.StartApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.StartApplication.StartApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.StartApplication.StartApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.StartApplication.StartApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.StartApplication.StartApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.StartApplication.StartApplication


-- | Retrieves the list of key-value tags assigned to the application. For
--   more information, see <a>Using Tagging</a>.
module Network.AWS.KinesisAnalytics.ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | The ARN of the application for which to retrieve tags.
[$sel:resourceARN:ListTagsForResource'] :: ListTagsForResource -> Text

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The ARN of the application
--   for which to retrieve tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | The ARN of the application for which to retrieve tags.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (NonEmpty Tag) -> Int -> ListTagsForResourceResponse

-- | The key-value tags assigned to the application.
[$sel:tags:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Maybe (NonEmpty Tag)

-- | The response's http status code.
[$sel:httpStatus:ListTagsForResourceResponse'] :: ListTagsForResourceResponse -> Int

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The key-value tags assigned
--   to the application.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | The key-value tags assigned to the application.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResource
instance GHC.Show.Show Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResource
instance GHC.Read.Read Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResource
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResource
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResourceResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.ListTagsForResource.ListTagsForResource


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Returns a list of Amazon Kinesis Analytics applications in your
--   account. For each application, the response includes the application
--   name, Amazon Resource Name (ARN), and status. If the response returns
--   the <tt>HasMoreApplications</tt> value as true, you can send another
--   request by adding the <tt>ExclusiveStartApplicationName</tt> in the
--   request body, and set the value of this to the last application name
--   from the previous response.
--   
--   If you want detailed information about a specific application, use
--   <a>DescribeApplication</a>.
--   
--   This operation requires permissions to perform the
--   <tt>kinesisanalytics:ListApplications</tt> action.
module Network.AWS.KinesisAnalytics.ListApplications

-- | <i>See:</i> <a>newListApplications</a> smart constructor.
data ListApplications
ListApplications' :: Maybe Natural -> Maybe Text -> ListApplications

-- | Maximum number of applications to list.
[$sel:limit:ListApplications'] :: ListApplications -> Maybe Natural

-- | Name of the application to start the list with. When using pagination
--   to retrieve the list, you don't need to specify this parameter in the
--   first request. However, in subsequent requests, you add the last
--   application name from the previous response to get the next page of
--   applications.
[$sel:exclusiveStartApplicationName:ListApplications'] :: ListApplications -> Maybe Text

-- | Create a value of <a>ListApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:ListApplications'</a>, <a>listApplications_limit</a> -
--   Maximum number of applications to list.
--   
--   <a>$sel:exclusiveStartApplicationName:ListApplications'</a>,
--   <a>listApplications_exclusiveStartApplicationName</a> - Name of the
--   application to start the list with. When using pagination to retrieve
--   the list, you don't need to specify this parameter in the first
--   request. However, in subsequent requests, you add the last application
--   name from the previous response to get the next page of applications.
newListApplications :: ListApplications

-- | Maximum number of applications to list.
listApplications_limit :: Lens' ListApplications (Maybe Natural)

-- | Name of the application to start the list with. When using pagination
--   to retrieve the list, you don't need to specify this parameter in the
--   first request. However, in subsequent requests, you add the last
--   application name from the previous response to get the next page of
--   applications.
listApplications_exclusiveStartApplicationName :: Lens' ListApplications (Maybe Text)

-- | <i>See:</i> <a>newListApplicationsResponse</a> smart constructor.
data ListApplicationsResponse
ListApplicationsResponse' :: Int -> [ApplicationSummary] -> Bool -> ListApplicationsResponse

-- | The response's http status code.
[$sel:httpStatus:ListApplicationsResponse'] :: ListApplicationsResponse -> Int

-- | List of <tt>ApplicationSummary</tt> objects.
[$sel:applicationSummaries:ListApplicationsResponse'] :: ListApplicationsResponse -> [ApplicationSummary]

-- | Returns true if there are more applications to retrieve.
[$sel:hasMoreApplications:ListApplicationsResponse'] :: ListApplicationsResponse -> Bool

-- | Create a value of <a>ListApplicationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:applicationSummaries:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_applicationSummaries</a> - List of
--   <tt>ApplicationSummary</tt> objects.
--   
--   <a>$sel:hasMoreApplications:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_hasMoreApplications</a> - Returns true if
--   there are more applications to retrieve.
newListApplicationsResponse :: Int -> Bool -> ListApplicationsResponse

-- | The response's http status code.
listApplicationsResponse_httpStatus :: Lens' ListApplicationsResponse Int

-- | List of <tt>ApplicationSummary</tt> objects.
listApplicationsResponse_applicationSummaries :: Lens' ListApplicationsResponse [ApplicationSummary]

-- | Returns true if there are more applications to retrieve.
listApplicationsResponse_hasMoreApplications :: Lens' ListApplicationsResponse Bool
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.ListApplications.ListApplications
instance GHC.Show.Show Network.AWS.KinesisAnalytics.ListApplications.ListApplications
instance GHC.Read.Read Network.AWS.KinesisAnalytics.ListApplications.ListApplications
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.ListApplications.ListApplications
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.ListApplications.ListApplicationsResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.ListApplications.ListApplicationsResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.ListApplications.ListApplicationsResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.ListApplications.ListApplicationsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.ListApplications.ListApplications
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.ListApplications.ListApplicationsResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.ListApplications.ListApplications
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.ListApplications.ListApplications
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.ListApplications.ListApplications
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.ListApplications.ListApplications
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.ListApplications.ListApplications
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.ListApplications.ListApplications


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Infers a schema by evaluating sample records on the specified
--   streaming source (Amazon Kinesis stream or Amazon Kinesis Firehose
--   delivery stream) or S3 object. In the response, the operation returns
--   the inferred schema and also the sample records that the operation
--   used to infer the schema.
--   
--   You can use the inferred schema when configuring a streaming source
--   for your application. For conceptual information, see <a>Configuring
--   Application Input</a>. Note that when you create an application using
--   the Amazon Kinesis Analytics console, the console uses this operation
--   to infer a schema and show it in the console user interface.
--   
--   This operation requires permissions to perform the
--   <tt>kinesisanalytics:DiscoverInputSchema</tt> action.
module Network.AWS.KinesisAnalytics.DiscoverInputSchema

-- | <i>See:</i> <a>newDiscoverInputSchema</a> smart constructor.
data DiscoverInputSchema
DiscoverInputSchema' :: Maybe InputStartingPositionConfiguration -> Maybe InputProcessingConfiguration -> Maybe S3Configuration -> Maybe Text -> Maybe Text -> DiscoverInputSchema

-- | Point at which you want Amazon Kinesis Analytics to start reading
--   records from the specified streaming source discovery purposes.
[$sel:inputStartingPositionConfiguration:DiscoverInputSchema'] :: DiscoverInputSchema -> Maybe InputStartingPositionConfiguration

-- | The <a>InputProcessingConfiguration</a> to use to preprocess the
--   records before discovering the schema of the records.
[$sel:inputProcessingConfiguration:DiscoverInputSchema'] :: DiscoverInputSchema -> Maybe InputProcessingConfiguration

-- | Specify this parameter to discover a schema from data in an Amazon S3
--   object.
[$sel:s3Configuration:DiscoverInputSchema'] :: DiscoverInputSchema -> Maybe S3Configuration

-- | Amazon Resource Name (ARN) of the streaming source.
[$sel:resourceARN:DiscoverInputSchema'] :: DiscoverInputSchema -> Maybe Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf.
[$sel:roleARN:DiscoverInputSchema'] :: DiscoverInputSchema -> Maybe Text

-- | Create a value of <a>DiscoverInputSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputStartingPositionConfiguration:DiscoverInputSchema'</a>,
--   <a>discoverInputSchema_inputStartingPositionConfiguration</a> - Point
--   at which you want Amazon Kinesis Analytics to start reading records
--   from the specified streaming source discovery purposes.
--   
--   <a>$sel:inputProcessingConfiguration:DiscoverInputSchema'</a>,
--   <a>discoverInputSchema_inputProcessingConfiguration</a> - The
--   <a>InputProcessingConfiguration</a> to use to preprocess the records
--   before discovering the schema of the records.
--   
--   <a>$sel:s3Configuration:DiscoverInputSchema'</a>,
--   <a>discoverInputSchema_s3Configuration</a> - Specify this parameter to
--   discover a schema from data in an Amazon S3 object.
--   
--   <a>$sel:resourceARN:DiscoverInputSchema'</a>,
--   <a>discoverInputSchema_resourceARN</a> - Amazon Resource Name (ARN) of
--   the streaming source.
--   
--   <a>$sel:roleARN:DiscoverInputSchema'</a>,
--   <a>discoverInputSchema_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to access the stream on your behalf.
newDiscoverInputSchema :: DiscoverInputSchema

-- | Point at which you want Amazon Kinesis Analytics to start reading
--   records from the specified streaming source discovery purposes.
discoverInputSchema_inputStartingPositionConfiguration :: Lens' DiscoverInputSchema (Maybe InputStartingPositionConfiguration)

-- | The <a>InputProcessingConfiguration</a> to use to preprocess the
--   records before discovering the schema of the records.
discoverInputSchema_inputProcessingConfiguration :: Lens' DiscoverInputSchema (Maybe InputProcessingConfiguration)

-- | Specify this parameter to discover a schema from data in an Amazon S3
--   object.
discoverInputSchema_s3Configuration :: Lens' DiscoverInputSchema (Maybe S3Configuration)

-- | Amazon Resource Name (ARN) of the streaming source.
discoverInputSchema_resourceARN :: Lens' DiscoverInputSchema (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf.
discoverInputSchema_roleARN :: Lens' DiscoverInputSchema (Maybe Text)

-- | <i>See:</i> <a>newDiscoverInputSchemaResponse</a> smart constructor.
data DiscoverInputSchemaResponse
DiscoverInputSchemaResponse' :: Maybe [Text] -> Maybe SourceSchema -> Maybe [Text] -> Maybe [[Text]] -> Int -> DiscoverInputSchemaResponse

-- | Raw stream data that was sampled to infer the schema.
[$sel:rawInputRecords:DiscoverInputSchemaResponse'] :: DiscoverInputSchemaResponse -> Maybe [Text]

-- | Schema inferred from the streaming source. It identifies the format of
--   the data in the streaming source and how each data element maps to
--   corresponding columns in the in-application stream that you can
--   create.
[$sel:inputSchema:DiscoverInputSchemaResponse'] :: DiscoverInputSchemaResponse -> Maybe SourceSchema

-- | Stream data that was modified by the processor specified in the
--   <tt>InputProcessingConfiguration</tt> parameter.
[$sel:processedInputRecords:DiscoverInputSchemaResponse'] :: DiscoverInputSchemaResponse -> Maybe [Text]

-- | An array of elements, where each element corresponds to a row in a
--   stream record (a stream record can have more than one row).
[$sel:parsedInputRecords:DiscoverInputSchemaResponse'] :: DiscoverInputSchemaResponse -> Maybe [[Text]]

-- | The response's http status code.
[$sel:httpStatus:DiscoverInputSchemaResponse'] :: DiscoverInputSchemaResponse -> Int

-- | Create a value of <a>DiscoverInputSchemaResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rawInputRecords:DiscoverInputSchemaResponse'</a>,
--   <a>discoverInputSchemaResponse_rawInputRecords</a> - Raw stream data
--   that was sampled to infer the schema.
--   
--   <a>$sel:inputSchema:DiscoverInputSchemaResponse'</a>,
--   <a>discoverInputSchemaResponse_inputSchema</a> - Schema inferred from
--   the streaming source. It identifies the format of the data in the
--   streaming source and how each data element maps to corresponding
--   columns in the in-application stream that you can create.
--   
--   <a>$sel:processedInputRecords:DiscoverInputSchemaResponse'</a>,
--   <a>discoverInputSchemaResponse_processedInputRecords</a> - Stream data
--   that was modified by the processor specified in the
--   <tt>InputProcessingConfiguration</tt> parameter.
--   
--   <a>$sel:parsedInputRecords:DiscoverInputSchemaResponse'</a>,
--   <a>discoverInputSchemaResponse_parsedInputRecords</a> - An array of
--   elements, where each element corresponds to a row in a stream record
--   (a stream record can have more than one row).
--   
--   <a>$sel:httpStatus:DiscoverInputSchemaResponse'</a>,
--   <a>discoverInputSchemaResponse_httpStatus</a> - The response's http
--   status code.
newDiscoverInputSchemaResponse :: Int -> DiscoverInputSchemaResponse

-- | Raw stream data that was sampled to infer the schema.
discoverInputSchemaResponse_rawInputRecords :: Lens' DiscoverInputSchemaResponse (Maybe [Text])

-- | Schema inferred from the streaming source. It identifies the format of
--   the data in the streaming source and how each data element maps to
--   corresponding columns in the in-application stream that you can
--   create.
discoverInputSchemaResponse_inputSchema :: Lens' DiscoverInputSchemaResponse (Maybe SourceSchema)

-- | Stream data that was modified by the processor specified in the
--   <tt>InputProcessingConfiguration</tt> parameter.
discoverInputSchemaResponse_processedInputRecords :: Lens' DiscoverInputSchemaResponse (Maybe [Text])

-- | An array of elements, where each element corresponds to a row in a
--   stream record (a stream record can have more than one row).
discoverInputSchemaResponse_parsedInputRecords :: Lens' DiscoverInputSchemaResponse (Maybe [[Text]])

-- | The response's http status code.
discoverInputSchemaResponse_httpStatus :: Lens' DiscoverInputSchemaResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchema
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchema
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchema
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchema
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchemaResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchemaResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchemaResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchemaResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchema
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchemaResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchema
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchema
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchema
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchema
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchema
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.DiscoverInputSchema.DiscoverInputSchema


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Returns information about a specific Amazon Kinesis Analytics
--   application.
--   
--   If you want to retrieve a list of all applications in your account,
--   use the <a>ListApplications</a> operation.
--   
--   This operation requires permissions to perform the
--   <tt>kinesisanalytics:DescribeApplication</tt> action. You can use
--   <tt>DescribeApplication</tt> to get the current application versionId,
--   which you need to call other operations such as <tt>Update</tt>.
module Network.AWS.KinesisAnalytics.DescribeApplication

-- | <i>See:</i> <a>newDescribeApplication</a> smart constructor.
data DescribeApplication
DescribeApplication' :: Text -> DescribeApplication

-- | Name of the application.
[$sel:applicationName:DescribeApplication'] :: DescribeApplication -> Text

-- | Create a value of <a>DescribeApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DescribeApplication'</a>,
--   <a>describeApplication_applicationName</a> - Name of the application.
newDescribeApplication :: Text -> DescribeApplication

-- | Name of the application.
describeApplication_applicationName :: Lens' DescribeApplication Text

-- | <i>See:</i> <a>newDescribeApplicationResponse</a> smart constructor.
data DescribeApplicationResponse
DescribeApplicationResponse' :: Int -> ApplicationDetail -> DescribeApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:DescribeApplicationResponse'] :: DescribeApplicationResponse -> Int

-- | Provides a description of the application, such as the application
--   Amazon Resource Name (ARN), status, latest version, and input and
--   output configuration details.
[$sel:applicationDetail:DescribeApplicationResponse'] :: DescribeApplicationResponse -> ApplicationDetail

-- | Create a value of <a>DescribeApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeApplicationResponse'</a>,
--   <a>describeApplicationResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:applicationDetail:DescribeApplicationResponse'</a>,
--   <a>describeApplicationResponse_applicationDetail</a> - Provides a
--   description of the application, such as the application Amazon
--   Resource Name (ARN), status, latest version, and input and output
--   configuration details.
newDescribeApplicationResponse :: Int -> ApplicationDetail -> DescribeApplicationResponse

-- | The response's http status code.
describeApplicationResponse_httpStatus :: Lens' DescribeApplicationResponse Int

-- | Provides a description of the application, such as the application
--   Amazon Resource Name (ARN), status, latest version, and input and
--   output configuration details.
describeApplicationResponse_applicationDetail :: Lens' DescribeApplicationResponse ApplicationDetail
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplication
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplication
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplication
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplication
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplicationResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplicationResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplicationResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.DescribeApplication.DescribeApplication


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Deletes a reference data source configuration from the specified
--   application configuration.
--   
--   If the application is running, Amazon Kinesis Analytics immediately
--   removes the in-application table that you created using the
--   <a>AddApplicationReferenceDataSource</a> operation.
--   
--   This operation requires permissions to perform the
--   <tt>kinesisanalytics.DeleteApplicationReferenceDataSource</tt> action.
module Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource

-- | <i>See:</i> <a>newDeleteApplicationReferenceDataSource</a> smart
--   constructor.
data DeleteApplicationReferenceDataSource
DeleteApplicationReferenceDataSource' :: Text -> Natural -> Text -> DeleteApplicationReferenceDataSource

-- | Name of an existing application.
[$sel:applicationName:DeleteApplicationReferenceDataSource'] :: DeleteApplicationReferenceDataSource -> Text

-- | Version of the application. You can use the <a>DescribeApplication</a>
--   operation to get the current application version. If the version
--   specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
[$sel:currentApplicationVersionId:DeleteApplicationReferenceDataSource'] :: DeleteApplicationReferenceDataSource -> Natural

-- | ID of the reference data source. When you add a reference data source
--   to your application using the
--   <a>AddApplicationReferenceDataSource</a>, Amazon Kinesis Analytics
--   assigns an ID. You can use the <a>DescribeApplication</a> operation to
--   get the reference ID.
[$sel:referenceId:DeleteApplicationReferenceDataSource'] :: DeleteApplicationReferenceDataSource -> Text

-- | Create a value of <a>DeleteApplicationReferenceDataSource</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteApplicationReferenceDataSource'</a>,
--   <a>deleteApplicationReferenceDataSource_applicationName</a> - Name of
--   an existing application.
--   
--   
--   <a>$sel:currentApplicationVersionId:DeleteApplicationReferenceDataSource'</a>,
--   <a>deleteApplicationReferenceDataSource_currentApplicationVersionId</a>
--   - Version of the application. You can use the
--   <a>DescribeApplication</a> operation to get the current application
--   version. If the version specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
--   
--   <a>$sel:referenceId:DeleteApplicationReferenceDataSource'</a>,
--   <a>deleteApplicationReferenceDataSource_referenceId</a> - ID of the
--   reference data source. When you add a reference data source to your
--   application using the <a>AddApplicationReferenceDataSource</a>, Amazon
--   Kinesis Analytics assigns an ID. You can use the
--   <a>DescribeApplication</a> operation to get the reference ID.
newDeleteApplicationReferenceDataSource :: Text -> Natural -> Text -> DeleteApplicationReferenceDataSource

-- | Name of an existing application.
deleteApplicationReferenceDataSource_applicationName :: Lens' DeleteApplicationReferenceDataSource Text

-- | Version of the application. You can use the <a>DescribeApplication</a>
--   operation to get the current application version. If the version
--   specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
deleteApplicationReferenceDataSource_currentApplicationVersionId :: Lens' DeleteApplicationReferenceDataSource Natural

-- | ID of the reference data source. When you add a reference data source
--   to your application using the
--   <a>AddApplicationReferenceDataSource</a>, Amazon Kinesis Analytics
--   assigns an ID. You can use the <a>DescribeApplication</a> operation to
--   get the reference ID.
deleteApplicationReferenceDataSource_referenceId :: Lens' DeleteApplicationReferenceDataSource Text

-- | <i>See:</i> <a>newDeleteApplicationReferenceDataSourceResponse</a>
--   smart constructor.
data DeleteApplicationReferenceDataSourceResponse
DeleteApplicationReferenceDataSourceResponse' :: Int -> DeleteApplicationReferenceDataSourceResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteApplicationReferenceDataSourceResponse'] :: DeleteApplicationReferenceDataSourceResponse -> Int

-- | Create a value of <a>DeleteApplicationReferenceDataSourceResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApplicationReferenceDataSourceResponse'</a>,
--   <a>deleteApplicationReferenceDataSourceResponse_httpStatus</a> - The
--   response's http status code.
newDeleteApplicationReferenceDataSourceResponse :: Int -> DeleteApplicationReferenceDataSourceResponse

-- | The response's http status code.
deleteApplicationReferenceDataSourceResponse_httpStatus :: Lens' DeleteApplicationReferenceDataSourceResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSource
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSource
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSource
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSource
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSourceResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSourceResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSourceResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSource
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.DeleteApplicationReferenceDataSource.DeleteApplicationReferenceDataSource


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Deletes output destination configuration from your application
--   configuration. Amazon Kinesis Analytics will no longer write data from
--   the corresponding in-application stream to the external output
--   destination.
--   
--   This operation requires permissions to perform the
--   <tt>kinesisanalytics:DeleteApplicationOutput</tt> action.
module Network.AWS.KinesisAnalytics.DeleteApplicationOutput

-- | <i>See:</i> <a>newDeleteApplicationOutput</a> smart constructor.
data DeleteApplicationOutput
DeleteApplicationOutput' :: Text -> Natural -> Text -> DeleteApplicationOutput

-- | Amazon Kinesis Analytics application name.
[$sel:applicationName:DeleteApplicationOutput'] :: DeleteApplicationOutput -> Text

-- | Amazon Kinesis Analytics application version. You can use the
--   <a>DescribeApplication</a> operation to get the current application
--   version. If the version specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
[$sel:currentApplicationVersionId:DeleteApplicationOutput'] :: DeleteApplicationOutput -> Natural

-- | The ID of the configuration to delete. Each output configuration that
--   is added to the application, either when the application is created or
--   later using the <a>AddApplicationOutput</a> operation, has a unique
--   ID. You need to provide the ID to uniquely identify the output
--   configuration that you want to delete from the application
--   configuration. You can use the <a>DescribeApplication</a> operation to
--   get the specific <tt>OutputId</tt>.
[$sel:outputId:DeleteApplicationOutput'] :: DeleteApplicationOutput -> Text

-- | Create a value of <a>DeleteApplicationOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteApplicationOutput'</a>,
--   <a>deleteApplicationOutput_applicationName</a> - Amazon Kinesis
--   Analytics application name.
--   
--   <a>$sel:currentApplicationVersionId:DeleteApplicationOutput'</a>,
--   <a>deleteApplicationOutput_currentApplicationVersionId</a> - Amazon
--   Kinesis Analytics application version. You can use the
--   <a>DescribeApplication</a> operation to get the current application
--   version. If the version specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
--   
--   <a>$sel:outputId:DeleteApplicationOutput'</a>,
--   <a>deleteApplicationOutput_outputId</a> - The ID of the configuration
--   to delete. Each output configuration that is added to the application,
--   either when the application is created or later using the
--   <a>AddApplicationOutput</a> operation, has a unique ID. You need to
--   provide the ID to uniquely identify the output configuration that you
--   want to delete from the application configuration. You can use the
--   <a>DescribeApplication</a> operation to get the specific
--   <tt>OutputId</tt>.
newDeleteApplicationOutput :: Text -> Natural -> Text -> DeleteApplicationOutput

-- | Amazon Kinesis Analytics application name.
deleteApplicationOutput_applicationName :: Lens' DeleteApplicationOutput Text

-- | Amazon Kinesis Analytics application version. You can use the
--   <a>DescribeApplication</a> operation to get the current application
--   version. If the version specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
deleteApplicationOutput_currentApplicationVersionId :: Lens' DeleteApplicationOutput Natural

-- | The ID of the configuration to delete. Each output configuration that
--   is added to the application, either when the application is created or
--   later using the <a>AddApplicationOutput</a> operation, has a unique
--   ID. You need to provide the ID to uniquely identify the output
--   configuration that you want to delete from the application
--   configuration. You can use the <a>DescribeApplication</a> operation to
--   get the specific <tt>OutputId</tt>.
deleteApplicationOutput_outputId :: Lens' DeleteApplicationOutput Text

-- | <i>See:</i> <a>newDeleteApplicationOutputResponse</a> smart
--   constructor.
data DeleteApplicationOutputResponse
DeleteApplicationOutputResponse' :: Int -> DeleteApplicationOutputResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteApplicationOutputResponse'] :: DeleteApplicationOutputResponse -> Int

-- | Create a value of <a>DeleteApplicationOutputResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApplicationOutputResponse'</a>,
--   <a>deleteApplicationOutputResponse_httpStatus</a> - The response's
--   http status code.
newDeleteApplicationOutputResponse :: Int -> DeleteApplicationOutputResponse

-- | The response's http status code.
deleteApplicationOutputResponse_httpStatus :: Lens' DeleteApplicationOutputResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutput
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutput
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutput
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutput
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutputResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutputResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutputResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutputResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutput
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutputResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutput
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutput
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutput
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutput
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.DeleteApplicationOutput.DeleteApplicationOutput


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Deletes an <a>InputProcessingConfiguration</a> from an input.
module Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration

-- | <i>See:</i> <a>newDeleteApplicationInputProcessingConfiguration</a>
--   smart constructor.
data DeleteApplicationInputProcessingConfiguration
DeleteApplicationInputProcessingConfiguration' :: Text -> Natural -> Text -> DeleteApplicationInputProcessingConfiguration

-- | The Kinesis Analytics application name.
[$sel:applicationName:DeleteApplicationInputProcessingConfiguration'] :: DeleteApplicationInputProcessingConfiguration -> Text

-- | The version ID of the Kinesis Analytics application.
[$sel:currentApplicationVersionId:DeleteApplicationInputProcessingConfiguration'] :: DeleteApplicationInputProcessingConfiguration -> Natural

-- | The ID of the input configuration from which to delete the input
--   processing configuration. You can get a list of the input IDs for an
--   application by using the <a>DescribeApplication</a> operation.
[$sel:inputId:DeleteApplicationInputProcessingConfiguration'] :: DeleteApplicationInputProcessingConfiguration -> Text

-- | Create a value of <a>DeleteApplicationInputProcessingConfiguration</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:applicationName:DeleteApplicationInputProcessingConfiguration'</a>,
--   <a>deleteApplicationInputProcessingConfiguration_applicationName</a> -
--   The Kinesis Analytics application name.
--   
--   
--   <a>$sel:currentApplicationVersionId:DeleteApplicationInputProcessingConfiguration'</a>,
--   <a>deleteApplicationInputProcessingConfiguration_currentApplicationVersionId</a>
--   - The version ID of the Kinesis Analytics application.
--   
--   <a>$sel:inputId:DeleteApplicationInputProcessingConfiguration'</a>,
--   <a>deleteApplicationInputProcessingConfiguration_inputId</a> - The ID
--   of the input configuration from which to delete the input processing
--   configuration. You can get a list of the input IDs for an application
--   by using the <a>DescribeApplication</a> operation.
newDeleteApplicationInputProcessingConfiguration :: Text -> Natural -> Text -> DeleteApplicationInputProcessingConfiguration

-- | The Kinesis Analytics application name.
deleteApplicationInputProcessingConfiguration_applicationName :: Lens' DeleteApplicationInputProcessingConfiguration Text

-- | The version ID of the Kinesis Analytics application.
deleteApplicationInputProcessingConfiguration_currentApplicationVersionId :: Lens' DeleteApplicationInputProcessingConfiguration Natural

-- | The ID of the input configuration from which to delete the input
--   processing configuration. You can get a list of the input IDs for an
--   application by using the <a>DescribeApplication</a> operation.
deleteApplicationInputProcessingConfiguration_inputId :: Lens' DeleteApplicationInputProcessingConfiguration Text

-- | <i>See:</i>
--   <a>newDeleteApplicationInputProcessingConfigurationResponse</a> smart
--   constructor.
data DeleteApplicationInputProcessingConfigurationResponse
DeleteApplicationInputProcessingConfigurationResponse' :: Int -> DeleteApplicationInputProcessingConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteApplicationInputProcessingConfigurationResponse'] :: DeleteApplicationInputProcessingConfigurationResponse -> Int

-- | Create a value of
--   <a>DeleteApplicationInputProcessingConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:DeleteApplicationInputProcessingConfigurationResponse'</a>,
--   <a>deleteApplicationInputProcessingConfigurationResponse_httpStatus</a>
--   - The response's http status code.
newDeleteApplicationInputProcessingConfigurationResponse :: Int -> DeleteApplicationInputProcessingConfigurationResponse

-- | The response's http status code.
deleteApplicationInputProcessingConfigurationResponse_httpStatus :: Lens' DeleteApplicationInputProcessingConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfiguration
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfiguration
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfiguration
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfiguration
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfigurationResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfigurationResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfigurationResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfiguration
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfiguration
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.DeleteApplicationInputProcessingConfiguration.DeleteApplicationInputProcessingConfiguration


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Deletes a CloudWatch log stream from an application. For more
--   information about using CloudWatch log streams with Amazon Kinesis
--   Analytics applications, see <a>Working with Amazon CloudWatch
--   Logs</a>.
module Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption

-- | <i>See:</i> <a>newDeleteApplicationCloudWatchLoggingOption</a> smart
--   constructor.
data DeleteApplicationCloudWatchLoggingOption
DeleteApplicationCloudWatchLoggingOption' :: Text -> Natural -> Text -> DeleteApplicationCloudWatchLoggingOption

-- | The Kinesis Analytics application name.
[$sel:applicationName:DeleteApplicationCloudWatchLoggingOption'] :: DeleteApplicationCloudWatchLoggingOption -> Text

-- | The version ID of the Kinesis Analytics application.
[$sel:currentApplicationVersionId:DeleteApplicationCloudWatchLoggingOption'] :: DeleteApplicationCloudWatchLoggingOption -> Natural

-- | The <tt>CloudWatchLoggingOptionId</tt> of the CloudWatch logging
--   option to delete. You can get the <tt>CloudWatchLoggingOptionId</tt>
--   by using the <a>DescribeApplication</a> operation.
[$sel:cloudWatchLoggingOptionId:DeleteApplicationCloudWatchLoggingOption'] :: DeleteApplicationCloudWatchLoggingOption -> Text

-- | Create a value of <a>DeleteApplicationCloudWatchLoggingOption</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteApplicationCloudWatchLoggingOption'</a>,
--   <a>deleteApplicationCloudWatchLoggingOption_applicationName</a> - The
--   Kinesis Analytics application name.
--   
--   
--   <a>$sel:currentApplicationVersionId:DeleteApplicationCloudWatchLoggingOption'</a>,
--   <a>deleteApplicationCloudWatchLoggingOption_currentApplicationVersionId</a>
--   - The version ID of the Kinesis Analytics application.
--   
--   
--   <a>$sel:cloudWatchLoggingOptionId:DeleteApplicationCloudWatchLoggingOption'</a>,
--   <a>deleteApplicationCloudWatchLoggingOption_cloudWatchLoggingOptionId</a>
--   - The <tt>CloudWatchLoggingOptionId</tt> of the CloudWatch logging
--   option to delete. You can get the <tt>CloudWatchLoggingOptionId</tt>
--   by using the <a>DescribeApplication</a> operation.
newDeleteApplicationCloudWatchLoggingOption :: Text -> Natural -> Text -> DeleteApplicationCloudWatchLoggingOption

-- | The Kinesis Analytics application name.
deleteApplicationCloudWatchLoggingOption_applicationName :: Lens' DeleteApplicationCloudWatchLoggingOption Text

-- | The version ID of the Kinesis Analytics application.
deleteApplicationCloudWatchLoggingOption_currentApplicationVersionId :: Lens' DeleteApplicationCloudWatchLoggingOption Natural

-- | The <tt>CloudWatchLoggingOptionId</tt> of the CloudWatch logging
--   option to delete. You can get the <tt>CloudWatchLoggingOptionId</tt>
--   by using the <a>DescribeApplication</a> operation.
deleteApplicationCloudWatchLoggingOption_cloudWatchLoggingOptionId :: Lens' DeleteApplicationCloudWatchLoggingOption Text

-- | <i>See:</i> <a>newDeleteApplicationCloudWatchLoggingOptionResponse</a>
--   smart constructor.
data DeleteApplicationCloudWatchLoggingOptionResponse
DeleteApplicationCloudWatchLoggingOptionResponse' :: Int -> DeleteApplicationCloudWatchLoggingOptionResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteApplicationCloudWatchLoggingOptionResponse'] :: DeleteApplicationCloudWatchLoggingOptionResponse -> Int

-- | Create a value of
--   <a>DeleteApplicationCloudWatchLoggingOptionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:DeleteApplicationCloudWatchLoggingOptionResponse'</a>,
--   <a>deleteApplicationCloudWatchLoggingOptionResponse_httpStatus</a> -
--   The response's http status code.
newDeleteApplicationCloudWatchLoggingOptionResponse :: Int -> DeleteApplicationCloudWatchLoggingOptionResponse

-- | The response's http status code.
deleteApplicationCloudWatchLoggingOptionResponse_httpStatus :: Lens' DeleteApplicationCloudWatchLoggingOptionResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOption
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOption
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOption
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOption
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOptionResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOptionResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOptionResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOptionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOption
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOptionResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOption
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOption
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOption
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOption
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.DeleteApplicationCloudWatchLoggingOption.DeleteApplicationCloudWatchLoggingOption


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Deletes the specified application. Amazon Kinesis Analytics halts
--   application execution and deletes the application, including any
--   application artifacts (such as in-application streams, reference
--   table, and application code).
--   
--   This operation requires permissions to perform the
--   <tt>kinesisanalytics:DeleteApplication</tt> action.
module Network.AWS.KinesisAnalytics.DeleteApplication

-- | <i>See:</i> <a>newDeleteApplication</a> smart constructor.
data DeleteApplication
DeleteApplication' :: Text -> POSIX -> DeleteApplication

-- | Name of the Amazon Kinesis Analytics application to delete.
[$sel:applicationName:DeleteApplication'] :: DeleteApplication -> Text

-- | You can use the <tt>DescribeApplication</tt> operation to get this
--   value.
[$sel:createTimestamp:DeleteApplication'] :: DeleteApplication -> POSIX

-- | Create a value of <a>DeleteApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteApplication'</a>,
--   <a>deleteApplication_applicationName</a> - Name of the Amazon Kinesis
--   Analytics application to delete.
--   
--   <a>$sel:createTimestamp:DeleteApplication'</a>,
--   <a>deleteApplication_createTimestamp</a> - You can use the
--   <tt>DescribeApplication</tt> operation to get this value.
newDeleteApplication :: Text -> UTCTime -> DeleteApplication

-- | Name of the Amazon Kinesis Analytics application to delete.
deleteApplication_applicationName :: Lens' DeleteApplication Text

-- | You can use the <tt>DescribeApplication</tt> operation to get this
--   value.
deleteApplication_createTimestamp :: Lens' DeleteApplication UTCTime

-- | <i>See:</i> <a>newDeleteApplicationResponse</a> smart constructor.
data DeleteApplicationResponse
DeleteApplicationResponse' :: Int -> DeleteApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteApplicationResponse'] :: DeleteApplicationResponse -> Int

-- | Create a value of <a>DeleteApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApplicationResponse'</a>,
--   <a>deleteApplicationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteApplicationResponse :: Int -> DeleteApplicationResponse

-- | The response's http status code.
deleteApplicationResponse_httpStatus :: Lens' DeleteApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplication
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplication
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplication
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplication
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplicationResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplicationResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplicationResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.DeleteApplication.DeleteApplication


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Creates an Amazon Kinesis Analytics application. You can configure
--   each application with one streaming source as input, application code
--   to process the input, and up to three destinations where you want
--   Amazon Kinesis Analytics to write the output data from your
--   application. For an overview, see <a>How it Works</a>.
--   
--   In the input configuration, you map the streaming source to an
--   in-application stream, which you can think of as a constantly updating
--   table. In the mapping, you must provide a schema for the
--   in-application stream and map each data column in the in-application
--   stream to a data element in the streaming source.
--   
--   Your application code is one or more SQL statements that read input
--   data, transform it, and generate output. Your application code can
--   create one or more SQL artifacts like SQL streams or pumps.
--   
--   In the output configuration, you can configure the application to
--   write data from in-application streams created in your applications to
--   up to three destinations.
--   
--   To read data from your source stream or write data to destination
--   streams, Amazon Kinesis Analytics needs your permissions. You grant
--   these permissions by creating IAM roles. This operation requires
--   permissions to perform the <tt>kinesisanalytics:CreateApplication</tt>
--   action.
--   
--   For introductory exercises to create an Amazon Kinesis Analytics
--   application, see <a>Getting Started</a>.
module Network.AWS.KinesisAnalytics.CreateApplication

-- | TBD
--   
--   <i>See:</i> <a>newCreateApplication</a> smart constructor.
data CreateApplication
CreateApplication' :: Maybe Text -> Maybe [Input] -> Maybe [CloudWatchLoggingOption] -> Maybe [Output] -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> CreateApplication

-- | Summary description of the application.
[$sel:applicationDescription:CreateApplication'] :: CreateApplication -> Maybe Text

-- | Use this parameter to configure the application input.
--   
--   You can configure your application to receive input from a single
--   streaming source. In this configuration, you map this streaming source
--   to an in-application stream that is created. Your application code can
--   then query the in-application stream like a table (you can think of it
--   as a constantly updating table).
--   
--   For the streaming source, you provide its Amazon Resource Name (ARN)
--   and format of data on the stream (for example, JSON, CSV, etc.). You
--   also must provide an IAM role that Amazon Kinesis Analytics can assume
--   to read this stream on your behalf.
--   
--   To create the in-application stream, you need to specify a schema to
--   transform your data into a schematized version used in SQL. In the
--   schema, you provide the necessary mapping of the data elements in the
--   streaming source to record columns in the in-app stream.
[$sel:inputs:CreateApplication'] :: CreateApplication -> Maybe [Input]

-- | Use this parameter to configure a CloudWatch log stream to monitor
--   application configuration errors. For more information, see <a>Working
--   with Amazon CloudWatch Logs</a>.
[$sel:cloudWatchLoggingOptions:CreateApplication'] :: CreateApplication -> Maybe [CloudWatchLoggingOption]

-- | You can configure application output to write data from any of the
--   in-application streams to up to three destinations.
--   
--   These destinations can be Amazon Kinesis streams, Amazon Kinesis
--   Firehose delivery streams, AWS Lambda destinations, or any combination
--   of the three.
--   
--   In the configuration, you specify the in-application stream name, the
--   destination stream or Lambda function Amazon Resource Name (ARN), and
--   the format to use when writing data. You must also provide an IAM role
--   that Amazon Kinesis Analytics can assume to write to the destination
--   stream or Lambda function on your behalf.
--   
--   In the output configuration, you also provide the output stream or
--   Lambda function ARN. For stream destinations, you provide the format
--   of data in the stream (for example, JSON, CSV). You also must provide
--   an IAM role that Amazon Kinesis Analytics can assume to write to the
--   stream or Lambda function on your behalf.
[$sel:outputs:CreateApplication'] :: CreateApplication -> Maybe [Output]

-- | One or more SQL statements that read input data, transform it, and
--   generate output. For example, you can write a SQL statement that reads
--   data from one in-application stream, generates a running average of
--   the number of advertisement clicks by vendor, and insert resulting
--   rows in another in-application stream using pumps. For more
--   information about the typical pattern, see <a>Application Code</a>.
--   
--   You can provide such series of SQL statements, where output of one
--   statement can be used as the input for the next statement. You store
--   intermediate results by creating in-application streams and pumps.
--   
--   Note that the application code must create the streams with names
--   specified in the <tt>Outputs</tt>. For example, if your
--   <tt>Outputs</tt> defines output streams named
--   <tt>ExampleOutputStream1</tt> and <tt>ExampleOutputStream2</tt>, then
--   your application code must create these streams.
[$sel:applicationCode:CreateApplication'] :: CreateApplication -> Maybe Text

-- | A list of one or more tags to assign to the application. A tag is a
--   key-value pair that identifies an application. Note that the maximum
--   number of application tags includes system tags. The maximum number of
--   user-defined application tags is 50. For more information, see
--   <a>Using Tagging</a>.
[$sel:tags:CreateApplication'] :: CreateApplication -> Maybe (NonEmpty Tag)

-- | Name of your Amazon Kinesis Analytics application (for example,
--   <tt>sample-app</tt>).
[$sel:applicationName:CreateApplication'] :: CreateApplication -> Text

-- | Create a value of <a>CreateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationDescription:CreateApplication'</a>,
--   <a>createApplication_applicationDescription</a> - Summary description
--   of the application.
--   
--   <a>$sel:inputs:CreateApplication'</a>, <a>createApplication_inputs</a>
--   - Use this parameter to configure the application input.
--   
--   You can configure your application to receive input from a single
--   streaming source. In this configuration, you map this streaming source
--   to an in-application stream that is created. Your application code can
--   then query the in-application stream like a table (you can think of it
--   as a constantly updating table).
--   
--   For the streaming source, you provide its Amazon Resource Name (ARN)
--   and format of data on the stream (for example, JSON, CSV, etc.). You
--   also must provide an IAM role that Amazon Kinesis Analytics can assume
--   to read this stream on your behalf.
--   
--   To create the in-application stream, you need to specify a schema to
--   transform your data into a schematized version used in SQL. In the
--   schema, you provide the necessary mapping of the data elements in the
--   streaming source to record columns in the in-app stream.
--   
--   <a>$sel:cloudWatchLoggingOptions:CreateApplication'</a>,
--   <a>createApplication_cloudWatchLoggingOptions</a> - Use this parameter
--   to configure a CloudWatch log stream to monitor application
--   configuration errors. For more information, see <a>Working with Amazon
--   CloudWatch Logs</a>.
--   
--   <a>$sel:outputs:CreateApplication'</a>,
--   <a>createApplication_outputs</a> - You can configure application
--   output to write data from any of the in-application streams to up to
--   three destinations.
--   
--   These destinations can be Amazon Kinesis streams, Amazon Kinesis
--   Firehose delivery streams, AWS Lambda destinations, or any combination
--   of the three.
--   
--   In the configuration, you specify the in-application stream name, the
--   destination stream or Lambda function Amazon Resource Name (ARN), and
--   the format to use when writing data. You must also provide an IAM role
--   that Amazon Kinesis Analytics can assume to write to the destination
--   stream or Lambda function on your behalf.
--   
--   In the output configuration, you also provide the output stream or
--   Lambda function ARN. For stream destinations, you provide the format
--   of data in the stream (for example, JSON, CSV). You also must provide
--   an IAM role that Amazon Kinesis Analytics can assume to write to the
--   stream or Lambda function on your behalf.
--   
--   <a>$sel:applicationCode:CreateApplication'</a>,
--   <a>createApplication_applicationCode</a> - One or more SQL statements
--   that read input data, transform it, and generate output. For example,
--   you can write a SQL statement that reads data from one in-application
--   stream, generates a running average of the number of advertisement
--   clicks by vendor, and insert resulting rows in another in-application
--   stream using pumps. For more information about the typical pattern,
--   see <a>Application Code</a>.
--   
--   You can provide such series of SQL statements, where output of one
--   statement can be used as the input for the next statement. You store
--   intermediate results by creating in-application streams and pumps.
--   
--   Note that the application code must create the streams with names
--   specified in the <tt>Outputs</tt>. For example, if your
--   <tt>Outputs</tt> defines output streams named
--   <tt>ExampleOutputStream1</tt> and <tt>ExampleOutputStream2</tt>, then
--   your application code must create these streams.
--   
--   <a>$sel:tags:CreateApplication'</a>, <a>createApplication_tags</a> - A
--   list of one or more tags to assign to the application. A tag is a
--   key-value pair that identifies an application. Note that the maximum
--   number of application tags includes system tags. The maximum number of
--   user-defined application tags is 50. For more information, see
--   <a>Using Tagging</a>.
--   
--   <a>$sel:applicationName:CreateApplication'</a>,
--   <a>createApplication_applicationName</a> - Name of your Amazon Kinesis
--   Analytics application (for example, <tt>sample-app</tt>).
newCreateApplication :: Text -> CreateApplication

-- | Summary description of the application.
createApplication_applicationDescription :: Lens' CreateApplication (Maybe Text)

-- | Use this parameter to configure the application input.
--   
--   You can configure your application to receive input from a single
--   streaming source. In this configuration, you map this streaming source
--   to an in-application stream that is created. Your application code can
--   then query the in-application stream like a table (you can think of it
--   as a constantly updating table).
--   
--   For the streaming source, you provide its Amazon Resource Name (ARN)
--   and format of data on the stream (for example, JSON, CSV, etc.). You
--   also must provide an IAM role that Amazon Kinesis Analytics can assume
--   to read this stream on your behalf.
--   
--   To create the in-application stream, you need to specify a schema to
--   transform your data into a schematized version used in SQL. In the
--   schema, you provide the necessary mapping of the data elements in the
--   streaming source to record columns in the in-app stream.
createApplication_inputs :: Lens' CreateApplication (Maybe [Input])

-- | Use this parameter to configure a CloudWatch log stream to monitor
--   application configuration errors. For more information, see <a>Working
--   with Amazon CloudWatch Logs</a>.
createApplication_cloudWatchLoggingOptions :: Lens' CreateApplication (Maybe [CloudWatchLoggingOption])

-- | You can configure application output to write data from any of the
--   in-application streams to up to three destinations.
--   
--   These destinations can be Amazon Kinesis streams, Amazon Kinesis
--   Firehose delivery streams, AWS Lambda destinations, or any combination
--   of the three.
--   
--   In the configuration, you specify the in-application stream name, the
--   destination stream or Lambda function Amazon Resource Name (ARN), and
--   the format to use when writing data. You must also provide an IAM role
--   that Amazon Kinesis Analytics can assume to write to the destination
--   stream or Lambda function on your behalf.
--   
--   In the output configuration, you also provide the output stream or
--   Lambda function ARN. For stream destinations, you provide the format
--   of data in the stream (for example, JSON, CSV). You also must provide
--   an IAM role that Amazon Kinesis Analytics can assume to write to the
--   stream or Lambda function on your behalf.
createApplication_outputs :: Lens' CreateApplication (Maybe [Output])

-- | One or more SQL statements that read input data, transform it, and
--   generate output. For example, you can write a SQL statement that reads
--   data from one in-application stream, generates a running average of
--   the number of advertisement clicks by vendor, and insert resulting
--   rows in another in-application stream using pumps. For more
--   information about the typical pattern, see <a>Application Code</a>.
--   
--   You can provide such series of SQL statements, where output of one
--   statement can be used as the input for the next statement. You store
--   intermediate results by creating in-application streams and pumps.
--   
--   Note that the application code must create the streams with names
--   specified in the <tt>Outputs</tt>. For example, if your
--   <tt>Outputs</tt> defines output streams named
--   <tt>ExampleOutputStream1</tt> and <tt>ExampleOutputStream2</tt>, then
--   your application code must create these streams.
createApplication_applicationCode :: Lens' CreateApplication (Maybe Text)

-- | A list of one or more tags to assign to the application. A tag is a
--   key-value pair that identifies an application. Note that the maximum
--   number of application tags includes system tags. The maximum number of
--   user-defined application tags is 50. For more information, see
--   <a>Using Tagging</a>.
createApplication_tags :: Lens' CreateApplication (Maybe (NonEmpty Tag))

-- | Name of your Amazon Kinesis Analytics application (for example,
--   <tt>sample-app</tt>).
createApplication_applicationName :: Lens' CreateApplication Text

-- | TBD
--   
--   <i>See:</i> <a>newCreateApplicationResponse</a> smart constructor.
data CreateApplicationResponse
CreateApplicationResponse' :: Int -> ApplicationSummary -> CreateApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:CreateApplicationResponse'] :: CreateApplicationResponse -> Int

-- | In response to your <tt>CreateApplication</tt> request, Amazon Kinesis
--   Analytics returns a response with a summary of the application it
--   created, including the application Amazon Resource Name (ARN), name,
--   and status.
[$sel:applicationSummary:CreateApplicationResponse'] :: CreateApplicationResponse -> ApplicationSummary

-- | Create a value of <a>CreateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:applicationSummary:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_applicationSummary</a> - In response to
--   your <tt>CreateApplication</tt> request, Amazon Kinesis Analytics
--   returns a response with a summary of the application it created,
--   including the application Amazon Resource Name (ARN), name, and
--   status.
newCreateApplicationResponse :: Int -> ApplicationSummary -> CreateApplicationResponse

-- | The response's http status code.
createApplicationResponse_httpStatus :: Lens' CreateApplicationResponse Int

-- | In response to your <tt>CreateApplication</tt> request, Amazon Kinesis
--   Analytics returns a response with a summary of the application it
--   created, including the application Amazon Resource Name (ARN), name,
--   and status.
createApplicationResponse_applicationSummary :: Lens' CreateApplicationResponse ApplicationSummary
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.CreateApplication.CreateApplication
instance GHC.Show.Show Network.AWS.KinesisAnalytics.CreateApplication.CreateApplication
instance GHC.Read.Read Network.AWS.KinesisAnalytics.CreateApplication.CreateApplication
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.CreateApplication.CreateApplication
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.CreateApplication.CreateApplicationResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.CreateApplication.CreateApplicationResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.CreateApplication.CreateApplicationResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.CreateApplication.CreateApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.CreateApplication.CreateApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.CreateApplication.CreateApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.CreateApplication.CreateApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.CreateApplication.CreateApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.CreateApplication.CreateApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.CreateApplication.CreateApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.CreateApplication.CreateApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.CreateApplication.CreateApplication


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Adds a reference data source to an existing application.
--   
--   Amazon Kinesis Analytics reads reference data (that is, an Amazon S3
--   object) and creates an in-application table within your application.
--   In the request, you provide the source (S3 bucket name and object key
--   name), name of the in-application table to create, and the necessary
--   mapping information that describes how data in Amazon S3 object maps
--   to columns in the resulting in-application table.
--   
--   For conceptual information, see <a>Configuring Application Input</a>.
--   For the limits on data sources you can add to your application, see
--   <a>Limits</a>.
--   
--   This operation requires permissions to perform the
--   <tt>kinesisanalytics:AddApplicationOutput</tt> action.
module Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource

-- | <i>See:</i> <a>newAddApplicationReferenceDataSource</a> smart
--   constructor.
data AddApplicationReferenceDataSource
AddApplicationReferenceDataSource' :: Text -> Natural -> ReferenceDataSource -> AddApplicationReferenceDataSource

-- | Name of an existing application.
[$sel:applicationName:AddApplicationReferenceDataSource'] :: AddApplicationReferenceDataSource -> Text

-- | Version of the application for which you are adding the reference data
--   source. You can use the <a>DescribeApplication</a> operation to get
--   the current application version. If the version specified is not the
--   current version, the <tt>ConcurrentModificationException</tt> is
--   returned.
[$sel:currentApplicationVersionId:AddApplicationReferenceDataSource'] :: AddApplicationReferenceDataSource -> Natural

-- | The reference data source can be an object in your Amazon S3 bucket.
--   Amazon Kinesis Analytics reads the object and copies the data into the
--   in-application table that is created. You provide an S3 bucket, object
--   key name, and the resulting in-application table that is created. You
--   must also provide an IAM role with the necessary permissions that
--   Amazon Kinesis Analytics can assume to read the object from your S3
--   bucket on your behalf.
[$sel:referenceDataSource:AddApplicationReferenceDataSource'] :: AddApplicationReferenceDataSource -> ReferenceDataSource

-- | Create a value of <a>AddApplicationReferenceDataSource</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:AddApplicationReferenceDataSource'</a>,
--   <a>addApplicationReferenceDataSource_applicationName</a> - Name of an
--   existing application.
--   
--   
--   <a>$sel:currentApplicationVersionId:AddApplicationReferenceDataSource'</a>,
--   <a>addApplicationReferenceDataSource_currentApplicationVersionId</a> -
--   Version of the application for which you are adding the reference data
--   source. You can use the <a>DescribeApplication</a> operation to get
--   the current application version. If the version specified is not the
--   current version, the <tt>ConcurrentModificationException</tt> is
--   returned.
--   
--   <a>$sel:referenceDataSource:AddApplicationReferenceDataSource'</a>,
--   <a>addApplicationReferenceDataSource_referenceDataSource</a> - The
--   reference data source can be an object in your Amazon S3 bucket.
--   Amazon Kinesis Analytics reads the object and copies the data into the
--   in-application table that is created. You provide an S3 bucket, object
--   key name, and the resulting in-application table that is created. You
--   must also provide an IAM role with the necessary permissions that
--   Amazon Kinesis Analytics can assume to read the object from your S3
--   bucket on your behalf.
newAddApplicationReferenceDataSource :: Text -> Natural -> ReferenceDataSource -> AddApplicationReferenceDataSource

-- | Name of an existing application.
addApplicationReferenceDataSource_applicationName :: Lens' AddApplicationReferenceDataSource Text

-- | Version of the application for which you are adding the reference data
--   source. You can use the <a>DescribeApplication</a> operation to get
--   the current application version. If the version specified is not the
--   current version, the <tt>ConcurrentModificationException</tt> is
--   returned.
addApplicationReferenceDataSource_currentApplicationVersionId :: Lens' AddApplicationReferenceDataSource Natural

-- | The reference data source can be an object in your Amazon S3 bucket.
--   Amazon Kinesis Analytics reads the object and copies the data into the
--   in-application table that is created. You provide an S3 bucket, object
--   key name, and the resulting in-application table that is created. You
--   must also provide an IAM role with the necessary permissions that
--   Amazon Kinesis Analytics can assume to read the object from your S3
--   bucket on your behalf.
addApplicationReferenceDataSource_referenceDataSource :: Lens' AddApplicationReferenceDataSource ReferenceDataSource

-- | <i>See:</i> <a>newAddApplicationReferenceDataSourceResponse</a> smart
--   constructor.
data AddApplicationReferenceDataSourceResponse
AddApplicationReferenceDataSourceResponse' :: Int -> AddApplicationReferenceDataSourceResponse

-- | The response's http status code.
[$sel:httpStatus:AddApplicationReferenceDataSourceResponse'] :: AddApplicationReferenceDataSourceResponse -> Int

-- | Create a value of <a>AddApplicationReferenceDataSourceResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddApplicationReferenceDataSourceResponse'</a>,
--   <a>addApplicationReferenceDataSourceResponse_httpStatus</a> - The
--   response's http status code.
newAddApplicationReferenceDataSourceResponse :: Int -> AddApplicationReferenceDataSourceResponse

-- | The response's http status code.
addApplicationReferenceDataSourceResponse_httpStatus :: Lens' AddApplicationReferenceDataSourceResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSource
instance GHC.Show.Show Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSource
instance GHC.Read.Read Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSource
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSource
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSourceResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSourceResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSourceResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSource
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSource
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.AddApplicationReferenceDataSource.AddApplicationReferenceDataSource


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Adds an external destination to your Amazon Kinesis Analytics
--   application.
--   
--   If you want Amazon Kinesis Analytics to deliver data from an
--   in-application stream within your application to an external
--   destination (such as an Amazon Kinesis stream, an Amazon Kinesis
--   Firehose delivery stream, or an AWS Lambda function), you add the
--   relevant configuration to your application using this operation. You
--   can configure one or more outputs for your application. Each output
--   configuration maps an in-application stream and an external
--   destination.
--   
--   You can use one of the output configurations to deliver data from your
--   in-application error stream to an external destination so that you can
--   analyze the errors. For more information, see <a>Understanding
--   Application Output (Destination)</a>.
--   
--   Any configuration update, including adding a streaming source using
--   this operation, results in a new version of the application. You can
--   use the <a>DescribeApplication</a> operation to find the current
--   application version.
--   
--   For the limits on the number of application inputs and outputs you can
--   configure, see <a>Limits</a>.
--   
--   This operation requires permissions to perform the
--   <tt>kinesisanalytics:AddApplicationOutput</tt> action.
module Network.AWS.KinesisAnalytics.AddApplicationOutput

-- | <i>See:</i> <a>newAddApplicationOutput</a> smart constructor.
data AddApplicationOutput
AddApplicationOutput' :: Text -> Natural -> Output -> AddApplicationOutput

-- | Name of the application to which you want to add the output
--   configuration.
[$sel:applicationName:AddApplicationOutput'] :: AddApplicationOutput -> Text

-- | Version of the application to which you want to add the output
--   configuration. You can use the <a>DescribeApplication</a> operation to
--   get the current application version. If the version specified is not
--   the current version, the <tt>ConcurrentModificationException</tt> is
--   returned.
[$sel:currentApplicationVersionId:AddApplicationOutput'] :: AddApplicationOutput -> Natural

-- | An array of objects, each describing one output configuration. In the
--   output configuration, you specify the name of an in-application
--   stream, a destination (that is, an Amazon Kinesis stream, an Amazon
--   Kinesis Firehose delivery stream, or an AWS Lambda function), and
--   record the formation to use when writing to the destination.
[$sel:output:AddApplicationOutput'] :: AddApplicationOutput -> Output

-- | Create a value of <a>AddApplicationOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:AddApplicationOutput'</a>,
--   <a>addApplicationOutput_applicationName</a> - Name of the application
--   to which you want to add the output configuration.
--   
--   <a>$sel:currentApplicationVersionId:AddApplicationOutput'</a>,
--   <a>addApplicationOutput_currentApplicationVersionId</a> - Version of
--   the application to which you want to add the output configuration. You
--   can use the <a>DescribeApplication</a> operation to get the current
--   application version. If the version specified is not the current
--   version, the <tt>ConcurrentModificationException</tt> is returned.
--   
--   <a>$sel:output:AddApplicationOutput'</a>,
--   <a>addApplicationOutput_output</a> - An array of objects, each
--   describing one output configuration. In the output configuration, you
--   specify the name of an in-application stream, a destination (that is,
--   an Amazon Kinesis stream, an Amazon Kinesis Firehose delivery stream,
--   or an AWS Lambda function), and record the formation to use when
--   writing to the destination.
newAddApplicationOutput :: Text -> Natural -> Output -> AddApplicationOutput

-- | Name of the application to which you want to add the output
--   configuration.
addApplicationOutput_applicationName :: Lens' AddApplicationOutput Text

-- | Version of the application to which you want to add the output
--   configuration. You can use the <a>DescribeApplication</a> operation to
--   get the current application version. If the version specified is not
--   the current version, the <tt>ConcurrentModificationException</tt> is
--   returned.
addApplicationOutput_currentApplicationVersionId :: Lens' AddApplicationOutput Natural

-- | An array of objects, each describing one output configuration. In the
--   output configuration, you specify the name of an in-application
--   stream, a destination (that is, an Amazon Kinesis stream, an Amazon
--   Kinesis Firehose delivery stream, or an AWS Lambda function), and
--   record the formation to use when writing to the destination.
addApplicationOutput_output :: Lens' AddApplicationOutput Output

-- | <i>See:</i> <a>newAddApplicationOutputResponse</a> smart constructor.
data AddApplicationOutputResponse
AddApplicationOutputResponse' :: Int -> AddApplicationOutputResponse

-- | The response's http status code.
[$sel:httpStatus:AddApplicationOutputResponse'] :: AddApplicationOutputResponse -> Int

-- | Create a value of <a>AddApplicationOutputResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddApplicationOutputResponse'</a>,
--   <a>addApplicationOutputResponse_httpStatus</a> - The response's http
--   status code.
newAddApplicationOutputResponse :: Int -> AddApplicationOutputResponse

-- | The response's http status code.
addApplicationOutputResponse_httpStatus :: Lens' AddApplicationOutputResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutput
instance GHC.Show.Show Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutput
instance GHC.Read.Read Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutput
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutput
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutputResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutputResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutputResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutputResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutput
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutputResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutput
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutput
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutput
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutput
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.AddApplicationOutput.AddApplicationOutput


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Adds an <a>InputProcessingConfiguration</a> to an application. An
--   input processor preprocesses records on the input stream before the
--   application's SQL code executes. Currently, the only input processor
--   available is <a>AWS Lambda</a>.
module Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration

-- | <i>See:</i> <a>newAddApplicationInputProcessingConfiguration</a> smart
--   constructor.
data AddApplicationInputProcessingConfiguration
AddApplicationInputProcessingConfiguration' :: Text -> Natural -> Text -> InputProcessingConfiguration -> AddApplicationInputProcessingConfiguration

-- | Name of the application to which you want to add the input processing
--   configuration.
[$sel:applicationName:AddApplicationInputProcessingConfiguration'] :: AddApplicationInputProcessingConfiguration -> Text

-- | Version of the application to which you want to add the input
--   processing configuration. You can use the <a>DescribeApplication</a>
--   operation to get the current application version. If the version
--   specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
[$sel:currentApplicationVersionId:AddApplicationInputProcessingConfiguration'] :: AddApplicationInputProcessingConfiguration -> Natural

-- | The ID of the input configuration to add the input processing
--   configuration to. You can get a list of the input IDs for an
--   application using the <a>DescribeApplication</a> operation.
[$sel:inputId:AddApplicationInputProcessingConfiguration'] :: AddApplicationInputProcessingConfiguration -> Text

-- | The <a>InputProcessingConfiguration</a> to add to the application.
[$sel:inputProcessingConfiguration:AddApplicationInputProcessingConfiguration'] :: AddApplicationInputProcessingConfiguration -> InputProcessingConfiguration

-- | Create a value of <a>AddApplicationInputProcessingConfiguration</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:applicationName:AddApplicationInputProcessingConfiguration'</a>,
--   <a>addApplicationInputProcessingConfiguration_applicationName</a> -
--   Name of the application to which you want to add the input processing
--   configuration.
--   
--   
--   <a>$sel:currentApplicationVersionId:AddApplicationInputProcessingConfiguration'</a>,
--   <a>addApplicationInputProcessingConfiguration_currentApplicationVersionId</a>
--   - Version of the application to which you want to add the input
--   processing configuration. You can use the <a>DescribeApplication</a>
--   operation to get the current application version. If the version
--   specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
--   
--   <a>$sel:inputId:AddApplicationInputProcessingConfiguration'</a>,
--   <a>addApplicationInputProcessingConfiguration_inputId</a> - The ID of
--   the input configuration to add the input processing configuration to.
--   You can get a list of the input IDs for an application using the
--   <a>DescribeApplication</a> operation.
--   
--   
--   <a>$sel:inputProcessingConfiguration:AddApplicationInputProcessingConfiguration'</a>,
--   <a>addApplicationInputProcessingConfiguration_inputProcessingConfiguration</a>
--   - The <a>InputProcessingConfiguration</a> to add to the application.
newAddApplicationInputProcessingConfiguration :: Text -> Natural -> Text -> InputProcessingConfiguration -> AddApplicationInputProcessingConfiguration

-- | Name of the application to which you want to add the input processing
--   configuration.
addApplicationInputProcessingConfiguration_applicationName :: Lens' AddApplicationInputProcessingConfiguration Text

-- | Version of the application to which you want to add the input
--   processing configuration. You can use the <a>DescribeApplication</a>
--   operation to get the current application version. If the version
--   specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
addApplicationInputProcessingConfiguration_currentApplicationVersionId :: Lens' AddApplicationInputProcessingConfiguration Natural

-- | The ID of the input configuration to add the input processing
--   configuration to. You can get a list of the input IDs for an
--   application using the <a>DescribeApplication</a> operation.
addApplicationInputProcessingConfiguration_inputId :: Lens' AddApplicationInputProcessingConfiguration Text

-- | The <a>InputProcessingConfiguration</a> to add to the application.
addApplicationInputProcessingConfiguration_inputProcessingConfiguration :: Lens' AddApplicationInputProcessingConfiguration InputProcessingConfiguration

-- | <i>See:</i>
--   <a>newAddApplicationInputProcessingConfigurationResponse</a> smart
--   constructor.
data AddApplicationInputProcessingConfigurationResponse
AddApplicationInputProcessingConfigurationResponse' :: Int -> AddApplicationInputProcessingConfigurationResponse

-- | The response's http status code.
[$sel:httpStatus:AddApplicationInputProcessingConfigurationResponse'] :: AddApplicationInputProcessingConfigurationResponse -> Int

-- | Create a value of
--   <a>AddApplicationInputProcessingConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:AddApplicationInputProcessingConfigurationResponse'</a>,
--   <a>addApplicationInputProcessingConfigurationResponse_httpStatus</a> -
--   The response's http status code.
newAddApplicationInputProcessingConfigurationResponse :: Int -> AddApplicationInputProcessingConfigurationResponse

-- | The response's http status code.
addApplicationInputProcessingConfigurationResponse_httpStatus :: Lens' AddApplicationInputProcessingConfigurationResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfiguration
instance GHC.Show.Show Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfiguration
instance GHC.Read.Read Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfiguration
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfiguration
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfigurationResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfigurationResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfigurationResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfigurationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfiguration
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfigurationResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfiguration
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfiguration
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfiguration
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfiguration
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfiguration
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.AddApplicationInputProcessingConfiguration.AddApplicationInputProcessingConfiguration


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Adds a streaming source to your Amazon Kinesis application. For
--   conceptual information, see <a>Configuring Application Input</a>.
--   
--   You can add a streaming source either when you create an application
--   or you can use this operation to add a streaming source after you
--   create an application. For more information, see
--   <a>CreateApplication</a>.
--   
--   Any configuration update, including adding a streaming source using
--   this operation, results in a new version of the application. You can
--   use the <a>DescribeApplication</a> operation to find the current
--   application version.
--   
--   This operation requires permissions to perform the
--   <tt>kinesisanalytics:AddApplicationInput</tt> action.
module Network.AWS.KinesisAnalytics.AddApplicationInput

-- | <i>See:</i> <a>newAddApplicationInput</a> smart constructor.
data AddApplicationInput
AddApplicationInput' :: Text -> Natural -> Input -> AddApplicationInput

-- | Name of your existing Amazon Kinesis Analytics application to which
--   you want to add the streaming source.
[$sel:applicationName:AddApplicationInput'] :: AddApplicationInput -> Text

-- | Current version of your Amazon Kinesis Analytics application. You can
--   use the <a>DescribeApplication</a> operation to find the current
--   application version.
[$sel:currentApplicationVersionId:AddApplicationInput'] :: AddApplicationInput -> Natural

-- | The <a>Input</a> to add.
[$sel:input:AddApplicationInput'] :: AddApplicationInput -> Input

-- | Create a value of <a>AddApplicationInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:AddApplicationInput'</a>,
--   <a>addApplicationInput_applicationName</a> - Name of your existing
--   Amazon Kinesis Analytics application to which you want to add the
--   streaming source.
--   
--   <a>$sel:currentApplicationVersionId:AddApplicationInput'</a>,
--   <a>addApplicationInput_currentApplicationVersionId</a> - Current
--   version of your Amazon Kinesis Analytics application. You can use the
--   <a>DescribeApplication</a> operation to find the current application
--   version.
--   
--   <a>$sel:input:AddApplicationInput'</a>,
--   <a>addApplicationInput_input</a> - The <a>Input</a> to add.
newAddApplicationInput :: Text -> Natural -> Input -> AddApplicationInput

-- | Name of your existing Amazon Kinesis Analytics application to which
--   you want to add the streaming source.
addApplicationInput_applicationName :: Lens' AddApplicationInput Text

-- | Current version of your Amazon Kinesis Analytics application. You can
--   use the <a>DescribeApplication</a> operation to find the current
--   application version.
addApplicationInput_currentApplicationVersionId :: Lens' AddApplicationInput Natural

-- | The <a>Input</a> to add.
addApplicationInput_input :: Lens' AddApplicationInput Input

-- | <i>See:</i> <a>newAddApplicationInputResponse</a> smart constructor.
data AddApplicationInputResponse
AddApplicationInputResponse' :: Int -> AddApplicationInputResponse

-- | The response's http status code.
[$sel:httpStatus:AddApplicationInputResponse'] :: AddApplicationInputResponse -> Int

-- | Create a value of <a>AddApplicationInputResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddApplicationInputResponse'</a>,
--   <a>addApplicationInputResponse_httpStatus</a> - The response's http
--   status code.
newAddApplicationInputResponse :: Int -> AddApplicationInputResponse

-- | The response's http status code.
addApplicationInputResponse_httpStatus :: Lens' AddApplicationInputResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInput
instance GHC.Show.Show Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInput
instance GHC.Read.Read Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInput
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInput
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInputResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInputResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInputResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInputResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInput
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInputResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInput
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInput
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInput
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInput
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInput
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.AddApplicationInput.AddApplicationInput


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Adds a CloudWatch log stream to monitor application configuration
--   errors. For more information about using CloudWatch log streams with
--   Amazon Kinesis Analytics applications, see <a>Working with Amazon
--   CloudWatch Logs</a>.
module Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption

-- | <i>See:</i> <a>newAddApplicationCloudWatchLoggingOption</a> smart
--   constructor.
data AddApplicationCloudWatchLoggingOption
AddApplicationCloudWatchLoggingOption' :: Text -> Natural -> CloudWatchLoggingOption -> AddApplicationCloudWatchLoggingOption

-- | The Kinesis Analytics application name.
[$sel:applicationName:AddApplicationCloudWatchLoggingOption'] :: AddApplicationCloudWatchLoggingOption -> Text

-- | The version ID of the Kinesis Analytics application.
[$sel:currentApplicationVersionId:AddApplicationCloudWatchLoggingOption'] :: AddApplicationCloudWatchLoggingOption -> Natural

-- | Provides the CloudWatch log stream Amazon Resource Name (ARN) and the
--   IAM role ARN. Note: To write application messages to CloudWatch, the
--   IAM role that is used must have the <tt>PutLogEvents</tt> policy
--   action enabled.
[$sel:cloudWatchLoggingOption:AddApplicationCloudWatchLoggingOption'] :: AddApplicationCloudWatchLoggingOption -> CloudWatchLoggingOption

-- | Create a value of <a>AddApplicationCloudWatchLoggingOption</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:AddApplicationCloudWatchLoggingOption'</a>,
--   <a>addApplicationCloudWatchLoggingOption_applicationName</a> - The
--   Kinesis Analytics application name.
--   
--   
--   <a>$sel:currentApplicationVersionId:AddApplicationCloudWatchLoggingOption'</a>,
--   <a>addApplicationCloudWatchLoggingOption_currentApplicationVersionId</a>
--   - The version ID of the Kinesis Analytics application.
--   
--   
--   <a>$sel:cloudWatchLoggingOption:AddApplicationCloudWatchLoggingOption'</a>,
--   <a>addApplicationCloudWatchLoggingOption_cloudWatchLoggingOption</a> -
--   Provides the CloudWatch log stream Amazon Resource Name (ARN) and the
--   IAM role ARN. Note: To write application messages to CloudWatch, the
--   IAM role that is used must have the <tt>PutLogEvents</tt> policy
--   action enabled.
newAddApplicationCloudWatchLoggingOption :: Text -> Natural -> CloudWatchLoggingOption -> AddApplicationCloudWatchLoggingOption

-- | The Kinesis Analytics application name.
addApplicationCloudWatchLoggingOption_applicationName :: Lens' AddApplicationCloudWatchLoggingOption Text

-- | The version ID of the Kinesis Analytics application.
addApplicationCloudWatchLoggingOption_currentApplicationVersionId :: Lens' AddApplicationCloudWatchLoggingOption Natural

-- | Provides the CloudWatch log stream Amazon Resource Name (ARN) and the
--   IAM role ARN. Note: To write application messages to CloudWatch, the
--   IAM role that is used must have the <tt>PutLogEvents</tt> policy
--   action enabled.
addApplicationCloudWatchLoggingOption_cloudWatchLoggingOption :: Lens' AddApplicationCloudWatchLoggingOption CloudWatchLoggingOption

-- | <i>See:</i> <a>newAddApplicationCloudWatchLoggingOptionResponse</a>
--   smart constructor.
data AddApplicationCloudWatchLoggingOptionResponse
AddApplicationCloudWatchLoggingOptionResponse' :: Int -> AddApplicationCloudWatchLoggingOptionResponse

-- | The response's http status code.
[$sel:httpStatus:AddApplicationCloudWatchLoggingOptionResponse'] :: AddApplicationCloudWatchLoggingOptionResponse -> Int

-- | Create a value of <a>AddApplicationCloudWatchLoggingOptionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddApplicationCloudWatchLoggingOptionResponse'</a>,
--   <a>addApplicationCloudWatchLoggingOptionResponse_httpStatus</a> - The
--   response's http status code.
newAddApplicationCloudWatchLoggingOptionResponse :: Int -> AddApplicationCloudWatchLoggingOptionResponse

-- | The response's http status code.
addApplicationCloudWatchLoggingOptionResponse_httpStatus :: Lens' AddApplicationCloudWatchLoggingOptionResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOption
instance GHC.Show.Show Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOption
instance GHC.Read.Read Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOption
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOption
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOptionResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOptionResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOptionResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOptionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOption
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOptionResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOption
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOption
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOption
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOption
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOption
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.AddApplicationCloudWatchLoggingOption.AddApplicationCloudWatchLoggingOption


-- | Removes one or more tags from a Kinesis Analytics application. For
--   more information, see <a>Using Tagging</a>.
module Network.AWS.KinesisAnalytics.UntagResource

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | The ARN of the Kinesis Analytics application from which to remove the
--   tags.
[$sel:resourceARN:UntagResource'] :: UntagResource -> Text

-- | A list of keys of tags to remove from the specified application.
[$sel:tagKeys:UntagResource'] :: UntagResource -> NonEmpty Text

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The ARN of the Kinesis Analytics
--   application from which to remove the tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of keys of tags to remove from the specified application.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | The ARN of the Kinesis Analytics application from which to remove the
--   tags.
untagResource_resourceARN :: Lens' UntagResource Text

-- | A list of keys of tags to remove from the specified application.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | The response's http status code.
[$sel:httpStatus:UntagResourceResponse'] :: UntagResourceResponse -> Int

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.UntagResource.UntagResource
instance GHC.Show.Show Network.AWS.KinesisAnalytics.UntagResource.UntagResource
instance GHC.Read.Read Network.AWS.KinesisAnalytics.UntagResource.UntagResource
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.UntagResource.UntagResource
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.UntagResource.UntagResourceResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.UntagResource.UntagResourceResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.UntagResource.UntagResourceResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.UntagResource.UntagResourceResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.UntagResource.UntagResourceResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.UntagResource.UntagResource
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.UntagResource.UntagResource
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.UntagResource.UntagResource
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.UntagResource.UntagResource
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.UntagResource.UntagResource
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.UntagResource.UntagResource


-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Updates an existing Amazon Kinesis Analytics application. Using this
--   API, you can update application code, input configuration, and output
--   configuration.
--   
--   Note that Amazon Kinesis Analytics updates the
--   <tt>CurrentApplicationVersionId</tt> each time you update your
--   application.
--   
--   This operation requires permission for the
--   <tt>kinesisanalytics:UpdateApplication</tt> action.
module Network.AWS.KinesisAnalytics.UpdateApplication

-- | <i>See:</i> <a>newUpdateApplication</a> smart constructor.
data UpdateApplication
UpdateApplication' :: Text -> Natural -> ApplicationUpdate -> UpdateApplication

-- | Name of the Amazon Kinesis Analytics application to update.
[$sel:applicationName:UpdateApplication'] :: UpdateApplication -> Text

-- | The current application version ID. You can use the
--   <a>DescribeApplication</a> operation to get this value.
[$sel:currentApplicationVersionId:UpdateApplication'] :: UpdateApplication -> Natural

-- | Describes application updates.
[$sel:applicationUpdate:UpdateApplication'] :: UpdateApplication -> ApplicationUpdate

-- | Create a value of <a>UpdateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:UpdateApplication'</a>,
--   <a>updateApplication_applicationName</a> - Name of the Amazon Kinesis
--   Analytics application to update.
--   
--   <a>$sel:currentApplicationVersionId:UpdateApplication'</a>,
--   <a>updateApplication_currentApplicationVersionId</a> - The current
--   application version ID. You can use the <a>DescribeApplication</a>
--   operation to get this value.
--   
--   <a>$sel:applicationUpdate:UpdateApplication'</a>,
--   <a>updateApplication_applicationUpdate</a> - Describes application
--   updates.
newUpdateApplication :: Text -> Natural -> ApplicationUpdate -> UpdateApplication

-- | Name of the Amazon Kinesis Analytics application to update.
updateApplication_applicationName :: Lens' UpdateApplication Text

-- | The current application version ID. You can use the
--   <a>DescribeApplication</a> operation to get this value.
updateApplication_currentApplicationVersionId :: Lens' UpdateApplication Natural

-- | Describes application updates.
updateApplication_applicationUpdate :: Lens' UpdateApplication ApplicationUpdate

-- | <i>See:</i> <a>newUpdateApplicationResponse</a> smart constructor.
data UpdateApplicationResponse
UpdateApplicationResponse' :: Int -> UpdateApplicationResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateApplicationResponse'] :: UpdateApplicationResponse -> Int

-- | Create a value of <a>UpdateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateApplicationResponse'</a>,
--   <a>updateApplicationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateApplicationResponse :: Int -> UpdateApplicationResponse

-- | The response's http status code.
updateApplicationResponse_httpStatus :: Lens' UpdateApplicationResponse Int
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplication
instance GHC.Show.Show Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplication
instance GHC.Read.Read Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplication
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplication
instance GHC.Generics.Generic Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplicationResponse
instance GHC.Show.Show Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplicationResponse
instance GHC.Read.Read Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplicationResponse
instance GHC.Classes.Eq Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplicationResponse
instance Network.AWS.Types.AWSRequest Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplicationResponse
instance Data.Hashable.Class.Hashable Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplication
instance Control.DeepSeq.NFData Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplication
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplication
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplication
instance Network.AWS.Data.Path.ToPath Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplication
instance Network.AWS.Data.Query.ToQuery Network.AWS.KinesisAnalytics.UpdateApplication.UpdateApplication


module Network.AWS.KinesisAnalytics.Lens

-- | Name of the application to which you want to add the output
--   configuration.
addApplicationOutput_applicationName :: Lens' AddApplicationOutput Text

-- | Version of the application to which you want to add the output
--   configuration. You can use the <a>DescribeApplication</a> operation to
--   get the current application version. If the version specified is not
--   the current version, the <tt>ConcurrentModificationException</tt> is
--   returned.
addApplicationOutput_currentApplicationVersionId :: Lens' AddApplicationOutput Natural

-- | An array of objects, each describing one output configuration. In the
--   output configuration, you specify the name of an in-application
--   stream, a destination (that is, an Amazon Kinesis stream, an Amazon
--   Kinesis Firehose delivery stream, or an AWS Lambda function), and
--   record the formation to use when writing to the destination.
addApplicationOutput_output :: Lens' AddApplicationOutput Output

-- | The response's http status code.
addApplicationOutputResponse_httpStatus :: Lens' AddApplicationOutputResponse Int

-- | Point at which you want Amazon Kinesis Analytics to start reading
--   records from the specified streaming source discovery purposes.
discoverInputSchema_inputStartingPositionConfiguration :: Lens' DiscoverInputSchema (Maybe InputStartingPositionConfiguration)

-- | The <a>InputProcessingConfiguration</a> to use to preprocess the
--   records before discovering the schema of the records.
discoverInputSchema_inputProcessingConfiguration :: Lens' DiscoverInputSchema (Maybe InputProcessingConfiguration)

-- | Specify this parameter to discover a schema from data in an Amazon S3
--   object.
discoverInputSchema_s3Configuration :: Lens' DiscoverInputSchema (Maybe S3Configuration)

-- | Amazon Resource Name (ARN) of the streaming source.
discoverInputSchema_resourceARN :: Lens' DiscoverInputSchema (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf.
discoverInputSchema_roleARN :: Lens' DiscoverInputSchema (Maybe Text)

-- | Raw stream data that was sampled to infer the schema.
discoverInputSchemaResponse_rawInputRecords :: Lens' DiscoverInputSchemaResponse (Maybe [Text])

-- | Schema inferred from the streaming source. It identifies the format of
--   the data in the streaming source and how each data element maps to
--   corresponding columns in the in-application stream that you can
--   create.
discoverInputSchemaResponse_inputSchema :: Lens' DiscoverInputSchemaResponse (Maybe SourceSchema)

-- | Stream data that was modified by the processor specified in the
--   <tt>InputProcessingConfiguration</tt> parameter.
discoverInputSchemaResponse_processedInputRecords :: Lens' DiscoverInputSchemaResponse (Maybe [Text])

-- | An array of elements, where each element corresponds to a row in a
--   stream record (a stream record can have more than one row).
discoverInputSchemaResponse_parsedInputRecords :: Lens' DiscoverInputSchemaResponse (Maybe [[Text]])

-- | The response's http status code.
discoverInputSchemaResponse_httpStatus :: Lens' DiscoverInputSchemaResponse Int

-- | Name of the application.
describeApplication_applicationName :: Lens' DescribeApplication Text

-- | The response's http status code.
describeApplicationResponse_httpStatus :: Lens' DescribeApplicationResponse Int

-- | Provides a description of the application, such as the application
--   Amazon Resource Name (ARN), status, latest version, and input and
--   output configuration details.
describeApplicationResponse_applicationDetail :: Lens' DescribeApplicationResponse ApplicationDetail

-- | Name of the application.
startApplication_applicationName :: Lens' StartApplication Text

-- | Identifies the specific input, by ID, that the application starts
--   consuming. Amazon Kinesis Analytics starts reading the streaming
--   source associated with the input. You can also specify where in the
--   streaming source you want Amazon Kinesis Analytics to start reading.
startApplication_inputConfigurations :: Lens' StartApplication [InputConfiguration]

-- | The response's http status code.
startApplicationResponse_httpStatus :: Lens' StartApplicationResponse Int

-- | The ARN of the application for which to retrieve tags.
listTagsForResource_resourceARN :: Lens' ListTagsForResource Text

-- | The key-value tags assigned to the application.
listTagsForResourceResponse_tags :: Lens' ListTagsForResourceResponse (Maybe (NonEmpty Tag))

-- | The response's http status code.
listTagsForResourceResponse_httpStatus :: Lens' ListTagsForResourceResponse Int

-- | Name of an existing application.
deleteApplicationReferenceDataSource_applicationName :: Lens' DeleteApplicationReferenceDataSource Text

-- | Version of the application. You can use the <a>DescribeApplication</a>
--   operation to get the current application version. If the version
--   specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
deleteApplicationReferenceDataSource_currentApplicationVersionId :: Lens' DeleteApplicationReferenceDataSource Natural

-- | ID of the reference data source. When you add a reference data source
--   to your application using the
--   <a>AddApplicationReferenceDataSource</a>, Amazon Kinesis Analytics
--   assigns an ID. You can use the <a>DescribeApplication</a> operation to
--   get the reference ID.
deleteApplicationReferenceDataSource_referenceId :: Lens' DeleteApplicationReferenceDataSource Text

-- | The response's http status code.
deleteApplicationReferenceDataSourceResponse_httpStatus :: Lens' DeleteApplicationReferenceDataSourceResponse Int

-- | Name of the Amazon Kinesis Analytics application to delete.
deleteApplication_applicationName :: Lens' DeleteApplication Text

-- | You can use the <tt>DescribeApplication</tt> operation to get this
--   value.
deleteApplication_createTimestamp :: Lens' DeleteApplication UTCTime

-- | The response's http status code.
deleteApplicationResponse_httpStatus :: Lens' DeleteApplicationResponse Int

-- | Name of the Amazon Kinesis Analytics application to update.
updateApplication_applicationName :: Lens' UpdateApplication Text

-- | The current application version ID. You can use the
--   <a>DescribeApplication</a> operation to get this value.
updateApplication_currentApplicationVersionId :: Lens' UpdateApplication Natural

-- | Describes application updates.
updateApplication_applicationUpdate :: Lens' UpdateApplication ApplicationUpdate

-- | The response's http status code.
updateApplicationResponse_httpStatus :: Lens' UpdateApplicationResponse Int

-- | The Kinesis Analytics application name.
deleteApplicationCloudWatchLoggingOption_applicationName :: Lens' DeleteApplicationCloudWatchLoggingOption Text

-- | The version ID of the Kinesis Analytics application.
deleteApplicationCloudWatchLoggingOption_currentApplicationVersionId :: Lens' DeleteApplicationCloudWatchLoggingOption Natural

-- | The <tt>CloudWatchLoggingOptionId</tt> of the CloudWatch logging
--   option to delete. You can get the <tt>CloudWatchLoggingOptionId</tt>
--   by using the <a>DescribeApplication</a> operation.
deleteApplicationCloudWatchLoggingOption_cloudWatchLoggingOptionId :: Lens' DeleteApplicationCloudWatchLoggingOption Text

-- | The response's http status code.
deleteApplicationCloudWatchLoggingOptionResponse_httpStatus :: Lens' DeleteApplicationCloudWatchLoggingOptionResponse Int

-- | Name of the application to which you want to add the input processing
--   configuration.
addApplicationInputProcessingConfiguration_applicationName :: Lens' AddApplicationInputProcessingConfiguration Text

-- | Version of the application to which you want to add the input
--   processing configuration. You can use the <a>DescribeApplication</a>
--   operation to get the current application version. If the version
--   specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
addApplicationInputProcessingConfiguration_currentApplicationVersionId :: Lens' AddApplicationInputProcessingConfiguration Natural

-- | The ID of the input configuration to add the input processing
--   configuration to. You can get a list of the input IDs for an
--   application using the <a>DescribeApplication</a> operation.
addApplicationInputProcessingConfiguration_inputId :: Lens' AddApplicationInputProcessingConfiguration Text

-- | The <a>InputProcessingConfiguration</a> to add to the application.
addApplicationInputProcessingConfiguration_inputProcessingConfiguration :: Lens' AddApplicationInputProcessingConfiguration InputProcessingConfiguration

-- | The response's http status code.
addApplicationInputProcessingConfigurationResponse_httpStatus :: Lens' AddApplicationInputProcessingConfigurationResponse Int

-- | Summary description of the application.
createApplication_applicationDescription :: Lens' CreateApplication (Maybe Text)

-- | Use this parameter to configure the application input.
--   
--   You can configure your application to receive input from a single
--   streaming source. In this configuration, you map this streaming source
--   to an in-application stream that is created. Your application code can
--   then query the in-application stream like a table (you can think of it
--   as a constantly updating table).
--   
--   For the streaming source, you provide its Amazon Resource Name (ARN)
--   and format of data on the stream (for example, JSON, CSV, etc.). You
--   also must provide an IAM role that Amazon Kinesis Analytics can assume
--   to read this stream on your behalf.
--   
--   To create the in-application stream, you need to specify a schema to
--   transform your data into a schematized version used in SQL. In the
--   schema, you provide the necessary mapping of the data elements in the
--   streaming source to record columns in the in-app stream.
createApplication_inputs :: Lens' CreateApplication (Maybe [Input])

-- | Use this parameter to configure a CloudWatch log stream to monitor
--   application configuration errors. For more information, see <a>Working
--   with Amazon CloudWatch Logs</a>.
createApplication_cloudWatchLoggingOptions :: Lens' CreateApplication (Maybe [CloudWatchLoggingOption])

-- | You can configure application output to write data from any of the
--   in-application streams to up to three destinations.
--   
--   These destinations can be Amazon Kinesis streams, Amazon Kinesis
--   Firehose delivery streams, AWS Lambda destinations, or any combination
--   of the three.
--   
--   In the configuration, you specify the in-application stream name, the
--   destination stream or Lambda function Amazon Resource Name (ARN), and
--   the format to use when writing data. You must also provide an IAM role
--   that Amazon Kinesis Analytics can assume to write to the destination
--   stream or Lambda function on your behalf.
--   
--   In the output configuration, you also provide the output stream or
--   Lambda function ARN. For stream destinations, you provide the format
--   of data in the stream (for example, JSON, CSV). You also must provide
--   an IAM role that Amazon Kinesis Analytics can assume to write to the
--   stream or Lambda function on your behalf.
createApplication_outputs :: Lens' CreateApplication (Maybe [Output])

-- | One or more SQL statements that read input data, transform it, and
--   generate output. For example, you can write a SQL statement that reads
--   data from one in-application stream, generates a running average of
--   the number of advertisement clicks by vendor, and insert resulting
--   rows in another in-application stream using pumps. For more
--   information about the typical pattern, see <a>Application Code</a>.
--   
--   You can provide such series of SQL statements, where output of one
--   statement can be used as the input for the next statement. You store
--   intermediate results by creating in-application streams and pumps.
--   
--   Note that the application code must create the streams with names
--   specified in the <tt>Outputs</tt>. For example, if your
--   <tt>Outputs</tt> defines output streams named
--   <tt>ExampleOutputStream1</tt> and <tt>ExampleOutputStream2</tt>, then
--   your application code must create these streams.
createApplication_applicationCode :: Lens' CreateApplication (Maybe Text)

-- | A list of one or more tags to assign to the application. A tag is a
--   key-value pair that identifies an application. Note that the maximum
--   number of application tags includes system tags. The maximum number of
--   user-defined application tags is 50. For more information, see
--   <a>Using Tagging</a>.
createApplication_tags :: Lens' CreateApplication (Maybe (NonEmpty Tag))

-- | Name of your Amazon Kinesis Analytics application (for example,
--   <tt>sample-app</tt>).
createApplication_applicationName :: Lens' CreateApplication Text

-- | The response's http status code.
createApplicationResponse_httpStatus :: Lens' CreateApplicationResponse Int

-- | In response to your <tt>CreateApplication</tt> request, Amazon Kinesis
--   Analytics returns a response with a summary of the application it
--   created, including the application Amazon Resource Name (ARN), name,
--   and status.
createApplicationResponse_applicationSummary :: Lens' CreateApplicationResponse ApplicationSummary

-- | Amazon Kinesis Analytics application name.
deleteApplicationOutput_applicationName :: Lens' DeleteApplicationOutput Text

-- | Amazon Kinesis Analytics application version. You can use the
--   <a>DescribeApplication</a> operation to get the current application
--   version. If the version specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
deleteApplicationOutput_currentApplicationVersionId :: Lens' DeleteApplicationOutput Natural

-- | The ID of the configuration to delete. Each output configuration that
--   is added to the application, either when the application is created or
--   later using the <a>AddApplicationOutput</a> operation, has a unique
--   ID. You need to provide the ID to uniquely identify the output
--   configuration that you want to delete from the application
--   configuration. You can use the <a>DescribeApplication</a> operation to
--   get the specific <tt>OutputId</tt>.
deleteApplicationOutput_outputId :: Lens' DeleteApplicationOutput Text

-- | The response's http status code.
deleteApplicationOutputResponse_httpStatus :: Lens' DeleteApplicationOutputResponse Int

-- | Name of the running application to stop.
stopApplication_applicationName :: Lens' StopApplication Text

-- | The response's http status code.
stopApplicationResponse_httpStatus :: Lens' StopApplicationResponse Int

-- | Name of an existing application.
addApplicationReferenceDataSource_applicationName :: Lens' AddApplicationReferenceDataSource Text

-- | Version of the application for which you are adding the reference data
--   source. You can use the <a>DescribeApplication</a> operation to get
--   the current application version. If the version specified is not the
--   current version, the <tt>ConcurrentModificationException</tt> is
--   returned.
addApplicationReferenceDataSource_currentApplicationVersionId :: Lens' AddApplicationReferenceDataSource Natural

-- | The reference data source can be an object in your Amazon S3 bucket.
--   Amazon Kinesis Analytics reads the object and copies the data into the
--   in-application table that is created. You provide an S3 bucket, object
--   key name, and the resulting in-application table that is created. You
--   must also provide an IAM role with the necessary permissions that
--   Amazon Kinesis Analytics can assume to read the object from your S3
--   bucket on your behalf.
addApplicationReferenceDataSource_referenceDataSource :: Lens' AddApplicationReferenceDataSource ReferenceDataSource

-- | The response's http status code.
addApplicationReferenceDataSourceResponse_httpStatus :: Lens' AddApplicationReferenceDataSourceResponse Int

-- | Name of your existing Amazon Kinesis Analytics application to which
--   you want to add the streaming source.
addApplicationInput_applicationName :: Lens' AddApplicationInput Text

-- | Current version of your Amazon Kinesis Analytics application. You can
--   use the <a>DescribeApplication</a> operation to find the current
--   application version.
addApplicationInput_currentApplicationVersionId :: Lens' AddApplicationInput Natural

-- | The <a>Input</a> to add.
addApplicationInput_input :: Lens' AddApplicationInput Input

-- | The response's http status code.
addApplicationInputResponse_httpStatus :: Lens' AddApplicationInputResponse Int

-- | The ARN of the application to assign the tags.
tagResource_resourceARN :: Lens' TagResource Text

-- | The key-value tags to assign to the application.
tagResource_tags :: Lens' TagResource (NonEmpty Tag)

-- | The response's http status code.
tagResourceResponse_httpStatus :: Lens' TagResourceResponse Int

-- | The Kinesis Analytics application name.
addApplicationCloudWatchLoggingOption_applicationName :: Lens' AddApplicationCloudWatchLoggingOption Text

-- | The version ID of the Kinesis Analytics application.
addApplicationCloudWatchLoggingOption_currentApplicationVersionId :: Lens' AddApplicationCloudWatchLoggingOption Natural

-- | Provides the CloudWatch log stream Amazon Resource Name (ARN) and the
--   IAM role ARN. Note: To write application messages to CloudWatch, the
--   IAM role that is used must have the <tt>PutLogEvents</tt> policy
--   action enabled.
addApplicationCloudWatchLoggingOption_cloudWatchLoggingOption :: Lens' AddApplicationCloudWatchLoggingOption CloudWatchLoggingOption

-- | The response's http status code.
addApplicationCloudWatchLoggingOptionResponse_httpStatus :: Lens' AddApplicationCloudWatchLoggingOptionResponse Int

-- | Maximum number of applications to list.
listApplications_limit :: Lens' ListApplications (Maybe Natural)

-- | Name of the application to start the list with. When using pagination
--   to retrieve the list, you don't need to specify this parameter in the
--   first request. However, in subsequent requests, you add the last
--   application name from the previous response to get the next page of
--   applications.
listApplications_exclusiveStartApplicationName :: Lens' ListApplications (Maybe Text)

-- | The response's http status code.
listApplicationsResponse_httpStatus :: Lens' ListApplicationsResponse Int

-- | List of <tt>ApplicationSummary</tt> objects.
listApplicationsResponse_applicationSummaries :: Lens' ListApplicationsResponse [ApplicationSummary]

-- | Returns true if there are more applications to retrieve.
listApplicationsResponse_hasMoreApplications :: Lens' ListApplicationsResponse Bool

-- | The ARN of the Kinesis Analytics application from which to remove the
--   tags.
untagResource_resourceARN :: Lens' UntagResource Text

-- | A list of keys of tags to remove from the specified application.
untagResource_tagKeys :: Lens' UntagResource (NonEmpty Text)

-- | The response's http status code.
untagResourceResponse_httpStatus :: Lens' UntagResourceResponse Int

-- | The Kinesis Analytics application name.
deleteApplicationInputProcessingConfiguration_applicationName :: Lens' DeleteApplicationInputProcessingConfiguration Text

-- | The version ID of the Kinesis Analytics application.
deleteApplicationInputProcessingConfiguration_currentApplicationVersionId :: Lens' DeleteApplicationInputProcessingConfiguration Natural

-- | The ID of the input configuration from which to delete the input
--   processing configuration. You can get a list of the input IDs for an
--   application by using the <a>DescribeApplication</a> operation.
deleteApplicationInputProcessingConfiguration_inputId :: Lens' DeleteApplicationInputProcessingConfiguration Text

-- | The response's http status code.
deleteApplicationInputProcessingConfigurationResponse_httpStatus :: Lens' DeleteApplicationInputProcessingConfigurationResponse Int

-- | Description of the application.
applicationDetail_applicationDescription :: Lens' ApplicationDetail (Maybe Text)

-- | Describes the application output configuration. For more information,
--   see <a>Configuring Application Output</a>.
applicationDetail_outputDescriptions :: Lens' ApplicationDetail (Maybe [OutputDescription])

-- | Describes the CloudWatch log streams that are configured to receive
--   application messages. For more information about using CloudWatch log
--   streams with Amazon Kinesis Analytics applications, see <a>Working
--   with Amazon CloudWatch Logs</a>.
applicationDetail_cloudWatchLoggingOptionDescriptions :: Lens' ApplicationDetail (Maybe [CloudWatchLoggingOptionDescription])

-- | Describes reference data sources configured for the application. For
--   more information, see <a>Configuring Application Input</a>.
applicationDetail_referenceDataSourceDescriptions :: Lens' ApplicationDetail (Maybe [ReferenceDataSourceDescription])

-- | Describes the application input configuration. For more information,
--   see <a>Configuring Application Input</a>.
applicationDetail_inputDescriptions :: Lens' ApplicationDetail (Maybe [InputDescription])

-- | Returns the application code that you provided to perform data
--   analysis on any of the in-application streams in your application.
applicationDetail_applicationCode :: Lens' ApplicationDetail (Maybe Text)

-- | Time stamp when the application version was created.
applicationDetail_createTimestamp :: Lens' ApplicationDetail (Maybe UTCTime)

-- | Time stamp when the application was last updated.
applicationDetail_lastUpdateTimestamp :: Lens' ApplicationDetail (Maybe UTCTime)

-- | Name of the application.
applicationDetail_applicationName :: Lens' ApplicationDetail Text

-- | ARN of the application.
applicationDetail_applicationARN :: Lens' ApplicationDetail Text

-- | Status of the application.
applicationDetail_applicationStatus :: Lens' ApplicationDetail ApplicationStatus

-- | Provides the current application version.
applicationDetail_applicationVersionId :: Lens' ApplicationDetail Natural

-- | Name of the application.
applicationSummary_applicationName :: Lens' ApplicationSummary Text

-- | ARN of the application.
applicationSummary_applicationARN :: Lens' ApplicationSummary Text

-- | Status of the application.
applicationSummary_applicationStatus :: Lens' ApplicationSummary ApplicationStatus

-- | Describes application reference data source updates.
applicationUpdate_referenceDataSourceUpdates :: Lens' ApplicationUpdate (Maybe [ReferenceDataSourceUpdate])

-- | Describes application input configuration updates.
applicationUpdate_inputUpdates :: Lens' ApplicationUpdate (Maybe [InputUpdate])

-- | Describes application CloudWatch logging option updates.
applicationUpdate_cloudWatchLoggingOptionUpdates :: Lens' ApplicationUpdate (Maybe [CloudWatchLoggingOptionUpdate])

-- | Describes application output configuration updates.
applicationUpdate_outputUpdates :: Lens' ApplicationUpdate (Maybe [OutputUpdate])

-- | Describes application code updates.
applicationUpdate_applicationCodeUpdate :: Lens' ApplicationUpdate (Maybe Text)

-- | Row delimiter. For example, in a CSV format, <i>'\n'</i> is the
--   typical row delimiter.
cSVMappingParameters_recordRowDelimiter :: Lens' CSVMappingParameters Text

-- | Column delimiter. For example, in a CSV format, a comma (",") is the
--   typical column delimiter.
cSVMappingParameters_recordColumnDelimiter :: Lens' CSVMappingParameters Text

-- | ARN of the CloudWatch log to receive application messages.
cloudWatchLoggingOption_logStreamARN :: Lens' CloudWatchLoggingOption Text

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role that is used
--   must have the <tt>PutLogEvents</tt> policy action enabled.
cloudWatchLoggingOption_roleARN :: Lens' CloudWatchLoggingOption Text

-- | ID of the CloudWatch logging option description.
cloudWatchLoggingOptionDescription_cloudWatchLoggingOptionId :: Lens' CloudWatchLoggingOptionDescription (Maybe Text)

-- | ARN of the CloudWatch log to receive application messages.
cloudWatchLoggingOptionDescription_logStreamARN :: Lens' CloudWatchLoggingOptionDescription Text

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role used must have
--   the <tt>PutLogEvents</tt> policy action enabled.
cloudWatchLoggingOptionDescription_roleARN :: Lens' CloudWatchLoggingOptionDescription Text

-- | IAM ARN of the role to use to send application messages. Note: To
--   write application messages to CloudWatch, the IAM role used must have
--   the <tt>PutLogEvents</tt> policy action enabled.
cloudWatchLoggingOptionUpdate_roleARNUpdate :: Lens' CloudWatchLoggingOptionUpdate (Maybe Text)

-- | ARN of the CloudWatch log to receive application messages.
cloudWatchLoggingOptionUpdate_logStreamARNUpdate :: Lens' CloudWatchLoggingOptionUpdate (Maybe Text)

-- | ID of the CloudWatch logging option to update
cloudWatchLoggingOptionUpdate_cloudWatchLoggingOptionId :: Lens' CloudWatchLoggingOptionUpdate Text

-- | Specifies the format of the records on the output stream.
destinationSchema_recordFormatType :: Lens' DestinationSchema RecordFormatType

-- | Describes the number of in-application streams to create.
--   
--   Data from your source is routed to these in-application input streams.
--   
--   (see <a>Configuring Application Input</a>.
input_inputParallelism :: Lens' Input (Maybe InputParallelism)

-- | The <a>InputProcessingConfiguration</a> for the input. An input
--   processor transforms records as they are received from the stream,
--   before the application's SQL code executes. Currently, the only input
--   processing configuration available is <a>InputLambdaProcessor</a>.
input_inputProcessingConfiguration :: Lens' Input (Maybe InputProcessingConfiguration)

-- | If the streaming source is an Amazon Kinesis stream, identifies the
--   stream's Amazon Resource Name (ARN) and an IAM role that enables
--   Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
input_kinesisStreamsInput :: Lens' Input (Maybe KinesisStreamsInput)

-- | If the streaming source is an Amazon Kinesis Firehose delivery stream,
--   identifies the delivery stream's ARN and an IAM role that enables
--   Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
input_kinesisFirehoseInput :: Lens' Input (Maybe KinesisFirehoseInput)

-- | Name prefix to use when creating an in-application stream. Suppose
--   that you specify a prefix "MyInApplicationStream." Amazon Kinesis
--   Analytics then creates one or more (as per the
--   <tt>InputParallelism</tt> count you specified) in-application streams
--   with names "MyInApplicationStream_001," "MyInApplicationStream_002,"
--   and so on.
input_namePrefix :: Lens' Input Text

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns in the in-application
--   stream that is being created.
--   
--   Also used to describe the format of the reference data source.
input_inputSchema :: Lens' Input SourceSchema

-- | Input source ID. You can get this ID by calling the
--   <a>DescribeApplication</a> operation.
inputConfiguration_id :: Lens' InputConfiguration Text

-- | Point at which you want the application to start processing records
--   from the streaming source.
inputConfiguration_inputStartingPositionConfiguration :: Lens' InputConfiguration InputStartingPositionConfiguration

-- | Point at which the application is configured to read from the input
--   stream.
inputDescription_inputStartingPositionConfiguration :: Lens' InputDescription (Maybe InputStartingPositionConfiguration)

-- | Describes the configured parallelism (number of in-application streams
--   mapped to the streaming source).
inputDescription_inputParallelism :: Lens' InputDescription (Maybe InputParallelism)

-- | Input ID associated with the application input. This is the ID that
--   Amazon Kinesis Analytics assigns to each input configuration you add
--   to your application.
inputDescription_inputId :: Lens' InputDescription (Maybe Text)

-- | Returns the in-application stream names that are mapped to the stream
--   source.
inputDescription_inAppStreamNames :: Lens' InputDescription (Maybe [Text])

-- | If an Amazon Kinesis Firehose delivery stream is configured as a
--   streaming source, provides the delivery stream's ARN and an IAM role
--   that enables Amazon Kinesis Analytics to access the stream on your
--   behalf.
inputDescription_kinesisFirehoseInputDescription :: Lens' InputDescription (Maybe KinesisFirehoseInputDescription)

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns in the in-application
--   stream that is being created.
inputDescription_inputSchema :: Lens' InputDescription (Maybe SourceSchema)

-- | If an Amazon Kinesis stream is configured as streaming source,
--   provides Amazon Kinesis stream's Amazon Resource Name (ARN) and an IAM
--   role that enables Amazon Kinesis Analytics to access the stream on
--   your behalf.
inputDescription_kinesisStreamsInputDescription :: Lens' InputDescription (Maybe KinesisStreamsInputDescription)

-- | In-application name prefix.
inputDescription_namePrefix :: Lens' InputDescription (Maybe Text)

-- | The description of the preprocessor that executes on records in this
--   input before the application's code is run.
inputDescription_inputProcessingConfigurationDescription :: Lens' InputDescription (Maybe InputProcessingConfigurationDescription)

-- | The ARN of the <a>AWS Lambda</a> function that operates on records in
--   the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
inputLambdaProcessor_resourceARN :: Lens' InputLambdaProcessor Text

-- | The ARN of the IAM role that is used to access the AWS Lambda
--   function.
inputLambdaProcessor_roleARN :: Lens' InputLambdaProcessor Text

-- | The ARN of the <a>AWS Lambda</a> function that is used to preprocess
--   the records in the stream.
inputLambdaProcessorDescription_resourceARN :: Lens' InputLambdaProcessorDescription (Maybe Text)

-- | The ARN of the IAM role that is used to access the AWS Lambda
--   function.
inputLambdaProcessorDescription_roleARN :: Lens' InputLambdaProcessorDescription (Maybe Text)

-- | The ARN of the new IAM role that is used to access the AWS Lambda
--   function.
inputLambdaProcessorUpdate_roleARNUpdate :: Lens' InputLambdaProcessorUpdate (Maybe Text)

-- | The Amazon Resource Name (ARN) of the new <a>AWS Lambda</a> function
--   that is used to preprocess the records in the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
inputLambdaProcessorUpdate_resourceARNUpdate :: Lens' InputLambdaProcessorUpdate (Maybe Text)

-- | Number of in-application streams to create. For more information, see
--   <a>Limits</a>.
inputParallelism_count :: Lens' InputParallelism (Maybe Natural)

-- | Number of in-application streams to create for the specified streaming
--   source.
inputParallelismUpdate_countUpdate :: Lens' InputParallelismUpdate (Maybe Natural)

-- | The <a>InputLambdaProcessor</a> that is used to preprocess the records
--   in the stream before being processed by your application code.
inputProcessingConfiguration_inputLambdaProcessor :: Lens' InputProcessingConfiguration InputLambdaProcessor

-- | Provides configuration information about the associated
--   <a>InputLambdaProcessorDescription</a>.
inputProcessingConfigurationDescription_inputLambdaProcessorDescription :: Lens' InputProcessingConfigurationDescription (Maybe InputLambdaProcessorDescription)

-- | Provides update information for an <a>InputLambdaProcessor</a>.
inputProcessingConfigurationUpdate_inputLambdaProcessorUpdate :: Lens' InputProcessingConfigurationUpdate InputLambdaProcessorUpdate

-- | Specifies the format of the records on the streaming source.
inputSchemaUpdate_recordFormatUpdate :: Lens' InputSchemaUpdate (Maybe RecordFormat)

-- | Specifies the encoding of the records in the streaming source. For
--   example, UTF-8.
inputSchemaUpdate_recordEncodingUpdate :: Lens' InputSchemaUpdate (Maybe Text)

-- | A list of <tt>RecordColumn</tt> objects. Each object describes the
--   mapping of the streaming source element to the corresponding column in
--   the in-application stream.
inputSchemaUpdate_recordColumnUpdates :: Lens' InputSchemaUpdate (Maybe (NonEmpty RecordColumn))

-- | The starting position on the stream.
--   
--   <ul>
--   <li><tt>NOW</tt> - Start reading just after the most recent record in
--   the stream, start at the request time stamp that the customer
--   issued.</li>
--   <li><tt>TRIM_HORIZON</tt> - Start reading at the last untrimmed record
--   in the stream, which is the oldest record available in the stream.
--   This option is not available for an Amazon Kinesis Firehose delivery
--   stream.</li>
--   <li><tt>LAST_STOPPED_POINT</tt> - Resume reading from where the
--   application last stopped reading.</li>
--   </ul>
inputStartingPositionConfiguration_inputStartingPosition :: Lens' InputStartingPositionConfiguration (Maybe InputStartingPosition)

-- | Describes updates for an input processing configuration.
inputUpdate_inputProcessingConfigurationUpdate :: Lens' InputUpdate (Maybe InputProcessingConfigurationUpdate)

-- | If an Amazon Kinesis stream is the streaming source to be updated,
--   provides an updated stream Amazon Resource Name (ARN) and IAM role
--   ARN.
inputUpdate_kinesisStreamsInputUpdate :: Lens' InputUpdate (Maybe KinesisStreamsInputUpdate)

-- | Describes the parallelism updates (the number in-application streams
--   Amazon Kinesis Analytics creates for the specific streaming source).
inputUpdate_inputParallelismUpdate :: Lens' InputUpdate (Maybe InputParallelismUpdate)

-- | Name prefix for in-application streams that Amazon Kinesis Analytics
--   creates for the specific streaming source.
inputUpdate_namePrefixUpdate :: Lens' InputUpdate (Maybe Text)

-- | Describes the data format on the streaming source, and how record
--   elements on the streaming source map to columns of the in-application
--   stream that is created.
inputUpdate_inputSchemaUpdate :: Lens' InputUpdate (Maybe InputSchemaUpdate)

-- | If an Amazon Kinesis Firehose delivery stream is the streaming source
--   to be updated, provides an updated stream ARN and IAM role ARN.
inputUpdate_kinesisFirehoseInputUpdate :: Lens' InputUpdate (Maybe KinesisFirehoseInputUpdate)

-- | Input ID of the application input to be updated.
inputUpdate_inputId :: Lens' InputUpdate Text

-- | Path to the top-level parent that contains the records.
jSONMappingParameters_recordRowPath :: Lens' JSONMappingParameters Text

-- | ARN of the input delivery stream.
kinesisFirehoseInput_resourceARN :: Lens' KinesisFirehoseInput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to make sure that the role has the
--   necessary permissions to access the stream.
kinesisFirehoseInput_roleARN :: Lens' KinesisFirehoseInput Text

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream.
kinesisFirehoseInputDescription_resourceARN :: Lens' KinesisFirehoseInputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics assumes to access
--   the stream.
kinesisFirehoseInputDescription_roleARN :: Lens' KinesisFirehoseInputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisFirehoseInputUpdate_roleARNUpdate :: Lens' KinesisFirehoseInputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the input Amazon Kinesis Firehose
--   delivery stream to read.
kinesisFirehoseInputUpdate_resourceARNUpdate :: Lens' KinesisFirehoseInputUpdate (Maybe Text)

-- | ARN of the destination Amazon Kinesis Firehose delivery stream to
--   write to.
kinesisFirehoseOutput_resourceARN :: Lens' KinesisFirehoseOutput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination stream on your behalf. You need to grant the
--   necessary permissions to this role.
kinesisFirehoseOutput_roleARN :: Lens' KinesisFirehoseOutput Text

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream.
kinesisFirehoseOutputDescription_resourceARN :: Lens' KinesisFirehoseOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
kinesisFirehoseOutputDescription_roleARN :: Lens' KinesisFirehoseOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisFirehoseOutputUpdate_roleARNUpdate :: Lens' KinesisFirehoseOutputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the Amazon Kinesis Firehose delivery
--   stream to write to.
kinesisFirehoseOutputUpdate_resourceARNUpdate :: Lens' KinesisFirehoseOutputUpdate (Maybe Text)

-- | ARN of the input Amazon Kinesis stream to read.
kinesisStreamsInput_resourceARN :: Lens' KinesisStreamsInput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisStreamsInput_roleARN :: Lens' KinesisStreamsInput Text

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream.
kinesisStreamsInputDescription_resourceARN :: Lens' KinesisStreamsInputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
kinesisStreamsInputDescription_roleARN :: Lens' KinesisStreamsInputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisStreamsInputUpdate_roleARNUpdate :: Lens' KinesisStreamsInputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the input Amazon Kinesis stream to read.
kinesisStreamsInputUpdate_resourceARNUpdate :: Lens' KinesisStreamsInputUpdate (Maybe Text)

-- | ARN of the destination Amazon Kinesis stream to write to.
kinesisStreamsOutput_resourceARN :: Lens' KinesisStreamsOutput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination stream on your behalf. You need to grant the
--   necessary permissions to this role.
kinesisStreamsOutput_roleARN :: Lens' KinesisStreamsOutput Text

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream.
kinesisStreamsOutputDescription_resourceARN :: Lens' KinesisStreamsOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream.
kinesisStreamsOutputDescription_roleARN :: Lens' KinesisStreamsOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to access
--   the stream on your behalf. You need to grant the necessary permissions
--   to this role.
kinesisStreamsOutputUpdate_roleARNUpdate :: Lens' KinesisStreamsOutputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the Amazon Kinesis stream where you want
--   to write the output.
kinesisStreamsOutputUpdate_resourceARNUpdate :: Lens' KinesisStreamsOutputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the destination Lambda function to write
--   to.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
lambdaOutput_resourceARN :: Lens' LambdaOutput Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
lambdaOutput_roleARN :: Lens' LambdaOutput Text

-- | Amazon Resource Name (ARN) of the destination Lambda function.
lambdaOutputDescription_resourceARN :: Lens' LambdaOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function.
lambdaOutputDescription_roleARN :: Lens' LambdaOutputDescription (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to write
--   to the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
lambdaOutputUpdate_roleARNUpdate :: Lens' LambdaOutputUpdate (Maybe Text)

-- | Amazon Resource Name (ARN) of the destination Lambda function.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
lambdaOutputUpdate_resourceARNUpdate :: Lens' LambdaOutputUpdate (Maybe Text)

-- | Provides additional mapping information when the record format uses
--   delimiters (for example, CSV).
mappingParameters_cSVMappingParameters :: Lens' MappingParameters (Maybe CSVMappingParameters)

-- | Provides additional mapping information when JSON is the record format
--   on the streaming source.
mappingParameters_jSONMappingParameters :: Lens' MappingParameters (Maybe JSONMappingParameters)

-- | Identifies an AWS Lambda function as the destination.
output_lambdaOutput :: Lens' Output (Maybe LambdaOutput)

-- | Identifies an Amazon Kinesis stream as the destination.
output_kinesisStreamsOutput :: Lens' Output (Maybe KinesisStreamsOutput)

-- | Identifies an Amazon Kinesis Firehose delivery stream as the
--   destination.
output_kinesisFirehoseOutput :: Lens' Output (Maybe KinesisFirehoseOutput)

-- | Name of the in-application stream.
output_name :: Lens' Output Text

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
output_destinationSchema :: Lens' Output DestinationSchema

-- | A unique identifier for the output configuration.
outputDescription_outputId :: Lens' OutputDescription (Maybe Text)

-- | Data format used for writing data to the destination.
outputDescription_destinationSchema :: Lens' OutputDescription (Maybe DestinationSchema)

-- | Describes the Amazon Kinesis Firehose delivery stream configured as
--   the destination where output is written.
outputDescription_kinesisFirehoseOutputDescription :: Lens' OutputDescription (Maybe KinesisFirehoseOutputDescription)

-- | Describes Amazon Kinesis stream configured as the destination where
--   output is written.
outputDescription_kinesisStreamsOutputDescription :: Lens' OutputDescription (Maybe KinesisStreamsOutputDescription)

-- | Name of the in-application stream configured as output.
outputDescription_name :: Lens' OutputDescription (Maybe Text)

-- | Describes the AWS Lambda function configured as the destination where
--   output is written.
outputDescription_lambdaOutputDescription :: Lens' OutputDescription (Maybe LambdaOutputDescription)

-- | Describes an Amazon Kinesis stream as the destination for the output.
outputUpdate_kinesisStreamsOutputUpdate :: Lens' OutputUpdate (Maybe KinesisStreamsOutputUpdate)

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
outputUpdate_destinationSchemaUpdate :: Lens' OutputUpdate (Maybe DestinationSchema)

-- | Describes an Amazon Kinesis Firehose delivery stream as the
--   destination for the output.
outputUpdate_kinesisFirehoseOutputUpdate :: Lens' OutputUpdate (Maybe KinesisFirehoseOutputUpdate)

-- | If you want to specify a different in-application stream for this
--   output configuration, use this field to specify the new in-application
--   stream name.
outputUpdate_nameUpdate :: Lens' OutputUpdate (Maybe Text)

-- | Describes an AWS Lambda function as the destination for the output.
outputUpdate_lambdaOutputUpdate :: Lens' OutputUpdate (Maybe LambdaOutputUpdate)

-- | Identifies the specific output configuration that you want to update.
outputUpdate_outputId :: Lens' OutputUpdate Text

-- | Reference to the data element in the streaming input or the reference
--   data source. This element is required if the <a>RecordFormatType</a>
--   is <tt>JSON</tt>.
recordColumn_mapping :: Lens' RecordColumn (Maybe Text)

-- | Name of the column created in the in-application input stream or
--   reference table.
recordColumn_name :: Lens' RecordColumn Text

-- | Type of column created in the in-application input stream or reference
--   table.
recordColumn_sqlType :: Lens' RecordColumn Text

-- | When configuring application input at the time of creating or updating
--   an application, provides additional mapping information specific to
--   the record format (such as JSON, CSV, or record fields delimited by
--   some delimiter) on the streaming source.
recordFormat_mappingParameters :: Lens' RecordFormat (Maybe MappingParameters)

-- | The type of record format.
recordFormat_recordFormatType :: Lens' RecordFormat RecordFormatType

-- | Identifies the S3 bucket and object that contains the reference data.
--   Also identifies the IAM role Amazon Kinesis Analytics can assume to
--   read this object on your behalf. An Amazon Kinesis Analytics
--   application loads reference data only once. If the data changes, you
--   call the <tt>UpdateApplication</tt> operation to trigger reloading of
--   data into your application.
referenceDataSource_s3ReferenceDataSource :: Lens' ReferenceDataSource (Maybe S3ReferenceDataSource)

-- | Name of the in-application table to create.
referenceDataSource_tableName :: Lens' ReferenceDataSource Text

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
referenceDataSource_referenceSchema :: Lens' ReferenceDataSource SourceSchema

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
referenceDataSourceDescription_referenceSchema :: Lens' ReferenceDataSourceDescription (Maybe SourceSchema)

-- | ID of the reference data source. This is the ID that Amazon Kinesis
--   Analytics assigns when you add the reference data source to your
--   application using the <a>AddApplicationReferenceDataSource</a>
--   operation.
referenceDataSourceDescription_referenceId :: Lens' ReferenceDataSourceDescription Text

-- | The in-application table name created by the specific reference data
--   source configuration.
referenceDataSourceDescription_tableName :: Lens' ReferenceDataSourceDescription Text

-- | Provides the S3 bucket name, the object key name that contains the
--   reference data. It also provides the Amazon Resource Name (ARN) of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object and populate the in-application reference table.
referenceDataSourceDescription_s3ReferenceDataSourceDescription :: Lens' ReferenceDataSourceDescription S3ReferenceDataSourceDescription

-- | In-application table name that is created by this update.
referenceDataSourceUpdate_tableNameUpdate :: Lens' ReferenceDataSourceUpdate (Maybe Text)

-- | Describes the S3 bucket name, object key name, and IAM role that
--   Amazon Kinesis Analytics can assume to read the Amazon S3 object on
--   your behalf and populate the in-application reference table.
referenceDataSourceUpdate_s3ReferenceDataSourceUpdate :: Lens' ReferenceDataSourceUpdate (Maybe S3ReferenceDataSourceUpdate)

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
referenceDataSourceUpdate_referenceSchemaUpdate :: Lens' ReferenceDataSourceUpdate (Maybe SourceSchema)

-- | ID of the reference data source being updated. You can use the
--   <a>DescribeApplication</a> operation to get this value.
referenceDataSourceUpdate_referenceId :: Lens' ReferenceDataSourceUpdate Text

-- | IAM ARN of the role used to access the data.
s3Configuration_roleARN :: Lens' S3Configuration Text

-- | ARN of the S3 bucket that contains the data.
s3Configuration_bucketARN :: Lens' S3Configuration Text

-- | The name of the object that contains the data.
s3Configuration_fileKey :: Lens' S3Configuration Text

-- | Amazon Resource Name (ARN) of the S3 bucket.
s3ReferenceDataSource_bucketARN :: Lens' S3ReferenceDataSource Text

-- | Object key name containing reference data.
s3ReferenceDataSource_fileKey :: Lens' S3ReferenceDataSource Text

-- | ARN of the IAM role that the service can assume to read data on your
--   behalf. This role must have permission for the <tt>s3:GetObject</tt>
--   action on the object and trust policy that allows Amazon Kinesis
--   Analytics service principal to assume this role.
s3ReferenceDataSource_referenceRoleARN :: Lens' S3ReferenceDataSource Text

-- | Amazon Resource Name (ARN) of the S3 bucket.
s3ReferenceDataSourceDescription_bucketARN :: Lens' S3ReferenceDataSourceDescription Text

-- | Amazon S3 object key name.
s3ReferenceDataSourceDescription_fileKey :: Lens' S3ReferenceDataSourceDescription Text

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to read
--   the Amazon S3 object on your behalf to populate the in-application
--   reference table.
s3ReferenceDataSourceDescription_referenceRoleARN :: Lens' S3ReferenceDataSourceDescription Text

-- | Amazon Resource Name (ARN) of the S3 bucket.
s3ReferenceDataSourceUpdate_bucketARNUpdate :: Lens' S3ReferenceDataSourceUpdate (Maybe Text)

-- | Object key name.
s3ReferenceDataSourceUpdate_fileKeyUpdate :: Lens' S3ReferenceDataSourceUpdate (Maybe Text)

-- | ARN of the IAM role that Amazon Kinesis Analytics can assume to read
--   the Amazon S3 object and populate the in-application.
s3ReferenceDataSourceUpdate_referenceRoleARNUpdate :: Lens' S3ReferenceDataSourceUpdate (Maybe Text)

-- | Specifies the encoding of the records in the streaming source. For
--   example, UTF-8.
sourceSchema_recordEncoding :: Lens' SourceSchema (Maybe Text)

-- | Specifies the format of the records on the streaming source.
sourceSchema_recordFormat :: Lens' SourceSchema RecordFormat

-- | A list of <tt>RecordColumn</tt> objects.
sourceSchema_recordColumns :: Lens' SourceSchema (NonEmpty RecordColumn)

-- | The value of the key-value tag. The value is optional.
tag_value :: Lens' Tag (Maybe Text)

-- | The key of the key-value tag.
tag_key :: Lens' Tag Text


module Network.AWS.KinesisAnalytics.Waiters


-- | Derived from API version <tt>2015-08-14</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Kinesis Analytics is the easiest way to process streaming data
--   in real time with standard SQL without having to learn new programming
--   languages or processing frameworks. Amazon Kinesis Analytics enables
--   you to create and run SQL queries on streaming data so that you can
--   gain actionable insights and respond to your business and customer
--   needs promptly. Amazon Kinesis Analytics takes care of everything
--   required to run your queries continuously and scales automatically to
--   match the volume and throughput rate of your incoming data. With
--   Amazon Kinesis Analytics, you only pay for the resources your queries
--   consume. There is no minimum fee or setup cost.
module Network.AWS.KinesisAnalytics

-- | API version <tt>2015-08-14</tt> of the Amazon Kinesis Analytics SDK
--   configuration.
defaultService :: Service

-- | User-provided application configuration is not valid.
_InvalidApplicationConfigurationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Discovery failed to get a record from the streaming source because of
--   the Amazon Kinesis Streams ProvisionedThroughputExceededException. For
--   more information, see <a>GetRecords</a> in the Amazon Kinesis Streams
--   API Reference.
_ResourceProvisionedThroughputExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The request was rejected because a specified parameter is not
--   supported or a specified resource is not valid for this operation.
_UnsupportedOperationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Specified input parameter value is invalid.
_InvalidArgumentException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Application created with too many tags, or too many tags added to an
--   application. Note that the maximum number of application tags includes
--   system tags. The maximum number of user-defined application tags is
--   50.
_TooManyTagsException :: AsError a => Getting (First ServiceError) a ServiceError

-- | User-provided application code (query) is invalid. This can be a
--   simple syntax error.
_CodeValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exception thrown as a result of concurrent modification to an
--   application. For example, two individuals attempting to edit the same
--   application at the same time.
_ConcurrentModificationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is unavailable. Back off and retry the operation.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Data format is not valid. Amazon Kinesis Analytics is not able to
--   detect schema for the given streaming source.
_UnableToDetectSchemaException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Specified application can't be found.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Exceeded the number of applications allowed.
_LimitExceededException :: AsError a => Getting (First ServiceError) a ServiceError

-- | Application is not available for this operation.
_ResourceInUseException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newAddApplicationOutput</a> smart constructor.
data AddApplicationOutput
AddApplicationOutput' :: Text -> Natural -> Output -> AddApplicationOutput

-- | Create a value of <a>AddApplicationOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:AddApplicationOutput'</a>,
--   <a>addApplicationOutput_applicationName</a> - Name of the application
--   to which you want to add the output configuration.
--   
--   <a>$sel:currentApplicationVersionId:AddApplicationOutput'</a>,
--   <a>addApplicationOutput_currentApplicationVersionId</a> - Version of
--   the application to which you want to add the output configuration. You
--   can use the <a>DescribeApplication</a> operation to get the current
--   application version. If the version specified is not the current
--   version, the <tt>ConcurrentModificationException</tt> is returned.
--   
--   <a>$sel:output:AddApplicationOutput'</a>,
--   <a>addApplicationOutput_output</a> - An array of objects, each
--   describing one output configuration. In the output configuration, you
--   specify the name of an in-application stream, a destination (that is,
--   an Amazon Kinesis stream, an Amazon Kinesis Firehose delivery stream,
--   or an AWS Lambda function), and record the formation to use when
--   writing to the destination.
newAddApplicationOutput :: Text -> Natural -> Output -> AddApplicationOutput

-- | <i>See:</i> <a>newAddApplicationOutputResponse</a> smart constructor.
data AddApplicationOutputResponse
AddApplicationOutputResponse' :: Int -> AddApplicationOutputResponse

-- | Create a value of <a>AddApplicationOutputResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddApplicationOutputResponse'</a>,
--   <a>addApplicationOutputResponse_httpStatus</a> - The response's http
--   status code.
newAddApplicationOutputResponse :: Int -> AddApplicationOutputResponse

-- | <i>See:</i> <a>newDiscoverInputSchema</a> smart constructor.
data DiscoverInputSchema
DiscoverInputSchema' :: Maybe InputStartingPositionConfiguration -> Maybe InputProcessingConfiguration -> Maybe S3Configuration -> Maybe Text -> Maybe Text -> DiscoverInputSchema

-- | Create a value of <a>DiscoverInputSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputStartingPositionConfiguration:DiscoverInputSchema'</a>,
--   <a>discoverInputSchema_inputStartingPositionConfiguration</a> - Point
--   at which you want Amazon Kinesis Analytics to start reading records
--   from the specified streaming source discovery purposes.
--   
--   <a>$sel:inputProcessingConfiguration:DiscoverInputSchema'</a>,
--   <a>discoverInputSchema_inputProcessingConfiguration</a> - The
--   <a>InputProcessingConfiguration</a> to use to preprocess the records
--   before discovering the schema of the records.
--   
--   <a>$sel:s3Configuration:DiscoverInputSchema'</a>,
--   <a>discoverInputSchema_s3Configuration</a> - Specify this parameter to
--   discover a schema from data in an Amazon S3 object.
--   
--   <a>$sel:resourceARN:DiscoverInputSchema'</a>,
--   <a>discoverInputSchema_resourceARN</a> - Amazon Resource Name (ARN) of
--   the streaming source.
--   
--   <a>$sel:roleARN:DiscoverInputSchema'</a>,
--   <a>discoverInputSchema_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to access the stream on your behalf.
newDiscoverInputSchema :: DiscoverInputSchema

-- | <i>See:</i> <a>newDiscoverInputSchemaResponse</a> smart constructor.
data DiscoverInputSchemaResponse
DiscoverInputSchemaResponse' :: Maybe [Text] -> Maybe SourceSchema -> Maybe [Text] -> Maybe [[Text]] -> Int -> DiscoverInputSchemaResponse

-- | Create a value of <a>DiscoverInputSchemaResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:rawInputRecords:DiscoverInputSchemaResponse'</a>,
--   <a>discoverInputSchemaResponse_rawInputRecords</a> - Raw stream data
--   that was sampled to infer the schema.
--   
--   <a>$sel:inputSchema:DiscoverInputSchemaResponse'</a>,
--   <a>discoverInputSchemaResponse_inputSchema</a> - Schema inferred from
--   the streaming source. It identifies the format of the data in the
--   streaming source and how each data element maps to corresponding
--   columns in the in-application stream that you can create.
--   
--   <a>$sel:processedInputRecords:DiscoverInputSchemaResponse'</a>,
--   <a>discoverInputSchemaResponse_processedInputRecords</a> - Stream data
--   that was modified by the processor specified in the
--   <tt>InputProcessingConfiguration</tt> parameter.
--   
--   <a>$sel:parsedInputRecords:DiscoverInputSchemaResponse'</a>,
--   <a>discoverInputSchemaResponse_parsedInputRecords</a> - An array of
--   elements, where each element corresponds to a row in a stream record
--   (a stream record can have more than one row).
--   
--   <a>$sel:httpStatus:DiscoverInputSchemaResponse'</a>,
--   <a>discoverInputSchemaResponse_httpStatus</a> - The response's http
--   status code.
newDiscoverInputSchemaResponse :: Int -> DiscoverInputSchemaResponse

-- | <i>See:</i> <a>newDescribeApplication</a> smart constructor.
data DescribeApplication
DescribeApplication' :: Text -> DescribeApplication

-- | Create a value of <a>DescribeApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DescribeApplication'</a>,
--   <a>describeApplication_applicationName</a> - Name of the application.
newDescribeApplication :: Text -> DescribeApplication

-- | <i>See:</i> <a>newDescribeApplicationResponse</a> smart constructor.
data DescribeApplicationResponse
DescribeApplicationResponse' :: Int -> ApplicationDetail -> DescribeApplicationResponse

-- | Create a value of <a>DescribeApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DescribeApplicationResponse'</a>,
--   <a>describeApplicationResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:applicationDetail:DescribeApplicationResponse'</a>,
--   <a>describeApplicationResponse_applicationDetail</a> - Provides a
--   description of the application, such as the application Amazon
--   Resource Name (ARN), status, latest version, and input and output
--   configuration details.
newDescribeApplicationResponse :: Int -> ApplicationDetail -> DescribeApplicationResponse

-- | <i>See:</i> <a>newStartApplication</a> smart constructor.
data StartApplication
StartApplication' :: Text -> [InputConfiguration] -> StartApplication

-- | Create a value of <a>StartApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:StartApplication'</a>,
--   <a>startApplication_applicationName</a> - Name of the application.
--   
--   <a>$sel:inputConfigurations:StartApplication'</a>,
--   <a>startApplication_inputConfigurations</a> - Identifies the specific
--   input, by ID, that the application starts consuming. Amazon Kinesis
--   Analytics starts reading the streaming source associated with the
--   input. You can also specify where in the streaming source you want
--   Amazon Kinesis Analytics to start reading.
newStartApplication :: Text -> StartApplication

-- | <i>See:</i> <a>newStartApplicationResponse</a> smart constructor.
data StartApplicationResponse
StartApplicationResponse' :: Int -> StartApplicationResponse

-- | Create a value of <a>StartApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StartApplicationResponse'</a>,
--   <a>startApplicationResponse_httpStatus</a> - The response's http
--   status code.
newStartApplicationResponse :: Int -> StartApplicationResponse

-- | <i>See:</i> <a>newListTagsForResource</a> smart constructor.
data ListTagsForResource
ListTagsForResource' :: Text -> ListTagsForResource

-- | Create a value of <a>ListTagsForResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:ListTagsForResource'</a>,
--   <a>listTagsForResource_resourceARN</a> - The ARN of the application
--   for which to retrieve tags.
newListTagsForResource :: Text -> ListTagsForResource

-- | <i>See:</i> <a>newListTagsForResourceResponse</a> smart constructor.
data ListTagsForResourceResponse
ListTagsForResourceResponse' :: Maybe (NonEmpty Tag) -> Int -> ListTagsForResourceResponse

-- | Create a value of <a>ListTagsForResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tags:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_tags</a> - The key-value tags assigned
--   to the application.
--   
--   <a>$sel:httpStatus:ListTagsForResourceResponse'</a>,
--   <a>listTagsForResourceResponse_httpStatus</a> - The response's http
--   status code.
newListTagsForResourceResponse :: Int -> ListTagsForResourceResponse

-- | <i>See:</i> <a>newDeleteApplicationReferenceDataSource</a> smart
--   constructor.
data DeleteApplicationReferenceDataSource
DeleteApplicationReferenceDataSource' :: Text -> Natural -> Text -> DeleteApplicationReferenceDataSource

-- | Create a value of <a>DeleteApplicationReferenceDataSource</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteApplicationReferenceDataSource'</a>,
--   <a>deleteApplicationReferenceDataSource_applicationName</a> - Name of
--   an existing application.
--   
--   
--   <a>$sel:currentApplicationVersionId:DeleteApplicationReferenceDataSource'</a>,
--   <a>deleteApplicationReferenceDataSource_currentApplicationVersionId</a>
--   - Version of the application. You can use the
--   <a>DescribeApplication</a> operation to get the current application
--   version. If the version specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
--   
--   <a>$sel:referenceId:DeleteApplicationReferenceDataSource'</a>,
--   <a>deleteApplicationReferenceDataSource_referenceId</a> - ID of the
--   reference data source. When you add a reference data source to your
--   application using the <a>AddApplicationReferenceDataSource</a>, Amazon
--   Kinesis Analytics assigns an ID. You can use the
--   <a>DescribeApplication</a> operation to get the reference ID.
newDeleteApplicationReferenceDataSource :: Text -> Natural -> Text -> DeleteApplicationReferenceDataSource

-- | <i>See:</i> <a>newDeleteApplicationReferenceDataSourceResponse</a>
--   smart constructor.
data DeleteApplicationReferenceDataSourceResponse
DeleteApplicationReferenceDataSourceResponse' :: Int -> DeleteApplicationReferenceDataSourceResponse

-- | Create a value of <a>DeleteApplicationReferenceDataSourceResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApplicationReferenceDataSourceResponse'</a>,
--   <a>deleteApplicationReferenceDataSourceResponse_httpStatus</a> - The
--   response's http status code.
newDeleteApplicationReferenceDataSourceResponse :: Int -> DeleteApplicationReferenceDataSourceResponse

-- | <i>See:</i> <a>newDeleteApplication</a> smart constructor.
data DeleteApplication
DeleteApplication' :: Text -> POSIX -> DeleteApplication

-- | Create a value of <a>DeleteApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteApplication'</a>,
--   <a>deleteApplication_applicationName</a> - Name of the Amazon Kinesis
--   Analytics application to delete.
--   
--   <a>$sel:createTimestamp:DeleteApplication'</a>,
--   <a>deleteApplication_createTimestamp</a> - You can use the
--   <tt>DescribeApplication</tt> operation to get this value.
newDeleteApplication :: Text -> UTCTime -> DeleteApplication

-- | <i>See:</i> <a>newDeleteApplicationResponse</a> smart constructor.
data DeleteApplicationResponse
DeleteApplicationResponse' :: Int -> DeleteApplicationResponse

-- | Create a value of <a>DeleteApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApplicationResponse'</a>,
--   <a>deleteApplicationResponse_httpStatus</a> - The response's http
--   status code.
newDeleteApplicationResponse :: Int -> DeleteApplicationResponse

-- | <i>See:</i> <a>newUpdateApplication</a> smart constructor.
data UpdateApplication
UpdateApplication' :: Text -> Natural -> ApplicationUpdate -> UpdateApplication

-- | Create a value of <a>UpdateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:UpdateApplication'</a>,
--   <a>updateApplication_applicationName</a> - Name of the Amazon Kinesis
--   Analytics application to update.
--   
--   <a>$sel:currentApplicationVersionId:UpdateApplication'</a>,
--   <a>updateApplication_currentApplicationVersionId</a> - The current
--   application version ID. You can use the <a>DescribeApplication</a>
--   operation to get this value.
--   
--   <a>$sel:applicationUpdate:UpdateApplication'</a>,
--   <a>updateApplication_applicationUpdate</a> - Describes application
--   updates.
newUpdateApplication :: Text -> Natural -> ApplicationUpdate -> UpdateApplication

-- | <i>See:</i> <a>newUpdateApplicationResponse</a> smart constructor.
data UpdateApplicationResponse
UpdateApplicationResponse' :: Int -> UpdateApplicationResponse

-- | Create a value of <a>UpdateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateApplicationResponse'</a>,
--   <a>updateApplicationResponse_httpStatus</a> - The response's http
--   status code.
newUpdateApplicationResponse :: Int -> UpdateApplicationResponse

-- | <i>See:</i> <a>newDeleteApplicationCloudWatchLoggingOption</a> smart
--   constructor.
data DeleteApplicationCloudWatchLoggingOption
DeleteApplicationCloudWatchLoggingOption' :: Text -> Natural -> Text -> DeleteApplicationCloudWatchLoggingOption

-- | Create a value of <a>DeleteApplicationCloudWatchLoggingOption</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteApplicationCloudWatchLoggingOption'</a>,
--   <a>deleteApplicationCloudWatchLoggingOption_applicationName</a> - The
--   Kinesis Analytics application name.
--   
--   
--   <a>$sel:currentApplicationVersionId:DeleteApplicationCloudWatchLoggingOption'</a>,
--   <a>deleteApplicationCloudWatchLoggingOption_currentApplicationVersionId</a>
--   - The version ID of the Kinesis Analytics application.
--   
--   
--   <a>$sel:cloudWatchLoggingOptionId:DeleteApplicationCloudWatchLoggingOption'</a>,
--   <a>deleteApplicationCloudWatchLoggingOption_cloudWatchLoggingOptionId</a>
--   - The <tt>CloudWatchLoggingOptionId</tt> of the CloudWatch logging
--   option to delete. You can get the <tt>CloudWatchLoggingOptionId</tt>
--   by using the <a>DescribeApplication</a> operation.
newDeleteApplicationCloudWatchLoggingOption :: Text -> Natural -> Text -> DeleteApplicationCloudWatchLoggingOption

-- | <i>See:</i> <a>newDeleteApplicationCloudWatchLoggingOptionResponse</a>
--   smart constructor.
data DeleteApplicationCloudWatchLoggingOptionResponse
DeleteApplicationCloudWatchLoggingOptionResponse' :: Int -> DeleteApplicationCloudWatchLoggingOptionResponse

-- | Create a value of
--   <a>DeleteApplicationCloudWatchLoggingOptionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:DeleteApplicationCloudWatchLoggingOptionResponse'</a>,
--   <a>deleteApplicationCloudWatchLoggingOptionResponse_httpStatus</a> -
--   The response's http status code.
newDeleteApplicationCloudWatchLoggingOptionResponse :: Int -> DeleteApplicationCloudWatchLoggingOptionResponse

-- | <i>See:</i> <a>newAddApplicationInputProcessingConfiguration</a> smart
--   constructor.
data AddApplicationInputProcessingConfiguration
AddApplicationInputProcessingConfiguration' :: Text -> Natural -> Text -> InputProcessingConfiguration -> AddApplicationInputProcessingConfiguration

-- | Create a value of <a>AddApplicationInputProcessingConfiguration</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:applicationName:AddApplicationInputProcessingConfiguration'</a>,
--   <a>addApplicationInputProcessingConfiguration_applicationName</a> -
--   Name of the application to which you want to add the input processing
--   configuration.
--   
--   
--   <a>$sel:currentApplicationVersionId:AddApplicationInputProcessingConfiguration'</a>,
--   <a>addApplicationInputProcessingConfiguration_currentApplicationVersionId</a>
--   - Version of the application to which you want to add the input
--   processing configuration. You can use the <a>DescribeApplication</a>
--   operation to get the current application version. If the version
--   specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
--   
--   <a>$sel:inputId:AddApplicationInputProcessingConfiguration'</a>,
--   <a>addApplicationInputProcessingConfiguration_inputId</a> - The ID of
--   the input configuration to add the input processing configuration to.
--   You can get a list of the input IDs for an application using the
--   <a>DescribeApplication</a> operation.
--   
--   
--   <a>$sel:inputProcessingConfiguration:AddApplicationInputProcessingConfiguration'</a>,
--   <a>addApplicationInputProcessingConfiguration_inputProcessingConfiguration</a>
--   - The <a>InputProcessingConfiguration</a> to add to the application.
newAddApplicationInputProcessingConfiguration :: Text -> Natural -> Text -> InputProcessingConfiguration -> AddApplicationInputProcessingConfiguration

-- | <i>See:</i>
--   <a>newAddApplicationInputProcessingConfigurationResponse</a> smart
--   constructor.
data AddApplicationInputProcessingConfigurationResponse
AddApplicationInputProcessingConfigurationResponse' :: Int -> AddApplicationInputProcessingConfigurationResponse

-- | Create a value of
--   <a>AddApplicationInputProcessingConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:AddApplicationInputProcessingConfigurationResponse'</a>,
--   <a>addApplicationInputProcessingConfigurationResponse_httpStatus</a> -
--   The response's http status code.
newAddApplicationInputProcessingConfigurationResponse :: Int -> AddApplicationInputProcessingConfigurationResponse

-- | TBD
--   
--   <i>See:</i> <a>newCreateApplication</a> smart constructor.
data CreateApplication
CreateApplication' :: Maybe Text -> Maybe [Input] -> Maybe [CloudWatchLoggingOption] -> Maybe [Output] -> Maybe Text -> Maybe (NonEmpty Tag) -> Text -> CreateApplication

-- | Create a value of <a>CreateApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationDescription:CreateApplication'</a>,
--   <a>createApplication_applicationDescription</a> - Summary description
--   of the application.
--   
--   <a>$sel:inputs:CreateApplication'</a>, <a>createApplication_inputs</a>
--   - Use this parameter to configure the application input.
--   
--   You can configure your application to receive input from a single
--   streaming source. In this configuration, you map this streaming source
--   to an in-application stream that is created. Your application code can
--   then query the in-application stream like a table (you can think of it
--   as a constantly updating table).
--   
--   For the streaming source, you provide its Amazon Resource Name (ARN)
--   and format of data on the stream (for example, JSON, CSV, etc.). You
--   also must provide an IAM role that Amazon Kinesis Analytics can assume
--   to read this stream on your behalf.
--   
--   To create the in-application stream, you need to specify a schema to
--   transform your data into a schematized version used in SQL. In the
--   schema, you provide the necessary mapping of the data elements in the
--   streaming source to record columns in the in-app stream.
--   
--   <a>$sel:cloudWatchLoggingOptions:CreateApplication'</a>,
--   <a>createApplication_cloudWatchLoggingOptions</a> - Use this parameter
--   to configure a CloudWatch log stream to monitor application
--   configuration errors. For more information, see <a>Working with Amazon
--   CloudWatch Logs</a>.
--   
--   <a>$sel:outputs:CreateApplication'</a>,
--   <a>createApplication_outputs</a> - You can configure application
--   output to write data from any of the in-application streams to up to
--   three destinations.
--   
--   These destinations can be Amazon Kinesis streams, Amazon Kinesis
--   Firehose delivery streams, AWS Lambda destinations, or any combination
--   of the three.
--   
--   In the configuration, you specify the in-application stream name, the
--   destination stream or Lambda function Amazon Resource Name (ARN), and
--   the format to use when writing data. You must also provide an IAM role
--   that Amazon Kinesis Analytics can assume to write to the destination
--   stream or Lambda function on your behalf.
--   
--   In the output configuration, you also provide the output stream or
--   Lambda function ARN. For stream destinations, you provide the format
--   of data in the stream (for example, JSON, CSV). You also must provide
--   an IAM role that Amazon Kinesis Analytics can assume to write to the
--   stream or Lambda function on your behalf.
--   
--   <a>$sel:applicationCode:CreateApplication'</a>,
--   <a>createApplication_applicationCode</a> - One or more SQL statements
--   that read input data, transform it, and generate output. For example,
--   you can write a SQL statement that reads data from one in-application
--   stream, generates a running average of the number of advertisement
--   clicks by vendor, and insert resulting rows in another in-application
--   stream using pumps. For more information about the typical pattern,
--   see <a>Application Code</a>.
--   
--   You can provide such series of SQL statements, where output of one
--   statement can be used as the input for the next statement. You store
--   intermediate results by creating in-application streams and pumps.
--   
--   Note that the application code must create the streams with names
--   specified in the <tt>Outputs</tt>. For example, if your
--   <tt>Outputs</tt> defines output streams named
--   <tt>ExampleOutputStream1</tt> and <tt>ExampleOutputStream2</tt>, then
--   your application code must create these streams.
--   
--   <a>$sel:tags:CreateApplication'</a>, <a>createApplication_tags</a> - A
--   list of one or more tags to assign to the application. A tag is a
--   key-value pair that identifies an application. Note that the maximum
--   number of application tags includes system tags. The maximum number of
--   user-defined application tags is 50. For more information, see
--   <a>Using Tagging</a>.
--   
--   <a>$sel:applicationName:CreateApplication'</a>,
--   <a>createApplication_applicationName</a> - Name of your Amazon Kinesis
--   Analytics application (for example, <tt>sample-app</tt>).
newCreateApplication :: Text -> CreateApplication

-- | TBD
--   
--   <i>See:</i> <a>newCreateApplicationResponse</a> smart constructor.
data CreateApplicationResponse
CreateApplicationResponse' :: Int -> ApplicationSummary -> CreateApplicationResponse

-- | Create a value of <a>CreateApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:applicationSummary:CreateApplicationResponse'</a>,
--   <a>createApplicationResponse_applicationSummary</a> - In response to
--   your <tt>CreateApplication</tt> request, Amazon Kinesis Analytics
--   returns a response with a summary of the application it created,
--   including the application Amazon Resource Name (ARN), name, and
--   status.
newCreateApplicationResponse :: Int -> ApplicationSummary -> CreateApplicationResponse

-- | <i>See:</i> <a>newDeleteApplicationOutput</a> smart constructor.
data DeleteApplicationOutput
DeleteApplicationOutput' :: Text -> Natural -> Text -> DeleteApplicationOutput

-- | Create a value of <a>DeleteApplicationOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:DeleteApplicationOutput'</a>,
--   <a>deleteApplicationOutput_applicationName</a> - Amazon Kinesis
--   Analytics application name.
--   
--   <a>$sel:currentApplicationVersionId:DeleteApplicationOutput'</a>,
--   <a>deleteApplicationOutput_currentApplicationVersionId</a> - Amazon
--   Kinesis Analytics application version. You can use the
--   <a>DescribeApplication</a> operation to get the current application
--   version. If the version specified is not the current version, the
--   <tt>ConcurrentModificationException</tt> is returned.
--   
--   <a>$sel:outputId:DeleteApplicationOutput'</a>,
--   <a>deleteApplicationOutput_outputId</a> - The ID of the configuration
--   to delete. Each output configuration that is added to the application,
--   either when the application is created or later using the
--   <a>AddApplicationOutput</a> operation, has a unique ID. You need to
--   provide the ID to uniquely identify the output configuration that you
--   want to delete from the application configuration. You can use the
--   <a>DescribeApplication</a> operation to get the specific
--   <tt>OutputId</tt>.
newDeleteApplicationOutput :: Text -> Natural -> Text -> DeleteApplicationOutput

-- | <i>See:</i> <a>newDeleteApplicationOutputResponse</a> smart
--   constructor.
data DeleteApplicationOutputResponse
DeleteApplicationOutputResponse' :: Int -> DeleteApplicationOutputResponse

-- | Create a value of <a>DeleteApplicationOutputResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteApplicationOutputResponse'</a>,
--   <a>deleteApplicationOutputResponse_httpStatus</a> - The response's
--   http status code.
newDeleteApplicationOutputResponse :: Int -> DeleteApplicationOutputResponse

-- | <i>See:</i> <a>newStopApplication</a> smart constructor.
data StopApplication
StopApplication' :: Text -> StopApplication

-- | Create a value of <a>StopApplication</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:StopApplication'</a>,
--   <a>stopApplication_applicationName</a> - Name of the running
--   application to stop.
newStopApplication :: Text -> StopApplication

-- | <i>See:</i> <a>newStopApplicationResponse</a> smart constructor.
data StopApplicationResponse
StopApplicationResponse' :: Int -> StopApplicationResponse

-- | Create a value of <a>StopApplicationResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:StopApplicationResponse'</a>,
--   <a>stopApplicationResponse_httpStatus</a> - The response's http status
--   code.
newStopApplicationResponse :: Int -> StopApplicationResponse

-- | <i>See:</i> <a>newAddApplicationReferenceDataSource</a> smart
--   constructor.
data AddApplicationReferenceDataSource
AddApplicationReferenceDataSource' :: Text -> Natural -> ReferenceDataSource -> AddApplicationReferenceDataSource

-- | Create a value of <a>AddApplicationReferenceDataSource</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:AddApplicationReferenceDataSource'</a>,
--   <a>addApplicationReferenceDataSource_applicationName</a> - Name of an
--   existing application.
--   
--   
--   <a>$sel:currentApplicationVersionId:AddApplicationReferenceDataSource'</a>,
--   <a>addApplicationReferenceDataSource_currentApplicationVersionId</a> -
--   Version of the application for which you are adding the reference data
--   source. You can use the <a>DescribeApplication</a> operation to get
--   the current application version. If the version specified is not the
--   current version, the <tt>ConcurrentModificationException</tt> is
--   returned.
--   
--   <a>$sel:referenceDataSource:AddApplicationReferenceDataSource'</a>,
--   <a>addApplicationReferenceDataSource_referenceDataSource</a> - The
--   reference data source can be an object in your Amazon S3 bucket.
--   Amazon Kinesis Analytics reads the object and copies the data into the
--   in-application table that is created. You provide an S3 bucket, object
--   key name, and the resulting in-application table that is created. You
--   must also provide an IAM role with the necessary permissions that
--   Amazon Kinesis Analytics can assume to read the object from your S3
--   bucket on your behalf.
newAddApplicationReferenceDataSource :: Text -> Natural -> ReferenceDataSource -> AddApplicationReferenceDataSource

-- | <i>See:</i> <a>newAddApplicationReferenceDataSourceResponse</a> smart
--   constructor.
data AddApplicationReferenceDataSourceResponse
AddApplicationReferenceDataSourceResponse' :: Int -> AddApplicationReferenceDataSourceResponse

-- | Create a value of <a>AddApplicationReferenceDataSourceResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddApplicationReferenceDataSourceResponse'</a>,
--   <a>addApplicationReferenceDataSourceResponse_httpStatus</a> - The
--   response's http status code.
newAddApplicationReferenceDataSourceResponse :: Int -> AddApplicationReferenceDataSourceResponse

-- | <i>See:</i> <a>newAddApplicationInput</a> smart constructor.
data AddApplicationInput
AddApplicationInput' :: Text -> Natural -> Input -> AddApplicationInput

-- | Create a value of <a>AddApplicationInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:AddApplicationInput'</a>,
--   <a>addApplicationInput_applicationName</a> - Name of your existing
--   Amazon Kinesis Analytics application to which you want to add the
--   streaming source.
--   
--   <a>$sel:currentApplicationVersionId:AddApplicationInput'</a>,
--   <a>addApplicationInput_currentApplicationVersionId</a> - Current
--   version of your Amazon Kinesis Analytics application. You can use the
--   <a>DescribeApplication</a> operation to find the current application
--   version.
--   
--   <a>$sel:input:AddApplicationInput'</a>,
--   <a>addApplicationInput_input</a> - The <a>Input</a> to add.
newAddApplicationInput :: Text -> Natural -> Input -> AddApplicationInput

-- | <i>See:</i> <a>newAddApplicationInputResponse</a> smart constructor.
data AddApplicationInputResponse
AddApplicationInputResponse' :: Int -> AddApplicationInputResponse

-- | Create a value of <a>AddApplicationInputResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddApplicationInputResponse'</a>,
--   <a>addApplicationInputResponse_httpStatus</a> - The response's http
--   status code.
newAddApplicationInputResponse :: Int -> AddApplicationInputResponse

-- | <i>See:</i> <a>newTagResource</a> smart constructor.
data TagResource
TagResource' :: Text -> NonEmpty Tag -> TagResource

-- | Create a value of <a>TagResource</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:TagResource'</a>, <a>tagResource_resourceARN</a> -
--   The ARN of the application to assign the tags.
--   
--   <a>$sel:tags:TagResource'</a>, <a>tagResource_tags</a> - The key-value
--   tags to assign to the application.
newTagResource :: Text -> NonEmpty Tag -> TagResource

-- | <i>See:</i> <a>newTagResourceResponse</a> smart constructor.
data TagResourceResponse
TagResourceResponse' :: Int -> TagResourceResponse

-- | Create a value of <a>TagResourceResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:TagResourceResponse'</a>,
--   <a>tagResourceResponse_httpStatus</a> - The response's http status
--   code.
newTagResourceResponse :: Int -> TagResourceResponse

-- | <i>See:</i> <a>newAddApplicationCloudWatchLoggingOption</a> smart
--   constructor.
data AddApplicationCloudWatchLoggingOption
AddApplicationCloudWatchLoggingOption' :: Text -> Natural -> CloudWatchLoggingOption -> AddApplicationCloudWatchLoggingOption

-- | Create a value of <a>AddApplicationCloudWatchLoggingOption</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:AddApplicationCloudWatchLoggingOption'</a>,
--   <a>addApplicationCloudWatchLoggingOption_applicationName</a> - The
--   Kinesis Analytics application name.
--   
--   
--   <a>$sel:currentApplicationVersionId:AddApplicationCloudWatchLoggingOption'</a>,
--   <a>addApplicationCloudWatchLoggingOption_currentApplicationVersionId</a>
--   - The version ID of the Kinesis Analytics application.
--   
--   
--   <a>$sel:cloudWatchLoggingOption:AddApplicationCloudWatchLoggingOption'</a>,
--   <a>addApplicationCloudWatchLoggingOption_cloudWatchLoggingOption</a> -
--   Provides the CloudWatch log stream Amazon Resource Name (ARN) and the
--   IAM role ARN. Note: To write application messages to CloudWatch, the
--   IAM role that is used must have the <tt>PutLogEvents</tt> policy
--   action enabled.
newAddApplicationCloudWatchLoggingOption :: Text -> Natural -> CloudWatchLoggingOption -> AddApplicationCloudWatchLoggingOption

-- | <i>See:</i> <a>newAddApplicationCloudWatchLoggingOptionResponse</a>
--   smart constructor.
data AddApplicationCloudWatchLoggingOptionResponse
AddApplicationCloudWatchLoggingOptionResponse' :: Int -> AddApplicationCloudWatchLoggingOptionResponse

-- | Create a value of <a>AddApplicationCloudWatchLoggingOptionResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AddApplicationCloudWatchLoggingOptionResponse'</a>,
--   <a>addApplicationCloudWatchLoggingOptionResponse_httpStatus</a> - The
--   response's http status code.
newAddApplicationCloudWatchLoggingOptionResponse :: Int -> AddApplicationCloudWatchLoggingOptionResponse

-- | <i>See:</i> <a>newListApplications</a> smart constructor.
data ListApplications
ListApplications' :: Maybe Natural -> Maybe Text -> ListApplications

-- | Create a value of <a>ListApplications</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:limit:ListApplications'</a>, <a>listApplications_limit</a> -
--   Maximum number of applications to list.
--   
--   <a>$sel:exclusiveStartApplicationName:ListApplications'</a>,
--   <a>listApplications_exclusiveStartApplicationName</a> - Name of the
--   application to start the list with. When using pagination to retrieve
--   the list, you don't need to specify this parameter in the first
--   request. However, in subsequent requests, you add the last application
--   name from the previous response to get the next page of applications.
newListApplications :: ListApplications

-- | <i>See:</i> <a>newListApplicationsResponse</a> smart constructor.
data ListApplicationsResponse
ListApplicationsResponse' :: Int -> [ApplicationSummary] -> Bool -> ListApplicationsResponse

-- | Create a value of <a>ListApplicationsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_httpStatus</a> - The response's http
--   status code.
--   
--   <a>$sel:applicationSummaries:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_applicationSummaries</a> - List of
--   <tt>ApplicationSummary</tt> objects.
--   
--   <a>$sel:hasMoreApplications:ListApplicationsResponse'</a>,
--   <a>listApplicationsResponse_hasMoreApplications</a> - Returns true if
--   there are more applications to retrieve.
newListApplicationsResponse :: Int -> Bool -> ListApplicationsResponse

-- | <i>See:</i> <a>newUntagResource</a> smart constructor.
data UntagResource
UntagResource' :: Text -> NonEmpty Text -> UntagResource

-- | Create a value of <a>UntagResource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:UntagResource'</a>,
--   <a>untagResource_resourceARN</a> - The ARN of the Kinesis Analytics
--   application from which to remove the tags.
--   
--   <a>$sel:tagKeys:UntagResource'</a>, <a>untagResource_tagKeys</a> - A
--   list of keys of tags to remove from the specified application.
newUntagResource :: Text -> NonEmpty Text -> UntagResource

-- | <i>See:</i> <a>newUntagResourceResponse</a> smart constructor.
data UntagResourceResponse
UntagResourceResponse' :: Int -> UntagResourceResponse

-- | Create a value of <a>UntagResourceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UntagResourceResponse'</a>,
--   <a>untagResourceResponse_httpStatus</a> - The response's http status
--   code.
newUntagResourceResponse :: Int -> UntagResourceResponse

-- | <i>See:</i> <a>newDeleteApplicationInputProcessingConfiguration</a>
--   smart constructor.
data DeleteApplicationInputProcessingConfiguration
DeleteApplicationInputProcessingConfiguration' :: Text -> Natural -> Text -> DeleteApplicationInputProcessingConfiguration

-- | Create a value of <a>DeleteApplicationInputProcessingConfiguration</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:applicationName:DeleteApplicationInputProcessingConfiguration'</a>,
--   <a>deleteApplicationInputProcessingConfiguration_applicationName</a> -
--   The Kinesis Analytics application name.
--   
--   
--   <a>$sel:currentApplicationVersionId:DeleteApplicationInputProcessingConfiguration'</a>,
--   <a>deleteApplicationInputProcessingConfiguration_currentApplicationVersionId</a>
--   - The version ID of the Kinesis Analytics application.
--   
--   <a>$sel:inputId:DeleteApplicationInputProcessingConfiguration'</a>,
--   <a>deleteApplicationInputProcessingConfiguration_inputId</a> - The ID
--   of the input configuration from which to delete the input processing
--   configuration. You can get a list of the input IDs for an application
--   by using the <a>DescribeApplication</a> operation.
newDeleteApplicationInputProcessingConfiguration :: Text -> Natural -> Text -> DeleteApplicationInputProcessingConfiguration

-- | <i>See:</i>
--   <a>newDeleteApplicationInputProcessingConfigurationResponse</a> smart
--   constructor.
data DeleteApplicationInputProcessingConfigurationResponse
DeleteApplicationInputProcessingConfigurationResponse' :: Int -> DeleteApplicationInputProcessingConfigurationResponse

-- | Create a value of
--   <a>DeleteApplicationInputProcessingConfigurationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:httpStatus:DeleteApplicationInputProcessingConfigurationResponse'</a>,
--   <a>deleteApplicationInputProcessingConfigurationResponse_httpStatus</a>
--   - The response's http status code.
newDeleteApplicationInputProcessingConfigurationResponse :: Int -> DeleteApplicationInputProcessingConfigurationResponse
newtype ApplicationStatus
ApplicationStatus' :: Text -> ApplicationStatus
[fromApplicationStatus] :: ApplicationStatus -> Text
pattern ApplicationStatus_DELETING :: ApplicationStatus
pattern ApplicationStatus_READY :: ApplicationStatus
pattern ApplicationStatus_RUNNING :: ApplicationStatus
pattern ApplicationStatus_STARTING :: ApplicationStatus
pattern ApplicationStatus_STOPPING :: ApplicationStatus
pattern ApplicationStatus_UPDATING :: ApplicationStatus
newtype InputStartingPosition
InputStartingPosition' :: Text -> InputStartingPosition
[fromInputStartingPosition] :: InputStartingPosition -> Text
pattern InputStartingPosition_LAST_STOPPED_POINT :: InputStartingPosition
pattern InputStartingPosition_NOW :: InputStartingPosition
pattern InputStartingPosition_TRIM_HORIZON :: InputStartingPosition
newtype RecordFormatType
RecordFormatType' :: Text -> RecordFormatType
[fromRecordFormatType] :: RecordFormatType -> Text
pattern RecordFormatType_CSV :: RecordFormatType
pattern RecordFormatType_JSON :: RecordFormatType

-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Provides a description of the application, including the application
--   Amazon Resource Name (ARN), status, latest version, and input and
--   output configuration.
--   
--   <i>See:</i> <a>newApplicationDetail</a> smart constructor.
data ApplicationDetail
ApplicationDetail' :: Maybe Text -> Maybe [OutputDescription] -> Maybe [CloudWatchLoggingOptionDescription] -> Maybe [ReferenceDataSourceDescription] -> Maybe [InputDescription] -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Text -> Text -> ApplicationStatus -> Natural -> ApplicationDetail

-- | Create a value of <a>ApplicationDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationDescription:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationDescription</a> - Description of the
--   application.
--   
--   <a>$sel:outputDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_outputDescriptions</a> - Describes the
--   application output configuration. For more information, see
--   <a>Configuring Application Output</a>.
--   
--   <a>$sel:cloudWatchLoggingOptionDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_cloudWatchLoggingOptionDescriptions</a> -
--   Describes the CloudWatch log streams that are configured to receive
--   application messages. For more information about using CloudWatch log
--   streams with Amazon Kinesis Analytics applications, see <a>Working
--   with Amazon CloudWatch Logs</a>.
--   
--   <a>$sel:referenceDataSourceDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_referenceDataSourceDescriptions</a> - Describes
--   reference data sources configured for the application. For more
--   information, see <a>Configuring Application Input</a>.
--   
--   <a>$sel:inputDescriptions:ApplicationDetail'</a>,
--   <a>applicationDetail_inputDescriptions</a> - Describes the application
--   input configuration. For more information, see <a>Configuring
--   Application Input</a>.
--   
--   <a>$sel:applicationCode:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationCode</a> - Returns the application
--   code that you provided to perform data analysis on any of the
--   in-application streams in your application.
--   
--   <a>$sel:createTimestamp:ApplicationDetail'</a>,
--   <a>applicationDetail_createTimestamp</a> - Time stamp when the
--   application version was created.
--   
--   <a>$sel:lastUpdateTimestamp:ApplicationDetail'</a>,
--   <a>applicationDetail_lastUpdateTimestamp</a> - Time stamp when the
--   application was last updated.
--   
--   <a>$sel:applicationName:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationName</a> - Name of the application.
--   
--   <a>$sel:applicationARN:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationARN</a> - ARN of the application.
--   
--   <a>$sel:applicationStatus:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationStatus</a> - Status of the
--   application.
--   
--   <a>$sel:applicationVersionId:ApplicationDetail'</a>,
--   <a>applicationDetail_applicationVersionId</a> - Provides the current
--   application version.
newApplicationDetail :: Text -> Text -> ApplicationStatus -> Natural -> ApplicationDetail

-- | This documentation is for version 1 of the Amazon Kinesis Data
--   Analytics API, which only supports SQL applications. Version 2 of the
--   API supports SQL and Java applications. For more information about
--   version 2, see <a>Amazon Kinesis Data Analytics API V2
--   Documentation</a>.
--   
--   Provides application summary information, including the application
--   Amazon Resource Name (ARN), name, and status.
--   
--   <i>See:</i> <a>newApplicationSummary</a> smart constructor.
data ApplicationSummary
ApplicationSummary' :: Text -> Text -> ApplicationStatus -> ApplicationSummary

-- | Create a value of <a>ApplicationSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:applicationName:ApplicationSummary'</a>,
--   <a>applicationSummary_applicationName</a> - Name of the application.
--   
--   <a>$sel:applicationARN:ApplicationSummary'</a>,
--   <a>applicationSummary_applicationARN</a> - ARN of the application.
--   
--   <a>$sel:applicationStatus:ApplicationSummary'</a>,
--   <a>applicationSummary_applicationStatus</a> - Status of the
--   application.
newApplicationSummary :: Text -> Text -> ApplicationStatus -> ApplicationSummary

-- | Describes updates to apply to an existing Amazon Kinesis Analytics
--   application.
--   
--   <i>See:</i> <a>newApplicationUpdate</a> smart constructor.
data ApplicationUpdate
ApplicationUpdate' :: Maybe [ReferenceDataSourceUpdate] -> Maybe [InputUpdate] -> Maybe [CloudWatchLoggingOptionUpdate] -> Maybe [OutputUpdate] -> Maybe Text -> ApplicationUpdate

-- | Create a value of <a>ApplicationUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceDataSourceUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_referenceDataSourceUpdates</a> - Describes
--   application reference data source updates.
--   
--   <a>$sel:inputUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_inputUpdates</a> - Describes application input
--   configuration updates.
--   
--   <a>$sel:cloudWatchLoggingOptionUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_cloudWatchLoggingOptionUpdates</a> - Describes
--   application CloudWatch logging option updates.
--   
--   <a>$sel:outputUpdates:ApplicationUpdate'</a>,
--   <a>applicationUpdate_outputUpdates</a> - Describes application output
--   configuration updates.
--   
--   <a>$sel:applicationCodeUpdate:ApplicationUpdate'</a>,
--   <a>applicationUpdate_applicationCodeUpdate</a> - Describes application
--   code updates.
newApplicationUpdate :: ApplicationUpdate

-- | Provides additional mapping information when the record format uses
--   delimiters, such as CSV. For example, the following sample records use
--   CSV format, where the records use the <i>'\n'</i> as the row delimiter
--   and a comma (",") as the column delimiter:
--   
--   <pre>
--   "name1", "address1"
--   </pre>
--   
--   <pre>
--   "name2", "address2"
--   </pre>
--   
--   <i>See:</i> <a>newCSVMappingParameters</a> smart constructor.
data CSVMappingParameters
CSVMappingParameters' :: Text -> Text -> CSVMappingParameters

-- | Create a value of <a>CSVMappingParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordRowDelimiter:CSVMappingParameters'</a>,
--   <a>cSVMappingParameters_recordRowDelimiter</a> - Row delimiter. For
--   example, in a CSV format, <i>'\n'</i> is the typical row delimiter.
--   
--   <a>$sel:recordColumnDelimiter:CSVMappingParameters'</a>,
--   <a>cSVMappingParameters_recordColumnDelimiter</a> - Column delimiter.
--   For example, in a CSV format, a comma (",") is the typical column
--   delimiter.
newCSVMappingParameters :: Text -> Text -> CSVMappingParameters

-- | Provides a description of CloudWatch logging options, including the
--   log stream Amazon Resource Name (ARN) and the role ARN.
--   
--   <i>See:</i> <a>newCloudWatchLoggingOption</a> smart constructor.
data CloudWatchLoggingOption
CloudWatchLoggingOption' :: Text -> Text -> CloudWatchLoggingOption

-- | Create a value of <a>CloudWatchLoggingOption</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:logStreamARN:CloudWatchLoggingOption'</a>,
--   <a>cloudWatchLoggingOption_logStreamARN</a> - ARN of the CloudWatch
--   log to receive application messages.
--   
--   <a>$sel:roleARN:CloudWatchLoggingOption'</a>,
--   <a>cloudWatchLoggingOption_roleARN</a> - IAM ARN of the role to use to
--   send application messages. Note: To write application messages to
--   CloudWatch, the IAM role that is used must have the
--   <tt>PutLogEvents</tt> policy action enabled.
newCloudWatchLoggingOption :: Text -> Text -> CloudWatchLoggingOption

-- | Description of the CloudWatch logging option.
--   
--   <i>See:</i> <a>newCloudWatchLoggingOptionDescription</a> smart
--   constructor.
data CloudWatchLoggingOptionDescription
CloudWatchLoggingOptionDescription' :: Maybe Text -> Text -> Text -> CloudWatchLoggingOptionDescription

-- | Create a value of <a>CloudWatchLoggingOptionDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:cloudWatchLoggingOptionId:CloudWatchLoggingOptionDescription'</a>,
--   <a>cloudWatchLoggingOptionDescription_cloudWatchLoggingOptionId</a> -
--   ID of the CloudWatch logging option description.
--   
--   <a>$sel:logStreamARN:CloudWatchLoggingOptionDescription'</a>,
--   <a>cloudWatchLoggingOptionDescription_logStreamARN</a> - ARN of the
--   CloudWatch log to receive application messages.
--   
--   <a>$sel:roleARN:CloudWatchLoggingOptionDescription'</a>,
--   <a>cloudWatchLoggingOptionDescription_roleARN</a> - IAM ARN of the
--   role to use to send application messages. Note: To write application
--   messages to CloudWatch, the IAM role used must have the
--   <tt>PutLogEvents</tt> policy action enabled.
newCloudWatchLoggingOptionDescription :: Text -> Text -> CloudWatchLoggingOptionDescription

-- | Describes CloudWatch logging option updates.
--   
--   <i>See:</i> <a>newCloudWatchLoggingOptionUpdate</a> smart constructor.
data CloudWatchLoggingOptionUpdate
CloudWatchLoggingOptionUpdate' :: Maybe Text -> Maybe Text -> Text -> CloudWatchLoggingOptionUpdate

-- | Create a value of <a>CloudWatchLoggingOptionUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:CloudWatchLoggingOptionUpdate'</a>,
--   <a>cloudWatchLoggingOptionUpdate_roleARNUpdate</a> - IAM ARN of the
--   role to use to send application messages. Note: To write application
--   messages to CloudWatch, the IAM role used must have the
--   <tt>PutLogEvents</tt> policy action enabled.
--   
--   <a>$sel:logStreamARNUpdate:CloudWatchLoggingOptionUpdate'</a>,
--   <a>cloudWatchLoggingOptionUpdate_logStreamARNUpdate</a> - ARN of the
--   CloudWatch log to receive application messages.
--   
--   <a>$sel:cloudWatchLoggingOptionId:CloudWatchLoggingOptionUpdate'</a>,
--   <a>cloudWatchLoggingOptionUpdate_cloudWatchLoggingOptionId</a> - ID of
--   the CloudWatch logging option to update
newCloudWatchLoggingOptionUpdate :: Text -> CloudWatchLoggingOptionUpdate

-- | Describes the data format when records are written to the destination.
--   For more information, see <a>Configuring Application Output</a>.
--   
--   <i>See:</i> <a>newDestinationSchema</a> smart constructor.
data DestinationSchema
DestinationSchema' :: RecordFormatType -> DestinationSchema

-- | Create a value of <a>DestinationSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordFormatType:DestinationSchema'</a>,
--   <a>destinationSchema_recordFormatType</a> - Specifies the format of
--   the records on the output stream.
newDestinationSchema :: RecordFormatType -> DestinationSchema

-- | When you configure the application input, you specify the streaming
--   source, the in-application stream name that is created, and the
--   mapping between the two. For more information, see <a>Configuring
--   Application Input</a>.
--   
--   <i>See:</i> <a>newInput</a> smart constructor.
data Input
Input' :: Maybe InputParallelism -> Maybe InputProcessingConfiguration -> Maybe KinesisStreamsInput -> Maybe KinesisFirehoseInput -> Text -> SourceSchema -> Input

-- | Create a value of <a>Input</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputParallelism:Input'</a>, <a>input_inputParallelism</a> -
--   Describes the number of in-application streams to create.
--   
--   Data from your source is routed to these in-application input streams.
--   
--   (see <a>Configuring Application Input</a>.
--   
--   <a>$sel:inputProcessingConfiguration:Input'</a>,
--   <a>input_inputProcessingConfiguration</a> - The
--   <a>InputProcessingConfiguration</a> for the input. An input processor
--   transforms records as they are received from the stream, before the
--   application's SQL code executes. Currently, the only input processing
--   configuration available is <a>InputLambdaProcessor</a>.
--   
--   <a>$sel:kinesisStreamsInput:Input'</a>,
--   <a>input_kinesisStreamsInput</a> - If the streaming source is an
--   Amazon Kinesis stream, identifies the stream's Amazon Resource Name
--   (ARN) and an IAM role that enables Amazon Kinesis Analytics to access
--   the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
--   
--   <a>$sel:kinesisFirehoseInput:Input'</a>,
--   <a>input_kinesisFirehoseInput</a> - If the streaming source is an
--   Amazon Kinesis Firehose delivery stream, identifies the delivery
--   stream's ARN and an IAM role that enables Amazon Kinesis Analytics to
--   access the stream on your behalf.
--   
--   Note: Either <tt>KinesisStreamsInput</tt> or
--   <tt>KinesisFirehoseInput</tt> is required.
--   
--   <a>$sel:namePrefix:Input'</a>, <a>input_namePrefix</a> - Name prefix
--   to use when creating an in-application stream. Suppose that you
--   specify a prefix "MyInApplicationStream." Amazon Kinesis Analytics
--   then creates one or more (as per the <tt>InputParallelism</tt> count
--   you specified) in-application streams with names
--   "MyInApplicationStream_001," "MyInApplicationStream_002," and so on.
--   
--   <a>$sel:inputSchema:Input'</a>, <a>input_inputSchema</a> - Describes
--   the format of the data in the streaming source, and how each data
--   element maps to corresponding columns in the in-application stream
--   that is being created.
--   
--   Also used to describe the format of the reference data source.
newInput :: Text -> SourceSchema -> Input

-- | When you start your application, you provide this configuration, which
--   identifies the input source and the point in the input source at which
--   you want the application to start processing records.
--   
--   <i>See:</i> <a>newInputConfiguration</a> smart constructor.
data InputConfiguration
InputConfiguration' :: Text -> InputStartingPositionConfiguration -> InputConfiguration

-- | Create a value of <a>InputConfiguration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:id:InputConfiguration'</a>, <a>inputConfiguration_id</a> -
--   Input source ID. You can get this ID by calling the
--   <a>DescribeApplication</a> operation.
--   
--   <a>$sel:inputStartingPositionConfiguration:InputConfiguration'</a>,
--   <a>inputConfiguration_inputStartingPositionConfiguration</a> - Point
--   at which you want the application to start processing records from the
--   streaming source.
newInputConfiguration :: Text -> InputStartingPositionConfiguration -> InputConfiguration

-- | Describes the application input configuration. For more information,
--   see <a>Configuring Application Input</a>.
--   
--   <i>See:</i> <a>newInputDescription</a> smart constructor.
data InputDescription
InputDescription' :: Maybe InputStartingPositionConfiguration -> Maybe InputParallelism -> Maybe Text -> Maybe [Text] -> Maybe KinesisFirehoseInputDescription -> Maybe SourceSchema -> Maybe KinesisStreamsInputDescription -> Maybe Text -> Maybe InputProcessingConfigurationDescription -> InputDescription

-- | Create a value of <a>InputDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputStartingPositionConfiguration:InputDescription'</a>,
--   <a>inputDescription_inputStartingPositionConfiguration</a> - Point at
--   which the application is configured to read from the input stream.
--   
--   <a>$sel:inputParallelism:InputDescription'</a>,
--   <a>inputDescription_inputParallelism</a> - Describes the configured
--   parallelism (number of in-application streams mapped to the streaming
--   source).
--   
--   <a>$sel:inputId:InputDescription'</a>, <a>inputDescription_inputId</a>
--   - Input ID associated with the application input. This is the ID that
--   Amazon Kinesis Analytics assigns to each input configuration you add
--   to your application.
--   
--   <a>$sel:inAppStreamNames:InputDescription'</a>,
--   <a>inputDescription_inAppStreamNames</a> - Returns the in-application
--   stream names that are mapped to the stream source.
--   
--   <a>$sel:kinesisFirehoseInputDescription:InputDescription'</a>,
--   <a>inputDescription_kinesisFirehoseInputDescription</a> - If an Amazon
--   Kinesis Firehose delivery stream is configured as a streaming source,
--   provides the delivery stream's ARN and an IAM role that enables Amazon
--   Kinesis Analytics to access the stream on your behalf.
--   
--   <a>$sel:inputSchema:InputDescription'</a>,
--   <a>inputDescription_inputSchema</a> - Describes the format of the data
--   in the streaming source, and how each data element maps to
--   corresponding columns in the in-application stream that is being
--   created.
--   
--   <a>$sel:kinesisStreamsInputDescription:InputDescription'</a>,
--   <a>inputDescription_kinesisStreamsInputDescription</a> - If an Amazon
--   Kinesis stream is configured as streaming source, provides Amazon
--   Kinesis stream's Amazon Resource Name (ARN) and an IAM role that
--   enables Amazon Kinesis Analytics to access the stream on your behalf.
--   
--   <a>$sel:namePrefix:InputDescription'</a>,
--   <a>inputDescription_namePrefix</a> - In-application name prefix.
--   
--   <a>$sel:inputProcessingConfigurationDescription:InputDescription'</a>,
--   <a>inputDescription_inputProcessingConfigurationDescription</a> - The
--   description of the preprocessor that executes on records in this input
--   before the application's code is run.
newInputDescription :: InputDescription

-- | An object that contains the Amazon Resource Name (ARN) of the <a>AWS
--   Lambda</a> function that is used to preprocess records in the stream,
--   and the ARN of the IAM role that is used to access the AWS Lambda
--   function.
--   
--   <i>See:</i> <a>newInputLambdaProcessor</a> smart constructor.
data InputLambdaProcessor
InputLambdaProcessor' :: Text -> Text -> InputLambdaProcessor

-- | Create a value of <a>InputLambdaProcessor</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:InputLambdaProcessor'</a>,
--   <a>inputLambdaProcessor_resourceARN</a> - The ARN of the <a>AWS
--   Lambda</a> function that operates on records in the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
--   
--   <a>$sel:roleARN:InputLambdaProcessor'</a>,
--   <a>inputLambdaProcessor_roleARN</a> - The ARN of the IAM role that is
--   used to access the AWS Lambda function.
newInputLambdaProcessor :: Text -> Text -> InputLambdaProcessor

-- | An object that contains the Amazon Resource Name (ARN) of the <a>AWS
--   Lambda</a> function that is used to preprocess records in the stream,
--   and the ARN of the IAM role that is used to access the AWS Lambda
--   expression.
--   
--   <i>See:</i> <a>newInputLambdaProcessorDescription</a> smart
--   constructor.
data InputLambdaProcessorDescription
InputLambdaProcessorDescription' :: Maybe Text -> Maybe Text -> InputLambdaProcessorDescription

-- | Create a value of <a>InputLambdaProcessorDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:InputLambdaProcessorDescription'</a>,
--   <a>inputLambdaProcessorDescription_resourceARN</a> - The ARN of the
--   <a>AWS Lambda</a> function that is used to preprocess the records in
--   the stream.
--   
--   <a>$sel:roleARN:InputLambdaProcessorDescription'</a>,
--   <a>inputLambdaProcessorDescription_roleARN</a> - The ARN of the IAM
--   role that is used to access the AWS Lambda function.
newInputLambdaProcessorDescription :: InputLambdaProcessorDescription

-- | Represents an update to the <a>InputLambdaProcessor</a> that is used
--   to preprocess the records in the stream.
--   
--   <i>See:</i> <a>newInputLambdaProcessorUpdate</a> smart constructor.
data InputLambdaProcessorUpdate
InputLambdaProcessorUpdate' :: Maybe Text -> Maybe Text -> InputLambdaProcessorUpdate

-- | Create a value of <a>InputLambdaProcessorUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:InputLambdaProcessorUpdate'</a>,
--   <a>inputLambdaProcessorUpdate_roleARNUpdate</a> - The ARN of the new
--   IAM role that is used to access the AWS Lambda function.
--   
--   <a>$sel:resourceARNUpdate:InputLambdaProcessorUpdate'</a>,
--   <a>inputLambdaProcessorUpdate_resourceARNUpdate</a> - The Amazon
--   Resource Name (ARN) of the new <a>AWS Lambda</a> function that is used
--   to preprocess the records in the stream.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
newInputLambdaProcessorUpdate :: InputLambdaProcessorUpdate

-- | Describes the number of in-application streams to create for a given
--   streaming source. For information about parallelism, see
--   <a>Configuring Application Input</a>.
--   
--   <i>See:</i> <a>newInputParallelism</a> smart constructor.
data InputParallelism
InputParallelism' :: Maybe Natural -> InputParallelism

-- | Create a value of <a>InputParallelism</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:count:InputParallelism'</a>, <a>inputParallelism_count</a> -
--   Number of in-application streams to create. For more information, see
--   <a>Limits</a>.
newInputParallelism :: InputParallelism

-- | Provides updates to the parallelism count.
--   
--   <i>See:</i> <a>newInputParallelismUpdate</a> smart constructor.
data InputParallelismUpdate
InputParallelismUpdate' :: Maybe Natural -> InputParallelismUpdate

-- | Create a value of <a>InputParallelismUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:countUpdate:InputParallelismUpdate'</a>,
--   <a>inputParallelismUpdate_countUpdate</a> - Number of in-application
--   streams to create for the specified streaming source.
newInputParallelismUpdate :: InputParallelismUpdate

-- | Provides a description of a processor that is used to preprocess the
--   records in the stream before being processed by your application code.
--   Currently, the only input processor available is <a>AWS Lambda</a>.
--   
--   <i>See:</i> <a>newInputProcessingConfiguration</a> smart constructor.
data InputProcessingConfiguration
InputProcessingConfiguration' :: InputLambdaProcessor -> InputProcessingConfiguration

-- | Create a value of <a>InputProcessingConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputLambdaProcessor:InputProcessingConfiguration'</a>,
--   <a>inputProcessingConfiguration_inputLambdaProcessor</a> - The
--   <a>InputLambdaProcessor</a> that is used to preprocess the records in
--   the stream before being processed by your application code.
newInputProcessingConfiguration :: InputLambdaProcessor -> InputProcessingConfiguration

-- | Provides configuration information about an input processor.
--   Currently, the only input processor available is <a>AWS Lambda</a>.
--   
--   <i>See:</i> <a>newInputProcessingConfigurationDescription</a> smart
--   constructor.
data InputProcessingConfigurationDescription
InputProcessingConfigurationDescription' :: Maybe InputLambdaProcessorDescription -> InputProcessingConfigurationDescription

-- | Create a value of <a>InputProcessingConfigurationDescription</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:inputLambdaProcessorDescription:InputProcessingConfigurationDescription'</a>,
--   <a>inputProcessingConfigurationDescription_inputLambdaProcessorDescription</a>
--   - Provides configuration information about the associated
--   <a>InputLambdaProcessorDescription</a>.
newInputProcessingConfigurationDescription :: InputProcessingConfigurationDescription

-- | Describes updates to an <a>InputProcessingConfiguration</a>.
--   
--   <i>See:</i> <a>newInputProcessingConfigurationUpdate</a> smart
--   constructor.
data InputProcessingConfigurationUpdate
InputProcessingConfigurationUpdate' :: InputLambdaProcessorUpdate -> InputProcessingConfigurationUpdate

-- | Create a value of <a>InputProcessingConfigurationUpdate</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   
--   <a>$sel:inputLambdaProcessorUpdate:InputProcessingConfigurationUpdate'</a>,
--   <a>inputProcessingConfigurationUpdate_inputLambdaProcessorUpdate</a> -
--   Provides update information for an <a>InputLambdaProcessor</a>.
newInputProcessingConfigurationUpdate :: InputLambdaProcessorUpdate -> InputProcessingConfigurationUpdate

-- | Describes updates for the application's input schema.
--   
--   <i>See:</i> <a>newInputSchemaUpdate</a> smart constructor.
data InputSchemaUpdate
InputSchemaUpdate' :: Maybe RecordFormat -> Maybe Text -> Maybe (NonEmpty RecordColumn) -> InputSchemaUpdate

-- | Create a value of <a>InputSchemaUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordFormatUpdate:InputSchemaUpdate'</a>,
--   <a>inputSchemaUpdate_recordFormatUpdate</a> - Specifies the format of
--   the records on the streaming source.
--   
--   <a>$sel:recordEncodingUpdate:InputSchemaUpdate'</a>,
--   <a>inputSchemaUpdate_recordEncodingUpdate</a> - Specifies the encoding
--   of the records in the streaming source. For example, UTF-8.
--   
--   <a>$sel:recordColumnUpdates:InputSchemaUpdate'</a>,
--   <a>inputSchemaUpdate_recordColumnUpdates</a> - A list of
--   <tt>RecordColumn</tt> objects. Each object describes the mapping of
--   the streaming source element to the corresponding column in the
--   in-application stream.
newInputSchemaUpdate :: InputSchemaUpdate

-- | Describes the point at which the application reads from the streaming
--   source.
--   
--   <i>See:</i> <a>newInputStartingPositionConfiguration</a> smart
--   constructor.
data InputStartingPositionConfiguration
InputStartingPositionConfiguration' :: Maybe InputStartingPosition -> InputStartingPositionConfiguration

-- | Create a value of <a>InputStartingPositionConfiguration</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputStartingPosition:InputStartingPositionConfiguration'</a>,
--   <a>inputStartingPositionConfiguration_inputStartingPosition</a> - The
--   starting position on the stream.
--   
--   <ul>
--   <li><tt>NOW</tt> - Start reading just after the most recent record in
--   the stream, start at the request time stamp that the customer
--   issued.</li>
--   <li><tt>TRIM_HORIZON</tt> - Start reading at the last untrimmed record
--   in the stream, which is the oldest record available in the stream.
--   This option is not available for an Amazon Kinesis Firehose delivery
--   stream.</li>
--   <li><tt>LAST_STOPPED_POINT</tt> - Resume reading from where the
--   application last stopped reading.</li>
--   </ul>
newInputStartingPositionConfiguration :: InputStartingPositionConfiguration

-- | Describes updates to a specific input configuration (identified by the
--   <tt>InputId</tt> of an application).
--   
--   <i>See:</i> <a>newInputUpdate</a> smart constructor.
data InputUpdate
InputUpdate' :: Maybe InputProcessingConfigurationUpdate -> Maybe KinesisStreamsInputUpdate -> Maybe InputParallelismUpdate -> Maybe Text -> Maybe InputSchemaUpdate -> Maybe KinesisFirehoseInputUpdate -> Text -> InputUpdate

-- | Create a value of <a>InputUpdate</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inputProcessingConfigurationUpdate:InputUpdate'</a>,
--   <a>inputUpdate_inputProcessingConfigurationUpdate</a> - Describes
--   updates for an input processing configuration.
--   
--   <a>$sel:kinesisStreamsInputUpdate:InputUpdate'</a>,
--   <a>inputUpdate_kinesisStreamsInputUpdate</a> - If an Amazon Kinesis
--   stream is the streaming source to be updated, provides an updated
--   stream Amazon Resource Name (ARN) and IAM role ARN.
--   
--   <a>$sel:inputParallelismUpdate:InputUpdate'</a>,
--   <a>inputUpdate_inputParallelismUpdate</a> - Describes the parallelism
--   updates (the number in-application streams Amazon Kinesis Analytics
--   creates for the specific streaming source).
--   
--   <a>$sel:namePrefixUpdate:InputUpdate'</a>,
--   <a>inputUpdate_namePrefixUpdate</a> - Name prefix for in-application
--   streams that Amazon Kinesis Analytics creates for the specific
--   streaming source.
--   
--   <a>$sel:inputSchemaUpdate:InputUpdate'</a>,
--   <a>inputUpdate_inputSchemaUpdate</a> - Describes the data format on
--   the streaming source, and how record elements on the streaming source
--   map to columns of the in-application stream that is created.
--   
--   <a>$sel:kinesisFirehoseInputUpdate:InputUpdate'</a>,
--   <a>inputUpdate_kinesisFirehoseInputUpdate</a> - If an Amazon Kinesis
--   Firehose delivery stream is the streaming source to be updated,
--   provides an updated stream ARN and IAM role ARN.
--   
--   <a>$sel:inputId:InputUpdate'</a>, <a>inputUpdate_inputId</a> - Input
--   ID of the application input to be updated.
newInputUpdate :: Text -> InputUpdate

-- | Provides additional mapping information when JSON is the record format
--   on the streaming source.
--   
--   <i>See:</i> <a>newJSONMappingParameters</a> smart constructor.
data JSONMappingParameters
JSONMappingParameters' :: Text -> JSONMappingParameters

-- | Create a value of <a>JSONMappingParameters</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordRowPath:JSONMappingParameters'</a>,
--   <a>jSONMappingParameters_recordRowPath</a> - Path to the top-level
--   parent that contains the records.
newJSONMappingParameters :: Text -> JSONMappingParameters

-- | Identifies an Amazon Kinesis Firehose delivery stream as the streaming
--   source. You provide the delivery stream's Amazon Resource Name (ARN)
--   and an IAM role ARN that enables Amazon Kinesis Analytics to access
--   the stream on your behalf.
--   
--   <i>See:</i> <a>newKinesisFirehoseInput</a> smart constructor.
data KinesisFirehoseInput
KinesisFirehoseInput' :: Text -> Text -> KinesisFirehoseInput

-- | Create a value of <a>KinesisFirehoseInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseInput'</a>,
--   <a>kinesisFirehoseInput_resourceARN</a> - ARN of the input delivery
--   stream.
--   
--   <a>$sel:roleARN:KinesisFirehoseInput'</a>,
--   <a>kinesisFirehoseInput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to access the stream on your behalf. You
--   need to make sure that the role has the necessary permissions to
--   access the stream.
newKinesisFirehoseInput :: Text -> Text -> KinesisFirehoseInput

-- | Describes the Amazon Kinesis Firehose delivery stream that is
--   configured as the streaming source in the application input
--   configuration.
--   
--   <i>See:</i> <a>newKinesisFirehoseInputDescription</a> smart
--   constructor.
data KinesisFirehoseInputDescription
KinesisFirehoseInputDescription' :: Maybe Text -> Maybe Text -> KinesisFirehoseInputDescription

-- | Create a value of <a>KinesisFirehoseInputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseInputDescription'</a>,
--   <a>kinesisFirehoseInputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis Firehose delivery stream.
--   
--   <a>$sel:roleARN:KinesisFirehoseInputDescription'</a>,
--   <a>kinesisFirehoseInputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics assumes to access the stream.
newKinesisFirehoseInputDescription :: KinesisFirehoseInputDescription

-- | When updating application input configuration, provides information
--   about an Amazon Kinesis Firehose delivery stream as the streaming
--   source.
--   
--   <i>See:</i> <a>newKinesisFirehoseInputUpdate</a> smart constructor.
data KinesisFirehoseInputUpdate
KinesisFirehoseInputUpdate' :: Maybe Text -> Maybe Text -> KinesisFirehoseInputUpdate

-- | Create a value of <a>KinesisFirehoseInputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisFirehoseInputUpdate'</a>,
--   <a>kinesisFirehoseInputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisFirehoseInputUpdate'</a>,
--   <a>kinesisFirehoseInputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the input Amazon Kinesis Firehose delivery stream to
--   read.
newKinesisFirehoseInputUpdate :: KinesisFirehoseInputUpdate

-- | When configuring application output, identifies an Amazon Kinesis
--   Firehose delivery stream as the destination. You provide the stream
--   Amazon Resource Name (ARN) and an IAM role that enables Amazon Kinesis
--   Analytics to write to the stream on your behalf.
--   
--   <i>See:</i> <a>newKinesisFirehoseOutput</a> smart constructor.
data KinesisFirehoseOutput
KinesisFirehoseOutput' :: Text -> Text -> KinesisFirehoseOutput

-- | Create a value of <a>KinesisFirehoseOutput</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseOutput'</a>,
--   <a>kinesisFirehoseOutput_resourceARN</a> - ARN of the destination
--   Amazon Kinesis Firehose delivery stream to write to.
--   
--   <a>$sel:roleARN:KinesisFirehoseOutput'</a>,
--   <a>kinesisFirehoseOutput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to write to the destination stream on
--   your behalf. You need to grant the necessary permissions to this role.
newKinesisFirehoseOutput :: Text -> Text -> KinesisFirehoseOutput

-- | For an application output, describes the Amazon Kinesis Firehose
--   delivery stream configured as its destination.
--   
--   <i>See:</i> <a>newKinesisFirehoseOutputDescription</a> smart
--   constructor.
data KinesisFirehoseOutputDescription
KinesisFirehoseOutputDescription' :: Maybe Text -> Maybe Text -> KinesisFirehoseOutputDescription

-- | Create a value of <a>KinesisFirehoseOutputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisFirehoseOutputDescription'</a>,
--   <a>kinesisFirehoseOutputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis Firehose delivery stream.
--   
--   <a>$sel:roleARN:KinesisFirehoseOutputDescription'</a>,
--   <a>kinesisFirehoseOutputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream.
newKinesisFirehoseOutputDescription :: KinesisFirehoseOutputDescription

-- | When updating an output configuration using the
--   <a>UpdateApplication</a> operation, provides information about an
--   Amazon Kinesis Firehose delivery stream configured as the destination.
--   
--   <i>See:</i> <a>newKinesisFirehoseOutputUpdate</a> smart constructor.
data KinesisFirehoseOutputUpdate
KinesisFirehoseOutputUpdate' :: Maybe Text -> Maybe Text -> KinesisFirehoseOutputUpdate

-- | Create a value of <a>KinesisFirehoseOutputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisFirehoseOutputUpdate'</a>,
--   <a>kinesisFirehoseOutputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisFirehoseOutputUpdate'</a>,
--   <a>kinesisFirehoseOutputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis Firehose delivery stream to write to.
newKinesisFirehoseOutputUpdate :: KinesisFirehoseOutputUpdate

-- | Identifies an Amazon Kinesis stream as the streaming source. You
--   provide the stream's Amazon Resource Name (ARN) and an IAM role ARN
--   that enables Amazon Kinesis Analytics to access the stream on your
--   behalf.
--   
--   <i>See:</i> <a>newKinesisStreamsInput</a> smart constructor.
data KinesisStreamsInput
KinesisStreamsInput' :: Text -> Text -> KinesisStreamsInput

-- | Create a value of <a>KinesisStreamsInput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsInput'</a>,
--   <a>kinesisStreamsInput_resourceARN</a> - ARN of the input Amazon
--   Kinesis stream to read.
--   
--   <a>$sel:roleARN:KinesisStreamsInput'</a>,
--   <a>kinesisStreamsInput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to access the stream on your behalf. You
--   need to grant the necessary permissions to this role.
newKinesisStreamsInput :: Text -> Text -> KinesisStreamsInput

-- | Describes the Amazon Kinesis stream that is configured as the
--   streaming source in the application input configuration.
--   
--   <i>See:</i> <a>newKinesisStreamsInputDescription</a> smart
--   constructor.
data KinesisStreamsInputDescription
KinesisStreamsInputDescription' :: Maybe Text -> Maybe Text -> KinesisStreamsInputDescription

-- | Create a value of <a>KinesisStreamsInputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsInputDescription'</a>,
--   <a>kinesisStreamsInputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis stream.
--   
--   <a>$sel:roleARN:KinesisStreamsInputDescription'</a>,
--   <a>kinesisStreamsInputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream.
newKinesisStreamsInputDescription :: KinesisStreamsInputDescription

-- | When updating application input configuration, provides information
--   about an Amazon Kinesis stream as the streaming source.
--   
--   <i>See:</i> <a>newKinesisStreamsInputUpdate</a> smart constructor.
data KinesisStreamsInputUpdate
KinesisStreamsInputUpdate' :: Maybe Text -> Maybe Text -> KinesisStreamsInputUpdate

-- | Create a value of <a>KinesisStreamsInputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisStreamsInputUpdate'</a>,
--   <a>kinesisStreamsInputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisStreamsInputUpdate'</a>,
--   <a>kinesisStreamsInputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the input Amazon Kinesis stream to read.
newKinesisStreamsInputUpdate :: KinesisStreamsInputUpdate

-- | When configuring application output, identifies an Amazon Kinesis
--   stream as the destination. You provide the stream Amazon Resource Name
--   (ARN) and also an IAM role ARN that Amazon Kinesis Analytics can use
--   to write to the stream on your behalf.
--   
--   <i>See:</i> <a>newKinesisStreamsOutput</a> smart constructor.
data KinesisStreamsOutput
KinesisStreamsOutput' :: Text -> Text -> KinesisStreamsOutput

-- | Create a value of <a>KinesisStreamsOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsOutput'</a>,
--   <a>kinesisStreamsOutput_resourceARN</a> - ARN of the destination
--   Amazon Kinesis stream to write to.
--   
--   <a>$sel:roleARN:KinesisStreamsOutput'</a>,
--   <a>kinesisStreamsOutput_roleARN</a> - ARN of the IAM role that Amazon
--   Kinesis Analytics can assume to write to the destination stream on
--   your behalf. You need to grant the necessary permissions to this role.
newKinesisStreamsOutput :: Text -> Text -> KinesisStreamsOutput

-- | For an application output, describes the Amazon Kinesis stream
--   configured as its destination.
--   
--   <i>See:</i> <a>newKinesisStreamsOutputDescription</a> smart
--   constructor.
data KinesisStreamsOutputDescription
KinesisStreamsOutputDescription' :: Maybe Text -> Maybe Text -> KinesisStreamsOutputDescription

-- | Create a value of <a>KinesisStreamsOutputDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:KinesisStreamsOutputDescription'</a>,
--   <a>kinesisStreamsOutputDescription_resourceARN</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis stream.
--   
--   <a>$sel:roleARN:KinesisStreamsOutputDescription'</a>,
--   <a>kinesisStreamsOutputDescription_roleARN</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream.
newKinesisStreamsOutputDescription :: KinesisStreamsOutputDescription

-- | When updating an output configuration using the
--   <a>UpdateApplication</a> operation, provides information about an
--   Amazon Kinesis stream configured as the destination.
--   
--   <i>See:</i> <a>newKinesisStreamsOutputUpdate</a> smart constructor.
data KinesisStreamsOutputUpdate
KinesisStreamsOutputUpdate' :: Maybe Text -> Maybe Text -> KinesisStreamsOutputUpdate

-- | Create a value of <a>KinesisStreamsOutputUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:KinesisStreamsOutputUpdate'</a>,
--   <a>kinesisStreamsOutputUpdate_roleARNUpdate</a> - ARN of the IAM role
--   that Amazon Kinesis Analytics can assume to access the stream on your
--   behalf. You need to grant the necessary permissions to this role.
--   
--   <a>$sel:resourceARNUpdate:KinesisStreamsOutputUpdate'</a>,
--   <a>kinesisStreamsOutputUpdate_resourceARNUpdate</a> - Amazon Resource
--   Name (ARN) of the Amazon Kinesis stream where you want to write the
--   output.
newKinesisStreamsOutputUpdate :: KinesisStreamsOutputUpdate

-- | When configuring application output, identifies an AWS Lambda function
--   as the destination. You provide the function Amazon Resource Name
--   (ARN) and also an IAM role ARN that Amazon Kinesis Analytics can use
--   to write to the function on your behalf.
--   
--   <i>See:</i> <a>newLambdaOutput</a> smart constructor.
data LambdaOutput
LambdaOutput' :: Text -> Text -> LambdaOutput

-- | Create a value of <a>LambdaOutput</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:LambdaOutput'</a>, <a>lambdaOutput_resourceARN</a>
--   - Amazon Resource Name (ARN) of the destination Lambda function to
--   write to.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
--   
--   <a>$sel:roleARN:LambdaOutput'</a>, <a>lambdaOutput_roleARN</a> - ARN
--   of the IAM role that Amazon Kinesis Analytics can assume to write to
--   the destination function on your behalf. You need to grant the
--   necessary permissions to this role.
newLambdaOutput :: Text -> Text -> LambdaOutput

-- | For an application output, describes the AWS Lambda function
--   configured as its destination.
--   
--   <i>See:</i> <a>newLambdaOutputDescription</a> smart constructor.
data LambdaOutputDescription
LambdaOutputDescription' :: Maybe Text -> Maybe Text -> LambdaOutputDescription

-- | Create a value of <a>LambdaOutputDescription</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:resourceARN:LambdaOutputDescription'</a>,
--   <a>lambdaOutputDescription_resourceARN</a> - Amazon Resource Name
--   (ARN) of the destination Lambda function.
--   
--   <a>$sel:roleARN:LambdaOutputDescription'</a>,
--   <a>lambdaOutputDescription_roleARN</a> - ARN of the IAM role that
--   Amazon Kinesis Analytics can assume to write to the destination
--   function.
newLambdaOutputDescription :: LambdaOutputDescription

-- | When updating an output configuration using the
--   <a>UpdateApplication</a> operation, provides information about an AWS
--   Lambda function configured as the destination.
--   
--   <i>See:</i> <a>newLambdaOutputUpdate</a> smart constructor.
data LambdaOutputUpdate
LambdaOutputUpdate' :: Maybe Text -> Maybe Text -> LambdaOutputUpdate

-- | Create a value of <a>LambdaOutputUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARNUpdate:LambdaOutputUpdate'</a>,
--   <a>lambdaOutputUpdate_roleARNUpdate</a> - ARN of the IAM role that
--   Amazon Kinesis Analytics can assume to write to the destination
--   function on your behalf. You need to grant the necessary permissions
--   to this role.
--   
--   <a>$sel:resourceARNUpdate:LambdaOutputUpdate'</a>,
--   <a>lambdaOutputUpdate_resourceARNUpdate</a> - Amazon Resource Name
--   (ARN) of the destination Lambda function.
--   
--   To specify an earlier version of the Lambda function than the latest,
--   include the Lambda function version in the Lambda function ARN. For
--   more information about Lambda ARNs, see <a>Example ARNs: AWS
--   Lambda</a>
newLambdaOutputUpdate :: LambdaOutputUpdate

-- | When configuring application input at the time of creating or updating
--   an application, provides additional mapping information specific to
--   the record format (such as JSON, CSV, or record fields delimited by
--   some delimiter) on the streaming source.
--   
--   <i>See:</i> <a>newMappingParameters</a> smart constructor.
data MappingParameters
MappingParameters' :: Maybe CSVMappingParameters -> Maybe JSONMappingParameters -> MappingParameters

-- | Create a value of <a>MappingParameters</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:cSVMappingParameters:MappingParameters'</a>,
--   <a>mappingParameters_cSVMappingParameters</a> - Provides additional
--   mapping information when the record format uses delimiters (for
--   example, CSV).
--   
--   <a>$sel:jSONMappingParameters:MappingParameters'</a>,
--   <a>mappingParameters_jSONMappingParameters</a> - Provides additional
--   mapping information when JSON is the record format on the streaming
--   source.
newMappingParameters :: MappingParameters

-- | Describes application output configuration in which you identify an
--   in-application stream and a destination where you want the
--   in-application stream data to be written. The destination can be an
--   Amazon Kinesis stream or an Amazon Kinesis Firehose delivery stream.
--   
--   For limits on how many destinations an application can write and other
--   limitations, see <a>Limits</a>.
--   
--   <i>See:</i> <a>newOutput</a> smart constructor.
data Output
Output' :: Maybe LambdaOutput -> Maybe KinesisStreamsOutput -> Maybe KinesisFirehoseOutput -> Text -> DestinationSchema -> Output

-- | Create a value of <a>Output</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:lambdaOutput:Output'</a>, <a>output_lambdaOutput</a> -
--   Identifies an AWS Lambda function as the destination.
--   
--   <a>$sel:kinesisStreamsOutput:Output'</a>,
--   <a>output_kinesisStreamsOutput</a> - Identifies an Amazon Kinesis
--   stream as the destination.
--   
--   <a>$sel:kinesisFirehoseOutput:Output'</a>,
--   <a>output_kinesisFirehoseOutput</a> - Identifies an Amazon Kinesis
--   Firehose delivery stream as the destination.
--   
--   <a>$sel:name:Output'</a>, <a>output_name</a> - Name of the
--   in-application stream.
--   
--   <a>$sel:destinationSchema:Output'</a>, <a>output_destinationSchema</a>
--   - Describes the data format when records are written to the
--   destination. For more information, see <a>Configuring Application
--   Output</a>.
newOutput :: Text -> DestinationSchema -> Output

-- | Describes the application output configuration, which includes the
--   in-application stream name and the destination where the stream data
--   is written. The destination can be an Amazon Kinesis stream or an
--   Amazon Kinesis Firehose delivery stream.
--   
--   <i>See:</i> <a>newOutputDescription</a> smart constructor.
data OutputDescription
OutputDescription' :: Maybe Text -> Maybe DestinationSchema -> Maybe KinesisFirehoseOutputDescription -> Maybe KinesisStreamsOutputDescription -> Maybe Text -> Maybe LambdaOutputDescription -> OutputDescription

-- | Create a value of <a>OutputDescription</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:outputId:OutputDescription'</a>,
--   <a>outputDescription_outputId</a> - A unique identifier for the output
--   configuration.
--   
--   <a>$sel:destinationSchema:OutputDescription'</a>,
--   <a>outputDescription_destinationSchema</a> - Data format used for
--   writing data to the destination.
--   
--   <a>$sel:kinesisFirehoseOutputDescription:OutputDescription'</a>,
--   <a>outputDescription_kinesisFirehoseOutputDescription</a> - Describes
--   the Amazon Kinesis Firehose delivery stream configured as the
--   destination where output is written.
--   
--   <a>$sel:kinesisStreamsOutputDescription:OutputDescription'</a>,
--   <a>outputDescription_kinesisStreamsOutputDescription</a> - Describes
--   Amazon Kinesis stream configured as the destination where output is
--   written.
--   
--   <a>$sel:name:OutputDescription'</a>, <a>outputDescription_name</a> -
--   Name of the in-application stream configured as output.
--   
--   <a>$sel:lambdaOutputDescription:OutputDescription'</a>,
--   <a>outputDescription_lambdaOutputDescription</a> - Describes the AWS
--   Lambda function configured as the destination where output is written.
newOutputDescription :: OutputDescription

-- | Describes updates to the output configuration identified by the
--   <tt>OutputId</tt>.
--   
--   <i>See:</i> <a>newOutputUpdate</a> smart constructor.
data OutputUpdate
OutputUpdate' :: Maybe KinesisStreamsOutputUpdate -> Maybe DestinationSchema -> Maybe KinesisFirehoseOutputUpdate -> Maybe Text -> Maybe LambdaOutputUpdate -> Text -> OutputUpdate

-- | Create a value of <a>OutputUpdate</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:kinesisStreamsOutputUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_kinesisStreamsOutputUpdate</a> - Describes an Amazon
--   Kinesis stream as the destination for the output.
--   
--   <a>$sel:destinationSchemaUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_destinationSchemaUpdate</a> - Describes the data
--   format when records are written to the destination. For more
--   information, see <a>Configuring Application Output</a>.
--   
--   <a>$sel:kinesisFirehoseOutputUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_kinesisFirehoseOutputUpdate</a> - Describes an Amazon
--   Kinesis Firehose delivery stream as the destination for the output.
--   
--   <a>$sel:nameUpdate:OutputUpdate'</a>, <a>outputUpdate_nameUpdate</a> -
--   If you want to specify a different in-application stream for this
--   output configuration, use this field to specify the new in-application
--   stream name.
--   
--   <a>$sel:lambdaOutputUpdate:OutputUpdate'</a>,
--   <a>outputUpdate_lambdaOutputUpdate</a> - Describes an AWS Lambda
--   function as the destination for the output.
--   
--   <a>$sel:outputId:OutputUpdate'</a>, <a>outputUpdate_outputId</a> -
--   Identifies the specific output configuration that you want to update.
newOutputUpdate :: Text -> OutputUpdate

-- | Describes the mapping of each data element in the streaming source to
--   the corresponding column in the in-application stream.
--   
--   Also used to describe the format of the reference data source.
--   
--   <i>See:</i> <a>newRecordColumn</a> smart constructor.
data RecordColumn
RecordColumn' :: Maybe Text -> Text -> Text -> RecordColumn

-- | Create a value of <a>RecordColumn</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mapping:RecordColumn'</a>, <a>recordColumn_mapping</a> -
--   Reference to the data element in the streaming input or the reference
--   data source. This element is required if the <a>RecordFormatType</a>
--   is <tt>JSON</tt>.
--   
--   <a>$sel:name:RecordColumn'</a>, <a>recordColumn_name</a> - Name of the
--   column created in the in-application input stream or reference table.
--   
--   <a>$sel:sqlType:RecordColumn'</a>, <a>recordColumn_sqlType</a> - Type
--   of column created in the in-application input stream or reference
--   table.
newRecordColumn :: Text -> Text -> RecordColumn

-- | Describes the record format and relevant mapping information that
--   should be applied to schematize the records on the stream.
--   
--   <i>See:</i> <a>newRecordFormat</a> smart constructor.
data RecordFormat
RecordFormat' :: Maybe MappingParameters -> RecordFormatType -> RecordFormat

-- | Create a value of <a>RecordFormat</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mappingParameters:RecordFormat'</a>,
--   <a>recordFormat_mappingParameters</a> - When configuring application
--   input at the time of creating or updating an application, provides
--   additional mapping information specific to the record format (such as
--   JSON, CSV, or record fields delimited by some delimiter) on the
--   streaming source.
--   
--   <a>$sel:recordFormatType:RecordFormat'</a>,
--   <a>recordFormat_recordFormatType</a> - The type of record format.
newRecordFormat :: RecordFormatType -> RecordFormat

-- | Describes the reference data source by providing the source
--   information (S3 bucket name and object key name), the resulting
--   in-application table name that is created, and the necessary schema to
--   map the data elements in the Amazon S3 object to the in-application
--   table.
--   
--   <i>See:</i> <a>newReferenceDataSource</a> smart constructor.
data ReferenceDataSource
ReferenceDataSource' :: Maybe S3ReferenceDataSource -> Text -> SourceSchema -> ReferenceDataSource

-- | Create a value of <a>ReferenceDataSource</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:s3ReferenceDataSource:ReferenceDataSource'</a>,
--   <a>referenceDataSource_s3ReferenceDataSource</a> - Identifies the S3
--   bucket and object that contains the reference data. Also identifies
--   the IAM role Amazon Kinesis Analytics can assume to read this object
--   on your behalf. An Amazon Kinesis Analytics application loads
--   reference data only once. If the data changes, you call the
--   <tt>UpdateApplication</tt> operation to trigger reloading of data into
--   your application.
--   
--   <a>$sel:tableName:ReferenceDataSource'</a>,
--   <a>referenceDataSource_tableName</a> - Name of the in-application
--   table to create.
--   
--   <a>$sel:referenceSchema:ReferenceDataSource'</a>,
--   <a>referenceDataSource_referenceSchema</a> - Describes the format of
--   the data in the streaming source, and how each data element maps to
--   corresponding columns created in the in-application stream.
newReferenceDataSource :: Text -> SourceSchema -> ReferenceDataSource

-- | Describes the reference data source configured for an application.
--   
--   <i>See:</i> <a>newReferenceDataSourceDescription</a> smart
--   constructor.
data ReferenceDataSourceDescription
ReferenceDataSourceDescription' :: Maybe SourceSchema -> Text -> Text -> S3ReferenceDataSourceDescription -> ReferenceDataSourceDescription

-- | Create a value of <a>ReferenceDataSourceDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:referenceSchema:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_referenceSchema</a> - Describes the
--   format of the data in the streaming source, and how each data element
--   maps to corresponding columns created in the in-application stream.
--   
--   <a>$sel:referenceId:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_referenceId</a> - ID of the
--   reference data source. This is the ID that Amazon Kinesis Analytics
--   assigns when you add the reference data source to your application
--   using the <a>AddApplicationReferenceDataSource</a> operation.
--   
--   <a>$sel:tableName:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_tableName</a> - The in-application
--   table name created by the specific reference data source
--   configuration.
--   
--   
--   <a>$sel:s3ReferenceDataSourceDescription:ReferenceDataSourceDescription'</a>,
--   <a>referenceDataSourceDescription_s3ReferenceDataSourceDescription</a>
--   - Provides the S3 bucket name, the object key name that contains the
--   reference data. It also provides the Amazon Resource Name (ARN) of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object and populate the in-application reference table.
newReferenceDataSourceDescription :: Text -> Text -> S3ReferenceDataSourceDescription -> ReferenceDataSourceDescription

-- | When you update a reference data source configuration for an
--   application, this object provides all the updated values (such as the
--   source bucket name and object key name), the in-application table name
--   that is created, and updated mapping information that maps the data in
--   the Amazon S3 object to the in-application reference table that is
--   created.
--   
--   <i>See:</i> <a>newReferenceDataSourceUpdate</a> smart constructor.
data ReferenceDataSourceUpdate
ReferenceDataSourceUpdate' :: Maybe Text -> Maybe S3ReferenceDataSourceUpdate -> Maybe SourceSchema -> Text -> ReferenceDataSourceUpdate

-- | Create a value of <a>ReferenceDataSourceUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:tableNameUpdate:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_tableNameUpdate</a> - In-application
--   table name that is created by this update.
--   
--   <a>$sel:s3ReferenceDataSourceUpdate:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_s3ReferenceDataSourceUpdate</a> -
--   Describes the S3 bucket name, object key name, and IAM role that
--   Amazon Kinesis Analytics can assume to read the Amazon S3 object on
--   your behalf and populate the in-application reference table.
--   
--   <a>$sel:referenceSchemaUpdate:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_referenceSchemaUpdate</a> - Describes the
--   format of the data in the streaming source, and how each data element
--   maps to corresponding columns created in the in-application stream.
--   
--   <a>$sel:referenceId:ReferenceDataSourceUpdate'</a>,
--   <a>referenceDataSourceUpdate_referenceId</a> - ID of the reference
--   data source being updated. You can use the <a>DescribeApplication</a>
--   operation to get this value.
newReferenceDataSourceUpdate :: Text -> ReferenceDataSourceUpdate

-- | Provides a description of an Amazon S3 data source, including the
--   Amazon Resource Name (ARN) of the S3 bucket, the ARN of the IAM role
--   that is used to access the bucket, and the name of the Amazon S3
--   object that contains the data.
--   
--   <i>See:</i> <a>newS3Configuration</a> smart constructor.
data S3Configuration
S3Configuration' :: Text -> Text -> Text -> S3Configuration

-- | Create a value of <a>S3Configuration</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:roleARN:S3Configuration'</a>, <a>s3Configuration_roleARN</a> -
--   IAM ARN of the role used to access the data.
--   
--   <a>$sel:bucketARN:S3Configuration'</a>,
--   <a>s3Configuration_bucketARN</a> - ARN of the S3 bucket that contains
--   the data.
--   
--   <a>$sel:fileKey:S3Configuration'</a>, <a>s3Configuration_fileKey</a> -
--   The name of the object that contains the data.
newS3Configuration :: Text -> Text -> Text -> S3Configuration

-- | Identifies the S3 bucket and object that contains the reference data.
--   Also identifies the IAM role Amazon Kinesis Analytics can assume to
--   read this object on your behalf.
--   
--   An Amazon Kinesis Analytics application loads reference data only
--   once. If the data changes, you call the <a>UpdateApplication</a>
--   operation to trigger reloading of data into your application.
--   
--   <i>See:</i> <a>newS3ReferenceDataSource</a> smart constructor.
data S3ReferenceDataSource
S3ReferenceDataSource' :: Text -> Text -> Text -> S3ReferenceDataSource

-- | Create a value of <a>S3ReferenceDataSource</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketARN:S3ReferenceDataSource'</a>,
--   <a>s3ReferenceDataSource_bucketARN</a> - Amazon Resource Name (ARN) of
--   the S3 bucket.
--   
--   <a>$sel:fileKey:S3ReferenceDataSource'</a>,
--   <a>s3ReferenceDataSource_fileKey</a> - Object key name containing
--   reference data.
--   
--   <a>$sel:referenceRoleARN:S3ReferenceDataSource'</a>,
--   <a>s3ReferenceDataSource_referenceRoleARN</a> - ARN of the IAM role
--   that the service can assume to read data on your behalf. This role
--   must have permission for the <tt>s3:GetObject</tt> action on the
--   object and trust policy that allows Amazon Kinesis Analytics service
--   principal to assume this role.
newS3ReferenceDataSource :: Text -> Text -> Text -> S3ReferenceDataSource

-- | Provides the bucket name and object key name that stores the reference
--   data.
--   
--   <i>See:</i> <a>newS3ReferenceDataSourceDescription</a> smart
--   constructor.
data S3ReferenceDataSourceDescription
S3ReferenceDataSourceDescription' :: Text -> Text -> Text -> S3ReferenceDataSourceDescription

-- | Create a value of <a>S3ReferenceDataSourceDescription</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketARN:S3ReferenceDataSourceDescription'</a>,
--   <a>s3ReferenceDataSourceDescription_bucketARN</a> - Amazon Resource
--   Name (ARN) of the S3 bucket.
--   
--   <a>$sel:fileKey:S3ReferenceDataSourceDescription'</a>,
--   <a>s3ReferenceDataSourceDescription_fileKey</a> - Amazon S3 object key
--   name.
--   
--   <a>$sel:referenceRoleARN:S3ReferenceDataSourceDescription'</a>,
--   <a>s3ReferenceDataSourceDescription_referenceRoleARN</a> - ARN of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object on your behalf to populate the in-application reference
--   table.
newS3ReferenceDataSourceDescription :: Text -> Text -> Text -> S3ReferenceDataSourceDescription

-- | Describes the S3 bucket name, object key name, and IAM role that
--   Amazon Kinesis Analytics can assume to read the Amazon S3 object on
--   your behalf and populate the in-application reference table.
--   
--   <i>See:</i> <a>newS3ReferenceDataSourceUpdate</a> smart constructor.
data S3ReferenceDataSourceUpdate
S3ReferenceDataSourceUpdate' :: Maybe Text -> Maybe Text -> Maybe Text -> S3ReferenceDataSourceUpdate

-- | Create a value of <a>S3ReferenceDataSourceUpdate</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bucketARNUpdate:S3ReferenceDataSourceUpdate'</a>,
--   <a>s3ReferenceDataSourceUpdate_bucketARNUpdate</a> - Amazon Resource
--   Name (ARN) of the S3 bucket.
--   
--   <a>$sel:fileKeyUpdate:S3ReferenceDataSourceUpdate'</a>,
--   <a>s3ReferenceDataSourceUpdate_fileKeyUpdate</a> - Object key name.
--   
--   <a>$sel:referenceRoleARNUpdate:S3ReferenceDataSourceUpdate'</a>,
--   <a>s3ReferenceDataSourceUpdate_referenceRoleARNUpdate</a> - ARN of the
--   IAM role that Amazon Kinesis Analytics can assume to read the Amazon
--   S3 object and populate the in-application.
newS3ReferenceDataSourceUpdate :: S3ReferenceDataSourceUpdate

-- | Describes the format of the data in the streaming source, and how each
--   data element maps to corresponding columns created in the
--   in-application stream.
--   
--   <i>See:</i> <a>newSourceSchema</a> smart constructor.
data SourceSchema
SourceSchema' :: Maybe Text -> RecordFormat -> NonEmpty RecordColumn -> SourceSchema

-- | Create a value of <a>SourceSchema</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:recordEncoding:SourceSchema'</a>,
--   <a>sourceSchema_recordEncoding</a> - Specifies the encoding of the
--   records in the streaming source. For example, UTF-8.
--   
--   <a>$sel:recordFormat:SourceSchema'</a>,
--   <a>sourceSchema_recordFormat</a> - Specifies the format of the records
--   on the streaming source.
--   
--   <a>$sel:recordColumns:SourceSchema'</a>,
--   <a>sourceSchema_recordColumns</a> - A list of <tt>RecordColumn</tt>
--   objects.
newSourceSchema :: RecordFormat -> NonEmpty RecordColumn -> SourceSchema

-- | A key-value pair (the value is optional) that you can define and
--   assign to AWS resources. If you specify a tag that already exists, the
--   tag value is replaced with the value that you specify in the request.
--   Note that the maximum number of application tags includes system tags.
--   The maximum number of user-defined application tags is 50. For more
--   information, see <a>Using Tagging</a>.
--   
--   <i>See:</i> <a>newTag</a> smart constructor.
data Tag
Tag' :: Maybe Text -> Text -> Tag

-- | Create a value of <a>Tag</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:Tag'</a>, <a>tag_value</a> - The value of the key-value
--   tag. The value is optional.
--   
--   <a>$sel:key:Tag'</a>, <a>tag_key</a> - The key of the key-value tag.
newTag :: Text -> Tag
