-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package libZSservicesZSamazonka-mechanicalturkZSamazonka-mechanicalturk
@version 2.0


module Amazonka.MechanicalTurk.Types.AssignmentStatus
newtype AssignmentStatus
AssignmentStatus' :: Text -> AssignmentStatus
[fromAssignmentStatus] :: AssignmentStatus -> Text
pattern AssignmentStatus_Approved :: AssignmentStatus
pattern AssignmentStatus_Rejected :: AssignmentStatus
pattern AssignmentStatus_Submitted :: AssignmentStatus
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.AssignmentStatus.AssignmentStatus


module Amazonka.MechanicalTurk.Types.Assignment

-- | The Assignment data structure represents a single assignment of a HIT
--   to a Worker. The assignment tracks the Worker's efforts to complete
--   the HIT, and contains the results for later retrieval.
--   
--   <i>See:</i> <a>newAssignment</a> smart constructor.
data Assignment
Assignment' :: Maybe POSIX -> Maybe Text -> Maybe AssignmentStatus -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Assignment

-- | The date and time the Worker accepted the assignment.
[$sel:acceptTime:Assignment'] :: Assignment -> Maybe POSIX

-- | The Worker's answers submitted for the HIT contained in a
--   QuestionFormAnswers document, if the Worker provides an answer. If the
--   Worker does not provide any answers, Answer may contain a
--   QuestionFormAnswers document, or Answer may be empty.
[$sel:answer:Assignment'] :: Assignment -> Maybe Text

-- | The status of the assignment.
[$sel:assignmentStatus:Assignment'] :: Assignment -> Maybe AssignmentStatus

-- | The feedback string included with the call to the ApproveAssignment
--   operation or the RejectAssignment operation, if the Requester approved
--   or rejected the assignment and specified feedback.
[$sel:requesterFeedback:Assignment'] :: Assignment -> Maybe Text

-- | The date and time of the deadline for the assignment. This value is
--   derived from the deadline specification for the HIT and the date and
--   time the Worker accepted the HIT.
[$sel:deadline:Assignment'] :: Assignment -> Maybe POSIX

-- | If the Worker has submitted results and the Requester has approved the
--   results, ApprovalTime is the date and time the Requester approved the
--   results. This value is omitted from the assignment if the Requester
--   has not yet approved the results.
[$sel:approvalTime:Assignment'] :: Assignment -> Maybe POSIX

-- | If the Worker has submitted results and the Requester has rejected the
--   results, RejectionTime is the date and time the Requester rejected the
--   results.
[$sel:rejectionTime:Assignment'] :: Assignment -> Maybe POSIX

-- | If results have been submitted, AutoApprovalTime is the date and time
--   the results of the assignment results are considered Approved
--   automatically if they have not already been explicitly approved or
--   rejected by the Requester. This value is derived from the
--   auto-approval delay specified by the Requester in the HIT. This value
--   is omitted from the assignment if the Worker has not yet submitted
--   results.
[$sel:autoApprovalTime:Assignment'] :: Assignment -> Maybe POSIX

-- | The ID of the HIT.
[$sel:hITId:Assignment'] :: Assignment -> Maybe Text

-- | The ID of the Worker who accepted the HIT.
[$sel:workerId:Assignment'] :: Assignment -> Maybe Text

-- | A unique identifier for the assignment.
[$sel:assignmentId:Assignment'] :: Assignment -> Maybe Text

-- | If the Worker has submitted results, SubmitTime is the date and time
--   the assignment was submitted. This value is omitted from the
--   assignment if the Worker has not yet submitted results.
[$sel:submitTime:Assignment'] :: Assignment -> Maybe POSIX

-- | Create a value of <a>Assignment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acceptTime:Assignment'</a>, <a>assignment_acceptTime</a> - The
--   date and time the Worker accepted the assignment.
--   
--   <a>$sel:answer:Assignment'</a>, <a>assignment_answer</a> - The
--   Worker's answers submitted for the HIT contained in a
--   QuestionFormAnswers document, if the Worker provides an answer. If the
--   Worker does not provide any answers, Answer may contain a
--   QuestionFormAnswers document, or Answer may be empty.
--   
--   <a>$sel:assignmentStatus:Assignment'</a>,
--   <a>assignment_assignmentStatus</a> - The status of the assignment.
--   
--   <a>$sel:requesterFeedback:Assignment'</a>,
--   <a>assignment_requesterFeedback</a> - The feedback string included
--   with the call to the ApproveAssignment operation or the
--   RejectAssignment operation, if the Requester approved or rejected the
--   assignment and specified feedback.
--   
--   <a>$sel:deadline:Assignment'</a>, <a>assignment_deadline</a> - The
--   date and time of the deadline for the assignment. This value is
--   derived from the deadline specification for the HIT and the date and
--   time the Worker accepted the HIT.
--   
--   <a>$sel:approvalTime:Assignment'</a>, <a>assignment_approvalTime</a> -
--   If the Worker has submitted results and the Requester has approved the
--   results, ApprovalTime is the date and time the Requester approved the
--   results. This value is omitted from the assignment if the Requester
--   has not yet approved the results.
--   
--   <a>$sel:rejectionTime:Assignment'</a>, <a>assignment_rejectionTime</a>
--   - If the Worker has submitted results and the Requester has rejected
--   the results, RejectionTime is the date and time the Requester rejected
--   the results.
--   
--   <a>$sel:autoApprovalTime:Assignment'</a>,
--   <a>assignment_autoApprovalTime</a> - If results have been submitted,
--   AutoApprovalTime is the date and time the results of the assignment
--   results are considered Approved automatically if they have not already
--   been explicitly approved or rejected by the Requester. This value is
--   derived from the auto-approval delay specified by the Requester in the
--   HIT. This value is omitted from the assignment if the Worker has not
--   yet submitted results.
--   
--   <a>$sel:hITId:Assignment'</a>, <a>assignment_hITId</a> - The ID of the
--   HIT.
--   
--   <a>$sel:workerId:Assignment'</a>, <a>assignment_workerId</a> - The ID
--   of the Worker who accepted the HIT.
--   
--   <a>$sel:assignmentId:Assignment'</a>, <a>assignment_assignmentId</a> -
--   A unique identifier for the assignment.
--   
--   <a>$sel:submitTime:Assignment'</a>, <a>assignment_submitTime</a> - If
--   the Worker has submitted results, SubmitTime is the date and time the
--   assignment was submitted. This value is omitted from the assignment if
--   the Worker has not yet submitted results.
newAssignment :: Assignment

-- | The date and time the Worker accepted the assignment.
assignment_acceptTime :: Lens' Assignment (Maybe UTCTime)

-- | The Worker's answers submitted for the HIT contained in a
--   QuestionFormAnswers document, if the Worker provides an answer. If the
--   Worker does not provide any answers, Answer may contain a
--   QuestionFormAnswers document, or Answer may be empty.
assignment_answer :: Lens' Assignment (Maybe Text)

-- | The status of the assignment.
assignment_assignmentStatus :: Lens' Assignment (Maybe AssignmentStatus)

-- | The feedback string included with the call to the ApproveAssignment
--   operation or the RejectAssignment operation, if the Requester approved
--   or rejected the assignment and specified feedback.
assignment_requesterFeedback :: Lens' Assignment (Maybe Text)

-- | The date and time of the deadline for the assignment. This value is
--   derived from the deadline specification for the HIT and the date and
--   time the Worker accepted the HIT.
assignment_deadline :: Lens' Assignment (Maybe UTCTime)

-- | If the Worker has submitted results and the Requester has approved the
--   results, ApprovalTime is the date and time the Requester approved the
--   results. This value is omitted from the assignment if the Requester
--   has not yet approved the results.
assignment_approvalTime :: Lens' Assignment (Maybe UTCTime)

-- | If the Worker has submitted results and the Requester has rejected the
--   results, RejectionTime is the date and time the Requester rejected the
--   results.
assignment_rejectionTime :: Lens' Assignment (Maybe UTCTime)

-- | If results have been submitted, AutoApprovalTime is the date and time
--   the results of the assignment results are considered Approved
--   automatically if they have not already been explicitly approved or
--   rejected by the Requester. This value is derived from the
--   auto-approval delay specified by the Requester in the HIT. This value
--   is omitted from the assignment if the Worker has not yet submitted
--   results.
assignment_autoApprovalTime :: Lens' Assignment (Maybe UTCTime)

-- | The ID of the HIT.
assignment_hITId :: Lens' Assignment (Maybe Text)

-- | The ID of the Worker who accepted the HIT.
assignment_workerId :: Lens' Assignment (Maybe Text)

-- | A unique identifier for the assignment.
assignment_assignmentId :: Lens' Assignment (Maybe Text)

-- | If the Worker has submitted results, SubmitTime is the date and time
--   the assignment was submitted. This value is omitted from the
--   assignment if the Worker has not yet submitted results.
assignment_submitTime :: Lens' Assignment (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.Assignment.Assignment
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.Assignment.Assignment
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.Assignment.Assignment
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.Assignment.Assignment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.Assignment.Assignment
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.Assignment.Assignment
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.Assignment.Assignment


module Amazonka.MechanicalTurk.Types.BonusPayment

-- | An object representing a Bonus payment paid to a Worker.
--   
--   <i>See:</i> <a>newBonusPayment</a> smart constructor.
data BonusPayment
BonusPayment' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> BonusPayment

-- | The Reason text given when the bonus was granted, if any.
[$sel:reason:BonusPayment'] :: BonusPayment -> Maybe Text

-- | The date and time of when the bonus was granted.
[$sel:grantTime:BonusPayment'] :: BonusPayment -> Maybe POSIX

-- | The ID of the Worker to whom the bonus was paid.
[$sel:workerId:BonusPayment'] :: BonusPayment -> Maybe Text

-- | The ID of the assignment associated with this bonus payment.
[$sel:assignmentId:BonusPayment'] :: BonusPayment -> Maybe Text
[$sel:bonusAmount:BonusPayment'] :: BonusPayment -> Maybe Text

-- | Create a value of <a>BonusPayment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:BonusPayment'</a>, <a>bonusPayment_reason</a> - The
--   Reason text given when the bonus was granted, if any.
--   
--   <a>$sel:grantTime:BonusPayment'</a>, <a>bonusPayment_grantTime</a> -
--   The date and time of when the bonus was granted.
--   
--   <a>$sel:workerId:BonusPayment'</a>, <a>bonusPayment_workerId</a> - The
--   ID of the Worker to whom the bonus was paid.
--   
--   <a>$sel:assignmentId:BonusPayment'</a>,
--   <a>bonusPayment_assignmentId</a> - The ID of the assignment associated
--   with this bonus payment.
--   
--   <a>$sel:bonusAmount:BonusPayment'</a>, <a>bonusPayment_bonusAmount</a>
--   - Undocumented member.
newBonusPayment :: BonusPayment

-- | The Reason text given when the bonus was granted, if any.
bonusPayment_reason :: Lens' BonusPayment (Maybe Text)

-- | The date and time of when the bonus was granted.
bonusPayment_grantTime :: Lens' BonusPayment (Maybe UTCTime)

-- | The ID of the Worker to whom the bonus was paid.
bonusPayment_workerId :: Lens' BonusPayment (Maybe Text)

-- | The ID of the assignment associated with this bonus payment.
bonusPayment_assignmentId :: Lens' BonusPayment (Maybe Text)

-- | Undocumented member.
bonusPayment_bonusAmount :: Lens' BonusPayment (Maybe Text)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.BonusPayment.BonusPayment
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.BonusPayment.BonusPayment
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.BonusPayment.BonusPayment
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.BonusPayment.BonusPayment
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.BonusPayment.BonusPayment
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.BonusPayment.BonusPayment
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.BonusPayment.BonusPayment


module Amazonka.MechanicalTurk.Types.Comparator
newtype Comparator
Comparator' :: Text -> Comparator
[fromComparator] :: Comparator -> Text
pattern Comparator_DoesNotExist :: Comparator
pattern Comparator_EqualTo :: Comparator
pattern Comparator_Exists :: Comparator
pattern Comparator_GreaterThan :: Comparator
pattern Comparator_GreaterThanOrEqualTo :: Comparator
pattern Comparator_In :: Comparator
pattern Comparator_LessThan :: Comparator
pattern Comparator_LessThanOrEqualTo :: Comparator
pattern Comparator_NotEqualTo :: Comparator
pattern Comparator_NotIn :: Comparator
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.Comparator.Comparator
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.Comparator.Comparator


module Amazonka.MechanicalTurk.Types.EventType
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_AssignmentAbandoned :: EventType
pattern EventType_AssignmentAccepted :: EventType
pattern EventType_AssignmentApproved :: EventType
pattern EventType_AssignmentRejected :: EventType
pattern EventType_AssignmentReturned :: EventType
pattern EventType_AssignmentSubmitted :: EventType
pattern EventType_HITCreated :: EventType
pattern EventType_HITDisposed :: EventType
pattern EventType_HITExpired :: EventType
pattern EventType_HITExtended :: EventType
pattern EventType_HITReviewable :: EventType
pattern EventType_Ping :: EventType
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.EventType.EventType
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.EventType.EventType
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.EventType.EventType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.EventType.EventType
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.EventType.EventType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.EventType.EventType
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.EventType.EventType
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.EventType.EventType
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.EventType.EventType
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.EventType.EventType
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.EventType.EventType
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.EventType.EventType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.EventType.EventType
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.EventType.EventType
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.EventType.EventType
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.EventType.EventType
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.EventType.EventType
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.EventType.EventType
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.EventType.EventType


module Amazonka.MechanicalTurk.Types.HITAccessActions
newtype HITAccessActions
HITAccessActions' :: Text -> HITAccessActions
[fromHITAccessActions] :: HITAccessActions -> Text
pattern HITAccessActions_Accept :: HITAccessActions
pattern HITAccessActions_DiscoverPreviewAndAccept :: HITAccessActions
pattern HITAccessActions_PreviewAndAccept :: HITAccessActions
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.HITAccessActions.HITAccessActions


module Amazonka.MechanicalTurk.Types.HITLayoutParameter

-- | The HITLayoutParameter data structure defines parameter values used
--   with a HITLayout. A HITLayout is a reusable Amazon Mechanical Turk
--   project template used to provide Human Intelligence Task (HIT)
--   question data for CreateHIT.
--   
--   <i>See:</i> <a>newHITLayoutParameter</a> smart constructor.
data HITLayoutParameter
HITLayoutParameter' :: Text -> Text -> HITLayoutParameter

-- | The name of the parameter in the HITLayout.
[$sel:name:HITLayoutParameter'] :: HITLayoutParameter -> Text

-- | The value substituted for the parameter referenced in the HITLayout.
[$sel:value:HITLayoutParameter'] :: HITLayoutParameter -> Text

-- | Create a value of <a>HITLayoutParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:HITLayoutParameter'</a>, <a>hITLayoutParameter_name</a> -
--   The name of the parameter in the HITLayout.
--   
--   <a>$sel:value:HITLayoutParameter'</a>, <a>hITLayoutParameter_value</a>
--   - The value substituted for the parameter referenced in the HITLayout.
newHITLayoutParameter :: Text -> Text -> HITLayoutParameter

-- | The name of the parameter in the HITLayout.
hITLayoutParameter_name :: Lens' HITLayoutParameter Text

-- | The value substituted for the parameter referenced in the HITLayout.
hITLayoutParameter_value :: Lens' HITLayoutParameter Text
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.HITLayoutParameter.HITLayoutParameter
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.HITLayoutParameter.HITLayoutParameter
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.HITLayoutParameter.HITLayoutParameter
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.HITLayoutParameter.HITLayoutParameter
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.HITLayoutParameter.HITLayoutParameter
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.HITLayoutParameter.HITLayoutParameter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.HITLayoutParameter.HITLayoutParameter


module Amazonka.MechanicalTurk.Types.HITReviewStatus
newtype HITReviewStatus
HITReviewStatus' :: Text -> HITReviewStatus
[fromHITReviewStatus] :: HITReviewStatus -> Text
pattern HITReviewStatus_MarkedForReview :: HITReviewStatus
pattern HITReviewStatus_NotReviewed :: HITReviewStatus
pattern HITReviewStatus_ReviewedAppropriate :: HITReviewStatus
pattern HITReviewStatus_ReviewedInappropriate :: HITReviewStatus
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.HITReviewStatus.HITReviewStatus


module Amazonka.MechanicalTurk.Types.HITStatus
newtype HITStatus
HITStatus' :: Text -> HITStatus
[fromHITStatus] :: HITStatus -> Text
pattern HITStatus_Assignable :: HITStatus
pattern HITStatus_Disposed :: HITStatus
pattern HITStatus_Reviewable :: HITStatus
pattern HITStatus_Reviewing :: HITStatus
pattern HITStatus_Unassignable :: HITStatus
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.HITStatus.HITStatus
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.HITStatus.HITStatus


module Amazonka.MechanicalTurk.Types.Locale

-- | The Locale data structure represents a geographical region or
--   location.
--   
--   <i>See:</i> <a>newLocale</a> smart constructor.
data Locale
Locale' :: Maybe Text -> Text -> Locale

-- | The state or subdivision of the locale. A valid ISO 3166-2 subdivision
--   code. For example, the code WA refers to the state of Washington.
[$sel:subdivision:Locale'] :: Locale -> Maybe Text

-- | The country of the locale. Must be a valid ISO 3166 country code. For
--   example, the code US refers to the United States of America.
[$sel:country:Locale'] :: Locale -> Text

-- | Create a value of <a>Locale</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subdivision:Locale'</a>, <a>locale_subdivision</a> - The state
--   or subdivision of the locale. A valid ISO 3166-2 subdivision code. For
--   example, the code WA refers to the state of Washington.
--   
--   <a>$sel:country:Locale'</a>, <a>locale_country</a> - The country of
--   the locale. Must be a valid ISO 3166 country code. For example, the
--   code US refers to the United States of America.
newLocale :: Text -> Locale

-- | The state or subdivision of the locale. A valid ISO 3166-2 subdivision
--   code. For example, the code WA refers to the state of Washington.
locale_subdivision :: Lens' Locale (Maybe Text)

-- | The country of the locale. Must be a valid ISO 3166 country code. For
--   example, the code US refers to the United States of America.
locale_country :: Lens' Locale Text
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.Locale.Locale
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.Locale.Locale
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.Locale.Locale
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.Locale.Locale
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.Locale.Locale
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.Locale.Locale
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.Locale.Locale
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.Locale.Locale


module Amazonka.MechanicalTurk.Types.NotificationTransport
newtype NotificationTransport
NotificationTransport' :: Text -> NotificationTransport
[fromNotificationTransport] :: NotificationTransport -> Text
pattern NotificationTransport_Email :: NotificationTransport
pattern NotificationTransport_SNS :: NotificationTransport
pattern NotificationTransport_SQS :: NotificationTransport
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.NotificationTransport.NotificationTransport


module Amazonka.MechanicalTurk.Types.NotificationSpecification

-- | The NotificationSpecification data structure describes a HIT event
--   notification for a HIT type.
--   
--   <i>See:</i> <a>newNotificationSpecification</a> smart constructor.
data NotificationSpecification
NotificationSpecification' :: Text -> NotificationTransport -> Text -> [EventType] -> NotificationSpecification

-- | The target for notification messages. The Destination’s format is
--   determined by the specified Transport:
--   
--   <ul>
--   <li>When Transport is Email, the Destination is your email
--   address.</li>
--   <li>When Transport is SQS, the Destination is your queue URL.</li>
--   <li>When Transport is SNS, the Destination is the ARN of your
--   topic.</li>
--   </ul>
[$sel:destination:NotificationSpecification'] :: NotificationSpecification -> Text

-- | The method Amazon Mechanical Turk uses to send the notification. Valid
--   Values: Email | SQS | SNS.
[$sel:transport:NotificationSpecification'] :: NotificationSpecification -> NotificationTransport

-- | The version of the Notification API to use. Valid value is 2006-05-05.
[$sel:version:NotificationSpecification'] :: NotificationSpecification -> Text

-- | The list of events that should cause notifications to be sent. Valid
--   Values: AssignmentAccepted | AssignmentAbandoned | AssignmentReturned
--   | AssignmentSubmitted | AssignmentRejected | AssignmentApproved |
--   HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired |
--   Ping. The Ping event is only valid for the SendTestEventNotification
--   operation.
[$sel:eventTypes:NotificationSpecification'] :: NotificationSpecification -> [EventType]

-- | Create a value of <a>NotificationSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:NotificationSpecification'</a>,
--   <a>notificationSpecification_destination</a> - The target for
--   notification messages. The Destination’s format is determined by the
--   specified Transport:
--   
--   <ul>
--   <li>When Transport is Email, the Destination is your email
--   address.</li>
--   <li>When Transport is SQS, the Destination is your queue URL.</li>
--   <li>When Transport is SNS, the Destination is the ARN of your
--   topic.</li>
--   </ul>
--   
--   <a>$sel:transport:NotificationSpecification'</a>,
--   <a>notificationSpecification_transport</a> - The method Amazon
--   Mechanical Turk uses to send the notification. Valid Values: Email |
--   SQS | SNS.
--   
--   <a>$sel:version:NotificationSpecification'</a>,
--   <a>notificationSpecification_version</a> - The version of the
--   Notification API to use. Valid value is 2006-05-05.
--   
--   <a>$sel:eventTypes:NotificationSpecification'</a>,
--   <a>notificationSpecification_eventTypes</a> - The list of events that
--   should cause notifications to be sent. Valid Values:
--   AssignmentAccepted | AssignmentAbandoned | AssignmentReturned |
--   AssignmentSubmitted | AssignmentRejected | AssignmentApproved |
--   HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired |
--   Ping. The Ping event is only valid for the SendTestEventNotification
--   operation.
newNotificationSpecification :: Text -> NotificationTransport -> Text -> NotificationSpecification

-- | The target for notification messages. The Destination’s format is
--   determined by the specified Transport:
--   
--   <ul>
--   <li>When Transport is Email, the Destination is your email
--   address.</li>
--   <li>When Transport is SQS, the Destination is your queue URL.</li>
--   <li>When Transport is SNS, the Destination is the ARN of your
--   topic.</li>
--   </ul>
notificationSpecification_destination :: Lens' NotificationSpecification Text

-- | The method Amazon Mechanical Turk uses to send the notification. Valid
--   Values: Email | SQS | SNS.
notificationSpecification_transport :: Lens' NotificationSpecification NotificationTransport

-- | The version of the Notification API to use. Valid value is 2006-05-05.
notificationSpecification_version :: Lens' NotificationSpecification Text

-- | The list of events that should cause notifications to be sent. Valid
--   Values: AssignmentAccepted | AssignmentAbandoned | AssignmentReturned
--   | AssignmentSubmitted | AssignmentRejected | AssignmentApproved |
--   HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired |
--   Ping. The Ping event is only valid for the SendTestEventNotification
--   operation.
notificationSpecification_eventTypes :: Lens' NotificationSpecification [EventType]
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.NotificationSpecification.NotificationSpecification
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.NotificationSpecification.NotificationSpecification
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.NotificationSpecification.NotificationSpecification
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.NotificationSpecification.NotificationSpecification
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.NotificationSpecification.NotificationSpecification
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.NotificationSpecification.NotificationSpecification
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.NotificationSpecification.NotificationSpecification


module Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode
newtype NotifyWorkersFailureCode
NotifyWorkersFailureCode' :: Text -> NotifyWorkersFailureCode
[fromNotifyWorkersFailureCode] :: NotifyWorkersFailureCode -> Text
pattern NotifyWorkersFailureCode_HardFailure :: NotifyWorkersFailureCode
pattern NotifyWorkersFailureCode_SoftFailure :: NotifyWorkersFailureCode
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.NotifyWorkersFailureCode.NotifyWorkersFailureCode


module Amazonka.MechanicalTurk.Types.NotifyWorkersFailureStatus

-- | When MTurk encounters an issue with notifying the Workers you
--   specified, it returns back this object with failure details.
--   
--   <i>See:</i> <a>newNotifyWorkersFailureStatus</a> smart constructor.
data NotifyWorkersFailureStatus
NotifyWorkersFailureStatus' :: Maybe Text -> Maybe NotifyWorkersFailureCode -> Maybe Text -> NotifyWorkersFailureStatus

-- | A message detailing the reason the Worker could not be notified.
[$sel:notifyWorkersFailureMessage:NotifyWorkersFailureStatus'] :: NotifyWorkersFailureStatus -> Maybe Text

-- | Encoded value for the failure type.
[$sel:notifyWorkersFailureCode:NotifyWorkersFailureStatus'] :: NotifyWorkersFailureStatus -> Maybe NotifyWorkersFailureCode

-- | The ID of the Worker.
[$sel:workerId:NotifyWorkersFailureStatus'] :: NotifyWorkersFailureStatus -> Maybe Text

-- | Create a value of <a>NotifyWorkersFailureStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyWorkersFailureMessage:NotifyWorkersFailureStatus'</a>,
--   <a>notifyWorkersFailureStatus_notifyWorkersFailureMessage</a> - A
--   message detailing the reason the Worker could not be notified.
--   
--   <a>$sel:notifyWorkersFailureCode:NotifyWorkersFailureStatus'</a>,
--   <a>notifyWorkersFailureStatus_notifyWorkersFailureCode</a> - Encoded
--   value for the failure type.
--   
--   <a>$sel:workerId:NotifyWorkersFailureStatus'</a>,
--   <a>notifyWorkersFailureStatus_workerId</a> - The ID of the Worker.
newNotifyWorkersFailureStatus :: NotifyWorkersFailureStatus

-- | A message detailing the reason the Worker could not be notified.
notifyWorkersFailureStatus_notifyWorkersFailureMessage :: Lens' NotifyWorkersFailureStatus (Maybe Text)

-- | Encoded value for the failure type.
notifyWorkersFailureStatus_notifyWorkersFailureCode :: Lens' NotifyWorkersFailureStatus (Maybe NotifyWorkersFailureCode)

-- | The ID of the Worker.
notifyWorkersFailureStatus_workerId :: Lens' NotifyWorkersFailureStatus (Maybe Text)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.NotifyWorkersFailureStatus.NotifyWorkersFailureStatus
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.NotifyWorkersFailureStatus.NotifyWorkersFailureStatus
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.NotifyWorkersFailureStatus.NotifyWorkersFailureStatus
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.NotifyWorkersFailureStatus.NotifyWorkersFailureStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.NotifyWorkersFailureStatus.NotifyWorkersFailureStatus
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.NotifyWorkersFailureStatus.NotifyWorkersFailureStatus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.NotifyWorkersFailureStatus.NotifyWorkersFailureStatus


module Amazonka.MechanicalTurk.Types.ParameterMapEntry

-- | This data structure is the data type for the AnswerKey parameter of
--   the ScoreMyKnownAnswers/2011-09-01 Review Policy.
--   
--   <i>See:</i> <a>newParameterMapEntry</a> smart constructor.
data ParameterMapEntry
ParameterMapEntry' :: Maybe [Text] -> Maybe Text -> ParameterMapEntry

-- | The list of answers to the question specified in the MapEntry Key
--   element. The Worker must match all values in order for the answer to
--   be scored correctly.
[$sel:values:ParameterMapEntry'] :: ParameterMapEntry -> Maybe [Text]

-- | The QuestionID from the HIT that is used to identify which question
--   requires Mechanical Turk to score as part of the
--   ScoreMyKnownAnswers/2011-09-01 Review Policy.
[$sel:key:ParameterMapEntry'] :: ParameterMapEntry -> Maybe Text

-- | Create a value of <a>ParameterMapEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:ParameterMapEntry'</a>, <a>parameterMapEntry_values</a>
--   - The list of answers to the question specified in the MapEntry Key
--   element. The Worker must match all values in order for the answer to
--   be scored correctly.
--   
--   <a>$sel:key:ParameterMapEntry'</a>, <a>parameterMapEntry_key</a> - The
--   QuestionID from the HIT that is used to identify which question
--   requires Mechanical Turk to score as part of the
--   ScoreMyKnownAnswers/2011-09-01 Review Policy.
newParameterMapEntry :: ParameterMapEntry

-- | The list of answers to the question specified in the MapEntry Key
--   element. The Worker must match all values in order for the answer to
--   be scored correctly.
parameterMapEntry_values :: Lens' ParameterMapEntry (Maybe [Text])

-- | The QuestionID from the HIT that is used to identify which question
--   requires Mechanical Turk to score as part of the
--   ScoreMyKnownAnswers/2011-09-01 Review Policy.
parameterMapEntry_key :: Lens' ParameterMapEntry (Maybe Text)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.ParameterMapEntry.ParameterMapEntry
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.ParameterMapEntry.ParameterMapEntry
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.ParameterMapEntry.ParameterMapEntry
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.ParameterMapEntry.ParameterMapEntry
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.ParameterMapEntry.ParameterMapEntry
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.ParameterMapEntry.ParameterMapEntry
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.ParameterMapEntry.ParameterMapEntry
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.ParameterMapEntry.ParameterMapEntry


module Amazonka.MechanicalTurk.Types.PolicyParameter

-- | Name of the parameter from the Review policy.
--   
--   <i>See:</i> <a>newPolicyParameter</a> smart constructor.
data PolicyParameter
PolicyParameter' :: Maybe [Text] -> Maybe [ParameterMapEntry] -> Maybe Text -> PolicyParameter

-- | The list of values of the Parameter
[$sel:values:PolicyParameter'] :: PolicyParameter -> Maybe [Text]

-- | List of ParameterMapEntry objects.
[$sel:mapEntries:PolicyParameter'] :: PolicyParameter -> Maybe [ParameterMapEntry]

-- | Name of the parameter from the list of Review Polices.
[$sel:key:PolicyParameter'] :: PolicyParameter -> Maybe Text

-- | Create a value of <a>PolicyParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PolicyParameter'</a>, <a>policyParameter_values</a> -
--   The list of values of the Parameter
--   
--   <a>$sel:mapEntries:PolicyParameter'</a>,
--   <a>policyParameter_mapEntries</a> - List of ParameterMapEntry objects.
--   
--   <a>$sel:key:PolicyParameter'</a>, <a>policyParameter_key</a> - Name of
--   the parameter from the list of Review Polices.
newPolicyParameter :: PolicyParameter

-- | The list of values of the Parameter
policyParameter_values :: Lens' PolicyParameter (Maybe [Text])

-- | List of ParameterMapEntry objects.
policyParameter_mapEntries :: Lens' PolicyParameter (Maybe [ParameterMapEntry])

-- | Name of the parameter from the list of Review Polices.
policyParameter_key :: Lens' PolicyParameter (Maybe Text)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.PolicyParameter.PolicyParameter
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.PolicyParameter.PolicyParameter
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.PolicyParameter.PolicyParameter
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.PolicyParameter.PolicyParameter
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.PolicyParameter.PolicyParameter
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.PolicyParameter.PolicyParameter
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.PolicyParameter.PolicyParameter
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.PolicyParameter.PolicyParameter


module Amazonka.MechanicalTurk.Types.QualificationRequest

-- | The QualificationRequest data structure represents a request a Worker
--   has made for a Qualification.
--   
--   <i>See:</i> <a>newQualificationRequest</a> smart constructor.
data QualificationRequest
QualificationRequest' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> QualificationRequest

-- | The ID of the Qualification request, a unique identifier generated
--   when the request was submitted.
[$sel:qualificationRequestId:QualificationRequest'] :: QualificationRequest -> Maybe Text

-- | The contents of the Qualification test that was presented to the
--   Worker, if the type has a test and the Worker has submitted answers.
--   This value is identical to the QuestionForm associated with the
--   Qualification type at the time the Worker requests the Qualification.
[$sel:test:QualificationRequest'] :: QualificationRequest -> Maybe Text

-- | The ID of the Qualification type the Worker is requesting, as returned
--   by the CreateQualificationType operation.
[$sel:qualificationTypeId:QualificationRequest'] :: QualificationRequest -> Maybe Text

-- | The Worker's answers for the Qualification type's test contained in a
--   QuestionFormAnswers document, if the type has a test and the Worker
--   has submitted answers. If the Worker does not provide any answers,
--   Answer may be empty.
[$sel:answer:QualificationRequest'] :: QualificationRequest -> Maybe Text

-- | The ID of the Worker requesting the Qualification.
[$sel:workerId:QualificationRequest'] :: QualificationRequest -> Maybe Text

-- | The date and time the Qualification request had a status of Submitted.
--   This is either the time the Worker submitted answers for a
--   Qualification test, or the time the Worker requested the Qualification
--   if the Qualification type does not have a test.
[$sel:submitTime:QualificationRequest'] :: QualificationRequest -> Maybe POSIX

-- | Create a value of <a>QualificationRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationRequestId:QualificationRequest'</a>,
--   <a>qualificationRequest_qualificationRequestId</a> - The ID of the
--   Qualification request, a unique identifier generated when the request
--   was submitted.
--   
--   <a>$sel:test:QualificationRequest'</a>,
--   <a>qualificationRequest_test</a> - The contents of the Qualification
--   test that was presented to the Worker, if the type has a test and the
--   Worker has submitted answers. This value is identical to the
--   QuestionForm associated with the Qualification type at the time the
--   Worker requests the Qualification.
--   
--   <a>$sel:qualificationTypeId:QualificationRequest'</a>,
--   <a>qualificationRequest_qualificationTypeId</a> - The ID of the
--   Qualification type the Worker is requesting, as returned by the
--   CreateQualificationType operation.
--   
--   <a>$sel:answer:QualificationRequest'</a>,
--   <a>qualificationRequest_answer</a> - The Worker's answers for the
--   Qualification type's test contained in a QuestionFormAnswers document,
--   if the type has a test and the Worker has submitted answers. If the
--   Worker does not provide any answers, Answer may be empty.
--   
--   <a>$sel:workerId:QualificationRequest'</a>,
--   <a>qualificationRequest_workerId</a> - The ID of the Worker requesting
--   the Qualification.
--   
--   <a>$sel:submitTime:QualificationRequest'</a>,
--   <a>qualificationRequest_submitTime</a> - The date and time the
--   Qualification request had a status of Submitted. This is either the
--   time the Worker submitted answers for a Qualification test, or the
--   time the Worker requested the Qualification if the Qualification type
--   does not have a test.
newQualificationRequest :: QualificationRequest

-- | The ID of the Qualification request, a unique identifier generated
--   when the request was submitted.
qualificationRequest_qualificationRequestId :: Lens' QualificationRequest (Maybe Text)

-- | The contents of the Qualification test that was presented to the
--   Worker, if the type has a test and the Worker has submitted answers.
--   This value is identical to the QuestionForm associated with the
--   Qualification type at the time the Worker requests the Qualification.
qualificationRequest_test :: Lens' QualificationRequest (Maybe Text)

-- | The ID of the Qualification type the Worker is requesting, as returned
--   by the CreateQualificationType operation.
qualificationRequest_qualificationTypeId :: Lens' QualificationRequest (Maybe Text)

-- | The Worker's answers for the Qualification type's test contained in a
--   QuestionFormAnswers document, if the type has a test and the Worker
--   has submitted answers. If the Worker does not provide any answers,
--   Answer may be empty.
qualificationRequest_answer :: Lens' QualificationRequest (Maybe Text)

-- | The ID of the Worker requesting the Qualification.
qualificationRequest_workerId :: Lens' QualificationRequest (Maybe Text)

-- | The date and time the Qualification request had a status of Submitted.
--   This is either the time the Worker submitted answers for a
--   Qualification test, or the time the Worker requested the Qualification
--   if the Qualification type does not have a test.
qualificationRequest_submitTime :: Lens' QualificationRequest (Maybe UTCTime)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.QualificationRequest.QualificationRequest
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.QualificationRequest.QualificationRequest
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.QualificationRequest.QualificationRequest
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.QualificationRequest.QualificationRequest
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.QualificationRequest.QualificationRequest
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.QualificationRequest.QualificationRequest
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.QualificationRequest.QualificationRequest


module Amazonka.MechanicalTurk.Types.QualificationRequirement

-- | The QualificationRequirement data structure describes a Qualification
--   that a Worker must have before the Worker is allowed to accept a HIT.
--   A requirement may optionally state that a Worker must have the
--   Qualification in order to preview the HIT, or see the HIT in search
--   results.
--   
--   <i>See:</i> <a>newQualificationRequirement</a> smart constructor.
data QualificationRequirement
QualificationRequirement' :: Maybe [Locale] -> Maybe HITAccessActions -> Maybe Bool -> Maybe [Int] -> Text -> Comparator -> QualificationRequirement

-- | The locale value to compare against the Qualification's value. The
--   local value must be a valid ISO 3166 country code or supports ISO
--   3166-2 subdivisions. LocaleValue can only be used with a Worker_Locale
--   QualificationType ID. LocaleValue can only be used with the EqualTo,
--   NotEqualTo, In, and NotIn comparators. You must only use a single
--   LocaleValue element when using the EqualTo or NotEqualTo comparators.
--   When performing a set comparison by using the In or the NotIn
--   comparator, you can use up to 30 LocaleValue elements in a
--   QualificationRequirement data structure.
[$sel:localeValues:QualificationRequirement'] :: QualificationRequirement -> Maybe [Locale]

-- | Setting this attribute prevents Workers whose Qualifications do not
--   meet this QualificationRequirement from taking the specified action.
--   Valid arguments include "Accept" (Worker cannot accept the HIT, but
--   can preview the HIT and see it in their search results),
--   "PreviewAndAccept" (Worker cannot accept or preview the HIT, but can
--   see the HIT in their search results), and "DiscoverPreviewAndAccept"
--   (Worker cannot accept, preview, or see the HIT in their search
--   results). It's possible for you to create a HIT with multiple
--   QualificationRequirements (which can have different values for the
--   ActionGuarded attribute). In this case, the Worker is only permitted
--   to perform an action when they have met all QualificationRequirements
--   guarding the action. The actions in the order of least restrictive to
--   most restrictive are Discover, Preview and Accept. For example, if a
--   Worker meets all QualificationRequirements that are set to
--   DiscoverPreviewAndAccept, but do not meet all requirements that are
--   set with PreviewAndAccept, then the Worker will be able to Discover,
--   i.e. see the HIT in their search result, but will not be able to
--   Preview or Accept the HIT. ActionsGuarded should not be used in
--   combination with the <tt>RequiredToPreview</tt> field.
[$sel:actionsGuarded:QualificationRequirement'] :: QualificationRequirement -> Maybe HITAccessActions

-- | DEPRECATED: Use the <tt>ActionsGuarded</tt> field instead. If
--   RequiredToPreview is true, the question data for the HIT will not be
--   shown when a Worker whose Qualifications do not meet this requirement
--   tries to preview the HIT. That is, a Worker's Qualifications must meet
--   all of the requirements for which RequiredToPreview is true in order
--   to preview the HIT. If a Worker meets all of the requirements where
--   RequiredToPreview is true (or if there are no such requirements), but
--   does not meet all of the requirements for the HIT, the Worker will be
--   allowed to preview the HIT's question data, but will not be allowed to
--   accept and complete the HIT. The default is false. This should not be
--   used in combination with the <tt>ActionsGuarded</tt> field.
[$sel:requiredToPreview:QualificationRequirement'] :: QualificationRequirement -> Maybe Bool

-- | The integer value to compare against the Qualification's value.
--   IntegerValue must not be present if Comparator is Exists or
--   DoesNotExist. IntegerValue can only be used if the Qualification type
--   has an integer value; it cannot be used with the Worker_Locale
--   QualificationType ID. When performing a set comparison by using the In
--   or the NotIn comparator, you can use up to 15 IntegerValue elements in
--   a QualificationRequirement data structure.
[$sel:integerValues:QualificationRequirement'] :: QualificationRequirement -> Maybe [Int]

-- | The ID of the Qualification type for the requirement.
[$sel:qualificationTypeId:QualificationRequirement'] :: QualificationRequirement -> Text

-- | The kind of comparison to make against a Qualification's value. You
--   can compare a Qualification's value to an IntegerValue to see if it is
--   LessThan, LessThanOrEqualTo, GreaterThan, GreaterThanOrEqualTo,
--   EqualTo, or NotEqualTo the IntegerValue. You can compare it to a
--   LocaleValue to see if it is EqualTo, or NotEqualTo the LocaleValue.
--   You can check to see if the value is In or NotIn a set of IntegerValue
--   or LocaleValue values. Lastly, a Qualification requirement can also
--   test if a Qualification Exists or DoesNotExist in the user's profile,
--   regardless of its value.
[$sel:comparator:QualificationRequirement'] :: QualificationRequirement -> Comparator

-- | Create a value of <a>QualificationRequirement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:localeValues:QualificationRequirement'</a>,
--   <a>qualificationRequirement_localeValues</a> - The locale value to
--   compare against the Qualification's value. The local value must be a
--   valid ISO 3166 country code or supports ISO 3166-2 subdivisions.
--   LocaleValue can only be used with a Worker_Locale QualificationType
--   ID. LocaleValue can only be used with the EqualTo, NotEqualTo, In, and
--   NotIn comparators. You must only use a single LocaleValue element when
--   using the EqualTo or NotEqualTo comparators. When performing a set
--   comparison by using the In or the NotIn comparator, you can use up to
--   30 LocaleValue elements in a QualificationRequirement data structure.
--   
--   <a>$sel:actionsGuarded:QualificationRequirement'</a>,
--   <a>qualificationRequirement_actionsGuarded</a> - Setting this
--   attribute prevents Workers whose Qualifications do not meet this
--   QualificationRequirement from taking the specified action. Valid
--   arguments include "Accept" (Worker cannot accept the HIT, but can
--   preview the HIT and see it in their search results),
--   "PreviewAndAccept" (Worker cannot accept or preview the HIT, but can
--   see the HIT in their search results), and "DiscoverPreviewAndAccept"
--   (Worker cannot accept, preview, or see the HIT in their search
--   results). It's possible for you to create a HIT with multiple
--   QualificationRequirements (which can have different values for the
--   ActionGuarded attribute). In this case, the Worker is only permitted
--   to perform an action when they have met all QualificationRequirements
--   guarding the action. The actions in the order of least restrictive to
--   most restrictive are Discover, Preview and Accept. For example, if a
--   Worker meets all QualificationRequirements that are set to
--   DiscoverPreviewAndAccept, but do not meet all requirements that are
--   set with PreviewAndAccept, then the Worker will be able to Discover,
--   i.e. see the HIT in their search result, but will not be able to
--   Preview or Accept the HIT. ActionsGuarded should not be used in
--   combination with the <tt>RequiredToPreview</tt> field.
--   
--   <a>$sel:requiredToPreview:QualificationRequirement'</a>,
--   <a>qualificationRequirement_requiredToPreview</a> - DEPRECATED: Use
--   the <tt>ActionsGuarded</tt> field instead. If RequiredToPreview is
--   true, the question data for the HIT will not be shown when a Worker
--   whose Qualifications do not meet this requirement tries to preview the
--   HIT. That is, a Worker's Qualifications must meet all of the
--   requirements for which RequiredToPreview is true in order to preview
--   the HIT. If a Worker meets all of the requirements where
--   RequiredToPreview is true (or if there are no such requirements), but
--   does not meet all of the requirements for the HIT, the Worker will be
--   allowed to preview the HIT's question data, but will not be allowed to
--   accept and complete the HIT. The default is false. This should not be
--   used in combination with the <tt>ActionsGuarded</tt> field.
--   
--   <a>$sel:integerValues:QualificationRequirement'</a>,
--   <a>qualificationRequirement_integerValues</a> - The integer value to
--   compare against the Qualification's value. IntegerValue must not be
--   present if Comparator is Exists or DoesNotExist. IntegerValue can only
--   be used if the Qualification type has an integer value; it cannot be
--   used with the Worker_Locale QualificationType ID. When performing a
--   set comparison by using the In or the NotIn comparator, you can use up
--   to 15 IntegerValue elements in a QualificationRequirement data
--   structure.
--   
--   <a>$sel:qualificationTypeId:QualificationRequirement'</a>,
--   <a>qualificationRequirement_qualificationTypeId</a> - The ID of the
--   Qualification type for the requirement.
--   
--   <a>$sel:comparator:QualificationRequirement'</a>,
--   <a>qualificationRequirement_comparator</a> - The kind of comparison to
--   make against a Qualification's value. You can compare a
--   Qualification's value to an IntegerValue to see if it is LessThan,
--   LessThanOrEqualTo, GreaterThan, GreaterThanOrEqualTo, EqualTo, or
--   NotEqualTo the IntegerValue. You can compare it to a LocaleValue to
--   see if it is EqualTo, or NotEqualTo the LocaleValue. You can check to
--   see if the value is In or NotIn a set of IntegerValue or LocaleValue
--   values. Lastly, a Qualification requirement can also test if a
--   Qualification Exists or DoesNotExist in the user's profile, regardless
--   of its value.
newQualificationRequirement :: Text -> Comparator -> QualificationRequirement

-- | The locale value to compare against the Qualification's value. The
--   local value must be a valid ISO 3166 country code or supports ISO
--   3166-2 subdivisions. LocaleValue can only be used with a Worker_Locale
--   QualificationType ID. LocaleValue can only be used with the EqualTo,
--   NotEqualTo, In, and NotIn comparators. You must only use a single
--   LocaleValue element when using the EqualTo or NotEqualTo comparators.
--   When performing a set comparison by using the In or the NotIn
--   comparator, you can use up to 30 LocaleValue elements in a
--   QualificationRequirement data structure.
qualificationRequirement_localeValues :: Lens' QualificationRequirement (Maybe [Locale])

-- | Setting this attribute prevents Workers whose Qualifications do not
--   meet this QualificationRequirement from taking the specified action.
--   Valid arguments include "Accept" (Worker cannot accept the HIT, but
--   can preview the HIT and see it in their search results),
--   "PreviewAndAccept" (Worker cannot accept or preview the HIT, but can
--   see the HIT in their search results), and "DiscoverPreviewAndAccept"
--   (Worker cannot accept, preview, or see the HIT in their search
--   results). It's possible for you to create a HIT with multiple
--   QualificationRequirements (which can have different values for the
--   ActionGuarded attribute). In this case, the Worker is only permitted
--   to perform an action when they have met all QualificationRequirements
--   guarding the action. The actions in the order of least restrictive to
--   most restrictive are Discover, Preview and Accept. For example, if a
--   Worker meets all QualificationRequirements that are set to
--   DiscoverPreviewAndAccept, but do not meet all requirements that are
--   set with PreviewAndAccept, then the Worker will be able to Discover,
--   i.e. see the HIT in their search result, but will not be able to
--   Preview or Accept the HIT. ActionsGuarded should not be used in
--   combination with the <tt>RequiredToPreview</tt> field.
qualificationRequirement_actionsGuarded :: Lens' QualificationRequirement (Maybe HITAccessActions)

-- | DEPRECATED: Use the <tt>ActionsGuarded</tt> field instead. If
--   RequiredToPreview is true, the question data for the HIT will not be
--   shown when a Worker whose Qualifications do not meet this requirement
--   tries to preview the HIT. That is, a Worker's Qualifications must meet
--   all of the requirements for which RequiredToPreview is true in order
--   to preview the HIT. If a Worker meets all of the requirements where
--   RequiredToPreview is true (or if there are no such requirements), but
--   does not meet all of the requirements for the HIT, the Worker will be
--   allowed to preview the HIT's question data, but will not be allowed to
--   accept and complete the HIT. The default is false. This should not be
--   used in combination with the <tt>ActionsGuarded</tt> field.
qualificationRequirement_requiredToPreview :: Lens' QualificationRequirement (Maybe Bool)

-- | The integer value to compare against the Qualification's value.
--   IntegerValue must not be present if Comparator is Exists or
--   DoesNotExist. IntegerValue can only be used if the Qualification type
--   has an integer value; it cannot be used with the Worker_Locale
--   QualificationType ID. When performing a set comparison by using the In
--   or the NotIn comparator, you can use up to 15 IntegerValue elements in
--   a QualificationRequirement data structure.
qualificationRequirement_integerValues :: Lens' QualificationRequirement (Maybe [Int])

-- | The ID of the Qualification type for the requirement.
qualificationRequirement_qualificationTypeId :: Lens' QualificationRequirement Text

-- | The kind of comparison to make against a Qualification's value. You
--   can compare a Qualification's value to an IntegerValue to see if it is
--   LessThan, LessThanOrEqualTo, GreaterThan, GreaterThanOrEqualTo,
--   EqualTo, or NotEqualTo the IntegerValue. You can compare it to a
--   LocaleValue to see if it is EqualTo, or NotEqualTo the LocaleValue.
--   You can check to see if the value is In or NotIn a set of IntegerValue
--   or LocaleValue values. Lastly, a Qualification requirement can also
--   test if a Qualification Exists or DoesNotExist in the user's profile,
--   regardless of its value.
qualificationRequirement_comparator :: Lens' QualificationRequirement Comparator
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.QualificationRequirement.QualificationRequirement
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.QualificationRequirement.QualificationRequirement
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.QualificationRequirement.QualificationRequirement
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.QualificationRequirement.QualificationRequirement
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.QualificationRequirement.QualificationRequirement
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.QualificationRequirement.QualificationRequirement
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.QualificationRequirement.QualificationRequirement
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.QualificationRequirement.QualificationRequirement


module Amazonka.MechanicalTurk.Types.HIT

-- | The HIT data structure represents a single HIT, including all the
--   information necessary for a Worker to accept and complete the HIT.
--   
--   <i>See:</i> <a>newHIT</a> smart constructor.
data HIT
HIT' :: Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe HITStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [QualificationRequirement] -> Maybe Text -> Maybe Text -> Maybe HITReviewStatus -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Integer -> HIT

-- | The date and time the HIT was created.
[$sel:creationTime:HIT'] :: HIT -> Maybe POSIX

-- | The ID of the HIT Group of this HIT.
[$sel:hITGroupId:HIT'] :: HIT -> Maybe Text

-- | The number of assignments for this HIT that are being previewed or
--   have been accepted by Workers, but have not yet been submitted,
--   returned, or abandoned.
[$sel:numberOfAssignmentsPending:HIT'] :: HIT -> Maybe Int

-- | The ID of the HIT type of this HIT
[$sel:hITTypeId:HIT'] :: HIT -> Maybe Text

-- | The date and time the HIT expires.
[$sel:expiration:HIT'] :: HIT -> Maybe POSIX

-- | The amount of time, in seconds, after the Worker submits an assignment
--   for the HIT that the results are automatically approved by Amazon
--   Mechanical Turk. This is the amount of time the Requester has to
--   reject an assignment submitted by a Worker before the assignment is
--   auto-approved and the Worker is paid.
[$sel:autoApprovalDelayInSeconds:HIT'] :: HIT -> Maybe Integer

-- | An arbitrary data field the Requester who created the HIT can use.
--   This field is visible only to the creator of the HIT.
[$sel:requesterAnnotation:HIT'] :: HIT -> Maybe Text

-- | The status of the HIT and its assignments. Valid Values are Assignable
--   | Unassignable | Reviewable | Reviewing | Disposed.
[$sel:hITStatus:HIT'] :: HIT -> Maybe HITStatus

-- | The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
[$sel:maxAssignments:HIT'] :: HIT -> Maybe Int

-- | The number of assignments for this HIT that have been approved or
--   rejected.
[$sel:numberOfAssignmentsCompleted:HIT'] :: HIT -> Maybe Int
[$sel:reward:HIT'] :: HIT -> Maybe Text

-- | One or more words or phrases that describe the HIT, separated by
--   commas. Search terms similar to the keywords of a HIT are more likely
--   to have the HIT in the search results.
[$sel:keywords:HIT'] :: HIT -> Maybe Text

-- | The ID of the HIT Layout of this HIT.
[$sel:hITLayoutId:HIT'] :: HIT -> Maybe Text

-- | Conditions that a Worker's Qualifications must meet in order to accept
--   the HIT. A HIT can have between zero and ten Qualification
--   requirements. All requirements must be met in order for a Worker to
--   accept the HIT. Additionally, other actions can be restricted using
--   the <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
[$sel:qualificationRequirements:HIT'] :: HIT -> Maybe [QualificationRequirement]

-- | The title of the HIT.
[$sel:title:HIT'] :: HIT -> Maybe Text

-- | A unique identifier for the HIT.
[$sel:hITId:HIT'] :: HIT -> Maybe Text

-- | Indicates the review status of the HIT. Valid Values are NotReviewed |
--   MarkedForReview | ReviewedAppropriate | ReviewedInappropriate.
[$sel:hITReviewStatus:HIT'] :: HIT -> Maybe HITReviewStatus

-- | The number of assignments for this HIT that are available for Workers
--   to accept.
[$sel:numberOfAssignmentsAvailable:HIT'] :: HIT -> Maybe Int

-- | A general description of the HIT.
[$sel:description:HIT'] :: HIT -> Maybe Text

-- | The data the Worker completing the HIT uses produce the results. This
--   is either either a QuestionForm, HTMLQuestion or an ExternalQuestion
--   data structure.
[$sel:question:HIT'] :: HIT -> Maybe Text

-- | The length of time, in seconds, that a Worker has to complete the HIT
--   after accepting it.
[$sel:assignmentDurationInSeconds:HIT'] :: HIT -> Maybe Integer

-- | Create a value of <a>HIT</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:HIT'</a>, <a>hit_creationTime</a> - The date and
--   time the HIT was created.
--   
--   <a>$sel:hITGroupId:HIT'</a>, <a>hit_hITGroupId</a> - The ID of the HIT
--   Group of this HIT.
--   
--   <a>$sel:numberOfAssignmentsPending:HIT'</a>,
--   <a>hit_numberOfAssignmentsPending</a> - The number of assignments for
--   this HIT that are being previewed or have been accepted by Workers,
--   but have not yet been submitted, returned, or abandoned.
--   
--   <a>$sel:hITTypeId:HIT'</a>, <a>hit_hITTypeId</a> - The ID of the HIT
--   type of this HIT
--   
--   <a>$sel:expiration:HIT'</a>, <a>hit_expiration</a> - The date and time
--   the HIT expires.
--   
--   <a>$sel:autoApprovalDelayInSeconds:HIT'</a>,
--   <a>hit_autoApprovalDelayInSeconds</a> - The amount of time, in
--   seconds, after the Worker submits an assignment for the HIT that the
--   results are automatically approved by Amazon Mechanical Turk. This is
--   the amount of time the Requester has to reject an assignment submitted
--   by a Worker before the assignment is auto-approved and the Worker is
--   paid.
--   
--   <a>$sel:requesterAnnotation:HIT'</a>, <a>hit_requesterAnnotation</a> -
--   An arbitrary data field the Requester who created the HIT can use.
--   This field is visible only to the creator of the HIT.
--   
--   <a>$sel:hITStatus:HIT'</a>, <a>hit_hITStatus</a> - The status of the
--   HIT and its assignments. Valid Values are Assignable | Unassignable |
--   Reviewable | Reviewing | Disposed.
--   
--   <a>$sel:maxAssignments:HIT'</a>, <a>hit_maxAssignments</a> - The
--   number of times the HIT can be accepted and completed before the HIT
--   becomes unavailable.
--   
--   <a>$sel:numberOfAssignmentsCompleted:HIT'</a>,
--   <a>hit_numberOfAssignmentsCompleted</a> - The number of assignments
--   for this HIT that have been approved or rejected.
--   
--   <a>$sel:reward:HIT'</a>, <a>hit_reward</a> - Undocumented member.
--   
--   <a>$sel:keywords:HIT'</a>, <a>hit_keywords</a> - One or more words or
--   phrases that describe the HIT, separated by commas. Search terms
--   similar to the keywords of a HIT are more likely to have the HIT in
--   the search results.
--   
--   <a>$sel:hITLayoutId:HIT'</a>, <a>hit_hITLayoutId</a> - The ID of the
--   HIT Layout of this HIT.
--   
--   <a>$sel:qualificationRequirements:HIT'</a>,
--   <a>hit_qualificationRequirements</a> - Conditions that a Worker's
--   Qualifications must meet in order to accept the HIT. A HIT can have
--   between zero and ten Qualification requirements. All requirements must
--   be met in order for a Worker to accept the HIT. Additionally, other
--   actions can be restricted using the <tt>ActionsGuarded</tt> field on
--   each <tt>QualificationRequirement</tt> structure.
--   
--   <a>$sel:title:HIT'</a>, <a>hit_title</a> - The title of the HIT.
--   
--   <a>$sel:hITId:HIT'</a>, <a>hit_hITId</a> - A unique identifier for the
--   HIT.
--   
--   <a>$sel:hITReviewStatus:HIT'</a>, <a>hit_hITReviewStatus</a> -
--   Indicates the review status of the HIT. Valid Values are NotReviewed |
--   MarkedForReview | ReviewedAppropriate | ReviewedInappropriate.
--   
--   <a>$sel:numberOfAssignmentsAvailable:HIT'</a>,
--   <a>hit_numberOfAssignmentsAvailable</a> - The number of assignments
--   for this HIT that are available for Workers to accept.
--   
--   <a>$sel:description:HIT'</a>, <a>hit_description</a> - A general
--   description of the HIT.
--   
--   <a>$sel:question:HIT'</a>, <a>hit_question</a> - The data the Worker
--   completing the HIT uses produce the results. This is either either a
--   QuestionForm, HTMLQuestion or an ExternalQuestion data structure.
--   
--   <a>$sel:assignmentDurationInSeconds:HIT'</a>,
--   <a>hit_assignmentDurationInSeconds</a> - The length of time, in
--   seconds, that a Worker has to complete the HIT after accepting it.
newHIT :: HIT

-- | The date and time the HIT was created.
hit_creationTime :: Lens' HIT (Maybe UTCTime)

-- | The ID of the HIT Group of this HIT.
hit_hITGroupId :: Lens' HIT (Maybe Text)

-- | The number of assignments for this HIT that are being previewed or
--   have been accepted by Workers, but have not yet been submitted,
--   returned, or abandoned.
hit_numberOfAssignmentsPending :: Lens' HIT (Maybe Int)

-- | The ID of the HIT type of this HIT
hit_hITTypeId :: Lens' HIT (Maybe Text)

-- | The date and time the HIT expires.
hit_expiration :: Lens' HIT (Maybe UTCTime)

-- | The amount of time, in seconds, after the Worker submits an assignment
--   for the HIT that the results are automatically approved by Amazon
--   Mechanical Turk. This is the amount of time the Requester has to
--   reject an assignment submitted by a Worker before the assignment is
--   auto-approved and the Worker is paid.
hit_autoApprovalDelayInSeconds :: Lens' HIT (Maybe Integer)

-- | An arbitrary data field the Requester who created the HIT can use.
--   This field is visible only to the creator of the HIT.
hit_requesterAnnotation :: Lens' HIT (Maybe Text)

-- | The status of the HIT and its assignments. Valid Values are Assignable
--   | Unassignable | Reviewable | Reviewing | Disposed.
hit_hITStatus :: Lens' HIT (Maybe HITStatus)

-- | The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
hit_maxAssignments :: Lens' HIT (Maybe Int)

-- | The number of assignments for this HIT that have been approved or
--   rejected.
hit_numberOfAssignmentsCompleted :: Lens' HIT (Maybe Int)

-- | Undocumented member.
hit_reward :: Lens' HIT (Maybe Text)

-- | One or more words or phrases that describe the HIT, separated by
--   commas. Search terms similar to the keywords of a HIT are more likely
--   to have the HIT in the search results.
hit_keywords :: Lens' HIT (Maybe Text)

-- | The ID of the HIT Layout of this HIT.
hit_hITLayoutId :: Lens' HIT (Maybe Text)

-- | Conditions that a Worker's Qualifications must meet in order to accept
--   the HIT. A HIT can have between zero and ten Qualification
--   requirements. All requirements must be met in order for a Worker to
--   accept the HIT. Additionally, other actions can be restricted using
--   the <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
hit_qualificationRequirements :: Lens' HIT (Maybe [QualificationRequirement])

-- | The title of the HIT.
hit_title :: Lens' HIT (Maybe Text)

-- | A unique identifier for the HIT.
hit_hITId :: Lens' HIT (Maybe Text)

-- | Indicates the review status of the HIT. Valid Values are NotReviewed |
--   MarkedForReview | ReviewedAppropriate | ReviewedInappropriate.
hit_hITReviewStatus :: Lens' HIT (Maybe HITReviewStatus)

-- | The number of assignments for this HIT that are available for Workers
--   to accept.
hit_numberOfAssignmentsAvailable :: Lens' HIT (Maybe Int)

-- | A general description of the HIT.
hit_description :: Lens' HIT (Maybe Text)

-- | The data the Worker completing the HIT uses produce the results. This
--   is either either a QuestionForm, HTMLQuestion or an ExternalQuestion
--   data structure.
hit_question :: Lens' HIT (Maybe Text)

-- | The length of time, in seconds, that a Worker has to complete the HIT
--   after accepting it.
hit_assignmentDurationInSeconds :: Lens' HIT (Maybe Integer)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.HIT.HIT
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.HIT.HIT
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.HIT.HIT
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.HIT.HIT
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.HIT.HIT
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.HIT.HIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.HIT.HIT


module Amazonka.MechanicalTurk.Types.QualificationStatus
newtype QualificationStatus
QualificationStatus' :: Text -> QualificationStatus
[fromQualificationStatus] :: QualificationStatus -> Text
pattern QualificationStatus_Granted :: QualificationStatus
pattern QualificationStatus_Revoked :: QualificationStatus
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.QualificationStatus.QualificationStatus


module Amazonka.MechanicalTurk.Types.Qualification

-- | The Qualification data structure represents a Qualification assigned
--   to a user, including the Qualification type and the value (score).
--   
--   <i>See:</i> <a>newQualification</a> smart constructor.
data Qualification
Qualification' :: Maybe QualificationStatus -> Maybe Int -> Maybe Locale -> Maybe Text -> Maybe POSIX -> Maybe Text -> Qualification

-- | The status of the Qualification. Valid values are Granted | Revoked.
[$sel:status:Qualification'] :: Qualification -> Maybe QualificationStatus

-- | The value (score) of the Qualification, if the Qualification has an
--   integer value.
[$sel:integerValue:Qualification'] :: Qualification -> Maybe Int
[$sel:localeValue:Qualification'] :: Qualification -> Maybe Locale

-- | The ID of the Qualification type for the Qualification.
[$sel:qualificationTypeId:Qualification'] :: Qualification -> Maybe Text

-- | The date and time the Qualification was granted to the Worker. If the
--   Worker's Qualification was revoked, and then re-granted based on a new
--   Qualification request, GrantTime is the date and time of the last call
--   to the AcceptQualificationRequest operation.
[$sel:grantTime:Qualification'] :: Qualification -> Maybe POSIX

-- | The ID of the Worker who possesses the Qualification.
[$sel:workerId:Qualification'] :: Qualification -> Maybe Text

-- | Create a value of <a>Qualification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Qualification'</a>, <a>qualification_status</a> - The
--   status of the Qualification. Valid values are Granted | Revoked.
--   
--   <a>$sel:integerValue:Qualification'</a>,
--   <a>qualification_integerValue</a> - The value (score) of the
--   Qualification, if the Qualification has an integer value.
--   
--   <a>$sel:localeValue:Qualification'</a>,
--   <a>qualification_localeValue</a> - Undocumented member.
--   
--   <a>$sel:qualificationTypeId:Qualification'</a>,
--   <a>qualification_qualificationTypeId</a> - The ID of the Qualification
--   type for the Qualification.
--   
--   <a>$sel:grantTime:Qualification'</a>, <a>qualification_grantTime</a> -
--   The date and time the Qualification was granted to the Worker. If the
--   Worker's Qualification was revoked, and then re-granted based on a new
--   Qualification request, GrantTime is the date and time of the last call
--   to the AcceptQualificationRequest operation.
--   
--   <a>$sel:workerId:Qualification'</a>, <a>qualification_workerId</a> -
--   The ID of the Worker who possesses the Qualification.
newQualification :: Qualification

-- | The status of the Qualification. Valid values are Granted | Revoked.
qualification_status :: Lens' Qualification (Maybe QualificationStatus)

-- | The value (score) of the Qualification, if the Qualification has an
--   integer value.
qualification_integerValue :: Lens' Qualification (Maybe Int)

-- | Undocumented member.
qualification_localeValue :: Lens' Qualification (Maybe Locale)

-- | The ID of the Qualification type for the Qualification.
qualification_qualificationTypeId :: Lens' Qualification (Maybe Text)

-- | The date and time the Qualification was granted to the Worker. If the
--   Worker's Qualification was revoked, and then re-granted based on a new
--   Qualification request, GrantTime is the date and time of the last call
--   to the AcceptQualificationRequest operation.
qualification_grantTime :: Lens' Qualification (Maybe UTCTime)

-- | The ID of the Worker who possesses the Qualification.
qualification_workerId :: Lens' Qualification (Maybe Text)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.Qualification.Qualification
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.Qualification.Qualification
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.Qualification.Qualification
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.Qualification.Qualification
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.Qualification.Qualification
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.Qualification.Qualification
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.Qualification.Qualification


module Amazonka.MechanicalTurk.Types.QualificationTypeStatus
newtype QualificationTypeStatus
QualificationTypeStatus' :: Text -> QualificationTypeStatus
[fromQualificationTypeStatus] :: QualificationTypeStatus -> Text
pattern QualificationTypeStatus_Active :: QualificationTypeStatus
pattern QualificationTypeStatus_Inactive :: QualificationTypeStatus
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.QualificationTypeStatus.QualificationTypeStatus


module Amazonka.MechanicalTurk.Types.QualificationType

-- | The QualificationType data structure represents a Qualification type,
--   a description of a property of a Worker that must match the
--   requirements of a HIT for the Worker to be able to accept the HIT. The
--   type also describes how a Worker can obtain a Qualification of that
--   type, such as through a Qualification test.
--   
--   <i>See:</i> <a>newQualificationType</a> smart constructor.
data QualificationType
QualificationType' :: Maybe POSIX -> Maybe Integer -> Maybe QualificationTypeStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Text -> Maybe Bool -> Maybe Integer -> QualificationType

-- | The date and time the Qualification type was created.
[$sel:creationTime:QualificationType'] :: QualificationType -> Maybe POSIX

-- | The amount of time, in seconds, given to a Worker to complete the
--   Qualification test, beginning from the time the Worker requests the
--   Qualification.
[$sel:testDurationInSeconds:QualificationType'] :: QualificationType -> Maybe Integer

-- | The status of the Qualification type. A Qualification type's status
--   determines if users can apply to receive a Qualification of this type,
--   and if HITs can be created with requirements based on this type. Valid
--   values are Active | Inactive.
[$sel:qualificationTypeStatus:QualificationType'] :: QualificationType -> Maybe QualificationTypeStatus

-- | The answers to the Qualification test specified in the Test parameter.
[$sel:answerKey:QualificationType'] :: QualificationType -> Maybe Text

-- | The questions for a Qualification test associated with this
--   Qualification type that a user can take to obtain a Qualification of
--   this type. This parameter must be specified if AnswerKey is present. A
--   Qualification type cannot have both a specified Test parameter and an
--   AutoGranted value of true.
[$sel:test:QualificationType'] :: QualificationType -> Maybe Text

-- | A unique identifier for the Qualification type. A Qualification type
--   is given a Qualification type ID when you call the
--   CreateQualificationType operation.
[$sel:qualificationTypeId:QualificationType'] :: QualificationType -> Maybe Text

-- | The name of the Qualification type. The type name is used to identify
--   the type, and to find the type using a Qualification type search.
[$sel:name:QualificationType'] :: QualificationType -> Maybe Text

-- | One or more words or phrases that describe theQualification type,
--   separated by commas. The Keywords make the type easier to find using a
--   search.
[$sel:keywords:QualificationType'] :: QualificationType -> Maybe Text

-- | Specifies that requests for the Qualification type are granted
--   immediately, without prompting the Worker with a Qualification test.
--   Valid values are True | False.
[$sel:autoGranted:QualificationType'] :: QualificationType -> Maybe Bool

-- | The Qualification integer value to use for automatically granted
--   Qualifications, if AutoGranted is true. This is 1 by default.
[$sel:autoGrantedValue:QualificationType'] :: QualificationType -> Maybe Int

-- | A long description for the Qualification type.
[$sel:description:QualificationType'] :: QualificationType -> Maybe Text

-- | Specifies whether the Qualification type is one that a user can
--   request through the Amazon Mechanical Turk web site, such as by taking
--   a Qualification test. This value is False for Qualifications assigned
--   automatically by the system. Valid values are True | False.
[$sel:isRequestable:QualificationType'] :: QualificationType -> Maybe Bool

-- | The amount of time, in seconds, Workers must wait after taking the
--   Qualification test before they can take it again. Workers can take a
--   Qualification test multiple times if they were not granted the
--   Qualification from a previous attempt, or if the test offers a
--   gradient score and they want a better score. If not specified, retries
--   are disabled and Workers can request a Qualification only once.
[$sel:retryDelayInSeconds:QualificationType'] :: QualificationType -> Maybe Integer

-- | Create a value of <a>QualificationType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:QualificationType'</a>,
--   <a>qualificationType_creationTime</a> - The date and time the
--   Qualification type was created.
--   
--   <a>$sel:testDurationInSeconds:QualificationType'</a>,
--   <a>qualificationType_testDurationInSeconds</a> - The amount of time,
--   in seconds, given to a Worker to complete the Qualification test,
--   beginning from the time the Worker requests the Qualification.
--   
--   <a>$sel:qualificationTypeStatus:QualificationType'</a>,
--   <a>qualificationType_qualificationTypeStatus</a> - The status of the
--   Qualification type. A Qualification type's status determines if users
--   can apply to receive a Qualification of this type, and if HITs can be
--   created with requirements based on this type. Valid values are Active
--   | Inactive.
--   
--   <a>$sel:answerKey:QualificationType'</a>,
--   <a>qualificationType_answerKey</a> - The answers to the Qualification
--   test specified in the Test parameter.
--   
--   <a>$sel:test:QualificationType'</a>, <a>qualificationType_test</a> -
--   The questions for a Qualification test associated with this
--   Qualification type that a user can take to obtain a Qualification of
--   this type. This parameter must be specified if AnswerKey is present. A
--   Qualification type cannot have both a specified Test parameter and an
--   AutoGranted value of true.
--   
--   <a>$sel:qualificationTypeId:QualificationType'</a>,
--   <a>qualificationType_qualificationTypeId</a> - A unique identifier for
--   the Qualification type. A Qualification type is given a Qualification
--   type ID when you call the CreateQualificationType operation.
--   
--   <a>$sel:name:QualificationType'</a>, <a>qualificationType_name</a> -
--   The name of the Qualification type. The type name is used to identify
--   the type, and to find the type using a Qualification type search.
--   
--   <a>$sel:keywords:QualificationType'</a>,
--   <a>qualificationType_keywords</a> - One or more words or phrases that
--   describe theQualification type, separated by commas. The Keywords make
--   the type easier to find using a search.
--   
--   <a>$sel:autoGranted:QualificationType'</a>,
--   <a>qualificationType_autoGranted</a> - Specifies that requests for the
--   Qualification type are granted immediately, without prompting the
--   Worker with a Qualification test. Valid values are True | False.
--   
--   <a>$sel:autoGrantedValue:QualificationType'</a>,
--   <a>qualificationType_autoGrantedValue</a> - The Qualification integer
--   value to use for automatically granted Qualifications, if AutoGranted
--   is true. This is 1 by default.
--   
--   <a>$sel:description:QualificationType'</a>,
--   <a>qualificationType_description</a> - A long description for the
--   Qualification type.
--   
--   <a>$sel:isRequestable:QualificationType'</a>,
--   <a>qualificationType_isRequestable</a> - Specifies whether the
--   Qualification type is one that a user can request through the Amazon
--   Mechanical Turk web site, such as by taking a Qualification test. This
--   value is False for Qualifications assigned automatically by the
--   system. Valid values are True | False.
--   
--   <a>$sel:retryDelayInSeconds:QualificationType'</a>,
--   <a>qualificationType_retryDelayInSeconds</a> - The amount of time, in
--   seconds, Workers must wait after taking the Qualification test before
--   they can take it again. Workers can take a Qualification test multiple
--   times if they were not granted the Qualification from a previous
--   attempt, or if the test offers a gradient score and they want a better
--   score. If not specified, retries are disabled and Workers can request
--   a Qualification only once.
newQualificationType :: QualificationType

-- | The date and time the Qualification type was created.
qualificationType_creationTime :: Lens' QualificationType (Maybe UTCTime)

-- | The amount of time, in seconds, given to a Worker to complete the
--   Qualification test, beginning from the time the Worker requests the
--   Qualification.
qualificationType_testDurationInSeconds :: Lens' QualificationType (Maybe Integer)

-- | The status of the Qualification type. A Qualification type's status
--   determines if users can apply to receive a Qualification of this type,
--   and if HITs can be created with requirements based on this type. Valid
--   values are Active | Inactive.
qualificationType_qualificationTypeStatus :: Lens' QualificationType (Maybe QualificationTypeStatus)

-- | The answers to the Qualification test specified in the Test parameter.
qualificationType_answerKey :: Lens' QualificationType (Maybe Text)

-- | The questions for a Qualification test associated with this
--   Qualification type that a user can take to obtain a Qualification of
--   this type. This parameter must be specified if AnswerKey is present. A
--   Qualification type cannot have both a specified Test parameter and an
--   AutoGranted value of true.
qualificationType_test :: Lens' QualificationType (Maybe Text)

-- | A unique identifier for the Qualification type. A Qualification type
--   is given a Qualification type ID when you call the
--   CreateQualificationType operation.
qualificationType_qualificationTypeId :: Lens' QualificationType (Maybe Text)

-- | The name of the Qualification type. The type name is used to identify
--   the type, and to find the type using a Qualification type search.
qualificationType_name :: Lens' QualificationType (Maybe Text)

-- | One or more words or phrases that describe theQualification type,
--   separated by commas. The Keywords make the type easier to find using a
--   search.
qualificationType_keywords :: Lens' QualificationType (Maybe Text)

-- | Specifies that requests for the Qualification type are granted
--   immediately, without prompting the Worker with a Qualification test.
--   Valid values are True | False.
qualificationType_autoGranted :: Lens' QualificationType (Maybe Bool)

-- | The Qualification integer value to use for automatically granted
--   Qualifications, if AutoGranted is true. This is 1 by default.
qualificationType_autoGrantedValue :: Lens' QualificationType (Maybe Int)

-- | A long description for the Qualification type.
qualificationType_description :: Lens' QualificationType (Maybe Text)

-- | Specifies whether the Qualification type is one that a user can
--   request through the Amazon Mechanical Turk web site, such as by taking
--   a Qualification test. This value is False for Qualifications assigned
--   automatically by the system. Valid values are True | False.
qualificationType_isRequestable :: Lens' QualificationType (Maybe Bool)

-- | The amount of time, in seconds, Workers must wait after taking the
--   Qualification test before they can take it again. Workers can take a
--   Qualification test multiple times if they were not granted the
--   Qualification from a previous attempt, or if the test offers a
--   gradient score and they want a better score. If not specified, retries
--   are disabled and Workers can request a Qualification only once.
qualificationType_retryDelayInSeconds :: Lens' QualificationType (Maybe Integer)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.QualificationType.QualificationType
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.QualificationType.QualificationType
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.QualificationType.QualificationType
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.QualificationType.QualificationType
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.QualificationType.QualificationType
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.QualificationType.QualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.QualificationType.QualificationType


module Amazonka.MechanicalTurk.Types.ReviewActionStatus
newtype ReviewActionStatus
ReviewActionStatus' :: Text -> ReviewActionStatus
[fromReviewActionStatus] :: ReviewActionStatus -> Text
pattern ReviewActionStatus_Cancelled :: ReviewActionStatus
pattern ReviewActionStatus_Failed :: ReviewActionStatus
pattern ReviewActionStatus_Intended :: ReviewActionStatus
pattern ReviewActionStatus_Succeeded :: ReviewActionStatus
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.ReviewActionStatus.ReviewActionStatus


module Amazonka.MechanicalTurk.Types.ReviewActionDetail

-- | Both the AssignmentReviewReport and the HITReviewReport elements
--   contains the ReviewActionDetail data structure. This structure is
--   returned multiple times for each action specified in the Review
--   Policy.
--   
--   <i>See:</i> <a>newReviewActionDetail</a> smart constructor.
data ReviewActionDetail
ReviewActionDetail' :: Maybe ReviewActionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ReviewActionDetail

-- | The current disposition of the action: INTENDED, SUCCEEDED, FAILED, or
--   CANCELLED.
[$sel:status:ReviewActionDetail'] :: ReviewActionDetail -> Maybe ReviewActionStatus

-- | The specific HITId or AssignmentID targeted by the action.
[$sel:targetId:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | The unique identifier for the action.
[$sel:actionId:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | The type of object in TargetId.
[$sel:targetType:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | A description of the outcome of the review.
[$sel:result:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | The nature of the action itself. The Review Policy is responsible for
--   examining the HIT and Assignments, emitting results, and deciding
--   which other actions will be necessary.
[$sel:actionName:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | The date when the action was completed.
[$sel:completeTime:ReviewActionDetail'] :: ReviewActionDetail -> Maybe POSIX

-- | Present only when the Results have a FAILED Status.
[$sel:errorCode:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | Create a value of <a>ReviewActionDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_status</a> - The current disposition of the
--   action: INTENDED, SUCCEEDED, FAILED, or CANCELLED.
--   
--   <a>$sel:targetId:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_targetId</a> - The specific HITId or
--   AssignmentID targeted by the action.
--   
--   <a>$sel:actionId:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_actionId</a> - The unique identifier for the
--   action.
--   
--   <a>$sel:targetType:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_targetType</a> - The type of object in TargetId.
--   
--   <a>$sel:result:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_result</a> - A description of the outcome of the
--   review.
--   
--   <a>$sel:actionName:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_actionName</a> - The nature of the action
--   itself. The Review Policy is responsible for examining the HIT and
--   Assignments, emitting results, and deciding which other actions will
--   be necessary.
--   
--   <a>$sel:completeTime:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_completeTime</a> - The date when the action was
--   completed.
--   
--   <a>$sel:errorCode:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_errorCode</a> - Present only when the Results
--   have a FAILED Status.
newReviewActionDetail :: ReviewActionDetail

-- | The current disposition of the action: INTENDED, SUCCEEDED, FAILED, or
--   CANCELLED.
reviewActionDetail_status :: Lens' ReviewActionDetail (Maybe ReviewActionStatus)

-- | The specific HITId or AssignmentID targeted by the action.
reviewActionDetail_targetId :: Lens' ReviewActionDetail (Maybe Text)

-- | The unique identifier for the action.
reviewActionDetail_actionId :: Lens' ReviewActionDetail (Maybe Text)

-- | The type of object in TargetId.
reviewActionDetail_targetType :: Lens' ReviewActionDetail (Maybe Text)

-- | A description of the outcome of the review.
reviewActionDetail_result :: Lens' ReviewActionDetail (Maybe Text)

-- | The nature of the action itself. The Review Policy is responsible for
--   examining the HIT and Assignments, emitting results, and deciding
--   which other actions will be necessary.
reviewActionDetail_actionName :: Lens' ReviewActionDetail (Maybe Text)

-- | The date when the action was completed.
reviewActionDetail_completeTime :: Lens' ReviewActionDetail (Maybe UTCTime)

-- | Present only when the Results have a FAILED Status.
reviewActionDetail_errorCode :: Lens' ReviewActionDetail (Maybe Text)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.ReviewActionDetail.ReviewActionDetail
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.ReviewActionDetail.ReviewActionDetail
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.ReviewActionDetail.ReviewActionDetail
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.ReviewActionDetail.ReviewActionDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.ReviewActionDetail.ReviewActionDetail
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.ReviewActionDetail.ReviewActionDetail
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.ReviewActionDetail.ReviewActionDetail


module Amazonka.MechanicalTurk.Types.ReviewPolicy

-- | HIT Review Policy data structures represent HIT review policies, which
--   you specify when you create a HIT.
--   
--   <i>See:</i> <a>newReviewPolicy</a> smart constructor.
data ReviewPolicy
ReviewPolicy' :: Maybe [PolicyParameter] -> Text -> ReviewPolicy

-- | Name of the parameter from the Review policy.
[$sel:parameters:ReviewPolicy'] :: ReviewPolicy -> Maybe [PolicyParameter]

-- | Name of a Review Policy: SimplePlurality/2011-09-01 or
--   ScoreMyKnownAnswers/2011-09-01
[$sel:policyName:ReviewPolicy'] :: ReviewPolicy -> Text

-- | Create a value of <a>ReviewPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ReviewPolicy'</a>, <a>reviewPolicy_parameters</a> -
--   Name of the parameter from the Review policy.
--   
--   <a>$sel:policyName:ReviewPolicy'</a>, <a>reviewPolicy_policyName</a> -
--   Name of a Review Policy: SimplePlurality/2011-09-01 or
--   ScoreMyKnownAnswers/2011-09-01
newReviewPolicy :: Text -> ReviewPolicy

-- | Name of the parameter from the Review policy.
reviewPolicy_parameters :: Lens' ReviewPolicy (Maybe [PolicyParameter])

-- | Name of a Review Policy: SimplePlurality/2011-09-01 or
--   ScoreMyKnownAnswers/2011-09-01
reviewPolicy_policyName :: Lens' ReviewPolicy Text
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.ReviewPolicy.ReviewPolicy
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.ReviewPolicy.ReviewPolicy
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.ReviewPolicy.ReviewPolicy
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.ReviewPolicy.ReviewPolicy
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.ReviewPolicy.ReviewPolicy
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.ReviewPolicy.ReviewPolicy
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.ReviewPolicy.ReviewPolicy
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.ReviewPolicy.ReviewPolicy


module Amazonka.MechanicalTurk.Types.ReviewPolicyLevel
newtype ReviewPolicyLevel
ReviewPolicyLevel' :: Text -> ReviewPolicyLevel
[fromReviewPolicyLevel] :: ReviewPolicyLevel -> Text
pattern ReviewPolicyLevel_Assignment :: ReviewPolicyLevel
pattern ReviewPolicyLevel_HIT :: ReviewPolicyLevel
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.ReviewPolicyLevel.ReviewPolicyLevel


module Amazonka.MechanicalTurk.Types.ReviewResultDetail

-- | This data structure is returned multiple times for each result
--   specified in the Review Policy.
--   
--   <i>See:</i> <a>newReviewResultDetail</a> smart constructor.
data ReviewResultDetail
ReviewResultDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ReviewResultDetail

-- | The values of Key provided by the review policies you have selected.
[$sel:value:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | A unique identifier of the Review action result.
[$sel:actionId:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | The type of the object from the SubjectId field.
[$sel:subjectType:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | Key identifies the particular piece of reviewed information.
[$sel:key:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | Specifies the QuestionId the result is describing. Depending on
--   whether the TargetType is a HIT or Assignment this results could
--   specify multiple values. If TargetType is HIT and QuestionId is
--   absent, then the result describes results of the HIT, including the
--   HIT agreement score. If ObjectType is Assignment and QuestionId is
--   absent, then the result describes the Worker's performance on the HIT.
[$sel:questionId:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | The HITID or AssignmentId about which this result was taken. Note that
--   HIT-level Review Policies will often emit results about both the HIT
--   itself and its Assignments, while Assignment-level review policies
--   generally only emit results about the Assignment itself.
[$sel:subjectId:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | Create a value of <a>ReviewResultDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ReviewResultDetail'</a>, <a>reviewResultDetail_value</a>
--   - The values of Key provided by the review policies you have selected.
--   
--   <a>$sel:actionId:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_actionId</a> - A unique identifier of the Review
--   action result.
--   
--   <a>$sel:subjectType:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_subjectType</a> - The type of the object from
--   the SubjectId field.
--   
--   <a>$sel:key:ReviewResultDetail'</a>, <a>reviewResultDetail_key</a> -
--   Key identifies the particular piece of reviewed information.
--   
--   <a>$sel:questionId:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_questionId</a> - Specifies the QuestionId the
--   result is describing. Depending on whether the TargetType is a HIT or
--   Assignment this results could specify multiple values. If TargetType
--   is HIT and QuestionId is absent, then the result describes results of
--   the HIT, including the HIT agreement score. If ObjectType is
--   Assignment and QuestionId is absent, then the result describes the
--   Worker's performance on the HIT.
--   
--   <a>$sel:subjectId:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_subjectId</a> - The HITID or AssignmentId about
--   which this result was taken. Note that HIT-level Review Policies will
--   often emit results about both the HIT itself and its Assignments,
--   while Assignment-level review policies generally only emit results
--   about the Assignment itself.
newReviewResultDetail :: ReviewResultDetail

-- | The values of Key provided by the review policies you have selected.
reviewResultDetail_value :: Lens' ReviewResultDetail (Maybe Text)

-- | A unique identifier of the Review action result.
reviewResultDetail_actionId :: Lens' ReviewResultDetail (Maybe Text)

-- | The type of the object from the SubjectId field.
reviewResultDetail_subjectType :: Lens' ReviewResultDetail (Maybe Text)

-- | Key identifies the particular piece of reviewed information.
reviewResultDetail_key :: Lens' ReviewResultDetail (Maybe Text)

-- | Specifies the QuestionId the result is describing. Depending on
--   whether the TargetType is a HIT or Assignment this results could
--   specify multiple values. If TargetType is HIT and QuestionId is
--   absent, then the result describes results of the HIT, including the
--   HIT agreement score. If ObjectType is Assignment and QuestionId is
--   absent, then the result describes the Worker's performance on the HIT.
reviewResultDetail_questionId :: Lens' ReviewResultDetail (Maybe Text)

-- | The HITID or AssignmentId about which this result was taken. Note that
--   HIT-level Review Policies will often emit results about both the HIT
--   itself and its Assignments, while Assignment-level review policies
--   generally only emit results about the Assignment itself.
reviewResultDetail_subjectId :: Lens' ReviewResultDetail (Maybe Text)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.ReviewResultDetail.ReviewResultDetail
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.ReviewResultDetail.ReviewResultDetail
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.ReviewResultDetail.ReviewResultDetail
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.ReviewResultDetail.ReviewResultDetail
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.ReviewResultDetail.ReviewResultDetail
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.ReviewResultDetail.ReviewResultDetail
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.ReviewResultDetail.ReviewResultDetail


module Amazonka.MechanicalTurk.Types.ReviewReport

-- | Contains both ReviewResult and ReviewAction elements for a particular
--   HIT.
--   
--   <i>See:</i> <a>newReviewReport</a> smart constructor.
data ReviewReport
ReviewReport' :: Maybe [ReviewActionDetail] -> Maybe [ReviewResultDetail] -> ReviewReport

-- | A list of ReviewAction objects for each action specified in the Review
--   Policy.
[$sel:reviewActions:ReviewReport'] :: ReviewReport -> Maybe [ReviewActionDetail]

-- | A list of ReviewResults objects for each action specified in the
--   Review Policy.
[$sel:reviewResults:ReviewReport'] :: ReviewReport -> Maybe [ReviewResultDetail]

-- | Create a value of <a>ReviewReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reviewActions:ReviewReport'</a>,
--   <a>reviewReport_reviewActions</a> - A list of ReviewAction objects for
--   each action specified in the Review Policy.
--   
--   <a>$sel:reviewResults:ReviewReport'</a>,
--   <a>reviewReport_reviewResults</a> - A list of ReviewResults objects
--   for each action specified in the Review Policy.
newReviewReport :: ReviewReport

-- | A list of ReviewAction objects for each action specified in the Review
--   Policy.
reviewReport_reviewActions :: Lens' ReviewReport (Maybe [ReviewActionDetail])

-- | A list of ReviewResults objects for each action specified in the
--   Review Policy.
reviewReport_reviewResults :: Lens' ReviewReport (Maybe [ReviewResultDetail])
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.ReviewReport.ReviewReport
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.ReviewReport.ReviewReport
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.ReviewReport.ReviewReport
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.ReviewReport.ReviewReport
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.ReviewReport.ReviewReport
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.ReviewReport.ReviewReport
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.ReviewReport.ReviewReport


module Amazonka.MechanicalTurk.Types.ReviewableHITStatus
newtype ReviewableHITStatus
ReviewableHITStatus' :: Text -> ReviewableHITStatus
[fromReviewableHITStatus] :: ReviewableHITStatus -> Text
pattern ReviewableHITStatus_Reviewable :: ReviewableHITStatus
pattern ReviewableHITStatus_Reviewing :: ReviewableHITStatus
instance Amazonka.Data.XML.ToXML Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Amazonka.Data.XML.FromXML Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Amazonka.Data.Headers.ToHeader Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Amazonka.Data.Log.ToLog Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Amazonka.Data.ByteString.ToByteString Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Amazonka.Data.Text.ToText Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Amazonka.Data.Text.FromText Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance GHC.Classes.Ord Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.ReviewableHITStatus.ReviewableHITStatus


module Amazonka.MechanicalTurk.Types.WorkerBlock

-- | The WorkerBlock data structure represents a Worker who has been
--   blocked. It has two elements: the WorkerId and the Reason for the
--   block.
--   
--   <i>See:</i> <a>newWorkerBlock</a> smart constructor.
data WorkerBlock
WorkerBlock' :: Maybe Text -> Maybe Text -> WorkerBlock

-- | A message explaining the reason the Worker was blocked.
[$sel:reason:WorkerBlock'] :: WorkerBlock -> Maybe Text

-- | The ID of the Worker who accepted the HIT.
[$sel:workerId:WorkerBlock'] :: WorkerBlock -> Maybe Text

-- | Create a value of <a>WorkerBlock</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:WorkerBlock'</a>, <a>workerBlock_reason</a> - A message
--   explaining the reason the Worker was blocked.
--   
--   <a>$sel:workerId:WorkerBlock'</a>, <a>workerBlock_workerId</a> - The
--   ID of the Worker who accepted the HIT.
newWorkerBlock :: WorkerBlock

-- | A message explaining the reason the Worker was blocked.
workerBlock_reason :: Lens' WorkerBlock (Maybe Text)

-- | The ID of the Worker who accepted the HIT.
workerBlock_workerId :: Lens' WorkerBlock (Maybe Text)
instance GHC.Generics.Generic Amazonka.MechanicalTurk.Types.WorkerBlock.WorkerBlock
instance GHC.Show.Show Amazonka.MechanicalTurk.Types.WorkerBlock.WorkerBlock
instance GHC.Read.Read Amazonka.MechanicalTurk.Types.WorkerBlock.WorkerBlock
instance GHC.Classes.Eq Amazonka.MechanicalTurk.Types.WorkerBlock.WorkerBlock
instance Data.Aeson.Types.FromJSON.FromJSON Amazonka.MechanicalTurk.Types.WorkerBlock.WorkerBlock
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.Types.WorkerBlock.WorkerBlock
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.Types.WorkerBlock.WorkerBlock


module Amazonka.MechanicalTurk.Types

-- | API version <tt>2017-01-17</tt> of the Amazon Mechanical Turk SDK
--   configuration.
defaultService :: Service

-- | Amazon Mechanical Turk is temporarily unable to process your request.
--   Try your call again.
_ServiceFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your request is invalid.
_RequestError :: AsError a => Getting (First ServiceError) a ServiceError
newtype AssignmentStatus
AssignmentStatus' :: Text -> AssignmentStatus
[fromAssignmentStatus] :: AssignmentStatus -> Text
pattern AssignmentStatus_Approved :: AssignmentStatus
pattern AssignmentStatus_Rejected :: AssignmentStatus
pattern AssignmentStatus_Submitted :: AssignmentStatus
newtype Comparator
Comparator' :: Text -> Comparator
[fromComparator] :: Comparator -> Text
pattern Comparator_DoesNotExist :: Comparator
pattern Comparator_EqualTo :: Comparator
pattern Comparator_Exists :: Comparator
pattern Comparator_GreaterThan :: Comparator
pattern Comparator_GreaterThanOrEqualTo :: Comparator
pattern Comparator_In :: Comparator
pattern Comparator_LessThan :: Comparator
pattern Comparator_LessThanOrEqualTo :: Comparator
pattern Comparator_NotEqualTo :: Comparator
pattern Comparator_NotIn :: Comparator
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_AssignmentAbandoned :: EventType
pattern EventType_AssignmentAccepted :: EventType
pattern EventType_AssignmentApproved :: EventType
pattern EventType_AssignmentRejected :: EventType
pattern EventType_AssignmentReturned :: EventType
pattern EventType_AssignmentSubmitted :: EventType
pattern EventType_HITCreated :: EventType
pattern EventType_HITDisposed :: EventType
pattern EventType_HITExpired :: EventType
pattern EventType_HITExtended :: EventType
pattern EventType_HITReviewable :: EventType
pattern EventType_Ping :: EventType
newtype HITAccessActions
HITAccessActions' :: Text -> HITAccessActions
[fromHITAccessActions] :: HITAccessActions -> Text
pattern HITAccessActions_Accept :: HITAccessActions
pattern HITAccessActions_DiscoverPreviewAndAccept :: HITAccessActions
pattern HITAccessActions_PreviewAndAccept :: HITAccessActions
newtype HITReviewStatus
HITReviewStatus' :: Text -> HITReviewStatus
[fromHITReviewStatus] :: HITReviewStatus -> Text
pattern HITReviewStatus_MarkedForReview :: HITReviewStatus
pattern HITReviewStatus_NotReviewed :: HITReviewStatus
pattern HITReviewStatus_ReviewedAppropriate :: HITReviewStatus
pattern HITReviewStatus_ReviewedInappropriate :: HITReviewStatus
newtype HITStatus
HITStatus' :: Text -> HITStatus
[fromHITStatus] :: HITStatus -> Text
pattern HITStatus_Assignable :: HITStatus
pattern HITStatus_Disposed :: HITStatus
pattern HITStatus_Reviewable :: HITStatus
pattern HITStatus_Reviewing :: HITStatus
pattern HITStatus_Unassignable :: HITStatus
newtype NotificationTransport
NotificationTransport' :: Text -> NotificationTransport
[fromNotificationTransport] :: NotificationTransport -> Text
pattern NotificationTransport_Email :: NotificationTransport
pattern NotificationTransport_SNS :: NotificationTransport
pattern NotificationTransport_SQS :: NotificationTransport
newtype NotifyWorkersFailureCode
NotifyWorkersFailureCode' :: Text -> NotifyWorkersFailureCode
[fromNotifyWorkersFailureCode] :: NotifyWorkersFailureCode -> Text
pattern NotifyWorkersFailureCode_HardFailure :: NotifyWorkersFailureCode
pattern NotifyWorkersFailureCode_SoftFailure :: NotifyWorkersFailureCode
newtype QualificationStatus
QualificationStatus' :: Text -> QualificationStatus
[fromQualificationStatus] :: QualificationStatus -> Text
pattern QualificationStatus_Granted :: QualificationStatus
pattern QualificationStatus_Revoked :: QualificationStatus
newtype QualificationTypeStatus
QualificationTypeStatus' :: Text -> QualificationTypeStatus
[fromQualificationTypeStatus] :: QualificationTypeStatus -> Text
pattern QualificationTypeStatus_Active :: QualificationTypeStatus
pattern QualificationTypeStatus_Inactive :: QualificationTypeStatus
newtype ReviewActionStatus
ReviewActionStatus' :: Text -> ReviewActionStatus
[fromReviewActionStatus] :: ReviewActionStatus -> Text
pattern ReviewActionStatus_Cancelled :: ReviewActionStatus
pattern ReviewActionStatus_Failed :: ReviewActionStatus
pattern ReviewActionStatus_Intended :: ReviewActionStatus
pattern ReviewActionStatus_Succeeded :: ReviewActionStatus
newtype ReviewPolicyLevel
ReviewPolicyLevel' :: Text -> ReviewPolicyLevel
[fromReviewPolicyLevel] :: ReviewPolicyLevel -> Text
pattern ReviewPolicyLevel_Assignment :: ReviewPolicyLevel
pattern ReviewPolicyLevel_HIT :: ReviewPolicyLevel
newtype ReviewableHITStatus
ReviewableHITStatus' :: Text -> ReviewableHITStatus
[fromReviewableHITStatus] :: ReviewableHITStatus -> Text
pattern ReviewableHITStatus_Reviewable :: ReviewableHITStatus
pattern ReviewableHITStatus_Reviewing :: ReviewableHITStatus

-- | The Assignment data structure represents a single assignment of a HIT
--   to a Worker. The assignment tracks the Worker's efforts to complete
--   the HIT, and contains the results for later retrieval.
--   
--   <i>See:</i> <a>newAssignment</a> smart constructor.
data Assignment
Assignment' :: Maybe POSIX -> Maybe Text -> Maybe AssignmentStatus -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Assignment

-- | The date and time the Worker accepted the assignment.
[$sel:acceptTime:Assignment'] :: Assignment -> Maybe POSIX

-- | The Worker's answers submitted for the HIT contained in a
--   QuestionFormAnswers document, if the Worker provides an answer. If the
--   Worker does not provide any answers, Answer may contain a
--   QuestionFormAnswers document, or Answer may be empty.
[$sel:answer:Assignment'] :: Assignment -> Maybe Text

-- | The status of the assignment.
[$sel:assignmentStatus:Assignment'] :: Assignment -> Maybe AssignmentStatus

-- | The feedback string included with the call to the ApproveAssignment
--   operation or the RejectAssignment operation, if the Requester approved
--   or rejected the assignment and specified feedback.
[$sel:requesterFeedback:Assignment'] :: Assignment -> Maybe Text

-- | The date and time of the deadline for the assignment. This value is
--   derived from the deadline specification for the HIT and the date and
--   time the Worker accepted the HIT.
[$sel:deadline:Assignment'] :: Assignment -> Maybe POSIX

-- | If the Worker has submitted results and the Requester has approved the
--   results, ApprovalTime is the date and time the Requester approved the
--   results. This value is omitted from the assignment if the Requester
--   has not yet approved the results.
[$sel:approvalTime:Assignment'] :: Assignment -> Maybe POSIX

-- | If the Worker has submitted results and the Requester has rejected the
--   results, RejectionTime is the date and time the Requester rejected the
--   results.
[$sel:rejectionTime:Assignment'] :: Assignment -> Maybe POSIX

-- | If results have been submitted, AutoApprovalTime is the date and time
--   the results of the assignment results are considered Approved
--   automatically if they have not already been explicitly approved or
--   rejected by the Requester. This value is derived from the
--   auto-approval delay specified by the Requester in the HIT. This value
--   is omitted from the assignment if the Worker has not yet submitted
--   results.
[$sel:autoApprovalTime:Assignment'] :: Assignment -> Maybe POSIX

-- | The ID of the HIT.
[$sel:hITId:Assignment'] :: Assignment -> Maybe Text

-- | The ID of the Worker who accepted the HIT.
[$sel:workerId:Assignment'] :: Assignment -> Maybe Text

-- | A unique identifier for the assignment.
[$sel:assignmentId:Assignment'] :: Assignment -> Maybe Text

-- | If the Worker has submitted results, SubmitTime is the date and time
--   the assignment was submitted. This value is omitted from the
--   assignment if the Worker has not yet submitted results.
[$sel:submitTime:Assignment'] :: Assignment -> Maybe POSIX

-- | Create a value of <a>Assignment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acceptTime:Assignment'</a>, <a>assignment_acceptTime</a> - The
--   date and time the Worker accepted the assignment.
--   
--   <a>$sel:answer:Assignment'</a>, <a>assignment_answer</a> - The
--   Worker's answers submitted for the HIT contained in a
--   QuestionFormAnswers document, if the Worker provides an answer. If the
--   Worker does not provide any answers, Answer may contain a
--   QuestionFormAnswers document, or Answer may be empty.
--   
--   <a>$sel:assignmentStatus:Assignment'</a>,
--   <a>assignment_assignmentStatus</a> - The status of the assignment.
--   
--   <a>$sel:requesterFeedback:Assignment'</a>,
--   <a>assignment_requesterFeedback</a> - The feedback string included
--   with the call to the ApproveAssignment operation or the
--   RejectAssignment operation, if the Requester approved or rejected the
--   assignment and specified feedback.
--   
--   <a>$sel:deadline:Assignment'</a>, <a>assignment_deadline</a> - The
--   date and time of the deadline for the assignment. This value is
--   derived from the deadline specification for the HIT and the date and
--   time the Worker accepted the HIT.
--   
--   <a>$sel:approvalTime:Assignment'</a>, <a>assignment_approvalTime</a> -
--   If the Worker has submitted results and the Requester has approved the
--   results, ApprovalTime is the date and time the Requester approved the
--   results. This value is omitted from the assignment if the Requester
--   has not yet approved the results.
--   
--   <a>$sel:rejectionTime:Assignment'</a>, <a>assignment_rejectionTime</a>
--   - If the Worker has submitted results and the Requester has rejected
--   the results, RejectionTime is the date and time the Requester rejected
--   the results.
--   
--   <a>$sel:autoApprovalTime:Assignment'</a>,
--   <a>assignment_autoApprovalTime</a> - If results have been submitted,
--   AutoApprovalTime is the date and time the results of the assignment
--   results are considered Approved automatically if they have not already
--   been explicitly approved or rejected by the Requester. This value is
--   derived from the auto-approval delay specified by the Requester in the
--   HIT. This value is omitted from the assignment if the Worker has not
--   yet submitted results.
--   
--   <a>$sel:hITId:Assignment'</a>, <a>assignment_hITId</a> - The ID of the
--   HIT.
--   
--   <a>$sel:workerId:Assignment'</a>, <a>assignment_workerId</a> - The ID
--   of the Worker who accepted the HIT.
--   
--   <a>$sel:assignmentId:Assignment'</a>, <a>assignment_assignmentId</a> -
--   A unique identifier for the assignment.
--   
--   <a>$sel:submitTime:Assignment'</a>, <a>assignment_submitTime</a> - If
--   the Worker has submitted results, SubmitTime is the date and time the
--   assignment was submitted. This value is omitted from the assignment if
--   the Worker has not yet submitted results.
newAssignment :: Assignment

-- | The date and time the Worker accepted the assignment.
assignment_acceptTime :: Lens' Assignment (Maybe UTCTime)

-- | The Worker's answers submitted for the HIT contained in a
--   QuestionFormAnswers document, if the Worker provides an answer. If the
--   Worker does not provide any answers, Answer may contain a
--   QuestionFormAnswers document, or Answer may be empty.
assignment_answer :: Lens' Assignment (Maybe Text)

-- | The status of the assignment.
assignment_assignmentStatus :: Lens' Assignment (Maybe AssignmentStatus)

-- | The feedback string included with the call to the ApproveAssignment
--   operation or the RejectAssignment operation, if the Requester approved
--   or rejected the assignment and specified feedback.
assignment_requesterFeedback :: Lens' Assignment (Maybe Text)

-- | The date and time of the deadline for the assignment. This value is
--   derived from the deadline specification for the HIT and the date and
--   time the Worker accepted the HIT.
assignment_deadline :: Lens' Assignment (Maybe UTCTime)

-- | If the Worker has submitted results and the Requester has approved the
--   results, ApprovalTime is the date and time the Requester approved the
--   results. This value is omitted from the assignment if the Requester
--   has not yet approved the results.
assignment_approvalTime :: Lens' Assignment (Maybe UTCTime)

-- | If the Worker has submitted results and the Requester has rejected the
--   results, RejectionTime is the date and time the Requester rejected the
--   results.
assignment_rejectionTime :: Lens' Assignment (Maybe UTCTime)

-- | If results have been submitted, AutoApprovalTime is the date and time
--   the results of the assignment results are considered Approved
--   automatically if they have not already been explicitly approved or
--   rejected by the Requester. This value is derived from the
--   auto-approval delay specified by the Requester in the HIT. This value
--   is omitted from the assignment if the Worker has not yet submitted
--   results.
assignment_autoApprovalTime :: Lens' Assignment (Maybe UTCTime)

-- | The ID of the HIT.
assignment_hITId :: Lens' Assignment (Maybe Text)

-- | The ID of the Worker who accepted the HIT.
assignment_workerId :: Lens' Assignment (Maybe Text)

-- | A unique identifier for the assignment.
assignment_assignmentId :: Lens' Assignment (Maybe Text)

-- | If the Worker has submitted results, SubmitTime is the date and time
--   the assignment was submitted. This value is omitted from the
--   assignment if the Worker has not yet submitted results.
assignment_submitTime :: Lens' Assignment (Maybe UTCTime)

-- | An object representing a Bonus payment paid to a Worker.
--   
--   <i>See:</i> <a>newBonusPayment</a> smart constructor.
data BonusPayment
BonusPayment' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> BonusPayment

-- | The Reason text given when the bonus was granted, if any.
[$sel:reason:BonusPayment'] :: BonusPayment -> Maybe Text

-- | The date and time of when the bonus was granted.
[$sel:grantTime:BonusPayment'] :: BonusPayment -> Maybe POSIX

-- | The ID of the Worker to whom the bonus was paid.
[$sel:workerId:BonusPayment'] :: BonusPayment -> Maybe Text

-- | The ID of the assignment associated with this bonus payment.
[$sel:assignmentId:BonusPayment'] :: BonusPayment -> Maybe Text
[$sel:bonusAmount:BonusPayment'] :: BonusPayment -> Maybe Text

-- | Create a value of <a>BonusPayment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:BonusPayment'</a>, <a>bonusPayment_reason</a> - The
--   Reason text given when the bonus was granted, if any.
--   
--   <a>$sel:grantTime:BonusPayment'</a>, <a>bonusPayment_grantTime</a> -
--   The date and time of when the bonus was granted.
--   
--   <a>$sel:workerId:BonusPayment'</a>, <a>bonusPayment_workerId</a> - The
--   ID of the Worker to whom the bonus was paid.
--   
--   <a>$sel:assignmentId:BonusPayment'</a>,
--   <a>bonusPayment_assignmentId</a> - The ID of the assignment associated
--   with this bonus payment.
--   
--   <a>$sel:bonusAmount:BonusPayment'</a>, <a>bonusPayment_bonusAmount</a>
--   - Undocumented member.
newBonusPayment :: BonusPayment

-- | The Reason text given when the bonus was granted, if any.
bonusPayment_reason :: Lens' BonusPayment (Maybe Text)

-- | The date and time of when the bonus was granted.
bonusPayment_grantTime :: Lens' BonusPayment (Maybe UTCTime)

-- | The ID of the Worker to whom the bonus was paid.
bonusPayment_workerId :: Lens' BonusPayment (Maybe Text)

-- | The ID of the assignment associated with this bonus payment.
bonusPayment_assignmentId :: Lens' BonusPayment (Maybe Text)

-- | Undocumented member.
bonusPayment_bonusAmount :: Lens' BonusPayment (Maybe Text)

-- | The HIT data structure represents a single HIT, including all the
--   information necessary for a Worker to accept and complete the HIT.
--   
--   <i>See:</i> <a>newHIT</a> smart constructor.
data HIT
HIT' :: Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe HITStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [QualificationRequirement] -> Maybe Text -> Maybe Text -> Maybe HITReviewStatus -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Integer -> HIT

-- | The date and time the HIT was created.
[$sel:creationTime:HIT'] :: HIT -> Maybe POSIX

-- | The ID of the HIT Group of this HIT.
[$sel:hITGroupId:HIT'] :: HIT -> Maybe Text

-- | The number of assignments for this HIT that are being previewed or
--   have been accepted by Workers, but have not yet been submitted,
--   returned, or abandoned.
[$sel:numberOfAssignmentsPending:HIT'] :: HIT -> Maybe Int

-- | The ID of the HIT type of this HIT
[$sel:hITTypeId:HIT'] :: HIT -> Maybe Text

-- | The date and time the HIT expires.
[$sel:expiration:HIT'] :: HIT -> Maybe POSIX

-- | The amount of time, in seconds, after the Worker submits an assignment
--   for the HIT that the results are automatically approved by Amazon
--   Mechanical Turk. This is the amount of time the Requester has to
--   reject an assignment submitted by a Worker before the assignment is
--   auto-approved and the Worker is paid.
[$sel:autoApprovalDelayInSeconds:HIT'] :: HIT -> Maybe Integer

-- | An arbitrary data field the Requester who created the HIT can use.
--   This field is visible only to the creator of the HIT.
[$sel:requesterAnnotation:HIT'] :: HIT -> Maybe Text

-- | The status of the HIT and its assignments. Valid Values are Assignable
--   | Unassignable | Reviewable | Reviewing | Disposed.
[$sel:hITStatus:HIT'] :: HIT -> Maybe HITStatus

-- | The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
[$sel:maxAssignments:HIT'] :: HIT -> Maybe Int

-- | The number of assignments for this HIT that have been approved or
--   rejected.
[$sel:numberOfAssignmentsCompleted:HIT'] :: HIT -> Maybe Int
[$sel:reward:HIT'] :: HIT -> Maybe Text

-- | One or more words or phrases that describe the HIT, separated by
--   commas. Search terms similar to the keywords of a HIT are more likely
--   to have the HIT in the search results.
[$sel:keywords:HIT'] :: HIT -> Maybe Text

-- | The ID of the HIT Layout of this HIT.
[$sel:hITLayoutId:HIT'] :: HIT -> Maybe Text

-- | Conditions that a Worker's Qualifications must meet in order to accept
--   the HIT. A HIT can have between zero and ten Qualification
--   requirements. All requirements must be met in order for a Worker to
--   accept the HIT. Additionally, other actions can be restricted using
--   the <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
[$sel:qualificationRequirements:HIT'] :: HIT -> Maybe [QualificationRequirement]

-- | The title of the HIT.
[$sel:title:HIT'] :: HIT -> Maybe Text

-- | A unique identifier for the HIT.
[$sel:hITId:HIT'] :: HIT -> Maybe Text

-- | Indicates the review status of the HIT. Valid Values are NotReviewed |
--   MarkedForReview | ReviewedAppropriate | ReviewedInappropriate.
[$sel:hITReviewStatus:HIT'] :: HIT -> Maybe HITReviewStatus

-- | The number of assignments for this HIT that are available for Workers
--   to accept.
[$sel:numberOfAssignmentsAvailable:HIT'] :: HIT -> Maybe Int

-- | A general description of the HIT.
[$sel:description:HIT'] :: HIT -> Maybe Text

-- | The data the Worker completing the HIT uses produce the results. This
--   is either either a QuestionForm, HTMLQuestion or an ExternalQuestion
--   data structure.
[$sel:question:HIT'] :: HIT -> Maybe Text

-- | The length of time, in seconds, that a Worker has to complete the HIT
--   after accepting it.
[$sel:assignmentDurationInSeconds:HIT'] :: HIT -> Maybe Integer

-- | Create a value of <a>HIT</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:HIT'</a>, <a>hit_creationTime</a> - The date and
--   time the HIT was created.
--   
--   <a>$sel:hITGroupId:HIT'</a>, <a>hit_hITGroupId</a> - The ID of the HIT
--   Group of this HIT.
--   
--   <a>$sel:numberOfAssignmentsPending:HIT'</a>,
--   <a>hit_numberOfAssignmentsPending</a> - The number of assignments for
--   this HIT that are being previewed or have been accepted by Workers,
--   but have not yet been submitted, returned, or abandoned.
--   
--   <a>$sel:hITTypeId:HIT'</a>, <a>hit_hITTypeId</a> - The ID of the HIT
--   type of this HIT
--   
--   <a>$sel:expiration:HIT'</a>, <a>hit_expiration</a> - The date and time
--   the HIT expires.
--   
--   <a>$sel:autoApprovalDelayInSeconds:HIT'</a>,
--   <a>hit_autoApprovalDelayInSeconds</a> - The amount of time, in
--   seconds, after the Worker submits an assignment for the HIT that the
--   results are automatically approved by Amazon Mechanical Turk. This is
--   the amount of time the Requester has to reject an assignment submitted
--   by a Worker before the assignment is auto-approved and the Worker is
--   paid.
--   
--   <a>$sel:requesterAnnotation:HIT'</a>, <a>hit_requesterAnnotation</a> -
--   An arbitrary data field the Requester who created the HIT can use.
--   This field is visible only to the creator of the HIT.
--   
--   <a>$sel:hITStatus:HIT'</a>, <a>hit_hITStatus</a> - The status of the
--   HIT and its assignments. Valid Values are Assignable | Unassignable |
--   Reviewable | Reviewing | Disposed.
--   
--   <a>$sel:maxAssignments:HIT'</a>, <a>hit_maxAssignments</a> - The
--   number of times the HIT can be accepted and completed before the HIT
--   becomes unavailable.
--   
--   <a>$sel:numberOfAssignmentsCompleted:HIT'</a>,
--   <a>hit_numberOfAssignmentsCompleted</a> - The number of assignments
--   for this HIT that have been approved or rejected.
--   
--   <a>$sel:reward:HIT'</a>, <a>hit_reward</a> - Undocumented member.
--   
--   <a>$sel:keywords:HIT'</a>, <a>hit_keywords</a> - One or more words or
--   phrases that describe the HIT, separated by commas. Search terms
--   similar to the keywords of a HIT are more likely to have the HIT in
--   the search results.
--   
--   <a>$sel:hITLayoutId:HIT'</a>, <a>hit_hITLayoutId</a> - The ID of the
--   HIT Layout of this HIT.
--   
--   <a>$sel:qualificationRequirements:HIT'</a>,
--   <a>hit_qualificationRequirements</a> - Conditions that a Worker's
--   Qualifications must meet in order to accept the HIT. A HIT can have
--   between zero and ten Qualification requirements. All requirements must
--   be met in order for a Worker to accept the HIT. Additionally, other
--   actions can be restricted using the <tt>ActionsGuarded</tt> field on
--   each <tt>QualificationRequirement</tt> structure.
--   
--   <a>$sel:title:HIT'</a>, <a>hit_title</a> - The title of the HIT.
--   
--   <a>$sel:hITId:HIT'</a>, <a>hit_hITId</a> - A unique identifier for the
--   HIT.
--   
--   <a>$sel:hITReviewStatus:HIT'</a>, <a>hit_hITReviewStatus</a> -
--   Indicates the review status of the HIT. Valid Values are NotReviewed |
--   MarkedForReview | ReviewedAppropriate | ReviewedInappropriate.
--   
--   <a>$sel:numberOfAssignmentsAvailable:HIT'</a>,
--   <a>hit_numberOfAssignmentsAvailable</a> - The number of assignments
--   for this HIT that are available for Workers to accept.
--   
--   <a>$sel:description:HIT'</a>, <a>hit_description</a> - A general
--   description of the HIT.
--   
--   <a>$sel:question:HIT'</a>, <a>hit_question</a> - The data the Worker
--   completing the HIT uses produce the results. This is either either a
--   QuestionForm, HTMLQuestion or an ExternalQuestion data structure.
--   
--   <a>$sel:assignmentDurationInSeconds:HIT'</a>,
--   <a>hit_assignmentDurationInSeconds</a> - The length of time, in
--   seconds, that a Worker has to complete the HIT after accepting it.
newHIT :: HIT

-- | The date and time the HIT was created.
hit_creationTime :: Lens' HIT (Maybe UTCTime)

-- | The ID of the HIT Group of this HIT.
hit_hITGroupId :: Lens' HIT (Maybe Text)

-- | The number of assignments for this HIT that are being previewed or
--   have been accepted by Workers, but have not yet been submitted,
--   returned, or abandoned.
hit_numberOfAssignmentsPending :: Lens' HIT (Maybe Int)

-- | The ID of the HIT type of this HIT
hit_hITTypeId :: Lens' HIT (Maybe Text)

-- | The date and time the HIT expires.
hit_expiration :: Lens' HIT (Maybe UTCTime)

-- | The amount of time, in seconds, after the Worker submits an assignment
--   for the HIT that the results are automatically approved by Amazon
--   Mechanical Turk. This is the amount of time the Requester has to
--   reject an assignment submitted by a Worker before the assignment is
--   auto-approved and the Worker is paid.
hit_autoApprovalDelayInSeconds :: Lens' HIT (Maybe Integer)

-- | An arbitrary data field the Requester who created the HIT can use.
--   This field is visible only to the creator of the HIT.
hit_requesterAnnotation :: Lens' HIT (Maybe Text)

-- | The status of the HIT and its assignments. Valid Values are Assignable
--   | Unassignable | Reviewable | Reviewing | Disposed.
hit_hITStatus :: Lens' HIT (Maybe HITStatus)

-- | The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
hit_maxAssignments :: Lens' HIT (Maybe Int)

-- | The number of assignments for this HIT that have been approved or
--   rejected.
hit_numberOfAssignmentsCompleted :: Lens' HIT (Maybe Int)

-- | Undocumented member.
hit_reward :: Lens' HIT (Maybe Text)

-- | One or more words or phrases that describe the HIT, separated by
--   commas. Search terms similar to the keywords of a HIT are more likely
--   to have the HIT in the search results.
hit_keywords :: Lens' HIT (Maybe Text)

-- | The ID of the HIT Layout of this HIT.
hit_hITLayoutId :: Lens' HIT (Maybe Text)

-- | Conditions that a Worker's Qualifications must meet in order to accept
--   the HIT. A HIT can have between zero and ten Qualification
--   requirements. All requirements must be met in order for a Worker to
--   accept the HIT. Additionally, other actions can be restricted using
--   the <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
hit_qualificationRequirements :: Lens' HIT (Maybe [QualificationRequirement])

-- | The title of the HIT.
hit_title :: Lens' HIT (Maybe Text)

-- | A unique identifier for the HIT.
hit_hITId :: Lens' HIT (Maybe Text)

-- | Indicates the review status of the HIT. Valid Values are NotReviewed |
--   MarkedForReview | ReviewedAppropriate | ReviewedInappropriate.
hit_hITReviewStatus :: Lens' HIT (Maybe HITReviewStatus)

-- | The number of assignments for this HIT that are available for Workers
--   to accept.
hit_numberOfAssignmentsAvailable :: Lens' HIT (Maybe Int)

-- | A general description of the HIT.
hit_description :: Lens' HIT (Maybe Text)

-- | The data the Worker completing the HIT uses produce the results. This
--   is either either a QuestionForm, HTMLQuestion or an ExternalQuestion
--   data structure.
hit_question :: Lens' HIT (Maybe Text)

-- | The length of time, in seconds, that a Worker has to complete the HIT
--   after accepting it.
hit_assignmentDurationInSeconds :: Lens' HIT (Maybe Integer)

-- | The HITLayoutParameter data structure defines parameter values used
--   with a HITLayout. A HITLayout is a reusable Amazon Mechanical Turk
--   project template used to provide Human Intelligence Task (HIT)
--   question data for CreateHIT.
--   
--   <i>See:</i> <a>newHITLayoutParameter</a> smart constructor.
data HITLayoutParameter
HITLayoutParameter' :: Text -> Text -> HITLayoutParameter

-- | The name of the parameter in the HITLayout.
[$sel:name:HITLayoutParameter'] :: HITLayoutParameter -> Text

-- | The value substituted for the parameter referenced in the HITLayout.
[$sel:value:HITLayoutParameter'] :: HITLayoutParameter -> Text

-- | Create a value of <a>HITLayoutParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:HITLayoutParameter'</a>, <a>hITLayoutParameter_name</a> -
--   The name of the parameter in the HITLayout.
--   
--   <a>$sel:value:HITLayoutParameter'</a>, <a>hITLayoutParameter_value</a>
--   - The value substituted for the parameter referenced in the HITLayout.
newHITLayoutParameter :: Text -> Text -> HITLayoutParameter

-- | The name of the parameter in the HITLayout.
hITLayoutParameter_name :: Lens' HITLayoutParameter Text

-- | The value substituted for the parameter referenced in the HITLayout.
hITLayoutParameter_value :: Lens' HITLayoutParameter Text

-- | The Locale data structure represents a geographical region or
--   location.
--   
--   <i>See:</i> <a>newLocale</a> smart constructor.
data Locale
Locale' :: Maybe Text -> Text -> Locale

-- | The state or subdivision of the locale. A valid ISO 3166-2 subdivision
--   code. For example, the code WA refers to the state of Washington.
[$sel:subdivision:Locale'] :: Locale -> Maybe Text

-- | The country of the locale. Must be a valid ISO 3166 country code. For
--   example, the code US refers to the United States of America.
[$sel:country:Locale'] :: Locale -> Text

-- | Create a value of <a>Locale</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subdivision:Locale'</a>, <a>locale_subdivision</a> - The state
--   or subdivision of the locale. A valid ISO 3166-2 subdivision code. For
--   example, the code WA refers to the state of Washington.
--   
--   <a>$sel:country:Locale'</a>, <a>locale_country</a> - The country of
--   the locale. Must be a valid ISO 3166 country code. For example, the
--   code US refers to the United States of America.
newLocale :: Text -> Locale

-- | The state or subdivision of the locale. A valid ISO 3166-2 subdivision
--   code. For example, the code WA refers to the state of Washington.
locale_subdivision :: Lens' Locale (Maybe Text)

-- | The country of the locale. Must be a valid ISO 3166 country code. For
--   example, the code US refers to the United States of America.
locale_country :: Lens' Locale Text

-- | The NotificationSpecification data structure describes a HIT event
--   notification for a HIT type.
--   
--   <i>See:</i> <a>newNotificationSpecification</a> smart constructor.
data NotificationSpecification
NotificationSpecification' :: Text -> NotificationTransport -> Text -> [EventType] -> NotificationSpecification

-- | The target for notification messages. The Destination’s format is
--   determined by the specified Transport:
--   
--   <ul>
--   <li>When Transport is Email, the Destination is your email
--   address.</li>
--   <li>When Transport is SQS, the Destination is your queue URL.</li>
--   <li>When Transport is SNS, the Destination is the ARN of your
--   topic.</li>
--   </ul>
[$sel:destination:NotificationSpecification'] :: NotificationSpecification -> Text

-- | The method Amazon Mechanical Turk uses to send the notification. Valid
--   Values: Email | SQS | SNS.
[$sel:transport:NotificationSpecification'] :: NotificationSpecification -> NotificationTransport

-- | The version of the Notification API to use. Valid value is 2006-05-05.
[$sel:version:NotificationSpecification'] :: NotificationSpecification -> Text

-- | The list of events that should cause notifications to be sent. Valid
--   Values: AssignmentAccepted | AssignmentAbandoned | AssignmentReturned
--   | AssignmentSubmitted | AssignmentRejected | AssignmentApproved |
--   HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired |
--   Ping. The Ping event is only valid for the SendTestEventNotification
--   operation.
[$sel:eventTypes:NotificationSpecification'] :: NotificationSpecification -> [EventType]

-- | Create a value of <a>NotificationSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:NotificationSpecification'</a>,
--   <a>notificationSpecification_destination</a> - The target for
--   notification messages. The Destination’s format is determined by the
--   specified Transport:
--   
--   <ul>
--   <li>When Transport is Email, the Destination is your email
--   address.</li>
--   <li>When Transport is SQS, the Destination is your queue URL.</li>
--   <li>When Transport is SNS, the Destination is the ARN of your
--   topic.</li>
--   </ul>
--   
--   <a>$sel:transport:NotificationSpecification'</a>,
--   <a>notificationSpecification_transport</a> - The method Amazon
--   Mechanical Turk uses to send the notification. Valid Values: Email |
--   SQS | SNS.
--   
--   <a>$sel:version:NotificationSpecification'</a>,
--   <a>notificationSpecification_version</a> - The version of the
--   Notification API to use. Valid value is 2006-05-05.
--   
--   <a>$sel:eventTypes:NotificationSpecification'</a>,
--   <a>notificationSpecification_eventTypes</a> - The list of events that
--   should cause notifications to be sent. Valid Values:
--   AssignmentAccepted | AssignmentAbandoned | AssignmentReturned |
--   AssignmentSubmitted | AssignmentRejected | AssignmentApproved |
--   HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired |
--   Ping. The Ping event is only valid for the SendTestEventNotification
--   operation.
newNotificationSpecification :: Text -> NotificationTransport -> Text -> NotificationSpecification

-- | The target for notification messages. The Destination’s format is
--   determined by the specified Transport:
--   
--   <ul>
--   <li>When Transport is Email, the Destination is your email
--   address.</li>
--   <li>When Transport is SQS, the Destination is your queue URL.</li>
--   <li>When Transport is SNS, the Destination is the ARN of your
--   topic.</li>
--   </ul>
notificationSpecification_destination :: Lens' NotificationSpecification Text

-- | The method Amazon Mechanical Turk uses to send the notification. Valid
--   Values: Email | SQS | SNS.
notificationSpecification_transport :: Lens' NotificationSpecification NotificationTransport

-- | The version of the Notification API to use. Valid value is 2006-05-05.
notificationSpecification_version :: Lens' NotificationSpecification Text

-- | The list of events that should cause notifications to be sent. Valid
--   Values: AssignmentAccepted | AssignmentAbandoned | AssignmentReturned
--   | AssignmentSubmitted | AssignmentRejected | AssignmentApproved |
--   HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired |
--   Ping. The Ping event is only valid for the SendTestEventNotification
--   operation.
notificationSpecification_eventTypes :: Lens' NotificationSpecification [EventType]

-- | When MTurk encounters an issue with notifying the Workers you
--   specified, it returns back this object with failure details.
--   
--   <i>See:</i> <a>newNotifyWorkersFailureStatus</a> smart constructor.
data NotifyWorkersFailureStatus
NotifyWorkersFailureStatus' :: Maybe Text -> Maybe NotifyWorkersFailureCode -> Maybe Text -> NotifyWorkersFailureStatus

-- | A message detailing the reason the Worker could not be notified.
[$sel:notifyWorkersFailureMessage:NotifyWorkersFailureStatus'] :: NotifyWorkersFailureStatus -> Maybe Text

-- | Encoded value for the failure type.
[$sel:notifyWorkersFailureCode:NotifyWorkersFailureStatus'] :: NotifyWorkersFailureStatus -> Maybe NotifyWorkersFailureCode

-- | The ID of the Worker.
[$sel:workerId:NotifyWorkersFailureStatus'] :: NotifyWorkersFailureStatus -> Maybe Text

-- | Create a value of <a>NotifyWorkersFailureStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyWorkersFailureMessage:NotifyWorkersFailureStatus'</a>,
--   <a>notifyWorkersFailureStatus_notifyWorkersFailureMessage</a> - A
--   message detailing the reason the Worker could not be notified.
--   
--   <a>$sel:notifyWorkersFailureCode:NotifyWorkersFailureStatus'</a>,
--   <a>notifyWorkersFailureStatus_notifyWorkersFailureCode</a> - Encoded
--   value for the failure type.
--   
--   <a>$sel:workerId:NotifyWorkersFailureStatus'</a>,
--   <a>notifyWorkersFailureStatus_workerId</a> - The ID of the Worker.
newNotifyWorkersFailureStatus :: NotifyWorkersFailureStatus

-- | A message detailing the reason the Worker could not be notified.
notifyWorkersFailureStatus_notifyWorkersFailureMessage :: Lens' NotifyWorkersFailureStatus (Maybe Text)

-- | Encoded value for the failure type.
notifyWorkersFailureStatus_notifyWorkersFailureCode :: Lens' NotifyWorkersFailureStatus (Maybe NotifyWorkersFailureCode)

-- | The ID of the Worker.
notifyWorkersFailureStatus_workerId :: Lens' NotifyWorkersFailureStatus (Maybe Text)

-- | This data structure is the data type for the AnswerKey parameter of
--   the ScoreMyKnownAnswers/2011-09-01 Review Policy.
--   
--   <i>See:</i> <a>newParameterMapEntry</a> smart constructor.
data ParameterMapEntry
ParameterMapEntry' :: Maybe [Text] -> Maybe Text -> ParameterMapEntry

-- | The list of answers to the question specified in the MapEntry Key
--   element. The Worker must match all values in order for the answer to
--   be scored correctly.
[$sel:values:ParameterMapEntry'] :: ParameterMapEntry -> Maybe [Text]

-- | The QuestionID from the HIT that is used to identify which question
--   requires Mechanical Turk to score as part of the
--   ScoreMyKnownAnswers/2011-09-01 Review Policy.
[$sel:key:ParameterMapEntry'] :: ParameterMapEntry -> Maybe Text

-- | Create a value of <a>ParameterMapEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:ParameterMapEntry'</a>, <a>parameterMapEntry_values</a>
--   - The list of answers to the question specified in the MapEntry Key
--   element. The Worker must match all values in order for the answer to
--   be scored correctly.
--   
--   <a>$sel:key:ParameterMapEntry'</a>, <a>parameterMapEntry_key</a> - The
--   QuestionID from the HIT that is used to identify which question
--   requires Mechanical Turk to score as part of the
--   ScoreMyKnownAnswers/2011-09-01 Review Policy.
newParameterMapEntry :: ParameterMapEntry

-- | The list of answers to the question specified in the MapEntry Key
--   element. The Worker must match all values in order for the answer to
--   be scored correctly.
parameterMapEntry_values :: Lens' ParameterMapEntry (Maybe [Text])

-- | The QuestionID from the HIT that is used to identify which question
--   requires Mechanical Turk to score as part of the
--   ScoreMyKnownAnswers/2011-09-01 Review Policy.
parameterMapEntry_key :: Lens' ParameterMapEntry (Maybe Text)

-- | Name of the parameter from the Review policy.
--   
--   <i>See:</i> <a>newPolicyParameter</a> smart constructor.
data PolicyParameter
PolicyParameter' :: Maybe [Text] -> Maybe [ParameterMapEntry] -> Maybe Text -> PolicyParameter

-- | The list of values of the Parameter
[$sel:values:PolicyParameter'] :: PolicyParameter -> Maybe [Text]

-- | List of ParameterMapEntry objects.
[$sel:mapEntries:PolicyParameter'] :: PolicyParameter -> Maybe [ParameterMapEntry]

-- | Name of the parameter from the list of Review Polices.
[$sel:key:PolicyParameter'] :: PolicyParameter -> Maybe Text

-- | Create a value of <a>PolicyParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PolicyParameter'</a>, <a>policyParameter_values</a> -
--   The list of values of the Parameter
--   
--   <a>$sel:mapEntries:PolicyParameter'</a>,
--   <a>policyParameter_mapEntries</a> - List of ParameterMapEntry objects.
--   
--   <a>$sel:key:PolicyParameter'</a>, <a>policyParameter_key</a> - Name of
--   the parameter from the list of Review Polices.
newPolicyParameter :: PolicyParameter

-- | The list of values of the Parameter
policyParameter_values :: Lens' PolicyParameter (Maybe [Text])

-- | List of ParameterMapEntry objects.
policyParameter_mapEntries :: Lens' PolicyParameter (Maybe [ParameterMapEntry])

-- | Name of the parameter from the list of Review Polices.
policyParameter_key :: Lens' PolicyParameter (Maybe Text)

-- | The Qualification data structure represents a Qualification assigned
--   to a user, including the Qualification type and the value (score).
--   
--   <i>See:</i> <a>newQualification</a> smart constructor.
data Qualification
Qualification' :: Maybe QualificationStatus -> Maybe Int -> Maybe Locale -> Maybe Text -> Maybe POSIX -> Maybe Text -> Qualification

-- | The status of the Qualification. Valid values are Granted | Revoked.
[$sel:status:Qualification'] :: Qualification -> Maybe QualificationStatus

-- | The value (score) of the Qualification, if the Qualification has an
--   integer value.
[$sel:integerValue:Qualification'] :: Qualification -> Maybe Int
[$sel:localeValue:Qualification'] :: Qualification -> Maybe Locale

-- | The ID of the Qualification type for the Qualification.
[$sel:qualificationTypeId:Qualification'] :: Qualification -> Maybe Text

-- | The date and time the Qualification was granted to the Worker. If the
--   Worker's Qualification was revoked, and then re-granted based on a new
--   Qualification request, GrantTime is the date and time of the last call
--   to the AcceptQualificationRequest operation.
[$sel:grantTime:Qualification'] :: Qualification -> Maybe POSIX

-- | The ID of the Worker who possesses the Qualification.
[$sel:workerId:Qualification'] :: Qualification -> Maybe Text

-- | Create a value of <a>Qualification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Qualification'</a>, <a>qualification_status</a> - The
--   status of the Qualification. Valid values are Granted | Revoked.
--   
--   <a>$sel:integerValue:Qualification'</a>,
--   <a>qualification_integerValue</a> - The value (score) of the
--   Qualification, if the Qualification has an integer value.
--   
--   <a>$sel:localeValue:Qualification'</a>,
--   <a>qualification_localeValue</a> - Undocumented member.
--   
--   <a>$sel:qualificationTypeId:Qualification'</a>,
--   <a>qualification_qualificationTypeId</a> - The ID of the Qualification
--   type for the Qualification.
--   
--   <a>$sel:grantTime:Qualification'</a>, <a>qualification_grantTime</a> -
--   The date and time the Qualification was granted to the Worker. If the
--   Worker's Qualification was revoked, and then re-granted based on a new
--   Qualification request, GrantTime is the date and time of the last call
--   to the AcceptQualificationRequest operation.
--   
--   <a>$sel:workerId:Qualification'</a>, <a>qualification_workerId</a> -
--   The ID of the Worker who possesses the Qualification.
newQualification :: Qualification

-- | The status of the Qualification. Valid values are Granted | Revoked.
qualification_status :: Lens' Qualification (Maybe QualificationStatus)

-- | The value (score) of the Qualification, if the Qualification has an
--   integer value.
qualification_integerValue :: Lens' Qualification (Maybe Int)

-- | Undocumented member.
qualification_localeValue :: Lens' Qualification (Maybe Locale)

-- | The ID of the Qualification type for the Qualification.
qualification_qualificationTypeId :: Lens' Qualification (Maybe Text)

-- | The date and time the Qualification was granted to the Worker. If the
--   Worker's Qualification was revoked, and then re-granted based on a new
--   Qualification request, GrantTime is the date and time of the last call
--   to the AcceptQualificationRequest operation.
qualification_grantTime :: Lens' Qualification (Maybe UTCTime)

-- | The ID of the Worker who possesses the Qualification.
qualification_workerId :: Lens' Qualification (Maybe Text)

-- | The QualificationRequest data structure represents a request a Worker
--   has made for a Qualification.
--   
--   <i>See:</i> <a>newQualificationRequest</a> smart constructor.
data QualificationRequest
QualificationRequest' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> QualificationRequest

-- | The ID of the Qualification request, a unique identifier generated
--   when the request was submitted.
[$sel:qualificationRequestId:QualificationRequest'] :: QualificationRequest -> Maybe Text

-- | The contents of the Qualification test that was presented to the
--   Worker, if the type has a test and the Worker has submitted answers.
--   This value is identical to the QuestionForm associated with the
--   Qualification type at the time the Worker requests the Qualification.
[$sel:test:QualificationRequest'] :: QualificationRequest -> Maybe Text

-- | The ID of the Qualification type the Worker is requesting, as returned
--   by the CreateQualificationType operation.
[$sel:qualificationTypeId:QualificationRequest'] :: QualificationRequest -> Maybe Text

-- | The Worker's answers for the Qualification type's test contained in a
--   QuestionFormAnswers document, if the type has a test and the Worker
--   has submitted answers. If the Worker does not provide any answers,
--   Answer may be empty.
[$sel:answer:QualificationRequest'] :: QualificationRequest -> Maybe Text

-- | The ID of the Worker requesting the Qualification.
[$sel:workerId:QualificationRequest'] :: QualificationRequest -> Maybe Text

-- | The date and time the Qualification request had a status of Submitted.
--   This is either the time the Worker submitted answers for a
--   Qualification test, or the time the Worker requested the Qualification
--   if the Qualification type does not have a test.
[$sel:submitTime:QualificationRequest'] :: QualificationRequest -> Maybe POSIX

-- | Create a value of <a>QualificationRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationRequestId:QualificationRequest'</a>,
--   <a>qualificationRequest_qualificationRequestId</a> - The ID of the
--   Qualification request, a unique identifier generated when the request
--   was submitted.
--   
--   <a>$sel:test:QualificationRequest'</a>,
--   <a>qualificationRequest_test</a> - The contents of the Qualification
--   test that was presented to the Worker, if the type has a test and the
--   Worker has submitted answers. This value is identical to the
--   QuestionForm associated with the Qualification type at the time the
--   Worker requests the Qualification.
--   
--   <a>$sel:qualificationTypeId:QualificationRequest'</a>,
--   <a>qualificationRequest_qualificationTypeId</a> - The ID of the
--   Qualification type the Worker is requesting, as returned by the
--   CreateQualificationType operation.
--   
--   <a>$sel:answer:QualificationRequest'</a>,
--   <a>qualificationRequest_answer</a> - The Worker's answers for the
--   Qualification type's test contained in a QuestionFormAnswers document,
--   if the type has a test and the Worker has submitted answers. If the
--   Worker does not provide any answers, Answer may be empty.
--   
--   <a>$sel:workerId:QualificationRequest'</a>,
--   <a>qualificationRequest_workerId</a> - The ID of the Worker requesting
--   the Qualification.
--   
--   <a>$sel:submitTime:QualificationRequest'</a>,
--   <a>qualificationRequest_submitTime</a> - The date and time the
--   Qualification request had a status of Submitted. This is either the
--   time the Worker submitted answers for a Qualification test, or the
--   time the Worker requested the Qualification if the Qualification type
--   does not have a test.
newQualificationRequest :: QualificationRequest

-- | The ID of the Qualification request, a unique identifier generated
--   when the request was submitted.
qualificationRequest_qualificationRequestId :: Lens' QualificationRequest (Maybe Text)

-- | The contents of the Qualification test that was presented to the
--   Worker, if the type has a test and the Worker has submitted answers.
--   This value is identical to the QuestionForm associated with the
--   Qualification type at the time the Worker requests the Qualification.
qualificationRequest_test :: Lens' QualificationRequest (Maybe Text)

-- | The ID of the Qualification type the Worker is requesting, as returned
--   by the CreateQualificationType operation.
qualificationRequest_qualificationTypeId :: Lens' QualificationRequest (Maybe Text)

-- | The Worker's answers for the Qualification type's test contained in a
--   QuestionFormAnswers document, if the type has a test and the Worker
--   has submitted answers. If the Worker does not provide any answers,
--   Answer may be empty.
qualificationRequest_answer :: Lens' QualificationRequest (Maybe Text)

-- | The ID of the Worker requesting the Qualification.
qualificationRequest_workerId :: Lens' QualificationRequest (Maybe Text)

-- | The date and time the Qualification request had a status of Submitted.
--   This is either the time the Worker submitted answers for a
--   Qualification test, or the time the Worker requested the Qualification
--   if the Qualification type does not have a test.
qualificationRequest_submitTime :: Lens' QualificationRequest (Maybe UTCTime)

-- | The QualificationRequirement data structure describes a Qualification
--   that a Worker must have before the Worker is allowed to accept a HIT.
--   A requirement may optionally state that a Worker must have the
--   Qualification in order to preview the HIT, or see the HIT in search
--   results.
--   
--   <i>See:</i> <a>newQualificationRequirement</a> smart constructor.
data QualificationRequirement
QualificationRequirement' :: Maybe [Locale] -> Maybe HITAccessActions -> Maybe Bool -> Maybe [Int] -> Text -> Comparator -> QualificationRequirement

-- | The locale value to compare against the Qualification's value. The
--   local value must be a valid ISO 3166 country code or supports ISO
--   3166-2 subdivisions. LocaleValue can only be used with a Worker_Locale
--   QualificationType ID. LocaleValue can only be used with the EqualTo,
--   NotEqualTo, In, and NotIn comparators. You must only use a single
--   LocaleValue element when using the EqualTo or NotEqualTo comparators.
--   When performing a set comparison by using the In or the NotIn
--   comparator, you can use up to 30 LocaleValue elements in a
--   QualificationRequirement data structure.
[$sel:localeValues:QualificationRequirement'] :: QualificationRequirement -> Maybe [Locale]

-- | Setting this attribute prevents Workers whose Qualifications do not
--   meet this QualificationRequirement from taking the specified action.
--   Valid arguments include "Accept" (Worker cannot accept the HIT, but
--   can preview the HIT and see it in their search results),
--   "PreviewAndAccept" (Worker cannot accept or preview the HIT, but can
--   see the HIT in their search results), and "DiscoverPreviewAndAccept"
--   (Worker cannot accept, preview, or see the HIT in their search
--   results). It's possible for you to create a HIT with multiple
--   QualificationRequirements (which can have different values for the
--   ActionGuarded attribute). In this case, the Worker is only permitted
--   to perform an action when they have met all QualificationRequirements
--   guarding the action. The actions in the order of least restrictive to
--   most restrictive are Discover, Preview and Accept. For example, if a
--   Worker meets all QualificationRequirements that are set to
--   DiscoverPreviewAndAccept, but do not meet all requirements that are
--   set with PreviewAndAccept, then the Worker will be able to Discover,
--   i.e. see the HIT in their search result, but will not be able to
--   Preview or Accept the HIT. ActionsGuarded should not be used in
--   combination with the <tt>RequiredToPreview</tt> field.
[$sel:actionsGuarded:QualificationRequirement'] :: QualificationRequirement -> Maybe HITAccessActions

-- | DEPRECATED: Use the <tt>ActionsGuarded</tt> field instead. If
--   RequiredToPreview is true, the question data for the HIT will not be
--   shown when a Worker whose Qualifications do not meet this requirement
--   tries to preview the HIT. That is, a Worker's Qualifications must meet
--   all of the requirements for which RequiredToPreview is true in order
--   to preview the HIT. If a Worker meets all of the requirements where
--   RequiredToPreview is true (or if there are no such requirements), but
--   does not meet all of the requirements for the HIT, the Worker will be
--   allowed to preview the HIT's question data, but will not be allowed to
--   accept and complete the HIT. The default is false. This should not be
--   used in combination with the <tt>ActionsGuarded</tt> field.
[$sel:requiredToPreview:QualificationRequirement'] :: QualificationRequirement -> Maybe Bool

-- | The integer value to compare against the Qualification's value.
--   IntegerValue must not be present if Comparator is Exists or
--   DoesNotExist. IntegerValue can only be used if the Qualification type
--   has an integer value; it cannot be used with the Worker_Locale
--   QualificationType ID. When performing a set comparison by using the In
--   or the NotIn comparator, you can use up to 15 IntegerValue elements in
--   a QualificationRequirement data structure.
[$sel:integerValues:QualificationRequirement'] :: QualificationRequirement -> Maybe [Int]

-- | The ID of the Qualification type for the requirement.
[$sel:qualificationTypeId:QualificationRequirement'] :: QualificationRequirement -> Text

-- | The kind of comparison to make against a Qualification's value. You
--   can compare a Qualification's value to an IntegerValue to see if it is
--   LessThan, LessThanOrEqualTo, GreaterThan, GreaterThanOrEqualTo,
--   EqualTo, or NotEqualTo the IntegerValue. You can compare it to a
--   LocaleValue to see if it is EqualTo, or NotEqualTo the LocaleValue.
--   You can check to see if the value is In or NotIn a set of IntegerValue
--   or LocaleValue values. Lastly, a Qualification requirement can also
--   test if a Qualification Exists or DoesNotExist in the user's profile,
--   regardless of its value.
[$sel:comparator:QualificationRequirement'] :: QualificationRequirement -> Comparator

-- | Create a value of <a>QualificationRequirement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:localeValues:QualificationRequirement'</a>,
--   <a>qualificationRequirement_localeValues</a> - The locale value to
--   compare against the Qualification's value. The local value must be a
--   valid ISO 3166 country code or supports ISO 3166-2 subdivisions.
--   LocaleValue can only be used with a Worker_Locale QualificationType
--   ID. LocaleValue can only be used with the EqualTo, NotEqualTo, In, and
--   NotIn comparators. You must only use a single LocaleValue element when
--   using the EqualTo or NotEqualTo comparators. When performing a set
--   comparison by using the In or the NotIn comparator, you can use up to
--   30 LocaleValue elements in a QualificationRequirement data structure.
--   
--   <a>$sel:actionsGuarded:QualificationRequirement'</a>,
--   <a>qualificationRequirement_actionsGuarded</a> - Setting this
--   attribute prevents Workers whose Qualifications do not meet this
--   QualificationRequirement from taking the specified action. Valid
--   arguments include "Accept" (Worker cannot accept the HIT, but can
--   preview the HIT and see it in their search results),
--   "PreviewAndAccept" (Worker cannot accept or preview the HIT, but can
--   see the HIT in their search results), and "DiscoverPreviewAndAccept"
--   (Worker cannot accept, preview, or see the HIT in their search
--   results). It's possible for you to create a HIT with multiple
--   QualificationRequirements (which can have different values for the
--   ActionGuarded attribute). In this case, the Worker is only permitted
--   to perform an action when they have met all QualificationRequirements
--   guarding the action. The actions in the order of least restrictive to
--   most restrictive are Discover, Preview and Accept. For example, if a
--   Worker meets all QualificationRequirements that are set to
--   DiscoverPreviewAndAccept, but do not meet all requirements that are
--   set with PreviewAndAccept, then the Worker will be able to Discover,
--   i.e. see the HIT in their search result, but will not be able to
--   Preview or Accept the HIT. ActionsGuarded should not be used in
--   combination with the <tt>RequiredToPreview</tt> field.
--   
--   <a>$sel:requiredToPreview:QualificationRequirement'</a>,
--   <a>qualificationRequirement_requiredToPreview</a> - DEPRECATED: Use
--   the <tt>ActionsGuarded</tt> field instead. If RequiredToPreview is
--   true, the question data for the HIT will not be shown when a Worker
--   whose Qualifications do not meet this requirement tries to preview the
--   HIT. That is, a Worker's Qualifications must meet all of the
--   requirements for which RequiredToPreview is true in order to preview
--   the HIT. If a Worker meets all of the requirements where
--   RequiredToPreview is true (or if there are no such requirements), but
--   does not meet all of the requirements for the HIT, the Worker will be
--   allowed to preview the HIT's question data, but will not be allowed to
--   accept and complete the HIT. The default is false. This should not be
--   used in combination with the <tt>ActionsGuarded</tt> field.
--   
--   <a>$sel:integerValues:QualificationRequirement'</a>,
--   <a>qualificationRequirement_integerValues</a> - The integer value to
--   compare against the Qualification's value. IntegerValue must not be
--   present if Comparator is Exists or DoesNotExist. IntegerValue can only
--   be used if the Qualification type has an integer value; it cannot be
--   used with the Worker_Locale QualificationType ID. When performing a
--   set comparison by using the In or the NotIn comparator, you can use up
--   to 15 IntegerValue elements in a QualificationRequirement data
--   structure.
--   
--   <a>$sel:qualificationTypeId:QualificationRequirement'</a>,
--   <a>qualificationRequirement_qualificationTypeId</a> - The ID of the
--   Qualification type for the requirement.
--   
--   <a>$sel:comparator:QualificationRequirement'</a>,
--   <a>qualificationRequirement_comparator</a> - The kind of comparison to
--   make against a Qualification's value. You can compare a
--   Qualification's value to an IntegerValue to see if it is LessThan,
--   LessThanOrEqualTo, GreaterThan, GreaterThanOrEqualTo, EqualTo, or
--   NotEqualTo the IntegerValue. You can compare it to a LocaleValue to
--   see if it is EqualTo, or NotEqualTo the LocaleValue. You can check to
--   see if the value is In or NotIn a set of IntegerValue or LocaleValue
--   values. Lastly, a Qualification requirement can also test if a
--   Qualification Exists or DoesNotExist in the user's profile, regardless
--   of its value.
newQualificationRequirement :: Text -> Comparator -> QualificationRequirement

-- | The locale value to compare against the Qualification's value. The
--   local value must be a valid ISO 3166 country code or supports ISO
--   3166-2 subdivisions. LocaleValue can only be used with a Worker_Locale
--   QualificationType ID. LocaleValue can only be used with the EqualTo,
--   NotEqualTo, In, and NotIn comparators. You must only use a single
--   LocaleValue element when using the EqualTo or NotEqualTo comparators.
--   When performing a set comparison by using the In or the NotIn
--   comparator, you can use up to 30 LocaleValue elements in a
--   QualificationRequirement data structure.
qualificationRequirement_localeValues :: Lens' QualificationRequirement (Maybe [Locale])

-- | Setting this attribute prevents Workers whose Qualifications do not
--   meet this QualificationRequirement from taking the specified action.
--   Valid arguments include "Accept" (Worker cannot accept the HIT, but
--   can preview the HIT and see it in their search results),
--   "PreviewAndAccept" (Worker cannot accept or preview the HIT, but can
--   see the HIT in their search results), and "DiscoverPreviewAndAccept"
--   (Worker cannot accept, preview, or see the HIT in their search
--   results). It's possible for you to create a HIT with multiple
--   QualificationRequirements (which can have different values for the
--   ActionGuarded attribute). In this case, the Worker is only permitted
--   to perform an action when they have met all QualificationRequirements
--   guarding the action. The actions in the order of least restrictive to
--   most restrictive are Discover, Preview and Accept. For example, if a
--   Worker meets all QualificationRequirements that are set to
--   DiscoverPreviewAndAccept, but do not meet all requirements that are
--   set with PreviewAndAccept, then the Worker will be able to Discover,
--   i.e. see the HIT in their search result, but will not be able to
--   Preview or Accept the HIT. ActionsGuarded should not be used in
--   combination with the <tt>RequiredToPreview</tt> field.
qualificationRequirement_actionsGuarded :: Lens' QualificationRequirement (Maybe HITAccessActions)

-- | DEPRECATED: Use the <tt>ActionsGuarded</tt> field instead. If
--   RequiredToPreview is true, the question data for the HIT will not be
--   shown when a Worker whose Qualifications do not meet this requirement
--   tries to preview the HIT. That is, a Worker's Qualifications must meet
--   all of the requirements for which RequiredToPreview is true in order
--   to preview the HIT. If a Worker meets all of the requirements where
--   RequiredToPreview is true (or if there are no such requirements), but
--   does not meet all of the requirements for the HIT, the Worker will be
--   allowed to preview the HIT's question data, but will not be allowed to
--   accept and complete the HIT. The default is false. This should not be
--   used in combination with the <tt>ActionsGuarded</tt> field.
qualificationRequirement_requiredToPreview :: Lens' QualificationRequirement (Maybe Bool)

-- | The integer value to compare against the Qualification's value.
--   IntegerValue must not be present if Comparator is Exists or
--   DoesNotExist. IntegerValue can only be used if the Qualification type
--   has an integer value; it cannot be used with the Worker_Locale
--   QualificationType ID. When performing a set comparison by using the In
--   or the NotIn comparator, you can use up to 15 IntegerValue elements in
--   a QualificationRequirement data structure.
qualificationRequirement_integerValues :: Lens' QualificationRequirement (Maybe [Int])

-- | The ID of the Qualification type for the requirement.
qualificationRequirement_qualificationTypeId :: Lens' QualificationRequirement Text

-- | The kind of comparison to make against a Qualification's value. You
--   can compare a Qualification's value to an IntegerValue to see if it is
--   LessThan, LessThanOrEqualTo, GreaterThan, GreaterThanOrEqualTo,
--   EqualTo, or NotEqualTo the IntegerValue. You can compare it to a
--   LocaleValue to see if it is EqualTo, or NotEqualTo the LocaleValue.
--   You can check to see if the value is In or NotIn a set of IntegerValue
--   or LocaleValue values. Lastly, a Qualification requirement can also
--   test if a Qualification Exists or DoesNotExist in the user's profile,
--   regardless of its value.
qualificationRequirement_comparator :: Lens' QualificationRequirement Comparator

-- | The QualificationType data structure represents a Qualification type,
--   a description of a property of a Worker that must match the
--   requirements of a HIT for the Worker to be able to accept the HIT. The
--   type also describes how a Worker can obtain a Qualification of that
--   type, such as through a Qualification test.
--   
--   <i>See:</i> <a>newQualificationType</a> smart constructor.
data QualificationType
QualificationType' :: Maybe POSIX -> Maybe Integer -> Maybe QualificationTypeStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Text -> Maybe Bool -> Maybe Integer -> QualificationType

-- | The date and time the Qualification type was created.
[$sel:creationTime:QualificationType'] :: QualificationType -> Maybe POSIX

-- | The amount of time, in seconds, given to a Worker to complete the
--   Qualification test, beginning from the time the Worker requests the
--   Qualification.
[$sel:testDurationInSeconds:QualificationType'] :: QualificationType -> Maybe Integer

-- | The status of the Qualification type. A Qualification type's status
--   determines if users can apply to receive a Qualification of this type,
--   and if HITs can be created with requirements based on this type. Valid
--   values are Active | Inactive.
[$sel:qualificationTypeStatus:QualificationType'] :: QualificationType -> Maybe QualificationTypeStatus

-- | The answers to the Qualification test specified in the Test parameter.
[$sel:answerKey:QualificationType'] :: QualificationType -> Maybe Text

-- | The questions for a Qualification test associated with this
--   Qualification type that a user can take to obtain a Qualification of
--   this type. This parameter must be specified if AnswerKey is present. A
--   Qualification type cannot have both a specified Test parameter and an
--   AutoGranted value of true.
[$sel:test:QualificationType'] :: QualificationType -> Maybe Text

-- | A unique identifier for the Qualification type. A Qualification type
--   is given a Qualification type ID when you call the
--   CreateQualificationType operation.
[$sel:qualificationTypeId:QualificationType'] :: QualificationType -> Maybe Text

-- | The name of the Qualification type. The type name is used to identify
--   the type, and to find the type using a Qualification type search.
[$sel:name:QualificationType'] :: QualificationType -> Maybe Text

-- | One or more words or phrases that describe theQualification type,
--   separated by commas. The Keywords make the type easier to find using a
--   search.
[$sel:keywords:QualificationType'] :: QualificationType -> Maybe Text

-- | Specifies that requests for the Qualification type are granted
--   immediately, without prompting the Worker with a Qualification test.
--   Valid values are True | False.
[$sel:autoGranted:QualificationType'] :: QualificationType -> Maybe Bool

-- | The Qualification integer value to use for automatically granted
--   Qualifications, if AutoGranted is true. This is 1 by default.
[$sel:autoGrantedValue:QualificationType'] :: QualificationType -> Maybe Int

-- | A long description for the Qualification type.
[$sel:description:QualificationType'] :: QualificationType -> Maybe Text

-- | Specifies whether the Qualification type is one that a user can
--   request through the Amazon Mechanical Turk web site, such as by taking
--   a Qualification test. This value is False for Qualifications assigned
--   automatically by the system. Valid values are True | False.
[$sel:isRequestable:QualificationType'] :: QualificationType -> Maybe Bool

-- | The amount of time, in seconds, Workers must wait after taking the
--   Qualification test before they can take it again. Workers can take a
--   Qualification test multiple times if they were not granted the
--   Qualification from a previous attempt, or if the test offers a
--   gradient score and they want a better score. If not specified, retries
--   are disabled and Workers can request a Qualification only once.
[$sel:retryDelayInSeconds:QualificationType'] :: QualificationType -> Maybe Integer

-- | Create a value of <a>QualificationType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:QualificationType'</a>,
--   <a>qualificationType_creationTime</a> - The date and time the
--   Qualification type was created.
--   
--   <a>$sel:testDurationInSeconds:QualificationType'</a>,
--   <a>qualificationType_testDurationInSeconds</a> - The amount of time,
--   in seconds, given to a Worker to complete the Qualification test,
--   beginning from the time the Worker requests the Qualification.
--   
--   <a>$sel:qualificationTypeStatus:QualificationType'</a>,
--   <a>qualificationType_qualificationTypeStatus</a> - The status of the
--   Qualification type. A Qualification type's status determines if users
--   can apply to receive a Qualification of this type, and if HITs can be
--   created with requirements based on this type. Valid values are Active
--   | Inactive.
--   
--   <a>$sel:answerKey:QualificationType'</a>,
--   <a>qualificationType_answerKey</a> - The answers to the Qualification
--   test specified in the Test parameter.
--   
--   <a>$sel:test:QualificationType'</a>, <a>qualificationType_test</a> -
--   The questions for a Qualification test associated with this
--   Qualification type that a user can take to obtain a Qualification of
--   this type. This parameter must be specified if AnswerKey is present. A
--   Qualification type cannot have both a specified Test parameter and an
--   AutoGranted value of true.
--   
--   <a>$sel:qualificationTypeId:QualificationType'</a>,
--   <a>qualificationType_qualificationTypeId</a> - A unique identifier for
--   the Qualification type. A Qualification type is given a Qualification
--   type ID when you call the CreateQualificationType operation.
--   
--   <a>$sel:name:QualificationType'</a>, <a>qualificationType_name</a> -
--   The name of the Qualification type. The type name is used to identify
--   the type, and to find the type using a Qualification type search.
--   
--   <a>$sel:keywords:QualificationType'</a>,
--   <a>qualificationType_keywords</a> - One or more words or phrases that
--   describe theQualification type, separated by commas. The Keywords make
--   the type easier to find using a search.
--   
--   <a>$sel:autoGranted:QualificationType'</a>,
--   <a>qualificationType_autoGranted</a> - Specifies that requests for the
--   Qualification type are granted immediately, without prompting the
--   Worker with a Qualification test. Valid values are True | False.
--   
--   <a>$sel:autoGrantedValue:QualificationType'</a>,
--   <a>qualificationType_autoGrantedValue</a> - The Qualification integer
--   value to use for automatically granted Qualifications, if AutoGranted
--   is true. This is 1 by default.
--   
--   <a>$sel:description:QualificationType'</a>,
--   <a>qualificationType_description</a> - A long description for the
--   Qualification type.
--   
--   <a>$sel:isRequestable:QualificationType'</a>,
--   <a>qualificationType_isRequestable</a> - Specifies whether the
--   Qualification type is one that a user can request through the Amazon
--   Mechanical Turk web site, such as by taking a Qualification test. This
--   value is False for Qualifications assigned automatically by the
--   system. Valid values are True | False.
--   
--   <a>$sel:retryDelayInSeconds:QualificationType'</a>,
--   <a>qualificationType_retryDelayInSeconds</a> - The amount of time, in
--   seconds, Workers must wait after taking the Qualification test before
--   they can take it again. Workers can take a Qualification test multiple
--   times if they were not granted the Qualification from a previous
--   attempt, or if the test offers a gradient score and they want a better
--   score. If not specified, retries are disabled and Workers can request
--   a Qualification only once.
newQualificationType :: QualificationType

-- | The date and time the Qualification type was created.
qualificationType_creationTime :: Lens' QualificationType (Maybe UTCTime)

-- | The amount of time, in seconds, given to a Worker to complete the
--   Qualification test, beginning from the time the Worker requests the
--   Qualification.
qualificationType_testDurationInSeconds :: Lens' QualificationType (Maybe Integer)

-- | The status of the Qualification type. A Qualification type's status
--   determines if users can apply to receive a Qualification of this type,
--   and if HITs can be created with requirements based on this type. Valid
--   values are Active | Inactive.
qualificationType_qualificationTypeStatus :: Lens' QualificationType (Maybe QualificationTypeStatus)

-- | The answers to the Qualification test specified in the Test parameter.
qualificationType_answerKey :: Lens' QualificationType (Maybe Text)

-- | The questions for a Qualification test associated with this
--   Qualification type that a user can take to obtain a Qualification of
--   this type. This parameter must be specified if AnswerKey is present. A
--   Qualification type cannot have both a specified Test parameter and an
--   AutoGranted value of true.
qualificationType_test :: Lens' QualificationType (Maybe Text)

-- | A unique identifier for the Qualification type. A Qualification type
--   is given a Qualification type ID when you call the
--   CreateQualificationType operation.
qualificationType_qualificationTypeId :: Lens' QualificationType (Maybe Text)

-- | The name of the Qualification type. The type name is used to identify
--   the type, and to find the type using a Qualification type search.
qualificationType_name :: Lens' QualificationType (Maybe Text)

-- | One or more words or phrases that describe theQualification type,
--   separated by commas. The Keywords make the type easier to find using a
--   search.
qualificationType_keywords :: Lens' QualificationType (Maybe Text)

-- | Specifies that requests for the Qualification type are granted
--   immediately, without prompting the Worker with a Qualification test.
--   Valid values are True | False.
qualificationType_autoGranted :: Lens' QualificationType (Maybe Bool)

-- | The Qualification integer value to use for automatically granted
--   Qualifications, if AutoGranted is true. This is 1 by default.
qualificationType_autoGrantedValue :: Lens' QualificationType (Maybe Int)

-- | A long description for the Qualification type.
qualificationType_description :: Lens' QualificationType (Maybe Text)

-- | Specifies whether the Qualification type is one that a user can
--   request through the Amazon Mechanical Turk web site, such as by taking
--   a Qualification test. This value is False for Qualifications assigned
--   automatically by the system. Valid values are True | False.
qualificationType_isRequestable :: Lens' QualificationType (Maybe Bool)

-- | The amount of time, in seconds, Workers must wait after taking the
--   Qualification test before they can take it again. Workers can take a
--   Qualification test multiple times if they were not granted the
--   Qualification from a previous attempt, or if the test offers a
--   gradient score and they want a better score. If not specified, retries
--   are disabled and Workers can request a Qualification only once.
qualificationType_retryDelayInSeconds :: Lens' QualificationType (Maybe Integer)

-- | Both the AssignmentReviewReport and the HITReviewReport elements
--   contains the ReviewActionDetail data structure. This structure is
--   returned multiple times for each action specified in the Review
--   Policy.
--   
--   <i>See:</i> <a>newReviewActionDetail</a> smart constructor.
data ReviewActionDetail
ReviewActionDetail' :: Maybe ReviewActionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ReviewActionDetail

-- | The current disposition of the action: INTENDED, SUCCEEDED, FAILED, or
--   CANCELLED.
[$sel:status:ReviewActionDetail'] :: ReviewActionDetail -> Maybe ReviewActionStatus

-- | The specific HITId or AssignmentID targeted by the action.
[$sel:targetId:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | The unique identifier for the action.
[$sel:actionId:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | The type of object in TargetId.
[$sel:targetType:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | A description of the outcome of the review.
[$sel:result:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | The nature of the action itself. The Review Policy is responsible for
--   examining the HIT and Assignments, emitting results, and deciding
--   which other actions will be necessary.
[$sel:actionName:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | The date when the action was completed.
[$sel:completeTime:ReviewActionDetail'] :: ReviewActionDetail -> Maybe POSIX

-- | Present only when the Results have a FAILED Status.
[$sel:errorCode:ReviewActionDetail'] :: ReviewActionDetail -> Maybe Text

-- | Create a value of <a>ReviewActionDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_status</a> - The current disposition of the
--   action: INTENDED, SUCCEEDED, FAILED, or CANCELLED.
--   
--   <a>$sel:targetId:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_targetId</a> - The specific HITId or
--   AssignmentID targeted by the action.
--   
--   <a>$sel:actionId:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_actionId</a> - The unique identifier for the
--   action.
--   
--   <a>$sel:targetType:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_targetType</a> - The type of object in TargetId.
--   
--   <a>$sel:result:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_result</a> - A description of the outcome of the
--   review.
--   
--   <a>$sel:actionName:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_actionName</a> - The nature of the action
--   itself. The Review Policy is responsible for examining the HIT and
--   Assignments, emitting results, and deciding which other actions will
--   be necessary.
--   
--   <a>$sel:completeTime:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_completeTime</a> - The date when the action was
--   completed.
--   
--   <a>$sel:errorCode:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_errorCode</a> - Present only when the Results
--   have a FAILED Status.
newReviewActionDetail :: ReviewActionDetail

-- | The current disposition of the action: INTENDED, SUCCEEDED, FAILED, or
--   CANCELLED.
reviewActionDetail_status :: Lens' ReviewActionDetail (Maybe ReviewActionStatus)

-- | The specific HITId or AssignmentID targeted by the action.
reviewActionDetail_targetId :: Lens' ReviewActionDetail (Maybe Text)

-- | The unique identifier for the action.
reviewActionDetail_actionId :: Lens' ReviewActionDetail (Maybe Text)

-- | The type of object in TargetId.
reviewActionDetail_targetType :: Lens' ReviewActionDetail (Maybe Text)

-- | A description of the outcome of the review.
reviewActionDetail_result :: Lens' ReviewActionDetail (Maybe Text)

-- | The nature of the action itself. The Review Policy is responsible for
--   examining the HIT and Assignments, emitting results, and deciding
--   which other actions will be necessary.
reviewActionDetail_actionName :: Lens' ReviewActionDetail (Maybe Text)

-- | The date when the action was completed.
reviewActionDetail_completeTime :: Lens' ReviewActionDetail (Maybe UTCTime)

-- | Present only when the Results have a FAILED Status.
reviewActionDetail_errorCode :: Lens' ReviewActionDetail (Maybe Text)

-- | HIT Review Policy data structures represent HIT review policies, which
--   you specify when you create a HIT.
--   
--   <i>See:</i> <a>newReviewPolicy</a> smart constructor.
data ReviewPolicy
ReviewPolicy' :: Maybe [PolicyParameter] -> Text -> ReviewPolicy

-- | Name of the parameter from the Review policy.
[$sel:parameters:ReviewPolicy'] :: ReviewPolicy -> Maybe [PolicyParameter]

-- | Name of a Review Policy: SimplePlurality/2011-09-01 or
--   ScoreMyKnownAnswers/2011-09-01
[$sel:policyName:ReviewPolicy'] :: ReviewPolicy -> Text

-- | Create a value of <a>ReviewPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ReviewPolicy'</a>, <a>reviewPolicy_parameters</a> -
--   Name of the parameter from the Review policy.
--   
--   <a>$sel:policyName:ReviewPolicy'</a>, <a>reviewPolicy_policyName</a> -
--   Name of a Review Policy: SimplePlurality/2011-09-01 or
--   ScoreMyKnownAnswers/2011-09-01
newReviewPolicy :: Text -> ReviewPolicy

-- | Name of the parameter from the Review policy.
reviewPolicy_parameters :: Lens' ReviewPolicy (Maybe [PolicyParameter])

-- | Name of a Review Policy: SimplePlurality/2011-09-01 or
--   ScoreMyKnownAnswers/2011-09-01
reviewPolicy_policyName :: Lens' ReviewPolicy Text

-- | Contains both ReviewResult and ReviewAction elements for a particular
--   HIT.
--   
--   <i>See:</i> <a>newReviewReport</a> smart constructor.
data ReviewReport
ReviewReport' :: Maybe [ReviewActionDetail] -> Maybe [ReviewResultDetail] -> ReviewReport

-- | A list of ReviewAction objects for each action specified in the Review
--   Policy.
[$sel:reviewActions:ReviewReport'] :: ReviewReport -> Maybe [ReviewActionDetail]

-- | A list of ReviewResults objects for each action specified in the
--   Review Policy.
[$sel:reviewResults:ReviewReport'] :: ReviewReport -> Maybe [ReviewResultDetail]

-- | Create a value of <a>ReviewReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reviewActions:ReviewReport'</a>,
--   <a>reviewReport_reviewActions</a> - A list of ReviewAction objects for
--   each action specified in the Review Policy.
--   
--   <a>$sel:reviewResults:ReviewReport'</a>,
--   <a>reviewReport_reviewResults</a> - A list of ReviewResults objects
--   for each action specified in the Review Policy.
newReviewReport :: ReviewReport

-- | A list of ReviewAction objects for each action specified in the Review
--   Policy.
reviewReport_reviewActions :: Lens' ReviewReport (Maybe [ReviewActionDetail])

-- | A list of ReviewResults objects for each action specified in the
--   Review Policy.
reviewReport_reviewResults :: Lens' ReviewReport (Maybe [ReviewResultDetail])

-- | This data structure is returned multiple times for each result
--   specified in the Review Policy.
--   
--   <i>See:</i> <a>newReviewResultDetail</a> smart constructor.
data ReviewResultDetail
ReviewResultDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ReviewResultDetail

-- | The values of Key provided by the review policies you have selected.
[$sel:value:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | A unique identifier of the Review action result.
[$sel:actionId:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | The type of the object from the SubjectId field.
[$sel:subjectType:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | Key identifies the particular piece of reviewed information.
[$sel:key:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | Specifies the QuestionId the result is describing. Depending on
--   whether the TargetType is a HIT or Assignment this results could
--   specify multiple values. If TargetType is HIT and QuestionId is
--   absent, then the result describes results of the HIT, including the
--   HIT agreement score. If ObjectType is Assignment and QuestionId is
--   absent, then the result describes the Worker's performance on the HIT.
[$sel:questionId:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | The HITID or AssignmentId about which this result was taken. Note that
--   HIT-level Review Policies will often emit results about both the HIT
--   itself and its Assignments, while Assignment-level review policies
--   generally only emit results about the Assignment itself.
[$sel:subjectId:ReviewResultDetail'] :: ReviewResultDetail -> Maybe Text

-- | Create a value of <a>ReviewResultDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ReviewResultDetail'</a>, <a>reviewResultDetail_value</a>
--   - The values of Key provided by the review policies you have selected.
--   
--   <a>$sel:actionId:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_actionId</a> - A unique identifier of the Review
--   action result.
--   
--   <a>$sel:subjectType:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_subjectType</a> - The type of the object from
--   the SubjectId field.
--   
--   <a>$sel:key:ReviewResultDetail'</a>, <a>reviewResultDetail_key</a> -
--   Key identifies the particular piece of reviewed information.
--   
--   <a>$sel:questionId:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_questionId</a> - Specifies the QuestionId the
--   result is describing. Depending on whether the TargetType is a HIT or
--   Assignment this results could specify multiple values. If TargetType
--   is HIT and QuestionId is absent, then the result describes results of
--   the HIT, including the HIT agreement score. If ObjectType is
--   Assignment and QuestionId is absent, then the result describes the
--   Worker's performance on the HIT.
--   
--   <a>$sel:subjectId:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_subjectId</a> - The HITID or AssignmentId about
--   which this result was taken. Note that HIT-level Review Policies will
--   often emit results about both the HIT itself and its Assignments,
--   while Assignment-level review policies generally only emit results
--   about the Assignment itself.
newReviewResultDetail :: ReviewResultDetail

-- | The values of Key provided by the review policies you have selected.
reviewResultDetail_value :: Lens' ReviewResultDetail (Maybe Text)

-- | A unique identifier of the Review action result.
reviewResultDetail_actionId :: Lens' ReviewResultDetail (Maybe Text)

-- | The type of the object from the SubjectId field.
reviewResultDetail_subjectType :: Lens' ReviewResultDetail (Maybe Text)

-- | Key identifies the particular piece of reviewed information.
reviewResultDetail_key :: Lens' ReviewResultDetail (Maybe Text)

-- | Specifies the QuestionId the result is describing. Depending on
--   whether the TargetType is a HIT or Assignment this results could
--   specify multiple values. If TargetType is HIT and QuestionId is
--   absent, then the result describes results of the HIT, including the
--   HIT agreement score. If ObjectType is Assignment and QuestionId is
--   absent, then the result describes the Worker's performance on the HIT.
reviewResultDetail_questionId :: Lens' ReviewResultDetail (Maybe Text)

-- | The HITID or AssignmentId about which this result was taken. Note that
--   HIT-level Review Policies will often emit results about both the HIT
--   itself and its Assignments, while Assignment-level review policies
--   generally only emit results about the Assignment itself.
reviewResultDetail_subjectId :: Lens' ReviewResultDetail (Maybe Text)

-- | The WorkerBlock data structure represents a Worker who has been
--   blocked. It has two elements: the WorkerId and the Reason for the
--   block.
--   
--   <i>See:</i> <a>newWorkerBlock</a> smart constructor.
data WorkerBlock
WorkerBlock' :: Maybe Text -> Maybe Text -> WorkerBlock

-- | A message explaining the reason the Worker was blocked.
[$sel:reason:WorkerBlock'] :: WorkerBlock -> Maybe Text

-- | The ID of the Worker who accepted the HIT.
[$sel:workerId:WorkerBlock'] :: WorkerBlock -> Maybe Text

-- | Create a value of <a>WorkerBlock</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:WorkerBlock'</a>, <a>workerBlock_reason</a> - A message
--   explaining the reason the Worker was blocked.
--   
--   <a>$sel:workerId:WorkerBlock'</a>, <a>workerBlock_workerId</a> - The
--   ID of the Worker who accepted the HIT.
newWorkerBlock :: WorkerBlock

-- | A message explaining the reason the Worker was blocked.
workerBlock_reason :: Lens' WorkerBlock (Maybe Text)

-- | The ID of the Worker who accepted the HIT.
workerBlock_workerId :: Lens' WorkerBlock (Maybe Text)


-- | The <tt>SendTestEventNotification</tt> operation causes Amazon
--   Mechanical Turk to send a notification message as if a HIT event
--   occurred, according to the provided notification specification. This
--   allows you to test notifications without setting up notifications for
--   a real HIT type and trying to trigger them using the website. When you
--   call this operation, the service attempts to send the test
--   notification immediately.
module Amazonka.MechanicalTurk.SendTestEventNotification

-- | <i>See:</i> <a>newSendTestEventNotification</a> smart constructor.
data SendTestEventNotification
SendTestEventNotification' :: NotificationSpecification -> EventType -> SendTestEventNotification

-- | The notification specification to test. This value is identical to the
--   value you would provide to the UpdateNotificationSettings operation
--   when you establish the notification specification for a HIT type.
[$sel:notification:SendTestEventNotification'] :: SendTestEventNotification -> NotificationSpecification

-- | The event to simulate to test the notification specification. This
--   event is included in the test message even if the notification
--   specification does not include the event type. The notification
--   specification does not filter out the test event.
[$sel:testEventType:SendTestEventNotification'] :: SendTestEventNotification -> EventType

-- | Create a value of <a>SendTestEventNotification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notification:SendTestEventNotification'</a>,
--   <a>sendTestEventNotification_notification</a> - The notification
--   specification to test. This value is identical to the value you would
--   provide to the UpdateNotificationSettings operation when you establish
--   the notification specification for a HIT type.
--   
--   <a>$sel:testEventType:SendTestEventNotification'</a>,
--   <a>sendTestEventNotification_testEventType</a> - The event to simulate
--   to test the notification specification. This event is included in the
--   test message even if the notification specification does not include
--   the event type. The notification specification does not filter out the
--   test event.
newSendTestEventNotification :: NotificationSpecification -> EventType -> SendTestEventNotification

-- | The notification specification to test. This value is identical to the
--   value you would provide to the UpdateNotificationSettings operation
--   when you establish the notification specification for a HIT type.
sendTestEventNotification_notification :: Lens' SendTestEventNotification NotificationSpecification

-- | The event to simulate to test the notification specification. This
--   event is included in the test message even if the notification
--   specification does not include the event type. The notification
--   specification does not filter out the test event.
sendTestEventNotification_testEventType :: Lens' SendTestEventNotification EventType

-- | <i>See:</i> <a>newSendTestEventNotificationResponse</a> smart
--   constructor.
data SendTestEventNotificationResponse
SendTestEventNotificationResponse' :: Int -> SendTestEventNotificationResponse

-- | The response's http status code.
[$sel:httpStatus:SendTestEventNotificationResponse'] :: SendTestEventNotificationResponse -> Int

-- | Create a value of <a>SendTestEventNotificationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SendTestEventNotificationResponse'</a>,
--   <a>sendTestEventNotificationResponse_httpStatus</a> - The response's
--   http status code.
newSendTestEventNotificationResponse :: Int -> SendTestEventNotificationResponse

-- | The response's http status code.
sendTestEventNotificationResponse_httpStatus :: Lens' SendTestEventNotificationResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotification
instance GHC.Show.Show Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotification
instance GHC.Read.Read Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotification
instance GHC.Classes.Eq Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotification
instance GHC.Generics.Generic Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotificationResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotificationResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotificationResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotificationResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotification
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotificationResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotification
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotification
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotification
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotification
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotification
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.SendTestEventNotification.SendTestEventNotification


-- | The <tt>SendBonus</tt> operation issues a payment of money from your
--   account to a Worker. This payment happens separately from the reward
--   you pay to the Worker when you approve the Worker's assignment. The
--   SendBonus operation requires the Worker's ID and the assignment ID as
--   parameters to initiate payment of the bonus. You must include a
--   message that explains the reason for the bonus payment, as the Worker
--   may not be expecting the payment. Amazon Mechanical Turk collects a
--   fee for bonus payments, similar to the HIT listing fee. This operation
--   fails if your account does not have enough funds to pay for both the
--   bonus and the fees.
module Amazonka.MechanicalTurk.SendBonus

-- | <i>See:</i> <a>newSendBonus</a> smart constructor.
data SendBonus
SendBonus' :: Maybe Text -> Text -> Text -> Text -> Text -> SendBonus

-- | A unique identifier for this request, which allows you to retry the
--   call on error without granting multiple bonuses. This is useful in
--   cases such as network timeouts where it is unclear whether or not the
--   call succeeded on the server. If the bonus already exists in the
--   system from a previous call using the same UniqueRequestToken,
--   subsequent calls will return an error with a message containing the
--   request ID.
[$sel:uniqueRequestToken:SendBonus'] :: SendBonus -> Maybe Text

-- | The ID of the Worker being paid the bonus.
[$sel:workerId:SendBonus'] :: SendBonus -> Text

-- | The Bonus amount is a US Dollar amount specified using a string (for
--   example, "5" represents $5.00 USD and "101.42" represents $101.42
--   USD). Do not include currency symbols or currency codes.
[$sel:bonusAmount:SendBonus'] :: SendBonus -> Text

-- | The ID of the assignment for which this bonus is paid.
[$sel:assignmentId:SendBonus'] :: SendBonus -> Text

-- | A message that explains the reason for the bonus payment. The Worker
--   receiving the bonus can see this message.
[$sel:reason:SendBonus'] :: SendBonus -> Text

-- | Create a value of <a>SendBonus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uniqueRequestToken:SendBonus'</a>,
--   <a>sendBonus_uniqueRequestToken</a> - A unique identifier for this
--   request, which allows you to retry the call on error without granting
--   multiple bonuses. This is useful in cases such as network timeouts
--   where it is unclear whether or not the call succeeded on the server.
--   If the bonus already exists in the system from a previous call using
--   the same UniqueRequestToken, subsequent calls will return an error
--   with a message containing the request ID.
--   
--   <a>$sel:workerId:SendBonus'</a>, <a>sendBonus_workerId</a> - The ID of
--   the Worker being paid the bonus.
--   
--   <a>$sel:bonusAmount:SendBonus'</a>, <a>sendBonus_bonusAmount</a> - The
--   Bonus amount is a US Dollar amount specified using a string (for
--   example, "5" represents $5.00 USD and "101.42" represents $101.42
--   USD). Do not include currency symbols or currency codes.
--   
--   <a>$sel:assignmentId:SendBonus'</a>, <a>sendBonus_assignmentId</a> -
--   The ID of the assignment for which this bonus is paid.
--   
--   <a>$sel:reason:SendBonus'</a>, <a>sendBonus_reason</a> - A message
--   that explains the reason for the bonus payment. The Worker receiving
--   the bonus can see this message.
newSendBonus :: Text -> Text -> Text -> Text -> SendBonus

-- | A unique identifier for this request, which allows you to retry the
--   call on error without granting multiple bonuses. This is useful in
--   cases such as network timeouts where it is unclear whether or not the
--   call succeeded on the server. If the bonus already exists in the
--   system from a previous call using the same UniqueRequestToken,
--   subsequent calls will return an error with a message containing the
--   request ID.
sendBonus_uniqueRequestToken :: Lens' SendBonus (Maybe Text)

-- | The ID of the Worker being paid the bonus.
sendBonus_workerId :: Lens' SendBonus Text

-- | The Bonus amount is a US Dollar amount specified using a string (for
--   example, "5" represents $5.00 USD and "101.42" represents $101.42
--   USD). Do not include currency symbols or currency codes.
sendBonus_bonusAmount :: Lens' SendBonus Text

-- | The ID of the assignment for which this bonus is paid.
sendBonus_assignmentId :: Lens' SendBonus Text

-- | A message that explains the reason for the bonus payment. The Worker
--   receiving the bonus can see this message.
sendBonus_reason :: Lens' SendBonus Text

-- | <i>See:</i> <a>newSendBonusResponse</a> smart constructor.
data SendBonusResponse
SendBonusResponse' :: Int -> SendBonusResponse

-- | The response's http status code.
[$sel:httpStatus:SendBonusResponse'] :: SendBonusResponse -> Int

-- | Create a value of <a>SendBonusResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SendBonusResponse'</a>,
--   <a>sendBonusResponse_httpStatus</a> - The response's http status code.
newSendBonusResponse :: Int -> SendBonusResponse

-- | The response's http status code.
sendBonusResponse_httpStatus :: Lens' SendBonusResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.SendBonus.SendBonus
instance GHC.Show.Show Amazonka.MechanicalTurk.SendBonus.SendBonus
instance GHC.Read.Read Amazonka.MechanicalTurk.SendBonus.SendBonus
instance GHC.Classes.Eq Amazonka.MechanicalTurk.SendBonus.SendBonus
instance GHC.Generics.Generic Amazonka.MechanicalTurk.SendBonus.SendBonusResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.SendBonus.SendBonusResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.SendBonus.SendBonusResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.SendBonus.SendBonusResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.SendBonus.SendBonus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.SendBonus.SendBonusResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.SendBonus.SendBonus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.SendBonus.SendBonus
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.SendBonus.SendBonus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.SendBonus.SendBonus
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.SendBonus.SendBonus
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.SendBonus.SendBonus


-- | The <tt>RejectQualificationRequest</tt> operation rejects a user's
--   request for a Qualification.
--   
--   You can provide a text message explaining why the request was
--   rejected. The Worker who made the request can see this message.
module Amazonka.MechanicalTurk.RejectQualificationRequest

-- | <i>See:</i> <a>newRejectQualificationRequest</a> smart constructor.
data RejectQualificationRequest
RejectQualificationRequest' :: Maybe Text -> Text -> RejectQualificationRequest

-- | A text message explaining why the request was rejected, to be shown to
--   the Worker who made the request.
[$sel:reason:RejectQualificationRequest'] :: RejectQualificationRequest -> Maybe Text

-- | The ID of the Qualification request, as returned by the
--   <tt>ListQualificationRequests</tt> operation.
[$sel:qualificationRequestId:RejectQualificationRequest'] :: RejectQualificationRequest -> Text

-- | Create a value of <a>RejectQualificationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:RejectQualificationRequest'</a>,
--   <a>rejectQualificationRequest_reason</a> - A text message explaining
--   why the request was rejected, to be shown to the Worker who made the
--   request.
--   
--   <a>$sel:qualificationRequestId:RejectQualificationRequest'</a>,
--   <a>rejectQualificationRequest_qualificationRequestId</a> - The ID of
--   the Qualification request, as returned by the
--   <tt>ListQualificationRequests</tt> operation.
newRejectQualificationRequest :: Text -> RejectQualificationRequest

-- | A text message explaining why the request was rejected, to be shown to
--   the Worker who made the request.
rejectQualificationRequest_reason :: Lens' RejectQualificationRequest (Maybe Text)

-- | The ID of the Qualification request, as returned by the
--   <tt>ListQualificationRequests</tt> operation.
rejectQualificationRequest_qualificationRequestId :: Lens' RejectQualificationRequest Text

-- | <i>See:</i> <a>newRejectQualificationRequestResponse</a> smart
--   constructor.
data RejectQualificationRequestResponse
RejectQualificationRequestResponse' :: Int -> RejectQualificationRequestResponse

-- | The response's http status code.
[$sel:httpStatus:RejectQualificationRequestResponse'] :: RejectQualificationRequestResponse -> Int

-- | Create a value of <a>RejectQualificationRequestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RejectQualificationRequestResponse'</a>,
--   <a>rejectQualificationRequestResponse_httpStatus</a> - The response's
--   http status code.
newRejectQualificationRequestResponse :: Int -> RejectQualificationRequestResponse

-- | The response's http status code.
rejectQualificationRequestResponse_httpStatus :: Lens' RejectQualificationRequestResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequest
instance GHC.Show.Show Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequest
instance GHC.Read.Read Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequest
instance GHC.Classes.Eq Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequest
instance GHC.Generics.Generic Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequestResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequestResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequestResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequestResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequest
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequestResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequest
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequest
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequest
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequest
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.RejectQualificationRequest.RejectQualificationRequest


-- | The <tt>RejectAssignment</tt> operation rejects the results of a
--   completed assignment.
--   
--   You can include an optional feedback message with the rejection, which
--   the Worker can see in the Status section of the web site. When you
--   include a feedback message with the rejection, it helps the Worker
--   understand why the assignment was rejected, and can improve the
--   quality of the results the Worker submits in the future.
--   
--   Only the Requester who created the HIT can reject an assignment for
--   the HIT.
module Amazonka.MechanicalTurk.RejectAssignment

-- | <i>See:</i> <a>newRejectAssignment</a> smart constructor.
data RejectAssignment
RejectAssignment' :: Text -> Text -> RejectAssignment

-- | The ID of the assignment. The assignment must correspond to a HIT
--   created by the Requester.
[$sel:assignmentId:RejectAssignment'] :: RejectAssignment -> Text

-- | A message for the Worker, which the Worker can see in the Status
--   section of the web site.
[$sel:requesterFeedback:RejectAssignment'] :: RejectAssignment -> Text

-- | Create a value of <a>RejectAssignment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assignmentId:RejectAssignment'</a>,
--   <a>rejectAssignment_assignmentId</a> - The ID of the assignment. The
--   assignment must correspond to a HIT created by the Requester.
--   
--   <a>$sel:requesterFeedback:RejectAssignment'</a>,
--   <a>rejectAssignment_requesterFeedback</a> - A message for the Worker,
--   which the Worker can see in the Status section of the web site.
newRejectAssignment :: Text -> Text -> RejectAssignment

-- | The ID of the assignment. The assignment must correspond to a HIT
--   created by the Requester.
rejectAssignment_assignmentId :: Lens' RejectAssignment Text

-- | A message for the Worker, which the Worker can see in the Status
--   section of the web site.
rejectAssignment_requesterFeedback :: Lens' RejectAssignment Text

-- | <i>See:</i> <a>newRejectAssignmentResponse</a> smart constructor.
data RejectAssignmentResponse
RejectAssignmentResponse' :: Int -> RejectAssignmentResponse

-- | The response's http status code.
[$sel:httpStatus:RejectAssignmentResponse'] :: RejectAssignmentResponse -> Int

-- | Create a value of <a>RejectAssignmentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RejectAssignmentResponse'</a>,
--   <a>rejectAssignmentResponse_httpStatus</a> - The response's http
--   status code.
newRejectAssignmentResponse :: Int -> RejectAssignmentResponse

-- | The response's http status code.
rejectAssignmentResponse_httpStatus :: Lens' RejectAssignmentResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.RejectAssignment.RejectAssignment
instance GHC.Show.Show Amazonka.MechanicalTurk.RejectAssignment.RejectAssignment
instance GHC.Read.Read Amazonka.MechanicalTurk.RejectAssignment.RejectAssignment
instance GHC.Classes.Eq Amazonka.MechanicalTurk.RejectAssignment.RejectAssignment
instance GHC.Generics.Generic Amazonka.MechanicalTurk.RejectAssignment.RejectAssignmentResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.RejectAssignment.RejectAssignmentResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.RejectAssignment.RejectAssignmentResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.RejectAssignment.RejectAssignmentResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.RejectAssignment.RejectAssignment
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.RejectAssignment.RejectAssignmentResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.RejectAssignment.RejectAssignment
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.RejectAssignment.RejectAssignment
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.RejectAssignment.RejectAssignment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.RejectAssignment.RejectAssignment
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.RejectAssignment.RejectAssignment
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.RejectAssignment.RejectAssignment


-- | The <tt>NotifyWorkers</tt> operation sends an email to one or more
--   Workers that you specify with the Worker ID. You can specify up to 100
--   Worker IDs to send the same message with a single call to the
--   NotifyWorkers operation. The NotifyWorkers operation will send a
--   notification email to a Worker only if you have previously approved or
--   rejected work from the Worker.
module Amazonka.MechanicalTurk.NotifyWorkers

-- | <i>See:</i> <a>newNotifyWorkers</a> smart constructor.
data NotifyWorkers
NotifyWorkers' :: Text -> Text -> [Text] -> NotifyWorkers

-- | The subject line of the email message to send. Can include up to 200
--   characters.
[$sel:subject:NotifyWorkers'] :: NotifyWorkers -> Text

-- | The text of the email message to send. Can include up to 4,096
--   characters
[$sel:messageText:NotifyWorkers'] :: NotifyWorkers -> Text

-- | A list of Worker IDs you wish to notify. You can notify upto 100
--   Workers at a time.
[$sel:workerIds:NotifyWorkers'] :: NotifyWorkers -> [Text]

-- | Create a value of <a>NotifyWorkers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subject:NotifyWorkers'</a>, <a>notifyWorkers_subject</a> - The
--   subject line of the email message to send. Can include up to 200
--   characters.
--   
--   <a>$sel:messageText:NotifyWorkers'</a>,
--   <a>notifyWorkers_messageText</a> - The text of the email message to
--   send. Can include up to 4,096 characters
--   
--   <a>$sel:workerIds:NotifyWorkers'</a>, <a>notifyWorkers_workerIds</a> -
--   A list of Worker IDs you wish to notify. You can notify upto 100
--   Workers at a time.
newNotifyWorkers :: Text -> Text -> NotifyWorkers

-- | The subject line of the email message to send. Can include up to 200
--   characters.
notifyWorkers_subject :: Lens' NotifyWorkers Text

-- | The text of the email message to send. Can include up to 4,096
--   characters
notifyWorkers_messageText :: Lens' NotifyWorkers Text

-- | A list of Worker IDs you wish to notify. You can notify upto 100
--   Workers at a time.
notifyWorkers_workerIds :: Lens' NotifyWorkers [Text]

-- | <i>See:</i> <a>newNotifyWorkersResponse</a> smart constructor.
data NotifyWorkersResponse
NotifyWorkersResponse' :: Maybe [NotifyWorkersFailureStatus] -> Int -> NotifyWorkersResponse

-- | When MTurk sends notifications to the list of Workers, it returns back
--   any failures it encounters in this list of NotifyWorkersFailureStatus
--   objects.
[$sel:notifyWorkersFailureStatuses:NotifyWorkersResponse'] :: NotifyWorkersResponse -> Maybe [NotifyWorkersFailureStatus]

-- | The response's http status code.
[$sel:httpStatus:NotifyWorkersResponse'] :: NotifyWorkersResponse -> Int

-- | Create a value of <a>NotifyWorkersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyWorkersFailureStatuses:NotifyWorkersResponse'</a>,
--   <a>notifyWorkersResponse_notifyWorkersFailureStatuses</a> - When MTurk
--   sends notifications to the list of Workers, it returns back any
--   failures it encounters in this list of NotifyWorkersFailureStatus
--   objects.
--   
--   <a>$sel:httpStatus:NotifyWorkersResponse'</a>,
--   <a>notifyWorkersResponse_httpStatus</a> - The response's http status
--   code.
newNotifyWorkersResponse :: Int -> NotifyWorkersResponse

-- | When MTurk sends notifications to the list of Workers, it returns back
--   any failures it encounters in this list of NotifyWorkersFailureStatus
--   objects.
notifyWorkersResponse_notifyWorkersFailureStatuses :: Lens' NotifyWorkersResponse (Maybe [NotifyWorkersFailureStatus])

-- | The response's http status code.
notifyWorkersResponse_httpStatus :: Lens' NotifyWorkersResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkers
instance GHC.Show.Show Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkers
instance GHC.Read.Read Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkers
instance GHC.Classes.Eq Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkers
instance GHC.Generics.Generic Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkersResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkersResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkersResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkersResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkers
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkersResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkers
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkers
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkers
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkers
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkers
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.NotifyWorkers.NotifyWorkers


-- | The <tt>ListWorkersWithQualificationType</tt> operation returns all of
--   the Workers that have been associated with a given Qualification type.
--   
--   This operation returns paginated results.
module Amazonka.MechanicalTurk.ListWorkersWithQualificationType

-- | <i>See:</i> <a>newListWorkersWithQualificationType</a> smart
--   constructor.
data ListWorkersWithQualificationType
ListWorkersWithQualificationType' :: Maybe QualificationStatus -> Maybe Text -> Maybe Natural -> Text -> ListWorkersWithQualificationType

-- | The status of the Qualifications to return. Can be <tt>Granted |
--   Revoked</tt>.
[$sel:status:ListWorkersWithQualificationType'] :: ListWorkersWithQualificationType -> Maybe QualificationStatus

-- | Pagination Token
[$sel:nextToken:ListWorkersWithQualificationType'] :: ListWorkersWithQualificationType -> Maybe Text

-- | Limit the number of results returned.
[$sel:maxResults:ListWorkersWithQualificationType'] :: ListWorkersWithQualificationType -> Maybe Natural

-- | The ID of the Qualification type of the Qualifications to return.
[$sel:qualificationTypeId:ListWorkersWithQualificationType'] :: ListWorkersWithQualificationType -> Text

-- | Create a value of <a>ListWorkersWithQualificationType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListWorkersWithQualificationType'</a>,
--   <a>listWorkersWithQualificationType_status</a> - The status of the
--   Qualifications to return. Can be <tt>Granted | Revoked</tt>.
--   
--   <a>$sel:nextToken:ListWorkersWithQualificationType'</a>,
--   <a>listWorkersWithQualificationType_nextToken</a> - Pagination Token
--   
--   <a>$sel:maxResults:ListWorkersWithQualificationType'</a>,
--   <a>listWorkersWithQualificationType_maxResults</a> - Limit the number
--   of results returned.
--   
--   <a>$sel:qualificationTypeId:ListWorkersWithQualificationType'</a>,
--   <a>listWorkersWithQualificationType_qualificationTypeId</a> - The ID
--   of the Qualification type of the Qualifications to return.
newListWorkersWithQualificationType :: Text -> ListWorkersWithQualificationType

-- | The status of the Qualifications to return. Can be <tt>Granted |
--   Revoked</tt>.
listWorkersWithQualificationType_status :: Lens' ListWorkersWithQualificationType (Maybe QualificationStatus)

-- | Pagination Token
listWorkersWithQualificationType_nextToken :: Lens' ListWorkersWithQualificationType (Maybe Text)

-- | Limit the number of results returned.
listWorkersWithQualificationType_maxResults :: Lens' ListWorkersWithQualificationType (Maybe Natural)

-- | The ID of the Qualification type of the Qualifications to return.
listWorkersWithQualificationType_qualificationTypeId :: Lens' ListWorkersWithQualificationType Text

-- | <i>See:</i> <a>newListWorkersWithQualificationTypeResponse</a> smart
--   constructor.
data ListWorkersWithQualificationTypeResponse
ListWorkersWithQualificationTypeResponse' :: Maybe Text -> Maybe Int -> Maybe [Qualification] -> Int -> ListWorkersWithQualificationTypeResponse
[$sel:nextToken:ListWorkersWithQualificationTypeResponse'] :: ListWorkersWithQualificationTypeResponse -> Maybe Text

-- | The number of Qualifications on this page in the filtered results
--   list, equivalent to the number of Qualifications being returned by
--   this call.
[$sel:numResults:ListWorkersWithQualificationTypeResponse'] :: ListWorkersWithQualificationTypeResponse -> Maybe Int

-- | The list of Qualification elements returned by this call.
[$sel:qualifications:ListWorkersWithQualificationTypeResponse'] :: ListWorkersWithQualificationTypeResponse -> Maybe [Qualification]

-- | The response's http status code.
[$sel:httpStatus:ListWorkersWithQualificationTypeResponse'] :: ListWorkersWithQualificationTypeResponse -> Int

-- | Create a value of <a>ListWorkersWithQualificationTypeResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkersWithQualificationType'</a>,
--   <a>listWorkersWithQualificationTypeResponse_nextToken</a> -
--   Undocumented member.
--   
--   <a>$sel:numResults:ListWorkersWithQualificationTypeResponse'</a>,
--   <a>listWorkersWithQualificationTypeResponse_numResults</a> - The
--   number of Qualifications on this page in the filtered results list,
--   equivalent to the number of Qualifications being returned by this
--   call.
--   
--   <a>$sel:qualifications:ListWorkersWithQualificationTypeResponse'</a>,
--   <a>listWorkersWithQualificationTypeResponse_qualifications</a> - The
--   list of Qualification elements returned by this call.
--   
--   <a>$sel:httpStatus:ListWorkersWithQualificationTypeResponse'</a>,
--   <a>listWorkersWithQualificationTypeResponse_httpStatus</a> - The
--   response's http status code.
newListWorkersWithQualificationTypeResponse :: Int -> ListWorkersWithQualificationTypeResponse

-- | Undocumented member.
listWorkersWithQualificationTypeResponse_nextToken :: Lens' ListWorkersWithQualificationTypeResponse (Maybe Text)

-- | The number of Qualifications on this page in the filtered results
--   list, equivalent to the number of Qualifications being returned by
--   this call.
listWorkersWithQualificationTypeResponse_numResults :: Lens' ListWorkersWithQualificationTypeResponse (Maybe Int)

-- | The list of Qualification elements returned by this call.
listWorkersWithQualificationTypeResponse_qualifications :: Lens' ListWorkersWithQualificationTypeResponse (Maybe [Qualification])

-- | The response's http status code.
listWorkersWithQualificationTypeResponse_httpStatus :: Lens' ListWorkersWithQualificationTypeResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType
instance GHC.Show.Show Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType
instance GHC.Read.Read Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationTypeResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationTypeResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationTypeResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationTypeResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationTypeResponse
instance Amazonka.Pager.AWSPager Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.ListWorkersWithQualificationType.ListWorkersWithQualificationType


-- | The <tt>ListWorkersBlocks</tt> operation retrieves a list of Workers
--   who are blocked from working on your HITs.
--   
--   This operation returns paginated results.
module Amazonka.MechanicalTurk.ListWorkerBlocks

-- | <i>See:</i> <a>newListWorkerBlocks</a> smart constructor.
data ListWorkerBlocks
ListWorkerBlocks' :: Maybe Text -> Maybe Natural -> ListWorkerBlocks

-- | Pagination token
[$sel:nextToken:ListWorkerBlocks'] :: ListWorkerBlocks -> Maybe Text
[$sel:maxResults:ListWorkerBlocks'] :: ListWorkerBlocks -> Maybe Natural

-- | Create a value of <a>ListWorkerBlocks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkerBlocks'</a>,
--   <a>listWorkerBlocks_nextToken</a> - Pagination token
--   
--   <a>$sel:maxResults:ListWorkerBlocks'</a>,
--   <a>listWorkerBlocks_maxResults</a> - Undocumented member.
newListWorkerBlocks :: ListWorkerBlocks

-- | Pagination token
listWorkerBlocks_nextToken :: Lens' ListWorkerBlocks (Maybe Text)

-- | Undocumented member.
listWorkerBlocks_maxResults :: Lens' ListWorkerBlocks (Maybe Natural)

-- | <i>See:</i> <a>newListWorkerBlocksResponse</a> smart constructor.
data ListWorkerBlocksResponse
ListWorkerBlocksResponse' :: Maybe [WorkerBlock] -> Maybe Text -> Maybe Int -> Int -> ListWorkerBlocksResponse

-- | The list of WorkerBlocks, containing the collection of Worker IDs and
--   reasons for blocking.
[$sel:workerBlocks:ListWorkerBlocksResponse'] :: ListWorkerBlocksResponse -> Maybe [WorkerBlock]
[$sel:nextToken:ListWorkerBlocksResponse'] :: ListWorkerBlocksResponse -> Maybe Text

-- | The number of assignments on the page in the filtered results list,
--   equivalent to the number of assignments returned by this call.
[$sel:numResults:ListWorkerBlocksResponse'] :: ListWorkerBlocksResponse -> Maybe Int

-- | The response's http status code.
[$sel:httpStatus:ListWorkerBlocksResponse'] :: ListWorkerBlocksResponse -> Int

-- | Create a value of <a>ListWorkerBlocksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workerBlocks:ListWorkerBlocksResponse'</a>,
--   <a>listWorkerBlocksResponse_workerBlocks</a> - The list of
--   WorkerBlocks, containing the collection of Worker IDs and reasons for
--   blocking.
--   
--   <a>$sel:nextToken:ListWorkerBlocks'</a>,
--   <a>listWorkerBlocksResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:numResults:ListWorkerBlocksResponse'</a>,
--   <a>listWorkerBlocksResponse_numResults</a> - The number of assignments
--   on the page in the filtered results list, equivalent to the number of
--   assignments returned by this call.
--   
--   <a>$sel:httpStatus:ListWorkerBlocksResponse'</a>,
--   <a>listWorkerBlocksResponse_httpStatus</a> - The response's http
--   status code.
newListWorkerBlocksResponse :: Int -> ListWorkerBlocksResponse

-- | The list of WorkerBlocks, containing the collection of Worker IDs and
--   reasons for blocking.
listWorkerBlocksResponse_workerBlocks :: Lens' ListWorkerBlocksResponse (Maybe [WorkerBlock])

-- | Undocumented member.
listWorkerBlocksResponse_nextToken :: Lens' ListWorkerBlocksResponse (Maybe Text)

-- | The number of assignments on the page in the filtered results list,
--   equivalent to the number of assignments returned by this call.
listWorkerBlocksResponse_numResults :: Lens' ListWorkerBlocksResponse (Maybe Int)

-- | The response's http status code.
listWorkerBlocksResponse_httpStatus :: Lens' ListWorkerBlocksResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks
instance GHC.Show.Show Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks
instance GHC.Read.Read Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocksResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocksResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocksResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocksResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocksResponse
instance Amazonka.Pager.AWSPager Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.ListWorkerBlocks.ListWorkerBlocks


-- | The <tt>ListReviewableHITs</tt> operation retrieves the HITs with
--   Status equal to Reviewable or Status equal to Reviewing that belong to
--   the Requester calling the operation.
--   
--   This operation returns paginated results.
module Amazonka.MechanicalTurk.ListReviewableHITs

-- | <i>See:</i> <a>newListReviewableHITs</a> smart constructor.
data ListReviewableHITs
ListReviewableHITs' :: Maybe ReviewableHITStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> ListReviewableHITs

-- | Can be either <tt>Reviewable</tt> or <tt>Reviewing</tt>. Reviewable is
--   the default value.
[$sel:status:ListReviewableHITs'] :: ListReviewableHITs -> Maybe ReviewableHITStatus

-- | The ID of the HIT type of the HITs to consider for the query. If not
--   specified, all HITs for the Reviewer are considered
[$sel:hITTypeId:ListReviewableHITs'] :: ListReviewableHITs -> Maybe Text

-- | Pagination Token
[$sel:nextToken:ListReviewableHITs'] :: ListReviewableHITs -> Maybe Text

-- | Limit the number of results returned.
[$sel:maxResults:ListReviewableHITs'] :: ListReviewableHITs -> Maybe Natural

-- | Create a value of <a>ListReviewableHITs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListReviewableHITs'</a>,
--   <a>listReviewableHITs_status</a> - Can be either <tt>Reviewable</tt>
--   or <tt>Reviewing</tt>. Reviewable is the default value.
--   
--   <a>$sel:hITTypeId:ListReviewableHITs'</a>,
--   <a>listReviewableHITs_hITTypeId</a> - The ID of the HIT type of the
--   HITs to consider for the query. If not specified, all HITs for the
--   Reviewer are considered
--   
--   <a>$sel:nextToken:ListReviewableHITs'</a>,
--   <a>listReviewableHITs_nextToken</a> - Pagination Token
--   
--   <a>$sel:maxResults:ListReviewableHITs'</a>,
--   <a>listReviewableHITs_maxResults</a> - Limit the number of results
--   returned.
newListReviewableHITs :: ListReviewableHITs

-- | Can be either <tt>Reviewable</tt> or <tt>Reviewing</tt>. Reviewable is
--   the default value.
listReviewableHITs_status :: Lens' ListReviewableHITs (Maybe ReviewableHITStatus)

-- | The ID of the HIT type of the HITs to consider for the query. If not
--   specified, all HITs for the Reviewer are considered
listReviewableHITs_hITTypeId :: Lens' ListReviewableHITs (Maybe Text)

-- | Pagination Token
listReviewableHITs_nextToken :: Lens' ListReviewableHITs (Maybe Text)

-- | Limit the number of results returned.
listReviewableHITs_maxResults :: Lens' ListReviewableHITs (Maybe Natural)

-- | <i>See:</i> <a>newListReviewableHITsResponse</a> smart constructor.
data ListReviewableHITsResponse
ListReviewableHITsResponse' :: Maybe Text -> Maybe Int -> Maybe [HIT] -> Int -> ListReviewableHITsResponse
[$sel:nextToken:ListReviewableHITsResponse'] :: ListReviewableHITsResponse -> Maybe Text

-- | The number of HITs on this page in the filtered results list,
--   equivalent to the number of HITs being returned by this call.
[$sel:numResults:ListReviewableHITsResponse'] :: ListReviewableHITsResponse -> Maybe Int

-- | The list of HIT elements returned by the query.
[$sel:hITs:ListReviewableHITsResponse'] :: ListReviewableHITsResponse -> Maybe [HIT]

-- | The response's http status code.
[$sel:httpStatus:ListReviewableHITsResponse'] :: ListReviewableHITsResponse -> Int

-- | Create a value of <a>ListReviewableHITsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListReviewableHITs'</a>,
--   <a>listReviewableHITsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:numResults:ListReviewableHITsResponse'</a>,
--   <a>listReviewableHITsResponse_numResults</a> - The number of HITs on
--   this page in the filtered results list, equivalent to the number of
--   HITs being returned by this call.
--   
--   <a>$sel:hITs:ListReviewableHITsResponse'</a>,
--   <a>listReviewableHITsResponse_hITs</a> - The list of HIT elements
--   returned by the query.
--   
--   <a>$sel:httpStatus:ListReviewableHITsResponse'</a>,
--   <a>listReviewableHITsResponse_httpStatus</a> - The response's http
--   status code.
newListReviewableHITsResponse :: Int -> ListReviewableHITsResponse

-- | Undocumented member.
listReviewableHITsResponse_nextToken :: Lens' ListReviewableHITsResponse (Maybe Text)

-- | The number of HITs on this page in the filtered results list,
--   equivalent to the number of HITs being returned by this call.
listReviewableHITsResponse_numResults :: Lens' ListReviewableHITsResponse (Maybe Int)

-- | The list of HIT elements returned by the query.
listReviewableHITsResponse_hITs :: Lens' ListReviewableHITsResponse (Maybe [HIT])

-- | The response's http status code.
listReviewableHITsResponse_httpStatus :: Lens' ListReviewableHITsResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs
instance GHC.Show.Show Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs
instance GHC.Read.Read Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITsResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITsResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITsResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITsResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITsResponse
instance Amazonka.Pager.AWSPager Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.ListReviewableHITs.ListReviewableHITs


-- | The <tt>ListReviewPolicyResultsForHIT</tt> operation retrieves the
--   computed results and the actions taken in the course of executing your
--   Review Policies for a given HIT. For information about how to specify
--   Review Policies when you call CreateHIT, see Review Policies. The
--   ListReviewPolicyResultsForHIT operation can return results for both
--   Assignment-level and HIT-level review results.
module Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT

-- | <i>See:</i> <a>newListReviewPolicyResultsForHIT</a> smart constructor.
data ListReviewPolicyResultsForHIT
ListReviewPolicyResultsForHIT' :: Maybe Bool -> Maybe [ReviewPolicyLevel] -> Maybe Bool -> Maybe Text -> Maybe Natural -> Text -> ListReviewPolicyResultsForHIT

-- | Specify if the operation should retrieve a list of the results
--   computed by the Review Policies.
[$sel:retrieveResults:ListReviewPolicyResultsForHIT'] :: ListReviewPolicyResultsForHIT -> Maybe Bool

-- | The Policy Level(s) to retrieve review results for - HIT or
--   Assignment. If omitted, the default behavior is to retrieve all data
--   for both policy levels. For a list of all the described policies, see
--   Review Policies.
[$sel:policyLevels:ListReviewPolicyResultsForHIT'] :: ListReviewPolicyResultsForHIT -> Maybe [ReviewPolicyLevel]

-- | Specify if the operation should retrieve a list of the actions taken
--   executing the Review Policies and their outcomes.
[$sel:retrieveActions:ListReviewPolicyResultsForHIT'] :: ListReviewPolicyResultsForHIT -> Maybe Bool

-- | Pagination token
[$sel:nextToken:ListReviewPolicyResultsForHIT'] :: ListReviewPolicyResultsForHIT -> Maybe Text

-- | Limit the number of results returned.
[$sel:maxResults:ListReviewPolicyResultsForHIT'] :: ListReviewPolicyResultsForHIT -> Maybe Natural

-- | The unique identifier of the HIT to retrieve review results for.
[$sel:hITId:ListReviewPolicyResultsForHIT'] :: ListReviewPolicyResultsForHIT -> Text

-- | Create a value of <a>ListReviewPolicyResultsForHIT</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrieveResults:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_retrieveResults</a> - Specify if the
--   operation should retrieve a list of the results computed by the Review
--   Policies.
--   
--   <a>$sel:policyLevels:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_policyLevels</a> - The Policy
--   Level(s) to retrieve review results for - HIT or Assignment. If
--   omitted, the default behavior is to retrieve all data for both policy
--   levels. For a list of all the described policies, see Review Policies.
--   
--   <a>$sel:retrieveActions:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_retrieveActions</a> - Specify if the
--   operation should retrieve a list of the actions taken executing the
--   Review Policies and their outcomes.
--   
--   <a>$sel:nextToken:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_nextToken</a> - Pagination token
--   
--   <a>$sel:maxResults:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_maxResults</a> - Limit the number of
--   results returned.
--   
--   <a>$sel:hITId:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_hITId</a> - The unique identifier of
--   the HIT to retrieve review results for.
newListReviewPolicyResultsForHIT :: Text -> ListReviewPolicyResultsForHIT

-- | Specify if the operation should retrieve a list of the results
--   computed by the Review Policies.
listReviewPolicyResultsForHIT_retrieveResults :: Lens' ListReviewPolicyResultsForHIT (Maybe Bool)

-- | The Policy Level(s) to retrieve review results for - HIT or
--   Assignment. If omitted, the default behavior is to retrieve all data
--   for both policy levels. For a list of all the described policies, see
--   Review Policies.
listReviewPolicyResultsForHIT_policyLevels :: Lens' ListReviewPolicyResultsForHIT (Maybe [ReviewPolicyLevel])

-- | Specify if the operation should retrieve a list of the actions taken
--   executing the Review Policies and their outcomes.
listReviewPolicyResultsForHIT_retrieveActions :: Lens' ListReviewPolicyResultsForHIT (Maybe Bool)

-- | Pagination token
listReviewPolicyResultsForHIT_nextToken :: Lens' ListReviewPolicyResultsForHIT (Maybe Text)

-- | Limit the number of results returned.
listReviewPolicyResultsForHIT_maxResults :: Lens' ListReviewPolicyResultsForHIT (Maybe Natural)

-- | The unique identifier of the HIT to retrieve review results for.
listReviewPolicyResultsForHIT_hITId :: Lens' ListReviewPolicyResultsForHIT Text

-- | <i>See:</i> <a>newListReviewPolicyResultsForHITResponse</a> smart
--   constructor.
data ListReviewPolicyResultsForHITResponse
ListReviewPolicyResultsForHITResponse' :: Maybe ReviewPolicy -> Maybe ReviewReport -> Maybe Text -> Maybe ReviewReport -> Maybe Text -> Maybe ReviewPolicy -> Int -> ListReviewPolicyResultsForHITResponse

-- | The name of the HIT-level Review Policy. This contains only the
--   PolicyName element.
[$sel:hITReviewPolicy:ListReviewPolicyResultsForHITResponse'] :: ListReviewPolicyResultsForHITResponse -> Maybe ReviewPolicy

-- | Contains both ReviewResult and ReviewAction elements for a particular
--   HIT.
[$sel:hITReviewReport:ListReviewPolicyResultsForHITResponse'] :: ListReviewPolicyResultsForHITResponse -> Maybe ReviewReport
[$sel:nextToken:ListReviewPolicyResultsForHITResponse'] :: ListReviewPolicyResultsForHITResponse -> Maybe Text

-- | Contains both ReviewResult and ReviewAction elements for an
--   Assignment.
[$sel:assignmentReviewReport:ListReviewPolicyResultsForHITResponse'] :: ListReviewPolicyResultsForHITResponse -> Maybe ReviewReport

-- | The HITId of the HIT for which results have been returned.
[$sel:hITId:ListReviewPolicyResultsForHITResponse'] :: ListReviewPolicyResultsForHITResponse -> Maybe Text

-- | The name of the Assignment-level Review Policy. This contains only the
--   PolicyName element.
[$sel:assignmentReviewPolicy:ListReviewPolicyResultsForHITResponse'] :: ListReviewPolicyResultsForHITResponse -> Maybe ReviewPolicy

-- | The response's http status code.
[$sel:httpStatus:ListReviewPolicyResultsForHITResponse'] :: ListReviewPolicyResultsForHITResponse -> Int

-- | Create a value of <a>ListReviewPolicyResultsForHITResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITReviewPolicy:ListReviewPolicyResultsForHITResponse'</a>,
--   <a>listReviewPolicyResultsForHITResponse_hITReviewPolicy</a> - The
--   name of the HIT-level Review Policy. This contains only the PolicyName
--   element.
--   
--   <a>$sel:hITReviewReport:ListReviewPolicyResultsForHITResponse'</a>,
--   <a>listReviewPolicyResultsForHITResponse_hITReviewReport</a> -
--   Contains both ReviewResult and ReviewAction elements for a particular
--   HIT.
--   
--   <a>$sel:nextToken:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHITResponse_nextToken</a> - Undocumented
--   member.
--   
--   
--   <a>$sel:assignmentReviewReport:ListReviewPolicyResultsForHITResponse'</a>,
--   <a>listReviewPolicyResultsForHITResponse_assignmentReviewReport</a> -
--   Contains both ReviewResult and ReviewAction elements for an
--   Assignment.
--   
--   <a>$sel:hITId:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHITResponse_hITId</a> - The HITId of the
--   HIT for which results have been returned.
--   
--   
--   <a>$sel:assignmentReviewPolicy:ListReviewPolicyResultsForHITResponse'</a>,
--   <a>listReviewPolicyResultsForHITResponse_assignmentReviewPolicy</a> -
--   The name of the Assignment-level Review Policy. This contains only the
--   PolicyName element.
--   
--   <a>$sel:httpStatus:ListReviewPolicyResultsForHITResponse'</a>,
--   <a>listReviewPolicyResultsForHITResponse_httpStatus</a> - The
--   response's http status code.
newListReviewPolicyResultsForHITResponse :: Int -> ListReviewPolicyResultsForHITResponse

-- | The name of the HIT-level Review Policy. This contains only the
--   PolicyName element.
listReviewPolicyResultsForHITResponse_hITReviewPolicy :: Lens' ListReviewPolicyResultsForHITResponse (Maybe ReviewPolicy)

-- | Contains both ReviewResult and ReviewAction elements for a particular
--   HIT.
listReviewPolicyResultsForHITResponse_hITReviewReport :: Lens' ListReviewPolicyResultsForHITResponse (Maybe ReviewReport)

-- | Undocumented member.
listReviewPolicyResultsForHITResponse_nextToken :: Lens' ListReviewPolicyResultsForHITResponse (Maybe Text)

-- | Contains both ReviewResult and ReviewAction elements for an
--   Assignment.
listReviewPolicyResultsForHITResponse_assignmentReviewReport :: Lens' ListReviewPolicyResultsForHITResponse (Maybe ReviewReport)

-- | The HITId of the HIT for which results have been returned.
listReviewPolicyResultsForHITResponse_hITId :: Lens' ListReviewPolicyResultsForHITResponse (Maybe Text)

-- | The name of the Assignment-level Review Policy. This contains only the
--   PolicyName element.
listReviewPolicyResultsForHITResponse_assignmentReviewPolicy :: Lens' ListReviewPolicyResultsForHITResponse (Maybe ReviewPolicy)

-- | The response's http status code.
listReviewPolicyResultsForHITResponse_httpStatus :: Lens' ListReviewPolicyResultsForHITResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHIT
instance GHC.Show.Show Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHIT
instance GHC.Read.Read Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHIT
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHIT
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHITResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHITResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHITResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHITResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHITResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHIT
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHIT
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHIT
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHIT
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.ListReviewPolicyResultsForHIT.ListReviewPolicyResultsForHIT


-- | The <tt>ListQualificationTypes</tt> operation returns a list of
--   Qualification types, filtered by an optional search term.
--   
--   This operation returns paginated results.
module Amazonka.MechanicalTurk.ListQualificationTypes

-- | <i>See:</i> <a>newListQualificationTypes</a> smart constructor.
data ListQualificationTypes
ListQualificationTypes' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Natural -> Bool -> ListQualificationTypes

-- | Specifies that only Qualification types that the Requester created are
--   returned. If false, the operation returns all Qualification types.
[$sel:mustBeOwnedByCaller:ListQualificationTypes'] :: ListQualificationTypes -> Maybe Bool
[$sel:nextToken:ListQualificationTypes'] :: ListQualificationTypes -> Maybe Text

-- | A text query against all of the searchable attributes of Qualification
--   types.
[$sel:query:ListQualificationTypes'] :: ListQualificationTypes -> Maybe Text

-- | The maximum number of results to return in a single call.
[$sel:maxResults:ListQualificationTypes'] :: ListQualificationTypes -> Maybe Natural

-- | Specifies that only Qualification types that a user can request
--   through the Amazon Mechanical Turk web site, such as by taking a
--   Qualification test, are returned as results of the search. Some
--   Qualification types, such as those assigned automatically by the
--   system, cannot be requested directly by users. If false, all
--   Qualification types, including those managed by the system, are
--   considered. Valid values are True | False.
[$sel:mustBeRequestable:ListQualificationTypes'] :: ListQualificationTypes -> Bool

-- | Create a value of <a>ListQualificationTypes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mustBeOwnedByCaller:ListQualificationTypes'</a>,
--   <a>listQualificationTypes_mustBeOwnedByCaller</a> - Specifies that
--   only Qualification types that the Requester created are returned. If
--   false, the operation returns all Qualification types.
--   
--   <a>$sel:nextToken:ListQualificationTypes'</a>,
--   <a>listQualificationTypes_nextToken</a> - Undocumented member.
--   
--   <a>$sel:query:ListQualificationTypes'</a>,
--   <a>listQualificationTypes_query</a> - A text query against all of the
--   searchable attributes of Qualification types.
--   
--   <a>$sel:maxResults:ListQualificationTypes'</a>,
--   <a>listQualificationTypes_maxResults</a> - The maximum number of
--   results to return in a single call.
--   
--   <a>$sel:mustBeRequestable:ListQualificationTypes'</a>,
--   <a>listQualificationTypes_mustBeRequestable</a> - Specifies that only
--   Qualification types that a user can request through the Amazon
--   Mechanical Turk web site, such as by taking a Qualification test, are
--   returned as results of the search. Some Qualification types, such as
--   those assigned automatically by the system, cannot be requested
--   directly by users. If false, all Qualification types, including those
--   managed by the system, are considered. Valid values are True | False.
newListQualificationTypes :: Bool -> ListQualificationTypes

-- | Specifies that only Qualification types that the Requester created are
--   returned. If false, the operation returns all Qualification types.
listQualificationTypes_mustBeOwnedByCaller :: Lens' ListQualificationTypes (Maybe Bool)

-- | Undocumented member.
listQualificationTypes_nextToken :: Lens' ListQualificationTypes (Maybe Text)

-- | A text query against all of the searchable attributes of Qualification
--   types.
listQualificationTypes_query :: Lens' ListQualificationTypes (Maybe Text)

-- | The maximum number of results to return in a single call.
listQualificationTypes_maxResults :: Lens' ListQualificationTypes (Maybe Natural)

-- | Specifies that only Qualification types that a user can request
--   through the Amazon Mechanical Turk web site, such as by taking a
--   Qualification test, are returned as results of the search. Some
--   Qualification types, such as those assigned automatically by the
--   system, cannot be requested directly by users. If false, all
--   Qualification types, including those managed by the system, are
--   considered. Valid values are True | False.
listQualificationTypes_mustBeRequestable :: Lens' ListQualificationTypes Bool

-- | <i>See:</i> <a>newListQualificationTypesResponse</a> smart
--   constructor.
data ListQualificationTypesResponse
ListQualificationTypesResponse' :: Maybe [QualificationType] -> Maybe Text -> Maybe Int -> Int -> ListQualificationTypesResponse

-- | The list of QualificationType elements returned by the query.
[$sel:qualificationTypes:ListQualificationTypesResponse'] :: ListQualificationTypesResponse -> Maybe [QualificationType]
[$sel:nextToken:ListQualificationTypesResponse'] :: ListQualificationTypesResponse -> Maybe Text

-- | The number of Qualification types on this page in the filtered results
--   list, equivalent to the number of types this operation returns.
[$sel:numResults:ListQualificationTypesResponse'] :: ListQualificationTypesResponse -> Maybe Int

-- | The response's http status code.
[$sel:httpStatus:ListQualificationTypesResponse'] :: ListQualificationTypesResponse -> Int

-- | Create a value of <a>ListQualificationTypesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationTypes:ListQualificationTypesResponse'</a>,
--   <a>listQualificationTypesResponse_qualificationTypes</a> - The list of
--   QualificationType elements returned by the query.
--   
--   <a>$sel:nextToken:ListQualificationTypes'</a>,
--   <a>listQualificationTypesResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:numResults:ListQualificationTypesResponse'</a>,
--   <a>listQualificationTypesResponse_numResults</a> - The number of
--   Qualification types on this page in the filtered results list,
--   equivalent to the number of types this operation returns.
--   
--   <a>$sel:httpStatus:ListQualificationTypesResponse'</a>,
--   <a>listQualificationTypesResponse_httpStatus</a> - The response's http
--   status code.
newListQualificationTypesResponse :: Int -> ListQualificationTypesResponse

-- | The list of QualificationType elements returned by the query.
listQualificationTypesResponse_qualificationTypes :: Lens' ListQualificationTypesResponse (Maybe [QualificationType])

-- | Undocumented member.
listQualificationTypesResponse_nextToken :: Lens' ListQualificationTypesResponse (Maybe Text)

-- | The number of Qualification types on this page in the filtered results
--   list, equivalent to the number of types this operation returns.
listQualificationTypesResponse_numResults :: Lens' ListQualificationTypesResponse (Maybe Int)

-- | The response's http status code.
listQualificationTypesResponse_httpStatus :: Lens' ListQualificationTypesResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes
instance GHC.Show.Show Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes
instance GHC.Read.Read Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypesResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypesResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypesResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypesResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypesResponse
instance Amazonka.Pager.AWSPager Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.ListQualificationTypes.ListQualificationTypes


-- | The <tt>ListQualificationRequests</tt> operation retrieves requests
--   for Qualifications of a particular Qualification type. The owner of
--   the Qualification type calls this operation to poll for pending
--   requests, and accepts them using the AcceptQualification operation.
--   
--   This operation returns paginated results.
module Amazonka.MechanicalTurk.ListQualificationRequests

-- | <i>See:</i> <a>newListQualificationRequests</a> smart constructor.
data ListQualificationRequests
ListQualificationRequests' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListQualificationRequests
[$sel:nextToken:ListQualificationRequests'] :: ListQualificationRequests -> Maybe Text

-- | The ID of the QualificationType.
[$sel:qualificationTypeId:ListQualificationRequests'] :: ListQualificationRequests -> Maybe Text

-- | The maximum number of results to return in a single call.
[$sel:maxResults:ListQualificationRequests'] :: ListQualificationRequests -> Maybe Natural

-- | Create a value of <a>ListQualificationRequests</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListQualificationRequests'</a>,
--   <a>listQualificationRequests_nextToken</a> - Undocumented member.
--   
--   <a>$sel:qualificationTypeId:ListQualificationRequests'</a>,
--   <a>listQualificationRequests_qualificationTypeId</a> - The ID of the
--   QualificationType.
--   
--   <a>$sel:maxResults:ListQualificationRequests'</a>,
--   <a>listQualificationRequests_maxResults</a> - The maximum number of
--   results to return in a single call.
newListQualificationRequests :: ListQualificationRequests

-- | Undocumented member.
listQualificationRequests_nextToken :: Lens' ListQualificationRequests (Maybe Text)

-- | The ID of the QualificationType.
listQualificationRequests_qualificationTypeId :: Lens' ListQualificationRequests (Maybe Text)

-- | The maximum number of results to return in a single call.
listQualificationRequests_maxResults :: Lens' ListQualificationRequests (Maybe Natural)

-- | <i>See:</i> <a>newListQualificationRequestsResponse</a> smart
--   constructor.
data ListQualificationRequestsResponse
ListQualificationRequestsResponse' :: Maybe [QualificationRequest] -> Maybe Text -> Maybe Int -> Int -> ListQualificationRequestsResponse

-- | The Qualification request. The response includes one
--   QualificationRequest element for each Qualification request returned
--   by the query.
[$sel:qualificationRequests:ListQualificationRequestsResponse'] :: ListQualificationRequestsResponse -> Maybe [QualificationRequest]
[$sel:nextToken:ListQualificationRequestsResponse'] :: ListQualificationRequestsResponse -> Maybe Text

-- | The number of Qualification requests on this page in the filtered
--   results list, equivalent to the number of Qualification requests being
--   returned by this call.
[$sel:numResults:ListQualificationRequestsResponse'] :: ListQualificationRequestsResponse -> Maybe Int

-- | The response's http status code.
[$sel:httpStatus:ListQualificationRequestsResponse'] :: ListQualificationRequestsResponse -> Int

-- | Create a value of <a>ListQualificationRequestsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationRequests:ListQualificationRequestsResponse'</a>,
--   <a>listQualificationRequestsResponse_qualificationRequests</a> - The
--   Qualification request. The response includes one QualificationRequest
--   element for each Qualification request returned by the query.
--   
--   <a>$sel:nextToken:ListQualificationRequests'</a>,
--   <a>listQualificationRequestsResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:numResults:ListQualificationRequestsResponse'</a>,
--   <a>listQualificationRequestsResponse_numResults</a> - The number of
--   Qualification requests on this page in the filtered results list,
--   equivalent to the number of Qualification requests being returned by
--   this call.
--   
--   <a>$sel:httpStatus:ListQualificationRequestsResponse'</a>,
--   <a>listQualificationRequestsResponse_httpStatus</a> - The response's
--   http status code.
newListQualificationRequestsResponse :: Int -> ListQualificationRequestsResponse

-- | The Qualification request. The response includes one
--   QualificationRequest element for each Qualification request returned
--   by the query.
listQualificationRequestsResponse_qualificationRequests :: Lens' ListQualificationRequestsResponse (Maybe [QualificationRequest])

-- | Undocumented member.
listQualificationRequestsResponse_nextToken :: Lens' ListQualificationRequestsResponse (Maybe Text)

-- | The number of Qualification requests on this page in the filtered
--   results list, equivalent to the number of Qualification requests being
--   returned by this call.
listQualificationRequestsResponse_numResults :: Lens' ListQualificationRequestsResponse (Maybe Int)

-- | The response's http status code.
listQualificationRequestsResponse_httpStatus :: Lens' ListQualificationRequestsResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests
instance GHC.Show.Show Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests
instance GHC.Read.Read Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequestsResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequestsResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequestsResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequestsResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequestsResponse
instance Amazonka.Pager.AWSPager Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.ListQualificationRequests.ListQualificationRequests


-- | The <tt>ListHITsForQualificationType</tt> operation returns the HITs
--   that use the given Qualification type for a Qualification requirement.
--   The operation returns HITs of any status, except for HITs that have
--   been deleted with the <tt>DeleteHIT</tt> operation or that have been
--   auto-deleted.
--   
--   This operation returns paginated results.
module Amazonka.MechanicalTurk.ListHITsForQualificationType

-- | <i>See:</i> <a>newListHITsForQualificationType</a> smart constructor.
data ListHITsForQualificationType
ListHITsForQualificationType' :: Maybe Text -> Maybe Natural -> Text -> ListHITsForQualificationType

-- | Pagination Token
[$sel:nextToken:ListHITsForQualificationType'] :: ListHITsForQualificationType -> Maybe Text

-- | Limit the number of results returned.
[$sel:maxResults:ListHITsForQualificationType'] :: ListHITsForQualificationType -> Maybe Natural

-- | The ID of the Qualification type to use when querying HITs.
[$sel:qualificationTypeId:ListHITsForQualificationType'] :: ListHITsForQualificationType -> Text

-- | Create a value of <a>ListHITsForQualificationType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHITsForQualificationType'</a>,
--   <a>listHITsForQualificationType_nextToken</a> - Pagination Token
--   
--   <a>$sel:maxResults:ListHITsForQualificationType'</a>,
--   <a>listHITsForQualificationType_maxResults</a> - Limit the number of
--   results returned.
--   
--   <a>$sel:qualificationTypeId:ListHITsForQualificationType'</a>,
--   <a>listHITsForQualificationType_qualificationTypeId</a> - The ID of
--   the Qualification type to use when querying HITs.
newListHITsForQualificationType :: Text -> ListHITsForQualificationType

-- | Pagination Token
listHITsForQualificationType_nextToken :: Lens' ListHITsForQualificationType (Maybe Text)

-- | Limit the number of results returned.
listHITsForQualificationType_maxResults :: Lens' ListHITsForQualificationType (Maybe Natural)

-- | The ID of the Qualification type to use when querying HITs.
listHITsForQualificationType_qualificationTypeId :: Lens' ListHITsForQualificationType Text

-- | <i>See:</i> <a>newListHITsForQualificationTypeResponse</a> smart
--   constructor.
data ListHITsForQualificationTypeResponse
ListHITsForQualificationTypeResponse' :: Maybe Text -> Maybe Int -> Maybe [HIT] -> Int -> ListHITsForQualificationTypeResponse
[$sel:nextToken:ListHITsForQualificationTypeResponse'] :: ListHITsForQualificationTypeResponse -> Maybe Text

-- | The number of HITs on this page in the filtered results list,
--   equivalent to the number of HITs being returned by this call.
[$sel:numResults:ListHITsForQualificationTypeResponse'] :: ListHITsForQualificationTypeResponse -> Maybe Int

-- | The list of HIT elements returned by the query.
[$sel:hITs:ListHITsForQualificationTypeResponse'] :: ListHITsForQualificationTypeResponse -> Maybe [HIT]

-- | The response's http status code.
[$sel:httpStatus:ListHITsForQualificationTypeResponse'] :: ListHITsForQualificationTypeResponse -> Int

-- | Create a value of <a>ListHITsForQualificationTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHITsForQualificationType'</a>,
--   <a>listHITsForQualificationTypeResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:numResults:ListHITsForQualificationTypeResponse'</a>,
--   <a>listHITsForQualificationTypeResponse_numResults</a> - The number of
--   HITs on this page in the filtered results list, equivalent to the
--   number of HITs being returned by this call.
--   
--   <a>$sel:hITs:ListHITsForQualificationTypeResponse'</a>,
--   <a>listHITsForQualificationTypeResponse_hITs</a> - The list of HIT
--   elements returned by the query.
--   
--   <a>$sel:httpStatus:ListHITsForQualificationTypeResponse'</a>,
--   <a>listHITsForQualificationTypeResponse_httpStatus</a> - The
--   response's http status code.
newListHITsForQualificationTypeResponse :: Int -> ListHITsForQualificationTypeResponse

-- | Undocumented member.
listHITsForQualificationTypeResponse_nextToken :: Lens' ListHITsForQualificationTypeResponse (Maybe Text)

-- | The number of HITs on this page in the filtered results list,
--   equivalent to the number of HITs being returned by this call.
listHITsForQualificationTypeResponse_numResults :: Lens' ListHITsForQualificationTypeResponse (Maybe Int)

-- | The list of HIT elements returned by the query.
listHITsForQualificationTypeResponse_hITs :: Lens' ListHITsForQualificationTypeResponse (Maybe [HIT])

-- | The response's http status code.
listHITsForQualificationTypeResponse_httpStatus :: Lens' ListHITsForQualificationTypeResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType
instance GHC.Show.Show Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType
instance GHC.Read.Read Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationTypeResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationTypeResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationTypeResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationTypeResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationTypeResponse
instance Amazonka.Pager.AWSPager Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.ListHITsForQualificationType.ListHITsForQualificationType


-- | The <tt>ListHITs</tt> operation returns all of a Requester's HITs. The
--   operation returns HITs of any status, except for HITs that have been
--   deleted of with the DeleteHIT operation or that have been
--   auto-deleted.
--   
--   This operation returns paginated results.
module Amazonka.MechanicalTurk.ListHITs

-- | <i>See:</i> <a>newListHITs</a> smart constructor.
data ListHITs
ListHITs' :: Maybe Text -> Maybe Natural -> ListHITs

-- | Pagination token
[$sel:nextToken:ListHITs'] :: ListHITs -> Maybe Text
[$sel:maxResults:ListHITs'] :: ListHITs -> Maybe Natural

-- | Create a value of <a>ListHITs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHITs'</a>, <a>listHITs_nextToken</a> -
--   Pagination token
--   
--   <a>$sel:maxResults:ListHITs'</a>, <a>listHITs_maxResults</a> -
--   Undocumented member.
newListHITs :: ListHITs

-- | Pagination token
listHITs_nextToken :: Lens' ListHITs (Maybe Text)

-- | Undocumented member.
listHITs_maxResults :: Lens' ListHITs (Maybe Natural)

-- | <i>See:</i> <a>newListHITsResponse</a> smart constructor.
data ListHITsResponse
ListHITsResponse' :: Maybe Text -> Maybe Int -> Maybe [HIT] -> Int -> ListHITsResponse
[$sel:nextToken:ListHITsResponse'] :: ListHITsResponse -> Maybe Text

-- | The number of HITs on this page in the filtered results list,
--   equivalent to the number of HITs being returned by this call.
[$sel:numResults:ListHITsResponse'] :: ListHITsResponse -> Maybe Int

-- | The list of HIT elements returned by the query.
[$sel:hITs:ListHITsResponse'] :: ListHITsResponse -> Maybe [HIT]

-- | The response's http status code.
[$sel:httpStatus:ListHITsResponse'] :: ListHITsResponse -> Int

-- | Create a value of <a>ListHITsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHITs'</a>, <a>listHITsResponse_nextToken</a> -
--   Undocumented member.
--   
--   <a>$sel:numResults:ListHITsResponse'</a>,
--   <a>listHITsResponse_numResults</a> - The number of HITs on this page
--   in the filtered results list, equivalent to the number of HITs being
--   returned by this call.
--   
--   <a>$sel:hITs:ListHITsResponse'</a>, <a>listHITsResponse_hITs</a> - The
--   list of HIT elements returned by the query.
--   
--   <a>$sel:httpStatus:ListHITsResponse'</a>,
--   <a>listHITsResponse_httpStatus</a> - The response's http status code.
newListHITsResponse :: Int -> ListHITsResponse

-- | Undocumented member.
listHITsResponse_nextToken :: Lens' ListHITsResponse (Maybe Text)

-- | The number of HITs on this page in the filtered results list,
--   equivalent to the number of HITs being returned by this call.
listHITsResponse_numResults :: Lens' ListHITsResponse (Maybe Int)

-- | The list of HIT elements returned by the query.
listHITsResponse_hITs :: Lens' ListHITsResponse (Maybe [HIT])

-- | The response's http status code.
listHITsResponse_httpStatus :: Lens' ListHITsResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListHITs.ListHITs
instance GHC.Show.Show Amazonka.MechanicalTurk.ListHITs.ListHITs
instance GHC.Read.Read Amazonka.MechanicalTurk.ListHITs.ListHITs
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListHITs.ListHITs
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListHITs.ListHITsResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.ListHITs.ListHITsResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.ListHITs.ListHITsResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListHITs.ListHITsResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.ListHITs.ListHITs
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListHITs.ListHITsResponse
instance Amazonka.Pager.AWSPager Amazonka.MechanicalTurk.ListHITs.ListHITs
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.ListHITs.ListHITs
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListHITs.ListHITs
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.ListHITs.ListHITs
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.ListHITs.ListHITs
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.ListHITs.ListHITs
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.ListHITs.ListHITs


-- | The <tt>ListBonusPayments</tt> operation retrieves the amounts of
--   bonuses you have paid to Workers for a given HIT or assignment.
--   
--   This operation returns paginated results.
module Amazonka.MechanicalTurk.ListBonusPayments

-- | <i>See:</i> <a>newListBonusPayments</a> smart constructor.
data ListBonusPayments
ListBonusPayments' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListBonusPayments

-- | Pagination token
[$sel:nextToken:ListBonusPayments'] :: ListBonusPayments -> Maybe Text

-- | The ID of the HIT associated with the bonus payments to retrieve. If
--   not specified, all bonus payments for all assignments for the given
--   HIT are returned. Either the HITId parameter or the AssignmentId
--   parameter must be specified
[$sel:hITId:ListBonusPayments'] :: ListBonusPayments -> Maybe Text

-- | The ID of the assignment associated with the bonus payments to
--   retrieve. If specified, only bonus payments for the given assignment
--   are returned. Either the HITId parameter or the AssignmentId parameter
--   must be specified
[$sel:assignmentId:ListBonusPayments'] :: ListBonusPayments -> Maybe Text
[$sel:maxResults:ListBonusPayments'] :: ListBonusPayments -> Maybe Natural

-- | Create a value of <a>ListBonusPayments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBonusPayments'</a>,
--   <a>listBonusPayments_nextToken</a> - Pagination token
--   
--   <a>$sel:hITId:ListBonusPayments'</a>, <a>listBonusPayments_hITId</a> -
--   The ID of the HIT associated with the bonus payments to retrieve. If
--   not specified, all bonus payments for all assignments for the given
--   HIT are returned. Either the HITId parameter or the AssignmentId
--   parameter must be specified
--   
--   <a>$sel:assignmentId:ListBonusPayments'</a>,
--   <a>listBonusPayments_assignmentId</a> - The ID of the assignment
--   associated with the bonus payments to retrieve. If specified, only
--   bonus payments for the given assignment are returned. Either the HITId
--   parameter or the AssignmentId parameter must be specified
--   
--   <a>$sel:maxResults:ListBonusPayments'</a>,
--   <a>listBonusPayments_maxResults</a> - Undocumented member.
newListBonusPayments :: ListBonusPayments

-- | Pagination token
listBonusPayments_nextToken :: Lens' ListBonusPayments (Maybe Text)

-- | The ID of the HIT associated with the bonus payments to retrieve. If
--   not specified, all bonus payments for all assignments for the given
--   HIT are returned. Either the HITId parameter or the AssignmentId
--   parameter must be specified
listBonusPayments_hITId :: Lens' ListBonusPayments (Maybe Text)

-- | The ID of the assignment associated with the bonus payments to
--   retrieve. If specified, only bonus payments for the given assignment
--   are returned. Either the HITId parameter or the AssignmentId parameter
--   must be specified
listBonusPayments_assignmentId :: Lens' ListBonusPayments (Maybe Text)

-- | Undocumented member.
listBonusPayments_maxResults :: Lens' ListBonusPayments (Maybe Natural)

-- | <i>See:</i> <a>newListBonusPaymentsResponse</a> smart constructor.
data ListBonusPaymentsResponse
ListBonusPaymentsResponse' :: Maybe [BonusPayment] -> Maybe Text -> Maybe Int -> Int -> ListBonusPaymentsResponse

-- | A successful request to the ListBonusPayments operation returns a list
--   of BonusPayment objects.
[$sel:bonusPayments:ListBonusPaymentsResponse'] :: ListBonusPaymentsResponse -> Maybe [BonusPayment]
[$sel:nextToken:ListBonusPaymentsResponse'] :: ListBonusPaymentsResponse -> Maybe Text

-- | The number of bonus payments on this page in the filtered results
--   list, equivalent to the number of bonus payments being returned by
--   this call.
[$sel:numResults:ListBonusPaymentsResponse'] :: ListBonusPaymentsResponse -> Maybe Int

-- | The response's http status code.
[$sel:httpStatus:ListBonusPaymentsResponse'] :: ListBonusPaymentsResponse -> Int

-- | Create a value of <a>ListBonusPaymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bonusPayments:ListBonusPaymentsResponse'</a>,
--   <a>listBonusPaymentsResponse_bonusPayments</a> - A successful request
--   to the ListBonusPayments operation returns a list of BonusPayment
--   objects.
--   
--   <a>$sel:nextToken:ListBonusPayments'</a>,
--   <a>listBonusPaymentsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:numResults:ListBonusPaymentsResponse'</a>,
--   <a>listBonusPaymentsResponse_numResults</a> - The number of bonus
--   payments on this page in the filtered results list, equivalent to the
--   number of bonus payments being returned by this call.
--   
--   <a>$sel:httpStatus:ListBonusPaymentsResponse'</a>,
--   <a>listBonusPaymentsResponse_httpStatus</a> - The response's http
--   status code.
newListBonusPaymentsResponse :: Int -> ListBonusPaymentsResponse

-- | A successful request to the ListBonusPayments operation returns a list
--   of BonusPayment objects.
listBonusPaymentsResponse_bonusPayments :: Lens' ListBonusPaymentsResponse (Maybe [BonusPayment])

-- | Undocumented member.
listBonusPaymentsResponse_nextToken :: Lens' ListBonusPaymentsResponse (Maybe Text)

-- | The number of bonus payments on this page in the filtered results
--   list, equivalent to the number of bonus payments being returned by
--   this call.
listBonusPaymentsResponse_numResults :: Lens' ListBonusPaymentsResponse (Maybe Int)

-- | The response's http status code.
listBonusPaymentsResponse_httpStatus :: Lens' ListBonusPaymentsResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments
instance GHC.Show.Show Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments
instance GHC.Read.Read Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPaymentsResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPaymentsResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPaymentsResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPaymentsResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPaymentsResponse
instance Amazonka.Pager.AWSPager Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.ListBonusPayments.ListBonusPayments


-- | The <tt>ListAssignmentsForHIT</tt> operation retrieves completed
--   assignments for a HIT. You can use this operation to retrieve the
--   results for a HIT.
--   
--   You can get assignments for a HIT at any time, even if the HIT is not
--   yet Reviewable. If a HIT requested multiple assignments, and has
--   received some results but has not yet become Reviewable, you can still
--   retrieve the partial results with this operation.
--   
--   Use the AssignmentStatus parameter to control which set of assignments
--   for a HIT are returned. The ListAssignmentsForHIT operation can return
--   submitted assignments awaiting approval, or it can return assignments
--   that have already been approved or rejected. You can set
--   AssignmentStatus=Approved,Rejected to get assignments that have
--   already been approved and rejected together in one result set.
--   
--   Only the Requester who created the HIT can retrieve the assignments
--   for that HIT.
--   
--   Results are sorted and divided into numbered pages and the operation
--   returns a single page of results. You can use the parameters of the
--   operation to control sorting and pagination.
--   
--   This operation returns paginated results.
module Amazonka.MechanicalTurk.ListAssignmentsForHIT

-- | <i>See:</i> <a>newListAssignmentsForHIT</a> smart constructor.
data ListAssignmentsForHIT
ListAssignmentsForHIT' :: Maybe [AssignmentStatus] -> Maybe Text -> Maybe Natural -> Text -> ListAssignmentsForHIT

-- | The status of the assignments to return: Submitted | Approved |
--   Rejected
[$sel:assignmentStatuses:ListAssignmentsForHIT'] :: ListAssignmentsForHIT -> Maybe [AssignmentStatus]

-- | Pagination token
[$sel:nextToken:ListAssignmentsForHIT'] :: ListAssignmentsForHIT -> Maybe Text
[$sel:maxResults:ListAssignmentsForHIT'] :: ListAssignmentsForHIT -> Maybe Natural

-- | The ID of the HIT.
[$sel:hITId:ListAssignmentsForHIT'] :: ListAssignmentsForHIT -> Text

-- | Create a value of <a>ListAssignmentsForHIT</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assignmentStatuses:ListAssignmentsForHIT'</a>,
--   <a>listAssignmentsForHIT_assignmentStatuses</a> - The status of the
--   assignments to return: Submitted | Approved | Rejected
--   
--   <a>$sel:nextToken:ListAssignmentsForHIT'</a>,
--   <a>listAssignmentsForHIT_nextToken</a> - Pagination token
--   
--   <a>$sel:maxResults:ListAssignmentsForHIT'</a>,
--   <a>listAssignmentsForHIT_maxResults</a> - Undocumented member.
--   
--   <a>$sel:hITId:ListAssignmentsForHIT'</a>,
--   <a>listAssignmentsForHIT_hITId</a> - The ID of the HIT.
newListAssignmentsForHIT :: Text -> ListAssignmentsForHIT

-- | The status of the assignments to return: Submitted | Approved |
--   Rejected
listAssignmentsForHIT_assignmentStatuses :: Lens' ListAssignmentsForHIT (Maybe [AssignmentStatus])

-- | Pagination token
listAssignmentsForHIT_nextToken :: Lens' ListAssignmentsForHIT (Maybe Text)

-- | Undocumented member.
listAssignmentsForHIT_maxResults :: Lens' ListAssignmentsForHIT (Maybe Natural)

-- | The ID of the HIT.
listAssignmentsForHIT_hITId :: Lens' ListAssignmentsForHIT Text

-- | <i>See:</i> <a>newListAssignmentsForHITResponse</a> smart constructor.
data ListAssignmentsForHITResponse
ListAssignmentsForHITResponse' :: Maybe Text -> Maybe Int -> Maybe [Assignment] -> Int -> ListAssignmentsForHITResponse
[$sel:nextToken:ListAssignmentsForHITResponse'] :: ListAssignmentsForHITResponse -> Maybe Text

-- | The number of assignments on the page in the filtered results list,
--   equivalent to the number of assignments returned by this call.
[$sel:numResults:ListAssignmentsForHITResponse'] :: ListAssignmentsForHITResponse -> Maybe Int

-- | The collection of Assignment data structures returned by this call.
[$sel:assignments:ListAssignmentsForHITResponse'] :: ListAssignmentsForHITResponse -> Maybe [Assignment]

-- | The response's http status code.
[$sel:httpStatus:ListAssignmentsForHITResponse'] :: ListAssignmentsForHITResponse -> Int

-- | Create a value of <a>ListAssignmentsForHITResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAssignmentsForHIT'</a>,
--   <a>listAssignmentsForHITResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:numResults:ListAssignmentsForHITResponse'</a>,
--   <a>listAssignmentsForHITResponse_numResults</a> - The number of
--   assignments on the page in the filtered results list, equivalent to
--   the number of assignments returned by this call.
--   
--   <a>$sel:assignments:ListAssignmentsForHITResponse'</a>,
--   <a>listAssignmentsForHITResponse_assignments</a> - The collection of
--   Assignment data structures returned by this call.
--   
--   <a>$sel:httpStatus:ListAssignmentsForHITResponse'</a>,
--   <a>listAssignmentsForHITResponse_httpStatus</a> - The response's http
--   status code.
newListAssignmentsForHITResponse :: Int -> ListAssignmentsForHITResponse

-- | Undocumented member.
listAssignmentsForHITResponse_nextToken :: Lens' ListAssignmentsForHITResponse (Maybe Text)

-- | The number of assignments on the page in the filtered results list,
--   equivalent to the number of assignments returned by this call.
listAssignmentsForHITResponse_numResults :: Lens' ListAssignmentsForHITResponse (Maybe Int)

-- | The collection of Assignment data structures returned by this call.
listAssignmentsForHITResponse_assignments :: Lens' ListAssignmentsForHITResponse (Maybe [Assignment])

-- | The response's http status code.
listAssignmentsForHITResponse_httpStatus :: Lens' ListAssignmentsForHITResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT
instance GHC.Show.Show Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT
instance GHC.Read.Read Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHITResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHITResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHITResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHITResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHITResponse
instance Amazonka.Pager.AWSPager Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.ListAssignmentsForHIT.ListAssignmentsForHIT


-- | The <tt>GetQualificationType</tt>operation retrieves information about
--   a Qualification type using its ID.
module Amazonka.MechanicalTurk.GetQualificationType

-- | <i>See:</i> <a>newGetQualificationType</a> smart constructor.
data GetQualificationType
GetQualificationType' :: Text -> GetQualificationType

-- | The ID of the QualificationType.
[$sel:qualificationTypeId:GetQualificationType'] :: GetQualificationType -> Text

-- | Create a value of <a>GetQualificationType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationTypeId:GetQualificationType'</a>,
--   <a>getQualificationType_qualificationTypeId</a> - The ID of the
--   QualificationType.
newGetQualificationType :: Text -> GetQualificationType

-- | The ID of the QualificationType.
getQualificationType_qualificationTypeId :: Lens' GetQualificationType Text

-- | <i>See:</i> <a>newGetQualificationTypeResponse</a> smart constructor.
data GetQualificationTypeResponse
GetQualificationTypeResponse' :: Maybe QualificationType -> Int -> GetQualificationTypeResponse

-- | The returned Qualification Type
[$sel:qualificationType:GetQualificationTypeResponse'] :: GetQualificationTypeResponse -> Maybe QualificationType

-- | The response's http status code.
[$sel:httpStatus:GetQualificationTypeResponse'] :: GetQualificationTypeResponse -> Int

-- | Create a value of <a>GetQualificationTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationType:GetQualificationTypeResponse'</a>,
--   <a>getQualificationTypeResponse_qualificationType</a> - The returned
--   Qualification Type
--   
--   <a>$sel:httpStatus:GetQualificationTypeResponse'</a>,
--   <a>getQualificationTypeResponse_httpStatus</a> - The response's http
--   status code.
newGetQualificationTypeResponse :: Int -> GetQualificationTypeResponse

-- | The returned Qualification Type
getQualificationTypeResponse_qualificationType :: Lens' GetQualificationTypeResponse (Maybe QualificationType)

-- | The response's http status code.
getQualificationTypeResponse_httpStatus :: Lens' GetQualificationTypeResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetQualificationType.GetQualificationType
instance GHC.Show.Show Amazonka.MechanicalTurk.GetQualificationType.GetQualificationType
instance GHC.Read.Read Amazonka.MechanicalTurk.GetQualificationType.GetQualificationType
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetQualificationType.GetQualificationType
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetQualificationType.GetQualificationTypeResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.GetQualificationType.GetQualificationTypeResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.GetQualificationType.GetQualificationTypeResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetQualificationType.GetQualificationTypeResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.GetQualificationType.GetQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetQualificationType.GetQualificationTypeResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.GetQualificationType.GetQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetQualificationType.GetQualificationType
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.GetQualificationType.GetQualificationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.GetQualificationType.GetQualificationType
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.GetQualificationType.GetQualificationType
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.GetQualificationType.GetQualificationType


-- | The <tt>GetQualificationScore</tt> operation returns the value of a
--   Worker's Qualification for a given Qualification type.
--   
--   To get a Worker's Qualification, you must know the Worker's ID. The
--   Worker's ID is included in the assignment data returned by the
--   <tt>ListAssignmentsForHIT</tt> operation.
--   
--   Only the owner of a Qualification type can query the value of a
--   Worker's Qualification of that type.
module Amazonka.MechanicalTurk.GetQualificationScore

-- | <i>See:</i> <a>newGetQualificationScore</a> smart constructor.
data GetQualificationScore
GetQualificationScore' :: Text -> Text -> GetQualificationScore

-- | The ID of the QualificationType.
[$sel:qualificationTypeId:GetQualificationScore'] :: GetQualificationScore -> Text

-- | The ID of the Worker whose Qualification is being updated.
[$sel:workerId:GetQualificationScore'] :: GetQualificationScore -> Text

-- | Create a value of <a>GetQualificationScore</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationTypeId:GetQualificationScore'</a>,
--   <a>getQualificationScore_qualificationTypeId</a> - The ID of the
--   QualificationType.
--   
--   <a>$sel:workerId:GetQualificationScore'</a>,
--   <a>getQualificationScore_workerId</a> - The ID of the Worker whose
--   Qualification is being updated.
newGetQualificationScore :: Text -> Text -> GetQualificationScore

-- | The ID of the QualificationType.
getQualificationScore_qualificationTypeId :: Lens' GetQualificationScore Text

-- | The ID of the Worker whose Qualification is being updated.
getQualificationScore_workerId :: Lens' GetQualificationScore Text

-- | <i>See:</i> <a>newGetQualificationScoreResponse</a> smart constructor.
data GetQualificationScoreResponse
GetQualificationScoreResponse' :: Maybe Qualification -> Int -> GetQualificationScoreResponse

-- | The Qualification data structure of the Qualification assigned to a
--   user, including the Qualification type and the value (score).
[$sel:qualification:GetQualificationScoreResponse'] :: GetQualificationScoreResponse -> Maybe Qualification

-- | The response's http status code.
[$sel:httpStatus:GetQualificationScoreResponse'] :: GetQualificationScoreResponse -> Int

-- | Create a value of <a>GetQualificationScoreResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualification:GetQualificationScoreResponse'</a>,
--   <a>getQualificationScoreResponse_qualification</a> - The Qualification
--   data structure of the Qualification assigned to a user, including the
--   Qualification type and the value (score).
--   
--   <a>$sel:httpStatus:GetQualificationScoreResponse'</a>,
--   <a>getQualificationScoreResponse_httpStatus</a> - The response's http
--   status code.
newGetQualificationScoreResponse :: Int -> GetQualificationScoreResponse

-- | The Qualification data structure of the Qualification assigned to a
--   user, including the Qualification type and the value (score).
getQualificationScoreResponse_qualification :: Lens' GetQualificationScoreResponse (Maybe Qualification)

-- | The response's http status code.
getQualificationScoreResponse_httpStatus :: Lens' GetQualificationScoreResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScore
instance GHC.Show.Show Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScore
instance GHC.Read.Read Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScore
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScore
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScoreResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScoreResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScoreResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScoreResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScore
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScoreResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScore
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScore
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScore
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScore
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScore
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.GetQualificationScore.GetQualificationScore


-- | The <tt>GetHIT</tt> operation retrieves the details of the specified
--   HIT.
module Amazonka.MechanicalTurk.GetHIT

-- | <i>See:</i> <a>newGetHIT</a> smart constructor.
data GetHIT
GetHIT' :: Text -> GetHIT

-- | The ID of the HIT to be retrieved.
[$sel:hITId:GetHIT'] :: GetHIT -> Text

-- | Create a value of <a>GetHIT</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITId:GetHIT'</a>, <a>getHIT_hITId</a> - The ID of the HIT to
--   be retrieved.
newGetHIT :: Text -> GetHIT

-- | The ID of the HIT to be retrieved.
getHIT_hITId :: Lens' GetHIT Text

-- | <i>See:</i> <a>newGetHITResponse</a> smart constructor.
data GetHITResponse
GetHITResponse' :: Maybe HIT -> Int -> GetHITResponse

-- | Contains the requested HIT data.
[$sel:hit:GetHITResponse'] :: GetHITResponse -> Maybe HIT

-- | The response's http status code.
[$sel:httpStatus:GetHITResponse'] :: GetHITResponse -> Int

-- | Create a value of <a>GetHITResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hit:GetHITResponse'</a>, <a>getHITResponse_hit</a> - Contains
--   the requested HIT data.
--   
--   <a>$sel:httpStatus:GetHITResponse'</a>,
--   <a>getHITResponse_httpStatus</a> - The response's http status code.
newGetHITResponse :: Int -> GetHITResponse

-- | Contains the requested HIT data.
getHITResponse_hit :: Lens' GetHITResponse (Maybe HIT)

-- | The response's http status code.
getHITResponse_httpStatus :: Lens' GetHITResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetHIT.GetHIT
instance GHC.Show.Show Amazonka.MechanicalTurk.GetHIT.GetHIT
instance GHC.Read.Read Amazonka.MechanicalTurk.GetHIT.GetHIT
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetHIT.GetHIT
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetHIT.GetHITResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.GetHIT.GetHITResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.GetHIT.GetHITResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetHIT.GetHITResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.GetHIT.GetHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetHIT.GetHITResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.GetHIT.GetHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetHIT.GetHIT
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.GetHIT.GetHIT
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.GetHIT.GetHIT
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.GetHIT.GetHIT
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.GetHIT.GetHIT


-- | The <tt>GetFileUploadURL</tt> operation generates and returns a
--   temporary URL. You use the temporary URL to retrieve a file uploaded
--   by a Worker as an answer to a FileUploadAnswer question for a HIT. The
--   temporary URL is generated the instant the GetFileUploadURL operation
--   is called, and is valid for 60 seconds. You can get a temporary file
--   upload URL any time until the HIT is disposed. After the HIT is
--   disposed, any uploaded files are deleted, and cannot be retrieved.
--   Pending Deprecation on December 12, 2017. The Answer Specification
--   structure will no longer support the <tt>FileUploadAnswer</tt> element
--   to be used for the QuestionForm data structure. Instead, we recommend
--   that Requesters who want to create HITs asking Workers to upload files
--   to use Amazon S3.
module Amazonka.MechanicalTurk.GetFileUploadURL

-- | <i>See:</i> <a>newGetFileUploadURL</a> smart constructor.
data GetFileUploadURL
GetFileUploadURL' :: Text -> Text -> GetFileUploadURL

-- | The ID of the assignment that contains the question with a
--   FileUploadAnswer.
[$sel:assignmentId:GetFileUploadURL'] :: GetFileUploadURL -> Text

-- | The identifier of the question with a FileUploadAnswer, as specified
--   in the QuestionForm of the HIT.
[$sel:questionIdentifier:GetFileUploadURL'] :: GetFileUploadURL -> Text

-- | Create a value of <a>GetFileUploadURL</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assignmentId:GetFileUploadURL'</a>,
--   <a>getFileUploadURL_assignmentId</a> - The ID of the assignment that
--   contains the question with a FileUploadAnswer.
--   
--   <a>$sel:questionIdentifier:GetFileUploadURL'</a>,
--   <a>getFileUploadURL_questionIdentifier</a> - The identifier of the
--   question with a FileUploadAnswer, as specified in the QuestionForm of
--   the HIT.
newGetFileUploadURL :: Text -> Text -> GetFileUploadURL

-- | The ID of the assignment that contains the question with a
--   FileUploadAnswer.
getFileUploadURL_assignmentId :: Lens' GetFileUploadURL Text

-- | The identifier of the question with a FileUploadAnswer, as specified
--   in the QuestionForm of the HIT.
getFileUploadURL_questionIdentifier :: Lens' GetFileUploadURL Text

-- | <i>See:</i> <a>newGetFileUploadURLResponse</a> smart constructor.
data GetFileUploadURLResponse
GetFileUploadURLResponse' :: Maybe Text -> Int -> GetFileUploadURLResponse

-- | A temporary URL for the file that the Worker uploaded for the answer.
[$sel:fileUploadURL:GetFileUploadURLResponse'] :: GetFileUploadURLResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetFileUploadURLResponse'] :: GetFileUploadURLResponse -> Int

-- | Create a value of <a>GetFileUploadURLResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileUploadURL:GetFileUploadURLResponse'</a>,
--   <a>getFileUploadURLResponse_fileUploadURL</a> - A temporary URL for
--   the file that the Worker uploaded for the answer.
--   
--   <a>$sel:httpStatus:GetFileUploadURLResponse'</a>,
--   <a>getFileUploadURLResponse_httpStatus</a> - The response's http
--   status code.
newGetFileUploadURLResponse :: Int -> GetFileUploadURLResponse

-- | A temporary URL for the file that the Worker uploaded for the answer.
getFileUploadURLResponse_fileUploadURL :: Lens' GetFileUploadURLResponse (Maybe Text)

-- | The response's http status code.
getFileUploadURLResponse_httpStatus :: Lens' GetFileUploadURLResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURL
instance GHC.Show.Show Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURL
instance GHC.Read.Read Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURL
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURL
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURLResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURLResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURLResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURLResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURL
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURLResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURL
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURL
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURL
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURL
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURL
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.GetFileUploadURL.GetFileUploadURL


-- | The <tt>GetAssignment</tt> operation retrieves the details of the
--   specified Assignment.
module Amazonka.MechanicalTurk.GetAssignment

-- | <i>See:</i> <a>newGetAssignment</a> smart constructor.
data GetAssignment
GetAssignment' :: Text -> GetAssignment

-- | The ID of the Assignment to be retrieved.
[$sel:assignmentId:GetAssignment'] :: GetAssignment -> Text

-- | Create a value of <a>GetAssignment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assignmentId:GetAssignment'</a>,
--   <a>getAssignment_assignmentId</a> - The ID of the Assignment to be
--   retrieved.
newGetAssignment :: Text -> GetAssignment

-- | The ID of the Assignment to be retrieved.
getAssignment_assignmentId :: Lens' GetAssignment Text

-- | <i>See:</i> <a>newGetAssignmentResponse</a> smart constructor.
data GetAssignmentResponse
GetAssignmentResponse' :: Maybe HIT -> Maybe Assignment -> Int -> GetAssignmentResponse

-- | The HIT associated with this assignment. The response includes one HIT
--   element.
[$sel:hit:GetAssignmentResponse'] :: GetAssignmentResponse -> Maybe HIT

-- | The assignment. The response includes one Assignment element.
[$sel:assignment:GetAssignmentResponse'] :: GetAssignmentResponse -> Maybe Assignment

-- | The response's http status code.
[$sel:httpStatus:GetAssignmentResponse'] :: GetAssignmentResponse -> Int

-- | Create a value of <a>GetAssignmentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hit:GetAssignmentResponse'</a>,
--   <a>getAssignmentResponse_hit</a> - The HIT associated with this
--   assignment. The response includes one HIT element.
--   
--   <a>$sel:assignment:GetAssignmentResponse'</a>,
--   <a>getAssignmentResponse_assignment</a> - The assignment. The response
--   includes one Assignment element.
--   
--   <a>$sel:httpStatus:GetAssignmentResponse'</a>,
--   <a>getAssignmentResponse_httpStatus</a> - The response's http status
--   code.
newGetAssignmentResponse :: Int -> GetAssignmentResponse

-- | The HIT associated with this assignment. The response includes one HIT
--   element.
getAssignmentResponse_hit :: Lens' GetAssignmentResponse (Maybe HIT)

-- | The assignment. The response includes one Assignment element.
getAssignmentResponse_assignment :: Lens' GetAssignmentResponse (Maybe Assignment)

-- | The response's http status code.
getAssignmentResponse_httpStatus :: Lens' GetAssignmentResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetAssignment.GetAssignment
instance GHC.Show.Show Amazonka.MechanicalTurk.GetAssignment.GetAssignment
instance GHC.Read.Read Amazonka.MechanicalTurk.GetAssignment.GetAssignment
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetAssignment.GetAssignment
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetAssignment.GetAssignmentResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.GetAssignment.GetAssignmentResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.GetAssignment.GetAssignmentResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetAssignment.GetAssignmentResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.GetAssignment.GetAssignment
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetAssignment.GetAssignmentResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.GetAssignment.GetAssignment
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetAssignment.GetAssignment
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.GetAssignment.GetAssignment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.GetAssignment.GetAssignment
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.GetAssignment.GetAssignment
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.GetAssignment.GetAssignment


-- | The <tt>GetAccountBalance</tt> operation retrieves the Prepaid HITs
--   balance in your Amazon Mechanical Turk account if you are a Prepaid
--   Requester. Alternatively, this operation will retrieve the remaining
--   available AWS Billing usage if you have enabled AWS Billing. Note: If
--   you have enabled AWS Billing and still have a remaining Prepaid HITs
--   balance, this balance can be viewed on the My Account page in the
--   Requester console.
module Amazonka.MechanicalTurk.GetAccountBalance

-- | <i>See:</i> <a>newGetAccountBalance</a> smart constructor.
data GetAccountBalance
GetAccountBalance' :: GetAccountBalance

-- | Create a value of <a>GetAccountBalance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetAccountBalance :: GetAccountBalance

-- | <i>See:</i> <a>newGetAccountBalanceResponse</a> smart constructor.
data GetAccountBalanceResponse
GetAccountBalanceResponse' :: Maybe Text -> Maybe Text -> Int -> GetAccountBalanceResponse
[$sel:availableBalance:GetAccountBalanceResponse'] :: GetAccountBalanceResponse -> Maybe Text
[$sel:onHoldBalance:GetAccountBalanceResponse'] :: GetAccountBalanceResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:GetAccountBalanceResponse'] :: GetAccountBalanceResponse -> Int

-- | Create a value of <a>GetAccountBalanceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availableBalance:GetAccountBalanceResponse'</a>,
--   <a>getAccountBalanceResponse_availableBalance</a> - Undocumented
--   member.
--   
--   <a>$sel:onHoldBalance:GetAccountBalanceResponse'</a>,
--   <a>getAccountBalanceResponse_onHoldBalance</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetAccountBalanceResponse'</a>,
--   <a>getAccountBalanceResponse_httpStatus</a> - The response's http
--   status code.
newGetAccountBalanceResponse :: Int -> GetAccountBalanceResponse

-- | Undocumented member.
getAccountBalanceResponse_availableBalance :: Lens' GetAccountBalanceResponse (Maybe Text)

-- | Undocumented member.
getAccountBalanceResponse_onHoldBalance :: Lens' GetAccountBalanceResponse (Maybe Text)

-- | The response's http status code.
getAccountBalanceResponse_httpStatus :: Lens' GetAccountBalanceResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalance
instance GHC.Show.Show Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalance
instance GHC.Read.Read Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalance
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalance
instance GHC.Generics.Generic Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalanceResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalanceResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalanceResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalanceResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalance
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalanceResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalance
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalance
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalance
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalance
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalance
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.GetAccountBalance.GetAccountBalance


-- | The <tt>DisassociateQualificationFromWorker</tt> revokes a previously
--   granted Qualification from a user.
--   
--   You can provide a text message explaining why the Qualification was
--   revoked. The user who had the Qualification can see this message.
module Amazonka.MechanicalTurk.DisassociateQualificationFromWorker

-- | <i>See:</i> <a>newDisassociateQualificationFromWorker</a> smart
--   constructor.
data DisassociateQualificationFromWorker
DisassociateQualificationFromWorker' :: Maybe Text -> Text -> Text -> DisassociateQualificationFromWorker

-- | A text message that explains why the Qualification was revoked. The
--   user who had the Qualification sees this message.
[$sel:reason:DisassociateQualificationFromWorker'] :: DisassociateQualificationFromWorker -> Maybe Text

-- | The ID of the Worker who possesses the Qualification to be revoked.
[$sel:workerId:DisassociateQualificationFromWorker'] :: DisassociateQualificationFromWorker -> Text

-- | The ID of the Qualification type of the Qualification to be revoked.
[$sel:qualificationTypeId:DisassociateQualificationFromWorker'] :: DisassociateQualificationFromWorker -> Text

-- | Create a value of <a>DisassociateQualificationFromWorker</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:DisassociateQualificationFromWorker'</a>,
--   <a>disassociateQualificationFromWorker_reason</a> - A text message
--   that explains why the Qualification was revoked. The user who had the
--   Qualification sees this message.
--   
--   <a>$sel:workerId:DisassociateQualificationFromWorker'</a>,
--   <a>disassociateQualificationFromWorker_workerId</a> - The ID of the
--   Worker who possesses the Qualification to be revoked.
--   
--   <a>$sel:qualificationTypeId:DisassociateQualificationFromWorker'</a>,
--   <a>disassociateQualificationFromWorker_qualificationTypeId</a> - The
--   ID of the Qualification type of the Qualification to be revoked.
newDisassociateQualificationFromWorker :: Text -> Text -> DisassociateQualificationFromWorker

-- | A text message that explains why the Qualification was revoked. The
--   user who had the Qualification sees this message.
disassociateQualificationFromWorker_reason :: Lens' DisassociateQualificationFromWorker (Maybe Text)

-- | The ID of the Worker who possesses the Qualification to be revoked.
disassociateQualificationFromWorker_workerId :: Lens' DisassociateQualificationFromWorker Text

-- | The ID of the Qualification type of the Qualification to be revoked.
disassociateQualificationFromWorker_qualificationTypeId :: Lens' DisassociateQualificationFromWorker Text

-- | <i>See:</i> <a>newDisassociateQualificationFromWorkerResponse</a>
--   smart constructor.
data DisassociateQualificationFromWorkerResponse
DisassociateQualificationFromWorkerResponse' :: Int -> DisassociateQualificationFromWorkerResponse

-- | The response's http status code.
[$sel:httpStatus:DisassociateQualificationFromWorkerResponse'] :: DisassociateQualificationFromWorkerResponse -> Int

-- | Create a value of <a>DisassociateQualificationFromWorkerResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateQualificationFromWorkerResponse'</a>,
--   <a>disassociateQualificationFromWorkerResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateQualificationFromWorkerResponse :: Int -> DisassociateQualificationFromWorkerResponse

-- | The response's http status code.
disassociateQualificationFromWorkerResponse_httpStatus :: Lens' DisassociateQualificationFromWorkerResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorker
instance GHC.Show.Show Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorker
instance GHC.Read.Read Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorker
instance GHC.Classes.Eq Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorker
instance GHC.Generics.Generic Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorkerResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorkerResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorkerResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorkerResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorker
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorkerResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorker
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorker
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorker
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorker
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.DisassociateQualificationFromWorker.DisassociateQualificationFromWorker


-- | The <tt>DeleteWorkerBlock</tt> operation allows you to reinstate a
--   blocked Worker to work on your HITs. This operation reverses the
--   effects of the CreateWorkerBlock operation. You need the Worker ID to
--   use this operation. If the Worker ID is missing or invalid, this
--   operation fails and returns the message “WorkerId is invalid.” If the
--   specified Worker is not blocked, this operation returns successfully.
module Amazonka.MechanicalTurk.DeleteWorkerBlock

-- | <i>See:</i> <a>newDeleteWorkerBlock</a> smart constructor.
data DeleteWorkerBlock
DeleteWorkerBlock' :: Maybe Text -> Text -> DeleteWorkerBlock

-- | A message that explains the reason for unblocking the Worker. The
--   Worker does not see this message.
[$sel:reason:DeleteWorkerBlock'] :: DeleteWorkerBlock -> Maybe Text

-- | The ID of the Worker to unblock.
[$sel:workerId:DeleteWorkerBlock'] :: DeleteWorkerBlock -> Text

-- | Create a value of <a>DeleteWorkerBlock</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:DeleteWorkerBlock'</a>, <a>deleteWorkerBlock_reason</a>
--   - A message that explains the reason for unblocking the Worker. The
--   Worker does not see this message.
--   
--   <a>$sel:workerId:DeleteWorkerBlock'</a>,
--   <a>deleteWorkerBlock_workerId</a> - The ID of the Worker to unblock.
newDeleteWorkerBlock :: Text -> DeleteWorkerBlock

-- | A message that explains the reason for unblocking the Worker. The
--   Worker does not see this message.
deleteWorkerBlock_reason :: Lens' DeleteWorkerBlock (Maybe Text)

-- | The ID of the Worker to unblock.
deleteWorkerBlock_workerId :: Lens' DeleteWorkerBlock Text

-- | <i>See:</i> <a>newDeleteWorkerBlockResponse</a> smart constructor.
data DeleteWorkerBlockResponse
DeleteWorkerBlockResponse' :: Int -> DeleteWorkerBlockResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteWorkerBlockResponse'] :: DeleteWorkerBlockResponse -> Int

-- | Create a value of <a>DeleteWorkerBlockResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteWorkerBlockResponse'</a>,
--   <a>deleteWorkerBlockResponse_httpStatus</a> - The response's http
--   status code.
newDeleteWorkerBlockResponse :: Int -> DeleteWorkerBlockResponse

-- | The response's http status code.
deleteWorkerBlockResponse_httpStatus :: Lens' DeleteWorkerBlockResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlock
instance GHC.Show.Show Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlock
instance GHC.Read.Read Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlock
instance GHC.Classes.Eq Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlock
instance GHC.Generics.Generic Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlockResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlockResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlockResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlockResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlock
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlockResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlock
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlock
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlock
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlock
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlock
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.DeleteWorkerBlock.DeleteWorkerBlock


-- | The <tt>DeleteQualificationType</tt> deletes a Qualification type and
--   deletes any HIT types that are associated with the Qualification type.
--   
--   This operation does not revoke Qualifications already assigned to
--   Workers because the Qualifications might be needed for active HITs. If
--   there are any pending requests for the Qualification type, Amazon
--   Mechanical Turk rejects those requests. After you delete a
--   Qualification type, you can no longer use it to create HITs or HIT
--   types.
--   
--   DeleteQualificationType must wait for all the HITs that use the
--   deleted Qualification type to be deleted before completing. It may
--   take up to 48 hours before DeleteQualificationType completes and the
--   unique name of the Qualification type is available for reuse with
--   CreateQualificationType.
module Amazonka.MechanicalTurk.DeleteQualificationType

-- | <i>See:</i> <a>newDeleteQualificationType</a> smart constructor.
data DeleteQualificationType
DeleteQualificationType' :: Text -> DeleteQualificationType

-- | The ID of the QualificationType to dispose.
[$sel:qualificationTypeId:DeleteQualificationType'] :: DeleteQualificationType -> Text

-- | Create a value of <a>DeleteQualificationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationTypeId:DeleteQualificationType'</a>,
--   <a>deleteQualificationType_qualificationTypeId</a> - The ID of the
--   QualificationType to dispose.
newDeleteQualificationType :: Text -> DeleteQualificationType

-- | The ID of the QualificationType to dispose.
deleteQualificationType_qualificationTypeId :: Lens' DeleteQualificationType Text

-- | <i>See:</i> <a>newDeleteQualificationTypeResponse</a> smart
--   constructor.
data DeleteQualificationTypeResponse
DeleteQualificationTypeResponse' :: Int -> DeleteQualificationTypeResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteQualificationTypeResponse'] :: DeleteQualificationTypeResponse -> Int

-- | Create a value of <a>DeleteQualificationTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteQualificationTypeResponse'</a>,
--   <a>deleteQualificationTypeResponse_httpStatus</a> - The response's
--   http status code.
newDeleteQualificationTypeResponse :: Int -> DeleteQualificationTypeResponse

-- | The response's http status code.
deleteQualificationTypeResponse_httpStatus :: Lens' DeleteQualificationTypeResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationType
instance GHC.Show.Show Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationType
instance GHC.Read.Read Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationType
instance GHC.Classes.Eq Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationType
instance GHC.Generics.Generic Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationTypeResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationTypeResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationTypeResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationTypeResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationTypeResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationType
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationType
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationType
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.DeleteQualificationType.DeleteQualificationType


-- | The <tt>DeleteHIT</tt> operation is used to delete HIT that is no
--   longer needed. Only the Requester who created the HIT can delete it.
--   
--   You can only dispose of HITs that are in the <tt>Reviewable</tt>
--   state, with all of their submitted assignments already either approved
--   or rejected. If you call the DeleteHIT operation on a HIT that is not
--   in the <tt>Reviewable</tt> state (for example, that has not expired,
--   or still has active assignments), or on a HIT that is Reviewable but
--   without all of its submitted assignments already approved or rejected,
--   the service will return an error.
--   
--   <ul>
--   <li>HITs are automatically disposed of after 120 days.</li>
--   <li>After you dispose of a HIT, you can no longer approve the HIT's
--   rejected assignments.</li>
--   <li>Disposed HITs are not returned in results for the ListHITs
--   operation.</li>
--   <li>Disposing HITs can improve the performance of operations such as
--   ListReviewableHITs and ListHITs.</li>
--   </ul>
module Amazonka.MechanicalTurk.DeleteHIT

-- | <i>See:</i> <a>newDeleteHIT</a> smart constructor.
data DeleteHIT
DeleteHIT' :: Text -> DeleteHIT

-- | The ID of the HIT to be deleted.
[$sel:hITId:DeleteHIT'] :: DeleteHIT -> Text

-- | Create a value of <a>DeleteHIT</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITId:DeleteHIT'</a>, <a>deleteHIT_hITId</a> - The ID of the
--   HIT to be deleted.
newDeleteHIT :: Text -> DeleteHIT

-- | The ID of the HIT to be deleted.
deleteHIT_hITId :: Lens' DeleteHIT Text

-- | <i>See:</i> <a>newDeleteHITResponse</a> smart constructor.
data DeleteHITResponse
DeleteHITResponse' :: Int -> DeleteHITResponse

-- | The response's http status code.
[$sel:httpStatus:DeleteHITResponse'] :: DeleteHITResponse -> Int

-- | Create a value of <a>DeleteHITResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteHITResponse'</a>,
--   <a>deleteHITResponse_httpStatus</a> - The response's http status code.
newDeleteHITResponse :: Int -> DeleteHITResponse

-- | The response's http status code.
deleteHITResponse_httpStatus :: Lens' DeleteHITResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.DeleteHIT.DeleteHIT
instance GHC.Show.Show Amazonka.MechanicalTurk.DeleteHIT.DeleteHIT
instance GHC.Read.Read Amazonka.MechanicalTurk.DeleteHIT.DeleteHIT
instance GHC.Classes.Eq Amazonka.MechanicalTurk.DeleteHIT.DeleteHIT
instance GHC.Generics.Generic Amazonka.MechanicalTurk.DeleteHIT.DeleteHITResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.DeleteHIT.DeleteHITResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.DeleteHIT.DeleteHITResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.DeleteHIT.DeleteHITResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.DeleteHIT.DeleteHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.DeleteHIT.DeleteHITResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.DeleteHIT.DeleteHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.DeleteHIT.DeleteHIT
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.DeleteHIT.DeleteHIT
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.DeleteHIT.DeleteHIT
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.DeleteHIT.DeleteHIT
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.DeleteHIT.DeleteHIT


-- | The <tt>CreateWorkerBlock</tt> operation allows you to prevent a
--   Worker from working on your HITs. For example, you can block a Worker
--   who is producing poor quality work. You can block up to 100,000
--   Workers.
module Amazonka.MechanicalTurk.CreateWorkerBlock

-- | <i>See:</i> <a>newCreateWorkerBlock</a> smart constructor.
data CreateWorkerBlock
CreateWorkerBlock' :: Text -> Text -> CreateWorkerBlock

-- | The ID of the Worker to block.
[$sel:workerId:CreateWorkerBlock'] :: CreateWorkerBlock -> Text

-- | A message explaining the reason for blocking the Worker. This
--   parameter enables you to keep track of your Workers. The Worker does
--   not see this message.
[$sel:reason:CreateWorkerBlock'] :: CreateWorkerBlock -> Text

-- | Create a value of <a>CreateWorkerBlock</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workerId:CreateWorkerBlock'</a>,
--   <a>createWorkerBlock_workerId</a> - The ID of the Worker to block.
--   
--   <a>$sel:reason:CreateWorkerBlock'</a>, <a>createWorkerBlock_reason</a>
--   - A message explaining the reason for blocking the Worker. This
--   parameter enables you to keep track of your Workers. The Worker does
--   not see this message.
newCreateWorkerBlock :: Text -> Text -> CreateWorkerBlock

-- | The ID of the Worker to block.
createWorkerBlock_workerId :: Lens' CreateWorkerBlock Text

-- | A message explaining the reason for blocking the Worker. This
--   parameter enables you to keep track of your Workers. The Worker does
--   not see this message.
createWorkerBlock_reason :: Lens' CreateWorkerBlock Text

-- | <i>See:</i> <a>newCreateWorkerBlockResponse</a> smart constructor.
data CreateWorkerBlockResponse
CreateWorkerBlockResponse' :: Int -> CreateWorkerBlockResponse

-- | The response's http status code.
[$sel:httpStatus:CreateWorkerBlockResponse'] :: CreateWorkerBlockResponse -> Int

-- | Create a value of <a>CreateWorkerBlockResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateWorkerBlockResponse'</a>,
--   <a>createWorkerBlockResponse_httpStatus</a> - The response's http
--   status code.
newCreateWorkerBlockResponse :: Int -> CreateWorkerBlockResponse

-- | The response's http status code.
createWorkerBlockResponse_httpStatus :: Lens' CreateWorkerBlockResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlock
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlock
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlock
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlock
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlockResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlockResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlockResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlockResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlock
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlockResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlock
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlock
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlock
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlock
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlock
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.CreateWorkerBlock.CreateWorkerBlock


-- | The <tt>CreateQualificationType</tt> operation creates a new
--   Qualification type, which is represented by a
--   <tt>QualificationType</tt> data structure.
module Amazonka.MechanicalTurk.CreateQualificationType

-- | <i>See:</i> <a>newCreateQualificationType</a> smart constructor.
data CreateQualificationType
CreateQualificationType' :: Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Integer -> Text -> Text -> QualificationTypeStatus -> CreateQualificationType

-- | The number of seconds the Worker has to complete the Qualification
--   test, starting from the time the Worker requests the Qualification.
[$sel:testDurationInSeconds:CreateQualificationType'] :: CreateQualificationType -> Maybe Integer

-- | The answers to the Qualification test specified in the Test parameter,
--   in the form of an AnswerKey data structure.
--   
--   Constraints: Must not be longer than 65535 bytes.
--   
--   Constraints: None. If not specified, you must process Qualification
--   requests manually.
[$sel:answerKey:CreateQualificationType'] :: CreateQualificationType -> Maybe Text

-- | The questions for the Qualification test a Worker must answer
--   correctly to obtain a Qualification of this type. If this parameter is
--   specified, <tt>TestDurationInSeconds</tt> must also be specified.
--   
--   Constraints: Must not be longer than 65535 bytes. Must be a
--   QuestionForm data structure. This parameter cannot be specified if
--   AutoGranted is true.
--   
--   Constraints: None. If not specified, the Worker may request the
--   Qualification without answering any questions.
[$sel:test:CreateQualificationType'] :: CreateQualificationType -> Maybe Text

-- | One or more words or phrases that describe the Qualification type,
--   separated by commas. The keywords of a type make the type easier to
--   find during a search.
[$sel:keywords:CreateQualificationType'] :: CreateQualificationType -> Maybe Text

-- | Specifies whether requests for the Qualification type are granted
--   immediately, without prompting the Worker with a Qualification test.
--   
--   Constraints: If the Test parameter is specified, this parameter cannot
--   be true.
[$sel:autoGranted:CreateQualificationType'] :: CreateQualificationType -> Maybe Bool

-- | The Qualification value to use for automatically granted
--   Qualifications. This parameter is used only if the AutoGranted
--   parameter is true.
[$sel:autoGrantedValue:CreateQualificationType'] :: CreateQualificationType -> Maybe Int

-- | The number of seconds that a Worker must wait after requesting a
--   Qualification of the Qualification type before the worker can retry
--   the Qualification request.
--   
--   Constraints: None. If not specified, retries are disabled and Workers
--   can request a Qualification of this type only once, even if the Worker
--   has not been granted the Qualification. It is not possible to disable
--   retries for a Qualification type after it has been created with
--   retries enabled. If you want to disable retries, you must delete
--   existing retry-enabled Qualification type and then create a new
--   Qualification type with retries disabled.
[$sel:retryDelayInSeconds:CreateQualificationType'] :: CreateQualificationType -> Maybe Integer

-- | The name you give to the Qualification type. The type name is used to
--   represent the Qualification to Workers, and to find the type using a
--   Qualification type search. It must be unique across all of your
--   Qualification types.
[$sel:name:CreateQualificationType'] :: CreateQualificationType -> Text

-- | A long description for the Qualification type. On the Amazon
--   Mechanical Turk website, the long description is displayed when a
--   Worker examines a Qualification type.
[$sel:description:CreateQualificationType'] :: CreateQualificationType -> Text

-- | The initial status of the Qualification type.
--   
--   Constraints: Valid values are: Active | Inactive
[$sel:qualificationTypeStatus:CreateQualificationType'] :: CreateQualificationType -> QualificationTypeStatus

-- | Create a value of <a>CreateQualificationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testDurationInSeconds:CreateQualificationType'</a>,
--   <a>createQualificationType_testDurationInSeconds</a> - The number of
--   seconds the Worker has to complete the Qualification test, starting
--   from the time the Worker requests the Qualification.
--   
--   <a>$sel:answerKey:CreateQualificationType'</a>,
--   <a>createQualificationType_answerKey</a> - The answers to the
--   Qualification test specified in the Test parameter, in the form of an
--   AnswerKey data structure.
--   
--   Constraints: Must not be longer than 65535 bytes.
--   
--   Constraints: None. If not specified, you must process Qualification
--   requests manually.
--   
--   <a>$sel:test:CreateQualificationType'</a>,
--   <a>createQualificationType_test</a> - The questions for the
--   Qualification test a Worker must answer correctly to obtain a
--   Qualification of this type. If this parameter is specified,
--   <tt>TestDurationInSeconds</tt> must also be specified.
--   
--   Constraints: Must not be longer than 65535 bytes. Must be a
--   QuestionForm data structure. This parameter cannot be specified if
--   AutoGranted is true.
--   
--   Constraints: None. If not specified, the Worker may request the
--   Qualification without answering any questions.
--   
--   <a>$sel:keywords:CreateQualificationType'</a>,
--   <a>createQualificationType_keywords</a> - One or more words or phrases
--   that describe the Qualification type, separated by commas. The
--   keywords of a type make the type easier to find during a search.
--   
--   <a>$sel:autoGranted:CreateQualificationType'</a>,
--   <a>createQualificationType_autoGranted</a> - Specifies whether
--   requests for the Qualification type are granted immediately, without
--   prompting the Worker with a Qualification test.
--   
--   Constraints: If the Test parameter is specified, this parameter cannot
--   be true.
--   
--   <a>$sel:autoGrantedValue:CreateQualificationType'</a>,
--   <a>createQualificationType_autoGrantedValue</a> - The Qualification
--   value to use for automatically granted Qualifications. This parameter
--   is used only if the AutoGranted parameter is true.
--   
--   <a>$sel:retryDelayInSeconds:CreateQualificationType'</a>,
--   <a>createQualificationType_retryDelayInSeconds</a> - The number of
--   seconds that a Worker must wait after requesting a Qualification of
--   the Qualification type before the worker can retry the Qualification
--   request.
--   
--   Constraints: None. If not specified, retries are disabled and Workers
--   can request a Qualification of this type only once, even if the Worker
--   has not been granted the Qualification. It is not possible to disable
--   retries for a Qualification type after it has been created with
--   retries enabled. If you want to disable retries, you must delete
--   existing retry-enabled Qualification type and then create a new
--   Qualification type with retries disabled.
--   
--   <a>$sel:name:CreateQualificationType'</a>,
--   <a>createQualificationType_name</a> - The name you give to the
--   Qualification type. The type name is used to represent the
--   Qualification to Workers, and to find the type using a Qualification
--   type search. It must be unique across all of your Qualification types.
--   
--   <a>$sel:description:CreateQualificationType'</a>,
--   <a>createQualificationType_description</a> - A long description for
--   the Qualification type. On the Amazon Mechanical Turk website, the
--   long description is displayed when a Worker examines a Qualification
--   type.
--   
--   <a>$sel:qualificationTypeStatus:CreateQualificationType'</a>,
--   <a>createQualificationType_qualificationTypeStatus</a> - The initial
--   status of the Qualification type.
--   
--   Constraints: Valid values are: Active | Inactive
newCreateQualificationType :: Text -> Text -> QualificationTypeStatus -> CreateQualificationType

-- | The number of seconds the Worker has to complete the Qualification
--   test, starting from the time the Worker requests the Qualification.
createQualificationType_testDurationInSeconds :: Lens' CreateQualificationType (Maybe Integer)

-- | The answers to the Qualification test specified in the Test parameter,
--   in the form of an AnswerKey data structure.
--   
--   Constraints: Must not be longer than 65535 bytes.
--   
--   Constraints: None. If not specified, you must process Qualification
--   requests manually.
createQualificationType_answerKey :: Lens' CreateQualificationType (Maybe Text)

-- | The questions for the Qualification test a Worker must answer
--   correctly to obtain a Qualification of this type. If this parameter is
--   specified, <tt>TestDurationInSeconds</tt> must also be specified.
--   
--   Constraints: Must not be longer than 65535 bytes. Must be a
--   QuestionForm data structure. This parameter cannot be specified if
--   AutoGranted is true.
--   
--   Constraints: None. If not specified, the Worker may request the
--   Qualification without answering any questions.
createQualificationType_test :: Lens' CreateQualificationType (Maybe Text)

-- | One or more words or phrases that describe the Qualification type,
--   separated by commas. The keywords of a type make the type easier to
--   find during a search.
createQualificationType_keywords :: Lens' CreateQualificationType (Maybe Text)

-- | Specifies whether requests for the Qualification type are granted
--   immediately, without prompting the Worker with a Qualification test.
--   
--   Constraints: If the Test parameter is specified, this parameter cannot
--   be true.
createQualificationType_autoGranted :: Lens' CreateQualificationType (Maybe Bool)

-- | The Qualification value to use for automatically granted
--   Qualifications. This parameter is used only if the AutoGranted
--   parameter is true.
createQualificationType_autoGrantedValue :: Lens' CreateQualificationType (Maybe Int)

-- | The number of seconds that a Worker must wait after requesting a
--   Qualification of the Qualification type before the worker can retry
--   the Qualification request.
--   
--   Constraints: None. If not specified, retries are disabled and Workers
--   can request a Qualification of this type only once, even if the Worker
--   has not been granted the Qualification. It is not possible to disable
--   retries for a Qualification type after it has been created with
--   retries enabled. If you want to disable retries, you must delete
--   existing retry-enabled Qualification type and then create a new
--   Qualification type with retries disabled.
createQualificationType_retryDelayInSeconds :: Lens' CreateQualificationType (Maybe Integer)

-- | The name you give to the Qualification type. The type name is used to
--   represent the Qualification to Workers, and to find the type using a
--   Qualification type search. It must be unique across all of your
--   Qualification types.
createQualificationType_name :: Lens' CreateQualificationType Text

-- | A long description for the Qualification type. On the Amazon
--   Mechanical Turk website, the long description is displayed when a
--   Worker examines a Qualification type.
createQualificationType_description :: Lens' CreateQualificationType Text

-- | The initial status of the Qualification type.
--   
--   Constraints: Valid values are: Active | Inactive
createQualificationType_qualificationTypeStatus :: Lens' CreateQualificationType QualificationTypeStatus

-- | <i>See:</i> <a>newCreateQualificationTypeResponse</a> smart
--   constructor.
data CreateQualificationTypeResponse
CreateQualificationTypeResponse' :: Maybe QualificationType -> Int -> CreateQualificationTypeResponse

-- | The created Qualification type, returned as a QualificationType data
--   structure.
[$sel:qualificationType:CreateQualificationTypeResponse'] :: CreateQualificationTypeResponse -> Maybe QualificationType

-- | The response's http status code.
[$sel:httpStatus:CreateQualificationTypeResponse'] :: CreateQualificationTypeResponse -> Int

-- | Create a value of <a>CreateQualificationTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationType:CreateQualificationTypeResponse'</a>,
--   <a>createQualificationTypeResponse_qualificationType</a> - The created
--   Qualification type, returned as a QualificationType data structure.
--   
--   <a>$sel:httpStatus:CreateQualificationTypeResponse'</a>,
--   <a>createQualificationTypeResponse_httpStatus</a> - The response's
--   http status code.
newCreateQualificationTypeResponse :: Int -> CreateQualificationTypeResponse

-- | The created Qualification type, returned as a QualificationType data
--   structure.
createQualificationTypeResponse_qualificationType :: Lens' CreateQualificationTypeResponse (Maybe QualificationType)

-- | The response's http status code.
createQualificationTypeResponse_httpStatus :: Lens' CreateQualificationTypeResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationType
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationType
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationType
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationType
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationTypeResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationTypeResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationTypeResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationTypeResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationTypeResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationType
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationType
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationType
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.CreateQualificationType.CreateQualificationType


-- | The <tt>CreateHITWithHITType</tt> operation creates a new Human
--   Intelligence Task (HIT) using an existing HITTypeID generated by the
--   <tt>CreateHITType</tt> operation.
--   
--   This is an alternative way to create HITs from the <tt>CreateHIT</tt>
--   operation. This is the recommended best practice for Requesters who
--   are creating large numbers of HITs.
--   
--   CreateHITWithHITType also supports several ways to provide question
--   data: by providing a value for the <tt>Question</tt> parameter that
--   fully specifies the contents of the HIT, or by providing a
--   <tt>HitLayoutId</tt> and associated <tt>HitLayoutParameters</tt>.
--   
--   If a HIT is created with 10 or more maximum assignments, there is an
--   additional fee. For more information, see <a>Amazon Mechanical Turk
--   Pricing</a>.
module Amazonka.MechanicalTurk.CreateHITWithHITType

-- | <i>See:</i> <a>newCreateHITWithHITType</a> smart constructor.
data CreateHITWithHITType
CreateHITWithHITType' :: Maybe ReviewPolicy -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [HITLayoutParameter] -> Maybe Text -> Maybe ReviewPolicy -> Text -> Integer -> CreateHITWithHITType

-- | The HIT-level Review Policy applies to the HIT. You can specify for
--   Mechanical Turk to take various actions based on the policy.
[$sel:hITReviewPolicy:CreateHITWithHITType'] :: CreateHITWithHITType -> Maybe ReviewPolicy

-- | A unique identifier for this request which allows you to retry the
--   call on error without creating duplicate HITs. This is useful in cases
--   such as network timeouts where it is unclear whether or not the call
--   succeeded on the server. If the HIT already exists in the system from
--   a previous call using the same UniqueRequestToken, subsequent calls
--   will return a AWS.MechanicalTurk.HitAlreadyExists error with a message
--   containing the HITId.
--   
--   Note: It is your responsibility to ensure uniqueness of the token. The
--   unique token expires after 24 hours. Subsequent calls using the same
--   UniqueRequestToken made after the 24 hour limit could create duplicate
--   HITs.
[$sel:uniqueRequestToken:CreateHITWithHITType'] :: CreateHITWithHITType -> Maybe Text

-- | An arbitrary data field. The RequesterAnnotation parameter lets your
--   application attach arbitrary data to the HIT for tracking purposes.
--   For example, this parameter could be an identifier internal to the
--   Requester's application that corresponds with the HIT.
--   
--   The RequesterAnnotation parameter for a HIT is only visible to the
--   Requester who created the HIT. It is not shown to the Worker, or any
--   other Requester.
--   
--   The RequesterAnnotation parameter may be different for each HIT you
--   submit. It does not affect how your HITs are grouped.
[$sel:requesterAnnotation:CreateHITWithHITType'] :: CreateHITWithHITType -> Maybe Text

-- | The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
[$sel:maxAssignments:CreateHITWithHITType'] :: CreateHITWithHITType -> Maybe Int

-- | The HITLayoutId allows you to use a pre-existing HIT design with
--   placeholder values and create an additional HIT by providing those
--   values as HITLayoutParameters.
--   
--   Constraints: Either a Question parameter or a HITLayoutId parameter
--   must be provided.
[$sel:hITLayoutId:CreateHITWithHITType'] :: CreateHITWithHITType -> Maybe Text

-- | If the HITLayoutId is provided, any placeholder values must be filled
--   in with values using the HITLayoutParameter structure. For more
--   information, see HITLayout.
[$sel:hITLayoutParameters:CreateHITWithHITType'] :: CreateHITWithHITType -> Maybe [HITLayoutParameter]

-- | The data the person completing the HIT uses to produce the results.
--   
--   Constraints: Must be a QuestionForm data structure, an
--   ExternalQuestion data structure, or an HTMLQuestion data structure.
--   The XML question data must not be larger than 64 kilobytes (65,535
--   bytes) in size, including whitespace.
--   
--   Either a Question parameter or a HITLayoutId parameter must be
--   provided.
[$sel:question:CreateHITWithHITType'] :: CreateHITWithHITType -> Maybe Text

-- | The Assignment-level Review Policy applies to the assignments under
--   the HIT. You can specify for Mechanical Turk to take various actions
--   based on the policy.
[$sel:assignmentReviewPolicy:CreateHITWithHITType'] :: CreateHITWithHITType -> Maybe ReviewPolicy

-- | The HIT type ID you want to create this HIT with.
[$sel:hITTypeId:CreateHITWithHITType'] :: CreateHITWithHITType -> Text

-- | An amount of time, in seconds, after which the HIT is no longer
--   available for users to accept. After the lifetime of the HIT elapses,
--   the HIT no longer appears in HIT searches, even if not all of the
--   assignments for the HIT have been accepted.
[$sel:lifetimeInSeconds:CreateHITWithHITType'] :: CreateHITWithHITType -> Integer

-- | Create a value of <a>CreateHITWithHITType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITReviewPolicy:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_hITReviewPolicy</a> - The HIT-level Review
--   Policy applies to the HIT. You can specify for Mechanical Turk to take
--   various actions based on the policy.
--   
--   <a>$sel:uniqueRequestToken:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_uniqueRequestToken</a> - A unique identifier
--   for this request which allows you to retry the call on error without
--   creating duplicate HITs. This is useful in cases such as network
--   timeouts where it is unclear whether or not the call succeeded on the
--   server. If the HIT already exists in the system from a previous call
--   using the same UniqueRequestToken, subsequent calls will return a
--   AWS.MechanicalTurk.HitAlreadyExists error with a message containing
--   the HITId.
--   
--   Note: It is your responsibility to ensure uniqueness of the token. The
--   unique token expires after 24 hours. Subsequent calls using the same
--   UniqueRequestToken made after the 24 hour limit could create duplicate
--   HITs.
--   
--   <a>$sel:requesterAnnotation:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_requesterAnnotation</a> - An arbitrary data
--   field. The RequesterAnnotation parameter lets your application attach
--   arbitrary data to the HIT for tracking purposes. For example, this
--   parameter could be an identifier internal to the Requester's
--   application that corresponds with the HIT.
--   
--   The RequesterAnnotation parameter for a HIT is only visible to the
--   Requester who created the HIT. It is not shown to the Worker, or any
--   other Requester.
--   
--   The RequesterAnnotation parameter may be different for each HIT you
--   submit. It does not affect how your HITs are grouped.
--   
--   <a>$sel:maxAssignments:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_maxAssignments</a> - The number of times the
--   HIT can be accepted and completed before the HIT becomes unavailable.
--   
--   <a>$sel:hITLayoutId:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_hITLayoutId</a> - The HITLayoutId allows you
--   to use a pre-existing HIT design with placeholder values and create an
--   additional HIT by providing those values as HITLayoutParameters.
--   
--   Constraints: Either a Question parameter or a HITLayoutId parameter
--   must be provided.
--   
--   <a>$sel:hITLayoutParameters:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_hITLayoutParameters</a> - If the HITLayoutId
--   is provided, any placeholder values must be filled in with values
--   using the HITLayoutParameter structure. For more information, see
--   HITLayout.
--   
--   <a>$sel:question:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_question</a> - The data the person completing
--   the HIT uses to produce the results.
--   
--   Constraints: Must be a QuestionForm data structure, an
--   ExternalQuestion data structure, or an HTMLQuestion data structure.
--   The XML question data must not be larger than 64 kilobytes (65,535
--   bytes) in size, including whitespace.
--   
--   Either a Question parameter or a HITLayoutId parameter must be
--   provided.
--   
--   <a>$sel:assignmentReviewPolicy:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_assignmentReviewPolicy</a> - The
--   Assignment-level Review Policy applies to the assignments under the
--   HIT. You can specify for Mechanical Turk to take various actions based
--   on the policy.
--   
--   <a>$sel:hITTypeId:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_hITTypeId</a> - The HIT type ID you want to
--   create this HIT with.
--   
--   <a>$sel:lifetimeInSeconds:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_lifetimeInSeconds</a> - An amount of time, in
--   seconds, after which the HIT is no longer available for users to
--   accept. After the lifetime of the HIT elapses, the HIT no longer
--   appears in HIT searches, even if not all of the assignments for the
--   HIT have been accepted.
newCreateHITWithHITType :: Text -> Integer -> CreateHITWithHITType

-- | The HIT-level Review Policy applies to the HIT. You can specify for
--   Mechanical Turk to take various actions based on the policy.
createHITWithHITType_hITReviewPolicy :: Lens' CreateHITWithHITType (Maybe ReviewPolicy)

-- | A unique identifier for this request which allows you to retry the
--   call on error without creating duplicate HITs. This is useful in cases
--   such as network timeouts where it is unclear whether or not the call
--   succeeded on the server. If the HIT already exists in the system from
--   a previous call using the same UniqueRequestToken, subsequent calls
--   will return a AWS.MechanicalTurk.HitAlreadyExists error with a message
--   containing the HITId.
--   
--   Note: It is your responsibility to ensure uniqueness of the token. The
--   unique token expires after 24 hours. Subsequent calls using the same
--   UniqueRequestToken made after the 24 hour limit could create duplicate
--   HITs.
createHITWithHITType_uniqueRequestToken :: Lens' CreateHITWithHITType (Maybe Text)

-- | An arbitrary data field. The RequesterAnnotation parameter lets your
--   application attach arbitrary data to the HIT for tracking purposes.
--   For example, this parameter could be an identifier internal to the
--   Requester's application that corresponds with the HIT.
--   
--   The RequesterAnnotation parameter for a HIT is only visible to the
--   Requester who created the HIT. It is not shown to the Worker, or any
--   other Requester.
--   
--   The RequesterAnnotation parameter may be different for each HIT you
--   submit. It does not affect how your HITs are grouped.
createHITWithHITType_requesterAnnotation :: Lens' CreateHITWithHITType (Maybe Text)

-- | The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
createHITWithHITType_maxAssignments :: Lens' CreateHITWithHITType (Maybe Int)

-- | The HITLayoutId allows you to use a pre-existing HIT design with
--   placeholder values and create an additional HIT by providing those
--   values as HITLayoutParameters.
--   
--   Constraints: Either a Question parameter or a HITLayoutId parameter
--   must be provided.
createHITWithHITType_hITLayoutId :: Lens' CreateHITWithHITType (Maybe Text)

-- | If the HITLayoutId is provided, any placeholder values must be filled
--   in with values using the HITLayoutParameter structure. For more
--   information, see HITLayout.
createHITWithHITType_hITLayoutParameters :: Lens' CreateHITWithHITType (Maybe [HITLayoutParameter])

-- | The data the person completing the HIT uses to produce the results.
--   
--   Constraints: Must be a QuestionForm data structure, an
--   ExternalQuestion data structure, or an HTMLQuestion data structure.
--   The XML question data must not be larger than 64 kilobytes (65,535
--   bytes) in size, including whitespace.
--   
--   Either a Question parameter or a HITLayoutId parameter must be
--   provided.
createHITWithHITType_question :: Lens' CreateHITWithHITType (Maybe Text)

-- | The Assignment-level Review Policy applies to the assignments under
--   the HIT. You can specify for Mechanical Turk to take various actions
--   based on the policy.
createHITWithHITType_assignmentReviewPolicy :: Lens' CreateHITWithHITType (Maybe ReviewPolicy)

-- | The HIT type ID you want to create this HIT with.
createHITWithHITType_hITTypeId :: Lens' CreateHITWithHITType Text

-- | An amount of time, in seconds, after which the HIT is no longer
--   available for users to accept. After the lifetime of the HIT elapses,
--   the HIT no longer appears in HIT searches, even if not all of the
--   assignments for the HIT have been accepted.
createHITWithHITType_lifetimeInSeconds :: Lens' CreateHITWithHITType Integer

-- | <i>See:</i> <a>newCreateHITWithHITTypeResponse</a> smart constructor.
data CreateHITWithHITTypeResponse
CreateHITWithHITTypeResponse' :: Maybe HIT -> Int -> CreateHITWithHITTypeResponse

-- | Contains the newly created HIT data. For a description of the HIT data
--   structure as it appears in responses, see the HIT Data Structure
--   documentation.
[$sel:hit:CreateHITWithHITTypeResponse'] :: CreateHITWithHITTypeResponse -> Maybe HIT

-- | The response's http status code.
[$sel:httpStatus:CreateHITWithHITTypeResponse'] :: CreateHITWithHITTypeResponse -> Int

-- | Create a value of <a>CreateHITWithHITTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hit:CreateHITWithHITTypeResponse'</a>,
--   <a>createHITWithHITTypeResponse_hit</a> - Contains the newly created
--   HIT data. For a description of the HIT data structure as it appears in
--   responses, see the HIT Data Structure documentation.
--   
--   <a>$sel:httpStatus:CreateHITWithHITTypeResponse'</a>,
--   <a>createHITWithHITTypeResponse_httpStatus</a> - The response's http
--   status code.
newCreateHITWithHITTypeResponse :: Int -> CreateHITWithHITTypeResponse

-- | Contains the newly created HIT data. For a description of the HIT data
--   structure as it appears in responses, see the HIT Data Structure
--   documentation.
createHITWithHITTypeResponse_hit :: Lens' CreateHITWithHITTypeResponse (Maybe HIT)

-- | The response's http status code.
createHITWithHITTypeResponse_httpStatus :: Lens' CreateHITWithHITTypeResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITType
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITType
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITType
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITType
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITTypeResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITTypeResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITTypeResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITTypeResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITTypeResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITType
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITType
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITType
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.CreateHITWithHITType.CreateHITWithHITType


-- | The <tt>CreateHITType</tt> operation creates a new HIT type. This
--   operation allows you to define a standard set of HIT properties to use
--   when creating HITs. If you register a HIT type with values that match
--   an existing HIT type, the HIT type ID of the existing type will be
--   returned.
module Amazonka.MechanicalTurk.CreateHITType

-- | <i>See:</i> <a>newCreateHITType</a> smart constructor.
data CreateHITType
CreateHITType' :: Maybe Integer -> Maybe Text -> Maybe [QualificationRequirement] -> Integer -> Text -> Text -> Text -> CreateHITType

-- | The number of seconds after an assignment for the HIT has been
--   submitted, after which the assignment is considered Approved
--   automatically unless the Requester explicitly rejects it.
[$sel:autoApprovalDelayInSeconds:CreateHITType'] :: CreateHITType -> Maybe Integer

-- | One or more words or phrases that describe the HIT, separated by
--   commas. These words are used in searches to find HITs.
[$sel:keywords:CreateHITType'] :: CreateHITType -> Maybe Text

-- | Conditions that a Worker's Qualifications must meet in order to accept
--   the HIT. A HIT can have between zero and ten Qualification
--   requirements. All requirements must be met in order for a Worker to
--   accept the HIT. Additionally, other actions can be restricted using
--   the <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
[$sel:qualificationRequirements:CreateHITType'] :: CreateHITType -> Maybe [QualificationRequirement]

-- | The amount of time, in seconds, that a Worker has to complete the HIT
--   after accepting it. If a Worker does not complete the assignment
--   within the specified duration, the assignment is considered abandoned.
--   If the HIT is still active (that is, its lifetime has not elapsed),
--   the assignment becomes available for other users to find and accept.
[$sel:assignmentDurationInSeconds:CreateHITType'] :: CreateHITType -> Integer

-- | The amount of money the Requester will pay a Worker for successfully
--   completing the HIT.
[$sel:reward:CreateHITType'] :: CreateHITType -> Text

-- | The title of the HIT. A title should be short and descriptive about
--   the kind of task the HIT contains. On the Amazon Mechanical Turk web
--   site, the HIT title appears in search results, and everywhere the HIT
--   is mentioned.
[$sel:title:CreateHITType'] :: CreateHITType -> Text

-- | A general description of the HIT. A description includes detailed
--   information about the kind of task the HIT contains. On the Amazon
--   Mechanical Turk web site, the HIT description appears in the expanded
--   view of search results, and in the HIT and assignment screens. A good
--   description gives the user enough information to evaluate the HIT
--   before accepting it.
[$sel:description:CreateHITType'] :: CreateHITType -> Text

-- | Create a value of <a>CreateHITType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoApprovalDelayInSeconds:CreateHITType'</a>,
--   <a>createHITType_autoApprovalDelayInSeconds</a> - The number of
--   seconds after an assignment for the HIT has been submitted, after
--   which the assignment is considered Approved automatically unless the
--   Requester explicitly rejects it.
--   
--   <a>$sel:keywords:CreateHITType'</a>, <a>createHITType_keywords</a> -
--   One or more words or phrases that describe the HIT, separated by
--   commas. These words are used in searches to find HITs.
--   
--   <a>$sel:qualificationRequirements:CreateHITType'</a>,
--   <a>createHITType_qualificationRequirements</a> - Conditions that a
--   Worker's Qualifications must meet in order to accept the HIT. A HIT
--   can have between zero and ten Qualification requirements. All
--   requirements must be met in order for a Worker to accept the HIT.
--   Additionally, other actions can be restricted using the
--   <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
--   
--   <a>$sel:assignmentDurationInSeconds:CreateHITType'</a>,
--   <a>createHITType_assignmentDurationInSeconds</a> - The amount of time,
--   in seconds, that a Worker has to complete the HIT after accepting it.
--   If a Worker does not complete the assignment within the specified
--   duration, the assignment is considered abandoned. If the HIT is still
--   active (that is, its lifetime has not elapsed), the assignment becomes
--   available for other users to find and accept.
--   
--   <a>$sel:reward:CreateHITType'</a>, <a>createHITType_reward</a> - The
--   amount of money the Requester will pay a Worker for successfully
--   completing the HIT.
--   
--   <a>$sel:title:CreateHITType'</a>, <a>createHITType_title</a> - The
--   title of the HIT. A title should be short and descriptive about the
--   kind of task the HIT contains. On the Amazon Mechanical Turk web site,
--   the HIT title appears in search results, and everywhere the HIT is
--   mentioned.
--   
--   <a>$sel:description:CreateHITType'</a>,
--   <a>createHITType_description</a> - A general description of the HIT. A
--   description includes detailed information about the kind of task the
--   HIT contains. On the Amazon Mechanical Turk web site, the HIT
--   description appears in the expanded view of search results, and in the
--   HIT and assignment screens. A good description gives the user enough
--   information to evaluate the HIT before accepting it.
newCreateHITType :: Integer -> Text -> Text -> Text -> CreateHITType

-- | The number of seconds after an assignment for the HIT has been
--   submitted, after which the assignment is considered Approved
--   automatically unless the Requester explicitly rejects it.
createHITType_autoApprovalDelayInSeconds :: Lens' CreateHITType (Maybe Integer)

-- | One or more words or phrases that describe the HIT, separated by
--   commas. These words are used in searches to find HITs.
createHITType_keywords :: Lens' CreateHITType (Maybe Text)

-- | Conditions that a Worker's Qualifications must meet in order to accept
--   the HIT. A HIT can have between zero and ten Qualification
--   requirements. All requirements must be met in order for a Worker to
--   accept the HIT. Additionally, other actions can be restricted using
--   the <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
createHITType_qualificationRequirements :: Lens' CreateHITType (Maybe [QualificationRequirement])

-- | The amount of time, in seconds, that a Worker has to complete the HIT
--   after accepting it. If a Worker does not complete the assignment
--   within the specified duration, the assignment is considered abandoned.
--   If the HIT is still active (that is, its lifetime has not elapsed),
--   the assignment becomes available for other users to find and accept.
createHITType_assignmentDurationInSeconds :: Lens' CreateHITType Integer

-- | The amount of money the Requester will pay a Worker for successfully
--   completing the HIT.
createHITType_reward :: Lens' CreateHITType Text

-- | The title of the HIT. A title should be short and descriptive about
--   the kind of task the HIT contains. On the Amazon Mechanical Turk web
--   site, the HIT title appears in search results, and everywhere the HIT
--   is mentioned.
createHITType_title :: Lens' CreateHITType Text

-- | A general description of the HIT. A description includes detailed
--   information about the kind of task the HIT contains. On the Amazon
--   Mechanical Turk web site, the HIT description appears in the expanded
--   view of search results, and in the HIT and assignment screens. A good
--   description gives the user enough information to evaluate the HIT
--   before accepting it.
createHITType_description :: Lens' CreateHITType Text

-- | <i>See:</i> <a>newCreateHITTypeResponse</a> smart constructor.
data CreateHITTypeResponse
CreateHITTypeResponse' :: Maybe Text -> Int -> CreateHITTypeResponse

-- | The ID of the newly registered HIT type.
[$sel:hITTypeId:CreateHITTypeResponse'] :: CreateHITTypeResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:CreateHITTypeResponse'] :: CreateHITTypeResponse -> Int

-- | Create a value of <a>CreateHITTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITTypeId:CreateHITTypeResponse'</a>,
--   <a>createHITTypeResponse_hITTypeId</a> - The ID of the newly
--   registered HIT type.
--   
--   <a>$sel:httpStatus:CreateHITTypeResponse'</a>,
--   <a>createHITTypeResponse_httpStatus</a> - The response's http status
--   code.
newCreateHITTypeResponse :: Int -> CreateHITTypeResponse

-- | The ID of the newly registered HIT type.
createHITTypeResponse_hITTypeId :: Lens' CreateHITTypeResponse (Maybe Text)

-- | The response's http status code.
createHITTypeResponse_httpStatus :: Lens' CreateHITTypeResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateHITType.CreateHITType
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateHITType.CreateHITType
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateHITType.CreateHITType
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateHITType.CreateHITType
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateHITType.CreateHITTypeResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateHITType.CreateHITTypeResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateHITType.CreateHITTypeResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateHITType.CreateHITTypeResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.CreateHITType.CreateHITType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateHITType.CreateHITTypeResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.CreateHITType.CreateHITType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateHITType.CreateHITType
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.CreateHITType.CreateHITType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.CreateHITType.CreateHITType
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.CreateHITType.CreateHITType
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.CreateHITType.CreateHITType


-- | The <tt>CreateHIT</tt> operation creates a new Human Intelligence Task
--   (HIT). The new HIT is made available for Workers to find and accept on
--   the Amazon Mechanical Turk website.
--   
--   This operation allows you to specify a new HIT by passing in values
--   for the properties of the HIT, such as its title, reward amount and
--   number of assignments. When you pass these values to
--   <tt>CreateHIT</tt>, a new HIT is created for you, with a new
--   <tt>HITTypeID</tt>. The HITTypeID can be used to create additional
--   HITs in the future without needing to specify common parameters such
--   as the title, description and reward amount each time.
--   
--   An alternative way to create HITs is to first generate a HITTypeID
--   using the <tt>CreateHITType</tt> operation and then call the
--   <tt>CreateHITWithHITType</tt> operation. This is the recommended best
--   practice for Requesters who are creating large numbers of HITs.
--   
--   CreateHIT also supports several ways to provide question data: by
--   providing a value for the <tt>Question</tt> parameter that fully
--   specifies the contents of the HIT, or by providing a
--   <tt>HitLayoutId</tt> and associated <tt>HitLayoutParameters</tt>.
--   
--   If a HIT is created with 10 or more maximum assignments, there is an
--   additional fee. For more information, see <a>Amazon Mechanical Turk
--   Pricing</a>.
module Amazonka.MechanicalTurk.CreateHIT

-- | <i>See:</i> <a>newCreateHIT</a> smart constructor.
data CreateHIT
CreateHIT' :: Maybe ReviewPolicy -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe [HITLayoutParameter] -> Maybe [QualificationRequirement] -> Maybe Text -> Maybe ReviewPolicy -> Integer -> Integer -> Text -> Text -> Text -> CreateHIT

-- | The HIT-level Review Policy applies to the HIT. You can specify for
--   Mechanical Turk to take various actions based on the policy.
[$sel:hITReviewPolicy:CreateHIT'] :: CreateHIT -> Maybe ReviewPolicy

-- | A unique identifier for this request which allows you to retry the
--   call on error without creating duplicate HITs. This is useful in cases
--   such as network timeouts where it is unclear whether or not the call
--   succeeded on the server. If the HIT already exists in the system from
--   a previous call using the same UniqueRequestToken, subsequent calls
--   will return a AWS.MechanicalTurk.HitAlreadyExists error with a message
--   containing the HITId.
--   
--   Note: It is your responsibility to ensure uniqueness of the token. The
--   unique token expires after 24 hours. Subsequent calls using the same
--   UniqueRequestToken made after the 24 hour limit could create duplicate
--   HITs.
[$sel:uniqueRequestToken:CreateHIT'] :: CreateHIT -> Maybe Text

-- | The number of seconds after an assignment for the HIT has been
--   submitted, after which the assignment is considered Approved
--   automatically unless the Requester explicitly rejects it.
[$sel:autoApprovalDelayInSeconds:CreateHIT'] :: CreateHIT -> Maybe Integer

-- | An arbitrary data field. The RequesterAnnotation parameter lets your
--   application attach arbitrary data to the HIT for tracking purposes.
--   For example, this parameter could be an identifier internal to the
--   Requester's application that corresponds with the HIT.
--   
--   The RequesterAnnotation parameter for a HIT is only visible to the
--   Requester who created the HIT. It is not shown to the Worker, or any
--   other Requester.
--   
--   The RequesterAnnotation parameter may be different for each HIT you
--   submit. It does not affect how your HITs are grouped.
[$sel:requesterAnnotation:CreateHIT'] :: CreateHIT -> Maybe Text

-- | The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
[$sel:maxAssignments:CreateHIT'] :: CreateHIT -> Maybe Int

-- | One or more words or phrases that describe the HIT, separated by
--   commas. These words are used in searches to find HITs.
[$sel:keywords:CreateHIT'] :: CreateHIT -> Maybe Text

-- | The HITLayoutId allows you to use a pre-existing HIT design with
--   placeholder values and create an additional HIT by providing those
--   values as HITLayoutParameters.
--   
--   Constraints: Either a Question parameter or a HITLayoutId parameter
--   must be provided.
[$sel:hITLayoutId:CreateHIT'] :: CreateHIT -> Maybe Text

-- | If the HITLayoutId is provided, any placeholder values must be filled
--   in with values using the HITLayoutParameter structure. For more
--   information, see HITLayout.
[$sel:hITLayoutParameters:CreateHIT'] :: CreateHIT -> Maybe [HITLayoutParameter]

-- | Conditions that a Worker's Qualifications must meet in order to accept
--   the HIT. A HIT can have between zero and ten Qualification
--   requirements. All requirements must be met in order for a Worker to
--   accept the HIT. Additionally, other actions can be restricted using
--   the <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
[$sel:qualificationRequirements:CreateHIT'] :: CreateHIT -> Maybe [QualificationRequirement]

-- | The data the person completing the HIT uses to produce the results.
--   
--   Constraints: Must be a QuestionForm data structure, an
--   ExternalQuestion data structure, or an HTMLQuestion data structure.
--   The XML question data must not be larger than 64 kilobytes (65,535
--   bytes) in size, including whitespace.
--   
--   Either a Question parameter or a HITLayoutId parameter must be
--   provided.
[$sel:question:CreateHIT'] :: CreateHIT -> Maybe Text

-- | The Assignment-level Review Policy applies to the assignments under
--   the HIT. You can specify for Mechanical Turk to take various actions
--   based on the policy.
[$sel:assignmentReviewPolicy:CreateHIT'] :: CreateHIT -> Maybe ReviewPolicy

-- | An amount of time, in seconds, after which the HIT is no longer
--   available for users to accept. After the lifetime of the HIT elapses,
--   the HIT no longer appears in HIT searches, even if not all of the
--   assignments for the HIT have been accepted.
[$sel:lifetimeInSeconds:CreateHIT'] :: CreateHIT -> Integer

-- | The amount of time, in seconds, that a Worker has to complete the HIT
--   after accepting it. If a Worker does not complete the assignment
--   within the specified duration, the assignment is considered abandoned.
--   If the HIT is still active (that is, its lifetime has not elapsed),
--   the assignment becomes available for other users to find and accept.
[$sel:assignmentDurationInSeconds:CreateHIT'] :: CreateHIT -> Integer

-- | The amount of money the Requester will pay a Worker for successfully
--   completing the HIT.
[$sel:reward:CreateHIT'] :: CreateHIT -> Text

-- | The title of the HIT. A title should be short and descriptive about
--   the kind of task the HIT contains. On the Amazon Mechanical Turk web
--   site, the HIT title appears in search results, and everywhere the HIT
--   is mentioned.
[$sel:title:CreateHIT'] :: CreateHIT -> Text

-- | A general description of the HIT. A description includes detailed
--   information about the kind of task the HIT contains. On the Amazon
--   Mechanical Turk web site, the HIT description appears in the expanded
--   view of search results, and in the HIT and assignment screens. A good
--   description gives the user enough information to evaluate the HIT
--   before accepting it.
[$sel:description:CreateHIT'] :: CreateHIT -> Text

-- | Create a value of <a>CreateHIT</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITReviewPolicy:CreateHIT'</a>,
--   <a>createHIT_hITReviewPolicy</a> - The HIT-level Review Policy applies
--   to the HIT. You can specify for Mechanical Turk to take various
--   actions based on the policy.
--   
--   <a>$sel:uniqueRequestToken:CreateHIT'</a>,
--   <a>createHIT_uniqueRequestToken</a> - A unique identifier for this
--   request which allows you to retry the call on error without creating
--   duplicate HITs. This is useful in cases such as network timeouts where
--   it is unclear whether or not the call succeeded on the server. If the
--   HIT already exists in the system from a previous call using the same
--   UniqueRequestToken, subsequent calls will return a
--   AWS.MechanicalTurk.HitAlreadyExists error with a message containing
--   the HITId.
--   
--   Note: It is your responsibility to ensure uniqueness of the token. The
--   unique token expires after 24 hours. Subsequent calls using the same
--   UniqueRequestToken made after the 24 hour limit could create duplicate
--   HITs.
--   
--   <a>$sel:autoApprovalDelayInSeconds:CreateHIT'</a>,
--   <a>createHIT_autoApprovalDelayInSeconds</a> - The number of seconds
--   after an assignment for the HIT has been submitted, after which the
--   assignment is considered Approved automatically unless the Requester
--   explicitly rejects it.
--   
--   <a>$sel:requesterAnnotation:CreateHIT'</a>,
--   <a>createHIT_requesterAnnotation</a> - An arbitrary data field. The
--   RequesterAnnotation parameter lets your application attach arbitrary
--   data to the HIT for tracking purposes. For example, this parameter
--   could be an identifier internal to the Requester's application that
--   corresponds with the HIT.
--   
--   The RequesterAnnotation parameter for a HIT is only visible to the
--   Requester who created the HIT. It is not shown to the Worker, or any
--   other Requester.
--   
--   The RequesterAnnotation parameter may be different for each HIT you
--   submit. It does not affect how your HITs are grouped.
--   
--   <a>$sel:maxAssignments:CreateHIT'</a>, <a>createHIT_maxAssignments</a>
--   - The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
--   
--   <a>$sel:keywords:CreateHIT'</a>, <a>createHIT_keywords</a> - One or
--   more words or phrases that describe the HIT, separated by commas.
--   These words are used in searches to find HITs.
--   
--   <a>$sel:hITLayoutId:CreateHIT'</a>, <a>createHIT_hITLayoutId</a> - The
--   HITLayoutId allows you to use a pre-existing HIT design with
--   placeholder values and create an additional HIT by providing those
--   values as HITLayoutParameters.
--   
--   Constraints: Either a Question parameter or a HITLayoutId parameter
--   must be provided.
--   
--   <a>$sel:hITLayoutParameters:CreateHIT'</a>,
--   <a>createHIT_hITLayoutParameters</a> - If the HITLayoutId is provided,
--   any placeholder values must be filled in with values using the
--   HITLayoutParameter structure. For more information, see HITLayout.
--   
--   <a>$sel:qualificationRequirements:CreateHIT'</a>,
--   <a>createHIT_qualificationRequirements</a> - Conditions that a
--   Worker's Qualifications must meet in order to accept the HIT. A HIT
--   can have between zero and ten Qualification requirements. All
--   requirements must be met in order for a Worker to accept the HIT.
--   Additionally, other actions can be restricted using the
--   <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
--   
--   <a>$sel:question:CreateHIT'</a>, <a>createHIT_question</a> - The data
--   the person completing the HIT uses to produce the results.
--   
--   Constraints: Must be a QuestionForm data structure, an
--   ExternalQuestion data structure, or an HTMLQuestion data structure.
--   The XML question data must not be larger than 64 kilobytes (65,535
--   bytes) in size, including whitespace.
--   
--   Either a Question parameter or a HITLayoutId parameter must be
--   provided.
--   
--   <a>$sel:assignmentReviewPolicy:CreateHIT'</a>,
--   <a>createHIT_assignmentReviewPolicy</a> - The Assignment-level Review
--   Policy applies to the assignments under the HIT. You can specify for
--   Mechanical Turk to take various actions based on the policy.
--   
--   <a>$sel:lifetimeInSeconds:CreateHIT'</a>,
--   <a>createHIT_lifetimeInSeconds</a> - An amount of time, in seconds,
--   after which the HIT is no longer available for users to accept. After
--   the lifetime of the HIT elapses, the HIT no longer appears in HIT
--   searches, even if not all of the assignments for the HIT have been
--   accepted.
--   
--   <a>$sel:assignmentDurationInSeconds:CreateHIT'</a>,
--   <a>createHIT_assignmentDurationInSeconds</a> - The amount of time, in
--   seconds, that a Worker has to complete the HIT after accepting it. If
--   a Worker does not complete the assignment within the specified
--   duration, the assignment is considered abandoned. If the HIT is still
--   active (that is, its lifetime has not elapsed), the assignment becomes
--   available for other users to find and accept.
--   
--   <a>$sel:reward:CreateHIT'</a>, <a>createHIT_reward</a> - The amount of
--   money the Requester will pay a Worker for successfully completing the
--   HIT.
--   
--   <a>$sel:title:CreateHIT'</a>, <a>createHIT_title</a> - The title of
--   the HIT. A title should be short and descriptive about the kind of
--   task the HIT contains. On the Amazon Mechanical Turk web site, the HIT
--   title appears in search results, and everywhere the HIT is mentioned.
--   
--   <a>$sel:description:CreateHIT'</a>, <a>createHIT_description</a> - A
--   general description of the HIT. A description includes detailed
--   information about the kind of task the HIT contains. On the Amazon
--   Mechanical Turk web site, the HIT description appears in the expanded
--   view of search results, and in the HIT and assignment screens. A good
--   description gives the user enough information to evaluate the HIT
--   before accepting it.
newCreateHIT :: Integer -> Integer -> Text -> Text -> Text -> CreateHIT

-- | The HIT-level Review Policy applies to the HIT. You can specify for
--   Mechanical Turk to take various actions based on the policy.
createHIT_hITReviewPolicy :: Lens' CreateHIT (Maybe ReviewPolicy)

-- | A unique identifier for this request which allows you to retry the
--   call on error without creating duplicate HITs. This is useful in cases
--   such as network timeouts where it is unclear whether or not the call
--   succeeded on the server. If the HIT already exists in the system from
--   a previous call using the same UniqueRequestToken, subsequent calls
--   will return a AWS.MechanicalTurk.HitAlreadyExists error with a message
--   containing the HITId.
--   
--   Note: It is your responsibility to ensure uniqueness of the token. The
--   unique token expires after 24 hours. Subsequent calls using the same
--   UniqueRequestToken made after the 24 hour limit could create duplicate
--   HITs.
createHIT_uniqueRequestToken :: Lens' CreateHIT (Maybe Text)

-- | The number of seconds after an assignment for the HIT has been
--   submitted, after which the assignment is considered Approved
--   automatically unless the Requester explicitly rejects it.
createHIT_autoApprovalDelayInSeconds :: Lens' CreateHIT (Maybe Integer)

-- | An arbitrary data field. The RequesterAnnotation parameter lets your
--   application attach arbitrary data to the HIT for tracking purposes.
--   For example, this parameter could be an identifier internal to the
--   Requester's application that corresponds with the HIT.
--   
--   The RequesterAnnotation parameter for a HIT is only visible to the
--   Requester who created the HIT. It is not shown to the Worker, or any
--   other Requester.
--   
--   The RequesterAnnotation parameter may be different for each HIT you
--   submit. It does not affect how your HITs are grouped.
createHIT_requesterAnnotation :: Lens' CreateHIT (Maybe Text)

-- | The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
createHIT_maxAssignments :: Lens' CreateHIT (Maybe Int)

-- | One or more words or phrases that describe the HIT, separated by
--   commas. These words are used in searches to find HITs.
createHIT_keywords :: Lens' CreateHIT (Maybe Text)

-- | The HITLayoutId allows you to use a pre-existing HIT design with
--   placeholder values and create an additional HIT by providing those
--   values as HITLayoutParameters.
--   
--   Constraints: Either a Question parameter or a HITLayoutId parameter
--   must be provided.
createHIT_hITLayoutId :: Lens' CreateHIT (Maybe Text)

-- | If the HITLayoutId is provided, any placeholder values must be filled
--   in with values using the HITLayoutParameter structure. For more
--   information, see HITLayout.
createHIT_hITLayoutParameters :: Lens' CreateHIT (Maybe [HITLayoutParameter])

-- | Conditions that a Worker's Qualifications must meet in order to accept
--   the HIT. A HIT can have between zero and ten Qualification
--   requirements. All requirements must be met in order for a Worker to
--   accept the HIT. Additionally, other actions can be restricted using
--   the <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
createHIT_qualificationRequirements :: Lens' CreateHIT (Maybe [QualificationRequirement])

-- | The data the person completing the HIT uses to produce the results.
--   
--   Constraints: Must be a QuestionForm data structure, an
--   ExternalQuestion data structure, or an HTMLQuestion data structure.
--   The XML question data must not be larger than 64 kilobytes (65,535
--   bytes) in size, including whitespace.
--   
--   Either a Question parameter or a HITLayoutId parameter must be
--   provided.
createHIT_question :: Lens' CreateHIT (Maybe Text)

-- | The Assignment-level Review Policy applies to the assignments under
--   the HIT. You can specify for Mechanical Turk to take various actions
--   based on the policy.
createHIT_assignmentReviewPolicy :: Lens' CreateHIT (Maybe ReviewPolicy)

-- | An amount of time, in seconds, after which the HIT is no longer
--   available for users to accept. After the lifetime of the HIT elapses,
--   the HIT no longer appears in HIT searches, even if not all of the
--   assignments for the HIT have been accepted.
createHIT_lifetimeInSeconds :: Lens' CreateHIT Integer

-- | The amount of time, in seconds, that a Worker has to complete the HIT
--   after accepting it. If a Worker does not complete the assignment
--   within the specified duration, the assignment is considered abandoned.
--   If the HIT is still active (that is, its lifetime has not elapsed),
--   the assignment becomes available for other users to find and accept.
createHIT_assignmentDurationInSeconds :: Lens' CreateHIT Integer

-- | The amount of money the Requester will pay a Worker for successfully
--   completing the HIT.
createHIT_reward :: Lens' CreateHIT Text

-- | The title of the HIT. A title should be short and descriptive about
--   the kind of task the HIT contains. On the Amazon Mechanical Turk web
--   site, the HIT title appears in search results, and everywhere the HIT
--   is mentioned.
createHIT_title :: Lens' CreateHIT Text

-- | A general description of the HIT. A description includes detailed
--   information about the kind of task the HIT contains. On the Amazon
--   Mechanical Turk web site, the HIT description appears in the expanded
--   view of search results, and in the HIT and assignment screens. A good
--   description gives the user enough information to evaluate the HIT
--   before accepting it.
createHIT_description :: Lens' CreateHIT Text

-- | <i>See:</i> <a>newCreateHITResponse</a> smart constructor.
data CreateHITResponse
CreateHITResponse' :: Maybe HIT -> Int -> CreateHITResponse

-- | Contains the newly created HIT data. For a description of the HIT data
--   structure as it appears in responses, see the HIT Data Structure
--   documentation.
[$sel:hit:CreateHITResponse'] :: CreateHITResponse -> Maybe HIT

-- | The response's http status code.
[$sel:httpStatus:CreateHITResponse'] :: CreateHITResponse -> Int

-- | Create a value of <a>CreateHITResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hit:CreateHITResponse'</a>, <a>createHITResponse_hit</a> -
--   Contains the newly created HIT data. For a description of the HIT data
--   structure as it appears in responses, see the HIT Data Structure
--   documentation.
--   
--   <a>$sel:httpStatus:CreateHITResponse'</a>,
--   <a>createHITResponse_httpStatus</a> - The response's http status code.
newCreateHITResponse :: Int -> CreateHITResponse

-- | Contains the newly created HIT data. For a description of the HIT data
--   structure as it appears in responses, see the HIT Data Structure
--   documentation.
createHITResponse_hit :: Lens' CreateHITResponse (Maybe HIT)

-- | The response's http status code.
createHITResponse_httpStatus :: Lens' CreateHITResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateHIT.CreateHIT
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateHIT.CreateHIT
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateHIT.CreateHIT
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateHIT.CreateHIT
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateHIT.CreateHITResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateHIT.CreateHITResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateHIT.CreateHITResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateHIT.CreateHITResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.CreateHIT.CreateHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateHIT.CreateHITResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.CreateHIT.CreateHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateHIT.CreateHIT
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.CreateHIT.CreateHIT
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.CreateHIT.CreateHIT
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.CreateHIT.CreateHIT
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.CreateHIT.CreateHIT


-- | The <tt>CreateAdditionalAssignmentsForHIT</tt> operation increases the
--   maximum number of assignments of an existing HIT.
--   
--   To extend the maximum number of assignments, specify the number of
--   additional assignments.
--   
--   <ul>
--   <li>HITs created with fewer than 10 assignments cannot be extended to
--   have 10 or more assignments. Attempting to add assignments in a way
--   that brings the total number of assignments for a HIT from fewer than
--   10 assignments to 10 or more assignments will result in an
--   <tt>AWS.MechanicalTurk.InvalidMaximumAssignmentsIncrease</tt>
--   exception.</li>
--   <li>HITs that were created before July 22, 2015 cannot be extended.
--   Attempting to extend HITs that were created before July 22, 2015 will
--   result in an <tt>AWS.MechanicalTurk.HITTooOldForExtension</tt>
--   exception.</li>
--   </ul>
module Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT

-- | <i>See:</i> <a>newCreateAdditionalAssignmentsForHIT</a> smart
--   constructor.
data CreateAdditionalAssignmentsForHIT
CreateAdditionalAssignmentsForHIT' :: Maybe Text -> Text -> Int -> CreateAdditionalAssignmentsForHIT

-- | A unique identifier for this request, which allows you to retry the
--   call on error without extending the HIT multiple times. This is useful
--   in cases such as network timeouts where it is unclear whether or not
--   the call succeeded on the server. If the extend HIT already exists in
--   the system from a previous call using the same
--   <tt>UniqueRequestToken</tt>, subsequent calls will return an error
--   with a message containing the request ID.
[$sel:uniqueRequestToken:CreateAdditionalAssignmentsForHIT'] :: CreateAdditionalAssignmentsForHIT -> Maybe Text

-- | The ID of the HIT to extend.
[$sel:hITId:CreateAdditionalAssignmentsForHIT'] :: CreateAdditionalAssignmentsForHIT -> Text

-- | The number of additional assignments to request for this HIT.
[$sel:numberOfAdditionalAssignments:CreateAdditionalAssignmentsForHIT'] :: CreateAdditionalAssignmentsForHIT -> Int

-- | Create a value of <a>CreateAdditionalAssignmentsForHIT</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uniqueRequestToken:CreateAdditionalAssignmentsForHIT'</a>,
--   <a>createAdditionalAssignmentsForHIT_uniqueRequestToken</a> - A unique
--   identifier for this request, which allows you to retry the call on
--   error without extending the HIT multiple times. This is useful in
--   cases such as network timeouts where it is unclear whether or not the
--   call succeeded on the server. If the extend HIT already exists in the
--   system from a previous call using the same
--   <tt>UniqueRequestToken</tt>, subsequent calls will return an error
--   with a message containing the request ID.
--   
--   <a>$sel:hITId:CreateAdditionalAssignmentsForHIT'</a>,
--   <a>createAdditionalAssignmentsForHIT_hITId</a> - The ID of the HIT to
--   extend.
--   
--   
--   <a>$sel:numberOfAdditionalAssignments:CreateAdditionalAssignmentsForHIT'</a>,
--   <a>createAdditionalAssignmentsForHIT_numberOfAdditionalAssignments</a>
--   - The number of additional assignments to request for this HIT.
newCreateAdditionalAssignmentsForHIT :: Text -> Int -> CreateAdditionalAssignmentsForHIT

-- | A unique identifier for this request, which allows you to retry the
--   call on error without extending the HIT multiple times. This is useful
--   in cases such as network timeouts where it is unclear whether or not
--   the call succeeded on the server. If the extend HIT already exists in
--   the system from a previous call using the same
--   <tt>UniqueRequestToken</tt>, subsequent calls will return an error
--   with a message containing the request ID.
createAdditionalAssignmentsForHIT_uniqueRequestToken :: Lens' CreateAdditionalAssignmentsForHIT (Maybe Text)

-- | The ID of the HIT to extend.
createAdditionalAssignmentsForHIT_hITId :: Lens' CreateAdditionalAssignmentsForHIT Text

-- | The number of additional assignments to request for this HIT.
createAdditionalAssignmentsForHIT_numberOfAdditionalAssignments :: Lens' CreateAdditionalAssignmentsForHIT Int

-- | <i>See:</i> <a>newCreateAdditionalAssignmentsForHITResponse</a> smart
--   constructor.
data CreateAdditionalAssignmentsForHITResponse
CreateAdditionalAssignmentsForHITResponse' :: Int -> CreateAdditionalAssignmentsForHITResponse

-- | The response's http status code.
[$sel:httpStatus:CreateAdditionalAssignmentsForHITResponse'] :: CreateAdditionalAssignmentsForHITResponse -> Int

-- | Create a value of <a>CreateAdditionalAssignmentsForHITResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateAdditionalAssignmentsForHITResponse'</a>,
--   <a>createAdditionalAssignmentsForHITResponse_httpStatus</a> - The
--   response's http status code.
newCreateAdditionalAssignmentsForHITResponse :: Int -> CreateAdditionalAssignmentsForHITResponse

-- | The response's http status code.
createAdditionalAssignmentsForHITResponse_httpStatus :: Lens' CreateAdditionalAssignmentsForHITResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHIT
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHIT
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHIT
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHIT
instance GHC.Generics.Generic Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHITResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHITResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHITResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHITResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHITResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHIT
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHIT
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHIT
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHIT
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.CreateAdditionalAssignmentsForHIT.CreateAdditionalAssignmentsForHIT


-- | The <tt>AssociateQualificationWithWorker</tt> operation gives a Worker
--   a Qualification. <tt>AssociateQualificationWithWorker</tt> does not
--   require that the Worker submit a Qualification request. It gives the
--   Qualification directly to the Worker.
--   
--   You can only assign a Qualification of a Qualification type that you
--   created (using the <tt>CreateQualificationType</tt> operation).
--   
--   Note: <tt>AssociateQualificationWithWorker</tt> does not affect any
--   pending Qualification requests for the Qualification by the Worker. If
--   you assign a Qualification to a Worker, then later grant a
--   Qualification request made by the Worker, the granting of the request
--   may modify the Qualification score. To resolve a pending Qualification
--   request without affecting the Qualification the Worker already has,
--   reject the request with the <tt>RejectQualificationRequest</tt>
--   operation.
module Amazonka.MechanicalTurk.AssociateQualificationWithWorker

-- | <i>See:</i> <a>newAssociateQualificationWithWorker</a> smart
--   constructor.
data AssociateQualificationWithWorker
AssociateQualificationWithWorker' :: Maybe Int -> Maybe Bool -> Text -> Text -> AssociateQualificationWithWorker

-- | The value of the Qualification to assign.
[$sel:integerValue:AssociateQualificationWithWorker'] :: AssociateQualificationWithWorker -> Maybe Int

-- | Specifies whether to send a notification email message to the Worker
--   saying that the qualification was assigned to the Worker. Note: this
--   is true by default.
[$sel:sendNotification:AssociateQualificationWithWorker'] :: AssociateQualificationWithWorker -> Maybe Bool

-- | The ID of the Qualification type to use for the assigned
--   Qualification.
[$sel:qualificationTypeId:AssociateQualificationWithWorker'] :: AssociateQualificationWithWorker -> Text

-- | The ID of the Worker to whom the Qualification is being assigned.
--   Worker IDs are included with submitted HIT assignments and
--   Qualification requests.
[$sel:workerId:AssociateQualificationWithWorker'] :: AssociateQualificationWithWorker -> Text

-- | Create a value of <a>AssociateQualificationWithWorker</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerValue:AssociateQualificationWithWorker'</a>,
--   <a>associateQualificationWithWorker_integerValue</a> - The value of
--   the Qualification to assign.
--   
--   <a>$sel:sendNotification:AssociateQualificationWithWorker'</a>,
--   <a>associateQualificationWithWorker_sendNotification</a> - Specifies
--   whether to send a notification email message to the Worker saying that
--   the qualification was assigned to the Worker. Note: this is true by
--   default.
--   
--   <a>$sel:qualificationTypeId:AssociateQualificationWithWorker'</a>,
--   <a>associateQualificationWithWorker_qualificationTypeId</a> - The ID
--   of the Qualification type to use for the assigned Qualification.
--   
--   <a>$sel:workerId:AssociateQualificationWithWorker'</a>,
--   <a>associateQualificationWithWorker_workerId</a> - The ID of the
--   Worker to whom the Qualification is being assigned. Worker IDs are
--   included with submitted HIT assignments and Qualification requests.
newAssociateQualificationWithWorker :: Text -> Text -> AssociateQualificationWithWorker

-- | The value of the Qualification to assign.
associateQualificationWithWorker_integerValue :: Lens' AssociateQualificationWithWorker (Maybe Int)

-- | Specifies whether to send a notification email message to the Worker
--   saying that the qualification was assigned to the Worker. Note: this
--   is true by default.
associateQualificationWithWorker_sendNotification :: Lens' AssociateQualificationWithWorker (Maybe Bool)

-- | The ID of the Qualification type to use for the assigned
--   Qualification.
associateQualificationWithWorker_qualificationTypeId :: Lens' AssociateQualificationWithWorker Text

-- | The ID of the Worker to whom the Qualification is being assigned.
--   Worker IDs are included with submitted HIT assignments and
--   Qualification requests.
associateQualificationWithWorker_workerId :: Lens' AssociateQualificationWithWorker Text

-- | <i>See:</i> <a>newAssociateQualificationWithWorkerResponse</a> smart
--   constructor.
data AssociateQualificationWithWorkerResponse
AssociateQualificationWithWorkerResponse' :: Int -> AssociateQualificationWithWorkerResponse

-- | The response's http status code.
[$sel:httpStatus:AssociateQualificationWithWorkerResponse'] :: AssociateQualificationWithWorkerResponse -> Int

-- | Create a value of <a>AssociateQualificationWithWorkerResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateQualificationWithWorkerResponse'</a>,
--   <a>associateQualificationWithWorkerResponse_httpStatus</a> - The
--   response's http status code.
newAssociateQualificationWithWorkerResponse :: Int -> AssociateQualificationWithWorkerResponse

-- | The response's http status code.
associateQualificationWithWorkerResponse_httpStatus :: Lens' AssociateQualificationWithWorkerResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorker
instance GHC.Show.Show Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorker
instance GHC.Read.Read Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorker
instance GHC.Classes.Eq Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorker
instance GHC.Generics.Generic Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorkerResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorkerResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorkerResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorkerResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorker
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorkerResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorker
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorker
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorker
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorker
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorker
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.AssociateQualificationWithWorker.AssociateQualificationWithWorker


-- | The <tt>ApproveAssignment</tt> operation approves the results of a
--   completed assignment.
--   
--   Approving an assignment initiates two payments from the Requester's
--   Amazon.com account
--   
--   <ul>
--   <li>The Worker who submitted the results is paid the reward specified
--   in the HIT.</li>
--   <li>Amazon Mechanical Turk fees are debited.</li>
--   </ul>
--   
--   If the Requester's account does not have adequate funds for these
--   payments, the call to ApproveAssignment returns an exception, and the
--   approval is not processed. You can include an optional feedback
--   message with the approval, which the Worker can see in the Status
--   section of the web site.
--   
--   You can also call this operation for assignments that were previous
--   rejected and approve them by explicitly overriding the previous
--   rejection. This only works on rejected assignments that were submitted
--   within the previous 30 days and only if the assignment's related HIT
--   has not been deleted.
module Amazonka.MechanicalTurk.ApproveAssignment

-- | <i>See:</i> <a>newApproveAssignment</a> smart constructor.
data ApproveAssignment
ApproveAssignment' :: Maybe Bool -> Maybe Text -> Text -> ApproveAssignment

-- | A flag indicating that an assignment should be approved even if it was
--   previously rejected. Defaults to <tt>False</tt>.
[$sel:overrideRejection:ApproveAssignment'] :: ApproveAssignment -> Maybe Bool

-- | A message for the Worker, which the Worker can see in the Status
--   section of the web site.
[$sel:requesterFeedback:ApproveAssignment'] :: ApproveAssignment -> Maybe Text

-- | The ID of the assignment. The assignment must correspond to a HIT
--   created by the Requester.
[$sel:assignmentId:ApproveAssignment'] :: ApproveAssignment -> Text

-- | Create a value of <a>ApproveAssignment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:overrideRejection:ApproveAssignment'</a>,
--   <a>approveAssignment_overrideRejection</a> - A flag indicating that an
--   assignment should be approved even if it was previously rejected.
--   Defaults to <tt>False</tt>.
--   
--   <a>$sel:requesterFeedback:ApproveAssignment'</a>,
--   <a>approveAssignment_requesterFeedback</a> - A message for the Worker,
--   which the Worker can see in the Status section of the web site.
--   
--   <a>$sel:assignmentId:ApproveAssignment'</a>,
--   <a>approveAssignment_assignmentId</a> - The ID of the assignment. The
--   assignment must correspond to a HIT created by the Requester.
newApproveAssignment :: Text -> ApproveAssignment

-- | A flag indicating that an assignment should be approved even if it was
--   previously rejected. Defaults to <tt>False</tt>.
approveAssignment_overrideRejection :: Lens' ApproveAssignment (Maybe Bool)

-- | A message for the Worker, which the Worker can see in the Status
--   section of the web site.
approveAssignment_requesterFeedback :: Lens' ApproveAssignment (Maybe Text)

-- | The ID of the assignment. The assignment must correspond to a HIT
--   created by the Requester.
approveAssignment_assignmentId :: Lens' ApproveAssignment Text

-- | <i>See:</i> <a>newApproveAssignmentResponse</a> smart constructor.
data ApproveAssignmentResponse
ApproveAssignmentResponse' :: Int -> ApproveAssignmentResponse

-- | The response's http status code.
[$sel:httpStatus:ApproveAssignmentResponse'] :: ApproveAssignmentResponse -> Int

-- | Create a value of <a>ApproveAssignmentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ApproveAssignmentResponse'</a>,
--   <a>approveAssignmentResponse_httpStatus</a> - The response's http
--   status code.
newApproveAssignmentResponse :: Int -> ApproveAssignmentResponse

-- | The response's http status code.
approveAssignmentResponse_httpStatus :: Lens' ApproveAssignmentResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignment
instance GHC.Show.Show Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignment
instance GHC.Read.Read Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignment
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignment
instance GHC.Generics.Generic Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignmentResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignmentResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignmentResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignmentResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignment
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignmentResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignment
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignment
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignment
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignment
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignment
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.ApproveAssignment.ApproveAssignment


-- | The <tt>AcceptQualificationRequest</tt> operation approves a Worker's
--   request for a Qualification.
--   
--   Only the owner of the Qualification type can grant a Qualification
--   request for that type.
--   
--   A successful request for the <tt>AcceptQualificationRequest</tt>
--   operation returns with no errors and an empty body.
module Amazonka.MechanicalTurk.AcceptQualificationRequest

-- | <i>See:</i> <a>newAcceptQualificationRequest</a> smart constructor.
data AcceptQualificationRequest
AcceptQualificationRequest' :: Maybe Int -> Text -> AcceptQualificationRequest

-- | The value of the Qualification. You can omit this value if you are
--   using the presence or absence of the Qualification as the basis for a
--   HIT requirement.
[$sel:integerValue:AcceptQualificationRequest'] :: AcceptQualificationRequest -> Maybe Int

-- | The ID of the Qualification request, as returned by the
--   <tt>GetQualificationRequests</tt> operation.
[$sel:qualificationRequestId:AcceptQualificationRequest'] :: AcceptQualificationRequest -> Text

-- | Create a value of <a>AcceptQualificationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerValue:AcceptQualificationRequest'</a>,
--   <a>acceptQualificationRequest_integerValue</a> - The value of the
--   Qualification. You can omit this value if you are using the presence
--   or absence of the Qualification as the basis for a HIT requirement.
--   
--   <a>$sel:qualificationRequestId:AcceptQualificationRequest'</a>,
--   <a>acceptQualificationRequest_qualificationRequestId</a> - The ID of
--   the Qualification request, as returned by the
--   <tt>GetQualificationRequests</tt> operation.
newAcceptQualificationRequest :: Text -> AcceptQualificationRequest

-- | The value of the Qualification. You can omit this value if you are
--   using the presence or absence of the Qualification as the basis for a
--   HIT requirement.
acceptQualificationRequest_integerValue :: Lens' AcceptQualificationRequest (Maybe Int)

-- | The ID of the Qualification request, as returned by the
--   <tt>GetQualificationRequests</tt> operation.
acceptQualificationRequest_qualificationRequestId :: Lens' AcceptQualificationRequest Text

-- | <i>See:</i> <a>newAcceptQualificationRequestResponse</a> smart
--   constructor.
data AcceptQualificationRequestResponse
AcceptQualificationRequestResponse' :: Int -> AcceptQualificationRequestResponse

-- | The response's http status code.
[$sel:httpStatus:AcceptQualificationRequestResponse'] :: AcceptQualificationRequestResponse -> Int

-- | Create a value of <a>AcceptQualificationRequestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AcceptQualificationRequestResponse'</a>,
--   <a>acceptQualificationRequestResponse_httpStatus</a> - The response's
--   http status code.
newAcceptQualificationRequestResponse :: Int -> AcceptQualificationRequestResponse

-- | The response's http status code.
acceptQualificationRequestResponse_httpStatus :: Lens' AcceptQualificationRequestResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequest
instance GHC.Show.Show Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequest
instance GHC.Read.Read Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequest
instance GHC.Classes.Eq Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequest
instance GHC.Generics.Generic Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequestResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequestResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequestResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequestResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequest
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequestResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequest
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequest
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequest
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequest
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequest
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.AcceptQualificationRequest.AcceptQualificationRequest


-- | The <tt>UpdateExpirationForHIT</tt> operation allows you update the
--   expiration time of a HIT. If you update it to a time in the past, the
--   HIT will be immediately expired.
module Amazonka.MechanicalTurk.UpdateExpirationForHIT

-- | <i>See:</i> <a>newUpdateExpirationForHIT</a> smart constructor.
data UpdateExpirationForHIT
UpdateExpirationForHIT' :: Text -> POSIX -> UpdateExpirationForHIT

-- | The HIT to update.
[$sel:hITId:UpdateExpirationForHIT'] :: UpdateExpirationForHIT -> Text

-- | The date and time at which you want the HIT to expire
[$sel:expireAt:UpdateExpirationForHIT'] :: UpdateExpirationForHIT -> POSIX

-- | Create a value of <a>UpdateExpirationForHIT</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITId:UpdateExpirationForHIT'</a>,
--   <a>updateExpirationForHIT_hITId</a> - The HIT to update.
--   
--   <a>$sel:expireAt:UpdateExpirationForHIT'</a>,
--   <a>updateExpirationForHIT_expireAt</a> - The date and time at which
--   you want the HIT to expire
newUpdateExpirationForHIT :: Text -> UTCTime -> UpdateExpirationForHIT

-- | The HIT to update.
updateExpirationForHIT_hITId :: Lens' UpdateExpirationForHIT Text

-- | The date and time at which you want the HIT to expire
updateExpirationForHIT_expireAt :: Lens' UpdateExpirationForHIT UTCTime

-- | <i>See:</i> <a>newUpdateExpirationForHITResponse</a> smart
--   constructor.
data UpdateExpirationForHITResponse
UpdateExpirationForHITResponse' :: Int -> UpdateExpirationForHITResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateExpirationForHITResponse'] :: UpdateExpirationForHITResponse -> Int

-- | Create a value of <a>UpdateExpirationForHITResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateExpirationForHITResponse'</a>,
--   <a>updateExpirationForHITResponse_httpStatus</a> - The response's http
--   status code.
newUpdateExpirationForHITResponse :: Int -> UpdateExpirationForHITResponse

-- | The response's http status code.
updateExpirationForHITResponse_httpStatus :: Lens' UpdateExpirationForHITResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHIT
instance GHC.Show.Show Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHIT
instance GHC.Read.Read Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHIT
instance GHC.Classes.Eq Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHIT
instance GHC.Generics.Generic Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHITResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHITResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHITResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHITResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHITResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHIT
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHIT
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHIT
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHIT
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.UpdateExpirationForHIT.UpdateExpirationForHIT


-- | The <tt>UpdateHITReviewStatus</tt> operation updates the status of a
--   HIT. If the status is Reviewable, this operation can update the status
--   to Reviewing, or it can revert a Reviewing HIT back to the Reviewable
--   status.
module Amazonka.MechanicalTurk.UpdateHITReviewStatus

-- | <i>See:</i> <a>newUpdateHITReviewStatus</a> smart constructor.
data UpdateHITReviewStatus
UpdateHITReviewStatus' :: Maybe Bool -> Text -> UpdateHITReviewStatus

-- | Specifies how to update the HIT status. Default is <tt>False</tt>.
--   
--   <ul>
--   <li>Setting this to false will only transition a HIT from
--   <tt>Reviewable</tt> to <tt>Reviewing</tt></li>
--   <li>Setting this to true will only transition a HIT from
--   <tt>Reviewing</tt> to <tt>Reviewable</tt></li>
--   </ul>
[$sel:revert:UpdateHITReviewStatus'] :: UpdateHITReviewStatus -> Maybe Bool

-- | The ID of the HIT to update.
[$sel:hITId:UpdateHITReviewStatus'] :: UpdateHITReviewStatus -> Text

-- | Create a value of <a>UpdateHITReviewStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revert:UpdateHITReviewStatus'</a>,
--   <a>updateHITReviewStatus_revert</a> - Specifies how to update the HIT
--   status. Default is <tt>False</tt>.
--   
--   <ul>
--   <li>Setting this to false will only transition a HIT from
--   <tt>Reviewable</tt> to <tt>Reviewing</tt></li>
--   <li>Setting this to true will only transition a HIT from
--   <tt>Reviewing</tt> to <tt>Reviewable</tt></li>
--   </ul>
--   
--   <a>$sel:hITId:UpdateHITReviewStatus'</a>,
--   <a>updateHITReviewStatus_hITId</a> - The ID of the HIT to update.
newUpdateHITReviewStatus :: Text -> UpdateHITReviewStatus

-- | Specifies how to update the HIT status. Default is <tt>False</tt>.
--   
--   <ul>
--   <li>Setting this to false will only transition a HIT from
--   <tt>Reviewable</tt> to <tt>Reviewing</tt></li>
--   <li>Setting this to true will only transition a HIT from
--   <tt>Reviewing</tt> to <tt>Reviewable</tt></li>
--   </ul>
updateHITReviewStatus_revert :: Lens' UpdateHITReviewStatus (Maybe Bool)

-- | The ID of the HIT to update.
updateHITReviewStatus_hITId :: Lens' UpdateHITReviewStatus Text

-- | <i>See:</i> <a>newUpdateHITReviewStatusResponse</a> smart constructor.
data UpdateHITReviewStatusResponse
UpdateHITReviewStatusResponse' :: Int -> UpdateHITReviewStatusResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateHITReviewStatusResponse'] :: UpdateHITReviewStatusResponse -> Int

-- | Create a value of <a>UpdateHITReviewStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateHITReviewStatusResponse'</a>,
--   <a>updateHITReviewStatusResponse_httpStatus</a> - The response's http
--   status code.
newUpdateHITReviewStatusResponse :: Int -> UpdateHITReviewStatusResponse

-- | The response's http status code.
updateHITReviewStatusResponse_httpStatus :: Lens' UpdateHITReviewStatusResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatus
instance GHC.Show.Show Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatus
instance GHC.Read.Read Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatus
instance GHC.Classes.Eq Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatus
instance GHC.Generics.Generic Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatusResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatusResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatusResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatusResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatusResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatus
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatus
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatus
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatus
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatus
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.UpdateHITReviewStatus.UpdateHITReviewStatus


-- | The <tt>UpdateHITTypeOfHIT</tt> operation allows you to change the
--   HITType properties of a HIT. This operation disassociates the HIT from
--   its old HITType properties and associates it with the new HITType
--   properties. The HIT takes on the properties of the new HITType in
--   place of the old ones.
module Amazonka.MechanicalTurk.UpdateHITTypeOfHIT

-- | <i>See:</i> <a>newUpdateHITTypeOfHIT</a> smart constructor.
data UpdateHITTypeOfHIT
UpdateHITTypeOfHIT' :: Text -> Text -> UpdateHITTypeOfHIT

-- | The HIT to update.
[$sel:hITId:UpdateHITTypeOfHIT'] :: UpdateHITTypeOfHIT -> Text

-- | The ID of the new HIT type.
[$sel:hITTypeId:UpdateHITTypeOfHIT'] :: UpdateHITTypeOfHIT -> Text

-- | Create a value of <a>UpdateHITTypeOfHIT</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITId:UpdateHITTypeOfHIT'</a>, <a>updateHITTypeOfHIT_hITId</a>
--   - The HIT to update.
--   
--   <a>$sel:hITTypeId:UpdateHITTypeOfHIT'</a>,
--   <a>updateHITTypeOfHIT_hITTypeId</a> - The ID of the new HIT type.
newUpdateHITTypeOfHIT :: Text -> Text -> UpdateHITTypeOfHIT

-- | The HIT to update.
updateHITTypeOfHIT_hITId :: Lens' UpdateHITTypeOfHIT Text

-- | The ID of the new HIT type.
updateHITTypeOfHIT_hITTypeId :: Lens' UpdateHITTypeOfHIT Text

-- | <i>See:</i> <a>newUpdateHITTypeOfHITResponse</a> smart constructor.
data UpdateHITTypeOfHITResponse
UpdateHITTypeOfHITResponse' :: Int -> UpdateHITTypeOfHITResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateHITTypeOfHITResponse'] :: UpdateHITTypeOfHITResponse -> Int

-- | Create a value of <a>UpdateHITTypeOfHITResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateHITTypeOfHITResponse'</a>,
--   <a>updateHITTypeOfHITResponse_httpStatus</a> - The response's http
--   status code.
newUpdateHITTypeOfHITResponse :: Int -> UpdateHITTypeOfHITResponse

-- | The response's http status code.
updateHITTypeOfHITResponse_httpStatus :: Lens' UpdateHITTypeOfHITResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHIT
instance GHC.Show.Show Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHIT
instance GHC.Read.Read Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHIT
instance GHC.Classes.Eq Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHIT
instance GHC.Generics.Generic Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHITResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHITResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHITResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHITResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHITResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHIT
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHIT
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHIT
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHIT
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHIT
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.UpdateHITTypeOfHIT.UpdateHITTypeOfHIT


-- | The <tt>UpdateNotificationSettings</tt> operation creates, updates,
--   disables or re-enables notifications for a HIT type. If you call the
--   UpdateNotificationSettings operation for a HIT type that already has a
--   notification specification, the operation replaces the old
--   specification with a new one. You can call the
--   UpdateNotificationSettings operation to enable or disable
--   notifications for the HIT type, without having to modify the
--   notification specification itself by providing updates to the Active
--   status without specifying a new notification specification. To change
--   the Active status of a HIT type's notifications, the HIT type must
--   already have a notification specification, or one must be provided in
--   the same call to <tt>UpdateNotificationSettings</tt>.
module Amazonka.MechanicalTurk.UpdateNotificationSettings

-- | <i>See:</i> <a>newUpdateNotificationSettings</a> smart constructor.
data UpdateNotificationSettings
UpdateNotificationSettings' :: Maybe NotificationSpecification -> Maybe Bool -> Text -> UpdateNotificationSettings

-- | The notification specification for the HIT type.
[$sel:notification:UpdateNotificationSettings'] :: UpdateNotificationSettings -> Maybe NotificationSpecification

-- | Specifies whether notifications are sent for HITs of this HIT type,
--   according to the notification specification. You must specify either
--   the Notification parameter or the Active parameter for the call to
--   UpdateNotificationSettings to succeed.
[$sel:active:UpdateNotificationSettings'] :: UpdateNotificationSettings -> Maybe Bool

-- | The ID of the HIT type whose notification specification is being
--   updated.
[$sel:hITTypeId:UpdateNotificationSettings'] :: UpdateNotificationSettings -> Text

-- | Create a value of <a>UpdateNotificationSettings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notification:UpdateNotificationSettings'</a>,
--   <a>updateNotificationSettings_notification</a> - The notification
--   specification for the HIT type.
--   
--   <a>$sel:active:UpdateNotificationSettings'</a>,
--   <a>updateNotificationSettings_active</a> - Specifies whether
--   notifications are sent for HITs of this HIT type, according to the
--   notification specification. You must specify either the Notification
--   parameter or the Active parameter for the call to
--   UpdateNotificationSettings to succeed.
--   
--   <a>$sel:hITTypeId:UpdateNotificationSettings'</a>,
--   <a>updateNotificationSettings_hITTypeId</a> - The ID of the HIT type
--   whose notification specification is being updated.
newUpdateNotificationSettings :: Text -> UpdateNotificationSettings

-- | The notification specification for the HIT type.
updateNotificationSettings_notification :: Lens' UpdateNotificationSettings (Maybe NotificationSpecification)

-- | Specifies whether notifications are sent for HITs of this HIT type,
--   according to the notification specification. You must specify either
--   the Notification parameter or the Active parameter for the call to
--   UpdateNotificationSettings to succeed.
updateNotificationSettings_active :: Lens' UpdateNotificationSettings (Maybe Bool)

-- | The ID of the HIT type whose notification specification is being
--   updated.
updateNotificationSettings_hITTypeId :: Lens' UpdateNotificationSettings Text

-- | <i>See:</i> <a>newUpdateNotificationSettingsResponse</a> smart
--   constructor.
data UpdateNotificationSettingsResponse
UpdateNotificationSettingsResponse' :: Int -> UpdateNotificationSettingsResponse

-- | The response's http status code.
[$sel:httpStatus:UpdateNotificationSettingsResponse'] :: UpdateNotificationSettingsResponse -> Int

-- | Create a value of <a>UpdateNotificationSettingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateNotificationSettingsResponse'</a>,
--   <a>updateNotificationSettingsResponse_httpStatus</a> - The response's
--   http status code.
newUpdateNotificationSettingsResponse :: Int -> UpdateNotificationSettingsResponse

-- | The response's http status code.
updateNotificationSettingsResponse_httpStatus :: Lens' UpdateNotificationSettingsResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettings
instance GHC.Show.Show Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettings
instance GHC.Read.Read Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettings
instance GHC.Classes.Eq Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettings
instance GHC.Generics.Generic Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettingsResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettingsResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettingsResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettingsResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettings
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettingsResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettings
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettings
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettings
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettings
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettings
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.UpdateNotificationSettings.UpdateNotificationSettings


-- | The <tt>UpdateQualificationType</tt> operation modifies the attributes
--   of an existing Qualification type, which is represented by a
--   QualificationType data structure. Only the owner of a Qualification
--   type can modify its attributes.
--   
--   Most attributes of a Qualification type can be changed after the type
--   has been created. However, the Name and Keywords fields cannot be
--   modified. The RetryDelayInSeconds parameter can be modified or added
--   to change the delay or to enable retries, but RetryDelayInSeconds
--   cannot be used to disable retries.
--   
--   You can use this operation to update the test for a Qualification
--   type. The test is updated based on the values specified for the Test,
--   TestDurationInSeconds and AnswerKey parameters. All three parameters
--   specify the updated test. If you are updating the test for a type, you
--   must specify the Test and TestDurationInSeconds parameters. The
--   AnswerKey parameter is optional; omitting it specifies that the
--   updated test does not have an answer key.
--   
--   If you omit the Test parameter, the test for the Qualification type is
--   unchanged. There is no way to remove a test from a Qualification type
--   that has one. If the type already has a test, you cannot update it to
--   be AutoGranted. If the Qualification type does not have a test and one
--   is provided by an update, the type will henceforth have a test.
--   
--   If you want to update the test duration or answer key for an existing
--   test without changing the questions, you must specify a Test parameter
--   with the original questions, along with the updated values.
--   
--   If you provide an updated Test but no AnswerKey, the new test will not
--   have an answer key. Requests for such Qualifications must be granted
--   manually.
--   
--   You can also update the AutoGranted and AutoGrantedValue attributes of
--   the Qualification type.
module Amazonka.MechanicalTurk.UpdateQualificationType

-- | <i>See:</i> <a>newUpdateQualificationType</a> smart constructor.
data UpdateQualificationType
UpdateQualificationType' :: Maybe Integer -> Maybe QualificationTypeStatus -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Text -> Maybe Integer -> Text -> UpdateQualificationType

-- | The number of seconds the Worker has to complete the Qualification
--   test, starting from the time the Worker requests the Qualification.
[$sel:testDurationInSeconds:UpdateQualificationType'] :: UpdateQualificationType -> Maybe Integer

-- | The new status of the Qualification type - Active | Inactive
[$sel:qualificationTypeStatus:UpdateQualificationType'] :: UpdateQualificationType -> Maybe QualificationTypeStatus

-- | The answers to the Qualification test specified in the Test parameter,
--   in the form of an AnswerKey data structure.
[$sel:answerKey:UpdateQualificationType'] :: UpdateQualificationType -> Maybe Text

-- | The questions for the Qualification test a Worker must answer
--   correctly to obtain a Qualification of this type. If this parameter is
--   specified, <tt>TestDurationInSeconds</tt> must also be specified.
--   
--   Constraints: Must not be longer than 65535 bytes. Must be a
--   QuestionForm data structure. This parameter cannot be specified if
--   AutoGranted is true.
--   
--   Constraints: None. If not specified, the Worker may request the
--   Qualification without answering any questions.
[$sel:test:UpdateQualificationType'] :: UpdateQualificationType -> Maybe Text

-- | Specifies whether requests for the Qualification type are granted
--   immediately, without prompting the Worker with a Qualification test.
--   
--   Constraints: If the Test parameter is specified, this parameter cannot
--   be true.
[$sel:autoGranted:UpdateQualificationType'] :: UpdateQualificationType -> Maybe Bool

-- | The Qualification value to use for automatically granted
--   Qualifications. This parameter is used only if the AutoGranted
--   parameter is true.
[$sel:autoGrantedValue:UpdateQualificationType'] :: UpdateQualificationType -> Maybe Int

-- | The new description of the Qualification type.
[$sel:description:UpdateQualificationType'] :: UpdateQualificationType -> Maybe Text

-- | The amount of time, in seconds, that Workers must wait after
--   requesting a Qualification of the specified Qualification type before
--   they can retry the Qualification request. It is not possible to
--   disable retries for a Qualification type after it has been created
--   with retries enabled. If you want to disable retries, you must dispose
--   of the existing retry-enabled Qualification type using
--   DisposeQualificationType and then create a new Qualification type with
--   retries disabled using CreateQualificationType.
[$sel:retryDelayInSeconds:UpdateQualificationType'] :: UpdateQualificationType -> Maybe Integer

-- | The ID of the Qualification type to update.
[$sel:qualificationTypeId:UpdateQualificationType'] :: UpdateQualificationType -> Text

-- | Create a value of <a>UpdateQualificationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testDurationInSeconds:UpdateQualificationType'</a>,
--   <a>updateQualificationType_testDurationInSeconds</a> - The number of
--   seconds the Worker has to complete the Qualification test, starting
--   from the time the Worker requests the Qualification.
--   
--   <a>$sel:qualificationTypeStatus:UpdateQualificationType'</a>,
--   <a>updateQualificationType_qualificationTypeStatus</a> - The new
--   status of the Qualification type - Active | Inactive
--   
--   <a>$sel:answerKey:UpdateQualificationType'</a>,
--   <a>updateQualificationType_answerKey</a> - The answers to the
--   Qualification test specified in the Test parameter, in the form of an
--   AnswerKey data structure.
--   
--   <a>$sel:test:UpdateQualificationType'</a>,
--   <a>updateQualificationType_test</a> - The questions for the
--   Qualification test a Worker must answer correctly to obtain a
--   Qualification of this type. If this parameter is specified,
--   <tt>TestDurationInSeconds</tt> must also be specified.
--   
--   Constraints: Must not be longer than 65535 bytes. Must be a
--   QuestionForm data structure. This parameter cannot be specified if
--   AutoGranted is true.
--   
--   Constraints: None. If not specified, the Worker may request the
--   Qualification without answering any questions.
--   
--   <a>$sel:autoGranted:UpdateQualificationType'</a>,
--   <a>updateQualificationType_autoGranted</a> - Specifies whether
--   requests for the Qualification type are granted immediately, without
--   prompting the Worker with a Qualification test.
--   
--   Constraints: If the Test parameter is specified, this parameter cannot
--   be true.
--   
--   <a>$sel:autoGrantedValue:UpdateQualificationType'</a>,
--   <a>updateQualificationType_autoGrantedValue</a> - The Qualification
--   value to use for automatically granted Qualifications. This parameter
--   is used only if the AutoGranted parameter is true.
--   
--   <a>$sel:description:UpdateQualificationType'</a>,
--   <a>updateQualificationType_description</a> - The new description of
--   the Qualification type.
--   
--   <a>$sel:retryDelayInSeconds:UpdateQualificationType'</a>,
--   <a>updateQualificationType_retryDelayInSeconds</a> - The amount of
--   time, in seconds, that Workers must wait after requesting a
--   Qualification of the specified Qualification type before they can
--   retry the Qualification request. It is not possible to disable retries
--   for a Qualification type after it has been created with retries
--   enabled. If you want to disable retries, you must dispose of the
--   existing retry-enabled Qualification type using
--   DisposeQualificationType and then create a new Qualification type with
--   retries disabled using CreateQualificationType.
--   
--   <a>$sel:qualificationTypeId:UpdateQualificationType'</a>,
--   <a>updateQualificationType_qualificationTypeId</a> - The ID of the
--   Qualification type to update.
newUpdateQualificationType :: Text -> UpdateQualificationType

-- | The number of seconds the Worker has to complete the Qualification
--   test, starting from the time the Worker requests the Qualification.
updateQualificationType_testDurationInSeconds :: Lens' UpdateQualificationType (Maybe Integer)

-- | The new status of the Qualification type - Active | Inactive
updateQualificationType_qualificationTypeStatus :: Lens' UpdateQualificationType (Maybe QualificationTypeStatus)

-- | The answers to the Qualification test specified in the Test parameter,
--   in the form of an AnswerKey data structure.
updateQualificationType_answerKey :: Lens' UpdateQualificationType (Maybe Text)

-- | The questions for the Qualification test a Worker must answer
--   correctly to obtain a Qualification of this type. If this parameter is
--   specified, <tt>TestDurationInSeconds</tt> must also be specified.
--   
--   Constraints: Must not be longer than 65535 bytes. Must be a
--   QuestionForm data structure. This parameter cannot be specified if
--   AutoGranted is true.
--   
--   Constraints: None. If not specified, the Worker may request the
--   Qualification without answering any questions.
updateQualificationType_test :: Lens' UpdateQualificationType (Maybe Text)

-- | Specifies whether requests for the Qualification type are granted
--   immediately, without prompting the Worker with a Qualification test.
--   
--   Constraints: If the Test parameter is specified, this parameter cannot
--   be true.
updateQualificationType_autoGranted :: Lens' UpdateQualificationType (Maybe Bool)

-- | The Qualification value to use for automatically granted
--   Qualifications. This parameter is used only if the AutoGranted
--   parameter is true.
updateQualificationType_autoGrantedValue :: Lens' UpdateQualificationType (Maybe Int)

-- | The new description of the Qualification type.
updateQualificationType_description :: Lens' UpdateQualificationType (Maybe Text)

-- | The amount of time, in seconds, that Workers must wait after
--   requesting a Qualification of the specified Qualification type before
--   they can retry the Qualification request. It is not possible to
--   disable retries for a Qualification type after it has been created
--   with retries enabled. If you want to disable retries, you must dispose
--   of the existing retry-enabled Qualification type using
--   DisposeQualificationType and then create a new Qualification type with
--   retries disabled using CreateQualificationType.
updateQualificationType_retryDelayInSeconds :: Lens' UpdateQualificationType (Maybe Integer)

-- | The ID of the Qualification type to update.
updateQualificationType_qualificationTypeId :: Lens' UpdateQualificationType Text

-- | <i>See:</i> <a>newUpdateQualificationTypeResponse</a> smart
--   constructor.
data UpdateQualificationTypeResponse
UpdateQualificationTypeResponse' :: Maybe QualificationType -> Int -> UpdateQualificationTypeResponse

-- | Contains a QualificationType data structure.
[$sel:qualificationType:UpdateQualificationTypeResponse'] :: UpdateQualificationTypeResponse -> Maybe QualificationType

-- | The response's http status code.
[$sel:httpStatus:UpdateQualificationTypeResponse'] :: UpdateQualificationTypeResponse -> Int

-- | Create a value of <a>UpdateQualificationTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationType:UpdateQualificationTypeResponse'</a>,
--   <a>updateQualificationTypeResponse_qualificationType</a> - Contains a
--   QualificationType data structure.
--   
--   <a>$sel:httpStatus:UpdateQualificationTypeResponse'</a>,
--   <a>updateQualificationTypeResponse_httpStatus</a> - The response's
--   http status code.
newUpdateQualificationTypeResponse :: Int -> UpdateQualificationTypeResponse

-- | Contains a QualificationType data structure.
updateQualificationTypeResponse_qualificationType :: Lens' UpdateQualificationTypeResponse (Maybe QualificationType)

-- | The response's http status code.
updateQualificationTypeResponse_httpStatus :: Lens' UpdateQualificationTypeResponse Int
instance GHC.Generics.Generic Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationType
instance GHC.Show.Show Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationType
instance GHC.Read.Read Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationType
instance GHC.Classes.Eq Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationType
instance GHC.Generics.Generic Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationTypeResponse
instance GHC.Show.Show Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationTypeResponse
instance GHC.Read.Read Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationTypeResponse
instance GHC.Classes.Eq Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationTypeResponse
instance Amazonka.Types.AWSRequest Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationTypeResponse
instance Data.Hashable.Class.Hashable Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationType
instance Control.DeepSeq.NFData Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationType
instance Amazonka.Data.Headers.ToHeaders Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationType
instance Data.Aeson.Types.ToJSON.ToJSON Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationType
instance Amazonka.Data.Path.ToPath Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationType
instance Amazonka.Data.Query.ToQuery Amazonka.MechanicalTurk.UpdateQualificationType.UpdateQualificationType


module Amazonka.MechanicalTurk.Lens

-- | A flag indicating that an assignment should be approved even if it was
--   previously rejected. Defaults to <tt>False</tt>.
approveAssignment_overrideRejection :: Lens' ApproveAssignment (Maybe Bool)

-- | A message for the Worker, which the Worker can see in the Status
--   section of the web site.
approveAssignment_requesterFeedback :: Lens' ApproveAssignment (Maybe Text)

-- | The ID of the assignment. The assignment must correspond to a HIT
--   created by the Requester.
approveAssignment_assignmentId :: Lens' ApproveAssignment Text

-- | The response's http status code.
approveAssignmentResponse_httpStatus :: Lens' ApproveAssignmentResponse Int

-- | Specify if the operation should retrieve a list of the results
--   computed by the Review Policies.
listReviewPolicyResultsForHIT_retrieveResults :: Lens' ListReviewPolicyResultsForHIT (Maybe Bool)

-- | The Policy Level(s) to retrieve review results for - HIT or
--   Assignment. If omitted, the default behavior is to retrieve all data
--   for both policy levels. For a list of all the described policies, see
--   Review Policies.
listReviewPolicyResultsForHIT_policyLevels :: Lens' ListReviewPolicyResultsForHIT (Maybe [ReviewPolicyLevel])

-- | Specify if the operation should retrieve a list of the actions taken
--   executing the Review Policies and their outcomes.
listReviewPolicyResultsForHIT_retrieveActions :: Lens' ListReviewPolicyResultsForHIT (Maybe Bool)

-- | Pagination token
listReviewPolicyResultsForHIT_nextToken :: Lens' ListReviewPolicyResultsForHIT (Maybe Text)

-- | Limit the number of results returned.
listReviewPolicyResultsForHIT_maxResults :: Lens' ListReviewPolicyResultsForHIT (Maybe Natural)

-- | The unique identifier of the HIT to retrieve review results for.
listReviewPolicyResultsForHIT_hITId :: Lens' ListReviewPolicyResultsForHIT Text

-- | The name of the HIT-level Review Policy. This contains only the
--   PolicyName element.
listReviewPolicyResultsForHITResponse_hITReviewPolicy :: Lens' ListReviewPolicyResultsForHITResponse (Maybe ReviewPolicy)

-- | Contains both ReviewResult and ReviewAction elements for a particular
--   HIT.
listReviewPolicyResultsForHITResponse_hITReviewReport :: Lens' ListReviewPolicyResultsForHITResponse (Maybe ReviewReport)

-- | Undocumented member.
listReviewPolicyResultsForHITResponse_nextToken :: Lens' ListReviewPolicyResultsForHITResponse (Maybe Text)

-- | Contains both ReviewResult and ReviewAction elements for an
--   Assignment.
listReviewPolicyResultsForHITResponse_assignmentReviewReport :: Lens' ListReviewPolicyResultsForHITResponse (Maybe ReviewReport)

-- | The HITId of the HIT for which results have been returned.
listReviewPolicyResultsForHITResponse_hITId :: Lens' ListReviewPolicyResultsForHITResponse (Maybe Text)

-- | The name of the Assignment-level Review Policy. This contains only the
--   PolicyName element.
listReviewPolicyResultsForHITResponse_assignmentReviewPolicy :: Lens' ListReviewPolicyResultsForHITResponse (Maybe ReviewPolicy)

-- | The response's http status code.
listReviewPolicyResultsForHITResponse_httpStatus :: Lens' ListReviewPolicyResultsForHITResponse Int

-- | Pagination token
listHITs_nextToken :: Lens' ListHITs (Maybe Text)

-- | Undocumented member.
listHITs_maxResults :: Lens' ListHITs (Maybe Natural)

-- | Undocumented member.
listHITsResponse_nextToken :: Lens' ListHITsResponse (Maybe Text)

-- | The number of HITs on this page in the filtered results list,
--   equivalent to the number of HITs being returned by this call.
listHITsResponse_numResults :: Lens' ListHITsResponse (Maybe Int)

-- | The list of HIT elements returned by the query.
listHITsResponse_hITs :: Lens' ListHITsResponse (Maybe [HIT])

-- | The response's http status code.
listHITsResponse_httpStatus :: Lens' ListHITsResponse Int

-- | The status of the Qualifications to return. Can be <tt>Granted |
--   Revoked</tt>.
listWorkersWithQualificationType_status :: Lens' ListWorkersWithQualificationType (Maybe QualificationStatus)

-- | Pagination Token
listWorkersWithQualificationType_nextToken :: Lens' ListWorkersWithQualificationType (Maybe Text)

-- | Limit the number of results returned.
listWorkersWithQualificationType_maxResults :: Lens' ListWorkersWithQualificationType (Maybe Natural)

-- | The ID of the Qualification type of the Qualifications to return.
listWorkersWithQualificationType_qualificationTypeId :: Lens' ListWorkersWithQualificationType Text

-- | Undocumented member.
listWorkersWithQualificationTypeResponse_nextToken :: Lens' ListWorkersWithQualificationTypeResponse (Maybe Text)

-- | The number of Qualifications on this page in the filtered results
--   list, equivalent to the number of Qualifications being returned by
--   this call.
listWorkersWithQualificationTypeResponse_numResults :: Lens' ListWorkersWithQualificationTypeResponse (Maybe Int)

-- | The list of Qualification elements returned by this call.
listWorkersWithQualificationTypeResponse_qualifications :: Lens' ListWorkersWithQualificationTypeResponse (Maybe [Qualification])

-- | The response's http status code.
listWorkersWithQualificationTypeResponse_httpStatus :: Lens' ListWorkersWithQualificationTypeResponse Int

-- | The ID of the HIT to be deleted.
deleteHIT_hITId :: Lens' DeleteHIT Text

-- | The response's http status code.
deleteHITResponse_httpStatus :: Lens' DeleteHITResponse Int

-- | Can be either <tt>Reviewable</tt> or <tt>Reviewing</tt>. Reviewable is
--   the default value.
listReviewableHITs_status :: Lens' ListReviewableHITs (Maybe ReviewableHITStatus)

-- | The ID of the HIT type of the HITs to consider for the query. If not
--   specified, all HITs for the Reviewer are considered
listReviewableHITs_hITTypeId :: Lens' ListReviewableHITs (Maybe Text)

-- | Pagination Token
listReviewableHITs_nextToken :: Lens' ListReviewableHITs (Maybe Text)

-- | Limit the number of results returned.
listReviewableHITs_maxResults :: Lens' ListReviewableHITs (Maybe Natural)

-- | Undocumented member.
listReviewableHITsResponse_nextToken :: Lens' ListReviewableHITsResponse (Maybe Text)

-- | The number of HITs on this page in the filtered results list,
--   equivalent to the number of HITs being returned by this call.
listReviewableHITsResponse_numResults :: Lens' ListReviewableHITsResponse (Maybe Int)

-- | The list of HIT elements returned by the query.
listReviewableHITsResponse_hITs :: Lens' ListReviewableHITsResponse (Maybe [HIT])

-- | The response's http status code.
listReviewableHITsResponse_httpStatus :: Lens' ListReviewableHITsResponse Int

-- | The ID of the Assignment to be retrieved.
getAssignment_assignmentId :: Lens' GetAssignment Text

-- | The HIT associated with this assignment. The response includes one HIT
--   element.
getAssignmentResponse_hit :: Lens' GetAssignmentResponse (Maybe HIT)

-- | The assignment. The response includes one Assignment element.
getAssignmentResponse_assignment :: Lens' GetAssignmentResponse (Maybe Assignment)

-- | The response's http status code.
getAssignmentResponse_httpStatus :: Lens' GetAssignmentResponse Int

-- | The ID of the QualificationType to dispose.
deleteQualificationType_qualificationTypeId :: Lens' DeleteQualificationType Text

-- | The response's http status code.
deleteQualificationTypeResponse_httpStatus :: Lens' DeleteQualificationTypeResponse Int

-- | The number of seconds the Worker has to complete the Qualification
--   test, starting from the time the Worker requests the Qualification.
updateQualificationType_testDurationInSeconds :: Lens' UpdateQualificationType (Maybe Integer)

-- | The new status of the Qualification type - Active | Inactive
updateQualificationType_qualificationTypeStatus :: Lens' UpdateQualificationType (Maybe QualificationTypeStatus)

-- | The answers to the Qualification test specified in the Test parameter,
--   in the form of an AnswerKey data structure.
updateQualificationType_answerKey :: Lens' UpdateQualificationType (Maybe Text)

-- | The questions for the Qualification test a Worker must answer
--   correctly to obtain a Qualification of this type. If this parameter is
--   specified, <tt>TestDurationInSeconds</tt> must also be specified.
--   
--   Constraints: Must not be longer than 65535 bytes. Must be a
--   QuestionForm data structure. This parameter cannot be specified if
--   AutoGranted is true.
--   
--   Constraints: None. If not specified, the Worker may request the
--   Qualification without answering any questions.
updateQualificationType_test :: Lens' UpdateQualificationType (Maybe Text)

-- | Specifies whether requests for the Qualification type are granted
--   immediately, without prompting the Worker with a Qualification test.
--   
--   Constraints: If the Test parameter is specified, this parameter cannot
--   be true.
updateQualificationType_autoGranted :: Lens' UpdateQualificationType (Maybe Bool)

-- | The Qualification value to use for automatically granted
--   Qualifications. This parameter is used only if the AutoGranted
--   parameter is true.
updateQualificationType_autoGrantedValue :: Lens' UpdateQualificationType (Maybe Int)

-- | The new description of the Qualification type.
updateQualificationType_description :: Lens' UpdateQualificationType (Maybe Text)

-- | The amount of time, in seconds, that Workers must wait after
--   requesting a Qualification of the specified Qualification type before
--   they can retry the Qualification request. It is not possible to
--   disable retries for a Qualification type after it has been created
--   with retries enabled. If you want to disable retries, you must dispose
--   of the existing retry-enabled Qualification type using
--   DisposeQualificationType and then create a new Qualification type with
--   retries disabled using CreateQualificationType.
updateQualificationType_retryDelayInSeconds :: Lens' UpdateQualificationType (Maybe Integer)

-- | The ID of the Qualification type to update.
updateQualificationType_qualificationTypeId :: Lens' UpdateQualificationType Text

-- | Contains a QualificationType data structure.
updateQualificationTypeResponse_qualificationType :: Lens' UpdateQualificationTypeResponse (Maybe QualificationType)

-- | The response's http status code.
updateQualificationTypeResponse_httpStatus :: Lens' UpdateQualificationTypeResponse Int

-- | Specifies that only Qualification types that the Requester created are
--   returned. If false, the operation returns all Qualification types.
listQualificationTypes_mustBeOwnedByCaller :: Lens' ListQualificationTypes (Maybe Bool)

-- | Undocumented member.
listQualificationTypes_nextToken :: Lens' ListQualificationTypes (Maybe Text)

-- | A text query against all of the searchable attributes of Qualification
--   types.
listQualificationTypes_query :: Lens' ListQualificationTypes (Maybe Text)

-- | The maximum number of results to return in a single call.
listQualificationTypes_maxResults :: Lens' ListQualificationTypes (Maybe Natural)

-- | Specifies that only Qualification types that a user can request
--   through the Amazon Mechanical Turk web site, such as by taking a
--   Qualification test, are returned as results of the search. Some
--   Qualification types, such as those assigned automatically by the
--   system, cannot be requested directly by users. If false, all
--   Qualification types, including those managed by the system, are
--   considered. Valid values are True | False.
listQualificationTypes_mustBeRequestable :: Lens' ListQualificationTypes Bool

-- | The list of QualificationType elements returned by the query.
listQualificationTypesResponse_qualificationTypes :: Lens' ListQualificationTypesResponse (Maybe [QualificationType])

-- | Undocumented member.
listQualificationTypesResponse_nextToken :: Lens' ListQualificationTypesResponse (Maybe Text)

-- | The number of Qualification types on this page in the filtered results
--   list, equivalent to the number of types this operation returns.
listQualificationTypesResponse_numResults :: Lens' ListQualificationTypesResponse (Maybe Int)

-- | The response's http status code.
listQualificationTypesResponse_httpStatus :: Lens' ListQualificationTypesResponse Int

-- | The HIT to update.
updateHITTypeOfHIT_hITId :: Lens' UpdateHITTypeOfHIT Text

-- | The ID of the new HIT type.
updateHITTypeOfHIT_hITTypeId :: Lens' UpdateHITTypeOfHIT Text

-- | The response's http status code.
updateHITTypeOfHITResponse_httpStatus :: Lens' UpdateHITTypeOfHITResponse Int

-- | A text message that explains why the Qualification was revoked. The
--   user who had the Qualification sees this message.
disassociateQualificationFromWorker_reason :: Lens' DisassociateQualificationFromWorker (Maybe Text)

-- | The ID of the Worker who possesses the Qualification to be revoked.
disassociateQualificationFromWorker_workerId :: Lens' DisassociateQualificationFromWorker Text

-- | The ID of the Qualification type of the Qualification to be revoked.
disassociateQualificationFromWorker_qualificationTypeId :: Lens' DisassociateQualificationFromWorker Text

-- | The response's http status code.
disassociateQualificationFromWorkerResponse_httpStatus :: Lens' DisassociateQualificationFromWorkerResponse Int

-- | The notification specification to test. This value is identical to the
--   value you would provide to the UpdateNotificationSettings operation
--   when you establish the notification specification for a HIT type.
sendTestEventNotification_notification :: Lens' SendTestEventNotification NotificationSpecification

-- | The event to simulate to test the notification specification. This
--   event is included in the test message even if the notification
--   specification does not include the event type. The notification
--   specification does not filter out the test event.
sendTestEventNotification_testEventType :: Lens' SendTestEventNotification EventType

-- | The response's http status code.
sendTestEventNotificationResponse_httpStatus :: Lens' SendTestEventNotificationResponse Int

-- | The subject line of the email message to send. Can include up to 200
--   characters.
notifyWorkers_subject :: Lens' NotifyWorkers Text

-- | The text of the email message to send. Can include up to 4,096
--   characters
notifyWorkers_messageText :: Lens' NotifyWorkers Text

-- | A list of Worker IDs you wish to notify. You can notify upto 100
--   Workers at a time.
notifyWorkers_workerIds :: Lens' NotifyWorkers [Text]

-- | When MTurk sends notifications to the list of Workers, it returns back
--   any failures it encounters in this list of NotifyWorkersFailureStatus
--   objects.
notifyWorkersResponse_notifyWorkersFailureStatuses :: Lens' NotifyWorkersResponse (Maybe [NotifyWorkersFailureStatus])

-- | The response's http status code.
notifyWorkersResponse_httpStatus :: Lens' NotifyWorkersResponse Int

-- | The HIT-level Review Policy applies to the HIT. You can specify for
--   Mechanical Turk to take various actions based on the policy.
createHITWithHITType_hITReviewPolicy :: Lens' CreateHITWithHITType (Maybe ReviewPolicy)

-- | A unique identifier for this request which allows you to retry the
--   call on error without creating duplicate HITs. This is useful in cases
--   such as network timeouts where it is unclear whether or not the call
--   succeeded on the server. If the HIT already exists in the system from
--   a previous call using the same UniqueRequestToken, subsequent calls
--   will return a AWS.MechanicalTurk.HitAlreadyExists error with a message
--   containing the HITId.
--   
--   Note: It is your responsibility to ensure uniqueness of the token. The
--   unique token expires after 24 hours. Subsequent calls using the same
--   UniqueRequestToken made after the 24 hour limit could create duplicate
--   HITs.
createHITWithHITType_uniqueRequestToken :: Lens' CreateHITWithHITType (Maybe Text)

-- | An arbitrary data field. The RequesterAnnotation parameter lets your
--   application attach arbitrary data to the HIT for tracking purposes.
--   For example, this parameter could be an identifier internal to the
--   Requester's application that corresponds with the HIT.
--   
--   The RequesterAnnotation parameter for a HIT is only visible to the
--   Requester who created the HIT. It is not shown to the Worker, or any
--   other Requester.
--   
--   The RequesterAnnotation parameter may be different for each HIT you
--   submit. It does not affect how your HITs are grouped.
createHITWithHITType_requesterAnnotation :: Lens' CreateHITWithHITType (Maybe Text)

-- | The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
createHITWithHITType_maxAssignments :: Lens' CreateHITWithHITType (Maybe Int)

-- | The HITLayoutId allows you to use a pre-existing HIT design with
--   placeholder values and create an additional HIT by providing those
--   values as HITLayoutParameters.
--   
--   Constraints: Either a Question parameter or a HITLayoutId parameter
--   must be provided.
createHITWithHITType_hITLayoutId :: Lens' CreateHITWithHITType (Maybe Text)

-- | If the HITLayoutId is provided, any placeholder values must be filled
--   in with values using the HITLayoutParameter structure. For more
--   information, see HITLayout.
createHITWithHITType_hITLayoutParameters :: Lens' CreateHITWithHITType (Maybe [HITLayoutParameter])

-- | The data the person completing the HIT uses to produce the results.
--   
--   Constraints: Must be a QuestionForm data structure, an
--   ExternalQuestion data structure, or an HTMLQuestion data structure.
--   The XML question data must not be larger than 64 kilobytes (65,535
--   bytes) in size, including whitespace.
--   
--   Either a Question parameter or a HITLayoutId parameter must be
--   provided.
createHITWithHITType_question :: Lens' CreateHITWithHITType (Maybe Text)

-- | The Assignment-level Review Policy applies to the assignments under
--   the HIT. You can specify for Mechanical Turk to take various actions
--   based on the policy.
createHITWithHITType_assignmentReviewPolicy :: Lens' CreateHITWithHITType (Maybe ReviewPolicy)

-- | The HIT type ID you want to create this HIT with.
createHITWithHITType_hITTypeId :: Lens' CreateHITWithHITType Text

-- | An amount of time, in seconds, after which the HIT is no longer
--   available for users to accept. After the lifetime of the HIT elapses,
--   the HIT no longer appears in HIT searches, even if not all of the
--   assignments for the HIT have been accepted.
createHITWithHITType_lifetimeInSeconds :: Lens' CreateHITWithHITType Integer

-- | Contains the newly created HIT data. For a description of the HIT data
--   structure as it appears in responses, see the HIT Data Structure
--   documentation.
createHITWithHITTypeResponse_hit :: Lens' CreateHITWithHITTypeResponse (Maybe HIT)

-- | The response's http status code.
createHITWithHITTypeResponse_httpStatus :: Lens' CreateHITWithHITTypeResponse Int

-- | The number of seconds after an assignment for the HIT has been
--   submitted, after which the assignment is considered Approved
--   automatically unless the Requester explicitly rejects it.
createHITType_autoApprovalDelayInSeconds :: Lens' CreateHITType (Maybe Integer)

-- | One or more words or phrases that describe the HIT, separated by
--   commas. These words are used in searches to find HITs.
createHITType_keywords :: Lens' CreateHITType (Maybe Text)

-- | Conditions that a Worker's Qualifications must meet in order to accept
--   the HIT. A HIT can have between zero and ten Qualification
--   requirements. All requirements must be met in order for a Worker to
--   accept the HIT. Additionally, other actions can be restricted using
--   the <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
createHITType_qualificationRequirements :: Lens' CreateHITType (Maybe [QualificationRequirement])

-- | The amount of time, in seconds, that a Worker has to complete the HIT
--   after accepting it. If a Worker does not complete the assignment
--   within the specified duration, the assignment is considered abandoned.
--   If the HIT is still active (that is, its lifetime has not elapsed),
--   the assignment becomes available for other users to find and accept.
createHITType_assignmentDurationInSeconds :: Lens' CreateHITType Integer

-- | The amount of money the Requester will pay a Worker for successfully
--   completing the HIT.
createHITType_reward :: Lens' CreateHITType Text

-- | The title of the HIT. A title should be short and descriptive about
--   the kind of task the HIT contains. On the Amazon Mechanical Turk web
--   site, the HIT title appears in search results, and everywhere the HIT
--   is mentioned.
createHITType_title :: Lens' CreateHITType Text

-- | A general description of the HIT. A description includes detailed
--   information about the kind of task the HIT contains. On the Amazon
--   Mechanical Turk web site, the HIT description appears in the expanded
--   view of search results, and in the HIT and assignment screens. A good
--   description gives the user enough information to evaluate the HIT
--   before accepting it.
createHITType_description :: Lens' CreateHITType Text

-- | The ID of the newly registered HIT type.
createHITTypeResponse_hITTypeId :: Lens' CreateHITTypeResponse (Maybe Text)

-- | The response's http status code.
createHITTypeResponse_httpStatus :: Lens' CreateHITTypeResponse Int

-- | A unique identifier for this request, which allows you to retry the
--   call on error without granting multiple bonuses. This is useful in
--   cases such as network timeouts where it is unclear whether or not the
--   call succeeded on the server. If the bonus already exists in the
--   system from a previous call using the same UniqueRequestToken,
--   subsequent calls will return an error with a message containing the
--   request ID.
sendBonus_uniqueRequestToken :: Lens' SendBonus (Maybe Text)

-- | The ID of the Worker being paid the bonus.
sendBonus_workerId :: Lens' SendBonus Text

-- | The Bonus amount is a US Dollar amount specified using a string (for
--   example, "5" represents $5.00 USD and "101.42" represents $101.42
--   USD). Do not include currency symbols or currency codes.
sendBonus_bonusAmount :: Lens' SendBonus Text

-- | The ID of the assignment for which this bonus is paid.
sendBonus_assignmentId :: Lens' SendBonus Text

-- | A message that explains the reason for the bonus payment. The Worker
--   receiving the bonus can see this message.
sendBonus_reason :: Lens' SendBonus Text

-- | The response's http status code.
sendBonusResponse_httpStatus :: Lens' SendBonusResponse Int

-- | Undocumented member.
listQualificationRequests_nextToken :: Lens' ListQualificationRequests (Maybe Text)

-- | The ID of the QualificationType.
listQualificationRequests_qualificationTypeId :: Lens' ListQualificationRequests (Maybe Text)

-- | The maximum number of results to return in a single call.
listQualificationRequests_maxResults :: Lens' ListQualificationRequests (Maybe Natural)

-- | The Qualification request. The response includes one
--   QualificationRequest element for each Qualification request returned
--   by the query.
listQualificationRequestsResponse_qualificationRequests :: Lens' ListQualificationRequestsResponse (Maybe [QualificationRequest])

-- | Undocumented member.
listQualificationRequestsResponse_nextToken :: Lens' ListQualificationRequestsResponse (Maybe Text)

-- | The number of Qualification requests on this page in the filtered
--   results list, equivalent to the number of Qualification requests being
--   returned by this call.
listQualificationRequestsResponse_numResults :: Lens' ListQualificationRequestsResponse (Maybe Int)

-- | The response's http status code.
listQualificationRequestsResponse_httpStatus :: Lens' ListQualificationRequestsResponse Int

-- | The HIT to update.
updateExpirationForHIT_hITId :: Lens' UpdateExpirationForHIT Text

-- | The date and time at which you want the HIT to expire
updateExpirationForHIT_expireAt :: Lens' UpdateExpirationForHIT UTCTime

-- | The response's http status code.
updateExpirationForHITResponse_httpStatus :: Lens' UpdateExpirationForHITResponse Int

-- | The ID of the assignment. The assignment must correspond to a HIT
--   created by the Requester.
rejectAssignment_assignmentId :: Lens' RejectAssignment Text

-- | A message for the Worker, which the Worker can see in the Status
--   section of the web site.
rejectAssignment_requesterFeedback :: Lens' RejectAssignment Text

-- | The response's http status code.
rejectAssignmentResponse_httpStatus :: Lens' RejectAssignmentResponse Int

-- | The status of the assignments to return: Submitted | Approved |
--   Rejected
listAssignmentsForHIT_assignmentStatuses :: Lens' ListAssignmentsForHIT (Maybe [AssignmentStatus])

-- | Pagination token
listAssignmentsForHIT_nextToken :: Lens' ListAssignmentsForHIT (Maybe Text)

-- | Undocumented member.
listAssignmentsForHIT_maxResults :: Lens' ListAssignmentsForHIT (Maybe Natural)

-- | The ID of the HIT.
listAssignmentsForHIT_hITId :: Lens' ListAssignmentsForHIT Text

-- | Undocumented member.
listAssignmentsForHITResponse_nextToken :: Lens' ListAssignmentsForHITResponse (Maybe Text)

-- | The number of assignments on the page in the filtered results list,
--   equivalent to the number of assignments returned by this call.
listAssignmentsForHITResponse_numResults :: Lens' ListAssignmentsForHITResponse (Maybe Int)

-- | The collection of Assignment data structures returned by this call.
listAssignmentsForHITResponse_assignments :: Lens' ListAssignmentsForHITResponse (Maybe [Assignment])

-- | The response's http status code.
listAssignmentsForHITResponse_httpStatus :: Lens' ListAssignmentsForHITResponse Int

-- | A text message explaining why the request was rejected, to be shown to
--   the Worker who made the request.
rejectQualificationRequest_reason :: Lens' RejectQualificationRequest (Maybe Text)

-- | The ID of the Qualification request, as returned by the
--   <tt>ListQualificationRequests</tt> operation.
rejectQualificationRequest_qualificationRequestId :: Lens' RejectQualificationRequest Text

-- | The response's http status code.
rejectQualificationRequestResponse_httpStatus :: Lens' RejectQualificationRequestResponse Int

-- | The ID of the QualificationType.
getQualificationScore_qualificationTypeId :: Lens' GetQualificationScore Text

-- | The ID of the Worker whose Qualification is being updated.
getQualificationScore_workerId :: Lens' GetQualificationScore Text

-- | The Qualification data structure of the Qualification assigned to a
--   user, including the Qualification type and the value (score).
getQualificationScoreResponse_qualification :: Lens' GetQualificationScoreResponse (Maybe Qualification)

-- | The response's http status code.
getQualificationScoreResponse_httpStatus :: Lens' GetQualificationScoreResponse Int

-- | The ID of the QualificationType.
getQualificationType_qualificationTypeId :: Lens' GetQualificationType Text

-- | The returned Qualification Type
getQualificationTypeResponse_qualificationType :: Lens' GetQualificationTypeResponse (Maybe QualificationType)

-- | The response's http status code.
getQualificationTypeResponse_httpStatus :: Lens' GetQualificationTypeResponse Int

-- | Specifies how to update the HIT status. Default is <tt>False</tt>.
--   
--   <ul>
--   <li>Setting this to false will only transition a HIT from
--   <tt>Reviewable</tt> to <tt>Reviewing</tt></li>
--   <li>Setting this to true will only transition a HIT from
--   <tt>Reviewing</tt> to <tt>Reviewable</tt></li>
--   </ul>
updateHITReviewStatus_revert :: Lens' UpdateHITReviewStatus (Maybe Bool)

-- | The ID of the HIT to update.
updateHITReviewStatus_hITId :: Lens' UpdateHITReviewStatus Text

-- | The response's http status code.
updateHITReviewStatusResponse_httpStatus :: Lens' UpdateHITReviewStatusResponse Int

-- | The number of seconds the Worker has to complete the Qualification
--   test, starting from the time the Worker requests the Qualification.
createQualificationType_testDurationInSeconds :: Lens' CreateQualificationType (Maybe Integer)

-- | The answers to the Qualification test specified in the Test parameter,
--   in the form of an AnswerKey data structure.
--   
--   Constraints: Must not be longer than 65535 bytes.
--   
--   Constraints: None. If not specified, you must process Qualification
--   requests manually.
createQualificationType_answerKey :: Lens' CreateQualificationType (Maybe Text)

-- | The questions for the Qualification test a Worker must answer
--   correctly to obtain a Qualification of this type. If this parameter is
--   specified, <tt>TestDurationInSeconds</tt> must also be specified.
--   
--   Constraints: Must not be longer than 65535 bytes. Must be a
--   QuestionForm data structure. This parameter cannot be specified if
--   AutoGranted is true.
--   
--   Constraints: None. If not specified, the Worker may request the
--   Qualification without answering any questions.
createQualificationType_test :: Lens' CreateQualificationType (Maybe Text)

-- | One or more words or phrases that describe the Qualification type,
--   separated by commas. The keywords of a type make the type easier to
--   find during a search.
createQualificationType_keywords :: Lens' CreateQualificationType (Maybe Text)

-- | Specifies whether requests for the Qualification type are granted
--   immediately, without prompting the Worker with a Qualification test.
--   
--   Constraints: If the Test parameter is specified, this parameter cannot
--   be true.
createQualificationType_autoGranted :: Lens' CreateQualificationType (Maybe Bool)

-- | The Qualification value to use for automatically granted
--   Qualifications. This parameter is used only if the AutoGranted
--   parameter is true.
createQualificationType_autoGrantedValue :: Lens' CreateQualificationType (Maybe Int)

-- | The number of seconds that a Worker must wait after requesting a
--   Qualification of the Qualification type before the worker can retry
--   the Qualification request.
--   
--   Constraints: None. If not specified, retries are disabled and Workers
--   can request a Qualification of this type only once, even if the Worker
--   has not been granted the Qualification. It is not possible to disable
--   retries for a Qualification type after it has been created with
--   retries enabled. If you want to disable retries, you must delete
--   existing retry-enabled Qualification type and then create a new
--   Qualification type with retries disabled.
createQualificationType_retryDelayInSeconds :: Lens' CreateQualificationType (Maybe Integer)

-- | The name you give to the Qualification type. The type name is used to
--   represent the Qualification to Workers, and to find the type using a
--   Qualification type search. It must be unique across all of your
--   Qualification types.
createQualificationType_name :: Lens' CreateQualificationType Text

-- | A long description for the Qualification type. On the Amazon
--   Mechanical Turk website, the long description is displayed when a
--   Worker examines a Qualification type.
createQualificationType_description :: Lens' CreateQualificationType Text

-- | The initial status of the Qualification type.
--   
--   Constraints: Valid values are: Active | Inactive
createQualificationType_qualificationTypeStatus :: Lens' CreateQualificationType QualificationTypeStatus

-- | The created Qualification type, returned as a QualificationType data
--   structure.
createQualificationTypeResponse_qualificationType :: Lens' CreateQualificationTypeResponse (Maybe QualificationType)

-- | The response's http status code.
createQualificationTypeResponse_httpStatus :: Lens' CreateQualificationTypeResponse Int

-- | The value of the Qualification. You can omit this value if you are
--   using the presence or absence of the Qualification as the basis for a
--   HIT requirement.
acceptQualificationRequest_integerValue :: Lens' AcceptQualificationRequest (Maybe Int)

-- | The ID of the Qualification request, as returned by the
--   <tt>GetQualificationRequests</tt> operation.
acceptQualificationRequest_qualificationRequestId :: Lens' AcceptQualificationRequest Text

-- | The response's http status code.
acceptQualificationRequestResponse_httpStatus :: Lens' AcceptQualificationRequestResponse Int

-- | The ID of the assignment that contains the question with a
--   FileUploadAnswer.
getFileUploadURL_assignmentId :: Lens' GetFileUploadURL Text

-- | The identifier of the question with a FileUploadAnswer, as specified
--   in the QuestionForm of the HIT.
getFileUploadURL_questionIdentifier :: Lens' GetFileUploadURL Text

-- | A temporary URL for the file that the Worker uploaded for the answer.
getFileUploadURLResponse_fileUploadURL :: Lens' GetFileUploadURLResponse (Maybe Text)

-- | The response's http status code.
getFileUploadURLResponse_httpStatus :: Lens' GetFileUploadURLResponse Int

-- | A unique identifier for this request, which allows you to retry the
--   call on error without extending the HIT multiple times. This is useful
--   in cases such as network timeouts where it is unclear whether or not
--   the call succeeded on the server. If the extend HIT already exists in
--   the system from a previous call using the same
--   <tt>UniqueRequestToken</tt>, subsequent calls will return an error
--   with a message containing the request ID.
createAdditionalAssignmentsForHIT_uniqueRequestToken :: Lens' CreateAdditionalAssignmentsForHIT (Maybe Text)

-- | The ID of the HIT to extend.
createAdditionalAssignmentsForHIT_hITId :: Lens' CreateAdditionalAssignmentsForHIT Text

-- | The number of additional assignments to request for this HIT.
createAdditionalAssignmentsForHIT_numberOfAdditionalAssignments :: Lens' CreateAdditionalAssignmentsForHIT Int

-- | The response's http status code.
createAdditionalAssignmentsForHITResponse_httpStatus :: Lens' CreateAdditionalAssignmentsForHITResponse Int

-- | The ID of the HIT to be retrieved.
getHIT_hITId :: Lens' GetHIT Text

-- | Contains the requested HIT data.
getHITResponse_hit :: Lens' GetHITResponse (Maybe HIT)

-- | The response's http status code.
getHITResponse_httpStatus :: Lens' GetHITResponse Int

-- | The ID of the Worker to block.
createWorkerBlock_workerId :: Lens' CreateWorkerBlock Text

-- | A message explaining the reason for blocking the Worker. This
--   parameter enables you to keep track of your Workers. The Worker does
--   not see this message.
createWorkerBlock_reason :: Lens' CreateWorkerBlock Text

-- | The response's http status code.
createWorkerBlockResponse_httpStatus :: Lens' CreateWorkerBlockResponse Int

-- | Pagination Token
listHITsForQualificationType_nextToken :: Lens' ListHITsForQualificationType (Maybe Text)

-- | Limit the number of results returned.
listHITsForQualificationType_maxResults :: Lens' ListHITsForQualificationType (Maybe Natural)

-- | The ID of the Qualification type to use when querying HITs.
listHITsForQualificationType_qualificationTypeId :: Lens' ListHITsForQualificationType Text

-- | Undocumented member.
listHITsForQualificationTypeResponse_nextToken :: Lens' ListHITsForQualificationTypeResponse (Maybe Text)

-- | The number of HITs on this page in the filtered results list,
--   equivalent to the number of HITs being returned by this call.
listHITsForQualificationTypeResponse_numResults :: Lens' ListHITsForQualificationTypeResponse (Maybe Int)

-- | The list of HIT elements returned by the query.
listHITsForQualificationTypeResponse_hITs :: Lens' ListHITsForQualificationTypeResponse (Maybe [HIT])

-- | The response's http status code.
listHITsForQualificationTypeResponse_httpStatus :: Lens' ListHITsForQualificationTypeResponse Int

-- | Pagination token
listBonusPayments_nextToken :: Lens' ListBonusPayments (Maybe Text)

-- | The ID of the HIT associated with the bonus payments to retrieve. If
--   not specified, all bonus payments for all assignments for the given
--   HIT are returned. Either the HITId parameter or the AssignmentId
--   parameter must be specified
listBonusPayments_hITId :: Lens' ListBonusPayments (Maybe Text)

-- | The ID of the assignment associated with the bonus payments to
--   retrieve. If specified, only bonus payments for the given assignment
--   are returned. Either the HITId parameter or the AssignmentId parameter
--   must be specified
listBonusPayments_assignmentId :: Lens' ListBonusPayments (Maybe Text)

-- | Undocumented member.
listBonusPayments_maxResults :: Lens' ListBonusPayments (Maybe Natural)

-- | A successful request to the ListBonusPayments operation returns a list
--   of BonusPayment objects.
listBonusPaymentsResponse_bonusPayments :: Lens' ListBonusPaymentsResponse (Maybe [BonusPayment])

-- | Undocumented member.
listBonusPaymentsResponse_nextToken :: Lens' ListBonusPaymentsResponse (Maybe Text)

-- | The number of bonus payments on this page in the filtered results
--   list, equivalent to the number of bonus payments being returned by
--   this call.
listBonusPaymentsResponse_numResults :: Lens' ListBonusPaymentsResponse (Maybe Int)

-- | The response's http status code.
listBonusPaymentsResponse_httpStatus :: Lens' ListBonusPaymentsResponse Int

-- | Pagination token
listWorkerBlocks_nextToken :: Lens' ListWorkerBlocks (Maybe Text)

-- | Undocumented member.
listWorkerBlocks_maxResults :: Lens' ListWorkerBlocks (Maybe Natural)

-- | The list of WorkerBlocks, containing the collection of Worker IDs and
--   reasons for blocking.
listWorkerBlocksResponse_workerBlocks :: Lens' ListWorkerBlocksResponse (Maybe [WorkerBlock])

-- | Undocumented member.
listWorkerBlocksResponse_nextToken :: Lens' ListWorkerBlocksResponse (Maybe Text)

-- | The number of assignments on the page in the filtered results list,
--   equivalent to the number of assignments returned by this call.
listWorkerBlocksResponse_numResults :: Lens' ListWorkerBlocksResponse (Maybe Int)

-- | The response's http status code.
listWorkerBlocksResponse_httpStatus :: Lens' ListWorkerBlocksResponse Int

-- | A message that explains the reason for unblocking the Worker. The
--   Worker does not see this message.
deleteWorkerBlock_reason :: Lens' DeleteWorkerBlock (Maybe Text)

-- | The ID of the Worker to unblock.
deleteWorkerBlock_workerId :: Lens' DeleteWorkerBlock Text

-- | The response's http status code.
deleteWorkerBlockResponse_httpStatus :: Lens' DeleteWorkerBlockResponse Int

-- | The notification specification for the HIT type.
updateNotificationSettings_notification :: Lens' UpdateNotificationSettings (Maybe NotificationSpecification)

-- | Specifies whether notifications are sent for HITs of this HIT type,
--   according to the notification specification. You must specify either
--   the Notification parameter or the Active parameter for the call to
--   UpdateNotificationSettings to succeed.
updateNotificationSettings_active :: Lens' UpdateNotificationSettings (Maybe Bool)

-- | The ID of the HIT type whose notification specification is being
--   updated.
updateNotificationSettings_hITTypeId :: Lens' UpdateNotificationSettings Text

-- | The response's http status code.
updateNotificationSettingsResponse_httpStatus :: Lens' UpdateNotificationSettingsResponse Int

-- | The value of the Qualification to assign.
associateQualificationWithWorker_integerValue :: Lens' AssociateQualificationWithWorker (Maybe Int)

-- | Specifies whether to send a notification email message to the Worker
--   saying that the qualification was assigned to the Worker. Note: this
--   is true by default.
associateQualificationWithWorker_sendNotification :: Lens' AssociateQualificationWithWorker (Maybe Bool)

-- | The ID of the Qualification type to use for the assigned
--   Qualification.
associateQualificationWithWorker_qualificationTypeId :: Lens' AssociateQualificationWithWorker Text

-- | The ID of the Worker to whom the Qualification is being assigned.
--   Worker IDs are included with submitted HIT assignments and
--   Qualification requests.
associateQualificationWithWorker_workerId :: Lens' AssociateQualificationWithWorker Text

-- | The response's http status code.
associateQualificationWithWorkerResponse_httpStatus :: Lens' AssociateQualificationWithWorkerResponse Int

-- | The HIT-level Review Policy applies to the HIT. You can specify for
--   Mechanical Turk to take various actions based on the policy.
createHIT_hITReviewPolicy :: Lens' CreateHIT (Maybe ReviewPolicy)

-- | A unique identifier for this request which allows you to retry the
--   call on error without creating duplicate HITs. This is useful in cases
--   such as network timeouts where it is unclear whether or not the call
--   succeeded on the server. If the HIT already exists in the system from
--   a previous call using the same UniqueRequestToken, subsequent calls
--   will return a AWS.MechanicalTurk.HitAlreadyExists error with a message
--   containing the HITId.
--   
--   Note: It is your responsibility to ensure uniqueness of the token. The
--   unique token expires after 24 hours. Subsequent calls using the same
--   UniqueRequestToken made after the 24 hour limit could create duplicate
--   HITs.
createHIT_uniqueRequestToken :: Lens' CreateHIT (Maybe Text)

-- | The number of seconds after an assignment for the HIT has been
--   submitted, after which the assignment is considered Approved
--   automatically unless the Requester explicitly rejects it.
createHIT_autoApprovalDelayInSeconds :: Lens' CreateHIT (Maybe Integer)

-- | An arbitrary data field. The RequesterAnnotation parameter lets your
--   application attach arbitrary data to the HIT for tracking purposes.
--   For example, this parameter could be an identifier internal to the
--   Requester's application that corresponds with the HIT.
--   
--   The RequesterAnnotation parameter for a HIT is only visible to the
--   Requester who created the HIT. It is not shown to the Worker, or any
--   other Requester.
--   
--   The RequesterAnnotation parameter may be different for each HIT you
--   submit. It does not affect how your HITs are grouped.
createHIT_requesterAnnotation :: Lens' CreateHIT (Maybe Text)

-- | The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
createHIT_maxAssignments :: Lens' CreateHIT (Maybe Int)

-- | One or more words or phrases that describe the HIT, separated by
--   commas. These words are used in searches to find HITs.
createHIT_keywords :: Lens' CreateHIT (Maybe Text)

-- | The HITLayoutId allows you to use a pre-existing HIT design with
--   placeholder values and create an additional HIT by providing those
--   values as HITLayoutParameters.
--   
--   Constraints: Either a Question parameter or a HITLayoutId parameter
--   must be provided.
createHIT_hITLayoutId :: Lens' CreateHIT (Maybe Text)

-- | If the HITLayoutId is provided, any placeholder values must be filled
--   in with values using the HITLayoutParameter structure. For more
--   information, see HITLayout.
createHIT_hITLayoutParameters :: Lens' CreateHIT (Maybe [HITLayoutParameter])

-- | Conditions that a Worker's Qualifications must meet in order to accept
--   the HIT. A HIT can have between zero and ten Qualification
--   requirements. All requirements must be met in order for a Worker to
--   accept the HIT. Additionally, other actions can be restricted using
--   the <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
createHIT_qualificationRequirements :: Lens' CreateHIT (Maybe [QualificationRequirement])

-- | The data the person completing the HIT uses to produce the results.
--   
--   Constraints: Must be a QuestionForm data structure, an
--   ExternalQuestion data structure, or an HTMLQuestion data structure.
--   The XML question data must not be larger than 64 kilobytes (65,535
--   bytes) in size, including whitespace.
--   
--   Either a Question parameter or a HITLayoutId parameter must be
--   provided.
createHIT_question :: Lens' CreateHIT (Maybe Text)

-- | The Assignment-level Review Policy applies to the assignments under
--   the HIT. You can specify for Mechanical Turk to take various actions
--   based on the policy.
createHIT_assignmentReviewPolicy :: Lens' CreateHIT (Maybe ReviewPolicy)

-- | An amount of time, in seconds, after which the HIT is no longer
--   available for users to accept. After the lifetime of the HIT elapses,
--   the HIT no longer appears in HIT searches, even if not all of the
--   assignments for the HIT have been accepted.
createHIT_lifetimeInSeconds :: Lens' CreateHIT Integer

-- | The amount of time, in seconds, that a Worker has to complete the HIT
--   after accepting it. If a Worker does not complete the assignment
--   within the specified duration, the assignment is considered abandoned.
--   If the HIT is still active (that is, its lifetime has not elapsed),
--   the assignment becomes available for other users to find and accept.
createHIT_assignmentDurationInSeconds :: Lens' CreateHIT Integer

-- | The amount of money the Requester will pay a Worker for successfully
--   completing the HIT.
createHIT_reward :: Lens' CreateHIT Text

-- | The title of the HIT. A title should be short and descriptive about
--   the kind of task the HIT contains. On the Amazon Mechanical Turk web
--   site, the HIT title appears in search results, and everywhere the HIT
--   is mentioned.
createHIT_title :: Lens' CreateHIT Text

-- | A general description of the HIT. A description includes detailed
--   information about the kind of task the HIT contains. On the Amazon
--   Mechanical Turk web site, the HIT description appears in the expanded
--   view of search results, and in the HIT and assignment screens. A good
--   description gives the user enough information to evaluate the HIT
--   before accepting it.
createHIT_description :: Lens' CreateHIT Text

-- | Contains the newly created HIT data. For a description of the HIT data
--   structure as it appears in responses, see the HIT Data Structure
--   documentation.
createHITResponse_hit :: Lens' CreateHITResponse (Maybe HIT)

-- | The response's http status code.
createHITResponse_httpStatus :: Lens' CreateHITResponse Int

-- | Undocumented member.
getAccountBalanceResponse_availableBalance :: Lens' GetAccountBalanceResponse (Maybe Text)

-- | Undocumented member.
getAccountBalanceResponse_onHoldBalance :: Lens' GetAccountBalanceResponse (Maybe Text)

-- | The response's http status code.
getAccountBalanceResponse_httpStatus :: Lens' GetAccountBalanceResponse Int

-- | The date and time the Worker accepted the assignment.
assignment_acceptTime :: Lens' Assignment (Maybe UTCTime)

-- | The Worker's answers submitted for the HIT contained in a
--   QuestionFormAnswers document, if the Worker provides an answer. If the
--   Worker does not provide any answers, Answer may contain a
--   QuestionFormAnswers document, or Answer may be empty.
assignment_answer :: Lens' Assignment (Maybe Text)

-- | The status of the assignment.
assignment_assignmentStatus :: Lens' Assignment (Maybe AssignmentStatus)

-- | The feedback string included with the call to the ApproveAssignment
--   operation or the RejectAssignment operation, if the Requester approved
--   or rejected the assignment and specified feedback.
assignment_requesterFeedback :: Lens' Assignment (Maybe Text)

-- | The date and time of the deadline for the assignment. This value is
--   derived from the deadline specification for the HIT and the date and
--   time the Worker accepted the HIT.
assignment_deadline :: Lens' Assignment (Maybe UTCTime)

-- | If the Worker has submitted results and the Requester has approved the
--   results, ApprovalTime is the date and time the Requester approved the
--   results. This value is omitted from the assignment if the Requester
--   has not yet approved the results.
assignment_approvalTime :: Lens' Assignment (Maybe UTCTime)

-- | If the Worker has submitted results and the Requester has rejected the
--   results, RejectionTime is the date and time the Requester rejected the
--   results.
assignment_rejectionTime :: Lens' Assignment (Maybe UTCTime)

-- | If results have been submitted, AutoApprovalTime is the date and time
--   the results of the assignment results are considered Approved
--   automatically if they have not already been explicitly approved or
--   rejected by the Requester. This value is derived from the
--   auto-approval delay specified by the Requester in the HIT. This value
--   is omitted from the assignment if the Worker has not yet submitted
--   results.
assignment_autoApprovalTime :: Lens' Assignment (Maybe UTCTime)

-- | The ID of the HIT.
assignment_hITId :: Lens' Assignment (Maybe Text)

-- | The ID of the Worker who accepted the HIT.
assignment_workerId :: Lens' Assignment (Maybe Text)

-- | A unique identifier for the assignment.
assignment_assignmentId :: Lens' Assignment (Maybe Text)

-- | If the Worker has submitted results, SubmitTime is the date and time
--   the assignment was submitted. This value is omitted from the
--   assignment if the Worker has not yet submitted results.
assignment_submitTime :: Lens' Assignment (Maybe UTCTime)

-- | The Reason text given when the bonus was granted, if any.
bonusPayment_reason :: Lens' BonusPayment (Maybe Text)

-- | The date and time of when the bonus was granted.
bonusPayment_grantTime :: Lens' BonusPayment (Maybe UTCTime)

-- | The ID of the Worker to whom the bonus was paid.
bonusPayment_workerId :: Lens' BonusPayment (Maybe Text)

-- | The ID of the assignment associated with this bonus payment.
bonusPayment_assignmentId :: Lens' BonusPayment (Maybe Text)

-- | Undocumented member.
bonusPayment_bonusAmount :: Lens' BonusPayment (Maybe Text)

-- | The date and time the HIT was created.
hit_creationTime :: Lens' HIT (Maybe UTCTime)

-- | The ID of the HIT Group of this HIT.
hit_hITGroupId :: Lens' HIT (Maybe Text)

-- | The number of assignments for this HIT that are being previewed or
--   have been accepted by Workers, but have not yet been submitted,
--   returned, or abandoned.
hit_numberOfAssignmentsPending :: Lens' HIT (Maybe Int)

-- | The ID of the HIT type of this HIT
hit_hITTypeId :: Lens' HIT (Maybe Text)

-- | The date and time the HIT expires.
hit_expiration :: Lens' HIT (Maybe UTCTime)

-- | The amount of time, in seconds, after the Worker submits an assignment
--   for the HIT that the results are automatically approved by Amazon
--   Mechanical Turk. This is the amount of time the Requester has to
--   reject an assignment submitted by a Worker before the assignment is
--   auto-approved and the Worker is paid.
hit_autoApprovalDelayInSeconds :: Lens' HIT (Maybe Integer)

-- | An arbitrary data field the Requester who created the HIT can use.
--   This field is visible only to the creator of the HIT.
hit_requesterAnnotation :: Lens' HIT (Maybe Text)

-- | The status of the HIT and its assignments. Valid Values are Assignable
--   | Unassignable | Reviewable | Reviewing | Disposed.
hit_hITStatus :: Lens' HIT (Maybe HITStatus)

-- | The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
hit_maxAssignments :: Lens' HIT (Maybe Int)

-- | The number of assignments for this HIT that have been approved or
--   rejected.
hit_numberOfAssignmentsCompleted :: Lens' HIT (Maybe Int)

-- | Undocumented member.
hit_reward :: Lens' HIT (Maybe Text)

-- | One or more words or phrases that describe the HIT, separated by
--   commas. Search terms similar to the keywords of a HIT are more likely
--   to have the HIT in the search results.
hit_keywords :: Lens' HIT (Maybe Text)

-- | The ID of the HIT Layout of this HIT.
hit_hITLayoutId :: Lens' HIT (Maybe Text)

-- | Conditions that a Worker's Qualifications must meet in order to accept
--   the HIT. A HIT can have between zero and ten Qualification
--   requirements. All requirements must be met in order for a Worker to
--   accept the HIT. Additionally, other actions can be restricted using
--   the <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
hit_qualificationRequirements :: Lens' HIT (Maybe [QualificationRequirement])

-- | The title of the HIT.
hit_title :: Lens' HIT (Maybe Text)

-- | A unique identifier for the HIT.
hit_hITId :: Lens' HIT (Maybe Text)

-- | Indicates the review status of the HIT. Valid Values are NotReviewed |
--   MarkedForReview | ReviewedAppropriate | ReviewedInappropriate.
hit_hITReviewStatus :: Lens' HIT (Maybe HITReviewStatus)

-- | The number of assignments for this HIT that are available for Workers
--   to accept.
hit_numberOfAssignmentsAvailable :: Lens' HIT (Maybe Int)

-- | A general description of the HIT.
hit_description :: Lens' HIT (Maybe Text)

-- | The data the Worker completing the HIT uses produce the results. This
--   is either either a QuestionForm, HTMLQuestion or an ExternalQuestion
--   data structure.
hit_question :: Lens' HIT (Maybe Text)

-- | The length of time, in seconds, that a Worker has to complete the HIT
--   after accepting it.
hit_assignmentDurationInSeconds :: Lens' HIT (Maybe Integer)

-- | The name of the parameter in the HITLayout.
hITLayoutParameter_name :: Lens' HITLayoutParameter Text

-- | The value substituted for the parameter referenced in the HITLayout.
hITLayoutParameter_value :: Lens' HITLayoutParameter Text

-- | The state or subdivision of the locale. A valid ISO 3166-2 subdivision
--   code. For example, the code WA refers to the state of Washington.
locale_subdivision :: Lens' Locale (Maybe Text)

-- | The country of the locale. Must be a valid ISO 3166 country code. For
--   example, the code US refers to the United States of America.
locale_country :: Lens' Locale Text

-- | The target for notification messages. The Destination’s format is
--   determined by the specified Transport:
--   
--   <ul>
--   <li>When Transport is Email, the Destination is your email
--   address.</li>
--   <li>When Transport is SQS, the Destination is your queue URL.</li>
--   <li>When Transport is SNS, the Destination is the ARN of your
--   topic.</li>
--   </ul>
notificationSpecification_destination :: Lens' NotificationSpecification Text

-- | The method Amazon Mechanical Turk uses to send the notification. Valid
--   Values: Email | SQS | SNS.
notificationSpecification_transport :: Lens' NotificationSpecification NotificationTransport

-- | The version of the Notification API to use. Valid value is 2006-05-05.
notificationSpecification_version :: Lens' NotificationSpecification Text

-- | The list of events that should cause notifications to be sent. Valid
--   Values: AssignmentAccepted | AssignmentAbandoned | AssignmentReturned
--   | AssignmentSubmitted | AssignmentRejected | AssignmentApproved |
--   HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired |
--   Ping. The Ping event is only valid for the SendTestEventNotification
--   operation.
notificationSpecification_eventTypes :: Lens' NotificationSpecification [EventType]

-- | A message detailing the reason the Worker could not be notified.
notifyWorkersFailureStatus_notifyWorkersFailureMessage :: Lens' NotifyWorkersFailureStatus (Maybe Text)

-- | Encoded value for the failure type.
notifyWorkersFailureStatus_notifyWorkersFailureCode :: Lens' NotifyWorkersFailureStatus (Maybe NotifyWorkersFailureCode)

-- | The ID of the Worker.
notifyWorkersFailureStatus_workerId :: Lens' NotifyWorkersFailureStatus (Maybe Text)

-- | The list of answers to the question specified in the MapEntry Key
--   element. The Worker must match all values in order for the answer to
--   be scored correctly.
parameterMapEntry_values :: Lens' ParameterMapEntry (Maybe [Text])

-- | The QuestionID from the HIT that is used to identify which question
--   requires Mechanical Turk to score as part of the
--   ScoreMyKnownAnswers/2011-09-01 Review Policy.
parameterMapEntry_key :: Lens' ParameterMapEntry (Maybe Text)

-- | The list of values of the Parameter
policyParameter_values :: Lens' PolicyParameter (Maybe [Text])

-- | List of ParameterMapEntry objects.
policyParameter_mapEntries :: Lens' PolicyParameter (Maybe [ParameterMapEntry])

-- | Name of the parameter from the list of Review Polices.
policyParameter_key :: Lens' PolicyParameter (Maybe Text)

-- | The status of the Qualification. Valid values are Granted | Revoked.
qualification_status :: Lens' Qualification (Maybe QualificationStatus)

-- | The value (score) of the Qualification, if the Qualification has an
--   integer value.
qualification_integerValue :: Lens' Qualification (Maybe Int)

-- | Undocumented member.
qualification_localeValue :: Lens' Qualification (Maybe Locale)

-- | The ID of the Qualification type for the Qualification.
qualification_qualificationTypeId :: Lens' Qualification (Maybe Text)

-- | The date and time the Qualification was granted to the Worker. If the
--   Worker's Qualification was revoked, and then re-granted based on a new
--   Qualification request, GrantTime is the date and time of the last call
--   to the AcceptQualificationRequest operation.
qualification_grantTime :: Lens' Qualification (Maybe UTCTime)

-- | The ID of the Worker who possesses the Qualification.
qualification_workerId :: Lens' Qualification (Maybe Text)

-- | The ID of the Qualification request, a unique identifier generated
--   when the request was submitted.
qualificationRequest_qualificationRequestId :: Lens' QualificationRequest (Maybe Text)

-- | The contents of the Qualification test that was presented to the
--   Worker, if the type has a test and the Worker has submitted answers.
--   This value is identical to the QuestionForm associated with the
--   Qualification type at the time the Worker requests the Qualification.
qualificationRequest_test :: Lens' QualificationRequest (Maybe Text)

-- | The ID of the Qualification type the Worker is requesting, as returned
--   by the CreateQualificationType operation.
qualificationRequest_qualificationTypeId :: Lens' QualificationRequest (Maybe Text)

-- | The Worker's answers for the Qualification type's test contained in a
--   QuestionFormAnswers document, if the type has a test and the Worker
--   has submitted answers. If the Worker does not provide any answers,
--   Answer may be empty.
qualificationRequest_answer :: Lens' QualificationRequest (Maybe Text)

-- | The ID of the Worker requesting the Qualification.
qualificationRequest_workerId :: Lens' QualificationRequest (Maybe Text)

-- | The date and time the Qualification request had a status of Submitted.
--   This is either the time the Worker submitted answers for a
--   Qualification test, or the time the Worker requested the Qualification
--   if the Qualification type does not have a test.
qualificationRequest_submitTime :: Lens' QualificationRequest (Maybe UTCTime)

-- | The locale value to compare against the Qualification's value. The
--   local value must be a valid ISO 3166 country code or supports ISO
--   3166-2 subdivisions. LocaleValue can only be used with a Worker_Locale
--   QualificationType ID. LocaleValue can only be used with the EqualTo,
--   NotEqualTo, In, and NotIn comparators. You must only use a single
--   LocaleValue element when using the EqualTo or NotEqualTo comparators.
--   When performing a set comparison by using the In or the NotIn
--   comparator, you can use up to 30 LocaleValue elements in a
--   QualificationRequirement data structure.
qualificationRequirement_localeValues :: Lens' QualificationRequirement (Maybe [Locale])

-- | Setting this attribute prevents Workers whose Qualifications do not
--   meet this QualificationRequirement from taking the specified action.
--   Valid arguments include "Accept" (Worker cannot accept the HIT, but
--   can preview the HIT and see it in their search results),
--   "PreviewAndAccept" (Worker cannot accept or preview the HIT, but can
--   see the HIT in their search results), and "DiscoverPreviewAndAccept"
--   (Worker cannot accept, preview, or see the HIT in their search
--   results). It's possible for you to create a HIT with multiple
--   QualificationRequirements (which can have different values for the
--   ActionGuarded attribute). In this case, the Worker is only permitted
--   to perform an action when they have met all QualificationRequirements
--   guarding the action. The actions in the order of least restrictive to
--   most restrictive are Discover, Preview and Accept. For example, if a
--   Worker meets all QualificationRequirements that are set to
--   DiscoverPreviewAndAccept, but do not meet all requirements that are
--   set with PreviewAndAccept, then the Worker will be able to Discover,
--   i.e. see the HIT in their search result, but will not be able to
--   Preview or Accept the HIT. ActionsGuarded should not be used in
--   combination with the <tt>RequiredToPreview</tt> field.
qualificationRequirement_actionsGuarded :: Lens' QualificationRequirement (Maybe HITAccessActions)

-- | DEPRECATED: Use the <tt>ActionsGuarded</tt> field instead. If
--   RequiredToPreview is true, the question data for the HIT will not be
--   shown when a Worker whose Qualifications do not meet this requirement
--   tries to preview the HIT. That is, a Worker's Qualifications must meet
--   all of the requirements for which RequiredToPreview is true in order
--   to preview the HIT. If a Worker meets all of the requirements where
--   RequiredToPreview is true (or if there are no such requirements), but
--   does not meet all of the requirements for the HIT, the Worker will be
--   allowed to preview the HIT's question data, but will not be allowed to
--   accept and complete the HIT. The default is false. This should not be
--   used in combination with the <tt>ActionsGuarded</tt> field.
qualificationRequirement_requiredToPreview :: Lens' QualificationRequirement (Maybe Bool)

-- | The integer value to compare against the Qualification's value.
--   IntegerValue must not be present if Comparator is Exists or
--   DoesNotExist. IntegerValue can only be used if the Qualification type
--   has an integer value; it cannot be used with the Worker_Locale
--   QualificationType ID. When performing a set comparison by using the In
--   or the NotIn comparator, you can use up to 15 IntegerValue elements in
--   a QualificationRequirement data structure.
qualificationRequirement_integerValues :: Lens' QualificationRequirement (Maybe [Int])

-- | The ID of the Qualification type for the requirement.
qualificationRequirement_qualificationTypeId :: Lens' QualificationRequirement Text

-- | The kind of comparison to make against a Qualification's value. You
--   can compare a Qualification's value to an IntegerValue to see if it is
--   LessThan, LessThanOrEqualTo, GreaterThan, GreaterThanOrEqualTo,
--   EqualTo, or NotEqualTo the IntegerValue. You can compare it to a
--   LocaleValue to see if it is EqualTo, or NotEqualTo the LocaleValue.
--   You can check to see if the value is In or NotIn a set of IntegerValue
--   or LocaleValue values. Lastly, a Qualification requirement can also
--   test if a Qualification Exists or DoesNotExist in the user's profile,
--   regardless of its value.
qualificationRequirement_comparator :: Lens' QualificationRequirement Comparator

-- | The date and time the Qualification type was created.
qualificationType_creationTime :: Lens' QualificationType (Maybe UTCTime)

-- | The amount of time, in seconds, given to a Worker to complete the
--   Qualification test, beginning from the time the Worker requests the
--   Qualification.
qualificationType_testDurationInSeconds :: Lens' QualificationType (Maybe Integer)

-- | The status of the Qualification type. A Qualification type's status
--   determines if users can apply to receive a Qualification of this type,
--   and if HITs can be created with requirements based on this type. Valid
--   values are Active | Inactive.
qualificationType_qualificationTypeStatus :: Lens' QualificationType (Maybe QualificationTypeStatus)

-- | The answers to the Qualification test specified in the Test parameter.
qualificationType_answerKey :: Lens' QualificationType (Maybe Text)

-- | The questions for a Qualification test associated with this
--   Qualification type that a user can take to obtain a Qualification of
--   this type. This parameter must be specified if AnswerKey is present. A
--   Qualification type cannot have both a specified Test parameter and an
--   AutoGranted value of true.
qualificationType_test :: Lens' QualificationType (Maybe Text)

-- | A unique identifier for the Qualification type. A Qualification type
--   is given a Qualification type ID when you call the
--   CreateQualificationType operation.
qualificationType_qualificationTypeId :: Lens' QualificationType (Maybe Text)

-- | The name of the Qualification type. The type name is used to identify
--   the type, and to find the type using a Qualification type search.
qualificationType_name :: Lens' QualificationType (Maybe Text)

-- | One or more words or phrases that describe theQualification type,
--   separated by commas. The Keywords make the type easier to find using a
--   search.
qualificationType_keywords :: Lens' QualificationType (Maybe Text)

-- | Specifies that requests for the Qualification type are granted
--   immediately, without prompting the Worker with a Qualification test.
--   Valid values are True | False.
qualificationType_autoGranted :: Lens' QualificationType (Maybe Bool)

-- | The Qualification integer value to use for automatically granted
--   Qualifications, if AutoGranted is true. This is 1 by default.
qualificationType_autoGrantedValue :: Lens' QualificationType (Maybe Int)

-- | A long description for the Qualification type.
qualificationType_description :: Lens' QualificationType (Maybe Text)

-- | Specifies whether the Qualification type is one that a user can
--   request through the Amazon Mechanical Turk web site, such as by taking
--   a Qualification test. This value is False for Qualifications assigned
--   automatically by the system. Valid values are True | False.
qualificationType_isRequestable :: Lens' QualificationType (Maybe Bool)

-- | The amount of time, in seconds, Workers must wait after taking the
--   Qualification test before they can take it again. Workers can take a
--   Qualification test multiple times if they were not granted the
--   Qualification from a previous attempt, or if the test offers a
--   gradient score and they want a better score. If not specified, retries
--   are disabled and Workers can request a Qualification only once.
qualificationType_retryDelayInSeconds :: Lens' QualificationType (Maybe Integer)

-- | The current disposition of the action: INTENDED, SUCCEEDED, FAILED, or
--   CANCELLED.
reviewActionDetail_status :: Lens' ReviewActionDetail (Maybe ReviewActionStatus)

-- | The specific HITId or AssignmentID targeted by the action.
reviewActionDetail_targetId :: Lens' ReviewActionDetail (Maybe Text)

-- | The unique identifier for the action.
reviewActionDetail_actionId :: Lens' ReviewActionDetail (Maybe Text)

-- | The type of object in TargetId.
reviewActionDetail_targetType :: Lens' ReviewActionDetail (Maybe Text)

-- | A description of the outcome of the review.
reviewActionDetail_result :: Lens' ReviewActionDetail (Maybe Text)

-- | The nature of the action itself. The Review Policy is responsible for
--   examining the HIT and Assignments, emitting results, and deciding
--   which other actions will be necessary.
reviewActionDetail_actionName :: Lens' ReviewActionDetail (Maybe Text)

-- | The date when the action was completed.
reviewActionDetail_completeTime :: Lens' ReviewActionDetail (Maybe UTCTime)

-- | Present only when the Results have a FAILED Status.
reviewActionDetail_errorCode :: Lens' ReviewActionDetail (Maybe Text)

-- | Name of the parameter from the Review policy.
reviewPolicy_parameters :: Lens' ReviewPolicy (Maybe [PolicyParameter])

-- | Name of a Review Policy: SimplePlurality/2011-09-01 or
--   ScoreMyKnownAnswers/2011-09-01
reviewPolicy_policyName :: Lens' ReviewPolicy Text

-- | A list of ReviewAction objects for each action specified in the Review
--   Policy.
reviewReport_reviewActions :: Lens' ReviewReport (Maybe [ReviewActionDetail])

-- | A list of ReviewResults objects for each action specified in the
--   Review Policy.
reviewReport_reviewResults :: Lens' ReviewReport (Maybe [ReviewResultDetail])

-- | The values of Key provided by the review policies you have selected.
reviewResultDetail_value :: Lens' ReviewResultDetail (Maybe Text)

-- | A unique identifier of the Review action result.
reviewResultDetail_actionId :: Lens' ReviewResultDetail (Maybe Text)

-- | The type of the object from the SubjectId field.
reviewResultDetail_subjectType :: Lens' ReviewResultDetail (Maybe Text)

-- | Key identifies the particular piece of reviewed information.
reviewResultDetail_key :: Lens' ReviewResultDetail (Maybe Text)

-- | Specifies the QuestionId the result is describing. Depending on
--   whether the TargetType is a HIT or Assignment this results could
--   specify multiple values. If TargetType is HIT and QuestionId is
--   absent, then the result describes results of the HIT, including the
--   HIT agreement score. If ObjectType is Assignment and QuestionId is
--   absent, then the result describes the Worker's performance on the HIT.
reviewResultDetail_questionId :: Lens' ReviewResultDetail (Maybe Text)

-- | The HITID or AssignmentId about which this result was taken. Note that
--   HIT-level Review Policies will often emit results about both the HIT
--   itself and its Assignments, while Assignment-level review policies
--   generally only emit results about the Assignment itself.
reviewResultDetail_subjectId :: Lens' ReviewResultDetail (Maybe Text)

-- | A message explaining the reason the Worker was blocked.
workerBlock_reason :: Lens' WorkerBlock (Maybe Text)

-- | The ID of the Worker who accepted the HIT.
workerBlock_workerId :: Lens' WorkerBlock (Maybe Text)


module Amazonka.MechanicalTurk.Waiters


-- | Derived from API version <tt>2017-01-17</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   Amazon Mechanical Turk API Reference
module Amazonka.MechanicalTurk

-- | API version <tt>2017-01-17</tt> of the Amazon Mechanical Turk SDK
--   configuration.
defaultService :: Service

-- | Amazon Mechanical Turk is temporarily unable to process your request.
--   Try your call again.
_ServiceFault :: AsError a => Getting (First ServiceError) a ServiceError

-- | Your request is invalid.
_RequestError :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newApproveAssignment</a> smart constructor.
data ApproveAssignment
ApproveAssignment' :: Maybe Bool -> Maybe Text -> Text -> ApproveAssignment

-- | Create a value of <a>ApproveAssignment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:overrideRejection:ApproveAssignment'</a>,
--   <a>approveAssignment_overrideRejection</a> - A flag indicating that an
--   assignment should be approved even if it was previously rejected.
--   Defaults to <tt>False</tt>.
--   
--   <a>$sel:requesterFeedback:ApproveAssignment'</a>,
--   <a>approveAssignment_requesterFeedback</a> - A message for the Worker,
--   which the Worker can see in the Status section of the web site.
--   
--   <a>$sel:assignmentId:ApproveAssignment'</a>,
--   <a>approveAssignment_assignmentId</a> - The ID of the assignment. The
--   assignment must correspond to a HIT created by the Requester.
newApproveAssignment :: Text -> ApproveAssignment

-- | <i>See:</i> <a>newApproveAssignmentResponse</a> smart constructor.
data ApproveAssignmentResponse
ApproveAssignmentResponse' :: Int -> ApproveAssignmentResponse

-- | Create a value of <a>ApproveAssignmentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:ApproveAssignmentResponse'</a>,
--   <a>approveAssignmentResponse_httpStatus</a> - The response's http
--   status code.
newApproveAssignmentResponse :: Int -> ApproveAssignmentResponse

-- | <i>See:</i> <a>newListReviewPolicyResultsForHIT</a> smart constructor.
data ListReviewPolicyResultsForHIT
ListReviewPolicyResultsForHIT' :: Maybe Bool -> Maybe [ReviewPolicyLevel] -> Maybe Bool -> Maybe Text -> Maybe Natural -> Text -> ListReviewPolicyResultsForHIT

-- | Create a value of <a>ListReviewPolicyResultsForHIT</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:retrieveResults:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_retrieveResults</a> - Specify if the
--   operation should retrieve a list of the results computed by the Review
--   Policies.
--   
--   <a>$sel:policyLevels:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_policyLevels</a> - The Policy
--   Level(s) to retrieve review results for - HIT or Assignment. If
--   omitted, the default behavior is to retrieve all data for both policy
--   levels. For a list of all the described policies, see Review Policies.
--   
--   <a>$sel:retrieveActions:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_retrieveActions</a> - Specify if the
--   operation should retrieve a list of the actions taken executing the
--   Review Policies and their outcomes.
--   
--   <a>$sel:nextToken:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_nextToken</a> - Pagination token
--   
--   <a>$sel:maxResults:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_maxResults</a> - Limit the number of
--   results returned.
--   
--   <a>$sel:hITId:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHIT_hITId</a> - The unique identifier of
--   the HIT to retrieve review results for.
newListReviewPolicyResultsForHIT :: Text -> ListReviewPolicyResultsForHIT

-- | <i>See:</i> <a>newListReviewPolicyResultsForHITResponse</a> smart
--   constructor.
data ListReviewPolicyResultsForHITResponse
ListReviewPolicyResultsForHITResponse' :: Maybe ReviewPolicy -> Maybe ReviewReport -> Maybe Text -> Maybe ReviewReport -> Maybe Text -> Maybe ReviewPolicy -> Int -> ListReviewPolicyResultsForHITResponse

-- | Create a value of <a>ListReviewPolicyResultsForHITResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITReviewPolicy:ListReviewPolicyResultsForHITResponse'</a>,
--   <a>listReviewPolicyResultsForHITResponse_hITReviewPolicy</a> - The
--   name of the HIT-level Review Policy. This contains only the PolicyName
--   element.
--   
--   <a>$sel:hITReviewReport:ListReviewPolicyResultsForHITResponse'</a>,
--   <a>listReviewPolicyResultsForHITResponse_hITReviewReport</a> -
--   Contains both ReviewResult and ReviewAction elements for a particular
--   HIT.
--   
--   <a>$sel:nextToken:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHITResponse_nextToken</a> - Undocumented
--   member.
--   
--   
--   <a>$sel:assignmentReviewReport:ListReviewPolicyResultsForHITResponse'</a>,
--   <a>listReviewPolicyResultsForHITResponse_assignmentReviewReport</a> -
--   Contains both ReviewResult and ReviewAction elements for an
--   Assignment.
--   
--   <a>$sel:hITId:ListReviewPolicyResultsForHIT'</a>,
--   <a>listReviewPolicyResultsForHITResponse_hITId</a> - The HITId of the
--   HIT for which results have been returned.
--   
--   
--   <a>$sel:assignmentReviewPolicy:ListReviewPolicyResultsForHITResponse'</a>,
--   <a>listReviewPolicyResultsForHITResponse_assignmentReviewPolicy</a> -
--   The name of the Assignment-level Review Policy. This contains only the
--   PolicyName element.
--   
--   <a>$sel:httpStatus:ListReviewPolicyResultsForHITResponse'</a>,
--   <a>listReviewPolicyResultsForHITResponse_httpStatus</a> - The
--   response's http status code.
newListReviewPolicyResultsForHITResponse :: Int -> ListReviewPolicyResultsForHITResponse

-- | <i>See:</i> <a>newListHITs</a> smart constructor.
data ListHITs
ListHITs' :: Maybe Text -> Maybe Natural -> ListHITs

-- | Create a value of <a>ListHITs</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHITs'</a>, <a>listHITs_nextToken</a> -
--   Pagination token
--   
--   <a>$sel:maxResults:ListHITs'</a>, <a>listHITs_maxResults</a> -
--   Undocumented member.
newListHITs :: ListHITs

-- | <i>See:</i> <a>newListHITsResponse</a> smart constructor.
data ListHITsResponse
ListHITsResponse' :: Maybe Text -> Maybe Int -> Maybe [HIT] -> Int -> ListHITsResponse

-- | Create a value of <a>ListHITsResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHITs'</a>, <a>listHITsResponse_nextToken</a> -
--   Undocumented member.
--   
--   <a>$sel:numResults:ListHITsResponse'</a>,
--   <a>listHITsResponse_numResults</a> - The number of HITs on this page
--   in the filtered results list, equivalent to the number of HITs being
--   returned by this call.
--   
--   <a>$sel:hITs:ListHITsResponse'</a>, <a>listHITsResponse_hITs</a> - The
--   list of HIT elements returned by the query.
--   
--   <a>$sel:httpStatus:ListHITsResponse'</a>,
--   <a>listHITsResponse_httpStatus</a> - The response's http status code.
newListHITsResponse :: Int -> ListHITsResponse

-- | <i>See:</i> <a>newListWorkersWithQualificationType</a> smart
--   constructor.
data ListWorkersWithQualificationType
ListWorkersWithQualificationType' :: Maybe QualificationStatus -> Maybe Text -> Maybe Natural -> Text -> ListWorkersWithQualificationType

-- | Create a value of <a>ListWorkersWithQualificationType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListWorkersWithQualificationType'</a>,
--   <a>listWorkersWithQualificationType_status</a> - The status of the
--   Qualifications to return. Can be <tt>Granted | Revoked</tt>.
--   
--   <a>$sel:nextToken:ListWorkersWithQualificationType'</a>,
--   <a>listWorkersWithQualificationType_nextToken</a> - Pagination Token
--   
--   <a>$sel:maxResults:ListWorkersWithQualificationType'</a>,
--   <a>listWorkersWithQualificationType_maxResults</a> - Limit the number
--   of results returned.
--   
--   <a>$sel:qualificationTypeId:ListWorkersWithQualificationType'</a>,
--   <a>listWorkersWithQualificationType_qualificationTypeId</a> - The ID
--   of the Qualification type of the Qualifications to return.
newListWorkersWithQualificationType :: Text -> ListWorkersWithQualificationType

-- | <i>See:</i> <a>newListWorkersWithQualificationTypeResponse</a> smart
--   constructor.
data ListWorkersWithQualificationTypeResponse
ListWorkersWithQualificationTypeResponse' :: Maybe Text -> Maybe Int -> Maybe [Qualification] -> Int -> ListWorkersWithQualificationTypeResponse

-- | Create a value of <a>ListWorkersWithQualificationTypeResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkersWithQualificationType'</a>,
--   <a>listWorkersWithQualificationTypeResponse_nextToken</a> -
--   Undocumented member.
--   
--   <a>$sel:numResults:ListWorkersWithQualificationTypeResponse'</a>,
--   <a>listWorkersWithQualificationTypeResponse_numResults</a> - The
--   number of Qualifications on this page in the filtered results list,
--   equivalent to the number of Qualifications being returned by this
--   call.
--   
--   <a>$sel:qualifications:ListWorkersWithQualificationTypeResponse'</a>,
--   <a>listWorkersWithQualificationTypeResponse_qualifications</a> - The
--   list of Qualification elements returned by this call.
--   
--   <a>$sel:httpStatus:ListWorkersWithQualificationTypeResponse'</a>,
--   <a>listWorkersWithQualificationTypeResponse_httpStatus</a> - The
--   response's http status code.
newListWorkersWithQualificationTypeResponse :: Int -> ListWorkersWithQualificationTypeResponse

-- | <i>See:</i> <a>newDeleteHIT</a> smart constructor.
data DeleteHIT
DeleteHIT' :: Text -> DeleteHIT

-- | Create a value of <a>DeleteHIT</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITId:DeleteHIT'</a>, <a>deleteHIT_hITId</a> - The ID of the
--   HIT to be deleted.
newDeleteHIT :: Text -> DeleteHIT

-- | <i>See:</i> <a>newDeleteHITResponse</a> smart constructor.
data DeleteHITResponse
DeleteHITResponse' :: Int -> DeleteHITResponse

-- | Create a value of <a>DeleteHITResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteHITResponse'</a>,
--   <a>deleteHITResponse_httpStatus</a> - The response's http status code.
newDeleteHITResponse :: Int -> DeleteHITResponse

-- | <i>See:</i> <a>newListReviewableHITs</a> smart constructor.
data ListReviewableHITs
ListReviewableHITs' :: Maybe ReviewableHITStatus -> Maybe Text -> Maybe Text -> Maybe Natural -> ListReviewableHITs

-- | Create a value of <a>ListReviewableHITs</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ListReviewableHITs'</a>,
--   <a>listReviewableHITs_status</a> - Can be either <tt>Reviewable</tt>
--   or <tt>Reviewing</tt>. Reviewable is the default value.
--   
--   <a>$sel:hITTypeId:ListReviewableHITs'</a>,
--   <a>listReviewableHITs_hITTypeId</a> - The ID of the HIT type of the
--   HITs to consider for the query. If not specified, all HITs for the
--   Reviewer are considered
--   
--   <a>$sel:nextToken:ListReviewableHITs'</a>,
--   <a>listReviewableHITs_nextToken</a> - Pagination Token
--   
--   <a>$sel:maxResults:ListReviewableHITs'</a>,
--   <a>listReviewableHITs_maxResults</a> - Limit the number of results
--   returned.
newListReviewableHITs :: ListReviewableHITs

-- | <i>See:</i> <a>newListReviewableHITsResponse</a> smart constructor.
data ListReviewableHITsResponse
ListReviewableHITsResponse' :: Maybe Text -> Maybe Int -> Maybe [HIT] -> Int -> ListReviewableHITsResponse

-- | Create a value of <a>ListReviewableHITsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListReviewableHITs'</a>,
--   <a>listReviewableHITsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:numResults:ListReviewableHITsResponse'</a>,
--   <a>listReviewableHITsResponse_numResults</a> - The number of HITs on
--   this page in the filtered results list, equivalent to the number of
--   HITs being returned by this call.
--   
--   <a>$sel:hITs:ListReviewableHITsResponse'</a>,
--   <a>listReviewableHITsResponse_hITs</a> - The list of HIT elements
--   returned by the query.
--   
--   <a>$sel:httpStatus:ListReviewableHITsResponse'</a>,
--   <a>listReviewableHITsResponse_httpStatus</a> - The response's http
--   status code.
newListReviewableHITsResponse :: Int -> ListReviewableHITsResponse

-- | <i>See:</i> <a>newGetAssignment</a> smart constructor.
data GetAssignment
GetAssignment' :: Text -> GetAssignment

-- | Create a value of <a>GetAssignment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assignmentId:GetAssignment'</a>,
--   <a>getAssignment_assignmentId</a> - The ID of the Assignment to be
--   retrieved.
newGetAssignment :: Text -> GetAssignment

-- | <i>See:</i> <a>newGetAssignmentResponse</a> smart constructor.
data GetAssignmentResponse
GetAssignmentResponse' :: Maybe HIT -> Maybe Assignment -> Int -> GetAssignmentResponse

-- | Create a value of <a>GetAssignmentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hit:GetAssignmentResponse'</a>,
--   <a>getAssignmentResponse_hit</a> - The HIT associated with this
--   assignment. The response includes one HIT element.
--   
--   <a>$sel:assignment:GetAssignmentResponse'</a>,
--   <a>getAssignmentResponse_assignment</a> - The assignment. The response
--   includes one Assignment element.
--   
--   <a>$sel:httpStatus:GetAssignmentResponse'</a>,
--   <a>getAssignmentResponse_httpStatus</a> - The response's http status
--   code.
newGetAssignmentResponse :: Int -> GetAssignmentResponse

-- | <i>See:</i> <a>newDeleteQualificationType</a> smart constructor.
data DeleteQualificationType
DeleteQualificationType' :: Text -> DeleteQualificationType

-- | Create a value of <a>DeleteQualificationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationTypeId:DeleteQualificationType'</a>,
--   <a>deleteQualificationType_qualificationTypeId</a> - The ID of the
--   QualificationType to dispose.
newDeleteQualificationType :: Text -> DeleteQualificationType

-- | <i>See:</i> <a>newDeleteQualificationTypeResponse</a> smart
--   constructor.
data DeleteQualificationTypeResponse
DeleteQualificationTypeResponse' :: Int -> DeleteQualificationTypeResponse

-- | Create a value of <a>DeleteQualificationTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteQualificationTypeResponse'</a>,
--   <a>deleteQualificationTypeResponse_httpStatus</a> - The response's
--   http status code.
newDeleteQualificationTypeResponse :: Int -> DeleteQualificationTypeResponse

-- | <i>See:</i> <a>newUpdateQualificationType</a> smart constructor.
data UpdateQualificationType
UpdateQualificationType' :: Maybe Integer -> Maybe QualificationTypeStatus -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Text -> Maybe Integer -> Text -> UpdateQualificationType

-- | Create a value of <a>UpdateQualificationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testDurationInSeconds:UpdateQualificationType'</a>,
--   <a>updateQualificationType_testDurationInSeconds</a> - The number of
--   seconds the Worker has to complete the Qualification test, starting
--   from the time the Worker requests the Qualification.
--   
--   <a>$sel:qualificationTypeStatus:UpdateQualificationType'</a>,
--   <a>updateQualificationType_qualificationTypeStatus</a> - The new
--   status of the Qualification type - Active | Inactive
--   
--   <a>$sel:answerKey:UpdateQualificationType'</a>,
--   <a>updateQualificationType_answerKey</a> - The answers to the
--   Qualification test specified in the Test parameter, in the form of an
--   AnswerKey data structure.
--   
--   <a>$sel:test:UpdateQualificationType'</a>,
--   <a>updateQualificationType_test</a> - The questions for the
--   Qualification test a Worker must answer correctly to obtain a
--   Qualification of this type. If this parameter is specified,
--   <tt>TestDurationInSeconds</tt> must also be specified.
--   
--   Constraints: Must not be longer than 65535 bytes. Must be a
--   QuestionForm data structure. This parameter cannot be specified if
--   AutoGranted is true.
--   
--   Constraints: None. If not specified, the Worker may request the
--   Qualification without answering any questions.
--   
--   <a>$sel:autoGranted:UpdateQualificationType'</a>,
--   <a>updateQualificationType_autoGranted</a> - Specifies whether
--   requests for the Qualification type are granted immediately, without
--   prompting the Worker with a Qualification test.
--   
--   Constraints: If the Test parameter is specified, this parameter cannot
--   be true.
--   
--   <a>$sel:autoGrantedValue:UpdateQualificationType'</a>,
--   <a>updateQualificationType_autoGrantedValue</a> - The Qualification
--   value to use for automatically granted Qualifications. This parameter
--   is used only if the AutoGranted parameter is true.
--   
--   <a>$sel:description:UpdateQualificationType'</a>,
--   <a>updateQualificationType_description</a> - The new description of
--   the Qualification type.
--   
--   <a>$sel:retryDelayInSeconds:UpdateQualificationType'</a>,
--   <a>updateQualificationType_retryDelayInSeconds</a> - The amount of
--   time, in seconds, that Workers must wait after requesting a
--   Qualification of the specified Qualification type before they can
--   retry the Qualification request. It is not possible to disable retries
--   for a Qualification type after it has been created with retries
--   enabled. If you want to disable retries, you must dispose of the
--   existing retry-enabled Qualification type using
--   DisposeQualificationType and then create a new Qualification type with
--   retries disabled using CreateQualificationType.
--   
--   <a>$sel:qualificationTypeId:UpdateQualificationType'</a>,
--   <a>updateQualificationType_qualificationTypeId</a> - The ID of the
--   Qualification type to update.
newUpdateQualificationType :: Text -> UpdateQualificationType

-- | <i>See:</i> <a>newUpdateQualificationTypeResponse</a> smart
--   constructor.
data UpdateQualificationTypeResponse
UpdateQualificationTypeResponse' :: Maybe QualificationType -> Int -> UpdateQualificationTypeResponse

-- | Create a value of <a>UpdateQualificationTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationType:UpdateQualificationTypeResponse'</a>,
--   <a>updateQualificationTypeResponse_qualificationType</a> - Contains a
--   QualificationType data structure.
--   
--   <a>$sel:httpStatus:UpdateQualificationTypeResponse'</a>,
--   <a>updateQualificationTypeResponse_httpStatus</a> - The response's
--   http status code.
newUpdateQualificationTypeResponse :: Int -> UpdateQualificationTypeResponse

-- | <i>See:</i> <a>newListQualificationTypes</a> smart constructor.
data ListQualificationTypes
ListQualificationTypes' :: Maybe Bool -> Maybe Text -> Maybe Text -> Maybe Natural -> Bool -> ListQualificationTypes

-- | Create a value of <a>ListQualificationTypes</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:mustBeOwnedByCaller:ListQualificationTypes'</a>,
--   <a>listQualificationTypes_mustBeOwnedByCaller</a> - Specifies that
--   only Qualification types that the Requester created are returned. If
--   false, the operation returns all Qualification types.
--   
--   <a>$sel:nextToken:ListQualificationTypes'</a>,
--   <a>listQualificationTypes_nextToken</a> - Undocumented member.
--   
--   <a>$sel:query:ListQualificationTypes'</a>,
--   <a>listQualificationTypes_query</a> - A text query against all of the
--   searchable attributes of Qualification types.
--   
--   <a>$sel:maxResults:ListQualificationTypes'</a>,
--   <a>listQualificationTypes_maxResults</a> - The maximum number of
--   results to return in a single call.
--   
--   <a>$sel:mustBeRequestable:ListQualificationTypes'</a>,
--   <a>listQualificationTypes_mustBeRequestable</a> - Specifies that only
--   Qualification types that a user can request through the Amazon
--   Mechanical Turk web site, such as by taking a Qualification test, are
--   returned as results of the search. Some Qualification types, such as
--   those assigned automatically by the system, cannot be requested
--   directly by users. If false, all Qualification types, including those
--   managed by the system, are considered. Valid values are True | False.
newListQualificationTypes :: Bool -> ListQualificationTypes

-- | <i>See:</i> <a>newListQualificationTypesResponse</a> smart
--   constructor.
data ListQualificationTypesResponse
ListQualificationTypesResponse' :: Maybe [QualificationType] -> Maybe Text -> Maybe Int -> Int -> ListQualificationTypesResponse

-- | Create a value of <a>ListQualificationTypesResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationTypes:ListQualificationTypesResponse'</a>,
--   <a>listQualificationTypesResponse_qualificationTypes</a> - The list of
--   QualificationType elements returned by the query.
--   
--   <a>$sel:nextToken:ListQualificationTypes'</a>,
--   <a>listQualificationTypesResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:numResults:ListQualificationTypesResponse'</a>,
--   <a>listQualificationTypesResponse_numResults</a> - The number of
--   Qualification types on this page in the filtered results list,
--   equivalent to the number of types this operation returns.
--   
--   <a>$sel:httpStatus:ListQualificationTypesResponse'</a>,
--   <a>listQualificationTypesResponse_httpStatus</a> - The response's http
--   status code.
newListQualificationTypesResponse :: Int -> ListQualificationTypesResponse

-- | <i>See:</i> <a>newUpdateHITTypeOfHIT</a> smart constructor.
data UpdateHITTypeOfHIT
UpdateHITTypeOfHIT' :: Text -> Text -> UpdateHITTypeOfHIT

-- | Create a value of <a>UpdateHITTypeOfHIT</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITId:UpdateHITTypeOfHIT'</a>, <a>updateHITTypeOfHIT_hITId</a>
--   - The HIT to update.
--   
--   <a>$sel:hITTypeId:UpdateHITTypeOfHIT'</a>,
--   <a>updateHITTypeOfHIT_hITTypeId</a> - The ID of the new HIT type.
newUpdateHITTypeOfHIT :: Text -> Text -> UpdateHITTypeOfHIT

-- | <i>See:</i> <a>newUpdateHITTypeOfHITResponse</a> smart constructor.
data UpdateHITTypeOfHITResponse
UpdateHITTypeOfHITResponse' :: Int -> UpdateHITTypeOfHITResponse

-- | Create a value of <a>UpdateHITTypeOfHITResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateHITTypeOfHITResponse'</a>,
--   <a>updateHITTypeOfHITResponse_httpStatus</a> - The response's http
--   status code.
newUpdateHITTypeOfHITResponse :: Int -> UpdateHITTypeOfHITResponse

-- | <i>See:</i> <a>newDisassociateQualificationFromWorker</a> smart
--   constructor.
data DisassociateQualificationFromWorker
DisassociateQualificationFromWorker' :: Maybe Text -> Text -> Text -> DisassociateQualificationFromWorker

-- | Create a value of <a>DisassociateQualificationFromWorker</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:DisassociateQualificationFromWorker'</a>,
--   <a>disassociateQualificationFromWorker_reason</a> - A text message
--   that explains why the Qualification was revoked. The user who had the
--   Qualification sees this message.
--   
--   <a>$sel:workerId:DisassociateQualificationFromWorker'</a>,
--   <a>disassociateQualificationFromWorker_workerId</a> - The ID of the
--   Worker who possesses the Qualification to be revoked.
--   
--   <a>$sel:qualificationTypeId:DisassociateQualificationFromWorker'</a>,
--   <a>disassociateQualificationFromWorker_qualificationTypeId</a> - The
--   ID of the Qualification type of the Qualification to be revoked.
newDisassociateQualificationFromWorker :: Text -> Text -> DisassociateQualificationFromWorker

-- | <i>See:</i> <a>newDisassociateQualificationFromWorkerResponse</a>
--   smart constructor.
data DisassociateQualificationFromWorkerResponse
DisassociateQualificationFromWorkerResponse' :: Int -> DisassociateQualificationFromWorkerResponse

-- | Create a value of <a>DisassociateQualificationFromWorkerResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DisassociateQualificationFromWorkerResponse'</a>,
--   <a>disassociateQualificationFromWorkerResponse_httpStatus</a> - The
--   response's http status code.
newDisassociateQualificationFromWorkerResponse :: Int -> DisassociateQualificationFromWorkerResponse

-- | <i>See:</i> <a>newSendTestEventNotification</a> smart constructor.
data SendTestEventNotification
SendTestEventNotification' :: NotificationSpecification -> EventType -> SendTestEventNotification

-- | Create a value of <a>SendTestEventNotification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notification:SendTestEventNotification'</a>,
--   <a>sendTestEventNotification_notification</a> - The notification
--   specification to test. This value is identical to the value you would
--   provide to the UpdateNotificationSettings operation when you establish
--   the notification specification for a HIT type.
--   
--   <a>$sel:testEventType:SendTestEventNotification'</a>,
--   <a>sendTestEventNotification_testEventType</a> - The event to simulate
--   to test the notification specification. This event is included in the
--   test message even if the notification specification does not include
--   the event type. The notification specification does not filter out the
--   test event.
newSendTestEventNotification :: NotificationSpecification -> EventType -> SendTestEventNotification

-- | <i>See:</i> <a>newSendTestEventNotificationResponse</a> smart
--   constructor.
data SendTestEventNotificationResponse
SendTestEventNotificationResponse' :: Int -> SendTestEventNotificationResponse

-- | Create a value of <a>SendTestEventNotificationResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SendTestEventNotificationResponse'</a>,
--   <a>sendTestEventNotificationResponse_httpStatus</a> - The response's
--   http status code.
newSendTestEventNotificationResponse :: Int -> SendTestEventNotificationResponse

-- | <i>See:</i> <a>newNotifyWorkers</a> smart constructor.
data NotifyWorkers
NotifyWorkers' :: Text -> Text -> [Text] -> NotifyWorkers

-- | Create a value of <a>NotifyWorkers</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subject:NotifyWorkers'</a>, <a>notifyWorkers_subject</a> - The
--   subject line of the email message to send. Can include up to 200
--   characters.
--   
--   <a>$sel:messageText:NotifyWorkers'</a>,
--   <a>notifyWorkers_messageText</a> - The text of the email message to
--   send. Can include up to 4,096 characters
--   
--   <a>$sel:workerIds:NotifyWorkers'</a>, <a>notifyWorkers_workerIds</a> -
--   A list of Worker IDs you wish to notify. You can notify upto 100
--   Workers at a time.
newNotifyWorkers :: Text -> Text -> NotifyWorkers

-- | <i>See:</i> <a>newNotifyWorkersResponse</a> smart constructor.
data NotifyWorkersResponse
NotifyWorkersResponse' :: Maybe [NotifyWorkersFailureStatus] -> Int -> NotifyWorkersResponse

-- | Create a value of <a>NotifyWorkersResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyWorkersFailureStatuses:NotifyWorkersResponse'</a>,
--   <a>notifyWorkersResponse_notifyWorkersFailureStatuses</a> - When MTurk
--   sends notifications to the list of Workers, it returns back any
--   failures it encounters in this list of NotifyWorkersFailureStatus
--   objects.
--   
--   <a>$sel:httpStatus:NotifyWorkersResponse'</a>,
--   <a>notifyWorkersResponse_httpStatus</a> - The response's http status
--   code.
newNotifyWorkersResponse :: Int -> NotifyWorkersResponse

-- | <i>See:</i> <a>newCreateHITWithHITType</a> smart constructor.
data CreateHITWithHITType
CreateHITWithHITType' :: Maybe ReviewPolicy -> Maybe Text -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe [HITLayoutParameter] -> Maybe Text -> Maybe ReviewPolicy -> Text -> Integer -> CreateHITWithHITType

-- | Create a value of <a>CreateHITWithHITType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITReviewPolicy:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_hITReviewPolicy</a> - The HIT-level Review
--   Policy applies to the HIT. You can specify for Mechanical Turk to take
--   various actions based on the policy.
--   
--   <a>$sel:uniqueRequestToken:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_uniqueRequestToken</a> - A unique identifier
--   for this request which allows you to retry the call on error without
--   creating duplicate HITs. This is useful in cases such as network
--   timeouts where it is unclear whether or not the call succeeded on the
--   server. If the HIT already exists in the system from a previous call
--   using the same UniqueRequestToken, subsequent calls will return a
--   AWS.MechanicalTurk.HitAlreadyExists error with a message containing
--   the HITId.
--   
--   Note: It is your responsibility to ensure uniqueness of the token. The
--   unique token expires after 24 hours. Subsequent calls using the same
--   UniqueRequestToken made after the 24 hour limit could create duplicate
--   HITs.
--   
--   <a>$sel:requesterAnnotation:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_requesterAnnotation</a> - An arbitrary data
--   field. The RequesterAnnotation parameter lets your application attach
--   arbitrary data to the HIT for tracking purposes. For example, this
--   parameter could be an identifier internal to the Requester's
--   application that corresponds with the HIT.
--   
--   The RequesterAnnotation parameter for a HIT is only visible to the
--   Requester who created the HIT. It is not shown to the Worker, or any
--   other Requester.
--   
--   The RequesterAnnotation parameter may be different for each HIT you
--   submit. It does not affect how your HITs are grouped.
--   
--   <a>$sel:maxAssignments:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_maxAssignments</a> - The number of times the
--   HIT can be accepted and completed before the HIT becomes unavailable.
--   
--   <a>$sel:hITLayoutId:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_hITLayoutId</a> - The HITLayoutId allows you
--   to use a pre-existing HIT design with placeholder values and create an
--   additional HIT by providing those values as HITLayoutParameters.
--   
--   Constraints: Either a Question parameter or a HITLayoutId parameter
--   must be provided.
--   
--   <a>$sel:hITLayoutParameters:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_hITLayoutParameters</a> - If the HITLayoutId
--   is provided, any placeholder values must be filled in with values
--   using the HITLayoutParameter structure. For more information, see
--   HITLayout.
--   
--   <a>$sel:question:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_question</a> - The data the person completing
--   the HIT uses to produce the results.
--   
--   Constraints: Must be a QuestionForm data structure, an
--   ExternalQuestion data structure, or an HTMLQuestion data structure.
--   The XML question data must not be larger than 64 kilobytes (65,535
--   bytes) in size, including whitespace.
--   
--   Either a Question parameter or a HITLayoutId parameter must be
--   provided.
--   
--   <a>$sel:assignmentReviewPolicy:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_assignmentReviewPolicy</a> - The
--   Assignment-level Review Policy applies to the assignments under the
--   HIT. You can specify for Mechanical Turk to take various actions based
--   on the policy.
--   
--   <a>$sel:hITTypeId:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_hITTypeId</a> - The HIT type ID you want to
--   create this HIT with.
--   
--   <a>$sel:lifetimeInSeconds:CreateHITWithHITType'</a>,
--   <a>createHITWithHITType_lifetimeInSeconds</a> - An amount of time, in
--   seconds, after which the HIT is no longer available for users to
--   accept. After the lifetime of the HIT elapses, the HIT no longer
--   appears in HIT searches, even if not all of the assignments for the
--   HIT have been accepted.
newCreateHITWithHITType :: Text -> Integer -> CreateHITWithHITType

-- | <i>See:</i> <a>newCreateHITWithHITTypeResponse</a> smart constructor.
data CreateHITWithHITTypeResponse
CreateHITWithHITTypeResponse' :: Maybe HIT -> Int -> CreateHITWithHITTypeResponse

-- | Create a value of <a>CreateHITWithHITTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hit:CreateHITWithHITTypeResponse'</a>,
--   <a>createHITWithHITTypeResponse_hit</a> - Contains the newly created
--   HIT data. For a description of the HIT data structure as it appears in
--   responses, see the HIT Data Structure documentation.
--   
--   <a>$sel:httpStatus:CreateHITWithHITTypeResponse'</a>,
--   <a>createHITWithHITTypeResponse_httpStatus</a> - The response's http
--   status code.
newCreateHITWithHITTypeResponse :: Int -> CreateHITWithHITTypeResponse

-- | <i>See:</i> <a>newCreateHITType</a> smart constructor.
data CreateHITType
CreateHITType' :: Maybe Integer -> Maybe Text -> Maybe [QualificationRequirement] -> Integer -> Text -> Text -> Text -> CreateHITType

-- | Create a value of <a>CreateHITType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:autoApprovalDelayInSeconds:CreateHITType'</a>,
--   <a>createHITType_autoApprovalDelayInSeconds</a> - The number of
--   seconds after an assignment for the HIT has been submitted, after
--   which the assignment is considered Approved automatically unless the
--   Requester explicitly rejects it.
--   
--   <a>$sel:keywords:CreateHITType'</a>, <a>createHITType_keywords</a> -
--   One or more words or phrases that describe the HIT, separated by
--   commas. These words are used in searches to find HITs.
--   
--   <a>$sel:qualificationRequirements:CreateHITType'</a>,
--   <a>createHITType_qualificationRequirements</a> - Conditions that a
--   Worker's Qualifications must meet in order to accept the HIT. A HIT
--   can have between zero and ten Qualification requirements. All
--   requirements must be met in order for a Worker to accept the HIT.
--   Additionally, other actions can be restricted using the
--   <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
--   
--   <a>$sel:assignmentDurationInSeconds:CreateHITType'</a>,
--   <a>createHITType_assignmentDurationInSeconds</a> - The amount of time,
--   in seconds, that a Worker has to complete the HIT after accepting it.
--   If a Worker does not complete the assignment within the specified
--   duration, the assignment is considered abandoned. If the HIT is still
--   active (that is, its lifetime has not elapsed), the assignment becomes
--   available for other users to find and accept.
--   
--   <a>$sel:reward:CreateHITType'</a>, <a>createHITType_reward</a> - The
--   amount of money the Requester will pay a Worker for successfully
--   completing the HIT.
--   
--   <a>$sel:title:CreateHITType'</a>, <a>createHITType_title</a> - The
--   title of the HIT. A title should be short and descriptive about the
--   kind of task the HIT contains. On the Amazon Mechanical Turk web site,
--   the HIT title appears in search results, and everywhere the HIT is
--   mentioned.
--   
--   <a>$sel:description:CreateHITType'</a>,
--   <a>createHITType_description</a> - A general description of the HIT. A
--   description includes detailed information about the kind of task the
--   HIT contains. On the Amazon Mechanical Turk web site, the HIT
--   description appears in the expanded view of search results, and in the
--   HIT and assignment screens. A good description gives the user enough
--   information to evaluate the HIT before accepting it.
newCreateHITType :: Integer -> Text -> Text -> Text -> CreateHITType

-- | <i>See:</i> <a>newCreateHITTypeResponse</a> smart constructor.
data CreateHITTypeResponse
CreateHITTypeResponse' :: Maybe Text -> Int -> CreateHITTypeResponse

-- | Create a value of <a>CreateHITTypeResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITTypeId:CreateHITTypeResponse'</a>,
--   <a>createHITTypeResponse_hITTypeId</a> - The ID of the newly
--   registered HIT type.
--   
--   <a>$sel:httpStatus:CreateHITTypeResponse'</a>,
--   <a>createHITTypeResponse_httpStatus</a> - The response's http status
--   code.
newCreateHITTypeResponse :: Int -> CreateHITTypeResponse

-- | <i>See:</i> <a>newSendBonus</a> smart constructor.
data SendBonus
SendBonus' :: Maybe Text -> Text -> Text -> Text -> Text -> SendBonus

-- | Create a value of <a>SendBonus</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uniqueRequestToken:SendBonus'</a>,
--   <a>sendBonus_uniqueRequestToken</a> - A unique identifier for this
--   request, which allows you to retry the call on error without granting
--   multiple bonuses. This is useful in cases such as network timeouts
--   where it is unclear whether or not the call succeeded on the server.
--   If the bonus already exists in the system from a previous call using
--   the same UniqueRequestToken, subsequent calls will return an error
--   with a message containing the request ID.
--   
--   <a>$sel:workerId:SendBonus'</a>, <a>sendBonus_workerId</a> - The ID of
--   the Worker being paid the bonus.
--   
--   <a>$sel:bonusAmount:SendBonus'</a>, <a>sendBonus_bonusAmount</a> - The
--   Bonus amount is a US Dollar amount specified using a string (for
--   example, "5" represents $5.00 USD and "101.42" represents $101.42
--   USD). Do not include currency symbols or currency codes.
--   
--   <a>$sel:assignmentId:SendBonus'</a>, <a>sendBonus_assignmentId</a> -
--   The ID of the assignment for which this bonus is paid.
--   
--   <a>$sel:reason:SendBonus'</a>, <a>sendBonus_reason</a> - A message
--   that explains the reason for the bonus payment. The Worker receiving
--   the bonus can see this message.
newSendBonus :: Text -> Text -> Text -> Text -> SendBonus

-- | <i>See:</i> <a>newSendBonusResponse</a> smart constructor.
data SendBonusResponse
SendBonusResponse' :: Int -> SendBonusResponse

-- | Create a value of <a>SendBonusResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:SendBonusResponse'</a>,
--   <a>sendBonusResponse_httpStatus</a> - The response's http status code.
newSendBonusResponse :: Int -> SendBonusResponse

-- | <i>See:</i> <a>newListQualificationRequests</a> smart constructor.
data ListQualificationRequests
ListQualificationRequests' :: Maybe Text -> Maybe Text -> Maybe Natural -> ListQualificationRequests

-- | Create a value of <a>ListQualificationRequests</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListQualificationRequests'</a>,
--   <a>listQualificationRequests_nextToken</a> - Undocumented member.
--   
--   <a>$sel:qualificationTypeId:ListQualificationRequests'</a>,
--   <a>listQualificationRequests_qualificationTypeId</a> - The ID of the
--   QualificationType.
--   
--   <a>$sel:maxResults:ListQualificationRequests'</a>,
--   <a>listQualificationRequests_maxResults</a> - The maximum number of
--   results to return in a single call.
newListQualificationRequests :: ListQualificationRequests

-- | <i>See:</i> <a>newListQualificationRequestsResponse</a> smart
--   constructor.
data ListQualificationRequestsResponse
ListQualificationRequestsResponse' :: Maybe [QualificationRequest] -> Maybe Text -> Maybe Int -> Int -> ListQualificationRequestsResponse

-- | Create a value of <a>ListQualificationRequestsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationRequests:ListQualificationRequestsResponse'</a>,
--   <a>listQualificationRequestsResponse_qualificationRequests</a> - The
--   Qualification request. The response includes one QualificationRequest
--   element for each Qualification request returned by the query.
--   
--   <a>$sel:nextToken:ListQualificationRequests'</a>,
--   <a>listQualificationRequestsResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:numResults:ListQualificationRequestsResponse'</a>,
--   <a>listQualificationRequestsResponse_numResults</a> - The number of
--   Qualification requests on this page in the filtered results list,
--   equivalent to the number of Qualification requests being returned by
--   this call.
--   
--   <a>$sel:httpStatus:ListQualificationRequestsResponse'</a>,
--   <a>listQualificationRequestsResponse_httpStatus</a> - The response's
--   http status code.
newListQualificationRequestsResponse :: Int -> ListQualificationRequestsResponse

-- | <i>See:</i> <a>newUpdateExpirationForHIT</a> smart constructor.
data UpdateExpirationForHIT
UpdateExpirationForHIT' :: Text -> POSIX -> UpdateExpirationForHIT

-- | Create a value of <a>UpdateExpirationForHIT</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITId:UpdateExpirationForHIT'</a>,
--   <a>updateExpirationForHIT_hITId</a> - The HIT to update.
--   
--   <a>$sel:expireAt:UpdateExpirationForHIT'</a>,
--   <a>updateExpirationForHIT_expireAt</a> - The date and time at which
--   you want the HIT to expire
newUpdateExpirationForHIT :: Text -> UTCTime -> UpdateExpirationForHIT

-- | <i>See:</i> <a>newUpdateExpirationForHITResponse</a> smart
--   constructor.
data UpdateExpirationForHITResponse
UpdateExpirationForHITResponse' :: Int -> UpdateExpirationForHITResponse

-- | Create a value of <a>UpdateExpirationForHITResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateExpirationForHITResponse'</a>,
--   <a>updateExpirationForHITResponse_httpStatus</a> - The response's http
--   status code.
newUpdateExpirationForHITResponse :: Int -> UpdateExpirationForHITResponse

-- | <i>See:</i> <a>newRejectAssignment</a> smart constructor.
data RejectAssignment
RejectAssignment' :: Text -> Text -> RejectAssignment

-- | Create a value of <a>RejectAssignment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assignmentId:RejectAssignment'</a>,
--   <a>rejectAssignment_assignmentId</a> - The ID of the assignment. The
--   assignment must correspond to a HIT created by the Requester.
--   
--   <a>$sel:requesterFeedback:RejectAssignment'</a>,
--   <a>rejectAssignment_requesterFeedback</a> - A message for the Worker,
--   which the Worker can see in the Status section of the web site.
newRejectAssignment :: Text -> Text -> RejectAssignment

-- | <i>See:</i> <a>newRejectAssignmentResponse</a> smart constructor.
data RejectAssignmentResponse
RejectAssignmentResponse' :: Int -> RejectAssignmentResponse

-- | Create a value of <a>RejectAssignmentResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RejectAssignmentResponse'</a>,
--   <a>rejectAssignmentResponse_httpStatus</a> - The response's http
--   status code.
newRejectAssignmentResponse :: Int -> RejectAssignmentResponse

-- | <i>See:</i> <a>newListAssignmentsForHIT</a> smart constructor.
data ListAssignmentsForHIT
ListAssignmentsForHIT' :: Maybe [AssignmentStatus] -> Maybe Text -> Maybe Natural -> Text -> ListAssignmentsForHIT

-- | Create a value of <a>ListAssignmentsForHIT</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assignmentStatuses:ListAssignmentsForHIT'</a>,
--   <a>listAssignmentsForHIT_assignmentStatuses</a> - The status of the
--   assignments to return: Submitted | Approved | Rejected
--   
--   <a>$sel:nextToken:ListAssignmentsForHIT'</a>,
--   <a>listAssignmentsForHIT_nextToken</a> - Pagination token
--   
--   <a>$sel:maxResults:ListAssignmentsForHIT'</a>,
--   <a>listAssignmentsForHIT_maxResults</a> - Undocumented member.
--   
--   <a>$sel:hITId:ListAssignmentsForHIT'</a>,
--   <a>listAssignmentsForHIT_hITId</a> - The ID of the HIT.
newListAssignmentsForHIT :: Text -> ListAssignmentsForHIT

-- | <i>See:</i> <a>newListAssignmentsForHITResponse</a> smart constructor.
data ListAssignmentsForHITResponse
ListAssignmentsForHITResponse' :: Maybe Text -> Maybe Int -> Maybe [Assignment] -> Int -> ListAssignmentsForHITResponse

-- | Create a value of <a>ListAssignmentsForHITResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListAssignmentsForHIT'</a>,
--   <a>listAssignmentsForHITResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:numResults:ListAssignmentsForHITResponse'</a>,
--   <a>listAssignmentsForHITResponse_numResults</a> - The number of
--   assignments on the page in the filtered results list, equivalent to
--   the number of assignments returned by this call.
--   
--   <a>$sel:assignments:ListAssignmentsForHITResponse'</a>,
--   <a>listAssignmentsForHITResponse_assignments</a> - The collection of
--   Assignment data structures returned by this call.
--   
--   <a>$sel:httpStatus:ListAssignmentsForHITResponse'</a>,
--   <a>listAssignmentsForHITResponse_httpStatus</a> - The response's http
--   status code.
newListAssignmentsForHITResponse :: Int -> ListAssignmentsForHITResponse

-- | <i>See:</i> <a>newRejectQualificationRequest</a> smart constructor.
data RejectQualificationRequest
RejectQualificationRequest' :: Maybe Text -> Text -> RejectQualificationRequest

-- | Create a value of <a>RejectQualificationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:RejectQualificationRequest'</a>,
--   <a>rejectQualificationRequest_reason</a> - A text message explaining
--   why the request was rejected, to be shown to the Worker who made the
--   request.
--   
--   <a>$sel:qualificationRequestId:RejectQualificationRequest'</a>,
--   <a>rejectQualificationRequest_qualificationRequestId</a> - The ID of
--   the Qualification request, as returned by the
--   <tt>ListQualificationRequests</tt> operation.
newRejectQualificationRequest :: Text -> RejectQualificationRequest

-- | <i>See:</i> <a>newRejectQualificationRequestResponse</a> smart
--   constructor.
data RejectQualificationRequestResponse
RejectQualificationRequestResponse' :: Int -> RejectQualificationRequestResponse

-- | Create a value of <a>RejectQualificationRequestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:RejectQualificationRequestResponse'</a>,
--   <a>rejectQualificationRequestResponse_httpStatus</a> - The response's
--   http status code.
newRejectQualificationRequestResponse :: Int -> RejectQualificationRequestResponse

-- | <i>See:</i> <a>newGetQualificationScore</a> smart constructor.
data GetQualificationScore
GetQualificationScore' :: Text -> Text -> GetQualificationScore

-- | Create a value of <a>GetQualificationScore</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationTypeId:GetQualificationScore'</a>,
--   <a>getQualificationScore_qualificationTypeId</a> - The ID of the
--   QualificationType.
--   
--   <a>$sel:workerId:GetQualificationScore'</a>,
--   <a>getQualificationScore_workerId</a> - The ID of the Worker whose
--   Qualification is being updated.
newGetQualificationScore :: Text -> Text -> GetQualificationScore

-- | <i>See:</i> <a>newGetQualificationScoreResponse</a> smart constructor.
data GetQualificationScoreResponse
GetQualificationScoreResponse' :: Maybe Qualification -> Int -> GetQualificationScoreResponse

-- | Create a value of <a>GetQualificationScoreResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualification:GetQualificationScoreResponse'</a>,
--   <a>getQualificationScoreResponse_qualification</a> - The Qualification
--   data structure of the Qualification assigned to a user, including the
--   Qualification type and the value (score).
--   
--   <a>$sel:httpStatus:GetQualificationScoreResponse'</a>,
--   <a>getQualificationScoreResponse_httpStatus</a> - The response's http
--   status code.
newGetQualificationScoreResponse :: Int -> GetQualificationScoreResponse

-- | <i>See:</i> <a>newGetQualificationType</a> smart constructor.
data GetQualificationType
GetQualificationType' :: Text -> GetQualificationType

-- | Create a value of <a>GetQualificationType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationTypeId:GetQualificationType'</a>,
--   <a>getQualificationType_qualificationTypeId</a> - The ID of the
--   QualificationType.
newGetQualificationType :: Text -> GetQualificationType

-- | <i>See:</i> <a>newGetQualificationTypeResponse</a> smart constructor.
data GetQualificationTypeResponse
GetQualificationTypeResponse' :: Maybe QualificationType -> Int -> GetQualificationTypeResponse

-- | Create a value of <a>GetQualificationTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationType:GetQualificationTypeResponse'</a>,
--   <a>getQualificationTypeResponse_qualificationType</a> - The returned
--   Qualification Type
--   
--   <a>$sel:httpStatus:GetQualificationTypeResponse'</a>,
--   <a>getQualificationTypeResponse_httpStatus</a> - The response's http
--   status code.
newGetQualificationTypeResponse :: Int -> GetQualificationTypeResponse

-- | <i>See:</i> <a>newUpdateHITReviewStatus</a> smart constructor.
data UpdateHITReviewStatus
UpdateHITReviewStatus' :: Maybe Bool -> Text -> UpdateHITReviewStatus

-- | Create a value of <a>UpdateHITReviewStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:revert:UpdateHITReviewStatus'</a>,
--   <a>updateHITReviewStatus_revert</a> - Specifies how to update the HIT
--   status. Default is <tt>False</tt>.
--   
--   <ul>
--   <li>Setting this to false will only transition a HIT from
--   <tt>Reviewable</tt> to <tt>Reviewing</tt></li>
--   <li>Setting this to true will only transition a HIT from
--   <tt>Reviewing</tt> to <tt>Reviewable</tt></li>
--   </ul>
--   
--   <a>$sel:hITId:UpdateHITReviewStatus'</a>,
--   <a>updateHITReviewStatus_hITId</a> - The ID of the HIT to update.
newUpdateHITReviewStatus :: Text -> UpdateHITReviewStatus

-- | <i>See:</i> <a>newUpdateHITReviewStatusResponse</a> smart constructor.
data UpdateHITReviewStatusResponse
UpdateHITReviewStatusResponse' :: Int -> UpdateHITReviewStatusResponse

-- | Create a value of <a>UpdateHITReviewStatusResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateHITReviewStatusResponse'</a>,
--   <a>updateHITReviewStatusResponse_httpStatus</a> - The response's http
--   status code.
newUpdateHITReviewStatusResponse :: Int -> UpdateHITReviewStatusResponse

-- | <i>See:</i> <a>newCreateQualificationType</a> smart constructor.
data CreateQualificationType
CreateQualificationType' :: Maybe Integer -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Integer -> Text -> Text -> QualificationTypeStatus -> CreateQualificationType

-- | Create a value of <a>CreateQualificationType</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:testDurationInSeconds:CreateQualificationType'</a>,
--   <a>createQualificationType_testDurationInSeconds</a> - The number of
--   seconds the Worker has to complete the Qualification test, starting
--   from the time the Worker requests the Qualification.
--   
--   <a>$sel:answerKey:CreateQualificationType'</a>,
--   <a>createQualificationType_answerKey</a> - The answers to the
--   Qualification test specified in the Test parameter, in the form of an
--   AnswerKey data structure.
--   
--   Constraints: Must not be longer than 65535 bytes.
--   
--   Constraints: None. If not specified, you must process Qualification
--   requests manually.
--   
--   <a>$sel:test:CreateQualificationType'</a>,
--   <a>createQualificationType_test</a> - The questions for the
--   Qualification test a Worker must answer correctly to obtain a
--   Qualification of this type. If this parameter is specified,
--   <tt>TestDurationInSeconds</tt> must also be specified.
--   
--   Constraints: Must not be longer than 65535 bytes. Must be a
--   QuestionForm data structure. This parameter cannot be specified if
--   AutoGranted is true.
--   
--   Constraints: None. If not specified, the Worker may request the
--   Qualification without answering any questions.
--   
--   <a>$sel:keywords:CreateQualificationType'</a>,
--   <a>createQualificationType_keywords</a> - One or more words or phrases
--   that describe the Qualification type, separated by commas. The
--   keywords of a type make the type easier to find during a search.
--   
--   <a>$sel:autoGranted:CreateQualificationType'</a>,
--   <a>createQualificationType_autoGranted</a> - Specifies whether
--   requests for the Qualification type are granted immediately, without
--   prompting the Worker with a Qualification test.
--   
--   Constraints: If the Test parameter is specified, this parameter cannot
--   be true.
--   
--   <a>$sel:autoGrantedValue:CreateQualificationType'</a>,
--   <a>createQualificationType_autoGrantedValue</a> - The Qualification
--   value to use for automatically granted Qualifications. This parameter
--   is used only if the AutoGranted parameter is true.
--   
--   <a>$sel:retryDelayInSeconds:CreateQualificationType'</a>,
--   <a>createQualificationType_retryDelayInSeconds</a> - The number of
--   seconds that a Worker must wait after requesting a Qualification of
--   the Qualification type before the worker can retry the Qualification
--   request.
--   
--   Constraints: None. If not specified, retries are disabled and Workers
--   can request a Qualification of this type only once, even if the Worker
--   has not been granted the Qualification. It is not possible to disable
--   retries for a Qualification type after it has been created with
--   retries enabled. If you want to disable retries, you must delete
--   existing retry-enabled Qualification type and then create a new
--   Qualification type with retries disabled.
--   
--   <a>$sel:name:CreateQualificationType'</a>,
--   <a>createQualificationType_name</a> - The name you give to the
--   Qualification type. The type name is used to represent the
--   Qualification to Workers, and to find the type using a Qualification
--   type search. It must be unique across all of your Qualification types.
--   
--   <a>$sel:description:CreateQualificationType'</a>,
--   <a>createQualificationType_description</a> - A long description for
--   the Qualification type. On the Amazon Mechanical Turk website, the
--   long description is displayed when a Worker examines a Qualification
--   type.
--   
--   <a>$sel:qualificationTypeStatus:CreateQualificationType'</a>,
--   <a>createQualificationType_qualificationTypeStatus</a> - The initial
--   status of the Qualification type.
--   
--   Constraints: Valid values are: Active | Inactive
newCreateQualificationType :: Text -> Text -> QualificationTypeStatus -> CreateQualificationType

-- | <i>See:</i> <a>newCreateQualificationTypeResponse</a> smart
--   constructor.
data CreateQualificationTypeResponse
CreateQualificationTypeResponse' :: Maybe QualificationType -> Int -> CreateQualificationTypeResponse

-- | Create a value of <a>CreateQualificationTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationType:CreateQualificationTypeResponse'</a>,
--   <a>createQualificationTypeResponse_qualificationType</a> - The created
--   Qualification type, returned as a QualificationType data structure.
--   
--   <a>$sel:httpStatus:CreateQualificationTypeResponse'</a>,
--   <a>createQualificationTypeResponse_httpStatus</a> - The response's
--   http status code.
newCreateQualificationTypeResponse :: Int -> CreateQualificationTypeResponse

-- | <i>See:</i> <a>newAcceptQualificationRequest</a> smart constructor.
data AcceptQualificationRequest
AcceptQualificationRequest' :: Maybe Int -> Text -> AcceptQualificationRequest

-- | Create a value of <a>AcceptQualificationRequest</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerValue:AcceptQualificationRequest'</a>,
--   <a>acceptQualificationRequest_integerValue</a> - The value of the
--   Qualification. You can omit this value if you are using the presence
--   or absence of the Qualification as the basis for a HIT requirement.
--   
--   <a>$sel:qualificationRequestId:AcceptQualificationRequest'</a>,
--   <a>acceptQualificationRequest_qualificationRequestId</a> - The ID of
--   the Qualification request, as returned by the
--   <tt>GetQualificationRequests</tt> operation.
newAcceptQualificationRequest :: Text -> AcceptQualificationRequest

-- | <i>See:</i> <a>newAcceptQualificationRequestResponse</a> smart
--   constructor.
data AcceptQualificationRequestResponse
AcceptQualificationRequestResponse' :: Int -> AcceptQualificationRequestResponse

-- | Create a value of <a>AcceptQualificationRequestResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AcceptQualificationRequestResponse'</a>,
--   <a>acceptQualificationRequestResponse_httpStatus</a> - The response's
--   http status code.
newAcceptQualificationRequestResponse :: Int -> AcceptQualificationRequestResponse

-- | <i>See:</i> <a>newGetFileUploadURL</a> smart constructor.
data GetFileUploadURL
GetFileUploadURL' :: Text -> Text -> GetFileUploadURL

-- | Create a value of <a>GetFileUploadURL</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:assignmentId:GetFileUploadURL'</a>,
--   <a>getFileUploadURL_assignmentId</a> - The ID of the assignment that
--   contains the question with a FileUploadAnswer.
--   
--   <a>$sel:questionIdentifier:GetFileUploadURL'</a>,
--   <a>getFileUploadURL_questionIdentifier</a> - The identifier of the
--   question with a FileUploadAnswer, as specified in the QuestionForm of
--   the HIT.
newGetFileUploadURL :: Text -> Text -> GetFileUploadURL

-- | <i>See:</i> <a>newGetFileUploadURLResponse</a> smart constructor.
data GetFileUploadURLResponse
GetFileUploadURLResponse' :: Maybe Text -> Int -> GetFileUploadURLResponse

-- | Create a value of <a>GetFileUploadURLResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:fileUploadURL:GetFileUploadURLResponse'</a>,
--   <a>getFileUploadURLResponse_fileUploadURL</a> - A temporary URL for
--   the file that the Worker uploaded for the answer.
--   
--   <a>$sel:httpStatus:GetFileUploadURLResponse'</a>,
--   <a>getFileUploadURLResponse_httpStatus</a> - The response's http
--   status code.
newGetFileUploadURLResponse :: Int -> GetFileUploadURLResponse

-- | <i>See:</i> <a>newCreateAdditionalAssignmentsForHIT</a> smart
--   constructor.
data CreateAdditionalAssignmentsForHIT
CreateAdditionalAssignmentsForHIT' :: Maybe Text -> Text -> Int -> CreateAdditionalAssignmentsForHIT

-- | Create a value of <a>CreateAdditionalAssignmentsForHIT</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:uniqueRequestToken:CreateAdditionalAssignmentsForHIT'</a>,
--   <a>createAdditionalAssignmentsForHIT_uniqueRequestToken</a> - A unique
--   identifier for this request, which allows you to retry the call on
--   error without extending the HIT multiple times. This is useful in
--   cases such as network timeouts where it is unclear whether or not the
--   call succeeded on the server. If the extend HIT already exists in the
--   system from a previous call using the same
--   <tt>UniqueRequestToken</tt>, subsequent calls will return an error
--   with a message containing the request ID.
--   
--   <a>$sel:hITId:CreateAdditionalAssignmentsForHIT'</a>,
--   <a>createAdditionalAssignmentsForHIT_hITId</a> - The ID of the HIT to
--   extend.
--   
--   
--   <a>$sel:numberOfAdditionalAssignments:CreateAdditionalAssignmentsForHIT'</a>,
--   <a>createAdditionalAssignmentsForHIT_numberOfAdditionalAssignments</a>
--   - The number of additional assignments to request for this HIT.
newCreateAdditionalAssignmentsForHIT :: Text -> Int -> CreateAdditionalAssignmentsForHIT

-- | <i>See:</i> <a>newCreateAdditionalAssignmentsForHITResponse</a> smart
--   constructor.
data CreateAdditionalAssignmentsForHITResponse
CreateAdditionalAssignmentsForHITResponse' :: Int -> CreateAdditionalAssignmentsForHITResponse

-- | Create a value of <a>CreateAdditionalAssignmentsForHITResponse</a>
--   with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateAdditionalAssignmentsForHITResponse'</a>,
--   <a>createAdditionalAssignmentsForHITResponse_httpStatus</a> - The
--   response's http status code.
newCreateAdditionalAssignmentsForHITResponse :: Int -> CreateAdditionalAssignmentsForHITResponse

-- | <i>See:</i> <a>newGetHIT</a> smart constructor.
data GetHIT
GetHIT' :: Text -> GetHIT

-- | Create a value of <a>GetHIT</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITId:GetHIT'</a>, <a>getHIT_hITId</a> - The ID of the HIT to
--   be retrieved.
newGetHIT :: Text -> GetHIT

-- | <i>See:</i> <a>newGetHITResponse</a> smart constructor.
data GetHITResponse
GetHITResponse' :: Maybe HIT -> Int -> GetHITResponse

-- | Create a value of <a>GetHITResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hit:GetHITResponse'</a>, <a>getHITResponse_hit</a> - Contains
--   the requested HIT data.
--   
--   <a>$sel:httpStatus:GetHITResponse'</a>,
--   <a>getHITResponse_httpStatus</a> - The response's http status code.
newGetHITResponse :: Int -> GetHITResponse

-- | <i>See:</i> <a>newCreateWorkerBlock</a> smart constructor.
data CreateWorkerBlock
CreateWorkerBlock' :: Text -> Text -> CreateWorkerBlock

-- | Create a value of <a>CreateWorkerBlock</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workerId:CreateWorkerBlock'</a>,
--   <a>createWorkerBlock_workerId</a> - The ID of the Worker to block.
--   
--   <a>$sel:reason:CreateWorkerBlock'</a>, <a>createWorkerBlock_reason</a>
--   - A message explaining the reason for blocking the Worker. This
--   parameter enables you to keep track of your Workers. The Worker does
--   not see this message.
newCreateWorkerBlock :: Text -> Text -> CreateWorkerBlock

-- | <i>See:</i> <a>newCreateWorkerBlockResponse</a> smart constructor.
data CreateWorkerBlockResponse
CreateWorkerBlockResponse' :: Int -> CreateWorkerBlockResponse

-- | Create a value of <a>CreateWorkerBlockResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:CreateWorkerBlockResponse'</a>,
--   <a>createWorkerBlockResponse_httpStatus</a> - The response's http
--   status code.
newCreateWorkerBlockResponse :: Int -> CreateWorkerBlockResponse

-- | <i>See:</i> <a>newListHITsForQualificationType</a> smart constructor.
data ListHITsForQualificationType
ListHITsForQualificationType' :: Maybe Text -> Maybe Natural -> Text -> ListHITsForQualificationType

-- | Create a value of <a>ListHITsForQualificationType</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHITsForQualificationType'</a>,
--   <a>listHITsForQualificationType_nextToken</a> - Pagination Token
--   
--   <a>$sel:maxResults:ListHITsForQualificationType'</a>,
--   <a>listHITsForQualificationType_maxResults</a> - Limit the number of
--   results returned.
--   
--   <a>$sel:qualificationTypeId:ListHITsForQualificationType'</a>,
--   <a>listHITsForQualificationType_qualificationTypeId</a> - The ID of
--   the Qualification type to use when querying HITs.
newListHITsForQualificationType :: Text -> ListHITsForQualificationType

-- | <i>See:</i> <a>newListHITsForQualificationTypeResponse</a> smart
--   constructor.
data ListHITsForQualificationTypeResponse
ListHITsForQualificationTypeResponse' :: Maybe Text -> Maybe Int -> Maybe [HIT] -> Int -> ListHITsForQualificationTypeResponse

-- | Create a value of <a>ListHITsForQualificationTypeResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListHITsForQualificationType'</a>,
--   <a>listHITsForQualificationTypeResponse_nextToken</a> - Undocumented
--   member.
--   
--   <a>$sel:numResults:ListHITsForQualificationTypeResponse'</a>,
--   <a>listHITsForQualificationTypeResponse_numResults</a> - The number of
--   HITs on this page in the filtered results list, equivalent to the
--   number of HITs being returned by this call.
--   
--   <a>$sel:hITs:ListHITsForQualificationTypeResponse'</a>,
--   <a>listHITsForQualificationTypeResponse_hITs</a> - The list of HIT
--   elements returned by the query.
--   
--   <a>$sel:httpStatus:ListHITsForQualificationTypeResponse'</a>,
--   <a>listHITsForQualificationTypeResponse_httpStatus</a> - The
--   response's http status code.
newListHITsForQualificationTypeResponse :: Int -> ListHITsForQualificationTypeResponse

-- | <i>See:</i> <a>newListBonusPayments</a> smart constructor.
data ListBonusPayments
ListBonusPayments' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Natural -> ListBonusPayments

-- | Create a value of <a>ListBonusPayments</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListBonusPayments'</a>,
--   <a>listBonusPayments_nextToken</a> - Pagination token
--   
--   <a>$sel:hITId:ListBonusPayments'</a>, <a>listBonusPayments_hITId</a> -
--   The ID of the HIT associated with the bonus payments to retrieve. If
--   not specified, all bonus payments for all assignments for the given
--   HIT are returned. Either the HITId parameter or the AssignmentId
--   parameter must be specified
--   
--   <a>$sel:assignmentId:ListBonusPayments'</a>,
--   <a>listBonusPayments_assignmentId</a> - The ID of the assignment
--   associated with the bonus payments to retrieve. If specified, only
--   bonus payments for the given assignment are returned. Either the HITId
--   parameter or the AssignmentId parameter must be specified
--   
--   <a>$sel:maxResults:ListBonusPayments'</a>,
--   <a>listBonusPayments_maxResults</a> - Undocumented member.
newListBonusPayments :: ListBonusPayments

-- | <i>See:</i> <a>newListBonusPaymentsResponse</a> smart constructor.
data ListBonusPaymentsResponse
ListBonusPaymentsResponse' :: Maybe [BonusPayment] -> Maybe Text -> Maybe Int -> Int -> ListBonusPaymentsResponse

-- | Create a value of <a>ListBonusPaymentsResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:bonusPayments:ListBonusPaymentsResponse'</a>,
--   <a>listBonusPaymentsResponse_bonusPayments</a> - A successful request
--   to the ListBonusPayments operation returns a list of BonusPayment
--   objects.
--   
--   <a>$sel:nextToken:ListBonusPayments'</a>,
--   <a>listBonusPaymentsResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:numResults:ListBonusPaymentsResponse'</a>,
--   <a>listBonusPaymentsResponse_numResults</a> - The number of bonus
--   payments on this page in the filtered results list, equivalent to the
--   number of bonus payments being returned by this call.
--   
--   <a>$sel:httpStatus:ListBonusPaymentsResponse'</a>,
--   <a>listBonusPaymentsResponse_httpStatus</a> - The response's http
--   status code.
newListBonusPaymentsResponse :: Int -> ListBonusPaymentsResponse

-- | <i>See:</i> <a>newListWorkerBlocks</a> smart constructor.
data ListWorkerBlocks
ListWorkerBlocks' :: Maybe Text -> Maybe Natural -> ListWorkerBlocks

-- | Create a value of <a>ListWorkerBlocks</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:nextToken:ListWorkerBlocks'</a>,
--   <a>listWorkerBlocks_nextToken</a> - Pagination token
--   
--   <a>$sel:maxResults:ListWorkerBlocks'</a>,
--   <a>listWorkerBlocks_maxResults</a> - Undocumented member.
newListWorkerBlocks :: ListWorkerBlocks

-- | <i>See:</i> <a>newListWorkerBlocksResponse</a> smart constructor.
data ListWorkerBlocksResponse
ListWorkerBlocksResponse' :: Maybe [WorkerBlock] -> Maybe Text -> Maybe Int -> Int -> ListWorkerBlocksResponse

-- | Create a value of <a>ListWorkerBlocksResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:workerBlocks:ListWorkerBlocksResponse'</a>,
--   <a>listWorkerBlocksResponse_workerBlocks</a> - The list of
--   WorkerBlocks, containing the collection of Worker IDs and reasons for
--   blocking.
--   
--   <a>$sel:nextToken:ListWorkerBlocks'</a>,
--   <a>listWorkerBlocksResponse_nextToken</a> - Undocumented member.
--   
--   <a>$sel:numResults:ListWorkerBlocksResponse'</a>,
--   <a>listWorkerBlocksResponse_numResults</a> - The number of assignments
--   on the page in the filtered results list, equivalent to the number of
--   assignments returned by this call.
--   
--   <a>$sel:httpStatus:ListWorkerBlocksResponse'</a>,
--   <a>listWorkerBlocksResponse_httpStatus</a> - The response's http
--   status code.
newListWorkerBlocksResponse :: Int -> ListWorkerBlocksResponse

-- | <i>See:</i> <a>newDeleteWorkerBlock</a> smart constructor.
data DeleteWorkerBlock
DeleteWorkerBlock' :: Maybe Text -> Text -> DeleteWorkerBlock

-- | Create a value of <a>DeleteWorkerBlock</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:DeleteWorkerBlock'</a>, <a>deleteWorkerBlock_reason</a>
--   - A message that explains the reason for unblocking the Worker. The
--   Worker does not see this message.
--   
--   <a>$sel:workerId:DeleteWorkerBlock'</a>,
--   <a>deleteWorkerBlock_workerId</a> - The ID of the Worker to unblock.
newDeleteWorkerBlock :: Text -> DeleteWorkerBlock

-- | <i>See:</i> <a>newDeleteWorkerBlockResponse</a> smart constructor.
data DeleteWorkerBlockResponse
DeleteWorkerBlockResponse' :: Int -> DeleteWorkerBlockResponse

-- | Create a value of <a>DeleteWorkerBlockResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:DeleteWorkerBlockResponse'</a>,
--   <a>deleteWorkerBlockResponse_httpStatus</a> - The response's http
--   status code.
newDeleteWorkerBlockResponse :: Int -> DeleteWorkerBlockResponse

-- | <i>See:</i> <a>newUpdateNotificationSettings</a> smart constructor.
data UpdateNotificationSettings
UpdateNotificationSettings' :: Maybe NotificationSpecification -> Maybe Bool -> Text -> UpdateNotificationSettings

-- | Create a value of <a>UpdateNotificationSettings</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notification:UpdateNotificationSettings'</a>,
--   <a>updateNotificationSettings_notification</a> - The notification
--   specification for the HIT type.
--   
--   <a>$sel:active:UpdateNotificationSettings'</a>,
--   <a>updateNotificationSettings_active</a> - Specifies whether
--   notifications are sent for HITs of this HIT type, according to the
--   notification specification. You must specify either the Notification
--   parameter or the Active parameter for the call to
--   UpdateNotificationSettings to succeed.
--   
--   <a>$sel:hITTypeId:UpdateNotificationSettings'</a>,
--   <a>updateNotificationSettings_hITTypeId</a> - The ID of the HIT type
--   whose notification specification is being updated.
newUpdateNotificationSettings :: Text -> UpdateNotificationSettings

-- | <i>See:</i> <a>newUpdateNotificationSettingsResponse</a> smart
--   constructor.
data UpdateNotificationSettingsResponse
UpdateNotificationSettingsResponse' :: Int -> UpdateNotificationSettingsResponse

-- | Create a value of <a>UpdateNotificationSettingsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:UpdateNotificationSettingsResponse'</a>,
--   <a>updateNotificationSettingsResponse_httpStatus</a> - The response's
--   http status code.
newUpdateNotificationSettingsResponse :: Int -> UpdateNotificationSettingsResponse

-- | <i>See:</i> <a>newAssociateQualificationWithWorker</a> smart
--   constructor.
data AssociateQualificationWithWorker
AssociateQualificationWithWorker' :: Maybe Int -> Maybe Bool -> Text -> Text -> AssociateQualificationWithWorker

-- | Create a value of <a>AssociateQualificationWithWorker</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:integerValue:AssociateQualificationWithWorker'</a>,
--   <a>associateQualificationWithWorker_integerValue</a> - The value of
--   the Qualification to assign.
--   
--   <a>$sel:sendNotification:AssociateQualificationWithWorker'</a>,
--   <a>associateQualificationWithWorker_sendNotification</a> - Specifies
--   whether to send a notification email message to the Worker saying that
--   the qualification was assigned to the Worker. Note: this is true by
--   default.
--   
--   <a>$sel:qualificationTypeId:AssociateQualificationWithWorker'</a>,
--   <a>associateQualificationWithWorker_qualificationTypeId</a> - The ID
--   of the Qualification type to use for the assigned Qualification.
--   
--   <a>$sel:workerId:AssociateQualificationWithWorker'</a>,
--   <a>associateQualificationWithWorker_workerId</a> - The ID of the
--   Worker to whom the Qualification is being assigned. Worker IDs are
--   included with submitted HIT assignments and Qualification requests.
newAssociateQualificationWithWorker :: Text -> Text -> AssociateQualificationWithWorker

-- | <i>See:</i> <a>newAssociateQualificationWithWorkerResponse</a> smart
--   constructor.
data AssociateQualificationWithWorkerResponse
AssociateQualificationWithWorkerResponse' :: Int -> AssociateQualificationWithWorkerResponse

-- | Create a value of <a>AssociateQualificationWithWorkerResponse</a> with
--   all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:httpStatus:AssociateQualificationWithWorkerResponse'</a>,
--   <a>associateQualificationWithWorkerResponse_httpStatus</a> - The
--   response's http status code.
newAssociateQualificationWithWorkerResponse :: Int -> AssociateQualificationWithWorkerResponse

-- | <i>See:</i> <a>newCreateHIT</a> smart constructor.
data CreateHIT
CreateHIT' :: Maybe ReviewPolicy -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe [HITLayoutParameter] -> Maybe [QualificationRequirement] -> Maybe Text -> Maybe ReviewPolicy -> Integer -> Integer -> Text -> Text -> Text -> CreateHIT

-- | Create a value of <a>CreateHIT</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hITReviewPolicy:CreateHIT'</a>,
--   <a>createHIT_hITReviewPolicy</a> - The HIT-level Review Policy applies
--   to the HIT. You can specify for Mechanical Turk to take various
--   actions based on the policy.
--   
--   <a>$sel:uniqueRequestToken:CreateHIT'</a>,
--   <a>createHIT_uniqueRequestToken</a> - A unique identifier for this
--   request which allows you to retry the call on error without creating
--   duplicate HITs. This is useful in cases such as network timeouts where
--   it is unclear whether or not the call succeeded on the server. If the
--   HIT already exists in the system from a previous call using the same
--   UniqueRequestToken, subsequent calls will return a
--   AWS.MechanicalTurk.HitAlreadyExists error with a message containing
--   the HITId.
--   
--   Note: It is your responsibility to ensure uniqueness of the token. The
--   unique token expires after 24 hours. Subsequent calls using the same
--   UniqueRequestToken made after the 24 hour limit could create duplicate
--   HITs.
--   
--   <a>$sel:autoApprovalDelayInSeconds:CreateHIT'</a>,
--   <a>createHIT_autoApprovalDelayInSeconds</a> - The number of seconds
--   after an assignment for the HIT has been submitted, after which the
--   assignment is considered Approved automatically unless the Requester
--   explicitly rejects it.
--   
--   <a>$sel:requesterAnnotation:CreateHIT'</a>,
--   <a>createHIT_requesterAnnotation</a> - An arbitrary data field. The
--   RequesterAnnotation parameter lets your application attach arbitrary
--   data to the HIT for tracking purposes. For example, this parameter
--   could be an identifier internal to the Requester's application that
--   corresponds with the HIT.
--   
--   The RequesterAnnotation parameter for a HIT is only visible to the
--   Requester who created the HIT. It is not shown to the Worker, or any
--   other Requester.
--   
--   The RequesterAnnotation parameter may be different for each HIT you
--   submit. It does not affect how your HITs are grouped.
--   
--   <a>$sel:maxAssignments:CreateHIT'</a>, <a>createHIT_maxAssignments</a>
--   - The number of times the HIT can be accepted and completed before the
--   HIT becomes unavailable.
--   
--   <a>$sel:keywords:CreateHIT'</a>, <a>createHIT_keywords</a> - One or
--   more words or phrases that describe the HIT, separated by commas.
--   These words are used in searches to find HITs.
--   
--   <a>$sel:hITLayoutId:CreateHIT'</a>, <a>createHIT_hITLayoutId</a> - The
--   HITLayoutId allows you to use a pre-existing HIT design with
--   placeholder values and create an additional HIT by providing those
--   values as HITLayoutParameters.
--   
--   Constraints: Either a Question parameter or a HITLayoutId parameter
--   must be provided.
--   
--   <a>$sel:hITLayoutParameters:CreateHIT'</a>,
--   <a>createHIT_hITLayoutParameters</a> - If the HITLayoutId is provided,
--   any placeholder values must be filled in with values using the
--   HITLayoutParameter structure. For more information, see HITLayout.
--   
--   <a>$sel:qualificationRequirements:CreateHIT'</a>,
--   <a>createHIT_qualificationRequirements</a> - Conditions that a
--   Worker's Qualifications must meet in order to accept the HIT. A HIT
--   can have between zero and ten Qualification requirements. All
--   requirements must be met in order for a Worker to accept the HIT.
--   Additionally, other actions can be restricted using the
--   <tt>ActionsGuarded</tt> field on each
--   <tt>QualificationRequirement</tt> structure.
--   
--   <a>$sel:question:CreateHIT'</a>, <a>createHIT_question</a> - The data
--   the person completing the HIT uses to produce the results.
--   
--   Constraints: Must be a QuestionForm data structure, an
--   ExternalQuestion data structure, or an HTMLQuestion data structure.
--   The XML question data must not be larger than 64 kilobytes (65,535
--   bytes) in size, including whitespace.
--   
--   Either a Question parameter or a HITLayoutId parameter must be
--   provided.
--   
--   <a>$sel:assignmentReviewPolicy:CreateHIT'</a>,
--   <a>createHIT_assignmentReviewPolicy</a> - The Assignment-level Review
--   Policy applies to the assignments under the HIT. You can specify for
--   Mechanical Turk to take various actions based on the policy.
--   
--   <a>$sel:lifetimeInSeconds:CreateHIT'</a>,
--   <a>createHIT_lifetimeInSeconds</a> - An amount of time, in seconds,
--   after which the HIT is no longer available for users to accept. After
--   the lifetime of the HIT elapses, the HIT no longer appears in HIT
--   searches, even if not all of the assignments for the HIT have been
--   accepted.
--   
--   <a>$sel:assignmentDurationInSeconds:CreateHIT'</a>,
--   <a>createHIT_assignmentDurationInSeconds</a> - The amount of time, in
--   seconds, that a Worker has to complete the HIT after accepting it. If
--   a Worker does not complete the assignment within the specified
--   duration, the assignment is considered abandoned. If the HIT is still
--   active (that is, its lifetime has not elapsed), the assignment becomes
--   available for other users to find and accept.
--   
--   <a>$sel:reward:CreateHIT'</a>, <a>createHIT_reward</a> - The amount of
--   money the Requester will pay a Worker for successfully completing the
--   HIT.
--   
--   <a>$sel:title:CreateHIT'</a>, <a>createHIT_title</a> - The title of
--   the HIT. A title should be short and descriptive about the kind of
--   task the HIT contains. On the Amazon Mechanical Turk web site, the HIT
--   title appears in search results, and everywhere the HIT is mentioned.
--   
--   <a>$sel:description:CreateHIT'</a>, <a>createHIT_description</a> - A
--   general description of the HIT. A description includes detailed
--   information about the kind of task the HIT contains. On the Amazon
--   Mechanical Turk web site, the HIT description appears in the expanded
--   view of search results, and in the HIT and assignment screens. A good
--   description gives the user enough information to evaluate the HIT
--   before accepting it.
newCreateHIT :: Integer -> Integer -> Text -> Text -> Text -> CreateHIT

-- | <i>See:</i> <a>newCreateHITResponse</a> smart constructor.
data CreateHITResponse
CreateHITResponse' :: Maybe HIT -> Int -> CreateHITResponse

-- | Create a value of <a>CreateHITResponse</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:hit:CreateHITResponse'</a>, <a>createHITResponse_hit</a> -
--   Contains the newly created HIT data. For a description of the HIT data
--   structure as it appears in responses, see the HIT Data Structure
--   documentation.
--   
--   <a>$sel:httpStatus:CreateHITResponse'</a>,
--   <a>createHITResponse_httpStatus</a> - The response's http status code.
newCreateHITResponse :: Int -> CreateHITResponse

-- | <i>See:</i> <a>newGetAccountBalance</a> smart constructor.
data GetAccountBalance
GetAccountBalance' :: GetAccountBalance

-- | Create a value of <a>GetAccountBalance</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
newGetAccountBalance :: GetAccountBalance

-- | <i>See:</i> <a>newGetAccountBalanceResponse</a> smart constructor.
data GetAccountBalanceResponse
GetAccountBalanceResponse' :: Maybe Text -> Maybe Text -> Int -> GetAccountBalanceResponse

-- | Create a value of <a>GetAccountBalanceResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:availableBalance:GetAccountBalanceResponse'</a>,
--   <a>getAccountBalanceResponse_availableBalance</a> - Undocumented
--   member.
--   
--   <a>$sel:onHoldBalance:GetAccountBalanceResponse'</a>,
--   <a>getAccountBalanceResponse_onHoldBalance</a> - Undocumented member.
--   
--   <a>$sel:httpStatus:GetAccountBalanceResponse'</a>,
--   <a>getAccountBalanceResponse_httpStatus</a> - The response's http
--   status code.
newGetAccountBalanceResponse :: Int -> GetAccountBalanceResponse
newtype AssignmentStatus
AssignmentStatus' :: Text -> AssignmentStatus
[fromAssignmentStatus] :: AssignmentStatus -> Text
pattern AssignmentStatus_Approved :: AssignmentStatus
pattern AssignmentStatus_Rejected :: AssignmentStatus
pattern AssignmentStatus_Submitted :: AssignmentStatus
newtype Comparator
Comparator' :: Text -> Comparator
[fromComparator] :: Comparator -> Text
pattern Comparator_DoesNotExist :: Comparator
pattern Comparator_EqualTo :: Comparator
pattern Comparator_Exists :: Comparator
pattern Comparator_GreaterThan :: Comparator
pattern Comparator_GreaterThanOrEqualTo :: Comparator
pattern Comparator_In :: Comparator
pattern Comparator_LessThan :: Comparator
pattern Comparator_LessThanOrEqualTo :: Comparator
pattern Comparator_NotEqualTo :: Comparator
pattern Comparator_NotIn :: Comparator
newtype EventType
EventType' :: Text -> EventType
[fromEventType] :: EventType -> Text
pattern EventType_AssignmentAbandoned :: EventType
pattern EventType_AssignmentAccepted :: EventType
pattern EventType_AssignmentApproved :: EventType
pattern EventType_AssignmentRejected :: EventType
pattern EventType_AssignmentReturned :: EventType
pattern EventType_AssignmentSubmitted :: EventType
pattern EventType_HITCreated :: EventType
pattern EventType_HITDisposed :: EventType
pattern EventType_HITExpired :: EventType
pattern EventType_HITExtended :: EventType
pattern EventType_HITReviewable :: EventType
pattern EventType_Ping :: EventType
newtype HITAccessActions
HITAccessActions' :: Text -> HITAccessActions
[fromHITAccessActions] :: HITAccessActions -> Text
pattern HITAccessActions_Accept :: HITAccessActions
pattern HITAccessActions_DiscoverPreviewAndAccept :: HITAccessActions
pattern HITAccessActions_PreviewAndAccept :: HITAccessActions
newtype HITReviewStatus
HITReviewStatus' :: Text -> HITReviewStatus
[fromHITReviewStatus] :: HITReviewStatus -> Text
pattern HITReviewStatus_MarkedForReview :: HITReviewStatus
pattern HITReviewStatus_NotReviewed :: HITReviewStatus
pattern HITReviewStatus_ReviewedAppropriate :: HITReviewStatus
pattern HITReviewStatus_ReviewedInappropriate :: HITReviewStatus
newtype HITStatus
HITStatus' :: Text -> HITStatus
[fromHITStatus] :: HITStatus -> Text
pattern HITStatus_Assignable :: HITStatus
pattern HITStatus_Disposed :: HITStatus
pattern HITStatus_Reviewable :: HITStatus
pattern HITStatus_Reviewing :: HITStatus
pattern HITStatus_Unassignable :: HITStatus
newtype NotificationTransport
NotificationTransport' :: Text -> NotificationTransport
[fromNotificationTransport] :: NotificationTransport -> Text
pattern NotificationTransport_Email :: NotificationTransport
pattern NotificationTransport_SNS :: NotificationTransport
pattern NotificationTransport_SQS :: NotificationTransport
newtype NotifyWorkersFailureCode
NotifyWorkersFailureCode' :: Text -> NotifyWorkersFailureCode
[fromNotifyWorkersFailureCode] :: NotifyWorkersFailureCode -> Text
pattern NotifyWorkersFailureCode_HardFailure :: NotifyWorkersFailureCode
pattern NotifyWorkersFailureCode_SoftFailure :: NotifyWorkersFailureCode
newtype QualificationStatus
QualificationStatus' :: Text -> QualificationStatus
[fromQualificationStatus] :: QualificationStatus -> Text
pattern QualificationStatus_Granted :: QualificationStatus
pattern QualificationStatus_Revoked :: QualificationStatus
newtype QualificationTypeStatus
QualificationTypeStatus' :: Text -> QualificationTypeStatus
[fromQualificationTypeStatus] :: QualificationTypeStatus -> Text
pattern QualificationTypeStatus_Active :: QualificationTypeStatus
pattern QualificationTypeStatus_Inactive :: QualificationTypeStatus
newtype ReviewActionStatus
ReviewActionStatus' :: Text -> ReviewActionStatus
[fromReviewActionStatus] :: ReviewActionStatus -> Text
pattern ReviewActionStatus_Cancelled :: ReviewActionStatus
pattern ReviewActionStatus_Failed :: ReviewActionStatus
pattern ReviewActionStatus_Intended :: ReviewActionStatus
pattern ReviewActionStatus_Succeeded :: ReviewActionStatus
newtype ReviewPolicyLevel
ReviewPolicyLevel' :: Text -> ReviewPolicyLevel
[fromReviewPolicyLevel] :: ReviewPolicyLevel -> Text
pattern ReviewPolicyLevel_Assignment :: ReviewPolicyLevel
pattern ReviewPolicyLevel_HIT :: ReviewPolicyLevel
newtype ReviewableHITStatus
ReviewableHITStatus' :: Text -> ReviewableHITStatus
[fromReviewableHITStatus] :: ReviewableHITStatus -> Text
pattern ReviewableHITStatus_Reviewable :: ReviewableHITStatus
pattern ReviewableHITStatus_Reviewing :: ReviewableHITStatus

-- | The Assignment data structure represents a single assignment of a HIT
--   to a Worker. The assignment tracks the Worker's efforts to complete
--   the HIT, and contains the results for later retrieval.
--   
--   <i>See:</i> <a>newAssignment</a> smart constructor.
data Assignment
Assignment' :: Maybe POSIX -> Maybe Text -> Maybe AssignmentStatus -> Maybe Text -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Assignment

-- | Create a value of <a>Assignment</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:acceptTime:Assignment'</a>, <a>assignment_acceptTime</a> - The
--   date and time the Worker accepted the assignment.
--   
--   <a>$sel:answer:Assignment'</a>, <a>assignment_answer</a> - The
--   Worker's answers submitted for the HIT contained in a
--   QuestionFormAnswers document, if the Worker provides an answer. If the
--   Worker does not provide any answers, Answer may contain a
--   QuestionFormAnswers document, or Answer may be empty.
--   
--   <a>$sel:assignmentStatus:Assignment'</a>,
--   <a>assignment_assignmentStatus</a> - The status of the assignment.
--   
--   <a>$sel:requesterFeedback:Assignment'</a>,
--   <a>assignment_requesterFeedback</a> - The feedback string included
--   with the call to the ApproveAssignment operation or the
--   RejectAssignment operation, if the Requester approved or rejected the
--   assignment and specified feedback.
--   
--   <a>$sel:deadline:Assignment'</a>, <a>assignment_deadline</a> - The
--   date and time of the deadline for the assignment. This value is
--   derived from the deadline specification for the HIT and the date and
--   time the Worker accepted the HIT.
--   
--   <a>$sel:approvalTime:Assignment'</a>, <a>assignment_approvalTime</a> -
--   If the Worker has submitted results and the Requester has approved the
--   results, ApprovalTime is the date and time the Requester approved the
--   results. This value is omitted from the assignment if the Requester
--   has not yet approved the results.
--   
--   <a>$sel:rejectionTime:Assignment'</a>, <a>assignment_rejectionTime</a>
--   - If the Worker has submitted results and the Requester has rejected
--   the results, RejectionTime is the date and time the Requester rejected
--   the results.
--   
--   <a>$sel:autoApprovalTime:Assignment'</a>,
--   <a>assignment_autoApprovalTime</a> - If results have been submitted,
--   AutoApprovalTime is the date and time the results of the assignment
--   results are considered Approved automatically if they have not already
--   been explicitly approved or rejected by the Requester. This value is
--   derived from the auto-approval delay specified by the Requester in the
--   HIT. This value is omitted from the assignment if the Worker has not
--   yet submitted results.
--   
--   <a>$sel:hITId:Assignment'</a>, <a>assignment_hITId</a> - The ID of the
--   HIT.
--   
--   <a>$sel:workerId:Assignment'</a>, <a>assignment_workerId</a> - The ID
--   of the Worker who accepted the HIT.
--   
--   <a>$sel:assignmentId:Assignment'</a>, <a>assignment_assignmentId</a> -
--   A unique identifier for the assignment.
--   
--   <a>$sel:submitTime:Assignment'</a>, <a>assignment_submitTime</a> - If
--   the Worker has submitted results, SubmitTime is the date and time the
--   assignment was submitted. This value is omitted from the assignment if
--   the Worker has not yet submitted results.
newAssignment :: Assignment

-- | An object representing a Bonus payment paid to a Worker.
--   
--   <i>See:</i> <a>newBonusPayment</a> smart constructor.
data BonusPayment
BonusPayment' :: Maybe Text -> Maybe POSIX -> Maybe Text -> Maybe Text -> Maybe Text -> BonusPayment

-- | Create a value of <a>BonusPayment</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:BonusPayment'</a>, <a>bonusPayment_reason</a> - The
--   Reason text given when the bonus was granted, if any.
--   
--   <a>$sel:grantTime:BonusPayment'</a>, <a>bonusPayment_grantTime</a> -
--   The date and time of when the bonus was granted.
--   
--   <a>$sel:workerId:BonusPayment'</a>, <a>bonusPayment_workerId</a> - The
--   ID of the Worker to whom the bonus was paid.
--   
--   <a>$sel:assignmentId:BonusPayment'</a>,
--   <a>bonusPayment_assignmentId</a> - The ID of the assignment associated
--   with this bonus payment.
--   
--   <a>$sel:bonusAmount:BonusPayment'</a>, <a>bonusPayment_bonusAmount</a>
--   - Undocumented member.
newBonusPayment :: BonusPayment

-- | The HIT data structure represents a single HIT, including all the
--   information necessary for a Worker to accept and complete the HIT.
--   
--   <i>See:</i> <a>newHIT</a> smart constructor.
data HIT
HIT' :: Maybe POSIX -> Maybe Text -> Maybe Int -> Maybe Text -> Maybe POSIX -> Maybe Integer -> Maybe Text -> Maybe HITStatus -> Maybe Int -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe [QualificationRequirement] -> Maybe Text -> Maybe Text -> Maybe HITReviewStatus -> Maybe Int -> Maybe Text -> Maybe Text -> Maybe Integer -> HIT

-- | Create a value of <a>HIT</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:HIT'</a>, <a>hit_creationTime</a> - The date and
--   time the HIT was created.
--   
--   <a>$sel:hITGroupId:HIT'</a>, <a>hit_hITGroupId</a> - The ID of the HIT
--   Group of this HIT.
--   
--   <a>$sel:numberOfAssignmentsPending:HIT'</a>,
--   <a>hit_numberOfAssignmentsPending</a> - The number of assignments for
--   this HIT that are being previewed or have been accepted by Workers,
--   but have not yet been submitted, returned, or abandoned.
--   
--   <a>$sel:hITTypeId:HIT'</a>, <a>hit_hITTypeId</a> - The ID of the HIT
--   type of this HIT
--   
--   <a>$sel:expiration:HIT'</a>, <a>hit_expiration</a> - The date and time
--   the HIT expires.
--   
--   <a>$sel:autoApprovalDelayInSeconds:HIT'</a>,
--   <a>hit_autoApprovalDelayInSeconds</a> - The amount of time, in
--   seconds, after the Worker submits an assignment for the HIT that the
--   results are automatically approved by Amazon Mechanical Turk. This is
--   the amount of time the Requester has to reject an assignment submitted
--   by a Worker before the assignment is auto-approved and the Worker is
--   paid.
--   
--   <a>$sel:requesterAnnotation:HIT'</a>, <a>hit_requesterAnnotation</a> -
--   An arbitrary data field the Requester who created the HIT can use.
--   This field is visible only to the creator of the HIT.
--   
--   <a>$sel:hITStatus:HIT'</a>, <a>hit_hITStatus</a> - The status of the
--   HIT and its assignments. Valid Values are Assignable | Unassignable |
--   Reviewable | Reviewing | Disposed.
--   
--   <a>$sel:maxAssignments:HIT'</a>, <a>hit_maxAssignments</a> - The
--   number of times the HIT can be accepted and completed before the HIT
--   becomes unavailable.
--   
--   <a>$sel:numberOfAssignmentsCompleted:HIT'</a>,
--   <a>hit_numberOfAssignmentsCompleted</a> - The number of assignments
--   for this HIT that have been approved or rejected.
--   
--   <a>$sel:reward:HIT'</a>, <a>hit_reward</a> - Undocumented member.
--   
--   <a>$sel:keywords:HIT'</a>, <a>hit_keywords</a> - One or more words or
--   phrases that describe the HIT, separated by commas. Search terms
--   similar to the keywords of a HIT are more likely to have the HIT in
--   the search results.
--   
--   <a>$sel:hITLayoutId:HIT'</a>, <a>hit_hITLayoutId</a> - The ID of the
--   HIT Layout of this HIT.
--   
--   <a>$sel:qualificationRequirements:HIT'</a>,
--   <a>hit_qualificationRequirements</a> - Conditions that a Worker's
--   Qualifications must meet in order to accept the HIT. A HIT can have
--   between zero and ten Qualification requirements. All requirements must
--   be met in order for a Worker to accept the HIT. Additionally, other
--   actions can be restricted using the <tt>ActionsGuarded</tt> field on
--   each <tt>QualificationRequirement</tt> structure.
--   
--   <a>$sel:title:HIT'</a>, <a>hit_title</a> - The title of the HIT.
--   
--   <a>$sel:hITId:HIT'</a>, <a>hit_hITId</a> - A unique identifier for the
--   HIT.
--   
--   <a>$sel:hITReviewStatus:HIT'</a>, <a>hit_hITReviewStatus</a> -
--   Indicates the review status of the HIT. Valid Values are NotReviewed |
--   MarkedForReview | ReviewedAppropriate | ReviewedInappropriate.
--   
--   <a>$sel:numberOfAssignmentsAvailable:HIT'</a>,
--   <a>hit_numberOfAssignmentsAvailable</a> - The number of assignments
--   for this HIT that are available for Workers to accept.
--   
--   <a>$sel:description:HIT'</a>, <a>hit_description</a> - A general
--   description of the HIT.
--   
--   <a>$sel:question:HIT'</a>, <a>hit_question</a> - The data the Worker
--   completing the HIT uses produce the results. This is either either a
--   QuestionForm, HTMLQuestion or an ExternalQuestion data structure.
--   
--   <a>$sel:assignmentDurationInSeconds:HIT'</a>,
--   <a>hit_assignmentDurationInSeconds</a> - The length of time, in
--   seconds, that a Worker has to complete the HIT after accepting it.
newHIT :: HIT

-- | The HITLayoutParameter data structure defines parameter values used
--   with a HITLayout. A HITLayout is a reusable Amazon Mechanical Turk
--   project template used to provide Human Intelligence Task (HIT)
--   question data for CreateHIT.
--   
--   <i>See:</i> <a>newHITLayoutParameter</a> smart constructor.
data HITLayoutParameter
HITLayoutParameter' :: Text -> Text -> HITLayoutParameter

-- | Create a value of <a>HITLayoutParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:name:HITLayoutParameter'</a>, <a>hITLayoutParameter_name</a> -
--   The name of the parameter in the HITLayout.
--   
--   <a>$sel:value:HITLayoutParameter'</a>, <a>hITLayoutParameter_value</a>
--   - The value substituted for the parameter referenced in the HITLayout.
newHITLayoutParameter :: Text -> Text -> HITLayoutParameter

-- | The Locale data structure represents a geographical region or
--   location.
--   
--   <i>See:</i> <a>newLocale</a> smart constructor.
data Locale
Locale' :: Maybe Text -> Text -> Locale

-- | Create a value of <a>Locale</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:subdivision:Locale'</a>, <a>locale_subdivision</a> - The state
--   or subdivision of the locale. A valid ISO 3166-2 subdivision code. For
--   example, the code WA refers to the state of Washington.
--   
--   <a>$sel:country:Locale'</a>, <a>locale_country</a> - The country of
--   the locale. Must be a valid ISO 3166 country code. For example, the
--   code US refers to the United States of America.
newLocale :: Text -> Locale

-- | The NotificationSpecification data structure describes a HIT event
--   notification for a HIT type.
--   
--   <i>See:</i> <a>newNotificationSpecification</a> smart constructor.
data NotificationSpecification
NotificationSpecification' :: Text -> NotificationTransport -> Text -> [EventType] -> NotificationSpecification

-- | Create a value of <a>NotificationSpecification</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:destination:NotificationSpecification'</a>,
--   <a>notificationSpecification_destination</a> - The target for
--   notification messages. The Destination’s format is determined by the
--   specified Transport:
--   
--   <ul>
--   <li>When Transport is Email, the Destination is your email
--   address.</li>
--   <li>When Transport is SQS, the Destination is your queue URL.</li>
--   <li>When Transport is SNS, the Destination is the ARN of your
--   topic.</li>
--   </ul>
--   
--   <a>$sel:transport:NotificationSpecification'</a>,
--   <a>notificationSpecification_transport</a> - The method Amazon
--   Mechanical Turk uses to send the notification. Valid Values: Email |
--   SQS | SNS.
--   
--   <a>$sel:version:NotificationSpecification'</a>,
--   <a>notificationSpecification_version</a> - The version of the
--   Notification API to use. Valid value is 2006-05-05.
--   
--   <a>$sel:eventTypes:NotificationSpecification'</a>,
--   <a>notificationSpecification_eventTypes</a> - The list of events that
--   should cause notifications to be sent. Valid Values:
--   AssignmentAccepted | AssignmentAbandoned | AssignmentReturned |
--   AssignmentSubmitted | AssignmentRejected | AssignmentApproved |
--   HITCreated | HITExtended | HITDisposed | HITReviewable | HITExpired |
--   Ping. The Ping event is only valid for the SendTestEventNotification
--   operation.
newNotificationSpecification :: Text -> NotificationTransport -> Text -> NotificationSpecification

-- | When MTurk encounters an issue with notifying the Workers you
--   specified, it returns back this object with failure details.
--   
--   <i>See:</i> <a>newNotifyWorkersFailureStatus</a> smart constructor.
data NotifyWorkersFailureStatus
NotifyWorkersFailureStatus' :: Maybe Text -> Maybe NotifyWorkersFailureCode -> Maybe Text -> NotifyWorkersFailureStatus

-- | Create a value of <a>NotifyWorkersFailureStatus</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:notifyWorkersFailureMessage:NotifyWorkersFailureStatus'</a>,
--   <a>notifyWorkersFailureStatus_notifyWorkersFailureMessage</a> - A
--   message detailing the reason the Worker could not be notified.
--   
--   <a>$sel:notifyWorkersFailureCode:NotifyWorkersFailureStatus'</a>,
--   <a>notifyWorkersFailureStatus_notifyWorkersFailureCode</a> - Encoded
--   value for the failure type.
--   
--   <a>$sel:workerId:NotifyWorkersFailureStatus'</a>,
--   <a>notifyWorkersFailureStatus_workerId</a> - The ID of the Worker.
newNotifyWorkersFailureStatus :: NotifyWorkersFailureStatus

-- | This data structure is the data type for the AnswerKey parameter of
--   the ScoreMyKnownAnswers/2011-09-01 Review Policy.
--   
--   <i>See:</i> <a>newParameterMapEntry</a> smart constructor.
data ParameterMapEntry
ParameterMapEntry' :: Maybe [Text] -> Maybe Text -> ParameterMapEntry

-- | Create a value of <a>ParameterMapEntry</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:ParameterMapEntry'</a>, <a>parameterMapEntry_values</a>
--   - The list of answers to the question specified in the MapEntry Key
--   element. The Worker must match all values in order for the answer to
--   be scored correctly.
--   
--   <a>$sel:key:ParameterMapEntry'</a>, <a>parameterMapEntry_key</a> - The
--   QuestionID from the HIT that is used to identify which question
--   requires Mechanical Turk to score as part of the
--   ScoreMyKnownAnswers/2011-09-01 Review Policy.
newParameterMapEntry :: ParameterMapEntry

-- | Name of the parameter from the Review policy.
--   
--   <i>See:</i> <a>newPolicyParameter</a> smart constructor.
data PolicyParameter
PolicyParameter' :: Maybe [Text] -> Maybe [ParameterMapEntry] -> Maybe Text -> PolicyParameter

-- | Create a value of <a>PolicyParameter</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:values:PolicyParameter'</a>, <a>policyParameter_values</a> -
--   The list of values of the Parameter
--   
--   <a>$sel:mapEntries:PolicyParameter'</a>,
--   <a>policyParameter_mapEntries</a> - List of ParameterMapEntry objects.
--   
--   <a>$sel:key:PolicyParameter'</a>, <a>policyParameter_key</a> - Name of
--   the parameter from the list of Review Polices.
newPolicyParameter :: PolicyParameter

-- | The Qualification data structure represents a Qualification assigned
--   to a user, including the Qualification type and the value (score).
--   
--   <i>See:</i> <a>newQualification</a> smart constructor.
data Qualification
Qualification' :: Maybe QualificationStatus -> Maybe Int -> Maybe Locale -> Maybe Text -> Maybe POSIX -> Maybe Text -> Qualification

-- | Create a value of <a>Qualification</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:Qualification'</a>, <a>qualification_status</a> - The
--   status of the Qualification. Valid values are Granted | Revoked.
--   
--   <a>$sel:integerValue:Qualification'</a>,
--   <a>qualification_integerValue</a> - The value (score) of the
--   Qualification, if the Qualification has an integer value.
--   
--   <a>$sel:localeValue:Qualification'</a>,
--   <a>qualification_localeValue</a> - Undocumented member.
--   
--   <a>$sel:qualificationTypeId:Qualification'</a>,
--   <a>qualification_qualificationTypeId</a> - The ID of the Qualification
--   type for the Qualification.
--   
--   <a>$sel:grantTime:Qualification'</a>, <a>qualification_grantTime</a> -
--   The date and time the Qualification was granted to the Worker. If the
--   Worker's Qualification was revoked, and then re-granted based on a new
--   Qualification request, GrantTime is the date and time of the last call
--   to the AcceptQualificationRequest operation.
--   
--   <a>$sel:workerId:Qualification'</a>, <a>qualification_workerId</a> -
--   The ID of the Worker who possesses the Qualification.
newQualification :: Qualification

-- | The QualificationRequest data structure represents a request a Worker
--   has made for a Qualification.
--   
--   <i>See:</i> <a>newQualificationRequest</a> smart constructor.
data QualificationRequest
QualificationRequest' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> QualificationRequest

-- | Create a value of <a>QualificationRequest</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:qualificationRequestId:QualificationRequest'</a>,
--   <a>qualificationRequest_qualificationRequestId</a> - The ID of the
--   Qualification request, a unique identifier generated when the request
--   was submitted.
--   
--   <a>$sel:test:QualificationRequest'</a>,
--   <a>qualificationRequest_test</a> - The contents of the Qualification
--   test that was presented to the Worker, if the type has a test and the
--   Worker has submitted answers. This value is identical to the
--   QuestionForm associated with the Qualification type at the time the
--   Worker requests the Qualification.
--   
--   <a>$sel:qualificationTypeId:QualificationRequest'</a>,
--   <a>qualificationRequest_qualificationTypeId</a> - The ID of the
--   Qualification type the Worker is requesting, as returned by the
--   CreateQualificationType operation.
--   
--   <a>$sel:answer:QualificationRequest'</a>,
--   <a>qualificationRequest_answer</a> - The Worker's answers for the
--   Qualification type's test contained in a QuestionFormAnswers document,
--   if the type has a test and the Worker has submitted answers. If the
--   Worker does not provide any answers, Answer may be empty.
--   
--   <a>$sel:workerId:QualificationRequest'</a>,
--   <a>qualificationRequest_workerId</a> - The ID of the Worker requesting
--   the Qualification.
--   
--   <a>$sel:submitTime:QualificationRequest'</a>,
--   <a>qualificationRequest_submitTime</a> - The date and time the
--   Qualification request had a status of Submitted. This is either the
--   time the Worker submitted answers for a Qualification test, or the
--   time the Worker requested the Qualification if the Qualification type
--   does not have a test.
newQualificationRequest :: QualificationRequest

-- | The QualificationRequirement data structure describes a Qualification
--   that a Worker must have before the Worker is allowed to accept a HIT.
--   A requirement may optionally state that a Worker must have the
--   Qualification in order to preview the HIT, or see the HIT in search
--   results.
--   
--   <i>See:</i> <a>newQualificationRequirement</a> smart constructor.
data QualificationRequirement
QualificationRequirement' :: Maybe [Locale] -> Maybe HITAccessActions -> Maybe Bool -> Maybe [Int] -> Text -> Comparator -> QualificationRequirement

-- | Create a value of <a>QualificationRequirement</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:localeValues:QualificationRequirement'</a>,
--   <a>qualificationRequirement_localeValues</a> - The locale value to
--   compare against the Qualification's value. The local value must be a
--   valid ISO 3166 country code or supports ISO 3166-2 subdivisions.
--   LocaleValue can only be used with a Worker_Locale QualificationType
--   ID. LocaleValue can only be used with the EqualTo, NotEqualTo, In, and
--   NotIn comparators. You must only use a single LocaleValue element when
--   using the EqualTo or NotEqualTo comparators. When performing a set
--   comparison by using the In or the NotIn comparator, you can use up to
--   30 LocaleValue elements in a QualificationRequirement data structure.
--   
--   <a>$sel:actionsGuarded:QualificationRequirement'</a>,
--   <a>qualificationRequirement_actionsGuarded</a> - Setting this
--   attribute prevents Workers whose Qualifications do not meet this
--   QualificationRequirement from taking the specified action. Valid
--   arguments include "Accept" (Worker cannot accept the HIT, but can
--   preview the HIT and see it in their search results),
--   "PreviewAndAccept" (Worker cannot accept or preview the HIT, but can
--   see the HIT in their search results), and "DiscoverPreviewAndAccept"
--   (Worker cannot accept, preview, or see the HIT in their search
--   results). It's possible for you to create a HIT with multiple
--   QualificationRequirements (which can have different values for the
--   ActionGuarded attribute). In this case, the Worker is only permitted
--   to perform an action when they have met all QualificationRequirements
--   guarding the action. The actions in the order of least restrictive to
--   most restrictive are Discover, Preview and Accept. For example, if a
--   Worker meets all QualificationRequirements that are set to
--   DiscoverPreviewAndAccept, but do not meet all requirements that are
--   set with PreviewAndAccept, then the Worker will be able to Discover,
--   i.e. see the HIT in their search result, but will not be able to
--   Preview or Accept the HIT. ActionsGuarded should not be used in
--   combination with the <tt>RequiredToPreview</tt> field.
--   
--   <a>$sel:requiredToPreview:QualificationRequirement'</a>,
--   <a>qualificationRequirement_requiredToPreview</a> - DEPRECATED: Use
--   the <tt>ActionsGuarded</tt> field instead. If RequiredToPreview is
--   true, the question data for the HIT will not be shown when a Worker
--   whose Qualifications do not meet this requirement tries to preview the
--   HIT. That is, a Worker's Qualifications must meet all of the
--   requirements for which RequiredToPreview is true in order to preview
--   the HIT. If a Worker meets all of the requirements where
--   RequiredToPreview is true (or if there are no such requirements), but
--   does not meet all of the requirements for the HIT, the Worker will be
--   allowed to preview the HIT's question data, but will not be allowed to
--   accept and complete the HIT. The default is false. This should not be
--   used in combination with the <tt>ActionsGuarded</tt> field.
--   
--   <a>$sel:integerValues:QualificationRequirement'</a>,
--   <a>qualificationRequirement_integerValues</a> - The integer value to
--   compare against the Qualification's value. IntegerValue must not be
--   present if Comparator is Exists or DoesNotExist. IntegerValue can only
--   be used if the Qualification type has an integer value; it cannot be
--   used with the Worker_Locale QualificationType ID. When performing a
--   set comparison by using the In or the NotIn comparator, you can use up
--   to 15 IntegerValue elements in a QualificationRequirement data
--   structure.
--   
--   <a>$sel:qualificationTypeId:QualificationRequirement'</a>,
--   <a>qualificationRequirement_qualificationTypeId</a> - The ID of the
--   Qualification type for the requirement.
--   
--   <a>$sel:comparator:QualificationRequirement'</a>,
--   <a>qualificationRequirement_comparator</a> - The kind of comparison to
--   make against a Qualification's value. You can compare a
--   Qualification's value to an IntegerValue to see if it is LessThan,
--   LessThanOrEqualTo, GreaterThan, GreaterThanOrEqualTo, EqualTo, or
--   NotEqualTo the IntegerValue. You can compare it to a LocaleValue to
--   see if it is EqualTo, or NotEqualTo the LocaleValue. You can check to
--   see if the value is In or NotIn a set of IntegerValue or LocaleValue
--   values. Lastly, a Qualification requirement can also test if a
--   Qualification Exists or DoesNotExist in the user's profile, regardless
--   of its value.
newQualificationRequirement :: Text -> Comparator -> QualificationRequirement

-- | The QualificationType data structure represents a Qualification type,
--   a description of a property of a Worker that must match the
--   requirements of a HIT for the Worker to be able to accept the HIT. The
--   type also describes how a Worker can obtain a Qualification of that
--   type, such as through a Qualification test.
--   
--   <i>See:</i> <a>newQualificationType</a> smart constructor.
data QualificationType
QualificationType' :: Maybe POSIX -> Maybe Integer -> Maybe QualificationTypeStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Bool -> Maybe Int -> Maybe Text -> Maybe Bool -> Maybe Integer -> QualificationType

-- | Create a value of <a>QualificationType</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:creationTime:QualificationType'</a>,
--   <a>qualificationType_creationTime</a> - The date and time the
--   Qualification type was created.
--   
--   <a>$sel:testDurationInSeconds:QualificationType'</a>,
--   <a>qualificationType_testDurationInSeconds</a> - The amount of time,
--   in seconds, given to a Worker to complete the Qualification test,
--   beginning from the time the Worker requests the Qualification.
--   
--   <a>$sel:qualificationTypeStatus:QualificationType'</a>,
--   <a>qualificationType_qualificationTypeStatus</a> - The status of the
--   Qualification type. A Qualification type's status determines if users
--   can apply to receive a Qualification of this type, and if HITs can be
--   created with requirements based on this type. Valid values are Active
--   | Inactive.
--   
--   <a>$sel:answerKey:QualificationType'</a>,
--   <a>qualificationType_answerKey</a> - The answers to the Qualification
--   test specified in the Test parameter.
--   
--   <a>$sel:test:QualificationType'</a>, <a>qualificationType_test</a> -
--   The questions for a Qualification test associated with this
--   Qualification type that a user can take to obtain a Qualification of
--   this type. This parameter must be specified if AnswerKey is present. A
--   Qualification type cannot have both a specified Test parameter and an
--   AutoGranted value of true.
--   
--   <a>$sel:qualificationTypeId:QualificationType'</a>,
--   <a>qualificationType_qualificationTypeId</a> - A unique identifier for
--   the Qualification type. A Qualification type is given a Qualification
--   type ID when you call the CreateQualificationType operation.
--   
--   <a>$sel:name:QualificationType'</a>, <a>qualificationType_name</a> -
--   The name of the Qualification type. The type name is used to identify
--   the type, and to find the type using a Qualification type search.
--   
--   <a>$sel:keywords:QualificationType'</a>,
--   <a>qualificationType_keywords</a> - One or more words or phrases that
--   describe theQualification type, separated by commas. The Keywords make
--   the type easier to find using a search.
--   
--   <a>$sel:autoGranted:QualificationType'</a>,
--   <a>qualificationType_autoGranted</a> - Specifies that requests for the
--   Qualification type are granted immediately, without prompting the
--   Worker with a Qualification test. Valid values are True | False.
--   
--   <a>$sel:autoGrantedValue:QualificationType'</a>,
--   <a>qualificationType_autoGrantedValue</a> - The Qualification integer
--   value to use for automatically granted Qualifications, if AutoGranted
--   is true. This is 1 by default.
--   
--   <a>$sel:description:QualificationType'</a>,
--   <a>qualificationType_description</a> - A long description for the
--   Qualification type.
--   
--   <a>$sel:isRequestable:QualificationType'</a>,
--   <a>qualificationType_isRequestable</a> - Specifies whether the
--   Qualification type is one that a user can request through the Amazon
--   Mechanical Turk web site, such as by taking a Qualification test. This
--   value is False for Qualifications assigned automatically by the
--   system. Valid values are True | False.
--   
--   <a>$sel:retryDelayInSeconds:QualificationType'</a>,
--   <a>qualificationType_retryDelayInSeconds</a> - The amount of time, in
--   seconds, Workers must wait after taking the Qualification test before
--   they can take it again. Workers can take a Qualification test multiple
--   times if they were not granted the Qualification from a previous
--   attempt, or if the test offers a gradient score and they want a better
--   score. If not specified, retries are disabled and Workers can request
--   a Qualification only once.
newQualificationType :: QualificationType

-- | Both the AssignmentReviewReport and the HITReviewReport elements
--   contains the ReviewActionDetail data structure. This structure is
--   returned multiple times for each action specified in the Review
--   Policy.
--   
--   <i>See:</i> <a>newReviewActionDetail</a> smart constructor.
data ReviewActionDetail
ReviewActionDetail' :: Maybe ReviewActionStatus -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe POSIX -> Maybe Text -> ReviewActionDetail

-- | Create a value of <a>ReviewActionDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_status</a> - The current disposition of the
--   action: INTENDED, SUCCEEDED, FAILED, or CANCELLED.
--   
--   <a>$sel:targetId:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_targetId</a> - The specific HITId or
--   AssignmentID targeted by the action.
--   
--   <a>$sel:actionId:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_actionId</a> - The unique identifier for the
--   action.
--   
--   <a>$sel:targetType:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_targetType</a> - The type of object in TargetId.
--   
--   <a>$sel:result:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_result</a> - A description of the outcome of the
--   review.
--   
--   <a>$sel:actionName:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_actionName</a> - The nature of the action
--   itself. The Review Policy is responsible for examining the HIT and
--   Assignments, emitting results, and deciding which other actions will
--   be necessary.
--   
--   <a>$sel:completeTime:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_completeTime</a> - The date when the action was
--   completed.
--   
--   <a>$sel:errorCode:ReviewActionDetail'</a>,
--   <a>reviewActionDetail_errorCode</a> - Present only when the Results
--   have a FAILED Status.
newReviewActionDetail :: ReviewActionDetail

-- | HIT Review Policy data structures represent HIT review policies, which
--   you specify when you create a HIT.
--   
--   <i>See:</i> <a>newReviewPolicy</a> smart constructor.
data ReviewPolicy
ReviewPolicy' :: Maybe [PolicyParameter] -> Text -> ReviewPolicy

-- | Create a value of <a>ReviewPolicy</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:parameters:ReviewPolicy'</a>, <a>reviewPolicy_parameters</a> -
--   Name of the parameter from the Review policy.
--   
--   <a>$sel:policyName:ReviewPolicy'</a>, <a>reviewPolicy_policyName</a> -
--   Name of a Review Policy: SimplePlurality/2011-09-01 or
--   ScoreMyKnownAnswers/2011-09-01
newReviewPolicy :: Text -> ReviewPolicy

-- | Contains both ReviewResult and ReviewAction elements for a particular
--   HIT.
--   
--   <i>See:</i> <a>newReviewReport</a> smart constructor.
data ReviewReport
ReviewReport' :: Maybe [ReviewActionDetail] -> Maybe [ReviewResultDetail] -> ReviewReport

-- | Create a value of <a>ReviewReport</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reviewActions:ReviewReport'</a>,
--   <a>reviewReport_reviewActions</a> - A list of ReviewAction objects for
--   each action specified in the Review Policy.
--   
--   <a>$sel:reviewResults:ReviewReport'</a>,
--   <a>reviewReport_reviewResults</a> - A list of ReviewResults objects
--   for each action specified in the Review Policy.
newReviewReport :: ReviewReport

-- | This data structure is returned multiple times for each result
--   specified in the Review Policy.
--   
--   <i>See:</i> <a>newReviewResultDetail</a> smart constructor.
data ReviewResultDetail
ReviewResultDetail' :: Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> Maybe Text -> ReviewResultDetail

-- | Create a value of <a>ReviewResultDetail</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:value:ReviewResultDetail'</a>, <a>reviewResultDetail_value</a>
--   - The values of Key provided by the review policies you have selected.
--   
--   <a>$sel:actionId:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_actionId</a> - A unique identifier of the Review
--   action result.
--   
--   <a>$sel:subjectType:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_subjectType</a> - The type of the object from
--   the SubjectId field.
--   
--   <a>$sel:key:ReviewResultDetail'</a>, <a>reviewResultDetail_key</a> -
--   Key identifies the particular piece of reviewed information.
--   
--   <a>$sel:questionId:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_questionId</a> - Specifies the QuestionId the
--   result is describing. Depending on whether the TargetType is a HIT or
--   Assignment this results could specify multiple values. If TargetType
--   is HIT and QuestionId is absent, then the result describes results of
--   the HIT, including the HIT agreement score. If ObjectType is
--   Assignment and QuestionId is absent, then the result describes the
--   Worker's performance on the HIT.
--   
--   <a>$sel:subjectId:ReviewResultDetail'</a>,
--   <a>reviewResultDetail_subjectId</a> - The HITID or AssignmentId about
--   which this result was taken. Note that HIT-level Review Policies will
--   often emit results about both the HIT itself and its Assignments,
--   while Assignment-level review policies generally only emit results
--   about the Assignment itself.
newReviewResultDetail :: ReviewResultDetail

-- | The WorkerBlock data structure represents a Worker who has been
--   blocked. It has two elements: the WorkerId and the Reason for the
--   block.
--   
--   <i>See:</i> <a>newWorkerBlock</a> smart constructor.
data WorkerBlock
WorkerBlock' :: Maybe Text -> Maybe Text -> WorkerBlock

-- | Create a value of <a>WorkerBlock</a> with all optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:reason:WorkerBlock'</a>, <a>workerBlock_reason</a> - A message
--   explaining the reason the Worker was blocked.
--   
--   <a>$sel:workerId:WorkerBlock'</a>, <a>workerBlock_workerId</a> - The
--   ID of the Worker who accepted the HIT.
newWorkerBlock :: WorkerBlock
