-- Hoogle documentation, generated by Haddock
-- See Hoogle, http://www.haskell.org/hoogle/

@package amazonka-iot-jobs-dataplaneZSamazonka-iot-jobs-dataplane
@version 1.6.1


module Network.AWS.IoTJobsData.Types.JobExecutionStatus
newtype JobExecutionStatus
JobExecutionStatus' :: Text -> JobExecutionStatus
[fromJobExecutionStatus] :: JobExecutionStatus -> Text
pattern JobExecutionStatus_CANCELED :: JobExecutionStatus
pattern JobExecutionStatus_FAILED :: JobExecutionStatus
pattern JobExecutionStatus_IN_PROGRESS :: JobExecutionStatus
pattern JobExecutionStatus_QUEUED :: JobExecutionStatus
pattern JobExecutionStatus_REJECTED :: JobExecutionStatus
pattern JobExecutionStatus_REMOVED :: JobExecutionStatus
pattern JobExecutionStatus_SUCCEEDED :: JobExecutionStatus
pattern JobExecutionStatus_TIMED_OUT :: JobExecutionStatus
instance Network.AWS.Data.XML.ToXML Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Network.AWS.Data.XML.FromXML Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSONKey Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSONKey Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Network.AWS.Data.Headers.ToHeader Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Network.AWS.Data.Log.ToLog Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Network.AWS.Data.ByteString.ToByteString Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Network.AWS.Data.Text.ToText Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Network.AWS.Data.Text.FromText Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance Data.Hashable.Class.Hashable Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance GHC.Generics.Generic Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance GHC.Classes.Ord Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance GHC.Classes.Eq Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance GHC.Read.Read Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus
instance GHC.Show.Show Network.AWS.IoTJobsData.Types.JobExecutionStatus.JobExecutionStatus


module Network.AWS.IoTJobsData.Types.JobExecutionState

-- | Contains data about the state of a job execution.
--   
--   <i>See:</i> <a>newJobExecutionState</a> smart constructor.
data JobExecutionState
JobExecutionState' :: Maybe JobExecutionStatus -> Maybe (HashMap Text Text) -> Maybe Integer -> JobExecutionState

-- | The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
[$sel:status:JobExecutionState'] :: JobExecutionState -> Maybe JobExecutionStatus

-- | A collection of name/value pairs that describe the status of the job
--   execution.
[$sel:statusDetails:JobExecutionState'] :: JobExecutionState -> Maybe (HashMap Text Text)

-- | The version of the job execution. Job execution versions are
--   incremented each time they are updated by a device.
[$sel:versionNumber:JobExecutionState'] :: JobExecutionState -> Maybe Integer

-- | Create a value of <a>JobExecutionState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:JobExecutionState'</a>, <a>jobExecutionState_status</a>
--   - The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
--   
--   <a>$sel:statusDetails:JobExecutionState'</a>,
--   <a>jobExecutionState_statusDetails</a> - A collection of name/value
--   pairs that describe the status of the job execution.
--   
--   <a>$sel:versionNumber:JobExecutionState'</a>,
--   <a>jobExecutionState_versionNumber</a> - The version of the job
--   execution. Job execution versions are incremented each time they are
--   updated by a device.
newJobExecutionState :: JobExecutionState

-- | The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
jobExecutionState_status :: Lens' JobExecutionState (Maybe JobExecutionStatus)

-- | A collection of name/value pairs that describe the status of the job
--   execution.
jobExecutionState_statusDetails :: Lens' JobExecutionState (Maybe (HashMap Text Text))

-- | The version of the job execution. Job execution versions are
--   incremented each time they are updated by a device.
jobExecutionState_versionNumber :: Lens' JobExecutionState (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.IoTJobsData.Types.JobExecutionState.JobExecutionState
instance GHC.Show.Show Network.AWS.IoTJobsData.Types.JobExecutionState.JobExecutionState
instance GHC.Read.Read Network.AWS.IoTJobsData.Types.JobExecutionState.JobExecutionState
instance GHC.Classes.Eq Network.AWS.IoTJobsData.Types.JobExecutionState.JobExecutionState
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IoTJobsData.Types.JobExecutionState.JobExecutionState
instance Data.Hashable.Class.Hashable Network.AWS.IoTJobsData.Types.JobExecutionState.JobExecutionState
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.Types.JobExecutionState.JobExecutionState


module Network.AWS.IoTJobsData.Types.JobExecution

-- | Contains data about a job execution.
--   
--   <i>See:</i> <a>newJobExecution</a> smart constructor.
data JobExecution
JobExecution' :: Maybe Integer -> Maybe JobExecutionStatus -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Integer -> JobExecution

-- | The time, in milliseconds since the epoch, when the job execution was
--   started.
[$sel:startedAt:JobExecution'] :: JobExecution -> Maybe Integer

-- | The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
[$sel:status:JobExecution'] :: JobExecution -> Maybe JobExecutionStatus

-- | A collection of name/value pairs that describe the status of the job
--   execution.
[$sel:statusDetails:JobExecution'] :: JobExecution -> Maybe (HashMap Text Text)

-- | The name of the thing that is executing the job.
[$sel:thingName:JobExecution'] :: JobExecution -> Maybe Text

-- | The time, in milliseconds since the epoch, when the job execution was
--   enqueued.
[$sel:queuedAt:JobExecution'] :: JobExecution -> Maybe Integer

-- | A number that identifies a particular job execution on a particular
--   device. It can be used later in commands that return or update job
--   execution information.
[$sel:executionNumber:JobExecution'] :: JobExecution -> Maybe Integer

-- | The version of the job execution. Job execution versions are
--   incremented each time they are updated by a device.
[$sel:versionNumber:JobExecution'] :: JobExecution -> Maybe Integer

-- | The content of the job document.
[$sel:jobDocument:JobExecution'] :: JobExecution -> Maybe Text

-- | The estimated number of seconds that remain before the job execution
--   status will be changed to <tt>TIMED_OUT</tt>.
[$sel:approximateSecondsBeforeTimedOut:JobExecution'] :: JobExecution -> Maybe Integer

-- | The unique identifier you assigned to this job when it was created.
[$sel:jobId:JobExecution'] :: JobExecution -> Maybe Text

-- | The time, in milliseconds since the epoch, when the job execution was
--   last updated.
[$sel:lastUpdatedAt:JobExecution'] :: JobExecution -> Maybe Integer

-- | Create a value of <a>JobExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startedAt:JobExecution'</a>, <a>jobExecution_startedAt</a> -
--   The time, in milliseconds since the epoch, when the job execution was
--   started.
--   
--   <a>$sel:status:JobExecution'</a>, <a>jobExecution_status</a> - The
--   status of the job execution. Can be one of: "QUEUED", "IN_PROGRESS",
--   "FAILED", "SUCCESS", "CANCELED", "REJECTED", or "REMOVED".
--   
--   <a>$sel:statusDetails:JobExecution'</a>,
--   <a>jobExecution_statusDetails</a> - A collection of name/value pairs
--   that describe the status of the job execution.
--   
--   <a>$sel:thingName:JobExecution'</a>, <a>jobExecution_thingName</a> -
--   The name of the thing that is executing the job.
--   
--   <a>$sel:queuedAt:JobExecution'</a>, <a>jobExecution_queuedAt</a> - The
--   time, in milliseconds since the epoch, when the job execution was
--   enqueued.
--   
--   <a>$sel:executionNumber:JobExecution'</a>,
--   <a>jobExecution_executionNumber</a> - A number that identifies a
--   particular job execution on a particular device. It can be used later
--   in commands that return or update job execution information.
--   
--   <a>$sel:versionNumber:JobExecution'</a>,
--   <a>jobExecution_versionNumber</a> - The version of the job execution.
--   Job execution versions are incremented each time they are updated by a
--   device.
--   
--   <a>$sel:jobDocument:JobExecution'</a>, <a>jobExecution_jobDocument</a>
--   - The content of the job document.
--   
--   <a>$sel:approximateSecondsBeforeTimedOut:JobExecution'</a>,
--   <a>jobExecution_approximateSecondsBeforeTimedOut</a> - The estimated
--   number of seconds that remain before the job execution status will be
--   changed to <tt>TIMED_OUT</tt>.
--   
--   <a>$sel:jobId:JobExecution'</a>, <a>jobExecution_jobId</a> - The
--   unique identifier you assigned to this job when it was created.
--   
--   <a>$sel:lastUpdatedAt:JobExecution'</a>,
--   <a>jobExecution_lastUpdatedAt</a> - The time, in milliseconds since
--   the epoch, when the job execution was last updated.
newJobExecution :: JobExecution

-- | The time, in milliseconds since the epoch, when the job execution was
--   started.
jobExecution_startedAt :: Lens' JobExecution (Maybe Integer)

-- | The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
jobExecution_status :: Lens' JobExecution (Maybe JobExecutionStatus)

-- | A collection of name/value pairs that describe the status of the job
--   execution.
jobExecution_statusDetails :: Lens' JobExecution (Maybe (HashMap Text Text))

-- | The name of the thing that is executing the job.
jobExecution_thingName :: Lens' JobExecution (Maybe Text)

-- | The time, in milliseconds since the epoch, when the job execution was
--   enqueued.
jobExecution_queuedAt :: Lens' JobExecution (Maybe Integer)

-- | A number that identifies a particular job execution on a particular
--   device. It can be used later in commands that return or update job
--   execution information.
jobExecution_executionNumber :: Lens' JobExecution (Maybe Integer)

-- | The version of the job execution. Job execution versions are
--   incremented each time they are updated by a device.
jobExecution_versionNumber :: Lens' JobExecution (Maybe Integer)

-- | The content of the job document.
jobExecution_jobDocument :: Lens' JobExecution (Maybe Text)

-- | The estimated number of seconds that remain before the job execution
--   status will be changed to <tt>TIMED_OUT</tt>.
jobExecution_approximateSecondsBeforeTimedOut :: Lens' JobExecution (Maybe Integer)

-- | The unique identifier you assigned to this job when it was created.
jobExecution_jobId :: Lens' JobExecution (Maybe Text)

-- | The time, in milliseconds since the epoch, when the job execution was
--   last updated.
jobExecution_lastUpdatedAt :: Lens' JobExecution (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.IoTJobsData.Types.JobExecution.JobExecution
instance GHC.Show.Show Network.AWS.IoTJobsData.Types.JobExecution.JobExecution
instance GHC.Read.Read Network.AWS.IoTJobsData.Types.JobExecution.JobExecution
instance GHC.Classes.Eq Network.AWS.IoTJobsData.Types.JobExecution.JobExecution
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IoTJobsData.Types.JobExecution.JobExecution
instance Data.Hashable.Class.Hashable Network.AWS.IoTJobsData.Types.JobExecution.JobExecution
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.Types.JobExecution.JobExecution


module Network.AWS.IoTJobsData.Types.JobExecutionSummary

-- | Contains a subset of information about a job execution.
--   
--   <i>See:</i> <a>newJobExecutionSummary</a> smart constructor.
data JobExecutionSummary
JobExecutionSummary' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Integer -> JobExecutionSummary

-- | The time, in milliseconds since the epoch, when the job execution
--   started.
[$sel:startedAt:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Integer

-- | The time, in milliseconds since the epoch, when the job execution was
--   enqueued.
[$sel:queuedAt:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Integer

-- | A number that identifies a particular job execution on a particular
--   device.
[$sel:executionNumber:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Integer

-- | The version of the job execution. Job execution versions are
--   incremented each time AWS IoT Jobs receives an update from a device.
[$sel:versionNumber:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Integer

-- | The unique identifier you assigned to this job when it was created.
[$sel:jobId:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the job execution was
--   last updated.
[$sel:lastUpdatedAt:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Integer

-- | Create a value of <a>JobExecutionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startedAt:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_startedAt</a> - The time, in milliseconds since
--   the epoch, when the job execution started.
--   
--   <a>$sel:queuedAt:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_queuedAt</a> - The time, in milliseconds since
--   the epoch, when the job execution was enqueued.
--   
--   <a>$sel:executionNumber:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_executionNumber</a> - A number that identifies
--   a particular job execution on a particular device.
--   
--   <a>$sel:versionNumber:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_versionNumber</a> - The version of the job
--   execution. Job execution versions are incremented each time AWS IoT
--   Jobs receives an update from a device.
--   
--   <a>$sel:jobId:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_jobId</a> - The unique identifier you assigned
--   to this job when it was created.
--   
--   <a>$sel:lastUpdatedAt:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_lastUpdatedAt</a> - The time, in milliseconds
--   since the epoch, when the job execution was last updated.
newJobExecutionSummary :: JobExecutionSummary

-- | The time, in milliseconds since the epoch, when the job execution
--   started.
jobExecutionSummary_startedAt :: Lens' JobExecutionSummary (Maybe Integer)

-- | The time, in milliseconds since the epoch, when the job execution was
--   enqueued.
jobExecutionSummary_queuedAt :: Lens' JobExecutionSummary (Maybe Integer)

-- | A number that identifies a particular job execution on a particular
--   device.
jobExecutionSummary_executionNumber :: Lens' JobExecutionSummary (Maybe Integer)

-- | The version of the job execution. Job execution versions are
--   incremented each time AWS IoT Jobs receives an update from a device.
jobExecutionSummary_versionNumber :: Lens' JobExecutionSummary (Maybe Integer)

-- | The unique identifier you assigned to this job when it was created.
jobExecutionSummary_jobId :: Lens' JobExecutionSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the job execution was
--   last updated.
jobExecutionSummary_lastUpdatedAt :: Lens' JobExecutionSummary (Maybe Integer)
instance GHC.Generics.Generic Network.AWS.IoTJobsData.Types.JobExecutionSummary.JobExecutionSummary
instance GHC.Show.Show Network.AWS.IoTJobsData.Types.JobExecutionSummary.JobExecutionSummary
instance GHC.Read.Read Network.AWS.IoTJobsData.Types.JobExecutionSummary.JobExecutionSummary
instance GHC.Classes.Eq Network.AWS.IoTJobsData.Types.JobExecutionSummary.JobExecutionSummary
instance Data.Aeson.Types.FromJSON.FromJSON Network.AWS.IoTJobsData.Types.JobExecutionSummary.JobExecutionSummary
instance Data.Hashable.Class.Hashable Network.AWS.IoTJobsData.Types.JobExecutionSummary.JobExecutionSummary
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.Types.JobExecutionSummary.JobExecutionSummary


module Network.AWS.IoTJobsData.Types

-- | API version <tt>2017-09-29</tt> of the Amazon IoT Jobs Data Plane SDK
--   configuration.
defaultService :: Service

-- | The job is in a terminal state.
_TerminalStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The certificate is invalid.
_CertificateValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is temporarily unavailable.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The rate exceeds the limit.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The contents of the request were invalid. For example, this code is
--   returned when an UpdateJobExecution request contains invalid status
--   details. The message contains details about the error.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An update attempted to change the job execution to a state that is
--   invalid because of the job execution's current state (for example, an
--   attempt to change a request in state SUCCESS to state IN_PROGRESS). In
--   this case, the body of the error message also contains the
--   executionState field.
_InvalidStateTransitionException :: AsError a => Getting (First ServiceError) a ServiceError
newtype JobExecutionStatus
JobExecutionStatus' :: Text -> JobExecutionStatus
[fromJobExecutionStatus] :: JobExecutionStatus -> Text
pattern JobExecutionStatus_CANCELED :: JobExecutionStatus
pattern JobExecutionStatus_FAILED :: JobExecutionStatus
pattern JobExecutionStatus_IN_PROGRESS :: JobExecutionStatus
pattern JobExecutionStatus_QUEUED :: JobExecutionStatus
pattern JobExecutionStatus_REJECTED :: JobExecutionStatus
pattern JobExecutionStatus_REMOVED :: JobExecutionStatus
pattern JobExecutionStatus_SUCCEEDED :: JobExecutionStatus
pattern JobExecutionStatus_TIMED_OUT :: JobExecutionStatus

-- | Contains data about a job execution.
--   
--   <i>See:</i> <a>newJobExecution</a> smart constructor.
data JobExecution
JobExecution' :: Maybe Integer -> Maybe JobExecutionStatus -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Integer -> JobExecution

-- | The time, in milliseconds since the epoch, when the job execution was
--   started.
[$sel:startedAt:JobExecution'] :: JobExecution -> Maybe Integer

-- | The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
[$sel:status:JobExecution'] :: JobExecution -> Maybe JobExecutionStatus

-- | A collection of name/value pairs that describe the status of the job
--   execution.
[$sel:statusDetails:JobExecution'] :: JobExecution -> Maybe (HashMap Text Text)

-- | The name of the thing that is executing the job.
[$sel:thingName:JobExecution'] :: JobExecution -> Maybe Text

-- | The time, in milliseconds since the epoch, when the job execution was
--   enqueued.
[$sel:queuedAt:JobExecution'] :: JobExecution -> Maybe Integer

-- | A number that identifies a particular job execution on a particular
--   device. It can be used later in commands that return or update job
--   execution information.
[$sel:executionNumber:JobExecution'] :: JobExecution -> Maybe Integer

-- | The version of the job execution. Job execution versions are
--   incremented each time they are updated by a device.
[$sel:versionNumber:JobExecution'] :: JobExecution -> Maybe Integer

-- | The content of the job document.
[$sel:jobDocument:JobExecution'] :: JobExecution -> Maybe Text

-- | The estimated number of seconds that remain before the job execution
--   status will be changed to <tt>TIMED_OUT</tt>.
[$sel:approximateSecondsBeforeTimedOut:JobExecution'] :: JobExecution -> Maybe Integer

-- | The unique identifier you assigned to this job when it was created.
[$sel:jobId:JobExecution'] :: JobExecution -> Maybe Text

-- | The time, in milliseconds since the epoch, when the job execution was
--   last updated.
[$sel:lastUpdatedAt:JobExecution'] :: JobExecution -> Maybe Integer

-- | Create a value of <a>JobExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startedAt:JobExecution'</a>, <a>jobExecution_startedAt</a> -
--   The time, in milliseconds since the epoch, when the job execution was
--   started.
--   
--   <a>$sel:status:JobExecution'</a>, <a>jobExecution_status</a> - The
--   status of the job execution. Can be one of: "QUEUED", "IN_PROGRESS",
--   "FAILED", "SUCCESS", "CANCELED", "REJECTED", or "REMOVED".
--   
--   <a>$sel:statusDetails:JobExecution'</a>,
--   <a>jobExecution_statusDetails</a> - A collection of name/value pairs
--   that describe the status of the job execution.
--   
--   <a>$sel:thingName:JobExecution'</a>, <a>jobExecution_thingName</a> -
--   The name of the thing that is executing the job.
--   
--   <a>$sel:queuedAt:JobExecution'</a>, <a>jobExecution_queuedAt</a> - The
--   time, in milliseconds since the epoch, when the job execution was
--   enqueued.
--   
--   <a>$sel:executionNumber:JobExecution'</a>,
--   <a>jobExecution_executionNumber</a> - A number that identifies a
--   particular job execution on a particular device. It can be used later
--   in commands that return or update job execution information.
--   
--   <a>$sel:versionNumber:JobExecution'</a>,
--   <a>jobExecution_versionNumber</a> - The version of the job execution.
--   Job execution versions are incremented each time they are updated by a
--   device.
--   
--   <a>$sel:jobDocument:JobExecution'</a>, <a>jobExecution_jobDocument</a>
--   - The content of the job document.
--   
--   <a>$sel:approximateSecondsBeforeTimedOut:JobExecution'</a>,
--   <a>jobExecution_approximateSecondsBeforeTimedOut</a> - The estimated
--   number of seconds that remain before the job execution status will be
--   changed to <tt>TIMED_OUT</tt>.
--   
--   <a>$sel:jobId:JobExecution'</a>, <a>jobExecution_jobId</a> - The
--   unique identifier you assigned to this job when it was created.
--   
--   <a>$sel:lastUpdatedAt:JobExecution'</a>,
--   <a>jobExecution_lastUpdatedAt</a> - The time, in milliseconds since
--   the epoch, when the job execution was last updated.
newJobExecution :: JobExecution

-- | The time, in milliseconds since the epoch, when the job execution was
--   started.
jobExecution_startedAt :: Lens' JobExecution (Maybe Integer)

-- | The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
jobExecution_status :: Lens' JobExecution (Maybe JobExecutionStatus)

-- | A collection of name/value pairs that describe the status of the job
--   execution.
jobExecution_statusDetails :: Lens' JobExecution (Maybe (HashMap Text Text))

-- | The name of the thing that is executing the job.
jobExecution_thingName :: Lens' JobExecution (Maybe Text)

-- | The time, in milliseconds since the epoch, when the job execution was
--   enqueued.
jobExecution_queuedAt :: Lens' JobExecution (Maybe Integer)

-- | A number that identifies a particular job execution on a particular
--   device. It can be used later in commands that return or update job
--   execution information.
jobExecution_executionNumber :: Lens' JobExecution (Maybe Integer)

-- | The version of the job execution. Job execution versions are
--   incremented each time they are updated by a device.
jobExecution_versionNumber :: Lens' JobExecution (Maybe Integer)

-- | The content of the job document.
jobExecution_jobDocument :: Lens' JobExecution (Maybe Text)

-- | The estimated number of seconds that remain before the job execution
--   status will be changed to <tt>TIMED_OUT</tt>.
jobExecution_approximateSecondsBeforeTimedOut :: Lens' JobExecution (Maybe Integer)

-- | The unique identifier you assigned to this job when it was created.
jobExecution_jobId :: Lens' JobExecution (Maybe Text)

-- | The time, in milliseconds since the epoch, when the job execution was
--   last updated.
jobExecution_lastUpdatedAt :: Lens' JobExecution (Maybe Integer)

-- | Contains data about the state of a job execution.
--   
--   <i>See:</i> <a>newJobExecutionState</a> smart constructor.
data JobExecutionState
JobExecutionState' :: Maybe JobExecutionStatus -> Maybe (HashMap Text Text) -> Maybe Integer -> JobExecutionState

-- | The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
[$sel:status:JobExecutionState'] :: JobExecutionState -> Maybe JobExecutionStatus

-- | A collection of name/value pairs that describe the status of the job
--   execution.
[$sel:statusDetails:JobExecutionState'] :: JobExecutionState -> Maybe (HashMap Text Text)

-- | The version of the job execution. Job execution versions are
--   incremented each time they are updated by a device.
[$sel:versionNumber:JobExecutionState'] :: JobExecutionState -> Maybe Integer

-- | Create a value of <a>JobExecutionState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:JobExecutionState'</a>, <a>jobExecutionState_status</a>
--   - The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
--   
--   <a>$sel:statusDetails:JobExecutionState'</a>,
--   <a>jobExecutionState_statusDetails</a> - A collection of name/value
--   pairs that describe the status of the job execution.
--   
--   <a>$sel:versionNumber:JobExecutionState'</a>,
--   <a>jobExecutionState_versionNumber</a> - The version of the job
--   execution. Job execution versions are incremented each time they are
--   updated by a device.
newJobExecutionState :: JobExecutionState

-- | The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
jobExecutionState_status :: Lens' JobExecutionState (Maybe JobExecutionStatus)

-- | A collection of name/value pairs that describe the status of the job
--   execution.
jobExecutionState_statusDetails :: Lens' JobExecutionState (Maybe (HashMap Text Text))

-- | The version of the job execution. Job execution versions are
--   incremented each time they are updated by a device.
jobExecutionState_versionNumber :: Lens' JobExecutionState (Maybe Integer)

-- | Contains a subset of information about a job execution.
--   
--   <i>See:</i> <a>newJobExecutionSummary</a> smart constructor.
data JobExecutionSummary
JobExecutionSummary' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Integer -> JobExecutionSummary

-- | The time, in milliseconds since the epoch, when the job execution
--   started.
[$sel:startedAt:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Integer

-- | The time, in milliseconds since the epoch, when the job execution was
--   enqueued.
[$sel:queuedAt:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Integer

-- | A number that identifies a particular job execution on a particular
--   device.
[$sel:executionNumber:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Integer

-- | The version of the job execution. Job execution versions are
--   incremented each time AWS IoT Jobs receives an update from a device.
[$sel:versionNumber:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Integer

-- | The unique identifier you assigned to this job when it was created.
[$sel:jobId:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Text

-- | The time, in milliseconds since the epoch, when the job execution was
--   last updated.
[$sel:lastUpdatedAt:JobExecutionSummary'] :: JobExecutionSummary -> Maybe Integer

-- | Create a value of <a>JobExecutionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startedAt:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_startedAt</a> - The time, in milliseconds since
--   the epoch, when the job execution started.
--   
--   <a>$sel:queuedAt:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_queuedAt</a> - The time, in milliseconds since
--   the epoch, when the job execution was enqueued.
--   
--   <a>$sel:executionNumber:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_executionNumber</a> - A number that identifies
--   a particular job execution on a particular device.
--   
--   <a>$sel:versionNumber:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_versionNumber</a> - The version of the job
--   execution. Job execution versions are incremented each time AWS IoT
--   Jobs receives an update from a device.
--   
--   <a>$sel:jobId:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_jobId</a> - The unique identifier you assigned
--   to this job when it was created.
--   
--   <a>$sel:lastUpdatedAt:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_lastUpdatedAt</a> - The time, in milliseconds
--   since the epoch, when the job execution was last updated.
newJobExecutionSummary :: JobExecutionSummary

-- | The time, in milliseconds since the epoch, when the job execution
--   started.
jobExecutionSummary_startedAt :: Lens' JobExecutionSummary (Maybe Integer)

-- | The time, in milliseconds since the epoch, when the job execution was
--   enqueued.
jobExecutionSummary_queuedAt :: Lens' JobExecutionSummary (Maybe Integer)

-- | A number that identifies a particular job execution on a particular
--   device.
jobExecutionSummary_executionNumber :: Lens' JobExecutionSummary (Maybe Integer)

-- | The version of the job execution. Job execution versions are
--   incremented each time AWS IoT Jobs receives an update from a device.
jobExecutionSummary_versionNumber :: Lens' JobExecutionSummary (Maybe Integer)

-- | The unique identifier you assigned to this job when it was created.
jobExecutionSummary_jobId :: Lens' JobExecutionSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the job execution was
--   last updated.
jobExecutionSummary_lastUpdatedAt :: Lens' JobExecutionSummary (Maybe Integer)


-- | Gets and starts the next pending (status IN_PROGRESS or QUEUED) job
--   execution for a thing.
module Network.AWS.IoTJobsData.StartNextPendingJobExecution

-- | <i>See:</i> <a>newStartNextPendingJobExecution</a> smart constructor.
data StartNextPendingJobExecution
StartNextPendingJobExecution' :: Maybe (HashMap Text Text) -> Maybe Integer -> Text -> StartNextPendingJobExecution

-- | A collection of name/value pairs that describe the status of the job
--   execution. If not specified, the statusDetails are unchanged.
[$sel:statusDetails:StartNextPendingJobExecution'] :: StartNextPendingJobExecution -> Maybe (HashMap Text Text)

-- | Specifies the amount of time this device has to finish execution of
--   this job. If the job execution status is not set to a terminal state
--   before this timer expires, or before the timer is reset (by calling
--   <tt>UpdateJobExecution</tt>, setting the status to
--   <tt>IN_PROGRESS</tt> and specifying a new timeout value in field
--   <tt>stepTimeoutInMinutes</tt>) the job execution status will be
--   automatically set to <tt>TIMED_OUT</tt>. Note that setting this
--   timeout has no effect on that job execution timeout which may have
--   been specified when the job was created (<tt>CreateJob</tt> using
--   field <tt>timeoutConfig</tt>).
[$sel:stepTimeoutInMinutes:StartNextPendingJobExecution'] :: StartNextPendingJobExecution -> Maybe Integer

-- | The name of the thing associated with the device.
[$sel:thingName:StartNextPendingJobExecution'] :: StartNextPendingJobExecution -> Text

-- | Create a value of <a>StartNextPendingJobExecution</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusDetails:StartNextPendingJobExecution'</a>,
--   <a>startNextPendingJobExecution_statusDetails</a> - A collection of
--   name/value pairs that describe the status of the job execution. If not
--   specified, the statusDetails are unchanged.
--   
--   <a>$sel:stepTimeoutInMinutes:StartNextPendingJobExecution'</a>,
--   <a>startNextPendingJobExecution_stepTimeoutInMinutes</a> - Specifies
--   the amount of time this device has to finish execution of this job. If
--   the job execution status is not set to a terminal state before this
--   timer expires, or before the timer is reset (by calling
--   <tt>UpdateJobExecution</tt>, setting the status to
--   <tt>IN_PROGRESS</tt> and specifying a new timeout value in field
--   <tt>stepTimeoutInMinutes</tt>) the job execution status will be
--   automatically set to <tt>TIMED_OUT</tt>. Note that setting this
--   timeout has no effect on that job execution timeout which may have
--   been specified when the job was created (<tt>CreateJob</tt> using
--   field <tt>timeoutConfig</tt>).
--   
--   <a>$sel:thingName:StartNextPendingJobExecution'</a>,
--   <a>startNextPendingJobExecution_thingName</a> - The name of the thing
--   associated with the device.
newStartNextPendingJobExecution :: Text -> StartNextPendingJobExecution

-- | A collection of name/value pairs that describe the status of the job
--   execution. If not specified, the statusDetails are unchanged.
startNextPendingJobExecution_statusDetails :: Lens' StartNextPendingJobExecution (Maybe (HashMap Text Text))

-- | Specifies the amount of time this device has to finish execution of
--   this job. If the job execution status is not set to a terminal state
--   before this timer expires, or before the timer is reset (by calling
--   <tt>UpdateJobExecution</tt>, setting the status to
--   <tt>IN_PROGRESS</tt> and specifying a new timeout value in field
--   <tt>stepTimeoutInMinutes</tt>) the job execution status will be
--   automatically set to <tt>TIMED_OUT</tt>. Note that setting this
--   timeout has no effect on that job execution timeout which may have
--   been specified when the job was created (<tt>CreateJob</tt> using
--   field <tt>timeoutConfig</tt>).
startNextPendingJobExecution_stepTimeoutInMinutes :: Lens' StartNextPendingJobExecution (Maybe Integer)

-- | The name of the thing associated with the device.
startNextPendingJobExecution_thingName :: Lens' StartNextPendingJobExecution Text

-- | <i>See:</i> <a>newStartNextPendingJobExecutionResponse</a> smart
--   constructor.
data StartNextPendingJobExecutionResponse
StartNextPendingJobExecutionResponse' :: Maybe JobExecution -> Int -> StartNextPendingJobExecutionResponse

-- | A JobExecution object.
[$sel:execution:StartNextPendingJobExecutionResponse'] :: StartNextPendingJobExecutionResponse -> Maybe JobExecution

-- | The response's http status code.
[$sel:httpStatus:StartNextPendingJobExecutionResponse'] :: StartNextPendingJobExecutionResponse -> Int

-- | Create a value of <a>StartNextPendingJobExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:execution:StartNextPendingJobExecutionResponse'</a>,
--   <a>startNextPendingJobExecutionResponse_execution</a> - A JobExecution
--   object.
--   
--   <a>$sel:httpStatus:StartNextPendingJobExecutionResponse'</a>,
--   <a>startNextPendingJobExecutionResponse_httpStatus</a> - The
--   response's http status code.
newStartNextPendingJobExecutionResponse :: Int -> StartNextPendingJobExecutionResponse

-- | A JobExecution object.
startNextPendingJobExecutionResponse_execution :: Lens' StartNextPendingJobExecutionResponse (Maybe JobExecution)

-- | The response's http status code.
startNextPendingJobExecutionResponse_httpStatus :: Lens' StartNextPendingJobExecutionResponse Int
instance GHC.Generics.Generic Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecution
instance GHC.Show.Show Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecution
instance GHC.Read.Read Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecution
instance GHC.Classes.Eq Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecution
instance GHC.Generics.Generic Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecutionResponse
instance GHC.Show.Show Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecutionResponse
instance GHC.Read.Read Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecutionResponse
instance GHC.Classes.Eq Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecutionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecution
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecutionResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecution
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecution
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecution
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecution
instance Network.AWS.Data.Path.ToPath Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecution
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoTJobsData.StartNextPendingJobExecution.StartNextPendingJobExecution


-- | Gets the list of all jobs for a thing that are not in a terminal
--   status.
module Network.AWS.IoTJobsData.GetPendingJobExecutions

-- | <i>See:</i> <a>newGetPendingJobExecutions</a> smart constructor.
data GetPendingJobExecutions
GetPendingJobExecutions' :: Text -> GetPendingJobExecutions

-- | The name of the thing that is executing the job.
[$sel:thingName:GetPendingJobExecutions'] :: GetPendingJobExecutions -> Text

-- | Create a value of <a>GetPendingJobExecutions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thingName:GetPendingJobExecutions'</a>,
--   <a>getPendingJobExecutions_thingName</a> - The name of the thing that
--   is executing the job.
newGetPendingJobExecutions :: Text -> GetPendingJobExecutions

-- | The name of the thing that is executing the job.
getPendingJobExecutions_thingName :: Lens' GetPendingJobExecutions Text

-- | <i>See:</i> <a>newGetPendingJobExecutionsResponse</a> smart
--   constructor.
data GetPendingJobExecutionsResponse
GetPendingJobExecutionsResponse' :: Maybe [JobExecutionSummary] -> Maybe [JobExecutionSummary] -> Int -> GetPendingJobExecutionsResponse

-- | A list of JobExecutionSummary objects with status IN_PROGRESS.
[$sel:inProgressJobs:GetPendingJobExecutionsResponse'] :: GetPendingJobExecutionsResponse -> Maybe [JobExecutionSummary]

-- | A list of JobExecutionSummary objects with status QUEUED.
[$sel:queuedJobs:GetPendingJobExecutionsResponse'] :: GetPendingJobExecutionsResponse -> Maybe [JobExecutionSummary]

-- | The response's http status code.
[$sel:httpStatus:GetPendingJobExecutionsResponse'] :: GetPendingJobExecutionsResponse -> Int

-- | Create a value of <a>GetPendingJobExecutionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inProgressJobs:GetPendingJobExecutionsResponse'</a>,
--   <a>getPendingJobExecutionsResponse_inProgressJobs</a> - A list of
--   JobExecutionSummary objects with status IN_PROGRESS.
--   
--   <a>$sel:queuedJobs:GetPendingJobExecutionsResponse'</a>,
--   <a>getPendingJobExecutionsResponse_queuedJobs</a> - A list of
--   JobExecutionSummary objects with status QUEUED.
--   
--   <a>$sel:httpStatus:GetPendingJobExecutionsResponse'</a>,
--   <a>getPendingJobExecutionsResponse_httpStatus</a> - The response's
--   http status code.
newGetPendingJobExecutionsResponse :: Int -> GetPendingJobExecutionsResponse

-- | A list of JobExecutionSummary objects with status IN_PROGRESS.
getPendingJobExecutionsResponse_inProgressJobs :: Lens' GetPendingJobExecutionsResponse (Maybe [JobExecutionSummary])

-- | A list of JobExecutionSummary objects with status QUEUED.
getPendingJobExecutionsResponse_queuedJobs :: Lens' GetPendingJobExecutionsResponse (Maybe [JobExecutionSummary])

-- | The response's http status code.
getPendingJobExecutionsResponse_httpStatus :: Lens' GetPendingJobExecutionsResponse Int
instance GHC.Generics.Generic Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutions
instance GHC.Show.Show Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutions
instance GHC.Read.Read Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutions
instance GHC.Classes.Eq Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutions
instance GHC.Generics.Generic Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutionsResponse
instance GHC.Show.Show Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutionsResponse
instance GHC.Read.Read Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutionsResponse
instance GHC.Classes.Eq Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutionsResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutions
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutionsResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutions
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutions
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutions
instance Network.AWS.Data.Path.ToPath Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutions
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoTJobsData.GetPendingJobExecutions.GetPendingJobExecutions


-- | Gets details of a job execution.
module Network.AWS.IoTJobsData.DescribeJobExecution

-- | <i>See:</i> <a>newDescribeJobExecution</a> smart constructor.
data DescribeJobExecution
DescribeJobExecution' :: Maybe Bool -> Maybe Integer -> Text -> Text -> DescribeJobExecution

-- | Optional. When set to true, the response contains the job document.
--   The default is false.
[$sel:includeJobDocument:DescribeJobExecution'] :: DescribeJobExecution -> Maybe Bool

-- | Optional. A number that identifies a particular job execution on a
--   particular device. If not specified, the latest job execution is
--   returned.
[$sel:executionNumber:DescribeJobExecution'] :: DescribeJobExecution -> Maybe Integer

-- | The unique identifier assigned to this job when it was created.
[$sel:jobId:DescribeJobExecution'] :: DescribeJobExecution -> Text

-- | The thing name associated with the device the job execution is running
--   on.
[$sel:thingName:DescribeJobExecution'] :: DescribeJobExecution -> Text

-- | Create a value of <a>DescribeJobExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeJobDocument:DescribeJobExecution'</a>,
--   <a>describeJobExecution_includeJobDocument</a> - Optional. When set to
--   true, the response contains the job document. The default is false.
--   
--   <a>$sel:executionNumber:DescribeJobExecution'</a>,
--   <a>describeJobExecution_executionNumber</a> - Optional. A number that
--   identifies a particular job execution on a particular device. If not
--   specified, the latest job execution is returned.
--   
--   <a>$sel:jobId:DescribeJobExecution'</a>,
--   <a>describeJobExecution_jobId</a> - The unique identifier assigned to
--   this job when it was created.
--   
--   <a>$sel:thingName:DescribeJobExecution'</a>,
--   <a>describeJobExecution_thingName</a> - The thing name associated with
--   the device the job execution is running on.
newDescribeJobExecution :: Text -> Text -> DescribeJobExecution

-- | Optional. When set to true, the response contains the job document.
--   The default is false.
describeJobExecution_includeJobDocument :: Lens' DescribeJobExecution (Maybe Bool)

-- | Optional. A number that identifies a particular job execution on a
--   particular device. If not specified, the latest job execution is
--   returned.
describeJobExecution_executionNumber :: Lens' DescribeJobExecution (Maybe Integer)

-- | The unique identifier assigned to this job when it was created.
describeJobExecution_jobId :: Lens' DescribeJobExecution Text

-- | The thing name associated with the device the job execution is running
--   on.
describeJobExecution_thingName :: Lens' DescribeJobExecution Text

-- | <i>See:</i> <a>newDescribeJobExecutionResponse</a> smart constructor.
data DescribeJobExecutionResponse
DescribeJobExecutionResponse' :: Maybe JobExecution -> Int -> DescribeJobExecutionResponse

-- | Contains data about a job execution.
[$sel:execution:DescribeJobExecutionResponse'] :: DescribeJobExecutionResponse -> Maybe JobExecution

-- | The response's http status code.
[$sel:httpStatus:DescribeJobExecutionResponse'] :: DescribeJobExecutionResponse -> Int

-- | Create a value of <a>DescribeJobExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:execution:DescribeJobExecutionResponse'</a>,
--   <a>describeJobExecutionResponse_execution</a> - Contains data about a
--   job execution.
--   
--   <a>$sel:httpStatus:DescribeJobExecutionResponse'</a>,
--   <a>describeJobExecutionResponse_httpStatus</a> - The response's http
--   status code.
newDescribeJobExecutionResponse :: Int -> DescribeJobExecutionResponse

-- | Contains data about a job execution.
describeJobExecutionResponse_execution :: Lens' DescribeJobExecutionResponse (Maybe JobExecution)

-- | The response's http status code.
describeJobExecutionResponse_httpStatus :: Lens' DescribeJobExecutionResponse Int
instance GHC.Generics.Generic Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecution
instance GHC.Show.Show Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecution
instance GHC.Read.Read Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecution
instance GHC.Classes.Eq Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecution
instance GHC.Generics.Generic Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecutionResponse
instance GHC.Show.Show Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecutionResponse
instance GHC.Read.Read Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecutionResponse
instance GHC.Classes.Eq Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecutionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecution
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecutionResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecution
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecution
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecution
instance Network.AWS.Data.Path.ToPath Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecution
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoTJobsData.DescribeJobExecution.DescribeJobExecution


-- | Updates the status of a job execution.
module Network.AWS.IoTJobsData.UpdateJobExecution

-- | <i>See:</i> <a>newUpdateJobExecution</a> smart constructor.
data UpdateJobExecution
UpdateJobExecution' :: Maybe Bool -> Maybe Integer -> Maybe Bool -> Maybe (HashMap Text Text) -> Maybe Integer -> Maybe Integer -> Text -> Text -> JobExecutionStatus -> UpdateJobExecution

-- | Optional. When set to true, the response contains the job document.
--   The default is false.
[$sel:includeJobDocument:UpdateJobExecution'] :: UpdateJobExecution -> Maybe Bool

-- | Optional. The expected current version of the job execution. Each time
--   you update the job execution, its version is incremented. If the
--   version of the job execution stored in Jobs does not match, the update
--   is rejected with a VersionMismatch error, and an ErrorResponse that
--   contains the current job execution status data is returned. (This
--   makes it unnecessary to perform a separate DescribeJobExecution
--   request in order to obtain the job execution status data.)
[$sel:expectedVersion:UpdateJobExecution'] :: UpdateJobExecution -> Maybe Integer

-- | Optional. When included and set to true, the response contains the
--   JobExecutionState data. The default is false.
[$sel:includeJobExecutionState:UpdateJobExecution'] :: UpdateJobExecution -> Maybe Bool

-- | Optional. A collection of name/value pairs that describe the status of
--   the job execution. If not specified, the statusDetails are unchanged.
[$sel:statusDetails:UpdateJobExecution'] :: UpdateJobExecution -> Maybe (HashMap Text Text)

-- | Specifies the amount of time this device has to finish execution of
--   this job. If the job execution status is not set to a terminal state
--   before this timer expires, or before the timer is reset (by again
--   calling <tt>UpdateJobExecution</tt>, setting the status to
--   <tt>IN_PROGRESS</tt> and specifying a new timeout value in this field)
--   the job execution status will be automatically set to
--   <tt>TIMED_OUT</tt>. Note that setting or resetting this timeout has no
--   effect on that job execution timeout which may have been specified
--   when the job was created (<tt>CreateJob</tt> using field
--   <tt>timeoutConfig</tt>).
[$sel:stepTimeoutInMinutes:UpdateJobExecution'] :: UpdateJobExecution -> Maybe Integer

-- | Optional. A number that identifies a particular job execution on a
--   particular device.
[$sel:executionNumber:UpdateJobExecution'] :: UpdateJobExecution -> Maybe Integer

-- | The unique identifier assigned to this job when it was created.
[$sel:jobId:UpdateJobExecution'] :: UpdateJobExecution -> Text

-- | The name of the thing associated with the device.
[$sel:thingName:UpdateJobExecution'] :: UpdateJobExecution -> Text

-- | The new status for the job execution (IN_PROGRESS, FAILED, SUCCESS, or
--   REJECTED). This must be specified on every update.
[$sel:status:UpdateJobExecution'] :: UpdateJobExecution -> JobExecutionStatus

-- | Create a value of <a>UpdateJobExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeJobDocument:UpdateJobExecution'</a>,
--   <a>updateJobExecution_includeJobDocument</a> - Optional. When set to
--   true, the response contains the job document. The default is false.
--   
--   <a>$sel:expectedVersion:UpdateJobExecution'</a>,
--   <a>updateJobExecution_expectedVersion</a> - Optional. The expected
--   current version of the job execution. Each time you update the job
--   execution, its version is incremented. If the version of the job
--   execution stored in Jobs does not match, the update is rejected with a
--   VersionMismatch error, and an ErrorResponse that contains the current
--   job execution status data is returned. (This makes it unnecessary to
--   perform a separate DescribeJobExecution request in order to obtain the
--   job execution status data.)
--   
--   <a>$sel:includeJobExecutionState:UpdateJobExecution'</a>,
--   <a>updateJobExecution_includeJobExecutionState</a> - Optional. When
--   included and set to true, the response contains the JobExecutionState
--   data. The default is false.
--   
--   <a>$sel:statusDetails:UpdateJobExecution'</a>,
--   <a>updateJobExecution_statusDetails</a> - Optional. A collection of
--   name/value pairs that describe the status of the job execution. If not
--   specified, the statusDetails are unchanged.
--   
--   <a>$sel:stepTimeoutInMinutes:UpdateJobExecution'</a>,
--   <a>updateJobExecution_stepTimeoutInMinutes</a> - Specifies the amount
--   of time this device has to finish execution of this job. If the job
--   execution status is not set to a terminal state before this timer
--   expires, or before the timer is reset (by again calling
--   <tt>UpdateJobExecution</tt>, setting the status to
--   <tt>IN_PROGRESS</tt> and specifying a new timeout value in this field)
--   the job execution status will be automatically set to
--   <tt>TIMED_OUT</tt>. Note that setting or resetting this timeout has no
--   effect on that job execution timeout which may have been specified
--   when the job was created (<tt>CreateJob</tt> using field
--   <tt>timeoutConfig</tt>).
--   
--   <a>$sel:executionNumber:UpdateJobExecution'</a>,
--   <a>updateJobExecution_executionNumber</a> - Optional. A number that
--   identifies a particular job execution on a particular device.
--   
--   <a>$sel:jobId:UpdateJobExecution'</a>, <a>updateJobExecution_jobId</a>
--   - The unique identifier assigned to this job when it was created.
--   
--   <a>$sel:thingName:UpdateJobExecution'</a>,
--   <a>updateJobExecution_thingName</a> - The name of the thing associated
--   with the device.
--   
--   <a>$sel:status:UpdateJobExecution'</a>,
--   <a>updateJobExecution_status</a> - The new status for the job
--   execution (IN_PROGRESS, FAILED, SUCCESS, or REJECTED). This must be
--   specified on every update.
newUpdateJobExecution :: Text -> Text -> JobExecutionStatus -> UpdateJobExecution

-- | Optional. When set to true, the response contains the job document.
--   The default is false.
updateJobExecution_includeJobDocument :: Lens' UpdateJobExecution (Maybe Bool)

-- | Optional. The expected current version of the job execution. Each time
--   you update the job execution, its version is incremented. If the
--   version of the job execution stored in Jobs does not match, the update
--   is rejected with a VersionMismatch error, and an ErrorResponse that
--   contains the current job execution status data is returned. (This
--   makes it unnecessary to perform a separate DescribeJobExecution
--   request in order to obtain the job execution status data.)
updateJobExecution_expectedVersion :: Lens' UpdateJobExecution (Maybe Integer)

-- | Optional. When included and set to true, the response contains the
--   JobExecutionState data. The default is false.
updateJobExecution_includeJobExecutionState :: Lens' UpdateJobExecution (Maybe Bool)

-- | Optional. A collection of name/value pairs that describe the status of
--   the job execution. If not specified, the statusDetails are unchanged.
updateJobExecution_statusDetails :: Lens' UpdateJobExecution (Maybe (HashMap Text Text))

-- | Specifies the amount of time this device has to finish execution of
--   this job. If the job execution status is not set to a terminal state
--   before this timer expires, or before the timer is reset (by again
--   calling <tt>UpdateJobExecution</tt>, setting the status to
--   <tt>IN_PROGRESS</tt> and specifying a new timeout value in this field)
--   the job execution status will be automatically set to
--   <tt>TIMED_OUT</tt>. Note that setting or resetting this timeout has no
--   effect on that job execution timeout which may have been specified
--   when the job was created (<tt>CreateJob</tt> using field
--   <tt>timeoutConfig</tt>).
updateJobExecution_stepTimeoutInMinutes :: Lens' UpdateJobExecution (Maybe Integer)

-- | Optional. A number that identifies a particular job execution on a
--   particular device.
updateJobExecution_executionNumber :: Lens' UpdateJobExecution (Maybe Integer)

-- | The unique identifier assigned to this job when it was created.
updateJobExecution_jobId :: Lens' UpdateJobExecution Text

-- | The name of the thing associated with the device.
updateJobExecution_thingName :: Lens' UpdateJobExecution Text

-- | The new status for the job execution (IN_PROGRESS, FAILED, SUCCESS, or
--   REJECTED). This must be specified on every update.
updateJobExecution_status :: Lens' UpdateJobExecution JobExecutionStatus

-- | <i>See:</i> <a>newUpdateJobExecutionResponse</a> smart constructor.
data UpdateJobExecutionResponse
UpdateJobExecutionResponse' :: Maybe JobExecutionState -> Maybe Text -> Int -> UpdateJobExecutionResponse

-- | A JobExecutionState object.
[$sel:executionState:UpdateJobExecutionResponse'] :: UpdateJobExecutionResponse -> Maybe JobExecutionState

-- | The contents of the Job Documents.
[$sel:jobDocument:UpdateJobExecutionResponse'] :: UpdateJobExecutionResponse -> Maybe Text

-- | The response's http status code.
[$sel:httpStatus:UpdateJobExecutionResponse'] :: UpdateJobExecutionResponse -> Int

-- | Create a value of <a>UpdateJobExecutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionState:UpdateJobExecutionResponse'</a>,
--   <a>updateJobExecutionResponse_executionState</a> - A JobExecutionState
--   object.
--   
--   <a>$sel:jobDocument:UpdateJobExecutionResponse'</a>,
--   <a>updateJobExecutionResponse_jobDocument</a> - The contents of the
--   Job Documents.
--   
--   <a>$sel:httpStatus:UpdateJobExecutionResponse'</a>,
--   <a>updateJobExecutionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateJobExecutionResponse :: Int -> UpdateJobExecutionResponse

-- | A JobExecutionState object.
updateJobExecutionResponse_executionState :: Lens' UpdateJobExecutionResponse (Maybe JobExecutionState)

-- | The contents of the Job Documents.
updateJobExecutionResponse_jobDocument :: Lens' UpdateJobExecutionResponse (Maybe Text)

-- | The response's http status code.
updateJobExecutionResponse_httpStatus :: Lens' UpdateJobExecutionResponse Int
instance GHC.Generics.Generic Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecution
instance GHC.Show.Show Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecution
instance GHC.Read.Read Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecution
instance GHC.Classes.Eq Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecution
instance GHC.Generics.Generic Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecutionResponse
instance GHC.Show.Show Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecutionResponse
instance GHC.Read.Read Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecutionResponse
instance GHC.Classes.Eq Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecutionResponse
instance Network.AWS.Types.AWSRequest Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecution
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecutionResponse
instance Data.Hashable.Class.Hashable Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecution
instance Control.DeepSeq.NFData Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecution
instance Network.AWS.Data.Headers.ToHeaders Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecution
instance Data.Aeson.Types.ToJSON.ToJSON Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecution
instance Network.AWS.Data.Path.ToPath Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecution
instance Network.AWS.Data.Query.ToQuery Network.AWS.IoTJobsData.UpdateJobExecution.UpdateJobExecution


module Network.AWS.IoTJobsData.Lens

-- | The name of the thing that is executing the job.
getPendingJobExecutions_thingName :: Lens' GetPendingJobExecutions Text

-- | A list of JobExecutionSummary objects with status IN_PROGRESS.
getPendingJobExecutionsResponse_inProgressJobs :: Lens' GetPendingJobExecutionsResponse (Maybe [JobExecutionSummary])

-- | A list of JobExecutionSummary objects with status QUEUED.
getPendingJobExecutionsResponse_queuedJobs :: Lens' GetPendingJobExecutionsResponse (Maybe [JobExecutionSummary])

-- | The response's http status code.
getPendingJobExecutionsResponse_httpStatus :: Lens' GetPendingJobExecutionsResponse Int

-- | Optional. When set to true, the response contains the job document.
--   The default is false.
updateJobExecution_includeJobDocument :: Lens' UpdateJobExecution (Maybe Bool)

-- | Optional. The expected current version of the job execution. Each time
--   you update the job execution, its version is incremented. If the
--   version of the job execution stored in Jobs does not match, the update
--   is rejected with a VersionMismatch error, and an ErrorResponse that
--   contains the current job execution status data is returned. (This
--   makes it unnecessary to perform a separate DescribeJobExecution
--   request in order to obtain the job execution status data.)
updateJobExecution_expectedVersion :: Lens' UpdateJobExecution (Maybe Integer)

-- | Optional. When included and set to true, the response contains the
--   JobExecutionState data. The default is false.
updateJobExecution_includeJobExecutionState :: Lens' UpdateJobExecution (Maybe Bool)

-- | Optional. A collection of name/value pairs that describe the status of
--   the job execution. If not specified, the statusDetails are unchanged.
updateJobExecution_statusDetails :: Lens' UpdateJobExecution (Maybe (HashMap Text Text))

-- | Specifies the amount of time this device has to finish execution of
--   this job. If the job execution status is not set to a terminal state
--   before this timer expires, or before the timer is reset (by again
--   calling <tt>UpdateJobExecution</tt>, setting the status to
--   <tt>IN_PROGRESS</tt> and specifying a new timeout value in this field)
--   the job execution status will be automatically set to
--   <tt>TIMED_OUT</tt>. Note that setting or resetting this timeout has no
--   effect on that job execution timeout which may have been specified
--   when the job was created (<tt>CreateJob</tt> using field
--   <tt>timeoutConfig</tt>).
updateJobExecution_stepTimeoutInMinutes :: Lens' UpdateJobExecution (Maybe Integer)

-- | Optional. A number that identifies a particular job execution on a
--   particular device.
updateJobExecution_executionNumber :: Lens' UpdateJobExecution (Maybe Integer)

-- | The unique identifier assigned to this job when it was created.
updateJobExecution_jobId :: Lens' UpdateJobExecution Text

-- | The name of the thing associated with the device.
updateJobExecution_thingName :: Lens' UpdateJobExecution Text

-- | The new status for the job execution (IN_PROGRESS, FAILED, SUCCESS, or
--   REJECTED). This must be specified on every update.
updateJobExecution_status :: Lens' UpdateJobExecution JobExecutionStatus

-- | A JobExecutionState object.
updateJobExecutionResponse_executionState :: Lens' UpdateJobExecutionResponse (Maybe JobExecutionState)

-- | The contents of the Job Documents.
updateJobExecutionResponse_jobDocument :: Lens' UpdateJobExecutionResponse (Maybe Text)

-- | The response's http status code.
updateJobExecutionResponse_httpStatus :: Lens' UpdateJobExecutionResponse Int

-- | Optional. When set to true, the response contains the job document.
--   The default is false.
describeJobExecution_includeJobDocument :: Lens' DescribeJobExecution (Maybe Bool)

-- | Optional. A number that identifies a particular job execution on a
--   particular device. If not specified, the latest job execution is
--   returned.
describeJobExecution_executionNumber :: Lens' DescribeJobExecution (Maybe Integer)

-- | The unique identifier assigned to this job when it was created.
describeJobExecution_jobId :: Lens' DescribeJobExecution Text

-- | The thing name associated with the device the job execution is running
--   on.
describeJobExecution_thingName :: Lens' DescribeJobExecution Text

-- | Contains data about a job execution.
describeJobExecutionResponse_execution :: Lens' DescribeJobExecutionResponse (Maybe JobExecution)

-- | The response's http status code.
describeJobExecutionResponse_httpStatus :: Lens' DescribeJobExecutionResponse Int

-- | A collection of name/value pairs that describe the status of the job
--   execution. If not specified, the statusDetails are unchanged.
startNextPendingJobExecution_statusDetails :: Lens' StartNextPendingJobExecution (Maybe (HashMap Text Text))

-- | Specifies the amount of time this device has to finish execution of
--   this job. If the job execution status is not set to a terminal state
--   before this timer expires, or before the timer is reset (by calling
--   <tt>UpdateJobExecution</tt>, setting the status to
--   <tt>IN_PROGRESS</tt> and specifying a new timeout value in field
--   <tt>stepTimeoutInMinutes</tt>) the job execution status will be
--   automatically set to <tt>TIMED_OUT</tt>. Note that setting this
--   timeout has no effect on that job execution timeout which may have
--   been specified when the job was created (<tt>CreateJob</tt> using
--   field <tt>timeoutConfig</tt>).
startNextPendingJobExecution_stepTimeoutInMinutes :: Lens' StartNextPendingJobExecution (Maybe Integer)

-- | The name of the thing associated with the device.
startNextPendingJobExecution_thingName :: Lens' StartNextPendingJobExecution Text

-- | A JobExecution object.
startNextPendingJobExecutionResponse_execution :: Lens' StartNextPendingJobExecutionResponse (Maybe JobExecution)

-- | The response's http status code.
startNextPendingJobExecutionResponse_httpStatus :: Lens' StartNextPendingJobExecutionResponse Int

-- | The time, in milliseconds since the epoch, when the job execution was
--   started.
jobExecution_startedAt :: Lens' JobExecution (Maybe Integer)

-- | The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
jobExecution_status :: Lens' JobExecution (Maybe JobExecutionStatus)

-- | A collection of name/value pairs that describe the status of the job
--   execution.
jobExecution_statusDetails :: Lens' JobExecution (Maybe (HashMap Text Text))

-- | The name of the thing that is executing the job.
jobExecution_thingName :: Lens' JobExecution (Maybe Text)

-- | The time, in milliseconds since the epoch, when the job execution was
--   enqueued.
jobExecution_queuedAt :: Lens' JobExecution (Maybe Integer)

-- | A number that identifies a particular job execution on a particular
--   device. It can be used later in commands that return or update job
--   execution information.
jobExecution_executionNumber :: Lens' JobExecution (Maybe Integer)

-- | The version of the job execution. Job execution versions are
--   incremented each time they are updated by a device.
jobExecution_versionNumber :: Lens' JobExecution (Maybe Integer)

-- | The content of the job document.
jobExecution_jobDocument :: Lens' JobExecution (Maybe Text)

-- | The estimated number of seconds that remain before the job execution
--   status will be changed to <tt>TIMED_OUT</tt>.
jobExecution_approximateSecondsBeforeTimedOut :: Lens' JobExecution (Maybe Integer)

-- | The unique identifier you assigned to this job when it was created.
jobExecution_jobId :: Lens' JobExecution (Maybe Text)

-- | The time, in milliseconds since the epoch, when the job execution was
--   last updated.
jobExecution_lastUpdatedAt :: Lens' JobExecution (Maybe Integer)

-- | The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
jobExecutionState_status :: Lens' JobExecutionState (Maybe JobExecutionStatus)

-- | A collection of name/value pairs that describe the status of the job
--   execution.
jobExecutionState_statusDetails :: Lens' JobExecutionState (Maybe (HashMap Text Text))

-- | The version of the job execution. Job execution versions are
--   incremented each time they are updated by a device.
jobExecutionState_versionNumber :: Lens' JobExecutionState (Maybe Integer)

-- | The time, in milliseconds since the epoch, when the job execution
--   started.
jobExecutionSummary_startedAt :: Lens' JobExecutionSummary (Maybe Integer)

-- | The time, in milliseconds since the epoch, when the job execution was
--   enqueued.
jobExecutionSummary_queuedAt :: Lens' JobExecutionSummary (Maybe Integer)

-- | A number that identifies a particular job execution on a particular
--   device.
jobExecutionSummary_executionNumber :: Lens' JobExecutionSummary (Maybe Integer)

-- | The version of the job execution. Job execution versions are
--   incremented each time AWS IoT Jobs receives an update from a device.
jobExecutionSummary_versionNumber :: Lens' JobExecutionSummary (Maybe Integer)

-- | The unique identifier you assigned to this job when it was created.
jobExecutionSummary_jobId :: Lens' JobExecutionSummary (Maybe Text)

-- | The time, in milliseconds since the epoch, when the job execution was
--   last updated.
jobExecutionSummary_lastUpdatedAt :: Lens' JobExecutionSummary (Maybe Integer)


module Network.AWS.IoTJobsData.Waiters


-- | Derived from API version <tt>2017-09-29</tt> of the AWS service
--   descriptions, licensed under Apache 2.0.
--   
--   AWS IoT Jobs is a service that allows you to define a set of jobs —
--   remote operations that are sent to and executed on one or more devices
--   connected to AWS IoT. For example, you can define a job that instructs
--   a set of devices to download and install application or firmware
--   updates, reboot, rotate certificates, or perform remote
--   troubleshooting operations.
--   
--   To create a job, you make a job document which is a description of the
--   remote operations to be performed, and you specify a list of targets
--   that should perform the operations. The targets can be individual
--   things, thing groups or both.
--   
--   AWS IoT Jobs sends a message to inform the targets that a job is
--   available. The target starts the execution of the job by downloading
--   the job document, performing the operations it specifies, and
--   reporting its progress to AWS IoT. The Jobs service provides commands
--   to track the progress of a job on a specific target and for all the
--   targets of the job
module Network.AWS.IoTJobsData

-- | API version <tt>2017-09-29</tt> of the Amazon IoT Jobs Data Plane SDK
--   configuration.
defaultService :: Service

-- | The job is in a terminal state.
_TerminalStateException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The certificate is invalid.
_CertificateValidationException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The service is temporarily unavailable.
_ServiceUnavailableException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The rate exceeds the limit.
_ThrottlingException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The contents of the request were invalid. For example, this code is
--   returned when an UpdateJobExecution request contains invalid status
--   details. The message contains details about the error.
_InvalidRequestException :: AsError a => Getting (First ServiceError) a ServiceError

-- | The specified resource does not exist.
_ResourceNotFoundException :: AsError a => Getting (First ServiceError) a ServiceError

-- | An update attempted to change the job execution to a state that is
--   invalid because of the job execution's current state (for example, an
--   attempt to change a request in state SUCCESS to state IN_PROGRESS). In
--   this case, the body of the error message also contains the
--   executionState field.
_InvalidStateTransitionException :: AsError a => Getting (First ServiceError) a ServiceError

-- | <i>See:</i> <a>newGetPendingJobExecutions</a> smart constructor.
data GetPendingJobExecutions
GetPendingJobExecutions' :: Text -> GetPendingJobExecutions

-- | Create a value of <a>GetPendingJobExecutions</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:thingName:GetPendingJobExecutions'</a>,
--   <a>getPendingJobExecutions_thingName</a> - The name of the thing that
--   is executing the job.
newGetPendingJobExecutions :: Text -> GetPendingJobExecutions

-- | <i>See:</i> <a>newGetPendingJobExecutionsResponse</a> smart
--   constructor.
data GetPendingJobExecutionsResponse
GetPendingJobExecutionsResponse' :: Maybe [JobExecutionSummary] -> Maybe [JobExecutionSummary] -> Int -> GetPendingJobExecutionsResponse

-- | Create a value of <a>GetPendingJobExecutionsResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:inProgressJobs:GetPendingJobExecutionsResponse'</a>,
--   <a>getPendingJobExecutionsResponse_inProgressJobs</a> - A list of
--   JobExecutionSummary objects with status IN_PROGRESS.
--   
--   <a>$sel:queuedJobs:GetPendingJobExecutionsResponse'</a>,
--   <a>getPendingJobExecutionsResponse_queuedJobs</a> - A list of
--   JobExecutionSummary objects with status QUEUED.
--   
--   <a>$sel:httpStatus:GetPendingJobExecutionsResponse'</a>,
--   <a>getPendingJobExecutionsResponse_httpStatus</a> - The response's
--   http status code.
newGetPendingJobExecutionsResponse :: Int -> GetPendingJobExecutionsResponse

-- | <i>See:</i> <a>newUpdateJobExecution</a> smart constructor.
data UpdateJobExecution
UpdateJobExecution' :: Maybe Bool -> Maybe Integer -> Maybe Bool -> Maybe (HashMap Text Text) -> Maybe Integer -> Maybe Integer -> Text -> Text -> JobExecutionStatus -> UpdateJobExecution

-- | Create a value of <a>UpdateJobExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeJobDocument:UpdateJobExecution'</a>,
--   <a>updateJobExecution_includeJobDocument</a> - Optional. When set to
--   true, the response contains the job document. The default is false.
--   
--   <a>$sel:expectedVersion:UpdateJobExecution'</a>,
--   <a>updateJobExecution_expectedVersion</a> - Optional. The expected
--   current version of the job execution. Each time you update the job
--   execution, its version is incremented. If the version of the job
--   execution stored in Jobs does not match, the update is rejected with a
--   VersionMismatch error, and an ErrorResponse that contains the current
--   job execution status data is returned. (This makes it unnecessary to
--   perform a separate DescribeJobExecution request in order to obtain the
--   job execution status data.)
--   
--   <a>$sel:includeJobExecutionState:UpdateJobExecution'</a>,
--   <a>updateJobExecution_includeJobExecutionState</a> - Optional. When
--   included and set to true, the response contains the JobExecutionState
--   data. The default is false.
--   
--   <a>$sel:statusDetails:UpdateJobExecution'</a>,
--   <a>updateJobExecution_statusDetails</a> - Optional. A collection of
--   name/value pairs that describe the status of the job execution. If not
--   specified, the statusDetails are unchanged.
--   
--   <a>$sel:stepTimeoutInMinutes:UpdateJobExecution'</a>,
--   <a>updateJobExecution_stepTimeoutInMinutes</a> - Specifies the amount
--   of time this device has to finish execution of this job. If the job
--   execution status is not set to a terminal state before this timer
--   expires, or before the timer is reset (by again calling
--   <tt>UpdateJobExecution</tt>, setting the status to
--   <tt>IN_PROGRESS</tt> and specifying a new timeout value in this field)
--   the job execution status will be automatically set to
--   <tt>TIMED_OUT</tt>. Note that setting or resetting this timeout has no
--   effect on that job execution timeout which may have been specified
--   when the job was created (<tt>CreateJob</tt> using field
--   <tt>timeoutConfig</tt>).
--   
--   <a>$sel:executionNumber:UpdateJobExecution'</a>,
--   <a>updateJobExecution_executionNumber</a> - Optional. A number that
--   identifies a particular job execution on a particular device.
--   
--   <a>$sel:jobId:UpdateJobExecution'</a>, <a>updateJobExecution_jobId</a>
--   - The unique identifier assigned to this job when it was created.
--   
--   <a>$sel:thingName:UpdateJobExecution'</a>,
--   <a>updateJobExecution_thingName</a> - The name of the thing associated
--   with the device.
--   
--   <a>$sel:status:UpdateJobExecution'</a>,
--   <a>updateJobExecution_status</a> - The new status for the job
--   execution (IN_PROGRESS, FAILED, SUCCESS, or REJECTED). This must be
--   specified on every update.
newUpdateJobExecution :: Text -> Text -> JobExecutionStatus -> UpdateJobExecution

-- | <i>See:</i> <a>newUpdateJobExecutionResponse</a> smart constructor.
data UpdateJobExecutionResponse
UpdateJobExecutionResponse' :: Maybe JobExecutionState -> Maybe Text -> Int -> UpdateJobExecutionResponse

-- | Create a value of <a>UpdateJobExecutionResponse</a> with all optional
--   fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:executionState:UpdateJobExecutionResponse'</a>,
--   <a>updateJobExecutionResponse_executionState</a> - A JobExecutionState
--   object.
--   
--   <a>$sel:jobDocument:UpdateJobExecutionResponse'</a>,
--   <a>updateJobExecutionResponse_jobDocument</a> - The contents of the
--   Job Documents.
--   
--   <a>$sel:httpStatus:UpdateJobExecutionResponse'</a>,
--   <a>updateJobExecutionResponse_httpStatus</a> - The response's http
--   status code.
newUpdateJobExecutionResponse :: Int -> UpdateJobExecutionResponse

-- | <i>See:</i> <a>newDescribeJobExecution</a> smart constructor.
data DescribeJobExecution
DescribeJobExecution' :: Maybe Bool -> Maybe Integer -> Text -> Text -> DescribeJobExecution

-- | Create a value of <a>DescribeJobExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:includeJobDocument:DescribeJobExecution'</a>,
--   <a>describeJobExecution_includeJobDocument</a> - Optional. When set to
--   true, the response contains the job document. The default is false.
--   
--   <a>$sel:executionNumber:DescribeJobExecution'</a>,
--   <a>describeJobExecution_executionNumber</a> - Optional. A number that
--   identifies a particular job execution on a particular device. If not
--   specified, the latest job execution is returned.
--   
--   <a>$sel:jobId:DescribeJobExecution'</a>,
--   <a>describeJobExecution_jobId</a> - The unique identifier assigned to
--   this job when it was created.
--   
--   <a>$sel:thingName:DescribeJobExecution'</a>,
--   <a>describeJobExecution_thingName</a> - The thing name associated with
--   the device the job execution is running on.
newDescribeJobExecution :: Text -> Text -> DescribeJobExecution

-- | <i>See:</i> <a>newDescribeJobExecutionResponse</a> smart constructor.
data DescribeJobExecutionResponse
DescribeJobExecutionResponse' :: Maybe JobExecution -> Int -> DescribeJobExecutionResponse

-- | Create a value of <a>DescribeJobExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:execution:DescribeJobExecutionResponse'</a>,
--   <a>describeJobExecutionResponse_execution</a> - Contains data about a
--   job execution.
--   
--   <a>$sel:httpStatus:DescribeJobExecutionResponse'</a>,
--   <a>describeJobExecutionResponse_httpStatus</a> - The response's http
--   status code.
newDescribeJobExecutionResponse :: Int -> DescribeJobExecutionResponse

-- | <i>See:</i> <a>newStartNextPendingJobExecution</a> smart constructor.
data StartNextPendingJobExecution
StartNextPendingJobExecution' :: Maybe (HashMap Text Text) -> Maybe Integer -> Text -> StartNextPendingJobExecution

-- | Create a value of <a>StartNextPendingJobExecution</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:statusDetails:StartNextPendingJobExecution'</a>,
--   <a>startNextPendingJobExecution_statusDetails</a> - A collection of
--   name/value pairs that describe the status of the job execution. If not
--   specified, the statusDetails are unchanged.
--   
--   <a>$sel:stepTimeoutInMinutes:StartNextPendingJobExecution'</a>,
--   <a>startNextPendingJobExecution_stepTimeoutInMinutes</a> - Specifies
--   the amount of time this device has to finish execution of this job. If
--   the job execution status is not set to a terminal state before this
--   timer expires, or before the timer is reset (by calling
--   <tt>UpdateJobExecution</tt>, setting the status to
--   <tt>IN_PROGRESS</tt> and specifying a new timeout value in field
--   <tt>stepTimeoutInMinutes</tt>) the job execution status will be
--   automatically set to <tt>TIMED_OUT</tt>. Note that setting this
--   timeout has no effect on that job execution timeout which may have
--   been specified when the job was created (<tt>CreateJob</tt> using
--   field <tt>timeoutConfig</tt>).
--   
--   <a>$sel:thingName:StartNextPendingJobExecution'</a>,
--   <a>startNextPendingJobExecution_thingName</a> - The name of the thing
--   associated with the device.
newStartNextPendingJobExecution :: Text -> StartNextPendingJobExecution

-- | <i>See:</i> <a>newStartNextPendingJobExecutionResponse</a> smart
--   constructor.
data StartNextPendingJobExecutionResponse
StartNextPendingJobExecutionResponse' :: Maybe JobExecution -> Int -> StartNextPendingJobExecutionResponse

-- | Create a value of <a>StartNextPendingJobExecutionResponse</a> with all
--   optional fields omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:execution:StartNextPendingJobExecutionResponse'</a>,
--   <a>startNextPendingJobExecutionResponse_execution</a> - A JobExecution
--   object.
--   
--   <a>$sel:httpStatus:StartNextPendingJobExecutionResponse'</a>,
--   <a>startNextPendingJobExecutionResponse_httpStatus</a> - The
--   response's http status code.
newStartNextPendingJobExecutionResponse :: Int -> StartNextPendingJobExecutionResponse
newtype JobExecutionStatus
JobExecutionStatus' :: Text -> JobExecutionStatus
[fromJobExecutionStatus] :: JobExecutionStatus -> Text
pattern JobExecutionStatus_CANCELED :: JobExecutionStatus
pattern JobExecutionStatus_FAILED :: JobExecutionStatus
pattern JobExecutionStatus_IN_PROGRESS :: JobExecutionStatus
pattern JobExecutionStatus_QUEUED :: JobExecutionStatus
pattern JobExecutionStatus_REJECTED :: JobExecutionStatus
pattern JobExecutionStatus_REMOVED :: JobExecutionStatus
pattern JobExecutionStatus_SUCCEEDED :: JobExecutionStatus
pattern JobExecutionStatus_TIMED_OUT :: JobExecutionStatus

-- | Contains data about a job execution.
--   
--   <i>See:</i> <a>newJobExecution</a> smart constructor.
data JobExecution
JobExecution' :: Maybe Integer -> Maybe JobExecutionStatus -> Maybe (HashMap Text Text) -> Maybe Text -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Integer -> Maybe Text -> Maybe Integer -> JobExecution

-- | Create a value of <a>JobExecution</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startedAt:JobExecution'</a>, <a>jobExecution_startedAt</a> -
--   The time, in milliseconds since the epoch, when the job execution was
--   started.
--   
--   <a>$sel:status:JobExecution'</a>, <a>jobExecution_status</a> - The
--   status of the job execution. Can be one of: "QUEUED", "IN_PROGRESS",
--   "FAILED", "SUCCESS", "CANCELED", "REJECTED", or "REMOVED".
--   
--   <a>$sel:statusDetails:JobExecution'</a>,
--   <a>jobExecution_statusDetails</a> - A collection of name/value pairs
--   that describe the status of the job execution.
--   
--   <a>$sel:thingName:JobExecution'</a>, <a>jobExecution_thingName</a> -
--   The name of the thing that is executing the job.
--   
--   <a>$sel:queuedAt:JobExecution'</a>, <a>jobExecution_queuedAt</a> - The
--   time, in milliseconds since the epoch, when the job execution was
--   enqueued.
--   
--   <a>$sel:executionNumber:JobExecution'</a>,
--   <a>jobExecution_executionNumber</a> - A number that identifies a
--   particular job execution on a particular device. It can be used later
--   in commands that return or update job execution information.
--   
--   <a>$sel:versionNumber:JobExecution'</a>,
--   <a>jobExecution_versionNumber</a> - The version of the job execution.
--   Job execution versions are incremented each time they are updated by a
--   device.
--   
--   <a>$sel:jobDocument:JobExecution'</a>, <a>jobExecution_jobDocument</a>
--   - The content of the job document.
--   
--   <a>$sel:approximateSecondsBeforeTimedOut:JobExecution'</a>,
--   <a>jobExecution_approximateSecondsBeforeTimedOut</a> - The estimated
--   number of seconds that remain before the job execution status will be
--   changed to <tt>TIMED_OUT</tt>.
--   
--   <a>$sel:jobId:JobExecution'</a>, <a>jobExecution_jobId</a> - The
--   unique identifier you assigned to this job when it was created.
--   
--   <a>$sel:lastUpdatedAt:JobExecution'</a>,
--   <a>jobExecution_lastUpdatedAt</a> - The time, in milliseconds since
--   the epoch, when the job execution was last updated.
newJobExecution :: JobExecution

-- | Contains data about the state of a job execution.
--   
--   <i>See:</i> <a>newJobExecutionState</a> smart constructor.
data JobExecutionState
JobExecutionState' :: Maybe JobExecutionStatus -> Maybe (HashMap Text Text) -> Maybe Integer -> JobExecutionState

-- | Create a value of <a>JobExecutionState</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:status:JobExecutionState'</a>, <a>jobExecutionState_status</a>
--   - The status of the job execution. Can be one of: "QUEUED",
--   "IN_PROGRESS", "FAILED", "SUCCESS", "CANCELED", "REJECTED", or
--   "REMOVED".
--   
--   <a>$sel:statusDetails:JobExecutionState'</a>,
--   <a>jobExecutionState_statusDetails</a> - A collection of name/value
--   pairs that describe the status of the job execution.
--   
--   <a>$sel:versionNumber:JobExecutionState'</a>,
--   <a>jobExecutionState_versionNumber</a> - The version of the job
--   execution. Job execution versions are incremented each time they are
--   updated by a device.
newJobExecutionState :: JobExecutionState

-- | Contains a subset of information about a job execution.
--   
--   <i>See:</i> <a>newJobExecutionSummary</a> smart constructor.
data JobExecutionSummary
JobExecutionSummary' :: Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Integer -> Maybe Text -> Maybe Integer -> JobExecutionSummary

-- | Create a value of <a>JobExecutionSummary</a> with all optional fields
--   omitted.
--   
--   Use <a>generic-lens</a> or <a>optics</a> to modify other optional
--   fields.
--   
--   The following record fields are available, with the corresponding
--   lenses provided for backwards compatibility:
--   
--   <a>$sel:startedAt:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_startedAt</a> - The time, in milliseconds since
--   the epoch, when the job execution started.
--   
--   <a>$sel:queuedAt:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_queuedAt</a> - The time, in milliseconds since
--   the epoch, when the job execution was enqueued.
--   
--   <a>$sel:executionNumber:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_executionNumber</a> - A number that identifies
--   a particular job execution on a particular device.
--   
--   <a>$sel:versionNumber:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_versionNumber</a> - The version of the job
--   execution. Job execution versions are incremented each time AWS IoT
--   Jobs receives an update from a device.
--   
--   <a>$sel:jobId:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_jobId</a> - The unique identifier you assigned
--   to this job when it was created.
--   
--   <a>$sel:lastUpdatedAt:JobExecutionSummary'</a>,
--   <a>jobExecutionSummary_lastUpdatedAt</a> - The time, in milliseconds
--   since the epoch, when the job execution was last updated.
newJobExecutionSummary :: JobExecutionSummary
